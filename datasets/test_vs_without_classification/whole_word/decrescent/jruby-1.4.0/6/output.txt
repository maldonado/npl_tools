// ?R  | boolean | True if file is readable by the real uid/gid of the caller // FIXME: Need to implement an readable_real_p in FileTest	TEST	0.9999958262478004	WITHOUT_CLASSIFICATION	4.1737521996883605E-6	TEST
// TODO make an assert here	TEST	0.9345757125679477	WITHOUT_CLASSIFICATION	0.06542428743205228	TEST
// TODO add test methods here. The name must begin with 'test'. For example:	TEST	0.9320799952905248	TEST	0.06792000470947519	WITHOUT_CLASSIFICATION
// TODO: Make into an assert once I get things like blockbodynodes to be implicit nil	TEST	0.9986551778204703	WITHOUT_CLASSIFICATION	0.0013448221795297742	TEST
// if the method is extending something, then we have // to test if the handler is initialized...	TEST	0.9998101000384555	WITHOUT_CLASSIFICATION	1.8989996154452994E-4	TEST
// ?W  | boolean | True if file1 exists and is writable by the real uid/gid // FIXME: Need to implement an writable_real_p in FileTest	TEST	0.9999952059366065	WITHOUT_CLASSIFICATION	4.794063393507224E-6	TEST
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999268759565614	WITHOUT_CLASSIFICATION	7.312404343858364E-5	TEST
// line 335	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999951340734943	WITHOUT_CLASSIFICATION	4.865926505739424E-6	TEST
// line 362	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
// line 391	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
/* ^D */	WITHOUT_CLASSIFICATION	0.9998443336975474	WITHOUT_CLASSIFICATION	1.5566630245257587E-4	TEST
/* ^Z */	WITHOUT_CLASSIFICATION	0.9998444907889621	WITHOUT_CLASSIFICATION	1.555092110378614E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9999241154236216	WITHOUT_CLASSIFICATION	7.588457637843219E-5	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9999241154236216	WITHOUT_CLASSIFICATION	7.588457637843219E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999415813125997	WITHOUT_CLASSIFICATION	5.841868740042875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999415813125997	WITHOUT_CLASSIFICATION	5.841868740042875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999415813125997	WITHOUT_CLASSIFICATION	5.841868740042875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999415813125997	WITHOUT_CLASSIFICATION	5.841868740042875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999415813125997	WITHOUT_CLASSIFICATION	5.841868740042875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999415813125997	WITHOUT_CLASSIFICATION	5.841868740042875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999415813125997	WITHOUT_CLASSIFICATION	5.841868740042875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999415813125997	WITHOUT_CLASSIFICATION	5.841868740042875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999415813125997	WITHOUT_CLASSIFICATION	5.841868740042875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999415813125997	WITHOUT_CLASSIFICATION	5.841868740042875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999415813125997	WITHOUT_CLASSIFICATION	5.841868740042875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999415813125997	WITHOUT_CLASSIFICATION	5.841868740042875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999415813125997	WITHOUT_CLASSIFICATION	5.841868740042875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999415813125997	WITHOUT_CLASSIFICATION	5.841868740042875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999415813125997	WITHOUT_CLASSIFICATION	5.841868740042875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999415813125997	WITHOUT_CLASSIFICATION	5.841868740042875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999415813125997	WITHOUT_CLASSIFICATION	5.841868740042875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999415813125997	WITHOUT_CLASSIFICATION	5.841868740042875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999415813125997	WITHOUT_CLASSIFICATION	5.841868740042875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999415813125997	WITHOUT_CLASSIFICATION	5.841868740042875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999415813125997	WITHOUT_CLASSIFICATION	5.841868740042875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999415813125997	WITHOUT_CLASSIFICATION	5.841868740042875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999415813125997	WITHOUT_CLASSIFICATION	5.841868740042875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999415813125997	WITHOUT_CLASSIFICATION	5.841868740042875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999415813125997	WITHOUT_CLASSIFICATION	5.841868740042875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999415813125997	WITHOUT_CLASSIFICATION	5.841868740042875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999415813125997	WITHOUT_CLASSIFICATION	5.841868740042875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999415813125997	WITHOUT_CLASSIFICATION	5.841868740042875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999415813125997	WITHOUT_CLASSIFICATION	5.841868740042875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999415813125997	WITHOUT_CLASSIFICATION	5.841868740042875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999415813125997	WITHOUT_CLASSIFICATION	5.841868740042875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999415813125997	WITHOUT_CLASSIFICATION	5.841868740042875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999415813125997	WITHOUT_CLASSIFICATION	5.841868740042875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999415813125997	WITHOUT_CLASSIFICATION	5.841868740042875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999415813125997	WITHOUT_CLASSIFICATION	5.841868740042875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999415813125997	WITHOUT_CLASSIFICATION	5.841868740042875E-5	TEST
// return result	WITHOUT_CLASSIFICATION	0.9999977147034326	WITHOUT_CLASSIFICATION	2.2852965673450273E-6	TEST
// name	WITHOUT_CLASSIFICATION	0.9998365574108498	WITHOUT_CLASSIFICATION	1.6344258915030935E-4	TEST
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999838342253886	WITHOUT_CLASSIFICATION	1.6165774611392904E-5	TEST
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999941238562704	WITHOUT_CLASSIFICATION	5.876143729574815E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999934837677757	WITHOUT_CLASSIFICATION	6.516232224256118E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999934837677757	WITHOUT_CLASSIFICATION	6.516232224256118E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999934837677757	WITHOUT_CLASSIFICATION	6.516232224256118E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999934837677757	WITHOUT_CLASSIFICATION	6.516232224256118E-6	TEST
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999938594454747	WITHOUT_CLASSIFICATION	6.1405545252215595E-6	TEST
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.999961844386738	WITHOUT_CLASSIFICATION	3.815561326209672E-5	TEST
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999861799730927	WITHOUT_CLASSIFICATION	1.3820026907234199E-5	TEST
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999720279935457	WITHOUT_CLASSIFICATION	2.797200645434325E-5	TEST
// Version information:	WITHOUT_CLASSIFICATION	0.9999864371145575	WITHOUT_CLASSIFICATION	1.3562885442529234E-5	TEST
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999984431263851	WITHOUT_CLASSIFICATION	1.5568736149530009E-6	TEST
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999920342546257	WITHOUT_CLASSIFICATION	7.96574537421975E-6	TEST
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.999997829208133	WITHOUT_CLASSIFICATION	2.170791866940307E-6	TEST
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999998282013308	WITHOUT_CLASSIFICATION	1.717986691435882E-7	TEST
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9976506042081194	WITHOUT_CLASSIFICATION	0.002349395791880642	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999868679603071	WITHOUT_CLASSIFICATION	1.3132039692904817E-5	TEST
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999924142462719	WITHOUT_CLASSIFICATION	7.5857537281551995E-6	TEST
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9998048975528728	WITHOUT_CLASSIFICATION	1.951024471271556E-4	TEST
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999989248204249	WITHOUT_CLASSIFICATION	1.0751795751266865E-6	TEST
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999750454201003	WITHOUT_CLASSIFICATION	2.4954579899698196E-5	TEST
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999763994062478	WITHOUT_CLASSIFICATION	2.3600593752258983E-5	TEST
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9999996770295526	WITHOUT_CLASSIFICATION	3.229704473586145E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999934837677757	WITHOUT_CLASSIFICATION	6.516232224256118E-6	TEST
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999702100114571	WITHOUT_CLASSIFICATION	2.9789988542814784E-5	TEST
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999456486138124	WITHOUT_CLASSIFICATION	5.435138618756129E-5	TEST
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999969055988326	WITHOUT_CLASSIFICATION	3.094401167404172E-5	TEST
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9999804409077551	WITHOUT_CLASSIFICATION	1.955909224491124E-5	TEST
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.999927487822617	WITHOUT_CLASSIFICATION	7.251217738301035E-5	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.9999965039803174	WITHOUT_CLASSIFICATION	3.4960196825917475E-6	TEST
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999896726039424	WITHOUT_CLASSIFICATION	1.0327396057553262E-5	TEST
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999249986958014	WITHOUT_CLASSIFICATION	7.500130419861459E-5	TEST
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999856917685117	WITHOUT_CLASSIFICATION	1.4308231488165656E-5	TEST
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999804171662293	WITHOUT_CLASSIFICATION	1.9582833770711676E-5	TEST
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9992731365884167	WITHOUT_CLASSIFICATION	7.268634115832215E-4	TEST
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999437525497572	WITHOUT_CLASSIFICATION	5.6247450242709644E-5	TEST
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.999591223760613	WITHOUT_CLASSIFICATION	4.087762393869918E-4	TEST
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999868713701013	WITHOUT_CLASSIFICATION	1.3128629898657926E-5	TEST
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999853365892087	WITHOUT_CLASSIFICATION	1.4663410791178477E-5	TEST
// RubySignal	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999692346704746	WITHOUT_CLASSIFICATION	3.076532952532864E-5	TEST
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9904622147223209	WITHOUT_CLASSIFICATION	0.0095377852776792	TEST
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999923965903484	WITHOUT_CLASSIFICATION	7.603409651469175E-6	TEST
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999975844137732	WITHOUT_CLASSIFICATION	2.415586226933976E-6	TEST
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999863500219301	WITHOUT_CLASSIFICATION	1.3649978069924311E-5	TEST
//io.finish();	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9998802549303067	WITHOUT_CLASSIFICATION	1.1974506969316289E-4	TEST
// hmm...	WITHOUT_CLASSIFICATION	0.9999345638863254	WITHOUT_CLASSIFICATION	6.543611367458778E-5	TEST
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9998880888256721	WITHOUT_CLASSIFICATION	1.1191117432785874E-4	TEST
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999825659677475	WITHOUT_CLASSIFICATION	1.7434032252479854E-5	TEST
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999907244202447	WITHOUT_CLASSIFICATION	9.275579755239855E-6	TEST
// float number of seconds	WITHOUT_CLASSIFICATION	0.999991936872456	WITHOUT_CLASSIFICATION	8.063127544006127E-6	TEST
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.999984313681528	WITHOUT_CLASSIFICATION	1.5686318472021065E-5	TEST
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999672265762446	WITHOUT_CLASSIFICATION	3.277342375541955E-5	TEST
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999850984968794	WITHOUT_CLASSIFICATION	1.4901503120632184E-5	TEST
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999273029731198	WITHOUT_CLASSIFICATION	7.269702688019746E-5	TEST
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.999997485065367	WITHOUT_CLASSIFICATION	2.5149346329766338E-6	TEST
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.999993441075582	WITHOUT_CLASSIFICATION	6.558924418039662E-6	TEST
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999773850881296	WITHOUT_CLASSIFICATION	2.261491187032279E-5	TEST
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999991722847471	WITHOUT_CLASSIFICATION	8.277152530103142E-7	TEST
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.999783512574887	WITHOUT_CLASSIFICATION	2.16487425112985E-4	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999907068824723	WITHOUT_CLASSIFICATION	9.29311752777286E-6	TEST
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999994384019856	WITHOUT_CLASSIFICATION	5.615980144235664E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999911119515215	WITHOUT_CLASSIFICATION	8.888048478604835E-6	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999915274313765	WITHOUT_CLASSIFICATION	8.472568623401702E-6	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999712589846467	WITHOUT_CLASSIFICATION	2.8741015353278217E-5	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999712589846467	WITHOUT_CLASSIFICATION	2.8741015353278217E-5	TEST
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9999583847271691	WITHOUT_CLASSIFICATION	4.161527283091705E-5	TEST
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999960043734343	WITHOUT_CLASSIFICATION	3.995626565749922E-6	TEST
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999834640928684	WITHOUT_CLASSIFICATION	1.653590713162306E-5	TEST
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999938290776743	WITHOUT_CLASSIFICATION	6.170922325751046E-6	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.999992677923485	WITHOUT_CLASSIFICATION	7.32207651498167E-6	TEST
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9998453204936999	WITHOUT_CLASSIFICATION	1.5467950630009878E-4	TEST
// ???	WITHOUT_CLASSIFICATION	0.999939096857706	WITHOUT_CLASSIFICATION	6.090314229406163E-5	TEST
// PID	WITHOUT_CLASSIFICATION	0.9999345638863254	WITHOUT_CLASSIFICATION	6.543611367458778E-5	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999911119515215	WITHOUT_CLASSIFICATION	8.888048478604835E-6	TEST
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999981586729544	WITHOUT_CLASSIFICATION	1.8413270456059492E-6	TEST
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.999949882605618	WITHOUT_CLASSIFICATION	5.01173943820739E-5	TEST
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999997158029011	WITHOUT_CLASSIFICATION	2.8419709885407806E-7	TEST
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999990153185041	WITHOUT_CLASSIFICATION	9.846814959613142E-7	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999920914239505	WITHOUT_CLASSIFICATION	7.90857604949078E-6	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999920914239505	WITHOUT_CLASSIFICATION	7.90857604949078E-6	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999920914239505	WITHOUT_CLASSIFICATION	7.90857604949078E-6	TEST
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999991708748445	WITHOUT_CLASSIFICATION	8.291251555039873E-7	TEST
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999977525123761	WITHOUT_CLASSIFICATION	2.247487623850993E-6	TEST
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999951823113793	WITHOUT_CLASSIFICATION	4.8176886207378126E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999858012683024	WITHOUT_CLASSIFICATION	1.419873169762464E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999858012683024	WITHOUT_CLASSIFICATION	1.419873169762464E-5	TEST
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9995408435250456	WITHOUT_CLASSIFICATION	4.5915647495436073E-4	TEST
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999975704418884	WITHOUT_CLASSIFICATION	2.429558111612656E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999858012683024	WITHOUT_CLASSIFICATION	1.419873169762464E-5	TEST
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999933993815158	WITHOUT_CLASSIFICATION	6.6006184842279074E-6	TEST
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999259882588398	WITHOUT_CLASSIFICATION	7.401174116010481E-5	TEST
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.999990125296579	WITHOUT_CLASSIFICATION	9.874703420958075E-6	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.999996792459363	WITHOUT_CLASSIFICATION	3.207540636939491E-6	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999615928747142	WITHOUT_CLASSIFICATION	3.840712528579193E-5	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999854761407131	WITHOUT_CLASSIFICATION	1.4523859286859249E-5	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999854761407131	WITHOUT_CLASSIFICATION	1.4523859286859249E-5	TEST
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999771157333586	WITHOUT_CLASSIFICATION	2.28842666414781E-5	TEST
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.999992776720361	WITHOUT_CLASSIFICATION	7.223279639005312E-6	TEST
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999863595762607	WITHOUT_CLASSIFICATION	1.3640423739241659E-5	TEST
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999843207620048	WITHOUT_CLASSIFICATION	1.5679237995166835E-5	TEST
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999618968795988	WITHOUT_CLASSIFICATION	3.810312040113513E-5	TEST
// extras flag	WITHOUT_CLASSIFICATION	0.9999942150391756	WITHOUT_CLASSIFICATION	5.78496082439928E-6	TEST
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// ...nothing	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// utility method	WITHOUT_CLASSIFICATION	0.999998131370824	WITHOUT_CLASSIFICATION	1.8686291759359583E-6	TEST
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999926763073825	WITHOUT_CLASSIFICATION	7.323692617587493E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999911119515215	WITHOUT_CLASSIFICATION	8.888048478604835E-6	TEST
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999548038158861	WITHOUT_CLASSIFICATION	4.519618411394413E-5	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.999966568106155	WITHOUT_CLASSIFICATION	3.343189384491926E-5	TEST
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9999740177622641	WITHOUT_CLASSIFICATION	2.59822377358023E-5	TEST
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999543974250567	WITHOUT_CLASSIFICATION	4.560257494336092E-5	TEST
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999814081093858	WITHOUT_CLASSIFICATION	1.8591890614139676E-5	TEST
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.999987829098019	WITHOUT_CLASSIFICATION	1.2170901981105954E-5	TEST
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999706541150333	WITHOUT_CLASSIFICATION	2.934588496666871E-5	TEST
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999848729753699	WITHOUT_CLASSIFICATION	1.5127024630145492E-5	TEST
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9999336943923977	WITHOUT_CLASSIFICATION	6.630560760237374E-5	TEST
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.999846745670183	WITHOUT_CLASSIFICATION	1.532543298170244E-4	TEST
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999863128224916	WITHOUT_CLASSIFICATION	1.368717750826835E-5	TEST
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999960787406803	WITHOUT_CLASSIFICATION	3.921259319713195E-6	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999963482542056	WITHOUT_CLASSIFICATION	3.6517457944494594E-6	TEST
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9998335765797852	WITHOUT_CLASSIFICATION	1.6642342021464584E-4	TEST
// recheck condition	WITHOUT_CLASSIFICATION	0.9999938449578809	WITHOUT_CLASSIFICATION	6.1550421191225855E-6	TEST
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999878233855954	WITHOUT_CLASSIFICATION	1.2176614404624642E-5	TEST
// Construct key services	WITHOUT_CLASSIFICATION	0.9999653324897315	WITHOUT_CLASSIFICATION	3.466751026839847E-5	TEST
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.999997510355089	WITHOUT_CLASSIFICATION	2.489644910924082E-6	TEST
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999971982063747	WITHOUT_CLASSIFICATION	2.8017936254033157E-6	TEST
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999936339520098	WITHOUT_CLASSIFICATION	6.366047990286184E-6	TEST
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999992112824987	WITHOUT_CLASSIFICATION	7.887175014189876E-7	TEST
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.99999387727254	WITHOUT_CLASSIFICATION	6.122727459925373E-6	TEST
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999296762807067	WITHOUT_CLASSIFICATION	7.032371929317374E-5	TEST
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999946734156115	WITHOUT_CLASSIFICATION	5.326584388451478E-6	TEST
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999804221237742	WITHOUT_CLASSIFICATION	1.957787622575587E-5	TEST
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999835301042049	WITHOUT_CLASSIFICATION	1.6469895795123515E-5	TEST
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999720596779486	WITHOUT_CLASSIFICATION	2.7940322051401237E-5	TEST
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999939981499907	WITHOUT_CLASSIFICATION	6.0018500093005395E-6	TEST
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999946370266045	WITHOUT_CLASSIFICATION	5.362973395414027E-6	TEST
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999963062600249	WITHOUT_CLASSIFICATION	3.6937399751436303E-6	TEST
// determine spacing	WITHOUT_CLASSIFICATION	0.9999940418387601	WITHOUT_CLASSIFICATION	5.958161239958775E-6	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998454290853288	WITHOUT_CLASSIFICATION	1.5457091467119816E-4	TEST
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999616699391446	WITHOUT_CLASSIFICATION	3.833006085539358E-5	TEST
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.999896340625487	WITHOUT_CLASSIFICATION	1.0365937451297942E-4	TEST
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9998300519893215	WITHOUT_CLASSIFICATION	1.6994801067844314E-4	TEST
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999192843009731	WITHOUT_CLASSIFICATION	8.071569902689632E-5	TEST
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9990278338629088	WITHOUT_CLASSIFICATION	9.721661370911388E-4	TEST
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.999982572731894	WITHOUT_CLASSIFICATION	1.7427268106010928E-5	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999833237886476	WITHOUT_CLASSIFICATION	1.667621135242127E-5	TEST
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999872249810603	WITHOUT_CLASSIFICATION	1.2775018939658788E-5	TEST
// Default objects	WITHOUT_CLASSIFICATION	0.9999939583237388	WITHOUT_CLASSIFICATION	6.041676261174067E-6	TEST
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.999986846014783	WITHOUT_CLASSIFICATION	1.3153985216856708E-5	TEST
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999035487824011	WITHOUT_CLASSIFICATION	9.645121759899064E-5	TEST
// Java support	WITHOUT_CLASSIFICATION	0.9999960322179633	WITHOUT_CLASSIFICATION	3.96778203661317E-6	TEST
// Parser stats	WITHOUT_CLASSIFICATION	0.999993454754323	WITHOUT_CLASSIFICATION	6.5452456769801684E-6	TEST
// Compilation	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999788313042778	WITHOUT_CLASSIFICATION	2.116869572231649E-5	TEST
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999767017177399	WITHOUT_CLASSIFICATION	2.3298282260156308E-5	TEST
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999701240276939	WITHOUT_CLASSIFICATION	2.9875972306103186E-5	TEST
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999733495698719	WITHOUT_CLASSIFICATION	2.665043012806007E-5	TEST
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999798406307211	WITHOUT_CLASSIFICATION	2.015936927892934E-5	TEST
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999829160514838	WITHOUT_CLASSIFICATION	1.7083948516128114E-5	TEST
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999692029222038	WITHOUT_CLASSIFICATION	3.0797077796171655E-5	TEST
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.999879737058322	WITHOUT_CLASSIFICATION	1.2026294167791152E-4	TEST
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999881934062197	WITHOUT_CLASSIFICATION	1.1806593780308798E-5	TEST
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999976604575214	WITHOUT_CLASSIFICATION	2.339542478678235E-6	TEST
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999978775951256	WITHOUT_CLASSIFICATION	2.122404874393641E-6	TEST
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// default options	WITHOUT_CLASSIFICATION	0.9999973769734741	WITHOUT_CLASSIFICATION	2.6230265259032155E-6	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999345638863254	WITHOUT_CLASSIFICATION	6.543611367458778E-5	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999345638863254	WITHOUT_CLASSIFICATION	6.543611367458778E-5	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9999397174319973	WITHOUT_CLASSIFICATION	6.028256800272598E-5	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9999397174319973	WITHOUT_CLASSIFICATION	6.028256800272598E-5	TEST
// long name option	WITHOUT_CLASSIFICATION	0.9999639589774377	WITHOUT_CLASSIFICATION	3.604102256228535E-5	TEST
// conversion	WITHOUT_CLASSIFICATION	0.999993502589557	WITHOUT_CLASSIFICATION	6.4974104429776E-6	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999906866165926	WITHOUT_CLASSIFICATION	9.313383407292157E-6	TEST
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9997283392075093	WITHOUT_CLASSIFICATION	2.7166079249075836E-4	TEST
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999740952749763	WITHOUT_CLASSIFICATION	2.5904725023692455E-5	TEST
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9998376903917439	WITHOUT_CLASSIFICATION	1.6230960825614773E-4	TEST
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999848729753699	WITHOUT_CLASSIFICATION	1.5127024630145492E-5	TEST
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999848729753699	WITHOUT_CLASSIFICATION	1.5127024630145492E-5	TEST
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999848729753699	WITHOUT_CLASSIFICATION	1.5127024630145492E-5	TEST
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999699658656959	WITHOUT_CLASSIFICATION	3.0034134304127038E-5	TEST
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999982344263629	WITHOUT_CLASSIFICATION	1.7655736370491949E-6	TEST
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999843875830868	WITHOUT_CLASSIFICATION	1.5612416913172648E-5	TEST
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.999978427091943	WITHOUT_CLASSIFICATION	2.157290805699736E-5	TEST
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999805815874654	WITHOUT_CLASSIFICATION	1.9418412534583486E-5	TEST
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999843875830868	WITHOUT_CLASSIFICATION	1.5612416913172648E-5	TEST
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999966942151838	WITHOUT_CLASSIFICATION	3.305784816199191E-6	TEST
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999848729753699	WITHOUT_CLASSIFICATION	1.5127024630145492E-5	TEST
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999920394928358	WITHOUT_CLASSIFICATION	7.96050716427431E-6	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999516050582201	WITHOUT_CLASSIFICATION	4.8394941780008374E-5	TEST
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999756578931589	WITHOUT_CLASSIFICATION	2.4342106841110495E-5	TEST
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999848729753699	WITHOUT_CLASSIFICATION	1.5127024630145492E-5	TEST
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999966048536517	WITHOUT_CLASSIFICATION	3.395146348331801E-6	TEST
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999203461213746	WITHOUT_CLASSIFICATION	7.965387862535148E-5	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9998988863095976	WITHOUT_CLASSIFICATION	1.0111369040237514E-4	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999974997955735	WITHOUT_CLASSIFICATION	2.500204426534942E-6	TEST
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999879689685621	WITHOUT_CLASSIFICATION	1.2031031437820343E-5	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999964343731801	WITHOUT_CLASSIFICATION	3.5656268198928043E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999964343731801	WITHOUT_CLASSIFICATION	3.5656268198928043E-6	TEST
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999787946913463	WITHOUT_CLASSIFICATION	2.1205308653671934E-5	TEST
// string given	WITHOUT_CLASSIFICATION	0.9999895411984457	WITHOUT_CLASSIFICATION	1.0458801554265558E-5	TEST
// hash given	WITHOUT_CLASSIFICATION	0.9999963730895219	WITHOUT_CLASSIFICATION	3.6269104781006157E-6	TEST
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999993738729291	WITHOUT_CLASSIFICATION	6.261270708098776E-7	TEST
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.999828069206934	WITHOUT_CLASSIFICATION	1.7193079306596575E-4	TEST
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999843875830868	WITHOUT_CLASSIFICATION	1.5612416913172648E-5	TEST
// nothing	WITHOUT_CLASSIFICATION	0.9999302101862533	WITHOUT_CLASSIFICATION	6.97898137467379E-5	TEST
// nothing	WITHOUT_CLASSIFICATION	0.9999302101862533	WITHOUT_CLASSIFICATION	6.97898137467379E-5	TEST
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999843875830868	WITHOUT_CLASSIFICATION	1.5612416913172648E-5	TEST
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9942149623834	WITHOUT_CLASSIFICATION	0.005785037616600099	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999963282059443	WITHOUT_CLASSIFICATION	3.6717940556879744E-6	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999963282059443	WITHOUT_CLASSIFICATION	3.6717940556879744E-6	TEST
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999908122666652	WITHOUT_CLASSIFICATION	9.187733334876324E-6	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9997947720783059	WITHOUT_CLASSIFICATION	2.052279216941238E-4	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9997947720783059	WITHOUT_CLASSIFICATION	2.052279216941238E-4	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999943127203546	WITHOUT_CLASSIFICATION	5.687279645442229E-6	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999943127203546	WITHOUT_CLASSIFICATION	5.687279645442229E-6	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999345638863254	WITHOUT_CLASSIFICATION	6.543611367458778E-5	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999345638863254	WITHOUT_CLASSIFICATION	6.543611367458778E-5	TEST
// QTRUE	WITHOUT_CLASSIFICATION	0.9999345638863254	WITHOUT_CLASSIFICATION	6.543611367458778E-5	TEST
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999703892436768	WITHOUT_CLASSIFICATION	2.9610756323279768E-5	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999939819603941	WITHOUT_CLASSIFICATION	6.018039605880605E-6	TEST
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999990975478428	WITHOUT_CLASSIFICATION	9.02452157145541E-7	TEST
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999953287209854	WITHOUT_CLASSIFICATION	4.6712790146308125E-6	TEST
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.999993771291815	WITHOUT_CLASSIFICATION	6.228708184987274E-6	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.99999286090873	WITHOUT_CLASSIFICATION	7.139091270037172E-6	TEST
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999987207757416	WITHOUT_CLASSIFICATION	1.2792242584404214E-6	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.99999286090873	WITHOUT_CLASSIFICATION	7.139091270037172E-6	TEST
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9741914201264642	WITHOUT_CLASSIFICATION	0.025808579873535836	TEST
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999915207645398	WITHOUT_CLASSIFICATION	8.479235460159914E-6	TEST
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999693261332937	WITHOUT_CLASSIFICATION	3.067386670635587E-5	TEST
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999878281994072	WITHOUT_CLASSIFICATION	1.2171800592870253E-5	TEST
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999815692900111	WITHOUT_CLASSIFICATION	1.8430709988842354E-5	TEST
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9997548800746842	WITHOUT_CLASSIFICATION	2.451199253158764E-4	TEST
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9998822355853849	WITHOUT_CLASSIFICATION	1.1776441461505761E-4	TEST
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.999984900302166	WITHOUT_CLASSIFICATION	1.5099697833895358E-5	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999962074177173	WITHOUT_CLASSIFICATION	3.7925822827206813E-6	TEST
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999900001407185	WITHOUT_CLASSIFICATION	9.999859281402155E-6	TEST
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999848729753699	WITHOUT_CLASSIFICATION	1.5127024630145492E-5	TEST
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9998263878593732	WITHOUT_CLASSIFICATION	1.736121406267753E-4	TEST
// file not given	WITHOUT_CLASSIFICATION	0.9999963959730034	WITHOUT_CLASSIFICATION	3.604026996592793E-6	TEST
// string to eval	WITHOUT_CLASSIFICATION	0.9999946067090913	WITHOUT_CLASSIFICATION	5.393290908666602E-6	TEST
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999921450695307	WITHOUT_CLASSIFICATION	7.854930469352693E-6	TEST
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999892680990293	WITHOUT_CLASSIFICATION	1.0731900970698233E-5	TEST
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999726208207362	WITHOUT_CLASSIFICATION	2.7379179263776546E-5	TEST
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.99999104304286	WITHOUT_CLASSIFICATION	8.956957139994517E-6	TEST
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9998999097712467	WITHOUT_CLASSIFICATION	1.0009022875327046E-4	TEST
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.99967510167824	WITHOUT_CLASSIFICATION	3.248983217599072E-4	TEST
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9996517236871792	WITHOUT_CLASSIFICATION	3.482763128207724E-4	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999833725624815	WITHOUT_CLASSIFICATION	1.662743751845294E-5	TEST
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999874318797158	WITHOUT_CLASSIFICATION	1.2568120284118466E-5	TEST
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999643293244468	WITHOUT_CLASSIFICATION	3.567067555316325E-5	TEST
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999406601760632	WITHOUT_CLASSIFICATION	5.9339823936872284E-5	TEST
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999447662032865	WITHOUT_CLASSIFICATION	5.523379671357857E-5	TEST
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999519973229916	WITHOUT_CLASSIFICATION	4.800267700844995E-5	TEST
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999189368065347	WITHOUT_CLASSIFICATION	8.106319346529319E-5	TEST
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999937867199628	WITHOUT_CLASSIFICATION	6.213280037259716E-6	TEST
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.99997162667564	WITHOUT_CLASSIFICATION	2.8373324360109655E-5	TEST
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999934013769092	WITHOUT_CLASSIFICATION	6.598623090917193E-6	TEST
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999994558541204	WITHOUT_CLASSIFICATION	5.441458795642933E-7	TEST
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999982578084796	WITHOUT_CLASSIFICATION	1.7421915203652027E-6	TEST
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999255476944647	WITHOUT_CLASSIFICATION	7.445230553521248E-5	TEST
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.999986493850612	WITHOUT_CLASSIFICATION	1.3506149387983067E-5	TEST
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999889578034915	WITHOUT_CLASSIFICATION	1.10421965085867E-5	TEST
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999853260767056	WITHOUT_CLASSIFICATION	1.467392329441846E-5	TEST
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999736798588803	WITHOUT_CLASSIFICATION	2.6320141119709673E-5	TEST
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999959094988476	WITHOUT_CLASSIFICATION	4.090501152361151E-6	TEST
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999853357259326	WITHOUT_CLASSIFICATION	1.4664274067381457E-5	TEST
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999932485850044	WITHOUT_CLASSIFICATION	6.751414995696612E-6	TEST
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999865683699226	WITHOUT_CLASSIFICATION	1.3431630077500615E-5	TEST
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999890187282497	WITHOUT_CLASSIFICATION	1.0981271750336576E-5	TEST
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999955264800654	WITHOUT_CLASSIFICATION	4.4735199346820124E-6	TEST
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999990612910611	WITHOUT_CLASSIFICATION	9.387089389699095E-7	TEST
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999852251679717	WITHOUT_CLASSIFICATION	1.477483202818352E-5	TEST
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999140707538323	WITHOUT_CLASSIFICATION	8.59292461677291E-5	TEST
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999940978872796	WITHOUT_CLASSIFICATION	5.902112720431759E-6	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999653350860644	WITHOUT_CLASSIFICATION	3.466491393555372E-5	TEST
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999523171201937	WITHOUT_CLASSIFICATION	4.7682879806296056E-5	TEST
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999956910555496	WITHOUT_CLASSIFICATION	4.308944450346439E-6	TEST
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999957767333505	WITHOUT_CLASSIFICATION	4.2232666495581925E-6	TEST
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9994921716314372	WITHOUT_CLASSIFICATION	5.078283685626902E-4	TEST
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999862390864512	WITHOUT_CLASSIFICATION	1.37609135487909E-5	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999989046122776	WITHOUT_CLASSIFICATION	1.0953877224193676E-6	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999989046122776	WITHOUT_CLASSIFICATION	1.0953877224193676E-6	TEST
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9998987816576903	WITHOUT_CLASSIFICATION	1.0121834230965654E-4	TEST
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.999908593965299	WITHOUT_CLASSIFICATION	9.140603470107808E-5	TEST
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999440863469745	WITHOUT_CLASSIFICATION	5.5913653025416895E-5	TEST
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999903294059621	WITHOUT_CLASSIFICATION	9.67059403786552E-6	TEST
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999985726222799	WITHOUT_CLASSIFICATION	1.4273777201186223E-6	TEST
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999821012815677	WITHOUT_CLASSIFICATION	1.7898718432264282E-5	TEST
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999691155236713	WITHOUT_CLASSIFICATION	3.088447632877436E-5	TEST
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999987571829997	WITHOUT_CLASSIFICATION	1.2428170003033759E-6	TEST
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999778329006864	WITHOUT_CLASSIFICATION	2.21670993134747E-5	TEST
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999988714363349	WITHOUT_CLASSIFICATION	1.128563665104571E-6	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999984201078537	WITHOUT_CLASSIFICATION	1.5798921463187861E-6	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999984201078537	WITHOUT_CLASSIFICATION	1.5798921463187861E-6	TEST
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9999806630945798	WITHOUT_CLASSIFICATION	1.9336905420150915E-5	TEST
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999994271044684	WITHOUT_CLASSIFICATION	5.728955315451183E-7	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9997322110263821	WITHOUT_CLASSIFICATION	2.677889736179307E-4	TEST
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999930694693506	WITHOUT_CLASSIFICATION	6.93053064946243E-6	TEST
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999702401692512	WITHOUT_CLASSIFICATION	2.9759830748798204E-5	TEST
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999959579332734	WITHOUT_CLASSIFICATION	4.042066726569847E-6	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999843202932033	WITHOUT_CLASSIFICATION	1.5679706796724626E-5	TEST
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999497213526549	WITHOUT_CLASSIFICATION	5.0278647345218725E-5	TEST
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999950412407747	WITHOUT_CLASSIFICATION	4.958759225288478E-6	TEST
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999865454998659	WITHOUT_CLASSIFICATION	1.3454500134201831E-5	TEST
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999928896439957	WITHOUT_CLASSIFICATION	7.110356004270756E-6	TEST
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999313050114751	WITHOUT_CLASSIFICATION	6.869498852494065E-5	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999878406011269	WITHOUT_CLASSIFICATION	1.2159398873142626E-5	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999878406011269	WITHOUT_CLASSIFICATION	1.2159398873142626E-5	TEST
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999636391781686	WITHOUT_CLASSIFICATION	3.6360821831515944E-5	TEST
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999900761480799	WITHOUT_CLASSIFICATION	9.923851920058532E-6	TEST
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999854461570754	WITHOUT_CLASSIFICATION	1.45538429245603E-5	TEST
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999690435984683	WITHOUT_CLASSIFICATION	3.095640153159607E-5	TEST
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999605044926607	WITHOUT_CLASSIFICATION	3.9495507339290954E-5	TEST
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999616686245717	WITHOUT_CLASSIFICATION	3.8331375428228195E-5	TEST
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999021319533725	WITHOUT_CLASSIFICATION	9.786804662750448E-5	TEST
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999862267637418	WITHOUT_CLASSIFICATION	1.3773236258090047E-5	TEST
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.999964170059747	WITHOUT_CLASSIFICATION	3.582994025303417E-5	TEST
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999861323113348	WITHOUT_CLASSIFICATION	1.3867688665063179E-5	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9997322110263821	WITHOUT_CLASSIFICATION	2.677889736179307E-4	TEST
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9998761756250454	WITHOUT_CLASSIFICATION	1.2382437495451297E-4	TEST
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999964623458619	WITHOUT_CLASSIFICATION	3.537654137951003E-6	TEST
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9998139362645908	WITHOUT_CLASSIFICATION	1.860637354092151E-4	TEST
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999987313523983	WITHOUT_CLASSIFICATION	1.2686476018111986E-6	TEST
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999852256861664	WITHOUT_CLASSIFICATION	1.4774313833551597E-5	TEST
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999996655067261	WITHOUT_CLASSIFICATION	3.3449327384889847E-7	TEST
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999832033637226	WITHOUT_CLASSIFICATION	1.679663627737738E-5	TEST
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999983437677963	WITHOUT_CLASSIFICATION	1.6562322037382821E-6	TEST
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.999997246149856	WITHOUT_CLASSIFICATION	2.7538501440398787E-6	TEST
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999982610147393	WITHOUT_CLASSIFICATION	1.7389852607805454E-6	TEST
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999992143462668	WITHOUT_CLASSIFICATION	7.856537332034208E-7	TEST
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999120802744029	WITHOUT_CLASSIFICATION	8.791972559710282E-5	TEST
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999782774693887	WITHOUT_CLASSIFICATION	2.1722530611275014E-5	TEST
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999853420879422	WITHOUT_CLASSIFICATION	1.4657912057818925E-5	TEST
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9997474272490545	WITHOUT_CLASSIFICATION	2.5257275094550663E-4	TEST
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999955005735062	WITHOUT_CLASSIFICATION	4.4994264938334016E-6	TEST
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999110174257247	WITHOUT_CLASSIFICATION	8.898257427532128E-5	TEST
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999640117477222	WITHOUT_CLASSIFICATION	3.598825227774907E-5	TEST
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999846804675725	WITHOUT_CLASSIFICATION	1.531953242751942E-5	TEST
// rename is successful	WITHOUT_CLASSIFICATION	0.9999510100024473	WITHOUT_CLASSIFICATION	4.898999755266947E-5	TEST
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999890293497637	WITHOUT_CLASSIFICATION	1.097065023630141E-5	TEST
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999823400182012	WITHOUT_CLASSIFICATION	1.7659981798821145E-5	TEST
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999768923816665	WITHOUT_CLASSIFICATION	2.310761833353204E-5	TEST
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999253064257165	WITHOUT_CLASSIFICATION	7.469357428347369E-5	TEST
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999888047373745	WITHOUT_CLASSIFICATION	1.1195262625582702E-5	TEST
// 16 ?	WITHOUT_CLASSIFICATION	0.999950921657763	WITHOUT_CLASSIFICATION	4.907834223705724E-5	TEST
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999603866065373	WITHOUT_CLASSIFICATION	3.96133934625839E-5	TEST
// size + 1;	WITHOUT_CLASSIFICATION	0.9999958250933993	WITHOUT_CLASSIFICATION	4.17490660060531E-6	TEST
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999927621238176	WITHOUT_CLASSIFICATION	7.237876182425465E-6	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999665180549758	WITHOUT_CLASSIFICATION	3.3481945024057415E-5	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999665180549758	WITHOUT_CLASSIFICATION	3.3481945024057415E-5	TEST
// put implementation	WITHOUT_CLASSIFICATION	0.9999872415352858	WITHOUT_CLASSIFICATION	1.2758464714180029E-5	TEST
// get implementation	WITHOUT_CLASSIFICATION	0.999992133029967	WITHOUT_CLASSIFICATION	7.866970032912342E-6	TEST
// specialized for value	WITHOUT_CLASSIFICATION	0.9999780992597017	WITHOUT_CLASSIFICATION	2.190074029832144E-5	TEST
// delete implementation	WITHOUT_CLASSIFICATION	0.999988101718069	WITHOUT_CLASSIFICATION	1.1898281931068342E-5	TEST
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999698660117188	WITHOUT_CLASSIFICATION	3.0133988281254085E-5	TEST
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999950573041373	WITHOUT_CLASSIFICATION	4.942695862763706E-6	TEST
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999911119515215	WITHOUT_CLASSIFICATION	8.888048478604835E-6	TEST
// update the hash value	WITHOUT_CLASSIFICATION	0.9999873117072297	WITHOUT_CLASSIFICATION	1.268829277031517E-5	TEST
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9993128598199913	WITHOUT_CLASSIFICATION	6.871401800087798E-4	TEST
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.999970277982816	WITHOUT_CLASSIFICATION	2.9722017184038807E-5	TEST
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999771157333586	WITHOUT_CLASSIFICATION	2.28842666414781E-5	TEST
// remain where we are	WITHOUT_CLASSIFICATION	0.9999814658125806	WITHOUT_CLASSIFICATION	1.8534187419310112E-5	TEST
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9994707796821956	WITHOUT_CLASSIFICATION	5.292203178044063E-4	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999833237886476	WITHOUT_CLASSIFICATION	1.667621135242127E-5	TEST
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999955752526354	WITHOUT_CLASSIFICATION	4.424747364552173E-6	TEST
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9980131990616499	WITHOUT_CLASSIFICATION	0.001986800938350099	TEST
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999999619537009	WITHOUT_CLASSIFICATION	3.804629912458739E-8	TEST
// first try as directory	WITHOUT_CLASSIFICATION	0.999998825397724	WITHOUT_CLASSIFICATION	1.1746022759687726E-6	TEST
// next as regular file	WITHOUT_CLASSIFICATION	0.9999983645676068	WITHOUT_CLASSIFICATION	1.6354323932272775E-6	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.999940199085218	WITHOUT_CLASSIFICATION	5.980091478200646E-5	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// Stream-based	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999330834093831	WITHOUT_CLASSIFICATION	6.69165906169067E-5	TEST
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999987691871941	WITHOUT_CLASSIFICATION	1.2308128059423575E-6	TEST
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999814086338601	WITHOUT_CLASSIFICATION	1.859136613989121E-5	TEST
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999360476369292	WITHOUT_CLASSIFICATION	6.395236307074929E-5	TEST
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999968073236216	WITHOUT_CLASSIFICATION	3.192676378419774E-6	TEST
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999904369016407	WITHOUT_CLASSIFICATION	9.563098359349946E-6	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999370084123547	WITHOUT_CLASSIFICATION	6.299158764542964E-5	TEST
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999945676839418	WITHOUT_CLASSIFICATION	5.432316058292696E-6	TEST
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999928083138149	WITHOUT_CLASSIFICATION	7.191686185188294E-6	TEST
// re-register	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999367779154348	WITHOUT_CLASSIFICATION	6.322208456521114E-5	TEST
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999879005622704	WITHOUT_CLASSIFICATION	1.2099437729741011E-5	TEST
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999954295537126	WITHOUT_CLASSIFICATION	4.57044628740328E-6	TEST
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999201892160269	WITHOUT_CLASSIFICATION	7.981078397320493E-5	TEST
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999627911653963	WITHOUT_CLASSIFICATION	3.720883460370663E-5	TEST
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999968696703282	WITHOUT_CLASSIFICATION	3.130329671757505E-6	TEST
// use original modes	WITHOUT_CLASSIFICATION	0.999985068268856	WITHOUT_CLASSIFICATION	1.4931731144003004E-5	TEST
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999869754396595	WITHOUT_CLASSIFICATION	1.3024560340404304E-5	TEST
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999129347997744	WITHOUT_CLASSIFICATION	8.706520022551762E-5	TEST
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999668967670079	WITHOUT_CLASSIFICATION	3.31032329920192E-5	TEST
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999855144946028	WITHOUT_CLASSIFICATION	1.4485505397243954E-5	TEST
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.99994210108663	WITHOUT_CLASSIFICATION	5.789891337005357E-5	TEST
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999701016189123	WITHOUT_CLASSIFICATION	2.9898381087704644E-5	TEST
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999865037932635	WITHOUT_CLASSIFICATION	1.3496206736420705E-5	TEST
//Everything written	WITHOUT_CLASSIFICATION	0.9999284842908626	WITHOUT_CLASSIFICATION	7.151570913751541E-5	TEST
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999898562471471	WITHOUT_CLASSIFICATION	1.0143752853010995E-5	TEST
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9998487179650891	WITHOUT_CLASSIFICATION	1.512820349109702E-4	TEST
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9997165391202121	WITHOUT_CLASSIFICATION	2.8346087978801027E-4	TEST
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999908253371861	WITHOUT_CLASSIFICATION	9.17466281381532E-6	TEST
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999886235605969	WITHOUT_CLASSIFICATION	1.1376439403128367E-5	TEST
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.999957493807493	WITHOUT_CLASSIFICATION	4.250619250709347E-5	TEST
// hmmmm	WITHOUT_CLASSIFICATION	0.9999345638863254	WITHOUT_CLASSIFICATION	6.543611367458778E-5	TEST
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999667589620324	WITHOUT_CLASSIFICATION	3.3241037967670555E-5	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999928045947964	WITHOUT_CLASSIFICATION	7.195405203574173E-6	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999981699316354	WITHOUT_CLASSIFICATION	1.8300683645654342E-6	TEST
// Length to read	WITHOUT_CLASSIFICATION	0.9999981444118917	WITHOUT_CLASSIFICATION	1.8555881082923093E-6	TEST
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999829258332478	WITHOUT_CLASSIFICATION	1.707416675216147E-5	TEST
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999846535693881	WITHOUT_CLASSIFICATION	1.5346430611836575E-5	TEST
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999760260608636	WITHOUT_CLASSIFICATION	2.3973939136380915E-5	TEST
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999844612689031	WITHOUT_CLASSIFICATION	1.55387310969614E-5	TEST
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999842982655802	WITHOUT_CLASSIFICATION	1.5701734419701328E-5	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999926061639803	WITHOUT_CLASSIFICATION	7.3938360196485474E-6	TEST
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999843875830868	WITHOUT_CLASSIFICATION	1.5612416913172648E-5	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999926061639803	WITHOUT_CLASSIFICATION	7.3938360196485474E-6	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9998799065557913	WITHOUT_CLASSIFICATION	1.2009344420867495E-4	TEST
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9996016240728685	WITHOUT_CLASSIFICATION	3.983759271314784E-4	TEST
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999777840033716	WITHOUT_CLASSIFICATION	2.221599662844767E-5	TEST
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.9982726119322477	WITHOUT_CLASSIFICATION	0.001727388067752263	TEST
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999815339221918	WITHOUT_CLASSIFICATION	1.8466077808155815E-5	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999898495001369	WITHOUT_CLASSIFICATION	1.0150499863132593E-5	TEST
// write	WITHOUT_CLASSIFICATION	0.999876457856643	WITHOUT_CLASSIFICATION	1.2354214335701837E-4	TEST
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9998441943472957	WITHOUT_CLASSIFICATION	1.5580565270430897E-4	TEST
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999901685205599	WITHOUT_CLASSIFICATION	9.831479440234073E-6	TEST
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9999902782321626	WITHOUT_CLASSIFICATION	9.721767837360465E-6	TEST
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9999977603386595	WITHOUT_CLASSIFICATION	2.2396613404485805E-6	TEST
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999937781312553	WITHOUT_CLASSIFICATION	6.221868744587309E-6	TEST
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.999991304934153	WITHOUT_CLASSIFICATION	8.695065847076668E-6	TEST
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999980154427434	WITHOUT_CLASSIFICATION	1.9845572566380284E-6	TEST
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.999820266122327	WITHOUT_CLASSIFICATION	1.7973387767311196E-4	TEST
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9964722886467413	WITHOUT_CLASSIFICATION	0.003527711353258667	TEST
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.999999815238103	WITHOUT_CLASSIFICATION	1.8476189694719887E-7	TEST
// The class of this object	WITHOUT_CLASSIFICATION	0.9999734786595083	WITHOUT_CLASSIFICATION	2.6521340491653412E-5	TEST
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999903468881751	WITHOUT_CLASSIFICATION	9.65311182497846E-6	TEST
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.999591223760613	WITHOUT_CLASSIFICATION	4.087762393869918E-4	TEST
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9998647906283027	WITHOUT_CLASSIFICATION	1.3520937169733002E-4	TEST
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999640117477222	WITHOUT_CLASSIFICATION	3.598825227774907E-5	TEST
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999848729753699	WITHOUT_CLASSIFICATION	1.5127024630145492E-5	TEST
// for interface impls	WITHOUT_CLASSIFICATION	0.9999844882641299	WITHOUT_CLASSIFICATION	1.55117358700598E-5	TEST
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999795639245482	WITHOUT_CLASSIFICATION	2.043607545173306E-5	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.999996793521596	WITHOUT_CLASSIFICATION	3.206478404038298E-6	TEST
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999981667284573	WITHOUT_CLASSIFICATION	1.833271542686771E-6	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999868679603071	WITHOUT_CLASSIFICATION	1.3132039692904817E-5	TEST
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999988046138087	WITHOUT_CLASSIFICATION	1.1953861911569294E-6	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999665577514218	WITHOUT_CLASSIFICATION	3.3442248578222834E-5	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999665577514218	WITHOUT_CLASSIFICATION	3.3442248578222834E-5	TEST
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999697130797772	WITHOUT_CLASSIFICATION	3.028692022287771E-5	TEST
// Struct methods	WITHOUT_CLASSIFICATION	0.9999948927408883	WITHOUT_CLASSIFICATION	5.1072591116812625E-6	TEST
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9997264523066908	WITHOUT_CLASSIFICATION	2.735476933092188E-4	TEST
// define access methods.	WITHOUT_CLASSIFICATION	0.9999938909746034	WITHOUT_CLASSIFICATION	6.1090253966041264E-6	TEST
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999829218784565	WITHOUT_CLASSIFICATION	1.7078121543424656E-5	TEST
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999826914821026	WITHOUT_CLASSIFICATION	1.730851789747159E-5	TEST
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999833843249036	WITHOUT_CLASSIFICATION	1.661567509628962E-5	TEST
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999848729753699	WITHOUT_CLASSIFICATION	1.5127024630145492E-5	TEST
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999901754666989	WITHOUT_CLASSIFICATION	9.824533301112977E-6	TEST
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999677796364387	WITHOUT_CLASSIFICATION	3.2220363561218484E-5	TEST
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999995894161744	WITHOUT_CLASSIFICATION	4.10583825536826E-7	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999950552444942	WITHOUT_CLASSIFICATION	4.9447555059313054E-6	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999950552444942	WITHOUT_CLASSIFICATION	4.9447555059313054E-6	TEST
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999858892467763	WITHOUT_CLASSIFICATION	1.4110753223690888E-5	TEST
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999897456534738	WITHOUT_CLASSIFICATION	1.0254346526371846E-5	TEST
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999680126134974	WITHOUT_CLASSIFICATION	3.1987386502661036E-5	TEST
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999028540268129	WITHOUT_CLASSIFICATION	9.714597318712562E-5	TEST
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999920006408516	WITHOUT_CLASSIFICATION	7.999359148450787E-6	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999741872005656	WITHOUT_CLASSIFICATION	2.5812799434274092E-5	TEST
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999324048311995	WITHOUT_CLASSIFICATION	6.759516880052037E-5	TEST
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999920317487699	WITHOUT_CLASSIFICATION	7.968251229981098E-6	TEST
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9996347623563392	WITHOUT_CLASSIFICATION	3.6523764366082996E-4	TEST
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.999992794297874	WITHOUT_CLASSIFICATION	7.205702126085261E-6	TEST
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999229403341288	WITHOUT_CLASSIFICATION	7.705966587122858E-5	TEST
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999964344193522	WITHOUT_CLASSIFICATION	3.565580647794E-6	TEST
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9998167540063192	WITHOUT_CLASSIFICATION	1.8324599368078345E-4	TEST
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9998645886202343	WITHOUT_CLASSIFICATION	1.3541137976576326E-4	TEST
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999989329245	WITHOUT_CLASSIFICATION	1.0670754999167839E-6	TEST
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999338974394991	WITHOUT_CLASSIFICATION	6.610256050089251E-5	TEST
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999938927130398	WITHOUT_CLASSIFICATION	6.107286960106123E-6	TEST
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999966192998723	WITHOUT_CLASSIFICATION	3.380700127706231E-6	TEST
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999851986464091	WITHOUT_CLASSIFICATION	1.4801353590849496E-5	TEST
// reopen a java module	WITHOUT_CLASSIFICATION	0.999993670704653	WITHOUT_CLASSIFICATION	6.329295347000613E-6	TEST
//FIXME warning	WITHOUT_CLASSIFICATION	0.9999254586072925	WITHOUT_CLASSIFICATION	7.454139270743137E-5	TEST
// FIXME warning	WITHOUT_CLASSIFICATION	0.9999739768539192	WITHOUT_CLASSIFICATION	2.6023146080829055E-5	TEST
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9999072871583123	WITHOUT_CLASSIFICATION	9.271284168760193E-5	TEST
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999994010933143	WITHOUT_CLASSIFICATION	5.989066855863489E-7	TEST
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999718600129849	WITHOUT_CLASSIFICATION	2.8139987015001146E-5	TEST
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999986997252447	WITHOUT_CLASSIFICATION	1.3002747553081545E-6	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999979936446723	WITHOUT_CLASSIFICATION	2.0063553276337228E-6	TEST
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999312396032111	WITHOUT_CLASSIFICATION	6.876039678895526E-5	TEST
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999783707658606	WITHOUT_CLASSIFICATION	2.1629234139394632E-5	TEST
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999850784421683	WITHOUT_CLASSIFICATION	1.4921557831575294E-5	TEST
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999955917611147	WITHOUT_CLASSIFICATION	4.408238885233368E-6	TEST
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999714738029734	WITHOUT_CLASSIFICATION	2.8526197026676788E-5	TEST
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999988452418191	WITHOUT_CLASSIFICATION	1.154758180924816E-6	TEST
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999990505184433	WITHOUT_CLASSIFICATION	9.494815567246492E-7	TEST
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999711316772243	WITHOUT_CLASSIFICATION	2.8868322775715287E-5	TEST
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999969164996975	WITHOUT_CLASSIFICATION	3.0835003024536846E-6	TEST
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999671105798633	WITHOUT_CLASSIFICATION	3.28894201367477E-5	TEST
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999671105798633	WITHOUT_CLASSIFICATION	3.28894201367477E-5	TEST
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999110419882072	WITHOUT_CLASSIFICATION	8.895801179273616E-5	TEST
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999702137495459	WITHOUT_CLASSIFICATION	2.9786250454088935E-5	TEST
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999950652938004	WITHOUT_CLASSIFICATION	4.934706199493636E-6	TEST
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9999921397226464	WITHOUT_CLASSIFICATION	7.860277353512111E-6	TEST
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9999056710999399	WITHOUT_CLASSIFICATION	9.43289000601265E-5	TEST
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.999993457157878	WITHOUT_CLASSIFICATION	6.542842121902184E-6	TEST
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999421066345592	WITHOUT_CLASSIFICATION	5.789336544085226E-5	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999874030903626	WITHOUT_CLASSIFICATION	1.2596909637272022E-5	TEST
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999966142881718	WITHOUT_CLASSIFICATION	3.385711828368502E-6	TEST
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999974898159095	WITHOUT_CLASSIFICATION	2.5101840904864495E-6	TEST
//reopen	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999948927408883	WITHOUT_CLASSIFICATION	5.1072591116812625E-6	TEST
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999603145235033	WITHOUT_CLASSIFICATION	3.968547649674345E-5	TEST
// one optional, one required args	WITHOUT_CLASSIFICATION	0.999982833369709	WITHOUT_CLASSIFICATION	1.716663029104535E-5	TEST
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999977965924964	WITHOUT_CLASSIFICATION	2.203407503532642E-6	TEST
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999996099088158	WITHOUT_CLASSIFICATION	3.900911842293001E-7	TEST
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999930658302307	WITHOUT_CLASSIFICATION	6.934169769189151E-6	TEST
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999975228518128	WITHOUT_CLASSIFICATION	2.477148187315944E-6	TEST
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.999997016801046	WITHOUT_CLASSIFICATION	2.9831989539403578E-6	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999975639153736	WITHOUT_CLASSIFICATION	2.436084626403795E-6	TEST
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999941432134218	WITHOUT_CLASSIFICATION	5.85678657810027E-6	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999919512187828	WITHOUT_CLASSIFICATION	8.048781217154333E-6	TEST
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999888028293915	WITHOUT_CLASSIFICATION	1.1197170608401823E-5	TEST
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999863168978103	WITHOUT_CLASSIFICATION	1.3683102189764342E-5	TEST
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999602408601547	WITHOUT_CLASSIFICATION	3.97591398454315E-5	TEST
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999611772629424	WITHOUT_CLASSIFICATION	3.8822737057597446E-5	TEST
// ignore error	WITHOUT_CLASSIFICATION	0.9999975509585973	WITHOUT_CLASSIFICATION	2.449041402694741E-6	TEST
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999737728987227	WITHOUT_CLASSIFICATION	2.6227101277378995E-5	TEST
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999702137495459	WITHOUT_CLASSIFICATION	2.9786250454088935E-5	TEST
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9998103086487102	WITHOUT_CLASSIFICATION	1.8969135128979117E-4	TEST
// odd	WITHOUT_CLASSIFICATION	0.9999345953240726	WITHOUT_CLASSIFICATION	6.540467592740018E-5	TEST
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999990732189824	WITHOUT_CLASSIFICATION	9.26781017667569E-7	TEST
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999773904678058	WITHOUT_CLASSIFICATION	2.2609532194178134E-5	TEST
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999887738105293	WITHOUT_CLASSIFICATION	1.1226189470684478E-5	TEST
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.99999863652433	WITHOUT_CLASSIFICATION	1.3634756700885183E-6	TEST
/*  0! */	WITHOUT_CLASSIFICATION	0.9998154960373749	WITHOUT_CLASSIFICATION	1.8450396262509005E-4	TEST
/*  1! */	WITHOUT_CLASSIFICATION	0.9998154960373749	WITHOUT_CLASSIFICATION	1.8450396262509005E-4	TEST
/*  2! */	WITHOUT_CLASSIFICATION	0.9998154960373749	WITHOUT_CLASSIFICATION	1.8450396262509005E-4	TEST
/*  3! */	WITHOUT_CLASSIFICATION	0.9998154960373749	WITHOUT_CLASSIFICATION	1.8450396262509005E-4	TEST
/*  4! */	WITHOUT_CLASSIFICATION	0.9998154960373749	WITHOUT_CLASSIFICATION	1.8450396262509005E-4	TEST
/*  5! */	WITHOUT_CLASSIFICATION	0.9998154960373749	WITHOUT_CLASSIFICATION	1.8450396262509005E-4	TEST
/*  6! */	WITHOUT_CLASSIFICATION	0.9998154960373749	WITHOUT_CLASSIFICATION	1.8450396262509005E-4	TEST
/*  7! */	WITHOUT_CLASSIFICATION	0.9998154960373749	WITHOUT_CLASSIFICATION	1.8450396262509005E-4	TEST
/*  8! */	WITHOUT_CLASSIFICATION	0.9998154960373749	WITHOUT_CLASSIFICATION	1.8450396262509005E-4	TEST
/*  9! */	WITHOUT_CLASSIFICATION	0.9998154960373749	WITHOUT_CLASSIFICATION	1.8450396262509005E-4	TEST
/* 11! */	WITHOUT_CLASSIFICATION	0.9998443336975474	WITHOUT_CLASSIFICATION	1.5566630245257587E-4	TEST
/* 12! */	WITHOUT_CLASSIFICATION	0.9998443336975474	WITHOUT_CLASSIFICATION	1.5566630245257587E-4	TEST
/* 13! */	WITHOUT_CLASSIFICATION	0.9998443336975474	WITHOUT_CLASSIFICATION	1.5566630245257587E-4	TEST
/* 15! */	WITHOUT_CLASSIFICATION	0.9998443336975474	WITHOUT_CLASSIFICATION	1.5566630245257587E-4	TEST
/* 16! */	WITHOUT_CLASSIFICATION	0.9998443336975474	WITHOUT_CLASSIFICATION	1.5566630245257587E-4	TEST
/* 17! */	WITHOUT_CLASSIFICATION	0.9998443336975474	WITHOUT_CLASSIFICATION	1.5566630245257587E-4	TEST
/* 19! */	WITHOUT_CLASSIFICATION	0.9998443336975474	WITHOUT_CLASSIFICATION	1.5566630245257587E-4	TEST
/* 20! */	WITHOUT_CLASSIFICATION	0.9998443336975474	WITHOUT_CLASSIFICATION	1.5566630245257587E-4	TEST
/* 21! */	WITHOUT_CLASSIFICATION	0.9998443336975474	WITHOUT_CLASSIFICATION	1.5566630245257587E-4	TEST
// Static constants	WITHOUT_CLASSIFICATION	0.9999937374424913	WITHOUT_CLASSIFICATION	6.262557508717431E-6	TEST
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.999972470484427	WITHOUT_CLASSIFICATION	2.752951557294182E-5	TEST
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999691013209471	WITHOUT_CLASSIFICATION	3.089867905302768E-5	TEST
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999886784094242	WITHOUT_CLASSIFICATION	1.1321590575796822E-5	TEST
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999940471682401	WITHOUT_CLASSIFICATION	5.952831759908324E-6	TEST
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999971014584972	WITHOUT_CLASSIFICATION	2.898541502879634E-6	TEST
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999990964371213	WITHOUT_CLASSIFICATION	9.035628786782153E-7	TEST
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9999925851515606	WITHOUT_CLASSIFICATION	7.414848439313335E-6	TEST
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999984211165187	WITHOUT_CLASSIFICATION	1.5788834812868485E-6	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9998588279726415	WITHOUT_CLASSIFICATION	1.411720273585427E-4	TEST
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9768396072130491	WITHOUT_CLASSIFICATION	0.023160392786950996	TEST
// integer division	WITHOUT_CLASSIFICATION	0.9999934562165829	WITHOUT_CLASSIFICATION	6.543783417118324E-6	TEST
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999963768976187	WITHOUT_CLASSIFICATION	3.623102381368269E-6	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999848734454545	WITHOUT_CLASSIFICATION	1.5126554545431028E-5	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999848734454545	WITHOUT_CLASSIFICATION	1.5126554545431028E-5	TEST
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999971014584972	WITHOUT_CLASSIFICATION	2.898541502879634E-6	TEST
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.999926762174347	WITHOUT_CLASSIFICATION	7.323782565306086E-5	TEST
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.999999805169645	WITHOUT_CLASSIFICATION	1.9483035501657767E-7	TEST
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999924805487089	WITHOUT_CLASSIFICATION	7.519451291065842E-6	TEST
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999968236439161	WITHOUT_CLASSIFICATION	3.1763560839747907E-6	TEST
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999242299674437	WITHOUT_CLASSIFICATION	7.577003255641063E-5	TEST
// sign	WITHOUT_CLASSIFICATION	0.9999346059557738	WITHOUT_CLASSIFICATION	6.539404422620964E-5	TEST
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999910249702806	WITHOUT_CLASSIFICATION	8.975029719421766E-6	TEST
// normalize the value	WITHOUT_CLASSIFICATION	0.9999934452675935	WITHOUT_CLASSIFICATION	6.554732406440583E-6	TEST
// base	WITHOUT_CLASSIFICATION	0.9999423880823531	WITHOUT_CLASSIFICATION	5.7611917646849324E-5	TEST
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9995039187436039	WITHOUT_CLASSIFICATION	4.96081256396021E-4	TEST
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999976169192515	WITHOUT_CLASSIFICATION	2.3830807485345105E-6	TEST
// eh?!	WITHOUT_CLASSIFICATION	0.9999345638863254	WITHOUT_CLASSIFICATION	6.543611367458778E-5	TEST
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999155143269449	WITHOUT_CLASSIFICATION	8.448567305498596E-5	TEST
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999907820406774	WITHOUT_CLASSIFICATION	9.217959322592195E-6	TEST
// the requested precision	WITHOUT_CLASSIFICATION	0.9999946684925775	WITHOUT_CLASSIFICATION	5.331507422597997E-6	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.9999965039803174	WITHOUT_CLASSIFICATION	3.4960196825917475E-6	TEST
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999833670031824	WITHOUT_CLASSIFICATION	1.6632996817635707E-5	TEST
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999873853349557	WITHOUT_CLASSIFICATION	1.2614665044420216E-5	TEST
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999153693845447	WITHOUT_CLASSIFICATION	8.463061545525666E-5	TEST
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999928247615831	WITHOUT_CLASSIFICATION	7.175238416870864E-6	TEST
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999926728060895	WITHOUT_CLASSIFICATION	7.327193910496529E-6	TEST
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999934564167523	WITHOUT_CLASSIFICATION	6.543583247631225E-6	TEST
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999929956814164	WITHOUT_CLASSIFICATION	7.0043185835808674E-6	TEST
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999946797894262	WITHOUT_CLASSIFICATION	5.320210573722164E-6	TEST
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.999966671687129	WITHOUT_CLASSIFICATION	3.332831287102435E-5	TEST
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999947763646284	WITHOUT_CLASSIFICATION	5.223635371517737E-6	TEST
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999806773758908	WITHOUT_CLASSIFICATION	1.9322624109195197E-5	TEST
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999641650929681	WITHOUT_CLASSIFICATION	3.583490703192827E-5	TEST
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999834152935557	WITHOUT_CLASSIFICATION	1.6584706444275395E-5	TEST
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999853811046141	WITHOUT_CLASSIFICATION	1.4618895385855765E-5	TEST
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999817078067954	WITHOUT_CLASSIFICATION	1.8292193204580088E-5	TEST
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999849807177288	WITHOUT_CLASSIFICATION	1.5019282271266951E-5	TEST
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.999985008820376	WITHOUT_CLASSIFICATION	1.4991179624016481E-5	TEST
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999906852922232	WITHOUT_CLASSIFICATION	9.314707776801522E-6	TEST
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999926061639803	WITHOUT_CLASSIFICATION	7.3938360196485474E-6	TEST
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999972531301058	WITHOUT_CLASSIFICATION	2.7468698941210043E-6	TEST
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999977887342981	WITHOUT_CLASSIFICATION	2.2112657018887695E-6	TEST
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9999713380425191	WITHOUT_CLASSIFICATION	2.866195748082281E-5	TEST
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999986007954447	WITHOUT_CLASSIFICATION	1.3992045553406652E-6	TEST
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999897614415599	WITHOUT_CLASSIFICATION	1.0238558440043554E-5	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999797682641431	WITHOUT_CLASSIFICATION	2.023173585687387E-5	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999797682641431	WITHOUT_CLASSIFICATION	2.023173585687387E-5	TEST
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999825698363549	WITHOUT_CLASSIFICATION	1.743016364506497E-5	TEST
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999729221372144	WITHOUT_CLASSIFICATION	2.707786278549732E-5	TEST
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999981814354729	WITHOUT_CLASSIFICATION	1.8185645271302718E-6	TEST
//consume the file name	WITHOUT_CLASSIFICATION	0.9999225476729262	WITHOUT_CLASSIFICATION	7.74523270737591E-5	TEST
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9996194143028728	WITHOUT_CLASSIFICATION	3.805856971271327E-4	TEST
// try cwd first	WITHOUT_CLASSIFICATION	0.9999957732788505	WITHOUT_CLASSIFICATION	4.226721149562625E-6	TEST
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999668603720637	WITHOUT_CLASSIFICATION	3.313962793623604E-5	TEST
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9991444526011862	WITHOUT_CLASSIFICATION	8.555473988137211E-4	TEST
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.999986340263239	WITHOUT_CLASSIFICATION	1.3659736761046817E-5	TEST
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.999986340263239	WITHOUT_CLASSIFICATION	1.3659736761046817E-5	TEST
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.999986340263239	WITHOUT_CLASSIFICATION	1.3659736761046817E-5	TEST
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.99994150391205	WITHOUT_CLASSIFICATION	5.84960879500661E-5	TEST
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9990278338629088	WITHOUT_CLASSIFICATION	9.721661370911388E-4	TEST
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999952812861473	WITHOUT_CLASSIFICATION	4.718713852667616E-6	TEST
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9964722886467413	WITHOUT_CLASSIFICATION	0.003527711353258667	TEST
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9999630716460937	WITHOUT_CLASSIFICATION	3.692835390631841E-5	TEST
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9998692347519239	WITHOUT_CLASSIFICATION	1.307652480760726E-4	TEST
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.999995178165971	WITHOUT_CLASSIFICATION	4.8218340288890326E-6	TEST
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999989149228279	WITHOUT_CLASSIFICATION	1.0850771721096728E-6	TEST
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9990278338629088	WITHOUT_CLASSIFICATION	9.721661370911388E-4	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999787393361163	WITHOUT_CLASSIFICATION	2.1260663883707963E-5	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999787393361163	WITHOUT_CLASSIFICATION	2.1260663883707963E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9998503673978074	WITHOUT_CLASSIFICATION	1.4963260219259903E-4	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999905167517285	WITHOUT_CLASSIFICATION	9.483248271496549E-6	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999216930018296	WITHOUT_CLASSIFICATION	7.83069981703489E-5	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999892836372009	WITHOUT_CLASSIFICATION	1.0716362799175771E-5	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999939819603941	WITHOUT_CLASSIFICATION	6.018039605880605E-6	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999945080182131	WITHOUT_CLASSIFICATION	5.4919817869687294E-6	TEST
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9995984206988504	WITHOUT_CLASSIFICATION	4.0157930114957186E-4	TEST
// Profile	WITHOUT_CLASSIFICATION	0.9999345834522266	WITHOUT_CLASSIFICATION	6.541654777340041E-5	TEST
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9998685862865361	WITHOUT_CLASSIFICATION	1.3141371346395012E-4	TEST
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999984281045241	WITHOUT_CLASSIFICATION	1.5718954759455523E-6	TEST
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.999963764361041	WITHOUT_CLASSIFICATION	3.623563895916408E-5	TEST
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999951441513123	WITHOUT_CLASSIFICATION	4.855848687785402E-6	TEST
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9998386980439263	WITHOUT_CLASSIFICATION	1.613019560736604E-4	TEST
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9988364805941604	WITHOUT_CLASSIFICATION	0.0011635194058395237	TEST
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.99978722474535	WITHOUT_CLASSIFICATION	2.1277525465008277E-4	TEST
// reset the state	WITHOUT_CLASSIFICATION	0.9999981375074105	WITHOUT_CLASSIFICATION	1.8624925895327071E-6	TEST
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9991199950581653	WITHOUT_CLASSIFICATION	8.800049418346775E-4	TEST
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
//str is frozen	WITHOUT_CLASSIFICATION	0.9997376786414084	WITHOUT_CLASSIFICATION	2.6232135859156046E-4	TEST
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999021372794465	WITHOUT_CLASSIFICATION	9.786272055340609E-5	TEST
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9993573661079933	WITHOUT_CLASSIFICATION	6.426338920067462E-4	TEST
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999970430459515	WITHOUT_CLASSIFICATION	2.956954048598013E-6	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.999996793521596	WITHOUT_CLASSIFICATION	3.206478404038298E-6	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999741872005656	WITHOUT_CLASSIFICATION	2.5812799434274092E-5	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999977930225113	WITHOUT_CLASSIFICATION	2.206977488760355E-6	TEST
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.999992783367411	WITHOUT_CLASSIFICATION	7.216632588970823E-6	TEST
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999976082741048	WITHOUT_CLASSIFICATION	2.3917258951481663E-6	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9995563915418114	WITHOUT_CLASSIFICATION	4.4360845818868877E-4	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999921581884742	WITHOUT_CLASSIFICATION	7.841811525736149E-6	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999921581884742	WITHOUT_CLASSIFICATION	7.841811525736149E-6	TEST
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999978985412844	WITHOUT_CLASSIFICATION	2.1014587155493606E-6	TEST
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999763444127935	WITHOUT_CLASSIFICATION	2.365558720646833E-5	TEST
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999658186671987	WITHOUT_CLASSIFICATION	3.41813328012582E-5	TEST
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999827761648301	WITHOUT_CLASSIFICATION	1.722383516982053E-5	TEST
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999974959061987	WITHOUT_CLASSIFICATION	2.504093801269319E-6	TEST
// static initializing method	WITHOUT_CLASSIFICATION	0.9999961259630457	WITHOUT_CLASSIFICATION	3.874036954329433E-6	TEST
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999557995725508	WITHOUT_CLASSIFICATION	4.420042744933281E-5	TEST
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999985434810567	WITHOUT_CLASSIFICATION	1.456518943340555E-6	TEST
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999574022958538	WITHOUT_CLASSIFICATION	4.2597704146069515E-5	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999870699087954	WITHOUT_CLASSIFICATION	1.2930091204649142E-5	TEST
// self // method name	WITHOUT_CLASSIFICATION	0.9999894898251701	WITHOUT_CLASSIFICATION	1.051017483002342E-5	TEST
// the default allocator	WITHOUT_CLASSIFICATION	0.9999970322934694	WITHOUT_CLASSIFICATION	2.967706530613092E-6	TEST
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999921264910558	WITHOUT_CLASSIFICATION	7.873508944143376E-6	TEST
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999892562262006	WITHOUT_CLASSIFICATION	1.0743773799343107E-5	TEST
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999919282022859	WITHOUT_CLASSIFICATION	8.071797714049049E-6	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999906866165926	WITHOUT_CLASSIFICATION	9.313383407292157E-6	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999738343588985	WITHOUT_CLASSIFICATION	2.61656411014342E-5	TEST
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.999995909917266	WITHOUT_CLASSIFICATION	4.090082734067846E-6	TEST
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.99999869957668	WITHOUT_CLASSIFICATION	1.300423319953727E-6	TEST
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999193484242718	WITHOUT_CLASSIFICATION	8.065157572828408E-5	TEST
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999520005407003	WITHOUT_CLASSIFICATION	4.799945929965522E-5	TEST
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999791367724081	WITHOUT_CLASSIFICATION	2.0863227591909047E-5	TEST
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999848729753699	WITHOUT_CLASSIFICATION	1.5127024630145492E-5	TEST
// a gotcha	WITHOUT_CLASSIFICATION	0.9999961701404052	WITHOUT_CLASSIFICATION	3.829859594843047E-6	TEST
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999993419170571	WITHOUT_CLASSIFICATION	6.580829430097367E-7	TEST
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999817301888719	WITHOUT_CLASSIFICATION	1.8269811128029483E-5	TEST
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999921264910558	WITHOUT_CLASSIFICATION	7.873508944143376E-6	TEST
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999855184647573	WITHOUT_CLASSIFICATION	1.4481535242828767E-5	TEST
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999919282022859	WITHOUT_CLASSIFICATION	8.071797714049049E-6	TEST
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999678530508165	WITHOUT_CLASSIFICATION	3.214694918362026E-5	TEST
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999831986988791	WITHOUT_CLASSIFICATION	1.6801301120935773E-5	TEST
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999848729753699	WITHOUT_CLASSIFICATION	1.5127024630145492E-5	TEST
// provider is not available	WITHOUT_CLASSIFICATION	0.9999058249368513	WITHOUT_CLASSIFICATION	9.417506314867673E-5	TEST
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999273441617527	WITHOUT_CLASSIFICATION	7.265583824740781E-5	TEST
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999912449004248	WITHOUT_CLASSIFICATION	8.755099575214133E-6	TEST
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999709920109746	WITHOUT_CLASSIFICATION	2.9007989025393235E-5	TEST
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999836506165912	WITHOUT_CLASSIFICATION	1.6349383408760323E-5	TEST
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999489290749822	WITHOUT_CLASSIFICATION	5.107092501773328E-5	TEST
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.999999555499115	WITHOUT_CLASSIFICATION	4.445008849992116E-7	TEST
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999981277219698	WITHOUT_CLASSIFICATION	1.8722780302359484E-6	TEST
// JRubyService	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// while	WITHOUT_CLASSIFICATION	0.9999382127414413	WITHOUT_CLASSIFICATION	6.178725855861637E-5	TEST
/* \OOO */	WITHOUT_CLASSIFICATION	0.9998443336975474	WITHOUT_CLASSIFICATION	1.5566630245257587E-4	TEST
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999995479180359	WITHOUT_CLASSIFICATION	4.5208196404100813E-7	TEST
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999870894564535	WITHOUT_CLASSIFICATION	1.2910543546468627E-5	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999870872531674	WITHOUT_CLASSIFICATION	1.2912746832587697E-5	TEST
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999704347727086	WITHOUT_CLASSIFICATION	2.956522729143517E-5	TEST
// silent ?	WITHOUT_CLASSIFICATION	0.9999950571900905	WITHOUT_CLASSIFICATION	4.942809909474552E-6	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9998443336975474	WITHOUT_CLASSIFICATION	1.5566630245257587E-4	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999640117477222	WITHOUT_CLASSIFICATION	3.598825227774907E-5	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999843875830868	WITHOUT_CLASSIFICATION	1.5612416913172648E-5	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999843875830868	WITHOUT_CLASSIFICATION	1.5612416913172648E-5	TEST
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999614580725606	WITHOUT_CLASSIFICATION	3.854192743929557E-5	TEST
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999742974752829	WITHOUT_CLASSIFICATION	2.5702524717150584E-5	TEST
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999843875830868	WITHOUT_CLASSIFICATION	1.5612416913172648E-5	TEST
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999884881104991	WITHOUT_CLASSIFICATION	1.1511889500991686E-5	TEST
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999843875830868	WITHOUT_CLASSIFICATION	1.5612416913172648E-5	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9998443336975474	WITHOUT_CLASSIFICATION	1.5566630245257587E-4	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999843875830868	WITHOUT_CLASSIFICATION	1.5612416913172648E-5	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999640117477222	WITHOUT_CLASSIFICATION	3.598825227774907E-5	TEST
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999203461213746	WITHOUT_CLASSIFICATION	7.965387862535148E-5	TEST
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999843875830868	WITHOUT_CLASSIFICATION	1.5612416913172648E-5	TEST
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999843875830868	WITHOUT_CLASSIFICATION	1.5612416913172648E-5	TEST
// inner switch	WITHOUT_CLASSIFICATION	0.9999964356839331	WITHOUT_CLASSIFICATION	3.5643160669055544E-6	TEST
// newInstance here	WITHOUT_CLASSIFICATION	0.9999841136754944	WITHOUT_CLASSIFICATION	1.588632450556734E-5	TEST
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999848729753699	WITHOUT_CLASSIFICATION	1.5127024630145492E-5	TEST
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999848729753699	WITHOUT_CLASSIFICATION	1.5127024630145492E-5	TEST
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999798278403852	WITHOUT_CLASSIFICATION	2.0172159614826963E-5	TEST
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// option_to_str	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999943204037908	WITHOUT_CLASSIFICATION	5.679596209260294E-6	TEST
// args should be before block	WITHOUT_CLASSIFICATION	0.9999703551352326	WITHOUT_CLASSIFICATION	2.964486476753132E-5	TEST
// args should be at end	WITHOUT_CLASSIFICATION	0.9999682968494068	WITHOUT_CLASSIFICATION	3.170315059314538E-5	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.999896826954634	WITHOUT_CLASSIFICATION	1.0317304536599534E-4	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.999896826954634	WITHOUT_CLASSIFICATION	1.0317304536599534E-4	TEST
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999878501359567	WITHOUT_CLASSIFICATION	1.2149864043200378E-5	TEST
// start a new populator	WITHOUT_CLASSIFICATION	0.999984225216954	WITHOUT_CLASSIFICATION	1.577478304604421E-5	TEST
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999825186905167	WITHOUT_CLASSIFICATION	1.748130948329298E-5	TEST
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.999656015636683	WITHOUT_CLASSIFICATION	3.4398436331692416E-4	TEST
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999891886542578	WITHOUT_CLASSIFICATION	1.081134574230703E-5	TEST
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999366075849943	WITHOUT_CLASSIFICATION	6.339241500566713E-5	TEST
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999812501287302	WITHOUT_CLASSIFICATION	1.8749871269884262E-5	TEST
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.999969063419363	WITHOUT_CLASSIFICATION	3.093658063694752E-5	TEST
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999880467575261	WITHOUT_CLASSIFICATION	1.1953242473851509E-5	TEST
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999970818603153	WITHOUT_CLASSIFICATION	2.9181396846021435E-6	TEST
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.999983809329094	WITHOUT_CLASSIFICATION	1.619067090603097E-5	TEST
//                }	WITHOUT_CLASSIFICATION	0.9999927265779625	WITHOUT_CLASSIFICATION	7.2734220375278005E-6	TEST
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999641574010891	WITHOUT_CLASSIFICATION	3.5842598910853264E-5	TEST
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9996183514160254	WITHOUT_CLASSIFICATION	3.816485839745563E-4	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999373573875188	WITHOUT_CLASSIFICATION	6.264261248120402E-5	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999872787517634	WITHOUT_CLASSIFICATION	1.272124823660505E-5	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999978095525888	WITHOUT_CLASSIFICATION	2.1904474113032085E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999992553514889	WITHOUT_CLASSIFICATION	7.446485111055419E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999992553514889	WITHOUT_CLASSIFICATION	7.446485111055419E-6	TEST
// colon3	WITHOUT_CLASSIFICATION	0.9999345638863254	WITHOUT_CLASSIFICATION	6.543611367458778E-5	TEST
// Colon3	WITHOUT_CLASSIFICATION	0.9999345638863254	WITHOUT_CLASSIFICATION	6.543611367458778E-5	TEST
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999240330111566	WITHOUT_CLASSIFICATION	7.596698884335399E-5	TEST
// For b.foo	WITHOUT_CLASSIFICATION	0.9999902721747493	WITHOUT_CLASSIFICATION	9.727825250743247E-6	TEST
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999835805559639	WITHOUT_CLASSIFICATION	1.6419444036065885E-5	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999992553514889	WITHOUT_CLASSIFICATION	7.446485111055419E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999992553514889	WITHOUT_CLASSIFICATION	7.446485111055419E-6	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999797653011893	WITHOUT_CLASSIFICATION	2.0234698810739844E-5	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999797653011893	WITHOUT_CLASSIFICATION	2.0234698810739844E-5	TEST
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9998336285686349	WITHOUT_CLASSIFICATION	1.663714313651702E-4	TEST
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999902721747493	WITHOUT_CLASSIFICATION	9.727825250743247E-6	TEST
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999975208905835	WITHOUT_CLASSIFICATION	2.4791094165373814E-6	TEST
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999822486475168	WITHOUT_CLASSIFICATION	1.7751352483146285E-5	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999906410394789	WITHOUT_CLASSIFICATION	9.358960521086385E-6	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999906410394789	WITHOUT_CLASSIFICATION	9.358960521086385E-6	TEST
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999951182683937	WITHOUT_CLASSIFICATION	4.88173160638437E-6	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999470708053485	WITHOUT_CLASSIFICATION	5.292919465135612E-5	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999970302673061	WITHOUT_CLASSIFICATION	2.969732693902817E-5	TEST
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9999445182614983	WITHOUT_CLASSIFICATION	5.5481738501730315E-5	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999797653011893	WITHOUT_CLASSIFICATION	2.0234698810739844E-5	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.999991075344104	WITHOUT_CLASSIFICATION	8.924655896029207E-6	TEST
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9996419534841404	WITHOUT_CLASSIFICATION	3.5804651585955526E-4	TEST
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.999989706373916	WITHOUT_CLASSIFICATION	1.0293626083950286E-5	TEST
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999879793617574	WITHOUT_CLASSIFICATION	1.2020638242474281E-5	TEST
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999982813075344	WITHOUT_CLASSIFICATION	1.7186924656143378E-6	TEST
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999113499232162	WITHOUT_CLASSIFICATION	8.865007678380716E-5	TEST
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999603145235033	WITHOUT_CLASSIFICATION	3.968547649674345E-5	TEST
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999943670878334	WITHOUT_CLASSIFICATION	5.632912166611427E-6	TEST
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999954183216413	WITHOUT_CLASSIFICATION	4.581678358805313E-6	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999872787517634	WITHOUT_CLASSIFICATION	1.272124823660505E-5	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999992553514889	WITHOUT_CLASSIFICATION	7.446485111055419E-6	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999797653011893	WITHOUT_CLASSIFICATION	2.0234698810739844E-5	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.999991075344104	WITHOUT_CLASSIFICATION	8.924655896029207E-6	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999970988154215	WITHOUT_CLASSIFICATION	2.9011845784281684E-6	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999970988154215	WITHOUT_CLASSIFICATION	2.9011845784281684E-6	TEST
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999876644506065	WITHOUT_CLASSIFICATION	1.2335549393444964E-5	TEST
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999966345509369	WITHOUT_CLASSIFICATION	3.365449063007536E-6	TEST
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999958255488106	WITHOUT_CLASSIFICATION	4.174451189388677E-6	TEST
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999992784790465	WITHOUT_CLASSIFICATION	7.215209535046334E-7	TEST
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9998818375772619	WITHOUT_CLASSIFICATION	1.1816242273814076E-4	TEST
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999987409009139	WITHOUT_CLASSIFICATION	1.2590990861186698E-6	TEST
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999427393882703	WITHOUT_CLASSIFICATION	5.726061172975328E-5	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9998374609790065	WITHOUT_CLASSIFICATION	1.6253902099353009E-4	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999993259449742	WITHOUT_CLASSIFICATION	6.740550257815302E-7	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999695185222661	WITHOUT_CLASSIFICATION	3.0481477733839035E-5	TEST
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999781557152003	WITHOUT_CLASSIFICATION	2.184428479962589E-5	TEST
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999991985481125	WITHOUT_CLASSIFICATION	8.014518874922943E-7	TEST
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999878750713226	WITHOUT_CLASSIFICATION	1.21249286773744E-5	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999978095525888	WITHOUT_CLASSIFICATION	2.1904474113032085E-6	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999797653011893	WITHOUT_CLASSIFICATION	2.0234698810739844E-5	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999470708053485	WITHOUT_CLASSIFICATION	5.292919465135612E-5	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999970302673061	WITHOUT_CLASSIFICATION	2.969732693902817E-5	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999970302673061	WITHOUT_CLASSIFICATION	2.969732693902817E-5	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999797653011893	WITHOUT_CLASSIFICATION	2.0234698810739844E-5	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.999991075344104	WITHOUT_CLASSIFICATION	8.924655896029207E-6	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.999991075344104	WITHOUT_CLASSIFICATION	8.924655896029207E-6	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999970988154215	WITHOUT_CLASSIFICATION	2.9011845784281684E-6	TEST
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.999987803329665	WITHOUT_CLASSIFICATION	1.2196670335072249E-5	TEST
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9994197211932994	WITHOUT_CLASSIFICATION	5.802788067005589E-4	TEST
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999993407478078	WITHOUT_CLASSIFICATION	6.59252192186055E-7	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999229539576041	WITHOUT_CLASSIFICATION	7.704604239586619E-5	TEST
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999328309788642	WITHOUT_CLASSIFICATION	6.716902113586146E-5	TEST
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9990195162893295	WITHOUT_CLASSIFICATION	9.804837106704733E-4	TEST
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999767735181254	WITHOUT_CLASSIFICATION	2.322648187460362E-5	TEST
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.999994550817649	WITHOUT_CLASSIFICATION	5.449182351021104E-6	TEST
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999879281083445	WITHOUT_CLASSIFICATION	1.2071891655477546E-5	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999470708053485	WITHOUT_CLASSIFICATION	5.292919465135612E-5	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999970302673061	WITHOUT_CLASSIFICATION	2.969732693902817E-5	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999970302673061	WITHOUT_CLASSIFICATION	2.969732693902817E-5	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999797653011893	WITHOUT_CLASSIFICATION	2.0234698810739844E-5	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9998374609790065	WITHOUT_CLASSIFICATION	1.6253902099353009E-4	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999695185222661	WITHOUT_CLASSIFICATION	3.0481477733839035E-5	TEST
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9990432293630632	WITHOUT_CLASSIFICATION	9.567706369367677E-4	TEST
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999980143365435	WITHOUT_CLASSIFICATION	1.985663456645646E-6	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999902721747493	WITHOUT_CLASSIFICATION	9.727825250743247E-6	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999902721747493	WITHOUT_CLASSIFICATION	9.727825250743247E-6	TEST
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999848729753699	WITHOUT_CLASSIFICATION	1.5127024630145492E-5	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999825970707232	WITHOUT_CLASSIFICATION	1.7402929276760814E-5	TEST
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999606677967839	WITHOUT_CLASSIFICATION	3.93322032159521E-5	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999856088060398	WITHOUT_CLASSIFICATION	1.4391193960212647E-5	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.9999982925443243	WITHOUT_CLASSIFICATION	1.7074556756579343E-6	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.9999982925443243	WITHOUT_CLASSIFICATION	1.7074556756579343E-6	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999777005692081	WITHOUT_CLASSIFICATION	2.2299430791891815E-5	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999777005692081	WITHOUT_CLASSIFICATION	2.2299430791891815E-5	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999950432330038	WITHOUT_CLASSIFICATION	4.9567669961271285E-6	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999950432330038	WITHOUT_CLASSIFICATION	4.9567669961271285E-6	TEST
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999857168491741	WITHOUT_CLASSIFICATION	1.4283150825828677E-5	TEST
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.999981150848176	WITHOUT_CLASSIFICATION	1.884915182399335E-5	TEST
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.999886950182676	WITHOUT_CLASSIFICATION	1.1304981732399801E-4	TEST
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999923162003322	WITHOUT_CLASSIFICATION	7.68379966777731E-6	TEST
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.999999595981283	WITHOUT_CLASSIFICATION	4.040187170749379E-7	TEST
// pragmas	WITHOUT_CLASSIFICATION	0.9999345638863254	WITHOUT_CLASSIFICATION	6.543611367458778E-5	TEST
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999968559977297	WITHOUT_CLASSIFICATION	3.1440022703274755E-6	TEST
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999984313872081	WITHOUT_CLASSIFICATION	1.5686127919405626E-6	TEST
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9998612548943201	WITHOUT_CLASSIFICATION	1.3874510567993717E-4	TEST
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9998333882670298	WITHOUT_CLASSIFICATION	1.6661173297013358E-4	TEST
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999982468631258	WITHOUT_CLASSIFICATION	1.7531368742459963E-6	TEST
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999927678477871	WITHOUT_CLASSIFICATION	7.232152212913077E-6	TEST
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9998843960129221	WITHOUT_CLASSIFICATION	1.1560398707786747E-4	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999878647819217	WITHOUT_CLASSIFICATION	1.2135218078306566E-5	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999878647819217	WITHOUT_CLASSIFICATION	1.2135218078306566E-5	TEST
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9998848161139235	WITHOUT_CLASSIFICATION	1.1518388607650306E-4	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999945080182131	WITHOUT_CLASSIFICATION	5.4919817869687294E-6	TEST
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9998572646269712	WITHOUT_CLASSIFICATION	1.4273537302877557E-4	TEST
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999974788036622	WITHOUT_CLASSIFICATION	2.521196337867963E-6	TEST
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999932130153191	WITHOUT_CLASSIFICATION	6.786984680868555E-6	TEST
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999781982744402	WITHOUT_CLASSIFICATION	2.1801725559796614E-5	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999886745529495	WITHOUT_CLASSIFICATION	1.1325447050432611E-5	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999923004932921	WITHOUT_CLASSIFICATION	7.699506707881842E-6	TEST
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999988710624095	WITHOUT_CLASSIFICATION	1.1289375905349114E-6	TEST
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999654301151123	WITHOUT_CLASSIFICATION	3.4569884887754157E-5	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.99999181208324	WITHOUT_CLASSIFICATION	8.187916760027705E-6	TEST
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9997979186643032	WITHOUT_CLASSIFICATION	2.0208133569682806E-4	TEST
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999148774312557	WITHOUT_CLASSIFICATION	8.512256874430917E-5	TEST
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999837132004952	WITHOUT_CLASSIFICATION	1.628679950485081E-5	TEST
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9998612452992258	WITHOUT_CLASSIFICATION	1.387547007742907E-4	TEST
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999014604696516	WITHOUT_CLASSIFICATION	9.8539530348437E-5	TEST
// can't do it	WITHOUT_CLASSIFICATION	0.9999857229424048	WITHOUT_CLASSIFICATION	1.4277057595094796E-5	TEST
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999836333280362	WITHOUT_CLASSIFICATION	1.6366671963878663E-5	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999928147087463	WITHOUT_CLASSIFICATION	7.1852912537213485E-6	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999928147087463	WITHOUT_CLASSIFICATION	7.1852912537213485E-6	TEST
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999742773166964	WITHOUT_CLASSIFICATION	2.5722683303592885E-5	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.999591223760613	WITHOUT_CLASSIFICATION	4.087762393869918E-4	TEST
//[]	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
//[]	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999603145235033	WITHOUT_CLASSIFICATION	3.968547649674345E-5	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.999591223760613	WITHOUT_CLASSIFICATION	4.087762393869918E-4	TEST
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.999591223760613	WITHOUT_CLASSIFICATION	4.087762393869918E-4	TEST
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999980278032713	WITHOUT_CLASSIFICATION	1.9721967287663293E-6	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999961001848346	WITHOUT_CLASSIFICATION	3.899815165368641E-6	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999961001848346	WITHOUT_CLASSIFICATION	3.899815165368641E-6	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.999997774251981	WITHOUT_CLASSIFICATION	2.2257480190441507E-6	TEST
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999966207079608	WITHOUT_CLASSIFICATION	3.379292039163909E-6	TEST
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999414385726338	WITHOUT_CLASSIFICATION	5.856142736605397E-5	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.999591223760613	WITHOUT_CLASSIFICATION	4.087762393869918E-4	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.999591223760613	WITHOUT_CLASSIFICATION	4.087762393869918E-4	TEST
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.999591223760613	WITHOUT_CLASSIFICATION	4.087762393869918E-4	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.999591223760613	WITHOUT_CLASSIFICATION	4.087762393869918E-4	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999156807159295	WITHOUT_CLASSIFICATION	8.431928407058664E-5	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999996730615897	WITHOUT_CLASSIFICATION	3.26938410312672E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999996730615897	WITHOUT_CLASSIFICATION	3.26938410312672E-6	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.999982756804186	WITHOUT_CLASSIFICATION	1.7243195813941312E-5	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.999982756804186	WITHOUT_CLASSIFICATION	1.7243195813941312E-5	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.999982756804186	WITHOUT_CLASSIFICATION	1.7243195813941312E-5	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999996730615897	WITHOUT_CLASSIFICATION	3.26938410312672E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999996730615897	WITHOUT_CLASSIFICATION	3.26938410312672E-6	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999156807159295	WITHOUT_CLASSIFICATION	8.431928407058664E-5	TEST
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999793022265129	WITHOUT_CLASSIFICATION	2.0697773487166896E-5	TEST
// always false or nil	WITHOUT_CLASSIFICATION	0.999986787007206	WITHOUT_CLASSIFICATION	1.3212992794008238E-5	TEST
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999760354633902	WITHOUT_CLASSIFICATION	2.3964536609733614E-5	TEST
// normal	WITHOUT_CLASSIFICATION	0.999936019739949	WITHOUT_CLASSIFICATION	6.398026005105349E-5	TEST
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999993953774893	WITHOUT_CLASSIFICATION	6.046225107623232E-7	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999534636406047	WITHOUT_CLASSIFICATION	4.653635939529436E-5	TEST
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.999995137144798	WITHOUT_CLASSIFICATION	4.862855201918918E-6	TEST
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.999966181321714	WITHOUT_CLASSIFICATION	3.38186782860558E-5	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.99999181208324	WITHOUT_CLASSIFICATION	8.187916760027705E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999996730615897	WITHOUT_CLASSIFICATION	3.26938410312672E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999996730615897	WITHOUT_CLASSIFICATION	3.26938410312672E-6	TEST
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999825998362123	WITHOUT_CLASSIFICATION	1.7400163787706816E-5	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999937748697605	WITHOUT_CLASSIFICATION	6.225130239447193E-6	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999957050906856	WITHOUT_CLASSIFICATION	4.29490931446292E-6	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999904820829528	WITHOUT_CLASSIFICATION	9.517917047170888E-6	TEST
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999920579550562	WITHOUT_CLASSIFICATION	7.942044943699444E-6	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999975367846585	WITHOUT_CLASSIFICATION	2.4632153415288747E-6	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999904708930307	WITHOUT_CLASSIFICATION	9.529106969266662E-6	TEST
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999995112986265	WITHOUT_CLASSIFICATION	4.887013735220789E-7	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999896246515542	WITHOUT_CLASSIFICATION	1.037534844586811E-5	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999911298756409	WITHOUT_CLASSIFICATION	8.870124359172238E-6	TEST
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9998331931802459	WITHOUT_CLASSIFICATION	1.6680681975410512E-4	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.9999578326911711	WITHOUT_CLASSIFICATION	4.216730882880416E-5	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999601525523468	WITHOUT_CLASSIFICATION	3.984744765316833E-5	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999891662641727	WITHOUT_CLASSIFICATION	1.0833735827390224E-5	TEST
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999996813469103	WITHOUT_CLASSIFICATION	3.186530896855818E-7	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999345638863254	WITHOUT_CLASSIFICATION	6.543611367458778E-5	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999345638863254	WITHOUT_CLASSIFICATION	6.543611367458778E-5	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999345638863254	WITHOUT_CLASSIFICATION	6.543611367458778E-5	TEST
// compile into array	WITHOUT_CLASSIFICATION	0.9999898874698127	WITHOUT_CLASSIFICATION	1.0112530187310478E-5	TEST
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999987595972839	WITHOUT_CLASSIFICATION	1.240402716043329E-6	TEST
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999957893770233	WITHOUT_CLASSIFICATION	4.2106229766701855E-6	TEST
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999177192037886	WITHOUT_CLASSIFICATION	8.22807962114454E-5	TEST
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999925146714899	WITHOUT_CLASSIFICATION	7.485328510076654E-6	TEST
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999939722149175	WITHOUT_CLASSIFICATION	6.0277850824276144E-6	TEST
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999991793556394	WITHOUT_CLASSIFICATION	8.206443605257412E-7	TEST
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999288483309927	WITHOUT_CLASSIFICATION	7.11516690072672E-5	TEST
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999791445579636	WITHOUT_CLASSIFICATION	2.085544203645344E-5	TEST
// leave as a normal array	WITHOUT_CLASSIFICATION	0.999997821902983	WITHOUT_CLASSIFICATION	2.1780970170668165E-6	TEST
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999964441482985	WITHOUT_CLASSIFICATION	3.5558517014645677E-6	TEST
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999505137405473	WITHOUT_CLASSIFICATION	4.948625945258425E-5	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.999997774251981	WITHOUT_CLASSIFICATION	2.2257480190441507E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999996730615897	WITHOUT_CLASSIFICATION	3.26938410312672E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999996730615897	WITHOUT_CLASSIFICATION	3.26938410312672E-6	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999156807159295	WITHOUT_CLASSIFICATION	8.431928407058664E-5	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999534636406047	WITHOUT_CLASSIFICATION	4.653635939529436E-5	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999937748697605	WITHOUT_CLASSIFICATION	6.225130239447193E-6	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999904820829528	WITHOUT_CLASSIFICATION	9.517917047170888E-6	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999975367846585	WITHOUT_CLASSIFICATION	2.4632153415288747E-6	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999957050906856	WITHOUT_CLASSIFICATION	4.29490931446292E-6	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999904708930307	WITHOUT_CLASSIFICATION	9.529106969266662E-6	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999911298756409	WITHOUT_CLASSIFICATION	8.870124359172238E-6	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999896246515542	WITHOUT_CLASSIFICATION	1.037534844586811E-5	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.9999578326911711	WITHOUT_CLASSIFICATION	4.216730882880416E-5	TEST
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999977327255855	WITHOUT_CLASSIFICATION	2.267274414583433E-6	TEST
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999982738636304	WITHOUT_CLASSIFICATION	1.7261363696517294E-6	TEST
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999948232732787	WITHOUT_CLASSIFICATION	5.176726721343095E-6	TEST
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999933522678981	WITHOUT_CLASSIFICATION	6.647732101985599E-6	TEST
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999753141601808	WITHOUT_CLASSIFICATION	2.4685839819274268E-5	TEST
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999944345346072	WITHOUT_CLASSIFICATION	5.565465392681647E-6	TEST
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999949003717459	WITHOUT_CLASSIFICATION	5.099628254102975E-6	TEST
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999491881430842	WITHOUT_CLASSIFICATION	5.081185691575576E-5	TEST
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999917711008973	WITHOUT_CLASSIFICATION	8.228899102734021E-6	TEST
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999995489897454	WITHOUT_CLASSIFICATION	4.5101025450753646E-7	TEST
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999918037148489	WITHOUT_CLASSIFICATION	8.196285151124295E-6	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999922309920098	WITHOUT_CLASSIFICATION	7.769007990195995E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999969182554193	WITHOUT_CLASSIFICATION	3.0817445807003706E-5	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999969529851139	WITHOUT_CLASSIFICATION	3.0470148859467117E-6	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999915523210168	WITHOUT_CLASSIFICATION	8.447678983283103E-6	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.999993316842043	WITHOUT_CLASSIFICATION	6.683157957024376E-6	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.999983036112965	WITHOUT_CLASSIFICATION	1.6963887035005676E-5	TEST
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999958587165074	WITHOUT_CLASSIFICATION	4.141283492551738E-6	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999973265139097	WITHOUT_CLASSIFICATION	2.6734860902287985E-6	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.99999722070887	WITHOUT_CLASSIFICATION	2.7792911300732667E-6	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999972341125034	WITHOUT_CLASSIFICATION	2.7658874965593217E-6	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999987634728161	WITHOUT_CLASSIFICATION	1.2365271838372817E-6	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999987634728161	WITHOUT_CLASSIFICATION	1.2365271838372817E-6	TEST
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9997695765004667	WITHOUT_CLASSIFICATION	2.3042349953335237E-4	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999928935704886	WITHOUT_CLASSIFICATION	7.1064295114029855E-6	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
/*arg2*/	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999928935704886	WITHOUT_CLASSIFICATION	7.1064295114029855E-6	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999840107693162	WITHOUT_CLASSIFICATION	1.598923068377051E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.999997786989195	WITHOUT_CLASSIFICATION	2.21301080504128E-6	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.999997786989195	WITHOUT_CLASSIFICATION	2.21301080504128E-6	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999929346936652	WITHOUT_CLASSIFICATION	7.065306334766625E-6	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999929346936652	WITHOUT_CLASSIFICATION	7.065306334766625E-6	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9999351355782904	WITHOUT_CLASSIFICATION	6.486442170958882E-5	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9999351355782904	WITHOUT_CLASSIFICATION	6.486442170958882E-5	TEST
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999593293363707	WITHOUT_CLASSIFICATION	4.0670663629390714E-5	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999412933242355	WITHOUT_CLASSIFICATION	5.8706675764500635E-5	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999412933242355	WITHOUT_CLASSIFICATION	5.8706675764500635E-5	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999865155591501	WITHOUT_CLASSIFICATION	1.3484440849985667E-5	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999865155591501	WITHOUT_CLASSIFICATION	1.3484440849985667E-5	TEST
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999784516689301	WITHOUT_CLASSIFICATION	2.154833106990031E-5	TEST
// call site	WITHOUT_CLASSIFICATION	0.9999964640696133	WITHOUT_CLASSIFICATION	3.535930386704019E-6	TEST
// call site	WITHOUT_CLASSIFICATION	0.9999964640696133	WITHOUT_CLASSIFICATION	3.535930386704019E-6	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.999995677030193	WITHOUT_CLASSIFICATION	4.322969806988791E-6	TEST
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999385749412734	WITHOUT_CLASSIFICATION	6.142505872666286E-5	TEST
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999909688555648	WITHOUT_CLASSIFICATION	9.03114443513738E-6	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.999995677030193	WITHOUT_CLASSIFICATION	4.322969806988791E-6	TEST
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999609035676926	WITHOUT_CLASSIFICATION	3.9096432307326804E-5	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999927408375952	WITHOUT_CLASSIFICATION	7.259162404768191E-6	TEST
// args	WITHOUT_CLASSIFICATION	0.9999355452293294	WITHOUT_CLASSIFICATION	6.445477067057238E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999362954414281	WITHOUT_CLASSIFICATION	6.370455857185054E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999362954414281	WITHOUT_CLASSIFICATION	6.370455857185054E-5	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999968777265893	WITHOUT_CLASSIFICATION	3.122273410759128E-6	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999631953617386	WITHOUT_CLASSIFICATION	3.6804638261471455E-5	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.9999631953617386	WITHOUT_CLASSIFICATION	3.680463826147142E-5	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.9999247684504531	WITHOUT_CLASSIFICATION	7.523154954691798E-5	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999665180549758	WITHOUT_CLASSIFICATION	3.3481945024057415E-5	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999855099684496	WITHOUT_CLASSIFICATION	1.4490031550361875E-5	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999855099684496	WITHOUT_CLASSIFICATION	1.4490031550361875E-5	TEST
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999972344554471	WITHOUT_CLASSIFICATION	2.7655445530037064E-6	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// args	WITHOUT_CLASSIFICATION	0.9999355452293294	WITHOUT_CLASSIFICATION	6.445477067057238E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999362954414281	WITHOUT_CLASSIFICATION	6.370455857185054E-5	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999968777265893	WITHOUT_CLASSIFICATION	3.122273410759128E-6	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999631953617386	WITHOUT_CLASSIFICATION	3.6804638261471455E-5	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.9999631953617386	WITHOUT_CLASSIFICATION	3.680463826147142E-5	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.9999247684504531	WITHOUT_CLASSIFICATION	7.523154954691798E-5	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999853378203194	WITHOUT_CLASSIFICATION	1.4662179680603812E-5	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999981894575597	WITHOUT_CLASSIFICATION	1.8105424403305509E-6	TEST
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.999992075755743	WITHOUT_CLASSIFICATION	7.924244257070332E-6	TEST
// add name to call site list	WITHOUT_CLASSIFICATION	0.999989303397441	WITHOUT_CLASSIFICATION	1.0696602558943114E-5	TEST
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999764603179003	WITHOUT_CLASSIFICATION	2.353968209974801E-5	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999547631242243	WITHOUT_CLASSIFICATION	4.5236875775676675E-5	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999566557323302	WITHOUT_CLASSIFICATION	4.334426766991022E-5	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999566557323302	WITHOUT_CLASSIFICATION	4.334426766991022E-5	TEST
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999882621131483	WITHOUT_CLASSIFICATION	1.1737886851669382E-5	TEST
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999783018330999	WITHOUT_CLASSIFICATION	2.1698166900106123E-5	TEST
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999783018330999	WITHOUT_CLASSIFICATION	2.1698166900106123E-5	TEST
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999790137846849	WITHOUT_CLASSIFICATION	2.098621531517516E-5	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999783449280213	WITHOUT_CLASSIFICATION	2.165507197876048E-5	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999783449280213	WITHOUT_CLASSIFICATION	2.165507197876048E-5	TEST
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999753746527551	WITHOUT_CLASSIFICATION	2.4625347244966355E-5	TEST
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999753870168665	WITHOUT_CLASSIFICATION	2.4612983133504576E-5	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999788757690959	WITHOUT_CLASSIFICATION	2.112423090405743E-5	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999788757690959	WITHOUT_CLASSIFICATION	2.112423090405743E-5	TEST
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999783018330999	WITHOUT_CLASSIFICATION	2.1698166900106123E-5	TEST
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999942880509247	WITHOUT_CLASSIFICATION	5.711949075306658E-6	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999665180549758	WITHOUT_CLASSIFICATION	3.3481945024057415E-5	TEST
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999965981209958	WITHOUT_CLASSIFICATION	3.401879004209002E-6	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999239771655478	WITHOUT_CLASSIFICATION	7.602283445218218E-5	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999849328421361	WITHOUT_CLASSIFICATION	1.5067157863855519E-5	TEST
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999903022667174	WITHOUT_CLASSIFICATION	9.697733282550229E-6	TEST
// load Object under value	WITHOUT_CLASSIFICATION	0.9999639191549273	WITHOUT_CLASSIFICATION	3.6080845072654236E-5	TEST
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999547174717912	WITHOUT_CLASSIFICATION	4.528252820875552E-5	TEST
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999858907313314	WITHOUT_CLASSIFICATION	1.4109268668510669E-5	TEST
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999901389354205	WITHOUT_CLASSIFICATION	9.861064579449306E-6	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999949154569444	WITHOUT_CLASSIFICATION	5.084543055520531E-6	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999949154569444	WITHOUT_CLASSIFICATION	5.084543055520531E-6	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999669157869034	WITHOUT_CLASSIFICATION	3.308421309656406E-5	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999669157869034	WITHOUT_CLASSIFICATION	3.308421309656406E-5	TEST
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.999995408535554	WITHOUT_CLASSIFICATION	4.591464446039569E-6	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.99999781495064	WITHOUT_CLASSIFICATION	2.185049360055679E-6	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.99999781495064	WITHOUT_CLASSIFICATION	2.185049360055679E-6	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.99999781495064	WITHOUT_CLASSIFICATION	2.185049360055679E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999823498771035	WITHOUT_CLASSIFICATION	1.7650122896448232E-5	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.999980548242019	WITHOUT_CLASSIFICATION	1.9451757980978487E-5	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.999980548242019	WITHOUT_CLASSIFICATION	1.9451757980978487E-5	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999859136688399	WITHOUT_CLASSIFICATION	1.4086331160138906E-5	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.9999974949376107	WITHOUT_CLASSIFICATION	2.5050623894236954E-6	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999791185433411	WITHOUT_CLASSIFICATION	2.0881456658852136E-5	TEST
// skip catch block	WITHOUT_CLASSIFICATION	0.9999946409423431	WITHOUT_CLASSIFICATION	5.359057656839135E-6	TEST
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999652100529415	WITHOUT_CLASSIFICATION	3.478994705845489E-5	TEST
// next jump	WITHOUT_CLASSIFICATION	0.9999944632000437	WITHOUT_CLASSIFICATION	5.536799956258042E-6	TEST
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9991014299552506	WITHOUT_CLASSIFICATION	8.985700447493864E-4	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999969182554193	WITHOUT_CLASSIFICATION	3.0817445807003706E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999969182554193	WITHOUT_CLASSIFICATION	3.0817445807003706E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999823498771035	WITHOUT_CLASSIFICATION	1.7650122896448232E-5	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999859136688399	WITHOUT_CLASSIFICATION	1.4086331160138906E-5	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999927557177455	WITHOUT_CLASSIFICATION	7.244282254476118E-6	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.9999974949376107	WITHOUT_CLASSIFICATION	2.5050623894236954E-6	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999791185433411	WITHOUT_CLASSIFICATION	2.0881456658852136E-5	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999877486786288	WITHOUT_CLASSIFICATION	1.2251321371215277E-5	TEST
// break jump	WITHOUT_CLASSIFICATION	0.9999940248837694	WITHOUT_CLASSIFICATION	5.975116230538991E-6	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998319902818373	WITHOUT_CLASSIFICATION	1.6800971816269546E-4	TEST
//[reg]	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999293834154854	WITHOUT_CLASSIFICATION	7.061658451459489E-5	TEST
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999982201363704	WITHOUT_CLASSIFICATION	1.7798636295965363E-6	TEST
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999960614865647	WITHOUT_CLASSIFICATION	3.938513435234137E-6	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999877486786288	WITHOUT_CLASSIFICATION	1.2251321371215277E-5	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999641175470102	WITHOUT_CLASSIFICATION	3.588245298984065E-5	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999641175470102	WITHOUT_CLASSIFICATION	3.588245298984065E-5	TEST
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999704573244289	WITHOUT_CLASSIFICATION	2.954267557111424E-5	TEST
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999948923774059	WITHOUT_CLASSIFICATION	5.107622594113537E-6	TEST
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999958767890544	WITHOUT_CLASSIFICATION	4.123210945603327E-6	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999751976794061	WITHOUT_CLASSIFICATION	2.4802320593949948E-5	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999776912743548	WITHOUT_CLASSIFICATION	2.2308725645253592E-5	TEST
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999948938399587	WITHOUT_CLASSIFICATION	5.10616004140316E-6	TEST
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999905916604767	WITHOUT_CLASSIFICATION	9.408339523366462E-6	TEST
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999675548609294	WITHOUT_CLASSIFICATION	3.244513907058742E-5	TEST
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999982652793603	WITHOUT_CLASSIFICATION	1.7347206396887552E-6	TEST
// false // zero	WITHOUT_CLASSIFICATION	0.9999951747559912	WITHOUT_CLASSIFICATION	4.82524400876563E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999794207223038	WITHOUT_CLASSIFICATION	2.0579277696216686E-5	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999751976794061	WITHOUT_CLASSIFICATION	2.4802320593949948E-5	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999776912743548	WITHOUT_CLASSIFICATION	2.2308725645253592E-5	TEST
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999947774380592	WITHOUT_CLASSIFICATION	5.222561940764615E-6	TEST
// push false	WITHOUT_CLASSIFICATION	0.9999938576756886	WITHOUT_CLASSIFICATION	6.142324311456806E-6	TEST
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.999591223760613	WITHOUT_CLASSIFICATION	4.087762393869918E-4	TEST
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9998152783318226	WITHOUT_CLASSIFICATION	1.8472166817743522E-4	TEST
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999536954103491	WITHOUT_CLASSIFICATION	4.6304589650969994E-5	TEST
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.999591223760613	WITHOUT_CLASSIFICATION	4.087762393869918E-4	TEST
//[C]	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
// push true	WITHOUT_CLASSIFICATION	0.9999946632682101	WITHOUT_CLASSIFICATION	5.336731789855196E-6	TEST
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999797806466607	WITHOUT_CLASSIFICATION	2.0219353339344543E-5	TEST
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9998152783318226	WITHOUT_CLASSIFICATION	1.8472166817743522E-4	TEST
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.999591223760613	WITHOUT_CLASSIFICATION	4.087762393869918E-4	TEST
//[boolean]	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999892301622166	WITHOUT_CLASSIFICATION	1.0769837783252123E-5	TEST
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999599676241769	WITHOUT_CLASSIFICATION	4.003237582305715E-5	TEST
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9998893924586052	WITHOUT_CLASSIFICATION	1.1060754139475352E-4	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999994739468099	WITHOUT_CLASSIFICATION	5.260531900256532E-7	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999934407694974	WITHOUT_CLASSIFICATION	6.55923050258254E-6	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999942206109467	WITHOUT_CLASSIFICATION	5.779389053332562E-6	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999946243837413	WITHOUT_CLASSIFICATION	5.3756162587381275E-6	TEST
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.999972863403065	WITHOUT_CLASSIFICATION	2.7136596935002814E-5	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999934407694974	WITHOUT_CLASSIFICATION	6.55923050258254E-6	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999942206109467	WITHOUT_CLASSIFICATION	5.779389053332562E-6	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999946243837413	WITHOUT_CLASSIFICATION	5.3756162587381275E-6	TEST
// finally with exception	WITHOUT_CLASSIFICATION	0.999926140801548	WITHOUT_CLASSIFICATION	7.385919845203672E-5	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999991122484587	WITHOUT_CLASSIFICATION	8.877515414331553E-7	TEST
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999748512627805	WITHOUT_CLASSIFICATION	2.514873721945363E-5	TEST
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9997811811697188	WITHOUT_CLASSIFICATION	2.1881883028108124E-4	TEST
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999598229421195	WITHOUT_CLASSIFICATION	4.0177057880542886E-5	TEST
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999788473901968	WITHOUT_CLASSIFICATION	2.1152609803204856E-5	TEST
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999986979766942	WITHOUT_CLASSIFICATION	1.3020233057687471E-6	TEST
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999987111348427	WITHOUT_CLASSIFICATION	1.2888651572691167E-6	TEST
// script object	WITHOUT_CLASSIFICATION	0.999990489357669	WITHOUT_CLASSIFICATION	9.510642330945507E-6	TEST
// arities	WITHOUT_CLASSIFICATION	0.9999345638863254	WITHOUT_CLASSIFICATION	6.543611367458778E-5	TEST
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9907355585697052	WITHOUT_CLASSIFICATION	0.009264441430294828	TEST
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.999965954168555	WITHOUT_CLASSIFICATION	3.4045831444911404E-5	TEST
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999844616314311	WITHOUT_CLASSIFICATION	1.5538368568902556E-5	TEST
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999977571592087	WITHOUT_CLASSIFICATION	2.2428407913981523E-6	TEST
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9948233290589801	WITHOUT_CLASSIFICATION	0.005176670941019948	TEST
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999701325597042	WITHOUT_CLASSIFICATION	2.986744029584758E-5	TEST
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999862318526443	WITHOUT_CLASSIFICATION	1.3768147355718897E-5	TEST
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999075478365168	WITHOUT_CLASSIFICATION	9.245216348318012E-5	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999920855050146	WITHOUT_CLASSIFICATION	7.914494985396827E-6	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999915888704365	WITHOUT_CLASSIFICATION	8.411129563507294E-6	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999955954192532	WITHOUT_CLASSIFICATION	4.404580746846329E-6	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999952173116541	WITHOUT_CLASSIFICATION	4.782688345858409E-6	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999952173116541	WITHOUT_CLASSIFICATION	4.782688345858409E-6	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.999960319936334	WITHOUT_CLASSIFICATION	3.968006366583999E-5	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.999960319936334	WITHOUT_CLASSIFICATION	3.968006366583999E-5	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999823076199371	WITHOUT_CLASSIFICATION	1.7692380062967246E-5	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999823076199371	WITHOUT_CLASSIFICATION	1.7692380062967246E-5	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999257486301752	WITHOUT_CLASSIFICATION	7.425136982473903E-5	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999986841934412	WITHOUT_CLASSIFICATION	1.3158065587345597E-6	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999942533832568	WITHOUT_CLASSIFICATION	5.746616743239537E-6	TEST
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999956567944237	WITHOUT_CLASSIFICATION	4.34320557628176E-6	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999966618683758	WITHOUT_CLASSIFICATION	3.3381316242843166E-6	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999867329039003	WITHOUT_CLASSIFICATION	1.3267096099650371E-5	TEST
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999842303706251	WITHOUT_CLASSIFICATION	1.5769629374791965E-5	TEST
// then optional args	WITHOUT_CLASSIFICATION	0.9999868583248154	WITHOUT_CLASSIFICATION	1.3141675184630943E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999969182554193	WITHOUT_CLASSIFICATION	3.0817445807003706E-5	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999257486301752	WITHOUT_CLASSIFICATION	7.425136982473903E-5	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999986841934412	WITHOUT_CLASSIFICATION	1.3158065587345597E-6	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999942533832568	WITHOUT_CLASSIFICATION	5.746616743239537E-6	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999966618683758	WITHOUT_CLASSIFICATION	3.3381316242843166E-6	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999867329039003	WITHOUT_CLASSIFICATION	1.3267096099650371E-5	TEST
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999749959923311	WITHOUT_CLASSIFICATION	2.500400766882691E-5	TEST
// finally, post args	WITHOUT_CLASSIFICATION	0.9999854824665132	WITHOUT_CLASSIFICATION	1.4517533486895199E-5	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9995220818296229	WITHOUT_CLASSIFICATION	4.779181703770874E-4	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9995220818296229	WITHOUT_CLASSIFICATION	4.779181703770874E-4	TEST
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999905227225858	WITHOUT_CLASSIFICATION	9.477277414265483E-6	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9998428693927952	WITHOUT_CLASSIFICATION	1.5713060720475407E-4	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999980255452663	WITHOUT_CLASSIFICATION	1.9744547337690114E-6	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999813014308498	WITHOUT_CLASSIFICATION	1.869856915018962E-5	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999813014308498	WITHOUT_CLASSIFICATION	1.869856915018962E-5	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999708431224413	WITHOUT_CLASSIFICATION	2.9156877558629988E-5	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999283859968238	WITHOUT_CLASSIFICATION	7.161400317623594E-5	TEST
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999970674161477	WITHOUT_CLASSIFICATION	2.9325838523030904E-6	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.999993059157679	WITHOUT_CLASSIFICATION	6.940842321070262E-6	TEST
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999988010835974	WITHOUT_CLASSIFICATION	1.1989164026213699E-6	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999969529851139	WITHOUT_CLASSIFICATION	3.0470148859467117E-6	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999915523210168	WITHOUT_CLASSIFICATION	8.447678983283103E-6	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.999993316842043	WITHOUT_CLASSIFICATION	6.683157957024376E-6	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.999983036112965	WITHOUT_CLASSIFICATION	1.6963887035005676E-5	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.99999722070887	WITHOUT_CLASSIFICATION	2.7792911300732667E-6	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999972341125034	WITHOUT_CLASSIFICATION	2.7658874965593217E-6	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999708431224413	WITHOUT_CLASSIFICATION	2.9156877558629988E-5	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999283859968238	WITHOUT_CLASSIFICATION	7.161400317623594E-5	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.999993059157679	WITHOUT_CLASSIFICATION	6.940842321070262E-6	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.999997740395146	WITHOUT_CLASSIFICATION	2.259604853959588E-6	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999980255452663	WITHOUT_CLASSIFICATION	1.9744547337690114E-6	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999980255452663	WITHOUT_CLASSIFICATION	1.9744547337690114E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999794207223038	WITHOUT_CLASSIFICATION	2.0579277696216686E-5	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999794207223038	WITHOUT_CLASSIFICATION	2.0579277696216686E-5	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999955971863059	WITHOUT_CLASSIFICATION	4.402813694105347E-6	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999955971863059	WITHOUT_CLASSIFICATION	4.402813694105347E-6	TEST
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999984576951603	WITHOUT_CLASSIFICATION	1.5423048396987483E-6	TEST
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999959465816021	WITHOUT_CLASSIFICATION	4.053418397981662E-6	TEST
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999586627639245	WITHOUT_CLASSIFICATION	4.133723607542573E-5	TEST
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999403833742324	WITHOUT_CLASSIFICATION	5.96166257675181E-5	TEST
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999977199223737	WITHOUT_CLASSIFICATION	2.280077626244687E-6	TEST
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.99999377132903	WITHOUT_CLASSIFICATION	6.228670970022776E-6	TEST
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.999993486892747	WITHOUT_CLASSIFICATION	6.5131072529640345E-6	TEST
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999888277954743	WITHOUT_CLASSIFICATION	1.1172204525703345E-5	TEST
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999801083072247	WITHOUT_CLASSIFICATION	1.9891692775203635E-5	TEST
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999922309920098	WITHOUT_CLASSIFICATION	7.769007990195995E-6	TEST
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999865332466438	WITHOUT_CLASSIFICATION	1.3466753356308613E-5	TEST
// verify the class	WITHOUT_CLASSIFICATION	0.9999988129648805	WITHOUT_CLASSIFICATION	1.1870351195445933E-6	TEST
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999924845398471	WITHOUT_CLASSIFICATION	7.51546015286052E-6	TEST
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.999995340668014	WITHOUT_CLASSIFICATION	4.659331986016929E-6	TEST
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999913868281805	WITHOUT_CLASSIFICATION	8.613171819665638E-6	TEST
// thread context	WITHOUT_CLASSIFICATION	0.9999950703431377	WITHOUT_CLASSIFICATION	4.92965686218797E-6	TEST
// line number	WITHOUT_CLASSIFICATION	0.9999954316559478	WITHOUT_CLASSIFICATION	4.568344052156414E-6	TEST
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999560104937183	WITHOUT_CLASSIFICATION	4.3989506281668134E-5	TEST
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999045022582321	WITHOUT_CLASSIFICATION	9.549774176789956E-5	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999915523210168	WITHOUT_CLASSIFICATION	8.447678983283103E-6	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.999983036112965	WITHOUT_CLASSIFICATION	1.6963887035005676E-5	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999987634728161	WITHOUT_CLASSIFICATION	1.2365271838372817E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999362954414281	WITHOUT_CLASSIFICATION	6.370455857185054E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999362954414281	WITHOUT_CLASSIFICATION	6.370455857185054E-5	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.999997740395146	WITHOUT_CLASSIFICATION	2.259604853959588E-6	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999980255452663	WITHOUT_CLASSIFICATION	1.9744547337690114E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999794207223038	WITHOUT_CLASSIFICATION	2.0579277696216686E-5	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999955971863059	WITHOUT_CLASSIFICATION	4.402813694105347E-6	TEST
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999498575308404	WITHOUT_CLASSIFICATION	5.014246915965806E-5	TEST
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9994649970995558	WITHOUT_CLASSIFICATION	5.350029004440436E-4	TEST
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999908633865161	WITHOUT_CLASSIFICATION	9.136613483983488E-6	TEST
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9997195439188801	WITHOUT_CLASSIFICATION	2.804560811198474E-4	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999846123954673	WITHOUT_CLASSIFICATION	1.5387604532624135E-5	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999846123954673	WITHOUT_CLASSIFICATION	1.5387604532624135E-5	TEST
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999902811740213	WITHOUT_CLASSIFICATION	9.718825978606689E-6	TEST
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999910909483805	WITHOUT_CLASSIFICATION	8.909051619566429E-6	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999867541838049	WITHOUT_CLASSIFICATION	1.3245816195171987E-5	TEST
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999891784897078	WITHOUT_CLASSIFICATION	1.0821510292237152E-5	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999978075637043	WITHOUT_CLASSIFICATION	2.192436295786272E-6	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999978075637043	WITHOUT_CLASSIFICATION	2.192436295786272E-6	TEST
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999722316358092	WITHOUT_CLASSIFICATION	2.776836419078125E-5	TEST
// normal closure	WITHOUT_CLASSIFICATION	0.9999935868933505	WITHOUT_CLASSIFICATION	6.413106649511278E-6	TEST
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999839526663754	WITHOUT_CLASSIFICATION	1.604733362462402E-5	TEST
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.999413023719877	WITHOUT_CLASSIFICATION	5.869762801231725E-4	TEST
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999841798694825	WITHOUT_CLASSIFICATION	1.5820130517380833E-5	TEST
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999936489327922	WITHOUT_CLASSIFICATION	6.351067207875754E-6	TEST
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999836075524455	WITHOUT_CLASSIFICATION	1.639244755454339E-5	TEST
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999922966592574	WITHOUT_CLASSIFICATION	7.703340742587934E-6	TEST
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.99998889138215	WITHOUT_CLASSIFICATION	1.1108617850056783E-5	TEST
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9864473479630245	WITHOUT_CLASSIFICATION	0.013552652036975511	TEST
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999020521768576	WITHOUT_CLASSIFICATION	9.794782314237878E-5	TEST
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999751864197028	WITHOUT_CLASSIFICATION	2.4813580297154422E-5	TEST
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999999302457423	WITHOUT_CLASSIFICATION	6.975425764832568E-8	TEST
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999977060015264	WITHOUT_CLASSIFICATION	2.293998473635021E-6	TEST
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9998031277478969	WITHOUT_CLASSIFICATION	1.9687225210310156E-4	TEST
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999930294998238	WITHOUT_CLASSIFICATION	6.970500176203222E-6	TEST
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999904997510771	WITHOUT_CLASSIFICATION	9.500248922885544E-6	TEST
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999939521971195	WITHOUT_CLASSIFICATION	6.047802880443005E-6	TEST
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999999414692735	WITHOUT_CLASSIFICATION	5.853072650279028E-8	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999960422354381	WITHOUT_CLASSIFICATION	3.957764561811151E-6	TEST
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9998963032466426	WITHOUT_CLASSIFICATION	1.0369675335747221E-4	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999921710604301	WITHOUT_CLASSIFICATION	7.828939569836578E-6	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999921710604301	WITHOUT_CLASSIFICATION	7.828939569836578E-6	TEST
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999973655610322	WITHOUT_CLASSIFICATION	2.634438967769396E-6	TEST
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999970385031135	WITHOUT_CLASSIFICATION	2.9614968865336014E-6	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999923004932921	WITHOUT_CLASSIFICATION	7.699506707881842E-6	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999923004932921	WITHOUT_CLASSIFICATION	7.699506707881842E-6	TEST
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9999203819523286	WITHOUT_CLASSIFICATION	7.96180476714087E-5	TEST
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.999986205086416	WITHOUT_CLASSIFICATION	1.3794913584017826E-5	TEST
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9998968677543425	WITHOUT_CLASSIFICATION	1.0313224565751022E-4	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999940969060832	WITHOUT_CLASSIFICATION	5.903093916864542E-6	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999940969060832	WITHOUT_CLASSIFICATION	5.903093916864542E-6	TEST
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999975060645788	WITHOUT_CLASSIFICATION	2.493935421091344E-6	TEST
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999979339041406	WITHOUT_CLASSIFICATION	2.0660958594656736E-6	TEST
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999973958417393	WITHOUT_CLASSIFICATION	2.604158260703595E-6	TEST
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999975294028309	WITHOUT_CLASSIFICATION	2.4705971690816996E-6	TEST
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999867003579348	WITHOUT_CLASSIFICATION	1.329964206522844E-5	TEST
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999951902696445	WITHOUT_CLASSIFICATION	4.809730355560981E-6	TEST
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999944232659264	WITHOUT_CLASSIFICATION	5.576734073667971E-6	TEST
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999970795546239	WITHOUT_CLASSIFICATION	2.9204453760215645E-6	TEST
// build each "when"	WITHOUT_CLASSIFICATION	0.9999952126036342	WITHOUT_CLASSIFICATION	4.787396365751887E-6	TEST
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.999972843622786	WITHOUT_CLASSIFICATION	2.7156377213930073E-5	TEST
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999699544043896	WITHOUT_CLASSIFICATION	3.0045595610325808E-5	TEST
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999847219014854	WITHOUT_CLASSIFICATION	1.5278098514666722E-5	TEST
// close it out	WITHOUT_CLASSIFICATION	0.9999927291625486	WITHOUT_CLASSIFICATION	7.270837451411631E-6	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9998870645812127	WITHOUT_CLASSIFICATION	1.1293541878728031E-4	TEST
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9999876523760071	WITHOUT_CLASSIFICATION	1.234762399298483E-5	TEST
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999990064716248	WITHOUT_CLASSIFICATION	9.93528375281451E-7	TEST
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999977998111521	WITHOUT_CLASSIFICATION	2.2001888479603024E-6	TEST
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999920621322538	WITHOUT_CLASSIFICATION	7.937867746193982E-6	TEST
// Build IR for body	WITHOUT_CLASSIFICATION	0.999992209777029	WITHOUT_CLASSIFICATION	7.79022297092903E-6	TEST
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999979346985904	WITHOUT_CLASSIFICATION	2.0653014094943444E-6	TEST
// Instance method	WITHOUT_CLASSIFICATION	0.9999981835424061	WITHOUT_CLASSIFICATION	1.816457593785249E-6	TEST
// Class method	WITHOUT_CLASSIFICATION	0.9999984783904744	WITHOUT_CLASSIFICATION	1.5216095255991637E-6	TEST
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999830988377598	WITHOUT_CLASSIFICATION	1.690116224013043E-5	TEST
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.99999043100533	WITHOUT_CLASSIFICATION	9.568994669894256E-6	TEST
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999976483365529	WITHOUT_CLASSIFICATION	2.3516634469898084E-6	TEST
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999943257748862	WITHOUT_CLASSIFICATION	5.674225113835346E-6	TEST
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9998211067585268	WITHOUT_CLASSIFICATION	1.7889324147329758E-4	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.999965934852079	WITHOUT_CLASSIFICATION	3.406514792109372E-5	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999935860703412	WITHOUT_CLASSIFICATION	6.413929658812551E-6	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999994165703012	WITHOUT_CLASSIFICATION	5.834296987877303E-7	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.999999433904695	WITHOUT_CLASSIFICATION	5.660953049755512E-7	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9998870645812127	WITHOUT_CLASSIFICATION	1.1293541878728031E-4	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.999965934852079	WITHOUT_CLASSIFICATION	3.406514792109372E-5	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999935860703412	WITHOUT_CLASSIFICATION	6.413929658812551E-6	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.999999433904695	WITHOUT_CLASSIFICATION	5.660953049755512E-7	TEST
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9998651710540102	WITHOUT_CLASSIFICATION	1.348289459898493E-4	TEST
// Build the new module	WITHOUT_CLASSIFICATION	0.9999882238364928	WITHOUT_CLASSIFICATION	1.1776163507247813E-5	TEST
// Build the module body	WITHOUT_CLASSIFICATION	0.9999946402647271	WITHOUT_CLASSIFICATION	5.359735272929664E-6	TEST
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999768239945013	WITHOUT_CLASSIFICATION	2.3176005498741703E-5	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999976615248647	WITHOUT_CLASSIFICATION	2.338475135404686E-6	TEST
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999997247068781	WITHOUT_CLASSIFICATION	2.752931218341258E-7	TEST
// get attr	WITHOUT_CLASSIFICATION	0.9999960422354381	WITHOUT_CLASSIFICATION	3.957764561811151E-6	TEST
// call operator	WITHOUT_CLASSIFICATION	0.9999965032364345	WITHOUT_CLASSIFICATION	3.4967635654892187E-6	TEST
// set attr	WITHOUT_CLASSIFICATION	0.9999958716620291	WITHOUT_CLASSIFICATION	4.128337970884978E-6	TEST
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999842641728576	WITHOUT_CLASSIFICATION	1.5735827142367522E-5	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999908440822143	WITHOUT_CLASSIFICATION	9.155917785740874E-6	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999908440822143	WITHOUT_CLASSIFICATION	9.155917785740874E-6	TEST
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999577235246377	WITHOUT_CLASSIFICATION	4.22764753622107E-5	TEST
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999977373894602	WITHOUT_CLASSIFICATION	2.2626105398871022E-6	TEST
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999987010395419	WITHOUT_CLASSIFICATION	1.298960458113234E-6	TEST
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999972496042441	WITHOUT_CLASSIFICATION	2.7503957559857273E-6	TEST
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999295936143249	WITHOUT_CLASSIFICATION	7.0406385675173E-5	TEST
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999882517176962	WITHOUT_CLASSIFICATION	1.1748282303878655E-5	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999995715866495	WITHOUT_CLASSIFICATION	4.284133504381126E-7	TEST
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999963016494187	WITHOUT_CLASSIFICATION	3.698350581285625E-6	TEST
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999825707363	WITHOUT_CLASSIFICATION	1.74292637330497E-8	TEST
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999979266310072	WITHOUT_CLASSIFICATION	2.073368992789315E-6	TEST
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999674595709	WITHOUT_CLASSIFICATION	3.254042921455252E-8	TEST
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999528933332295	WITHOUT_CLASSIFICATION	4.710666677062856E-5	TEST
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999959769943279	WITHOUT_CLASSIFICATION	4.023005672111329E-6	TEST
// alu operations	WITHOUT_CLASSIFICATION	0.9999935850767282	WITHOUT_CLASSIFICATION	6.414923271874871E-6	TEST
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999991328700348	WITHOUT_CLASSIFICATION	8.671299652749134E-7	TEST
// closure instructions	WITHOUT_CLASSIFICATION	0.9999848916248361	WITHOUT_CLASSIFICATION	1.5108375163996496E-5	TEST
// eval instructions	WITHOUT_CLASSIFICATION	0.9999935413889167	WITHOUT_CLASSIFICATION	6.458611083251003E-6	TEST
// def instructions	WITHOUT_CLASSIFICATION	0.9999934447899949	WITHOUT_CLASSIFICATION	6.555210005148672E-6	TEST
// exception instructions	WITHOUT_CLASSIFICATION	0.9999855326746452	WITHOUT_CLASSIFICATION	1.446732535475219E-5	TEST
// Loads	WITHOUT_CLASSIFICATION	0.9999345638863254	WITHOUT_CLASSIFICATION	6.543611367458778E-5	TEST
// Stores	WITHOUT_CLASSIFICATION	0.9999346060782358	WITHOUT_CLASSIFICATION	6.539392176418777E-5	TEST
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999960176642421	WITHOUT_CLASSIFICATION	3.982335757847481E-6	TEST
// others	WITHOUT_CLASSIFICATION	0.9999357986314618	WITHOUT_CLASSIFICATION	6.42013685383003E-5	TEST
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999911901798779	WITHOUT_CLASSIFICATION	8.809820122171507E-6	TEST
// optimization guards	WITHOUT_CLASSIFICATION	0.9999849740846618	WITHOUT_CLASSIFICATION	1.5025915338296949E-5	TEST
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.999961342645173	WITHOUT_CLASSIFICATION	3.865735482694218E-5	TEST
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999979150534295	WITHOUT_CLASSIFICATION	2.0849465705294183E-6	TEST
// scripts	WITHOUT_CLASSIFICATION	0.9999349312452086	WITHOUT_CLASSIFICATION	6.506875479134292E-5	TEST
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999970357695225	WITHOUT_CLASSIFICATION	2.964230477445914E-6	TEST
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999937478726441	WITHOUT_CLASSIFICATION	6.252127355977241E-6	TEST
// methods and closures	WITHOUT_CLASSIFICATION	0.9999968124751928	WITHOUT_CLASSIFICATION	3.1875248071006176E-6	TEST
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999895009202323	WITHOUT_CLASSIFICATION	1.049907976768191E-5	TEST
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999661566776851	WITHOUT_CLASSIFICATION	3.384332231486465E-5	TEST
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.999975314217195	WITHOUT_CLASSIFICATION	2.468578280498589E-5	TEST
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9997644788047322	WITHOUT_CLASSIFICATION	2.3552119526778755E-4	TEST
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999491442764787	WITHOUT_CLASSIFICATION	5.085572352123054E-5	TEST
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.999945633713485	WITHOUT_CLASSIFICATION	5.4366286514986115E-5	TEST
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999982570336876	WITHOUT_CLASSIFICATION	1.7429663123204832E-6	TEST
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999665196084058	WITHOUT_CLASSIFICATION	3.348039159416861E-5	TEST
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999346865405344	WITHOUT_CLASSIFICATION	6.53134594656027E-5	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998854452033369	WITHOUT_CLASSIFICATION	1.1455479666310884E-4	TEST
// Readline	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999971664841	WITHOUT_CLASSIFICATION	2.833515900035202E-6	TEST
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999872671898365	WITHOUT_CLASSIFICATION	1.2732810163380951E-5	TEST
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999975405997243	WITHOUT_CLASSIFICATION	2.4594002757236863E-6	TEST
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.99999956634304	WITHOUT_CLASSIFICATION	4.3365695996562853E-7	TEST
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999999159151992	WITHOUT_CLASSIFICATION	8.408480080413683E-8	TEST
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999964999207269	WITHOUT_CLASSIFICATION	3.5000792732132315E-6	TEST
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999396744278726	WITHOUT_CLASSIFICATION	6.032557212731182E-5	TEST
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999158911084969	WITHOUT_CLASSIFICATION	8.410889150314907E-5	TEST
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999991307767734	WITHOUT_CLASSIFICATION	8.692232267413649E-7	TEST
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999248508741174	WITHOUT_CLASSIFICATION	7.514912588249605E-5	TEST
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.999683763699505	WITHOUT_CLASSIFICATION	3.1623630049504233E-4	TEST
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9975556001983331	WITHOUT_CLASSIFICATION	0.0024443998016669155	TEST
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999350266407696	WITHOUT_CLASSIFICATION	6.497335923039598E-5	TEST
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999934764518342	WITHOUT_CLASSIFICATION	6.523548165813798E-6	TEST
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999133412567597	WITHOUT_CLASSIFICATION	8.665874324040874E-5	TEST
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9999948549368743	WITHOUT_CLASSIFICATION	5.1450631256355755E-6	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9988163059723143	WITHOUT_CLASSIFICATION	0.0011836940276856234	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9988163059723143	WITHOUT_CLASSIFICATION	0.0011836940276856234	TEST
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999348863018303	WITHOUT_CLASSIFICATION	6.511369816975005E-5	TEST
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9997392055581672	WITHOUT_CLASSIFICATION	2.6079444183278266E-4	TEST
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999352832162316	WITHOUT_CLASSIFICATION	6.471678376848448E-5	TEST
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999420259751581	WITHOUT_CLASSIFICATION	5.797402484189685E-5	TEST
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999712392540311	WITHOUT_CLASSIFICATION	2.87607459688713E-5	TEST
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999140104030247	WITHOUT_CLASSIFICATION	8.598959697519215E-5	TEST
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.999920342275749	WITHOUT_CLASSIFICATION	7.965772425105079E-5	TEST
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999466975730451	WITHOUT_CLASSIFICATION	5.330242695491512E-5	TEST
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999756277682574	WITHOUT_CLASSIFICATION	2.4372231742596104E-5	TEST
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999970272936326	WITHOUT_CLASSIFICATION	2.9727063675237483E-6	TEST
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999210934115002	WITHOUT_CLASSIFICATION	7.890658849977748E-5	TEST
// class or module	WITHOUT_CLASSIFICATION	0.9999962656733038	WITHOUT_CLASSIFICATION	3.734326696269069E-6	TEST
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999938286461898	WITHOUT_CLASSIFICATION	6.171353810155286E-6	TEST
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999725254495887	WITHOUT_CLASSIFICATION	2.747455041138149E-5	TEST
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999749812398498	WITHOUT_CLASSIFICATION	2.5018760150194387E-5	TEST
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999920539762627	WITHOUT_CLASSIFICATION	7.946023737222989E-6	TEST
// IN changed!	WITHOUT_CLASSIFICATION	0.9999934560207181	WITHOUT_CLASSIFICATION	6.543979281877574E-6	TEST
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999589455353239	WITHOUT_CLASSIFICATION	4.105446467594963E-5	TEST
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999783650926154	WITHOUT_CLASSIFICATION	2.1634907384508036E-5	TEST
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9997795746874751	WITHOUT_CLASSIFICATION	2.20425312524804E-4	TEST
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999451220388182	WITHOUT_CLASSIFICATION	5.4877961181703E-5	TEST
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999968252834447	WITHOUT_CLASSIFICATION	3.1747165553523207E-6	TEST
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999987512914089	WITHOUT_CLASSIFICATION	1.2487085911594069E-6	TEST
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999986494295864	WITHOUT_CLASSIFICATION	1.3505704136989368E-6	TEST
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999380544537625	WITHOUT_CLASSIFICATION	6.194554623757331E-5	TEST
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.999853001939739	WITHOUT_CLASSIFICATION	1.4699806026097434E-4	TEST
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9998840016675451	WITHOUT_CLASSIFICATION	1.1599833245484421E-4	TEST
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999955373660647	WITHOUT_CLASSIFICATION	4.4626339352919284E-6	TEST
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999852197269833	WITHOUT_CLASSIFICATION	1.4780273016654449E-5	TEST
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999960861846867	WITHOUT_CLASSIFICATION	3.913815313335366E-6	TEST
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999924490945	WITHOUT_CLASSIFICATION	7.550905500047094E-6	TEST
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999926439961294	WITHOUT_CLASSIFICATION	7.356003870488579E-6	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999566746452877	WITHOUT_CLASSIFICATION	4.3325354712251484E-5	TEST
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9998819005762802	WITHOUT_CLASSIFICATION	1.1809942371978035E-4	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999566746452877	WITHOUT_CLASSIFICATION	4.3325354712251484E-5	TEST
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999878899586266	WITHOUT_CLASSIFICATION	1.211004137327629E-5	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999419801057615	WITHOUT_CLASSIFICATION	5.801989423851193E-5	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999419801057615	WITHOUT_CLASSIFICATION	5.801989423851193E-5	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999419801057615	WITHOUT_CLASSIFICATION	5.801989423851193E-5	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999930137041787	WITHOUT_CLASSIFICATION	6.986295821322835E-6	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999930137041787	WITHOUT_CLASSIFICATION	6.986295821322835E-6	TEST
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9992750456139813	WITHOUT_CLASSIFICATION	7.249543860186988E-4	TEST
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.999982447268238	WITHOUT_CLASSIFICATION	1.7552731761992422E-5	TEST
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999919689494549	WITHOUT_CLASSIFICATION	8.031050545135214E-6	TEST
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9999861417372793	WITHOUT_CLASSIFICATION	1.3858262720770513E-5	TEST
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.999992051728237	WITHOUT_CLASSIFICATION	7.948271762886721E-6	TEST
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999241676458317	WITHOUT_CLASSIFICATION	7.58323541683633E-5	TEST
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999660271937029	WITHOUT_CLASSIFICATION	3.397280629708759E-5	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999467737896951	WITHOUT_CLASSIFICATION	5.322621030498455E-5	TEST
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9998616652207094	WITHOUT_CLASSIFICATION	1.3833477929047608E-4	TEST
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999893128956892	WITHOUT_CLASSIFICATION	1.068710431078542E-5	TEST
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999851657472048	WITHOUT_CLASSIFICATION	1.4834252795231538E-5	TEST
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999921436955607	WITHOUT_CLASSIFICATION	7.856304439347268E-6	TEST
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.999993335079777	WITHOUT_CLASSIFICATION	6.664920223114482E-6	TEST
// root-level logic	WITHOUT_CLASSIFICATION	0.999993681162979	WITHOUT_CLASSIFICATION	6.318837020969406E-6	TEST
// root-level methods	WITHOUT_CLASSIFICATION	0.9999882270726927	WITHOUT_CLASSIFICATION	1.1772927307267305E-5	TEST
// root-level classes	WITHOUT_CLASSIFICATION	0.9999865180487694	WITHOUT_CLASSIFICATION	1.3481951230548709E-5	TEST
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999813913980411	WITHOUT_CLASSIFICATION	1.860860195891452E-5	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999918932845975	WITHOUT_CLASSIFICATION	8.106715402561594E-6	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999918932845975	WITHOUT_CLASSIFICATION	8.106715402561594E-6	TEST
// receiver	WITHOUT_CLASSIFICATION	0.9999934436860998	WITHOUT_CLASSIFICATION	6.556313900293914E-6	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999923536541586	WITHOUT_CLASSIFICATION	7.646345841331052E-6	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999923536541586	WITHOUT_CLASSIFICATION	7.646345841331052E-6	TEST
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999516476238447	WITHOUT_CLASSIFICATION	4.8352376155385866E-5	TEST
// Object[] args	WITHOUT_CLASSIFICATION	0.9999935381087252	WITHOUT_CLASSIFICATION	6.46189127475278E-6	TEST
// load handle	WITHOUT_CLASSIFICATION	0.9999927711128581	WITHOUT_CLASSIFICATION	7.228887141792776E-6	TEST
// args array	WITHOUT_CLASSIFICATION	0.9999941521034117	WITHOUT_CLASSIFICATION	5.847896588365944E-6	TEST
// i'th argument	WITHOUT_CLASSIFICATION	0.9999943359236126	WITHOUT_CLASSIFICATION	5.66407638736586E-6	TEST
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.999976497859234	WITHOUT_CLASSIFICATION	2.350214076597168E-5	TEST
// Object arg0	WITHOUT_CLASSIFICATION	0.9999934983991315	WITHOUT_CLASSIFICATION	6.501600868541297E-6	TEST
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999884269089635	WITHOUT_CLASSIFICATION	1.1573091036476057E-5	TEST
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999744103859202	WITHOUT_CLASSIFICATION	2.5589614079727523E-5	TEST
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999967902148619	WITHOUT_CLASSIFICATION	3.2097851380421384E-6	TEST
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999925998124477	WITHOUT_CLASSIFICATION	7.400187552262714E-6	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999299324281411	WITHOUT_CLASSIFICATION	7.006757185886471E-5	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999977930225113	WITHOUT_CLASSIFICATION	2.206977488760355E-6	TEST
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999918799994545	WITHOUT_CLASSIFICATION	8.120000545584055E-6	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999467737896951	WITHOUT_CLASSIFICATION	5.322621030498455E-5	TEST
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9998152783318226	WITHOUT_CLASSIFICATION	1.8472166817743522E-4	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999932047970682	WITHOUT_CLASSIFICATION	6.795202931771683E-6	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999981077605783	WITHOUT_CLASSIFICATION	1.892239421707652E-6	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999981077605783	WITHOUT_CLASSIFICATION	1.892239421707652E-6	TEST
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999491373737406	WITHOUT_CLASSIFICATION	5.086262625955887E-5	TEST
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9997127798850413	WITHOUT_CLASSIFICATION	2.872201149586785E-4	TEST
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999980016760263	WITHOUT_CLASSIFICATION	1.998323973759172E-6	TEST
// restore position	WITHOUT_CLASSIFICATION	0.9999941446807857	WITHOUT_CLASSIFICATION	5.855319214210254E-6	TEST
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999997483448547	WITHOUT_CLASSIFICATION	2.5165514536005685E-7	TEST
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999971611396096	WITHOUT_CLASSIFICATION	2.838860390420432E-6	TEST
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999989883290284	WITHOUT_CLASSIFICATION	1.0116709716236221E-6	TEST
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9990344558028608	WITHOUT_CLASSIFICATION	9.65544197139358E-4	TEST
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9998754453465913	WITHOUT_CLASSIFICATION	1.245546534086606E-4	TEST
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.999965404873588	WITHOUT_CLASSIFICATION	3.4595126411943274E-5	TEST
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.99997848648969	WITHOUT_CLASSIFICATION	2.151351030995222E-5	TEST
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999672959044091	WITHOUT_CLASSIFICATION	3.270409559094799E-5	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999818206982918	WITHOUT_CLASSIFICATION	1.8179301708289472E-5	TEST
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999706251864934	WITHOUT_CLASSIFICATION	2.9374813506654266E-5	TEST
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999397614105451	WITHOUT_CLASSIFICATION	6.023858945487035E-5	TEST
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999882582228603	WITHOUT_CLASSIFICATION	1.1741777139761189E-5	TEST
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999934421188001	WITHOUT_CLASSIFICATION	6.557881199860358E-6	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999909625745315	WITHOUT_CLASSIFICATION	9.037425468497429E-6	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999643361442974	WITHOUT_CLASSIFICATION	3.5663855702697516E-5	TEST
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.999992870016251	WITHOUT_CLASSIFICATION	7.129983748928691E-6	TEST
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999982642836975	WITHOUT_CLASSIFICATION	1.7357163025332515E-6	TEST
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999849980395829	WITHOUT_CLASSIFICATION	1.500196041708498E-5	TEST
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999997316288886	WITHOUT_CLASSIFICATION	2.683711113961269E-7	TEST
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.99999515024441	WITHOUT_CLASSIFICATION	4.84975559005184E-6	TEST
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999848729753699	WITHOUT_CLASSIFICATION	1.5127024630145492E-5	TEST
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9998928279161744	WITHOUT_CLASSIFICATION	1.0717208382554583E-4	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9995979738406998	WITHOUT_CLASSIFICATION	4.0202615930018805E-4	TEST
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999947447335245	WITHOUT_CLASSIFICATION	5.255266475644686E-6	TEST
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999850987048616	WITHOUT_CLASSIFICATION	1.4901295138306305E-5	TEST
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999968600463	WITHOUT_CLASSIFICATION	3.1399537001361285E-6	TEST
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.999993725511729	WITHOUT_CLASSIFICATION	6.274488271016705E-6	TEST
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999798906959175	WITHOUT_CLASSIFICATION	2.0109304082444016E-5	TEST
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999774014284917	WITHOUT_CLASSIFICATION	2.2598571508263744E-5	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999708597505276	WITHOUT_CLASSIFICATION	2.9140249472468076E-5	TEST
// $blah	WITHOUT_CLASSIFICATION	0.9999345638863254	WITHOUT_CLASSIFICATION	6.543611367458778E-5	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9995979738406998	WITHOUT_CLASSIFICATION	4.0202615930018805E-4	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999944291545377	WITHOUT_CLASSIFICATION	5.5708454622730055E-6	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999708597505276	WITHOUT_CLASSIFICATION	2.9140249472468076E-5	TEST
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999663346199682	WITHOUT_CLASSIFICATION	3.366538003183619E-5	TEST
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999937430209412	WITHOUT_CLASSIFICATION	6.256979058817856E-6	TEST
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999985430970995	WITHOUT_CLASSIFICATION	1.4569029006067605E-6	TEST
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999825860680297	WITHOUT_CLASSIFICATION	1.741393197026566E-5	TEST
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.999978154388959	WITHOUT_CLASSIFICATION	2.1845611040984895E-5	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999987304495397	WITHOUT_CLASSIFICATION	1.2695504603476456E-6	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999987304495397	WITHOUT_CLASSIFICATION	1.2695504603476456E-6	TEST
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9999208861225549	WITHOUT_CLASSIFICATION	7.911387744500383E-5	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999987428544557	WITHOUT_CLASSIFICATION	1.2571455442917326E-6	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999959950372428	WITHOUT_CLASSIFICATION	4.004962757142564E-6	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999959950372428	WITHOUT_CLASSIFICATION	4.004962757142564E-6	TEST
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999999697554571	WITHOUT_CLASSIFICATION	3.0244542911267813E-8	TEST
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.999591223760613	WITHOUT_CLASSIFICATION	4.087762393869918E-4	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999814598757969	WITHOUT_CLASSIFICATION	1.85401242030989E-5	TEST
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999965696040994	WITHOUT_CLASSIFICATION	3.430395900583698E-6	TEST
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.999999512354052	WITHOUT_CLASSIFICATION	4.876459480083435E-7	TEST
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999922961927048	WITHOUT_CLASSIFICATION	7.70380729528723E-6	TEST
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9998151815865939	WITHOUT_CLASSIFICATION	1.848184134060009E-4	TEST
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999904315650149	WITHOUT_CLASSIFICATION	9.568434985030336E-6	TEST
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999916136599915	WITHOUT_CLASSIFICATION	8.386340008640738E-6	TEST
// host and port given	WITHOUT_CLASSIFICATION	0.99999797370329	WITHOUT_CLASSIFICATION	2.02629670991668E-6	TEST
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999833376527772	WITHOUT_CLASSIFICATION	1.6662347222808886E-5	TEST
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9994665464385581	WITHOUT_CLASSIFICATION	5.3345356144197E-4	TEST
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9998417171822321	WITHOUT_CLASSIFICATION	1.5828281776792194E-4	TEST
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999858354644594	WITHOUT_CLASSIFICATION	1.4164535540627055E-5	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999647282888571	WITHOUT_CLASSIFICATION	3.5271711142945185E-5	TEST
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999930205862038	WITHOUT_CLASSIFICATION	6.979413796174043E-6	TEST
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9999705537630759	WITHOUT_CLASSIFICATION	2.9446236924052038E-5	TEST
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999695723018166	WITHOUT_CLASSIFICATION	3.042769818338994E-5	TEST
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9998895532772654	WITHOUT_CLASSIFICATION	1.1044672273455549E-4	TEST
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999736473853227	WITHOUT_CLASSIFICATION	2.635261467729346E-5	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.9999345638863254	WITHOUT_CLASSIFICATION	6.543611367458778E-5	TEST
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999345638863254	WITHOUT_CLASSIFICATION	6.543611367458778E-5	TEST
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.99983635156475	WITHOUT_CLASSIFICATION	1.636484352499339E-4	TEST
// line 323	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999919512187828	WITHOUT_CLASSIFICATION	8.048781217154333E-6	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999919512187828	WITHOUT_CLASSIFICATION	8.048781217154333E-6	TEST
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999997012994712	WITHOUT_CLASSIFICATION	2.9870052881601217E-7	TEST
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999881417986515	WITHOUT_CLASSIFICATION	1.185820134847625E-5	TEST
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9998331931802459	WITHOUT_CLASSIFICATION	1.6680681975410512E-4	TEST
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.999986284543906	WITHOUT_CLASSIFICATION	1.3715456093894003E-5	TEST
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999212971819308	WITHOUT_CLASSIFICATION	7.87028180692212E-5	TEST
// RubySocket	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999517920626403	WITHOUT_CLASSIFICATION	4.820793735956937E-5	TEST
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999603362275302	WITHOUT_CLASSIFICATION	3.9663772469798796E-5	TEST
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999987703817951	WITHOUT_CLASSIFICATION	1.2296182049118077E-6	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999934409753947	WITHOUT_CLASSIFICATION	6.5590246053888495E-6	TEST
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.999993178775449	WITHOUT_CLASSIFICATION	6.82122455092291E-6	TEST
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999960640549015	WITHOUT_CLASSIFICATION	3.935945098473725E-6	TEST
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.999591223760613	WITHOUT_CLASSIFICATION	4.087762393869918E-4	TEST
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999822786251655	WITHOUT_CLASSIFICATION	1.7721374834509858E-5	TEST
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999829004636225	WITHOUT_CLASSIFICATION	1.709953637752454E-5	TEST
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999950145682303	WITHOUT_CLASSIFICATION	4.985431769749772E-6	TEST
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999780788949664	WITHOUT_CLASSIFICATION	2.1921105033716312E-5	TEST
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999945164216344	WITHOUT_CLASSIFICATION	5.483578365648135E-6	TEST
// be dead	WITHOUT_CLASSIFICATION	0.9999599320962776	WITHOUT_CLASSIFICATION	4.0067903722364955E-5	TEST
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.999997199902639	WITHOUT_CLASSIFICATION	2.8000973610495274E-6	TEST
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999939032565722	WITHOUT_CLASSIFICATION	6.096743427883315E-6	TEST
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9996006448051059	WITHOUT_CLASSIFICATION	3.993551948940693E-4	TEST
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9993282862423434	WITHOUT_CLASSIFICATION	6.717137576566583E-4	TEST
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999934757635807	WITHOUT_CLASSIFICATION	6.524236419309603E-6	TEST
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999985041097287	WITHOUT_CLASSIFICATION	1.4958902712795957E-6	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999334834879096	WITHOUT_CLASSIFICATION	6.65165120904364E-5	TEST
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9998852325304246	WITHOUT_CLASSIFICATION	1.1476746957548514E-4	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999959711706887	WITHOUT_CLASSIFICATION	4.0288293112241296E-6	TEST
// main body	WITHOUT_CLASSIFICATION	0.9999943390462678	WITHOUT_CLASSIFICATION	5.6609537322205275E-6	TEST
// return jump handling	WITHOUT_CLASSIFICATION	0.999992910008754	WITHOUT_CLASSIFICATION	7.0899912460012465E-6	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999347178580742	WITHOUT_CLASSIFICATION	6.528214192583944E-5	TEST
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999925518279296	WITHOUT_CLASSIFICATION	7.448172070464882E-6	TEST
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999868449728313	WITHOUT_CLASSIFICATION	1.315502716869685E-5	TEST
// clear the redo	WITHOUT_CLASSIFICATION	0.999997802788553	WITHOUT_CLASSIFICATION	2.1972114471020946E-6	TEST
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.999991548612952	WITHOUT_CLASSIFICATION	8.451387047974346E-6	TEST
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999922152014636	WITHOUT_CLASSIFICATION	7.78479853633163E-6	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999651405734209	WITHOUT_CLASSIFICATION	3.485942657903967E-5	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9998922673022839	WITHOUT_CLASSIFICATION	1.0773269771615376E-4	TEST
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999744932501852	WITHOUT_CLASSIFICATION	2.550674981480304E-5	TEST
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999325097602105	WITHOUT_CLASSIFICATION	6.749023978944044E-5	TEST
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999540085386525	WITHOUT_CLASSIFICATION	4.5991461347561554E-5	TEST
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999936992137698	WITHOUT_CLASSIFICATION	6.300786230172866E-6	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999931729729884	WITHOUT_CLASSIFICATION	6.827027011579623E-6	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999931729729884	WITHOUT_CLASSIFICATION	6.827027011579623E-6	TEST
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999957094345616	WITHOUT_CLASSIFICATION	4.290565438401741E-6	TEST
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999893821710745	WITHOUT_CLASSIFICATION	1.0617828925464522E-5	TEST
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999806602438301	WITHOUT_CLASSIFICATION	1.933975616984264E-5	TEST
// return	WITHOUT_CLASSIFICATION	0.9999648480708638	WITHOUT_CLASSIFICATION	3.515192913617929E-5	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999920855050146	WITHOUT_CLASSIFICATION	7.914494985396827E-6	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999915888704365	WITHOUT_CLASSIFICATION	8.411129563507294E-6	TEST
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999697713594884	WITHOUT_CLASSIFICATION	3.0228640511521445E-5	TEST
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999380375170035	WITHOUT_CLASSIFICATION	6.196248299656948E-5	TEST
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999040467306091	WITHOUT_CLASSIFICATION	9.59532693909695E-5	TEST
// tc	WITHOUT_CLASSIFICATION	0.9999345638863254	WITHOUT_CLASSIFICATION	6.543611367458778E-5	TEST
// self // name	WITHOUT_CLASSIFICATION	0.9999842826337233	WITHOUT_CLASSIFICATION	1.5717366276648828E-5	TEST
// no args	WITHOUT_CLASSIFICATION	0.9999684677309723	WITHOUT_CLASSIFICATION	3.153226902769257E-5	TEST
// variable args with block	WITHOUT_CLASSIFICATION	0.9999157981498243	WITHOUT_CLASSIFICATION	8.420185017575871E-5	TEST
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.999985838649382	WITHOUT_CLASSIFICATION	1.416135061797492E-5	TEST
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999984230600759	WITHOUT_CLASSIFICATION	1.5769399240924518E-5	TEST
// one arg with block	WITHOUT_CLASSIFICATION	0.9999485078268803	WITHOUT_CLASSIFICATION	5.149217311981597E-5	TEST
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999986105857591	WITHOUT_CLASSIFICATION	1.3894142408986899E-5	TEST
// two args with block	WITHOUT_CLASSIFICATION	0.9999193800429848	WITHOUT_CLASSIFICATION	8.061995701523814E-5	TEST
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999780091385352	WITHOUT_CLASSIFICATION	2.19908614648291E-5	TEST
// three args with block	WITHOUT_CLASSIFICATION	0.9999264202753452	WITHOUT_CLASSIFICATION	7.357972465489425E-5	TEST
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999799296190863	WITHOUT_CLASSIFICATION	2.007038091365599E-5	TEST
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999190711126242	WITHOUT_CLASSIFICATION	8.092888737575055E-5	TEST
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9998499659861527	WITHOUT_CLASSIFICATION	1.5003401384728888E-4	TEST
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999724274845144	WITHOUT_CLASSIFICATION	2.757251548559096E-5	TEST
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999875138247348	WITHOUT_CLASSIFICATION	1.2486175265131161E-5	TEST
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999802375729504	WITHOUT_CLASSIFICATION	1.9762427049587402E-5	TEST
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999819634459475	WITHOUT_CLASSIFICATION	1.803655405250103E-5	TEST
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999893738298349	WITHOUT_CLASSIFICATION	1.0626170165052152E-5	TEST
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999818130142176	WITHOUT_CLASSIFICATION	1.818698578245494E-5	TEST
// static invocation	WITHOUT_CLASSIFICATION	0.9999942145140692	WITHOUT_CLASSIFICATION	5.785485930714058E-6	TEST
// virtual invocation	WITHOUT_CLASSIFICATION	0.999985092493145	WITHOUT_CLASSIFICATION	1.4907506854924942E-5	TEST
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9997969136874146	WITHOUT_CLASSIFICATION	2.0308631258541174E-4	TEST
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999961548626044	WITHOUT_CLASSIFICATION	3.8451373956264445E-6	TEST
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999829754627246	WITHOUT_CLASSIFICATION	1.7024537275341775E-5	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9998922673022839	WITHOUT_CLASSIFICATION	1.0773269771615376E-4	TEST
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999588456139514	WITHOUT_CLASSIFICATION	4.1154386048526635E-5	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999802998872922	WITHOUT_CLASSIFICATION	1.97001127078856E-5	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999802998872922	WITHOUT_CLASSIFICATION	1.97001127078856E-5	TEST
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999868328431898	WITHOUT_CLASSIFICATION	1.3167156810330243E-5	TEST
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.999966592148854	WITHOUT_CLASSIFICATION	3.340785114600721E-5	TEST
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999848729753699	WITHOUT_CLASSIFICATION	1.5127024630145492E-5	TEST
// never reached	WITHOUT_CLASSIFICATION	0.9999945419316739	WITHOUT_CLASSIFICATION	5.4580683260578E-6	TEST
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9998764754491809	WITHOUT_CLASSIFICATION	1.2352455081902935E-4	TEST
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999037243130977	WITHOUT_CLASSIFICATION	9.627568690230336E-5	TEST
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9999152489771627	WITHOUT_CLASSIFICATION	8.475102283739135E-5	TEST
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9998657451678468	WITHOUT_CLASSIFICATION	1.342548321532274E-4	TEST
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9999044266270182	WITHOUT_CLASSIFICATION	9.557337298173819E-5	TEST
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9999158672277934	WITHOUT_CLASSIFICATION	8.413277220666099E-5	TEST
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9998667244959131	WITHOUT_CLASSIFICATION	1.3327550408691506E-4	TEST
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9998773765143145	WITHOUT_CLASSIFICATION	1.2262348568555735E-4	TEST
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999887891670604	WITHOUT_CLASSIFICATION	1.1210832939645492E-5	TEST
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999665180549758	WITHOUT_CLASSIFICATION	3.3481945024057415E-5	TEST
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999928191604497	WITHOUT_CLASSIFICATION	7.180839550207465E-6	TEST
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999935070624164	WITHOUT_CLASSIFICATION	6.492937583636176E-6	TEST
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999730302154755	WITHOUT_CLASSIFICATION	2.6969784524567162E-5	TEST
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9999753854988901	WITHOUT_CLASSIFICATION	2.461450110993553E-5	TEST
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999808013346692	WITHOUT_CLASSIFICATION	1.9198665330813587E-5	TEST
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999830996634512	WITHOUT_CLASSIFICATION	1.690033654872088E-5	TEST
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9999732269687681	WITHOUT_CLASSIFICATION	2.677303123196432E-5	TEST
// promise to implement three	WITHOUT_CLASSIFICATION	0.9999888709549887	WITHOUT_CLASSIFICATION	1.1129045011394932E-5	TEST
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999897301111664	WITHOUT_CLASSIFICATION	1.0269888833471838E-5	TEST
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999852717830039	WITHOUT_CLASSIFICATION	1.47282169961145E-5	TEST
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999984318831642	WITHOUT_CLASSIFICATION	1.5681168358595028E-6	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999928827726787	WITHOUT_CLASSIFICATION	7.117227321317907E-6	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999748059880689	WITHOUT_CLASSIFICATION	2.5194011931066256E-5	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999899083469712	WITHOUT_CLASSIFICATION	1.0091653028731144E-5	TEST
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.999997662463267	WITHOUT_CLASSIFICATION	2.337536732914251E-6	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999959396251434	WITHOUT_CLASSIFICATION	4.060374856527508E-6	TEST
// start setup method	WITHOUT_CLASSIFICATION	0.9999963730641501	WITHOUT_CLASSIFICATION	3.6269358498287594E-6	TEST
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999958716620291	WITHOUT_CLASSIFICATION	4.128337970884978E-6	TEST
// set Ruby	WITHOUT_CLASSIFICATION	0.9999958716620291	WITHOUT_CLASSIFICATION	4.128337970884978E-6	TEST
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999931019367452	WITHOUT_CLASSIFICATION	6.898063254798341E-6	TEST
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999411967035984	WITHOUT_CLASSIFICATION	5.8803296401509964E-5	TEST
// get current context	WITHOUT_CLASSIFICATION	0.9999953535176597	WITHOUT_CLASSIFICATION	4.646482340354893E-6	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999877593358214	WITHOUT_CLASSIFICATION	1.22406641785692E-5	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999928827726787	WITHOUT_CLASSIFICATION	7.117227321317907E-6	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999748059880689	WITHOUT_CLASSIFICATION	2.5194011931066256E-5	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999899083469712	WITHOUT_CLASSIFICATION	1.0091653028731144E-5	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999959396251434	WITHOUT_CLASSIFICATION	4.060374856527508E-6	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999949055309654	WITHOUT_CLASSIFICATION	5.094469034646223E-6	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999640781967445	WITHOUT_CLASSIFICATION	3.5921803255517145E-5	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999947168518422	WITHOUT_CLASSIFICATION	5.2831481577693214E-6	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999949206100868	WITHOUT_CLASSIFICATION	5.079389913201145E-6	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999981129776583	WITHOUT_CLASSIFICATION	1.8870223417417524E-6	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999659451964675	WITHOUT_CLASSIFICATION	3.4054803532357307E-5	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.9999985973018906	WITHOUT_CLASSIFICATION	1.4026981093572037E-6	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999973779741587	WITHOUT_CLASSIFICATION	2.622025841278025E-6	TEST
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999790603591798	WITHOUT_CLASSIFICATION	2.0939640820234588E-5	TEST
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999981653896572	WITHOUT_CLASSIFICATION	1.834610342748039E-6	TEST
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999856490516019	WITHOUT_CLASSIFICATION	1.435094839817017E-5	TEST
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999952765792444	WITHOUT_CLASSIFICATION	4.7234207555925745E-6	TEST
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999968002970403	WITHOUT_CLASSIFICATION	3.1997029597106516E-6	TEST
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999924329270743	WITHOUT_CLASSIFICATION	7.567072925716104E-6	TEST
// store it	WITHOUT_CLASSIFICATION	0.9999858388260748	WITHOUT_CLASSIFICATION	1.4161173925308746E-5	TEST
// end of try block	WITHOUT_CLASSIFICATION	0.9999974929035506	WITHOUT_CLASSIFICATION	2.5070964495291887E-6	TEST
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999856814344816	WITHOUT_CLASSIFICATION	1.4318565518318257E-5	TEST
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999476918523504	WITHOUT_CLASSIFICATION	5.2308147649440364E-5	TEST
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.999992125916015	WITHOUT_CLASSIFICATION	7.874083984840268E-6	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999877593358214	WITHOUT_CLASSIFICATION	1.22406641785692E-5	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999640781967445	WITHOUT_CLASSIFICATION	3.5921803255517145E-5	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999947168518422	WITHOUT_CLASSIFICATION	5.2831481577693214E-6	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999981129776583	WITHOUT_CLASSIFICATION	1.8870223417417524E-6	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999659451964675	WITHOUT_CLASSIFICATION	3.4054803532357307E-5	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.9999985973018906	WITHOUT_CLASSIFICATION	1.4026981093572037E-6	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999973779741587	WITHOUT_CLASSIFICATION	2.622025841278025E-6	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999989530028902	WITHOUT_CLASSIFICATION	1.046997109708214E-6	TEST
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999898207372534	WITHOUT_CLASSIFICATION	1.0179262746526917E-5	TEST
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999944680748696	WITHOUT_CLASSIFICATION	5.531925130427135E-6	TEST
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999980679634735	WITHOUT_CLASSIFICATION	1.932036526582938E-6	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999698332540052	WITHOUT_CLASSIFICATION	3.016674599479625E-5	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999698332540052	WITHOUT_CLASSIFICATION	3.016674599479625E-5	TEST
// setup the class	WITHOUT_CLASSIFICATION	0.9999987279728643	WITHOUT_CLASSIFICATION	1.2720271357916627E-6	TEST
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999987929395231	WITHOUT_CLASSIFICATION	1.2070604769500987E-6	TEST
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999952137903009	WITHOUT_CLASSIFICATION	4.78620969903278E-6	TEST
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999949919801535	WITHOUT_CLASSIFICATION	5.008019846483538E-6	TEST
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999955653235149	WITHOUT_CLASSIFICATION	4.4346764851669E-6	TEST
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999986769419572	WITHOUT_CLASSIFICATION	1.323058042794078E-6	TEST
// set the full name	WITHOUT_CLASSIFICATION	0.9999820825030434	WITHOUT_CLASSIFICATION	1.7917496956542715E-5	TEST
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999915265973102	WITHOUT_CLASSIFICATION	8.473402689845245E-6	TEST
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999775874279193	WITHOUT_CLASSIFICATION	2.2412572080637224E-5	TEST
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999282931267596	WITHOUT_CLASSIFICATION	7.17068732403748E-5	TEST
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999580390400821	WITHOUT_CLASSIFICATION	4.196095991782914E-5	TEST
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999913601947876	WITHOUT_CLASSIFICATION	8.639805212427068E-6	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9998629219701173	WITHOUT_CLASSIFICATION	1.3707802988273767E-4	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999809897576162	WITHOUT_CLASSIFICATION	1.9010242383840184E-5	TEST
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999821457406088	WITHOUT_CLASSIFICATION	1.7854259391182933E-5	TEST
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.999970007782936	WITHOUT_CLASSIFICATION	2.9992217063959716E-5	TEST
// add all static variables	WITHOUT_CLASSIFICATION	0.9999781860271495	WITHOUT_CLASSIFICATION	2.181397285054101E-5	TEST
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999812745815043	WITHOUT_CLASSIFICATION	1.8725418495701212E-5	TEST
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999969943213656	WITHOUT_CLASSIFICATION	3.005678634434107E-6	TEST
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999994373591612	WITHOUT_CLASSIFICATION	5.626408387976425E-7	TEST
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9993696269157037	WITHOUT_CLASSIFICATION	6.303730842962865E-4	TEST
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999957717290026	WITHOUT_CLASSIFICATION	4.228270997504501E-6	TEST
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999977394572821	WITHOUT_CLASSIFICATION	2.260542717874417E-6	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.998466577315963	WITHOUT_CLASSIFICATION	0.0015334226840369872	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999990506157176	WITHOUT_CLASSIFICATION	9.493842825125613E-7	TEST
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999994024869059	WITHOUT_CLASSIFICATION	5.97513094099125E-7	TEST
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9998840485464731	WITHOUT_CLASSIFICATION	1.1595145352693694E-4	TEST
// line 326	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999990506157176	WITHOUT_CLASSIFICATION	9.493842825125613E-7	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999809897576162	WITHOUT_CLASSIFICATION	1.9010242383840184E-5	TEST
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999380410507356	WITHOUT_CLASSIFICATION	6.195894926441171E-5	TEST
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999939697316963	WITHOUT_CLASSIFICATION	6.030268303687398E-6	TEST
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999896275139913	WITHOUT_CLASSIFICATION	1.0372486008559239E-5	TEST
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.999998568822381	WITHOUT_CLASSIFICATION	1.4311776190216614E-6	TEST
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999952729496012	WITHOUT_CLASSIFICATION	4.72705039884426E-6	TEST
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999787759142907	WITHOUT_CLASSIFICATION	2.122408570927795E-5	TEST
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9998386666035523	WITHOUT_CLASSIFICATION	1.6133339644778304E-4	TEST
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999633049938697	WITHOUT_CLASSIFICATION	3.669500613025633E-5	TEST
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.999504783761152	WITHOUT_CLASSIFICATION	4.952162388480283E-4	TEST
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9997650460725648	WITHOUT_CLASSIFICATION	2.3495392743530156E-4	TEST
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999989229493157	WITHOUT_CLASSIFICATION	1.0770506843224592E-6	TEST
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999712349529493	WITHOUT_CLASSIFICATION	2.8765047050785997E-5	TEST
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999040221567322	WITHOUT_CLASSIFICATION	9.597784326773859E-5	TEST
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999982475921089	WITHOUT_CLASSIFICATION	1.7524078911357405E-6	TEST
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.999997286102911	WITHOUT_CLASSIFICATION	2.7138970890859005E-6	TEST
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999443391815799	WITHOUT_CLASSIFICATION	5.5660818420099987E-5	TEST
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999985482395146	WITHOUT_CLASSIFICATION	1.4517604853913277E-6	TEST
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9999766998158229	WITHOUT_CLASSIFICATION	2.3300184177071865E-5	TEST
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999987592806362	WITHOUT_CLASSIFICATION	1.2407193638656752E-6	TEST
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.999980016072656	WITHOUT_CLASSIFICATION	1.9983927344074528E-5	TEST
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.999991942893677	WITHOUT_CLASSIFICATION	8.057106322954123E-6	TEST
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999890143884896	WITHOUT_CLASSIFICATION	1.0985611510300195E-5	TEST
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999640283716094	WITHOUT_CLASSIFICATION	3.597162839059012E-5	TEST
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999999171888112	WITHOUT_CLASSIFICATION	8.281118877562675E-8	TEST
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999975857044181	WITHOUT_CLASSIFICATION	2.414295581949933E-6	TEST
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999665180549758	WITHOUT_CLASSIFICATION	3.3481945024057415E-5	TEST
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9995944880664388	WITHOUT_CLASSIFICATION	4.055119335612245E-4	TEST
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9997110570863701	WITHOUT_CLASSIFICATION	2.889429136298365E-4	TEST
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.999949188943185	WITHOUT_CLASSIFICATION	5.081105681500788E-5	TEST
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999896860641122	WITHOUT_CLASSIFICATION	1.031393588775834E-5	TEST
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999775355417375	WITHOUT_CLASSIFICATION	2.246445826240881E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999965201824328	WITHOUT_CLASSIFICATION	3.4798175672530295E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999965201824328	WITHOUT_CLASSIFICATION	3.4798175672530295E-6	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9998629219701173	WITHOUT_CLASSIFICATION	1.3707802988273767E-4	TEST
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999863036662638	WITHOUT_CLASSIFICATION	1.3696333736115455E-5	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999687153700741	WITHOUT_CLASSIFICATION	3.128462992597502E-5	TEST
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999846564399195	WITHOUT_CLASSIFICATION	1.534356008053892E-5	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999862569266788	WITHOUT_CLASSIFICATION	1.3743073321160479E-5	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999862569266788	WITHOUT_CLASSIFICATION	1.3743073321160479E-5	TEST
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999832858649589	WITHOUT_CLASSIFICATION	1.6714135041134402E-5	TEST
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999896571289757	WITHOUT_CLASSIFICATION	1.0342871024267929E-5	TEST
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999880625801046	WITHOUT_CLASSIFICATION	1.1937419895326098E-5	TEST
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999818993222764	WITHOUT_CLASSIFICATION	1.8100677723596043E-5	TEST
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9998806306607614	WITHOUT_CLASSIFICATION	1.193693392385635E-4	TEST
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999990264829545	WITHOUT_CLASSIFICATION	9.735170455856443E-7	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999884041530313	WITHOUT_CLASSIFICATION	1.1595846968728769E-5	TEST
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999954940526437	WITHOUT_CLASSIFICATION	4.505947356344718E-6	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.999925005797175	WITHOUT_CLASSIFICATION	7.499420282499975E-5	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999414259429388	WITHOUT_CLASSIFICATION	5.857405706121209E-5	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999620432498231	WITHOUT_CLASSIFICATION	3.795675017689947E-5	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999855231254797	WITHOUT_CLASSIFICATION	1.4476874520369547E-5	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999679650295998	WITHOUT_CLASSIFICATION	3.20349704002451E-5	TEST
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999955299754961	WITHOUT_CLASSIFICATION	4.4700245039454735E-6	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999665180549758	WITHOUT_CLASSIFICATION	3.3481945024057415E-5	TEST
// something?	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999833688545859	WITHOUT_CLASSIFICATION	1.6631145414083112E-5	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999833688545859	WITHOUT_CLASSIFICATION	1.6631145414083112E-5	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999883172273715	WITHOUT_CLASSIFICATION	1.1682772628503634E-5	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999883172273715	WITHOUT_CLASSIFICATION	1.1682772628503634E-5	TEST
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999890546456386	WITHOUT_CLASSIFICATION	1.0945354361276058E-5	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999656580133839	WITHOUT_CLASSIFICATION	3.434198661619613E-5	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999684692477633	WITHOUT_CLASSIFICATION	3.153075223670604E-5	TEST
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999760798367502	WITHOUT_CLASSIFICATION	2.392016324987006E-5	TEST
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.999975999406327	WITHOUT_CLASSIFICATION	2.400059367304135E-5	TEST
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999864626681128	WITHOUT_CLASSIFICATION	1.353733188730354E-5	TEST
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999614266433717	WITHOUT_CLASSIFICATION	3.857335662824673E-5	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999855231254797	WITHOUT_CLASSIFICATION	1.4476874520369547E-5	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999679650295998	WITHOUT_CLASSIFICATION	3.20349704002451E-5	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999665180549758	WITHOUT_CLASSIFICATION	3.3481945024057415E-5	TEST
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999756411625941	WITHOUT_CLASSIFICATION	2.4358837405928833E-5	TEST
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9998191861261776	WITHOUT_CLASSIFICATION	1.8081387382240716E-4	TEST
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999993460121076	WITHOUT_CLASSIFICATION	6.539878922612373E-7	TEST
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999682311958928	WITHOUT_CLASSIFICATION	3.176880410709374E-5	TEST
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999726018299852	WITHOUT_CLASSIFICATION	2.7398170014869236E-5	TEST
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999199924770115	WITHOUT_CLASSIFICATION	8.000752298863526E-5	TEST
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999863145651157	WITHOUT_CLASSIFICATION	1.3685434884308605E-5	TEST
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999863145651157	WITHOUT_CLASSIFICATION	1.3685434884308605E-5	TEST
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999843943342228	WITHOUT_CLASSIFICATION	1.5605665777090177E-5	TEST
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.999976444151	WITHOUT_CLASSIFICATION	2.3555849000128735E-5	TEST
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999977069599822	WITHOUT_CLASSIFICATION	2.29304001773504E-6	TEST
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999778797740453	WITHOUT_CLASSIFICATION	2.2120225954723826E-5	TEST
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999679570628692	WITHOUT_CLASSIFICATION	3.204293713080401E-5	TEST
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.999641383704456	WITHOUT_CLASSIFICATION	3.586162955440071E-4	TEST
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9999978264246001	WITHOUT_CLASSIFICATION	2.173575399774096E-6	TEST
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999964149374073	WITHOUT_CLASSIFICATION	3.5850625928052154E-6	TEST
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.999993884745348	WITHOUT_CLASSIFICATION	6.115254651969447E-6	TEST
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999740380493066	WITHOUT_CLASSIFICATION	2.5961950693454066E-5	TEST
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999915877757394	WITHOUT_CLASSIFICATION	8.412224260554046E-6	TEST
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999976070887421	WITHOUT_CLASSIFICATION	2.392911257848552E-6	TEST
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999903989380716	WITHOUT_CLASSIFICATION	9.601061928376008E-6	TEST
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999920598412563	WITHOUT_CLASSIFICATION	7.94015874375137E-6	TEST
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.999591223760613	WITHOUT_CLASSIFICATION	4.087762393869918E-4	TEST
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999938718099084	WITHOUT_CLASSIFICATION	6.128190091593017E-6	TEST
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999748481322988	WITHOUT_CLASSIFICATION	2.5151867701305613E-5	TEST
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999929490181754	WITHOUT_CLASSIFICATION	7.050981824574911E-6	TEST
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999392008977248	WITHOUT_CLASSIFICATION	6.079910227513657E-5	TEST
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.998942961073298	WITHOUT_CLASSIFICATION	0.001057038926701999	TEST
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999949738351464	WITHOUT_CLASSIFICATION	5.026164853605678E-6	TEST
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.999894386729911	WITHOUT_CLASSIFICATION	1.056132700889173E-4	TEST
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999675942351903	WITHOUT_CLASSIFICATION	3.2405764809595205E-5	TEST
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999668566965704	WITHOUT_CLASSIFICATION	3.314330342966281E-5	TEST
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999701407546432	WITHOUT_CLASSIFICATION	2.9859245356834476E-5	TEST
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999972902966847	WITHOUT_CLASSIFICATION	2.709703315285118E-6	TEST
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999966226622667	WITHOUT_CLASSIFICATION	3.3773377332503438E-6	TEST
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999346489890881	WITHOUT_CLASSIFICATION	6.535101091184149E-5	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999942226600893	WITHOUT_CLASSIFICATION	5.77733991069876E-6	TEST
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999963754861236	WITHOUT_CLASSIFICATION	3.624513876472374E-6	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999861704987577	WITHOUT_CLASSIFICATION	1.382950124227198E-5	TEST
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999894858125055	WITHOUT_CLASSIFICATION	1.0514187494574579E-5	TEST
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999857143872105	WITHOUT_CLASSIFICATION	1.428561278935765E-5	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999687153700741	WITHOUT_CLASSIFICATION	3.128462992597502E-5	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999942226600893	WITHOUT_CLASSIFICATION	5.77733991069876E-6	TEST
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9998218685259943	WITHOUT_CLASSIFICATION	1.7813147400569257E-4	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999997972018867	WITHOUT_CLASSIFICATION	2.0279811330327168E-7	TEST
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999765506359422	WITHOUT_CLASSIFICATION	2.3449364057892003E-5	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999045046595803	WITHOUT_CLASSIFICATION	9.549534041964116E-5	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999045046595803	WITHOUT_CLASSIFICATION	9.549534041964116E-5	TEST
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999564978492484	WITHOUT_CLASSIFICATION	4.3502150751570296E-5	TEST
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999939950134453	WITHOUT_CLASSIFICATION	6.0049865546506384E-6	TEST
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.999999481382114	WITHOUT_CLASSIFICATION	5.18617886015394E-7	TEST
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999997433699945	WITHOUT_CLASSIFICATION	2.5663000553192177E-7	TEST
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9999630026731449	WITHOUT_CLASSIFICATION	3.699732685508514E-5	TEST
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999690848430952	WITHOUT_CLASSIFICATION	3.091515690475406E-5	TEST
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999045654864109	WITHOUT_CLASSIFICATION	9.543451358912637E-5	TEST
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999100780561164	WITHOUT_CLASSIFICATION	8.992194388359706E-5	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999846624104722	WITHOUT_CLASSIFICATION	1.5337589527673442E-5	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999846624104722	WITHOUT_CLASSIFICATION	1.5337589527673442E-5	TEST
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999943924993067	WITHOUT_CLASSIFICATION	5.607500693315234E-6	TEST
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999124230874864	WITHOUT_CLASSIFICATION	8.757691251353213E-5	TEST
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999997958205172	WITHOUT_CLASSIFICATION	2.041794828429296E-7	TEST
// must be a public method	WITHOUT_CLASSIFICATION	0.9999990945397474	WITHOUT_CLASSIFICATION	9.054602526116185E-7	TEST
// must be a public class	WITHOUT_CLASSIFICATION	0.9999983371411295	WITHOUT_CLASSIFICATION	1.6628588704572069E-6	TEST
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999964610953672	WITHOUT_CLASSIFICATION	3.5389046327094756E-6	TEST
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999510193684398	WITHOUT_CLASSIFICATION	4.898063156026187E-5	TEST
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999989028184364	WITHOUT_CLASSIFICATION	1.0971815635713324E-6	TEST
// no matching method found	WITHOUT_CLASSIFICATION	0.9999982841028456	WITHOUT_CLASSIFICATION	1.7158971543523386E-6	TEST
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9935110367053476	WITHOUT_CLASSIFICATION	0.006488963294652384	TEST
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999917106956772	WITHOUT_CLASSIFICATION	8.289304322890526E-6	TEST
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999908015511574	WITHOUT_CLASSIFICATION	9.198448842678711E-6	TEST
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999950296709955	WITHOUT_CLASSIFICATION	4.970329004578444E-6	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.99981597675671	WITHOUT_CLASSIFICATION	1.8402324329012617E-4	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.99981597675671	WITHOUT_CLASSIFICATION	1.8402324329012617E-4	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999825970707232	WITHOUT_CLASSIFICATION	1.7402929276760814E-5	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999973779741587	WITHOUT_CLASSIFICATION	2.622025841278025E-6	TEST
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9935110367053476	WITHOUT_CLASSIFICATION	0.006488963294652384	TEST
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999953333926362	WITHOUT_CLASSIFICATION	4.6666073638146814E-6	TEST
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999999369213195	WITHOUT_CLASSIFICATION	6.307868041538644E-8	TEST
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999993380542076	WITHOUT_CLASSIFICATION	6.619457923919597E-7	TEST
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999903991806341	WITHOUT_CLASSIFICATION	9.600819365830113E-6	TEST
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999990287077039	WITHOUT_CLASSIFICATION	9.712922961326614E-7	TEST
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999893389201594	WITHOUT_CLASSIFICATION	1.0661079840523483E-5	TEST
/* package scope */	WITHOUT_CLASSIFICATION	0.9999869190794047	WITHOUT_CLASSIFICATION	1.308092059515762E-5	TEST
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999687153700741	WITHOUT_CLASSIFICATION	3.128462992597502E-5	TEST
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999882270726927	WITHOUT_CLASSIFICATION	1.1772927307267305E-5	TEST
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.999341659566692	WITHOUT_CLASSIFICATION	6.583404333079636E-4	TEST
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999901836528444	WITHOUT_CLASSIFICATION	9.816347155499264E-6	TEST
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9997602911045292	WITHOUT_CLASSIFICATION	2.397088954708582E-4	TEST
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999916378089481	WITHOUT_CLASSIFICATION	8.362191051915979E-6	TEST
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.999997068315555	WITHOUT_CLASSIFICATION	2.931684444878103E-6	TEST
// statically initialized below	WITHOUT_CLASSIFICATION	0.9998799017420748	WITHOUT_CLASSIFICATION	1.2009825792521515E-4	TEST
// finish class initializer	WITHOUT_CLASSIFICATION	0.999992110748935	WITHOUT_CLASSIFICATION	7.889251065081041E-6	TEST
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999924936143222	WITHOUT_CLASSIFICATION	7.506385677699332E-6	TEST
// should not happen!	WITHOUT_CLASSIFICATION	0.9998934390496284	WITHOUT_CLASSIFICATION	1.065609503717068E-4	TEST
// start class	WITHOUT_CLASSIFICATION	0.9999970588715504	WITHOUT_CLASSIFICATION	2.941128449572353E-6	TEST
// make getter for handler	WITHOUT_CLASSIFICATION	0.999935352703645	WITHOUT_CLASSIFICATION	6.464729635506498E-5	TEST
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999655475800459	WITHOUT_CLASSIFICATION	3.445241995415828E-5	TEST
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9931353680788532	WITHOUT_CLASSIFICATION	0.006864631921146782	TEST
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999721833041519	WITHOUT_CLASSIFICATION	2.781669584806087E-5	TEST
// create static private method field	WITHOUT_CLASSIFICATION	0.9999942411878701	WITHOUT_CLASSIFICATION	5.758812129925817E-6	TEST
// load static empty array	WITHOUT_CLASSIFICATION	0.9999895267978158	WITHOUT_CLASSIFICATION	1.0473202184131272E-5	TEST
// box arguments	WITHOUT_CLASSIFICATION	0.9999955090402909	WITHOUT_CLASSIFICATION	4.490959709141019E-6	TEST
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9997367353898912	WITHOUT_CLASSIFICATION	2.6326461010888044E-4	TEST
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999964301401894	WITHOUT_CLASSIFICATION	3.56985981078856E-6	TEST
// do a void return	WITHOUT_CLASSIFICATION	0.9999978922108244	WITHOUT_CLASSIFICATION	2.107789175589642E-6	TEST
// // utility methods //	WITHOUT_CLASSIFICATION	0.999988443683279	WITHOUT_CLASSIFICATION	1.1556316721019803E-5	TEST
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999564978492484	WITHOUT_CLASSIFICATION	4.3502150751570296E-5	TEST
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999871900108722	WITHOUT_CLASSIFICATION	1.280998912766933E-5	TEST
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.999999448297928	WITHOUT_CLASSIFICATION	5.517020720805845E-7	TEST
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999821708156966	WITHOUT_CLASSIFICATION	1.7829184303389873E-5	TEST
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999842571564654	WITHOUT_CLASSIFICATION	1.574284353452416E-5	TEST
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999898447695948	WITHOUT_CLASSIFICATION	1.0155230405102409E-5	TEST
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.999995972754271	WITHOUT_CLASSIFICATION	4.0272457289655126E-6	TEST
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999903919514721	WITHOUT_CLASSIFICATION	9.60804852796095E-6	TEST
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9998885128098145	WITHOUT_CLASSIFICATION	1.1148719018550681E-4	TEST
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9989941382221478	WITHOUT_CLASSIFICATION	0.0010058617778522711	TEST
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999914251650783	WITHOUT_CLASSIFICATION	8.574834921639939E-6	TEST
/* NUL */	WITHOUT_CLASSIFICATION	0.9998443336975474	WITHOUT_CLASSIFICATION	1.5566630245257587E-4	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999216930018296	WITHOUT_CLASSIFICATION	7.83069981703489E-5	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999892836372009	WITHOUT_CLASSIFICATION	1.0716362799175771E-5	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999993259449742	WITHOUT_CLASSIFICATION	6.740550257815302E-7	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999229539576041	WITHOUT_CLASSIFICATION	7.704604239586619E-5	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.999994548935786	WITHOUT_CLASSIFICATION	5.4510642139831375E-6	TEST
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.999993788068976	WITHOUT_CLASSIFICATION	6.211931024061991E-6	TEST
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999830510918456	WITHOUT_CLASSIFICATION	1.6948908154306772E-5	TEST
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999721329324153	WITHOUT_CLASSIFICATION	2.7867067584718125E-5	TEST
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.999919206307862	WITHOUT_CLASSIFICATION	8.079369213803E-5	TEST
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999441723078865	WITHOUT_CLASSIFICATION	5.582769211349195E-5	TEST
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9997602836393227	WITHOUT_CLASSIFICATION	2.397163606772558E-4	TEST
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9995364644716681	WITHOUT_CLASSIFICATION	4.635355283319173E-4	TEST
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999978816109161	WITHOUT_CLASSIFICATION	2.1183890839592134E-6	TEST
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999842646752148	WITHOUT_CLASSIFICATION	1.573532478514369E-5	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.999991988757889	WITHOUT_CLASSIFICATION	8.011242110959553E-6	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.999991988757889	WITHOUT_CLASSIFICATION	8.011242110959553E-6	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.999991988757889	WITHOUT_CLASSIFICATION	8.011242110959553E-6	TEST
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.999999219657143	WITHOUT_CLASSIFICATION	7.80342857017929E-7	TEST
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.999998464521035	WITHOUT_CLASSIFICATION	1.5354789649734857E-6	TEST
// Single node in list	WITHOUT_CLASSIFICATION	0.9999965225607164	WITHOUT_CLASSIFICATION	3.4774392837737454E-6	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999665902704803	WITHOUT_CLASSIFICATION	3.3409729519730627E-5	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999665902704803	WITHOUT_CLASSIFICATION	3.3409729519730627E-5	TEST
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999800974547257	WITHOUT_CLASSIFICATION	1.9902545274246284E-5	TEST
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999531478111963	WITHOUT_CLASSIFICATION	4.6852188803627224E-5	TEST
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999521842341774	WITHOUT_CLASSIFICATION	4.7815765822658397E-5	TEST
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.999996969337807	WITHOUT_CLASSIFICATION	3.0306621929471596E-6	TEST
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999929873164475	WITHOUT_CLASSIFICATION	7.0126835524383246E-6	TEST
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999510412792447	WITHOUT_CLASSIFICATION	4.895872075535517E-5	TEST
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999548468876018	WITHOUT_CLASSIFICATION	4.5153112398190825E-5	TEST
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999952317162912	WITHOUT_CLASSIFICATION	4.768283708728929E-6	TEST
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999963040766618	WITHOUT_CLASSIFICATION	3.6959233382547687E-6	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.999983590139215	WITHOUT_CLASSIFICATION	1.6409860785021896E-5	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.999983590139215	WITHOUT_CLASSIFICATION	1.6409860785021896E-5	TEST
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.999943040405299	WITHOUT_CLASSIFICATION	5.695959470097758E-5	TEST
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.999994199881886	WITHOUT_CLASSIFICATION	5.800118114113806E-6	TEST
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999901634320032	WITHOUT_CLASSIFICATION	9.836567996705761E-6	TEST
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999669958366624	WITHOUT_CLASSIFICATION	3.30041633377121E-5	TEST
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999830741433349	WITHOUT_CLASSIFICATION	1.692585666515565E-5	TEST
/* just ignore */	WITHOUT_CLASSIFICATION	0.999996675141844	WITHOUT_CLASSIFICATION	3.324858156098824E-6	TEST
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999851935359395	WITHOUT_CLASSIFICATION	1.4806464060410364E-5	TEST
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999871399829119	WITHOUT_CLASSIFICATION	1.286001708815309E-5	TEST
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999345638863254	WITHOUT_CLASSIFICATION	6.543611367458778E-5	TEST
// POP	WITHOUT_CLASSIFICATION	0.9999345638863254	WITHOUT_CLASSIFICATION	6.543611367458778E-5	TEST
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999613056764577	WITHOUT_CLASSIFICATION	3.869432354235612E-5	TEST
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999345638863254	WITHOUT_CLASSIFICATION	6.543611367458778E-5	TEST
// SET_P	WITHOUT_CLASSIFICATION	0.9999345638863254	WITHOUT_CLASSIFICATION	6.543611367458778E-5	TEST
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999676399001625	WITHOUT_CLASSIFICATION	3.236009983762193E-5	TEST
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9998556143863597	WITHOUT_CLASSIFICATION	1.4438561364030485E-4	TEST
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999920012687349	WITHOUT_CLASSIFICATION	7.998731265155077E-6	TEST
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.999970920111964	WITHOUT_CLASSIFICATION	2.9079888035981963E-5	TEST
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9996500777655335	WITHOUT_CLASSIFICATION	3.49922234466413E-4	TEST
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999848720024119	WITHOUT_CLASSIFICATION	1.5127997588048861E-5	TEST
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999940020389456	WITHOUT_CLASSIFICATION	5.997961054354063E-6	TEST
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9999870384036545	WITHOUT_CLASSIFICATION	1.2961596345382242E-5	TEST
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999873425969718	WITHOUT_CLASSIFICATION	1.2657403028159929E-5	TEST
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999607885878515	WITHOUT_CLASSIFICATION	3.921141214848183E-5	TEST
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999856942169717	WITHOUT_CLASSIFICATION	1.4305783028273224E-5	TEST
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999930545063002	WITHOUT_CLASSIFICATION	6.945493699809634E-6	TEST
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999709230320627	WITHOUT_CLASSIFICATION	2.9076967937250053E-5	TEST
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999868631602001	WITHOUT_CLASSIFICATION	1.3136839799843526E-5	TEST
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999577849723945	WITHOUT_CLASSIFICATION	4.221502760547707E-5	TEST
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.999992994480907	WITHOUT_CLASSIFICATION	7.005519093013879E-6	TEST
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999934395709464	WITHOUT_CLASSIFICATION	6.560429053516502E-6	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.9998443336975474	WITHOUT_CLASSIFICATION	1.5566630245257587E-4	TEST
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999939060052631	WITHOUT_CLASSIFICATION	6.093994737003682E-6	TEST
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999915719856325	WITHOUT_CLASSIFICATION	8.428014367411586E-6	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.9998443336975474	WITHOUT_CLASSIFICATION	1.5566630245257587E-4	TEST
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999943636489814	WITHOUT_CLASSIFICATION	5.6363510185727E-6	TEST
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9998160335676274	WITHOUT_CLASSIFICATION	1.8396643237271527E-4	TEST
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999569364336666	WITHOUT_CLASSIFICATION	4.3063566333476484E-5	TEST
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.99998625568911	WITHOUT_CLASSIFICATION	1.3744310889944337E-5	TEST
// documentation nodes	WITHOUT_CLASSIFICATION	0.999977407058767	WITHOUT_CLASSIFICATION	2.2592941233079554E-5	TEST
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999942516314304	WITHOUT_CLASSIFICATION	5.748368569576946E-6	TEST
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999963142636294	WITHOUT_CLASSIFICATION	3.6857363705631098E-6	TEST
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9998775812552316	WITHOUT_CLASSIFICATION	1.2241874476846118E-4	TEST
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999843875830868	WITHOUT_CLASSIFICATION	1.5612416913172648E-5	TEST
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999843875830868	WITHOUT_CLASSIFICATION	1.5612416913172648E-5	TEST
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999843875830868	WITHOUT_CLASSIFICATION	1.5612416913172648E-5	TEST
/* $?: last status */	WITHOUT_CLASSIFICATION	0.999972244538462	WITHOUT_CLASSIFICATION	2.7755461537920632E-5	TEST
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999528489872382	WITHOUT_CLASSIFICATION	4.715101276179318E-5	TEST
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999850444435778	WITHOUT_CLASSIFICATION	1.4955556422208334E-5	TEST
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999267592579651	WITHOUT_CLASSIFICATION	7.324074203480728E-5	TEST
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999690636127355	WITHOUT_CLASSIFICATION	3.0936387264516363E-5	TEST
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999606843821272	WITHOUT_CLASSIFICATION	3.931561787289238E-5	TEST
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999555390648559	WITHOUT_CLASSIFICATION	4.4460935144165694E-5	TEST
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999843875830868	WITHOUT_CLASSIFICATION	1.5612416913172648E-5	TEST
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999873488592103	WITHOUT_CLASSIFICATION	1.2651140789700405E-5	TEST
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.999967433026219	WITHOUT_CLASSIFICATION	3.2566973780959866E-5	TEST
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999806297317276	WITHOUT_CLASSIFICATION	1.9370268272416362E-5	TEST
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999883966048723	WITHOUT_CLASSIFICATION	1.16033951277023E-5	TEST
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.999826149485826	WITHOUT_CLASSIFICATION	1.7385051417391137E-4	TEST
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9997172796313046	WITHOUT_CLASSIFICATION	2.827203686953207E-4	TEST
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.999951763772254	WITHOUT_CLASSIFICATION	4.8236227746095844E-5	TEST
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9996516030762321	WITHOUT_CLASSIFICATION	3.4839692376791254E-4	TEST
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999934995289416	WITHOUT_CLASSIFICATION	6.500471058409588E-6	TEST
// block (primary)	WITHOUT_CLASSIFICATION	0.9999936113351716	WITHOUT_CLASSIFICATION	6.388664828349239E-6	TEST
// block (expr)	WITHOUT_CLASSIFICATION	0.9999936113351716	WITHOUT_CLASSIFICATION	6.388664828349239E-6	TEST
// hash	WITHOUT_CLASSIFICATION	0.9999352005961822	WITHOUT_CLASSIFICATION	6.479940381779073E-5	TEST
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9994160692073035	WITHOUT_CLASSIFICATION	5.839307926964404E-4	TEST
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9999615476384665	WITHOUT_CLASSIFICATION	3.845236153361255E-5	TEST
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999837916156136	WITHOUT_CLASSIFICATION	1.6208384386497073E-5	TEST
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999922219963858	WITHOUT_CLASSIFICATION	7.778003614129996E-6	TEST
// binary	WITHOUT_CLASSIFICATION	0.9999368256450695	WITHOUT_CLASSIFICATION	6.31743549304992E-5	TEST
// decimal	WITHOUT_CLASSIFICATION	0.9999346521132668	WITHOUT_CLASSIFICATION	6.534788673317186E-5	TEST
//Octal	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999979348940226	WITHOUT_CLASSIFICATION	2.06510597737556E-6	TEST
// backslash	WITHOUT_CLASSIFICATION	0.9999935067838863	WITHOUT_CLASSIFICATION	6.493216113687454E-6	TEST
// newline	WITHOUT_CLASSIFICATION	0.9999353392422687	WITHOUT_CLASSIFICATION	6.466075773125462E-5	TEST
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999939964948342	WITHOUT_CLASSIFICATION	6.003505165751984E-6	TEST
// form feed	WITHOUT_CLASSIFICATION	0.9999943797082037	WITHOUT_CLASSIFICATION	5.620291796273084E-6	TEST
// vertical tab	WITHOUT_CLASSIFICATION	0.99999400479985	WITHOUT_CLASSIFICATION	5.995200150060759E-6	TEST
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// escape	WITHOUT_CLASSIFICATION	0.999944119162909	WITHOUT_CLASSIFICATION	5.5880837090897596E-5	TEST
// hex constant	WITHOUT_CLASSIFICATION	0.9999945945919901	WITHOUT_CLASSIFICATION	5.405408009865318E-6	TEST
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999246317585802	WITHOUT_CLASSIFICATION	7.536824141987815E-5	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999898927115591	WITHOUT_CLASSIFICATION	1.0107288440876862E-5	TEST
// space	WITHOUT_CLASSIFICATION	0.999964711447173	WITHOUT_CLASSIFICATION	3.528855282707696E-5	TEST
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9998512121106695	WITHOUT_CLASSIFICATION	1.4878788933056868E-4	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9996666862888897	WITHOUT_CLASSIFICATION	3.3331371111042517E-4	TEST
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999923857009867	WITHOUT_CLASSIFICATION	7.61429901323358E-6	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999898927115591	WITHOUT_CLASSIFICATION	1.0107288440876862E-5	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.999915462765233	WITHOUT_CLASSIFICATION	8.453723476695376E-5	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.999915462765233	WITHOUT_CLASSIFICATION	8.453723476695376E-5	TEST
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999827446704891	WITHOUT_CLASSIFICATION	1.7255329510851256E-5	TEST
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999732658628091	WITHOUT_CLASSIFICATION	2.6734137190847812E-5	TEST
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.99999450253918	WITHOUT_CLASSIFICATION	5.497460820067715E-6	TEST
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999608433539541	WITHOUT_CLASSIFICATION	3.915664604590952E-5	TEST
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999833958361156	WITHOUT_CLASSIFICATION	1.6604163884292854E-5	TEST
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999665180549758	WITHOUT_CLASSIFICATION	3.3481945024057415E-5	TEST
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9749193318726381	TEST	0.02508066812736181	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999510231496128	WITHOUT_CLASSIFICATION	4.8976850387211495E-5	TEST
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999568908216971	WITHOUT_CLASSIFICATION	4.310917830272872E-5	TEST
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999514662007949	WITHOUT_CLASSIFICATION	4.8533799205102804E-5	TEST
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999575340868214	WITHOUT_CLASSIFICATION	4.2465913178467245E-5	TEST
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9998030961774134	WITHOUT_CLASSIFICATION	1.9690382258661504E-4	TEST
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999956131661139	WITHOUT_CLASSIFICATION	4.3868338861407984E-6	TEST
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999960486136659	WITHOUT_CLASSIFICATION	3.9513863342001485E-6	TEST
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999322509522515	WITHOUT_CLASSIFICATION	6.774904774857506E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
// line 329	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9996012562187385	WITHOUT_CLASSIFICATION	3.987437812614635E-4	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999852402382197	WITHOUT_CLASSIFICATION	1.4759761780239506E-5	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.999866921501978	WITHOUT_CLASSIFICATION	1.3307849802196925E-4	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999868113140423	WITHOUT_CLASSIFICATION	1.3188685957654978E-5	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999980848556467	WITHOUT_CLASSIFICATION	1.915144353447733E-6	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999934417597792	WITHOUT_CLASSIFICATION	6.558240220738069E-6	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999936810969745	WITHOUT_CLASSIFICATION	6.318903025480553E-6	TEST
// line 271	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 274	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 303	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 311	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 314	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 317	WITHOUT_CLASSIFICATION	0.9999955948717442	WITHOUT_CLASSIFICATION	4.405128255878342E-6	TEST
// line 332	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 338	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 341	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 344	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 358	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 367	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 378	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 407	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 411	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 414	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 434	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 443	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 446	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 452	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 457	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 464	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 467	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 470	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 479	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 484	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 492	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 498	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 501	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 504	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 507	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 510	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 519	WITHOUT_CLASSIFICATION	0.9999955986632943	WITHOUT_CLASSIFICATION	4.401336705752089E-6	TEST
// line 525	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 556	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 559	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 563	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 569	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 575	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 578	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 587	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 596	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 604	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 607	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 613	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 616	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 634	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 638	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 643	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 646	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 655	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 660	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 667	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 670	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 701	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 717	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 720	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 726	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 729	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 735	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 738	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 751	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 754	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 757	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 760	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 763	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 769	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 775	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 797	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 803	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 806	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 809	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 815	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 818	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 821	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 824	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 830	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 833	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 836	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 852	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 858	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 861	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 868	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 871	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 876	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 879	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 883	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 899	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 903	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 907	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 915	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 920	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 923	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 926	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 936	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 940	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 944	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 948	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 956	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 964	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 967	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 972	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 978	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 984	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 986	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 996	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1001	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1008	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1014	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1029	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1032	WITHOUT_CLASSIFICATION	0.9999956099264722	WITHOUT_CLASSIFICATION	4.390073527792939E-6	TEST
// line 1034	WITHOUT_CLASSIFICATION	0.999995594858916	WITHOUT_CLASSIFICATION	4.405141084085116E-6	TEST
// line 1045	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1048	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1051	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1058	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1070	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1073	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1076	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1079	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1082	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1089	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1100	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1103	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1107	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.999995625740301	WITHOUT_CLASSIFICATION	4.374259698986686E-6	TEST
// line 1113	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1115	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1119	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1135	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1137	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1151	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1154	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1164	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1175	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1178	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1187	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1189	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1193	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1214	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1234	WITHOUT_CLASSIFICATION	0.9999956038809189	WITHOUT_CLASSIFICATION	4.396119081051556E-6	TEST
// line 1239	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1243	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1263	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1269	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1280	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1283	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1290	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1296	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1299	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1302	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1309	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1313	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1315	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1328	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1335	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1352	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1358	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1374	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1381	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1415	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1431	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1434	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1440	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1443	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1453	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1465	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1477	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1480	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1485	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1488	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1510	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1516	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1533	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1550	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1553	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1556	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1565	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1568	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1571	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1574	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1577	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1587	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1600	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1609	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1623	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1626	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1638	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1641	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1644	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1649	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1655	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1658	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1661	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1672	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1677	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1687	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1694	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1733	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1745	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1757	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1769	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1775	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1784	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1808	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1814	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999811757700297	WITHOUT_CLASSIFICATION	1.8824229970321538E-5	TEST
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9992015038553028	WITHOUT_CLASSIFICATION	7.984961446972054E-4	TEST
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9998999426735777	WITHOUT_CLASSIFICATION	1.0005732642234485E-4	TEST
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999068594459056	WITHOUT_CLASSIFICATION	9.314055409443337E-5	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9997248800448234	WITHOUT_CLASSIFICATION	2.7511995517655877E-4	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9998703779209712	WITHOUT_CLASSIFICATION	1.2962207902878279E-4	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9997341759287047	WITHOUT_CLASSIFICATION	2.658240712952858E-4	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9997341759287047	WITHOUT_CLASSIFICATION	2.658240712952858E-4	TEST
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999016333902366	WITHOUT_CLASSIFICATION	9.836660976326466E-5	TEST
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9998176981504684	WITHOUT_CLASSIFICATION	1.8230184953170155E-4	TEST
// line 529	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999065154254956	WITHOUT_CLASSIFICATION	9.348457450451479E-5	TEST
/* XXX*/	WITHOUT_CLASSIFICATION	0.9995957120698022	WITHOUT_CLASSIFICATION	4.042879301976785E-4	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999765433081447	WITHOUT_CLASSIFICATION	2.345669185532523E-5	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998411854793462	WITHOUT_CLASSIFICATION	1.588145206537928E-4	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999065154254956	WITHOUT_CLASSIFICATION	9.348457450451479E-5	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9997931022202877	WITHOUT_CLASSIFICATION	2.0689777971227215E-4	TEST
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999775240773727	WITHOUT_CLASSIFICATION	2.2475922627247335E-5	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999927525564379	WITHOUT_CLASSIFICATION	7.2474435620466695E-6	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9991321742418319	WITHOUT_CLASSIFICATION	8.678257581679911E-4	TEST
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999956012293005	WITHOUT_CLASSIFICATION	4.398770699462146E-6	TEST
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999862049362391	WITHOUT_CLASSIFICATION	1.3795063760816428E-5	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999968539200993	WITHOUT_CLASSIFICATION	3.1460799006912638E-6	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999968539200993	WITHOUT_CLASSIFICATION	3.1460799006912638E-6	TEST
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9998337863328891	WITHOUT_CLASSIFICATION	1.662136671109481E-4	TEST
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9989918698268846	WITHOUT_CLASSIFICATION	0.0010081301731154726	TEST
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.999875922288323	WITHOUT_CLASSIFICATION	1.2407771167692022E-4	TEST
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999909604880695	WITHOUT_CLASSIFICATION	9.0395119305013E-6	TEST
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9996063298379567	WITHOUT_CLASSIFICATION	3.936701620432838E-4	TEST
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999135411467043	WITHOUT_CLASSIFICATION	8.645885329570546E-5	TEST
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999986850574215	WITHOUT_CLASSIFICATION	1.3149425784816557E-6	TEST
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999690835715183	WITHOUT_CLASSIFICATION	3.0916428481822425E-5	TEST
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999884337684172	WITHOUT_CLASSIFICATION	1.1566231582765623E-5	TEST
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999724544663678	WITHOUT_CLASSIFICATION	2.7545533632110466E-5	TEST
// Parser states:	WITHOUT_CLASSIFICATION	0.9999934523766091	WITHOUT_CLASSIFICATION	6.5476233908482045E-6	TEST
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999770441606814	WITHOUT_CLASSIFICATION	2.2955839318538254E-5	TEST
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999941183470308	WITHOUT_CLASSIFICATION	5.8816529691891695E-6	TEST
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9997018480503637	WITHOUT_CLASSIFICATION	2.9815194963633715E-4	TEST
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999640117477222	WITHOUT_CLASSIFICATION	3.598825227774907E-5	TEST
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999767843824137	WITHOUT_CLASSIFICATION	2.321561758629057E-5	TEST
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999749453953028	WITHOUT_CLASSIFICATION	2.5054604697091805E-5	TEST
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999547212878991	WITHOUT_CLASSIFICATION	4.527871210082892E-5	TEST
// Node	WITHOUT_CLASSIFICATION	0.9999346851393903	WITHOUT_CLASSIFICATION	6.53148606097114E-5	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9995781730410838	WITHOUT_CLASSIFICATION	4.2182695891622223E-4	TEST
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9995155194285227	WITHOUT_CLASSIFICATION	4.8448057147728365E-4	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9995781730410838	WITHOUT_CLASSIFICATION	4.2182695891622223E-4	TEST
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9994097711938802	WITHOUT_CLASSIFICATION	5.902288061198182E-4	TEST
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9995155194285227	WITHOUT_CLASSIFICATION	4.8448057147728365E-4	TEST
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9999772500832514	WITHOUT_CLASSIFICATION	2.2749916748496674E-5	TEST
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999843875830868	WITHOUT_CLASSIFICATION	1.5612416913172648E-5	TEST
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999766359570088	WITHOUT_CLASSIFICATION	2.336404299117826E-5	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999345638863254	WITHOUT_CLASSIFICATION	6.543611367458778E-5	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999345638863254	WITHOUT_CLASSIFICATION	6.543611367458778E-5	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999345638863254	WITHOUT_CLASSIFICATION	6.543611367458778E-5	TEST
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999128936270429	WITHOUT_CLASSIFICATION	8.710637295705871E-5	TEST
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9951306056888887	WITHOUT_CLASSIFICATION	0.004869394311111331	TEST
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.999986117690996	WITHOUT_CLASSIFICATION	1.388230900409241E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999852402382197	WITHOUT_CLASSIFICATION	1.4759761780239506E-5	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999868113140423	WITHOUT_CLASSIFICATION	1.3188685957654978E-5	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999980848556467	WITHOUT_CLASSIFICATION	1.915144353447733E-6	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999934417597792	WITHOUT_CLASSIFICATION	6.558240220738069E-6	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999936810969745	WITHOUT_CLASSIFICATION	6.318903025480553E-6	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 280	WITHOUT_CLASSIFICATION	0.9999955948018198	WITHOUT_CLASSIFICATION	4.405198180290883E-6	TEST
// line 283	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 296	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 324	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 327	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 331	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 333	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 336	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 342	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 345	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 348	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 354	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 368	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 377	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 388	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 392	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 397	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 429	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 432	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 436	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 445	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 448	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 454	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 459	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 466	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 469	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 478	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 481	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 488	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 494	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 497	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 503	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 506	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 509	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 512	WITHOUT_CLASSIFICATION	0.9999955975283754	WITHOUT_CLASSIFICATION	4.402471624541409E-6	TEST
// line 521	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 526	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 785	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 534	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 549	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 552	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 558	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 561	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 571	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 574	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 579	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 586	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 589	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 592	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 595	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 598	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 623	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 627	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 630	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 633	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 639	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 648	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 657	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 661	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 666	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 678	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 682	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 688	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 699	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 706	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 708	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 727	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 737	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 753	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 779	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 801	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 808	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 811	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 817	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 899	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 944	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 820	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 826	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 829	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 832	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 851	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 857	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 860	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 863	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 866	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 869	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 875	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 884	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 887	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 890	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 902	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 909	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 912	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 916	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 922	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 928	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 941	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 947	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 951	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 955	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 965	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 969	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 977	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 983	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1013	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1023	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1035	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1041	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1043	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1054	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1057	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1060	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1069	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1075	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.999995625740301	WITHOUT_CLASSIFICATION	4.374259698986686E-6	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1078	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1084	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1087	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1090	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1093	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1114	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1116	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1118	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1124	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1126	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1138	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1144	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1149	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1155	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1162	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1173	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1179	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1182	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1190	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1196	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1213	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1217	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1231	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1236	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1244	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1254	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1258	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1264	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1270	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1273	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1276	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1279	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1282	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1289	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1292	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1295	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1298	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1305	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1308	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1311	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1317	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1323	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1326	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1329	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1337	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1342	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1345	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1354	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1359	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1366	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1369	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1373	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1377	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1383	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1399	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1401	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1406	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1417	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1424	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1427	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1430	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1433	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1436	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1442	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1445	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1458	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1464	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1489	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1493	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1507	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1519	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1532	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1538	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1542	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1557	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1573	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1591	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1607	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1610	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1622	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1625	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1636	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1639	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1647	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1651	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1657	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1660	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1663	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1678	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1702	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1711	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1719	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1722	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1731	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1734	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1738	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1746	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1756	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1758	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1761	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1767	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1776	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1782	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1785	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1788	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1791	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1797	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1800	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1803	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1806	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1809	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1815	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1825	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1828	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1831	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1847	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9997341759287047	WITHOUT_CLASSIFICATION	2.658240712952858E-4	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9997341759287047	WITHOUT_CLASSIFICATION	2.658240712952858E-4	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999065154254956	WITHOUT_CLASSIFICATION	9.348457450451479E-5	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999765433081447	WITHOUT_CLASSIFICATION	2.345669185532523E-5	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998411854793462	WITHOUT_CLASSIFICATION	1.588145206537928E-4	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999065154254956	WITHOUT_CLASSIFICATION	9.348457450451479E-5	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9997931022202877	WITHOUT_CLASSIFICATION	2.0689777971227215E-4	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999665577514218	WITHOUT_CLASSIFICATION	3.3442248578222834E-5	TEST
// line 1854	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1869	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1872	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1877	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1886	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1898	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1902	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1905	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1911	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1918	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1935	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1938	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1942	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1948	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1960	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1963	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1968	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1972	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1982	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1995	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 2000	WITHOUT_CLASSIFICATION	0.9999955949297886	WITHOUT_CLASSIFICATION	4.405070211463639E-6	TEST
// line 2006	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 2010	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9998887161944484	WITHOUT_CLASSIFICATION	1.1128380555163526E-4	TEST
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9997318994466645	WITHOUT_CLASSIFICATION	2.6810055333542176E-4	TEST
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9997842376178783	WITHOUT_CLASSIFICATION	2.1576238212178353E-4	TEST
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999928092189703	WITHOUT_CLASSIFICATION	7.190781029754178E-6	TEST
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999191279884467	WITHOUT_CLASSIFICATION	8.087201155321351E-5	TEST
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.999696718135386	WITHOUT_CLASSIFICATION	3.032818646140571E-4	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999927525564379	WITHOUT_CLASSIFICATION	7.2474435620466695E-6	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9991321742418319	WITHOUT_CLASSIFICATION	8.678257581679911E-4	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999968539200993	WITHOUT_CLASSIFICATION	3.1460799006912638E-6	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999968539200993	WITHOUT_CLASSIFICATION	3.1460799006912638E-6	TEST
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9998887231715241	WITHOUT_CLASSIFICATION	1.1127682847591238E-4	TEST
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999885846206085	WITHOUT_CLASSIFICATION	1.141537939156224E-5	TEST
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999898455187266	WITHOUT_CLASSIFICATION	1.0154481273429796E-5	TEST
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999956012293005	WITHOUT_CLASSIFICATION	4.398770699462146E-6	TEST
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.999999001332753	WITHOUT_CLASSIFICATION	9.986672470818218E-7	TEST
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9998976861000746	WITHOUT_CLASSIFICATION	1.023138999254321E-4	TEST
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999787549592944	WITHOUT_CLASSIFICATION	2.1245040705527894E-5	TEST
// Live reference to module	WITHOUT_CLASSIFICATION	0.999995973787689	WITHOUT_CLASSIFICATION	4.026212310914076E-6	TEST
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999887455721056	WITHOUT_CLASSIFICATION	1.1254427894286212E-5	TEST
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999910126211436	WITHOUT_CLASSIFICATION	8.987378856394914E-6	TEST
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999732878448088	WITHOUT_CLASSIFICATION	2.6712155191305307E-5	TEST
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999658805185337	WITHOUT_CLASSIFICATION	3.411948146624407E-5	TEST
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999816615086343	WITHOUT_CLASSIFICATION	1.8338491365690435E-5	TEST
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999914962751105	WITHOUT_CLASSIFICATION	8.503724889389667E-6	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999937038207882	WITHOUT_CLASSIFICATION	6.2961792118031745E-6	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999937038207882	WITHOUT_CLASSIFICATION	6.2961792118031745E-6	TEST
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9997360271630719	WITHOUT_CLASSIFICATION	2.639728369281387E-4	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999952075554405	WITHOUT_CLASSIFICATION	4.792444559592418E-6	TEST
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999966048962379	WITHOUT_CLASSIFICATION	3.395103762148384E-6	TEST
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9998042520511472	WITHOUT_CLASSIFICATION	1.9574794885294277E-4	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999967924104737	WITHOUT_CLASSIFICATION	3.2075895264093044E-6	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999951339931847	WITHOUT_CLASSIFICATION	4.866006815278618E-6	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999965395538444	WITHOUT_CLASSIFICATION	3.460446155769183E-6	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999951339931847	WITHOUT_CLASSIFICATION	4.866006815278618E-6	TEST
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999718699296126	WITHOUT_CLASSIFICATION	2.8130070387427027E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999888482354623	WITHOUT_CLASSIFICATION	1.1151764537755992E-5	TEST
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9996283847176008	WITHOUT_CLASSIFICATION	3.7161528239913896E-4	TEST
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9993765845083384	WITHOUT_CLASSIFICATION	6.234154916615289E-4	TEST
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9996288471814928	WITHOUT_CLASSIFICATION	3.711528185072691E-4	TEST
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9996288471814928	WITHOUT_CLASSIFICATION	3.711528185072691E-4	TEST
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999411143997808	WITHOUT_CLASSIFICATION	5.888560021920706E-5	TEST
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.999974974579275	WITHOUT_CLASSIFICATION	2.5025420725051892E-5	TEST
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999746119481365	WITHOUT_CLASSIFICATION	2.538805186345259E-5	TEST
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999942709593819	WITHOUT_CLASSIFICATION	5.729040618033199E-6	TEST
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999620426867786	WITHOUT_CLASSIFICATION	3.7957313221486165E-5	TEST
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9995934283293119	WITHOUT_CLASSIFICATION	4.0657167068805907E-4	TEST
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9995934283293119	WITHOUT_CLASSIFICATION	4.0657167068805907E-4	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9996072665686193	WITHOUT_CLASSIFICATION	3.9273343138076E-4	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9998788821149549	WITHOUT_CLASSIFICATION	1.2111788504504676E-4	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9998788821149549	WITHOUT_CLASSIFICATION	1.2111788504504676E-4	TEST
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999872545391254	WITHOUT_CLASSIFICATION	1.2745460874684574E-5	TEST
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.999957683563222	WITHOUT_CLASSIFICATION	4.231643677801017E-5	TEST
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999758239737838	WITHOUT_CLASSIFICATION	2.417602621619399E-5	TEST
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999947806298755	WITHOUT_CLASSIFICATION	5.219370124552093E-6	TEST
// required and optional only	WITHOUT_CLASSIFICATION	0.99999681303748	WITHOUT_CLASSIFICATION	3.186962519950977E-6	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999951339931847	WITHOUT_CLASSIFICATION	4.866006815278618E-6	TEST
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999817948396837	WITHOUT_CLASSIFICATION	1.82051603162769E-5	TEST
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999999121225773	WITHOUT_CLASSIFICATION	8.787742261258869E-8	TEST
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999496126546868	WITHOUT_CLASSIFICATION	5.038734531313509E-5	TEST
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999818081953415	WITHOUT_CLASSIFICATION	1.8191804658373755E-5	TEST
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.99999985290615	WITHOUT_CLASSIFICATION	1.470938499420731E-7	TEST
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999994432585075	WITHOUT_CLASSIFICATION	5.567414925092695E-7	TEST
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999900777663601	WITHOUT_CLASSIFICATION	9.922233639979606E-6	TEST
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9998244855423776	WITHOUT_CLASSIFICATION	1.7551445762243372E-4	TEST
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999962991797045	WITHOUT_CLASSIFICATION	3.7008202955561536E-6	TEST
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999280852713528	WITHOUT_CLASSIFICATION	7.19147286471713E-5	TEST
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999702742507842	WITHOUT_CLASSIFICATION	2.972574921576996E-5	TEST
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999998667916429	WITHOUT_CLASSIFICATION	1.3320835711907762E-7	TEST
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9990455559648758	WITHOUT_CLASSIFICATION	9.54444035124216E-4	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999936421351201	WITHOUT_CLASSIFICATION	6.357864879972855E-6	TEST
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9999517147978962	WITHOUT_CLASSIFICATION	4.828520210376879E-5	TEST
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999851973543072	WITHOUT_CLASSIFICATION	1.4802645692864036E-5	TEST
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999869268977001	WITHOUT_CLASSIFICATION	1.3073102299892692E-5	TEST
// id must always be even	WITHOUT_CLASSIFICATION	0.9999900337096239	WITHOUT_CLASSIFICATION	9.96629037615189E-6	TEST
// with block pass	WITHOUT_CLASSIFICATION	0.999924433547388	WITHOUT_CLASSIFICATION	7.556645261201663E-5	TEST
// no block	WITHOUT_CLASSIFICATION	0.9999968746592229	WITHOUT_CLASSIFICATION	3.1253407770804694E-6	TEST
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9998861972334656	WITHOUT_CLASSIFICATION	1.1380276653432251E-4	TEST
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9993860744232361	WITHOUT_CLASSIFICATION	6.139255767637925E-4	TEST
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9998929698888795	WITHOUT_CLASSIFICATION	1.0703011112040222E-4	TEST
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999599820047542	WITHOUT_CLASSIFICATION	4.001799524570556E-5	TEST
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999786814290593	WITHOUT_CLASSIFICATION	2.1318570940612003E-5	TEST
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999929695846342	WITHOUT_CLASSIFICATION	7.030415365728892E-6	TEST
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999753082595636	WITHOUT_CLASSIFICATION	2.4691740436312694E-5	TEST
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999954826867189	WITHOUT_CLASSIFICATION	4.517313281098335E-6	TEST
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9998165083882367	WITHOUT_CLASSIFICATION	1.8349161176334027E-4	TEST
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999849203813727	WITHOUT_CLASSIFICATION	1.507961862737169E-5	TEST
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999813960367198	WITHOUT_CLASSIFICATION	1.8603963280254446E-5	TEST
// Lastline	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9997824704216047	WITHOUT_CLASSIFICATION	2.17529578395335E-4	TEST
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999989318676623	WITHOUT_CLASSIFICATION	1.068132337688665E-6	TEST
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999961471374523	WITHOUT_CLASSIFICATION	3.852862547739906E-6	TEST
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999951217174428	WITHOUT_CLASSIFICATION	4.878282557223354E-6	TEST
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999917126243663	WITHOUT_CLASSIFICATION	8.287375633671299E-6	TEST
// silently ignore	WITHOUT_CLASSIFICATION	0.9999946782610746	WITHOUT_CLASSIFICATION	5.321738925410555E-6	TEST
// used by compiler	WITHOUT_CLASSIFICATION	0.9999929353680026	WITHOUT_CLASSIFICATION	7.064631997419694E-6	TEST
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.999998486758897	WITHOUT_CLASSIFICATION	1.5132411029297317E-6	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999665577514218	WITHOUT_CLASSIFICATION	3.3442248578222834E-5	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9998646420574461	WITHOUT_CLASSIFICATION	1.353579425538882E-4	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999905167517285	WITHOUT_CLASSIFICATION	9.483248271496549E-6	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999216930018296	WITHOUT_CLASSIFICATION	7.83069981703489E-5	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999892836372009	WITHOUT_CLASSIFICATION	1.0716362799175771E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999888482354623	WITHOUT_CLASSIFICATION	1.1151764537755992E-5	TEST
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999976190481873	WITHOUT_CLASSIFICATION	2.380951812684081E-6	TEST
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999951642501858	WITHOUT_CLASSIFICATION	4.835749814192563E-6	TEST
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999972045527475	WITHOUT_CLASSIFICATION	2.7954472524933372E-6	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999996129019678	WITHOUT_CLASSIFICATION	3.8709803224185864E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999996129019678	WITHOUT_CLASSIFICATION	3.8709803224185864E-7	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.999994393678197	WITHOUT_CLASSIFICATION	5.60632180299515E-6	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.999994393678197	WITHOUT_CLASSIFICATION	5.60632180299515E-6	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.999994393678197	WITHOUT_CLASSIFICATION	5.60632180299515E-6	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999926761308695	WITHOUT_CLASSIFICATION	7.323869130601302E-6	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999926761308695	WITHOUT_CLASSIFICATION	7.323869130601302E-6	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999850289797695	WITHOUT_CLASSIFICATION	1.4971020230584446E-5	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999850289797695	WITHOUT_CLASSIFICATION	1.4971020230584446E-5	TEST
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9997427126157105	WITHOUT_CLASSIFICATION	2.5728738428953144E-4	TEST
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999714201641763	WITHOUT_CLASSIFICATION	2.8579835823729495E-5	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.9999950552444942	WITHOUT_CLASSIFICATION	4.9447555059313054E-6	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.9999950552444942	WITHOUT_CLASSIFICATION	4.9447555059313054E-6	TEST
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999640237480228	WITHOUT_CLASSIFICATION	3.597625197702553E-5	TEST
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999759634389456	WITHOUT_CLASSIFICATION	2.403656105441552E-5	TEST
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999752751964712	WITHOUT_CLASSIFICATION	2.472480352875945E-5	TEST
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999918493276704	WITHOUT_CLASSIFICATION	8.150672329611824E-6	TEST
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999960363484276	WITHOUT_CLASSIFICATION	3.9636515723330296E-6	TEST
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999800674188899	WITHOUT_CLASSIFICATION	1.9932581110147017E-5	TEST
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999856911527866	WITHOUT_CLASSIFICATION	1.4308847213501383E-5	TEST
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.999985005141375	WITHOUT_CLASSIFICATION	1.49948586250205E-5	TEST
// caller	WITHOUT_CLASSIFICATION	0.9999364795479218	WITHOUT_CLASSIFICATION	6.352045207827621E-5	TEST
// calltype // block	WITHOUT_CLASSIFICATION	0.9999936113351716	WITHOUT_CLASSIFICATION	6.388664828349239E-6	TEST
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999986769290248	WITHOUT_CLASSIFICATION	1.3230709751420353E-6	TEST
// load arity for check	WITHOUT_CLASSIFICATION	0.9999890586438909	WITHOUT_CLASSIFICATION	1.0941356109192228E-5	TEST
// throw	WITHOUT_CLASSIFICATION	0.9999479161552065	WITHOUT_CLASSIFICATION	5.20838447935389E-5	TEST
// load arity for error	WITHOUT_CLASSIFICATION	0.9999894619038339	WITHOUT_CLASSIFICATION	1.0538096166169608E-5	TEST
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999854719094061	WITHOUT_CLASSIFICATION	1.4528090593879633E-5	TEST
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9998152783318226	WITHOUT_CLASSIFICATION	1.8472166817743522E-4	TEST
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9998367684261923	WITHOUT_CLASSIFICATION	1.632315738077909E-4	TEST
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999848729753699	WITHOUT_CLASSIFICATION	1.5127024630145492E-5	TEST
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999848729753699	WITHOUT_CLASSIFICATION	1.5127024630145492E-5	TEST
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.999591223760613	WITHOUT_CLASSIFICATION	4.087762393869918E-4	TEST
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999807478132564	WITHOUT_CLASSIFICATION	1.9252186743578732E-5	TEST
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999606518010369	WITHOUT_CLASSIFICATION	3.9348198963063246E-5	TEST
// load the encoding	WITHOUT_CLASSIFICATION	0.999998315432538	WITHOUT_CLASSIFICATION	1.684567461933971E-6	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999698525887699	WITHOUT_CLASSIFICATION	3.0147411230171095E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999698525887699	WITHOUT_CLASSIFICATION	3.0147411230171095E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999698525887699	WITHOUT_CLASSIFICATION	3.0147411230171095E-5	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999665482146417	WITHOUT_CLASSIFICATION	3.345178535832758E-5	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999665482146417	WITHOUT_CLASSIFICATION	3.345178535832758E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999665482146417	WITHOUT_CLASSIFICATION	3.345178535832758E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999665482146417	WITHOUT_CLASSIFICATION	3.345178535832758E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999665482146417	WITHOUT_CLASSIFICATION	3.345178535832758E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999670499056497	WITHOUT_CLASSIFICATION	3.29500943503861E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999670499056497	WITHOUT_CLASSIFICATION	3.29500943503861E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999670499056497	WITHOUT_CLASSIFICATION	3.29500943503861E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999670499056497	WITHOUT_CLASSIFICATION	3.29500943503861E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999670499056497	WITHOUT_CLASSIFICATION	3.29500943503861E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999670499056497	WITHOUT_CLASSIFICATION	3.29500943503861E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999670499056497	WITHOUT_CLASSIFICATION	3.29500943503861E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999670499056497	WITHOUT_CLASSIFICATION	3.29500943503861E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999670499056497	WITHOUT_CLASSIFICATION	3.29500943503861E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999670499056497	WITHOUT_CLASSIFICATION	3.29500943503861E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999670499056497	WITHOUT_CLASSIFICATION	3.29500943503861E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999670499056497	WITHOUT_CLASSIFICATION	3.29500943503861E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999670499056497	WITHOUT_CLASSIFICATION	3.29500943503861E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999670499056497	WITHOUT_CLASSIFICATION	3.29500943503861E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999670499056497	WITHOUT_CLASSIFICATION	3.29500943503861E-5	TEST
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999971694225009	WITHOUT_CLASSIFICATION	2.8305774990646615E-6	TEST
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999848729753699	WITHOUT_CLASSIFICATION	1.5127024630145492E-5	TEST
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999665180549758	WITHOUT_CLASSIFICATION	3.3481945024057415E-5	TEST
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999991882279715	WITHOUT_CLASSIFICATION	8.117720283904858E-7	TEST
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999665180549758	WITHOUT_CLASSIFICATION	3.3481945024057415E-5	TEST
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999973362995188	WITHOUT_CLASSIFICATION	2.66370048111786E-6	TEST
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999896234469257	WITHOUT_CLASSIFICATION	1.0376553074330214E-5	TEST
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.999975885397118	WITHOUT_CLASSIFICATION	2.4114602881912785E-5	TEST
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999568104483082	WITHOUT_CLASSIFICATION	4.318955169169767E-5	TEST
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9999278092177509	WITHOUT_CLASSIFICATION	7.219078224902577E-5	TEST
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999989056624391	WITHOUT_CLASSIFICATION	1.0943375609742892E-6	TEST
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999922066894608	WITHOUT_CLASSIFICATION	7.793310539231208E-6	TEST
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999967578188445	WITHOUT_CLASSIFICATION	3.2421811554137044E-6	TEST
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999847180509295	WITHOUT_CLASSIFICATION	1.5281949070519668E-5	TEST
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9985202130909046	WITHOUT_CLASSIFICATION	0.0014797869090955428	TEST
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.99986395257497	WITHOUT_CLASSIFICATION	1.3604742503003543E-4	TEST
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999976005449496	WITHOUT_CLASSIFICATION	2.3994550505248066E-6	TEST
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999980480172337	WITHOUT_CLASSIFICATION	1.9519827663987133E-6	TEST
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.999999501074529	WITHOUT_CLASSIFICATION	4.989254710272197E-7	TEST
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9996012397307545	WITHOUT_CLASSIFICATION	3.987602692454845E-4	TEST
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.999984985936417	WITHOUT_CLASSIFICATION	1.5014063583015506E-5	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999965395538444	WITHOUT_CLASSIFICATION	3.460446155769183E-6	TEST
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9988037168716652	WITHOUT_CLASSIFICATION	0.0011962831283346509	TEST
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.999991273853742	WITHOUT_CLASSIFICATION	8.72614625800588E-6	TEST
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.999997580494576	WITHOUT_CLASSIFICATION	2.419505423957904E-6	TEST
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999988044433806	WITHOUT_CLASSIFICATION	1.1955566193698469E-6	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999892589862392	WITHOUT_CLASSIFICATION	1.0741013760840184E-5	TEST
// extension extensions	WITHOUT_CLASSIFICATION	0.9999855856188825	WITHOUT_CLASSIFICATION	1.441438111749244E-5	TEST
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.999971667406555	WITHOUT_CLASSIFICATION	2.8332593445003332E-5	TEST
// try all extensions	WITHOUT_CLASSIFICATION	0.9999909207275157	WITHOUT_CLASSIFICATION	9.079272484268878E-6	TEST
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999840171345868	WITHOUT_CLASSIFICATION	1.598286541312571E-5	TEST
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999932566367505	WITHOUT_CLASSIFICATION	6.7433632495336575E-6	TEST
// try only literal search	WITHOUT_CLASSIFICATION	0.999985120142937	WITHOUT_CLASSIFICATION	1.487985706309719E-5	TEST
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999964475116568	WITHOUT_CLASSIFICATION	3.552488343146254E-6	TEST
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999902511270898	WITHOUT_CLASSIFICATION	9.748872910192143E-6	TEST
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.99999876534816	WITHOUT_CLASSIFICATION	1.2346518399359739E-6	TEST
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999773499498158	WITHOUT_CLASSIFICATION	2.2650050184091727E-5	TEST
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.999999608613355	WITHOUT_CLASSIFICATION	3.9138664501495354E-7	TEST
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999964667232155	WITHOUT_CLASSIFICATION	3.533276784452368E-6	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999887404065415	WITHOUT_CLASSIFICATION	1.1259593458469965E-5	TEST
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999933387573042	WITHOUT_CLASSIFICATION	6.661242695744465E-6	TEST
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999968256426259	WITHOUT_CLASSIFICATION	3.1743573740022084E-6	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999200646671563	WITHOUT_CLASSIFICATION	7.993533284367363E-5	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999200646671563	WITHOUT_CLASSIFICATION	7.993533284367363E-5	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999602722537727	WITHOUT_CLASSIFICATION	3.972774622723585E-5	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999602722537727	WITHOUT_CLASSIFICATION	3.972774622723585E-5	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999558934981868	WITHOUT_CLASSIFICATION	4.410650181315017E-5	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999558934981868	WITHOUT_CLASSIFICATION	4.410650181315017E-5	TEST
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.999965612284526	WITHOUT_CLASSIFICATION	3.438771547396741E-5	TEST
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999636564349432	WITHOUT_CLASSIFICATION	3.6343565056762706E-5	TEST
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9998510070796636	WITHOUT_CLASSIFICATION	1.48992920336328E-4	TEST
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999772132194149	WITHOUT_CLASSIFICATION	2.278678058505785E-5	TEST
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999945446989668	WITHOUT_CLASSIFICATION	5.455301033175693E-6	TEST
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9977734568364622	WITHOUT_CLASSIFICATION	0.0022265431635377607	TEST
// signed short, native	WITHOUT_CLASSIFICATION	0.9999849398294939	WITHOUT_CLASSIFICATION	1.5060170506132649E-5	TEST
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999986289715618	WITHOUT_CLASSIFICATION	1.3710284382804845E-6	TEST
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999810478257276	WITHOUT_CLASSIFICATION	1.895217427230283E-5	TEST
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9995049437834954	WITHOUT_CLASSIFICATION	4.95056216504515E-4	TEST
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9998022198780419	WITHOUT_CLASSIFICATION	1.9778012195804286E-4	TEST
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999934128824365	WITHOUT_CLASSIFICATION	6.5871175635537345E-6	TEST
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999992867816487	WITHOUT_CLASSIFICATION	7.132183511619932E-7	TEST
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999994192288943	WITHOUT_CLASSIFICATION	5.807711056124103E-7	TEST
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999006134713435	WITHOUT_CLASSIFICATION	9.938652865646882E-5	TEST
//            write('S');	WITHOUT_CLASSIFICATION	0.9999820701807602	WITHOUT_CLASSIFICATION	1.7929819239803143E-5	TEST
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999986112828753	WITHOUT_CLASSIFICATION	1.3887171247455118E-6	TEST
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999893619315021	WITHOUT_CLASSIFICATION	1.06380684979769E-5	TEST
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999327475002909	WITHOUT_CLASSIFICATION	6.725249970910218E-5	TEST
// w_symbol	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// w_unique	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.999965394049828	WITHOUT_CLASSIFICATION	3.460595017199403E-5	TEST
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999934435769813	WITHOUT_CLASSIFICATION	6.556423018652873E-6	TEST
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999787473148902	WITHOUT_CLASSIFICATION	2.125268510974429E-5	TEST
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999051369895716	WITHOUT_CLASSIFICATION	9.486301042837865E-5	TEST
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999926676845552	WITHOUT_CLASSIFICATION	7.332315444892399E-6	TEST
// sic	WITHOUT_CLASSIFICATION	0.9999345638863254	WITHOUT_CLASSIFICATION	6.543611367458778E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999839829687658	WITHOUT_CLASSIFICATION	1.6017031234162174E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999839829687658	WITHOUT_CLASSIFICATION	1.6017031234162174E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999839829687658	WITHOUT_CLASSIFICATION	1.6017031234162174E-5	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999463091048	WITHOUT_CLASSIFICATION	5.3690895230802486E-8	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999463091048	WITHOUT_CLASSIFICATION	5.3690895230802486E-8	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999936421351201	WITHOUT_CLASSIFICATION	6.357864879972855E-6	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999936421351201	WITHOUT_CLASSIFICATION	6.357864879972855E-6	TEST
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999994557525983	WITHOUT_CLASSIFICATION	5.442474016189063E-7	TEST
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9999831915097763	WITHOUT_CLASSIFICATION	1.6808490223705585E-5	TEST
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999849198745535	WITHOUT_CLASSIFICATION	1.508012544648172E-5	TEST
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999849846212943	WITHOUT_CLASSIFICATION	1.5015378705760794E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999839829687658	WITHOUT_CLASSIFICATION	1.6017031234162174E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999839829687658	WITHOUT_CLASSIFICATION	1.6017031234162174E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999839829687658	WITHOUT_CLASSIFICATION	1.6017031234162174E-5	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999463091048	WITHOUT_CLASSIFICATION	5.3690895230802486E-8	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999463091048	WITHOUT_CLASSIFICATION	5.3690895230802486E-8	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999463091048	WITHOUT_CLASSIFICATION	5.3690895230802486E-8	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999936421351201	WITHOUT_CLASSIFICATION	6.357864879972855E-6	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999936421351201	WITHOUT_CLASSIFICATION	6.357864879972855E-6	TEST
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999879664152725	WITHOUT_CLASSIFICATION	1.2033584727340452E-5	TEST
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999975800350155	WITHOUT_CLASSIFICATION	2.4199649845867983E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999941804132957	WITHOUT_CLASSIFICATION	5.819586704258118E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999941804132957	WITHOUT_CLASSIFICATION	5.819586704258118E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999941804132957	WITHOUT_CLASSIFICATION	5.819586704258118E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999941804132957	WITHOUT_CLASSIFICATION	5.819586704258118E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999941804132957	WITHOUT_CLASSIFICATION	5.819586704258118E-6	TEST
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999858872587398	WITHOUT_CLASSIFICATION	1.4112741260155734E-5	TEST
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9999489203111588	WITHOUT_CLASSIFICATION	5.107968884118467E-5	TEST
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999951867902105	WITHOUT_CLASSIFICATION	4.813209789528699E-6	TEST
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999923926401832	WITHOUT_CLASSIFICATION	7.607359816661855E-6	TEST
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999550344473511	WITHOUT_CLASSIFICATION	4.496555264890894E-5	TEST
// not enough bytes	WITHOUT_CLASSIFICATION	0.9999690440305684	WITHOUT_CLASSIFICATION	3.095596943161133E-5	TEST
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999948723340382	WITHOUT_CLASSIFICATION	5.12766596176546E-6	TEST
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999964914026562	WITHOUT_CLASSIFICATION	3.508597343758931E-6	TEST
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999903363015898	WITHOUT_CLASSIFICATION	9.66369841006848E-6	TEST
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999774399339956	WITHOUT_CLASSIFICATION	2.256006600442852E-5	TEST
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.999818935575232	WITHOUT_CLASSIFICATION	1.810644247680108E-4	TEST
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999311660790319	WITHOUT_CLASSIFICATION	6.883392096812503E-5	TEST
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999832678606058	WITHOUT_CLASSIFICATION	1.6732139394230227E-5	TEST
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999280345463022	WITHOUT_CLASSIFICATION	7.19654536977919E-5	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.999993592649137	WITHOUT_CLASSIFICATION	6.407350862906469E-6	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.999993592649137	WITHOUT_CLASSIFICATION	6.407350862906469E-6	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.999993592649137	WITHOUT_CLASSIFICATION	6.407350862906469E-6	TEST
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9930005527980292	WITHOUT_CLASSIFICATION	0.0069994472019707975	TEST
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9929921088545985	WITHOUT_CLASSIFICATION	0.007007891145401518	TEST
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.999998565097504	WITHOUT_CLASSIFICATION	1.434902496095898E-6	TEST
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999587002481882	WITHOUT_CLASSIFICATION	4.1299751811702756E-5	TEST
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999611788954269	WITHOUT_CLASSIFICATION	3.88211045732067E-5	TEST
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999611799338206	WITHOUT_CLASSIFICATION	3.8820066179516556E-5	TEST
// single precision, native	WITHOUT_CLASSIFICATION	0.9999824073196374	WITHOUT_CLASSIFICATION	1.759268036258059E-5	TEST
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999610607235178	WITHOUT_CLASSIFICATION	3.89392764822847E-5	TEST
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999724509068563	WITHOUT_CLASSIFICATION	2.7549093143747428E-5	TEST
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999724516437525	WITHOUT_CLASSIFICATION	2.754835624748277E-5	TEST
// double precision, native	WITHOUT_CLASSIFICATION	0.9999875155689719	WITHOUT_CLASSIFICATION	1.2484431028087748E-5	TEST
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.999984985534798	WITHOUT_CLASSIFICATION	1.5014465202116001E-5	TEST
// signed char	WITHOUT_CLASSIFICATION	0.9999935419195213	WITHOUT_CLASSIFICATION	6.4580804786532544E-6	TEST
// unsigned char	WITHOUT_CLASSIFICATION	0.9999935333623989	WITHOUT_CLASSIFICATION	6.466637600945506E-6	TEST
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999849335087034	WITHOUT_CLASSIFICATION	1.5066491296410156E-5	TEST
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999934641098056	WITHOUT_CLASSIFICATION	6.5358901943442335E-6	TEST
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999849817680527	WITHOUT_CLASSIFICATION	1.5018231947122973E-5	TEST
// int, native	WITHOUT_CLASSIFICATION	0.9999934851352973	WITHOUT_CLASSIFICATION	6.514864702807652E-6	TEST
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999665854952409	WITHOUT_CLASSIFICATION	3.341450475918412E-5	TEST
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999645686194584	WITHOUT_CLASSIFICATION	3.5431380541704166E-5	TEST
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999937290455718	WITHOUT_CLASSIFICATION	6.270954428215861E-6	TEST
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.999977331066612	WITHOUT_CLASSIFICATION	2.266893338796159E-5	TEST
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999848960681642	WITHOUT_CLASSIFICATION	1.5103931835690577E-5	TEST
// obtain a	WITHOUT_CLASSIFICATION	0.9999961713955029	WITHOUT_CLASSIFICATION	3.828604497030463E-6	TEST
// obtain b	WITHOUT_CLASSIFICATION	0.9999935749955013	WITHOUT_CLASSIFICATION	6.425004498593512E-6	TEST
// obtain c	WITHOUT_CLASSIFICATION	0.9999942999077153	WITHOUT_CLASSIFICATION	5.700092284825386E-6	TEST
// obtain d	WITHOUT_CLASSIFICATION	0.9999934419642498	WITHOUT_CLASSIFICATION	6.558035750252066E-6	TEST
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999251033786484	WITHOUT_CLASSIFICATION	7.489662135161133E-5	TEST
/* 1 */	WITHOUT_CLASSIFICATION	0.9998626025780807	WITHOUT_CLASSIFICATION	1.3739742191929894E-4	TEST
/* 2 */	WITHOUT_CLASSIFICATION	0.9998777469198072	WITHOUT_CLASSIFICATION	1.2225308019286592E-4	TEST
/* 3 */	WITHOUT_CLASSIFICATION	0.9996142101710164	WITHOUT_CLASSIFICATION	3.857898289836363E-4	TEST
/* 4 */	WITHOUT_CLASSIFICATION	0.9998690412909147	WITHOUT_CLASSIFICATION	1.3095870908533616E-4	TEST
/* 5 */	WITHOUT_CLASSIFICATION	0.9998528836214204	WITHOUT_CLASSIFICATION	1.4711637857964033E-4	TEST
/* 6 */	WITHOUT_CLASSIFICATION	0.9998612679278226	WITHOUT_CLASSIFICATION	1.3873207217738286E-4	TEST
/* 7 */	WITHOUT_CLASSIFICATION	0.999848108025325	WITHOUT_CLASSIFICATION	1.5189197467498064E-4	TEST
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.999977296645252	WITHOUT_CLASSIFICATION	2.2703354748003487E-5	TEST
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999612397558362	WITHOUT_CLASSIFICATION	3.8760244163858384E-5	TEST
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999968494954606	WITHOUT_CLASSIFICATION	3.150504539440125E-6	TEST
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9228291289753269	TEST	0.07717087102467313	WITHOUT_CLASSIFICATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999935364168681	WITHOUT_CLASSIFICATION	6.463583131946078E-6	TEST
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999976670660141	WITHOUT_CLASSIFICATION	2.332933985877965E-6	TEST
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999749039956165	WITHOUT_CLASSIFICATION	2.509600438356353E-5	TEST
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999816265538777	WITHOUT_CLASSIFICATION	1.8373446122402432E-5	TEST
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999378607468372	WITHOUT_CLASSIFICATION	6.213925316283157E-5	TEST
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9998184298461721	WITHOUT_CLASSIFICATION	1.8157015382782565E-4	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9996666113367275	WITHOUT_CLASSIFICATION	3.333886632724045E-4	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9996666113367275	WITHOUT_CLASSIFICATION	3.333886632724045E-4	TEST
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9995732198075653	WITHOUT_CLASSIFICATION	4.2678019243464236E-4	TEST
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999961201967782	WITHOUT_CLASSIFICATION	3.879803221781292E-6	TEST
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9998184298461721	WITHOUT_CLASSIFICATION	1.8157015382782565E-4	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9898779430304848	WITHOUT_CLASSIFICATION	0.01012205696951519	TEST
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9995738158124896	WITHOUT_CLASSIFICATION	4.261841875104746E-4	TEST
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9998434014986094	WITHOUT_CLASSIFICATION	1.5659850139074097E-4	TEST
// are we recursing?	WITHOUT_CLASSIFICATION	0.9999946716090018	WITHOUT_CLASSIFICATION	5.328390998230481E-6	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999926711629156	WITHOUT_CLASSIFICATION	7.328837084381496E-6	TEST
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999965237358533	WITHOUT_CLASSIFICATION	3.4762641466654242E-6	TEST
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999935204510938	WITHOUT_CLASSIFICATION	6.47954890626965E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999983146616402	WITHOUT_CLASSIFICATION	1.6853383597547185E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999983146616402	WITHOUT_CLASSIFICATION	1.6853383597547185E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999983146616402	WITHOUT_CLASSIFICATION	1.6853383597547185E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999983146616402	WITHOUT_CLASSIFICATION	1.6853383597547185E-6	TEST
// try both	WITHOUT_CLASSIFICATION	0.9999947722286833	WITHOUT_CLASSIFICATION	5.22777131679321E-6	TEST
// just unix	WITHOUT_CLASSIFICATION	0.9999973296876499	WITHOUT_CLASSIFICATION	2.670312350014385E-6	TEST
// just windows	WITHOUT_CLASSIFICATION	0.9999984084564008	WITHOUT_CLASSIFICATION	1.5915435992131774E-6	TEST
// neither	WITHOUT_CLASSIFICATION	0.9999347819965109	WITHOUT_CLASSIFICATION	6.521800348903898E-5	TEST
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999085526844647	WITHOUT_CLASSIFICATION	9.144731553530906E-5	TEST
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.999928879088922	WITHOUT_CLASSIFICATION	7.112091107795743E-5	TEST
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999943030758652	WITHOUT_CLASSIFICATION	5.696924134779043E-6	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999981046788752	WITHOUT_CLASSIFICATION	1.895321124742574E-6	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999981046788752	WITHOUT_CLASSIFICATION	1.895321124742574E-6	TEST
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999980577338675	WITHOUT_CLASSIFICATION	1.9422661324976064E-6	TEST
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999740342757957	WITHOUT_CLASSIFICATION	2.5965724204267443E-5	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.999275363942951	WITHOUT_CLASSIFICATION	7.246360570490256E-4	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999966787211607	WITHOUT_CLASSIFICATION	3.321278839215159E-6	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999966787211607	WITHOUT_CLASSIFICATION	3.321278839215159E-6	TEST
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999963420985167	WITHOUT_CLASSIFICATION	3.6579014831714926E-6	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999984599832225	WITHOUT_CLASSIFICATION	1.540016777566418E-6	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999984599832225	WITHOUT_CLASSIFICATION	1.540016777566418E-6	TEST
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9989146813387221	WITHOUT_CLASSIFICATION	0.0010853186612779261	TEST
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999986701458914	WITHOUT_CLASSIFICATION	1.3298541086720073E-6	TEST
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.999999715593725	WITHOUT_CLASSIFICATION	2.8440627495446756E-7	TEST
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9997040069991198	WITHOUT_CLASSIFICATION	2.959930008803146E-4	TEST
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.999988592485728	WITHOUT_CLASSIFICATION	1.1407514271990054E-5	TEST
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999997282898679	WITHOUT_CLASSIFICATION	2.717101321207434E-7	TEST
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9999530026476118	WITHOUT_CLASSIFICATION	4.699735238809491E-5	TEST
//sequential	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999970452062797	WITHOUT_CLASSIFICATION	2.9547937203905387E-6	TEST
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999874882148273	WITHOUT_CLASSIFICATION	1.2511785172678403E-5	TEST
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999781742730225	WITHOUT_CLASSIFICATION	2.1825726977443567E-5	TEST
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.7951461741880586	WITHOUT_CLASSIFICATION	0.20485382581194142	TEST
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.808383378947548	WITHOUT_CLASSIFICATION	0.191616621052452	TEST
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999967749658167	WITHOUT_CLASSIFICATION	3.225034183291111E-6	TEST
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999931759711279	WITHOUT_CLASSIFICATION	6.824028872021724E-6	TEST
// Args	WITHOUT_CLASSIFICATION	0.9999346058277133	WITHOUT_CLASSIFICATION	6.539417228678573E-5	TEST
// static methods only	WITHOUT_CLASSIFICATION	0.9999889930776121	WITHOUT_CLASSIFICATION	1.1006922387872885E-5	TEST
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9996752642644476	WITHOUT_CLASSIFICATION	3.2473573555227115E-4	TEST
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999947209644245	WITHOUT_CLASSIFICATION	5.279035575473724E-6	TEST
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999632675311985	WITHOUT_CLASSIFICATION	3.6732468801542304E-5	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999974451307387	WITHOUT_CLASSIFICATION	2.554869261349777E-6	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999971650409656	WITHOUT_CLASSIFICATION	2.8349590343808216E-6	TEST
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999104805682408	WITHOUT_CLASSIFICATION	8.951943175917798E-5	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999950751409558	WITHOUT_CLASSIFICATION	4.9248590442732945E-6	TEST
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9997488648902129	WITHOUT_CLASSIFICATION	2.5113510978703833E-4	TEST
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999992744035908	WITHOUT_CLASSIFICATION	7.255964091125535E-7	TEST
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999407743571355	WITHOUT_CLASSIFICATION	5.922564286462388E-5	TEST
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999993400026932	WITHOUT_CLASSIFICATION	6.599973068391207E-7	TEST
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999507008679183	WITHOUT_CLASSIFICATION	4.929913208162546E-5	TEST
// ..	WITHOUT_CLASSIFICATION	0.9999348491928751	WITHOUT_CLASSIFICATION	6.515080712483036E-5	TEST
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999564453888726	WITHOUT_CLASSIFICATION	4.3554611127474665E-5	TEST
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9998703089274996	WITHOUT_CLASSIFICATION	1.2969107250034338E-4	TEST
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999801869492626	WITHOUT_CLASSIFICATION	1.98130507374505E-5	TEST
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999988963671868	WITHOUT_CLASSIFICATION	1.10363281323506E-6	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9997845224642561	WITHOUT_CLASSIFICATION	2.154775357439869E-4	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999937116901064	WITHOUT_CLASSIFICATION	6.288309893685204E-6	TEST
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9996752642644476	WITHOUT_CLASSIFICATION	3.2473573555227115E-4	TEST
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9996784135028945	WITHOUT_CLASSIFICATION	3.2158649710548574E-4	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9997845224642561	WITHOUT_CLASSIFICATION	2.154775357439869E-4	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999937116901064	WITHOUT_CLASSIFICATION	6.288309893685204E-6	TEST
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999597242318273	WITHOUT_CLASSIFICATION	4.0275768172684225E-5	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9998457062728796	WITHOUT_CLASSIFICATION	1.5429372712029676E-4	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9998457062728796	WITHOUT_CLASSIFICATION	1.5429372712029676E-4	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999397638688864	WITHOUT_CLASSIFICATION	6.023613111366218E-5	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999951224636179	WITHOUT_CLASSIFICATION	4.877536382089451E-6	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999924848180733	WITHOUT_CLASSIFICATION	7.515181926600775E-6	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999970979266977	WITHOUT_CLASSIFICATION	2.9020733023365063E-6	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.999779818713007	WITHOUT_CLASSIFICATION	2.2018128699291181E-4	TEST
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999479911173121	WITHOUT_CLASSIFICATION	5.2008882687883595E-5	TEST
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999785855749567	WITHOUT_CLASSIFICATION	2.1414425043362213E-5	TEST
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999799692615187	WITHOUT_CLASSIFICATION	2.0030738481327413E-5	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999507923497755	WITHOUT_CLASSIFICATION	4.9207650224417506E-5	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9999347735556525	WITHOUT_CLASSIFICATION	6.522644434742858E-5	TEST
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.999939326342091	WITHOUT_CLASSIFICATION	6.0673657909055977E-5	TEST
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999647982391118	WITHOUT_CLASSIFICATION	3.5201760888252995E-5	TEST
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999924594335491	WITHOUT_CLASSIFICATION	7.540566450899733E-6	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999794881483508	WITHOUT_CLASSIFICATION	2.051185164917991E-5	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999794881483508	WITHOUT_CLASSIFICATION	2.051185164917991E-5	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999360101426816	WITHOUT_CLASSIFICATION	6.398985731834453E-5	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999360101426816	WITHOUT_CLASSIFICATION	6.398985731834453E-5	TEST
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999610902611736	WITHOUT_CLASSIFICATION	3.8909738826344434E-5	TEST
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999959050063125	WITHOUT_CLASSIFICATION	4.094993687421529E-6	TEST
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999612564859078	WITHOUT_CLASSIFICATION	3.8743514092144294E-5	TEST
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9996752642644476	WITHOUT_CLASSIFICATION	3.2473573555227115E-4	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999924848180733	WITHOUT_CLASSIFICATION	7.515181926600775E-6	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999970979266977	WITHOUT_CLASSIFICATION	2.9020733023365063E-6	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999507923497755	WITHOUT_CLASSIFICATION	4.9207650224417506E-5	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9999347735556525	WITHOUT_CLASSIFICATION	6.522644434742858E-5	TEST
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999894179204906	WITHOUT_CLASSIFICATION	1.0582079509346846E-5	TEST
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999946274947892	WITHOUT_CLASSIFICATION	5.372505210820724E-6	TEST
// \v	WITHOUT_CLASSIFICATION	0.9999345638863254	WITHOUT_CLASSIFICATION	6.543611367458778E-5	TEST
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999935345160921	WITHOUT_CLASSIFICATION	6.465483907936209E-6	TEST
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999804057305501	WITHOUT_CLASSIFICATION	1.9594269449793396E-5	TEST
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999165865857463	WITHOUT_CLASSIFICATION	8.341341425374079E-5	TEST
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.999844589204594	WITHOUT_CLASSIFICATION	1.5541079540613557E-4	TEST
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999934588888392	WITHOUT_CLASSIFICATION	6.541111160837501E-6	TEST
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999974905315432	WITHOUT_CLASSIFICATION	2.5094684568926213E-6	TEST
// negative values	WITHOUT_CLASSIFICATION	0.9999952548288206	WITHOUT_CLASSIFICATION	4.745171179409416E-6	TEST
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999981758036666	WITHOUT_CLASSIFICATION	1.8241963334655913E-6	TEST
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9973709320965025	WITHOUT_CLASSIFICATION	0.0026290679034975967	TEST
// no such luck...	WITHOUT_CLASSIFICATION	0.9999967904271757	WITHOUT_CLASSIFICATION	3.2095728243200974E-6	TEST
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9998200924260026	WITHOUT_CLASSIFICATION	1.7990757399742553E-4	TEST
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999955479740047	WITHOUT_CLASSIFICATION	4.452025995249874E-6	TEST
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999938202863135	WITHOUT_CLASSIFICATION	6.17971368652982E-6	TEST
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999802143542067	WITHOUT_CLASSIFICATION	1.9785645793259632E-5	TEST
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999288739337046	WITHOUT_CLASSIFICATION	7.112606629549627E-5	TEST
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.999968129249369	WITHOUT_CLASSIFICATION	3.187075063097245E-5	TEST
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999848729753699	WITHOUT_CLASSIFICATION	1.5127024630145492E-5	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999848729753699	WITHOUT_CLASSIFICATION	1.5127024630145492E-5	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999848729753699	WITHOUT_CLASSIFICATION	1.5127024630145492E-5	TEST
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9997833618438171	WITHOUT_CLASSIFICATION	2.1663815618288396E-4	TEST
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999843875830868	WITHOUT_CLASSIFICATION	1.5612416913172648E-5	TEST
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999997439287204	WITHOUT_CLASSIFICATION	2.5607127954534323E-7	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9996765924487409	WITHOUT_CLASSIFICATION	3.2340755125916804E-4	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9996765924487409	WITHOUT_CLASSIFICATION	3.2340755125916804E-4	TEST
// \v	WITHOUT_CLASSIFICATION	0.9999345638863254	WITHOUT_CLASSIFICATION	6.543611367458778E-5	TEST
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.999591223760613	WITHOUT_CLASSIFICATION	4.087762393869918E-4	TEST
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9996752642644476	WITHOUT_CLASSIFICATION	3.2473573555227115E-4	TEST
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9996752642644476	WITHOUT_CLASSIFICATION	3.2473573555227115E-4	TEST
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9996752642644476	WITHOUT_CLASSIFICATION	3.2473573555227115E-4	TEST
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9996752642644476	WITHOUT_CLASSIFICATION	3.2473573555227115E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9996752642644476	WITHOUT_CLASSIFICATION	3.2473573555227115E-4	TEST
// no number	WITHOUT_CLASSIFICATION	0.9999966707751332	WITHOUT_CLASSIFICATION	3.3292248668735773E-6	TEST
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999949882236634	WITHOUT_CLASSIFICATION	5.011776336665908E-6	TEST
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9984749666935755	WITHOUT_CLASSIFICATION	0.0015250333064244957	TEST
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999362717009158	WITHOUT_CLASSIFICATION	6.372829908424756E-5	TEST
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999986518947306	WITHOUT_CLASSIFICATION	1.3481052693021498E-6	TEST
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999981673216346	WITHOUT_CLASSIFICATION	1.8326783654343507E-6	TEST
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999944514267983	WITHOUT_CLASSIFICATION	5.548573201727416E-6	TEST
// we reached the end	WITHOUT_CLASSIFICATION	0.9999953874751424	WITHOUT_CLASSIFICATION	4.612524857537941E-6	TEST
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999697052448988	WITHOUT_CLASSIFICATION	3.0294755101146627E-5	TEST
// states	WITHOUT_CLASSIFICATION	0.9999404267079629	WITHOUT_CLASSIFICATION	5.95732920371115E-5	TEST
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999704914482279	WITHOUT_CLASSIFICATION	2.9508551771999482E-5	TEST
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999910511220852	WITHOUT_CLASSIFICATION	8.948877914691734E-6	TEST
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999997689261174	WITHOUT_CLASSIFICATION	2.310738825923962E-7	TEST
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999843700680283	WITHOUT_CLASSIFICATION	1.5629931971639418E-5	TEST
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999900281322456	WITHOUT_CLASSIFICATION	9.971867754470469E-6	TEST
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.999965597071601	WITHOUT_CLASSIFICATION	3.440292839897383E-5	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999914044992315	WITHOUT_CLASSIFICATION	8.595500768406302E-6	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999765078615533	WITHOUT_CLASSIFICATION	2.3492138446656007E-5	TEST
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999923626919816	WITHOUT_CLASSIFICATION	7.63730801837908E-6	TEST
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999881113865687	WITHOUT_CLASSIFICATION	1.1888613431242651E-5	TEST
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.999999979536615	WITHOUT_CLASSIFICATION	2.0463384951029177E-8	TEST
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999980777886023	WITHOUT_CLASSIFICATION	1.9222113977104783E-6	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999496334325617	WITHOUT_CLASSIFICATION	5.0366567438279787E-5	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999496334325617	WITHOUT_CLASSIFICATION	5.0366567438279787E-5	TEST
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.999980167450837	WITHOUT_CLASSIFICATION	1.9832549163023333E-5	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999952346748198	WITHOUT_CLASSIFICATION	4.7653251802486976E-6	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999952346748198	WITHOUT_CLASSIFICATION	4.7653251802486976E-6	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999973440638307	WITHOUT_CLASSIFICATION	2.655936169348654E-6	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999973440638307	WITHOUT_CLASSIFICATION	2.655936169348654E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999927494818186	WITHOUT_CLASSIFICATION	7.250518181435566E-6	TEST
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999904807283639	WITHOUT_CLASSIFICATION	9.519271636020568E-6	TEST
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999987014021756	WITHOUT_CLASSIFICATION	1.2985978243992444E-6	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999951072174086	WITHOUT_CLASSIFICATION	4.892782591338968E-6	TEST
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999906711609482	WITHOUT_CLASSIFICATION	9.328839051852072E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999362954414281	WITHOUT_CLASSIFICATION	6.370455857185054E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999362954414281	WITHOUT_CLASSIFICATION	6.370455857185054E-5	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999914044992315	WITHOUT_CLASSIFICATION	8.595500768406302E-6	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999914044992315	WITHOUT_CLASSIFICATION	8.595500768406302E-6	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999914044992315	WITHOUT_CLASSIFICATION	8.595500768406302E-6	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999765078615533	WITHOUT_CLASSIFICATION	2.3492138446656007E-5	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999496334325617	WITHOUT_CLASSIFICATION	5.0366567438279787E-5	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999496334325617	WITHOUT_CLASSIFICATION	5.0366567438279787E-5	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999496334325617	WITHOUT_CLASSIFICATION	5.0366567438279787E-5	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999927494818186	WITHOUT_CLASSIFICATION	7.250518181435566E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999927494818186	WITHOUT_CLASSIFICATION	7.250518181435566E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999927494818186	WITHOUT_CLASSIFICATION	7.250518181435566E-6	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999951072174086	WITHOUT_CLASSIFICATION	4.892782591338968E-6	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999951072174086	WITHOUT_CLASSIFICATION	4.892782591338968E-6	TEST
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999920249447504	WITHOUT_CLASSIFICATION	7.975055249581556E-6	TEST
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999788701075075	WITHOUT_CLASSIFICATION	2.1129892492405244E-5	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999872642543131	WITHOUT_CLASSIFICATION	1.2735745686992921E-5	TEST
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9991768522868335	WITHOUT_CLASSIFICATION	8.231477131665068E-4	TEST
// no digits, error	WITHOUT_CLASSIFICATION	0.9999985278561289	WITHOUT_CLASSIFICATION	1.472143871039657E-6	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999941814037075	WITHOUT_CLASSIFICATION	5.81859629245024E-6	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999941814037075	WITHOUT_CLASSIFICATION	5.81859629245024E-6	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999835032487587	WITHOUT_CLASSIFICATION	1.6496751241284705E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999308208074764	WITHOUT_CLASSIFICATION	6.917919252357191E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999308208074764	WITHOUT_CLASSIFICATION	6.917919252357191E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999308208074764	WITHOUT_CLASSIFICATION	6.917919252357191E-5	TEST
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999956992831589	WITHOUT_CLASSIFICATION	4.300716841130316E-6	TEST
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999845782746243	WITHOUT_CLASSIFICATION	1.5421725375728345E-5	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999765078615533	WITHOUT_CLASSIFICATION	2.3492138446656007E-5	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999927494818186	WITHOUT_CLASSIFICATION	7.250518181435566E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999927494818186	WITHOUT_CLASSIFICATION	7.250518181435566E-6	TEST
//switch	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999308208074764	WITHOUT_CLASSIFICATION	6.917919252357191E-5	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999835032487587	WITHOUT_CLASSIFICATION	1.6496751241284705E-5	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.999960712048866	WITHOUT_CLASSIFICATION	3.928795113391405E-5	TEST
// switch //while	WITHOUT_CLASSIFICATION	0.9999941414610376	WITHOUT_CLASSIFICATION	5.858538962333604E-6	TEST
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999996888454988	WITHOUT_CLASSIFICATION	3.111545011142964E-7	TEST
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999965895578546	WITHOUT_CLASSIFICATION	3.410442145412495E-6	TEST
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999848729753699	WITHOUT_CLASSIFICATION	1.5127024630145492E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.999878659682539	WITHOUT_CLASSIFICATION	1.2134031746107459E-4	TEST
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999921955434226	WITHOUT_CLASSIFICATION	7.804456577369408E-6	TEST
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999848729753699	WITHOUT_CLASSIFICATION	1.5127024630145492E-5	TEST
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999633781358472	WITHOUT_CLASSIFICATION	3.662186415280766E-5	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999981709285048	WITHOUT_CLASSIFICATION	1.8290714951058465E-6	TEST
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999679536526765	WITHOUT_CLASSIFICATION	3.204634732346341E-5	TEST
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9998874836910734	WITHOUT_CLASSIFICATION	1.1251630892663051E-4	TEST
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999686642900888	WITHOUT_CLASSIFICATION	3.1335709911183465E-5	TEST
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999886290821905	WITHOUT_CLASSIFICATION	1.137091780953633E-5	TEST
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999979147722327	WITHOUT_CLASSIFICATION	2.085227767313581E-6	TEST
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999975223861686	WITHOUT_CLASSIFICATION	2.4776138313090926E-6	TEST
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9995015556147874	WITHOUT_CLASSIFICATION	4.984443852126576E-4	TEST
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9998152783318226	WITHOUT_CLASSIFICATION	1.8472166817743522E-4	TEST
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999966544608035	WITHOUT_CLASSIFICATION	3.3455391963830472E-6	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999066874595518	WITHOUT_CLASSIFICATION	9.331254044810435E-5	TEST
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.999873670742102	WITHOUT_CLASSIFICATION	1.2632925789796568E-4	TEST
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999840439669342	WITHOUT_CLASSIFICATION	1.595603306581378E-5	TEST
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.999998178531518	WITHOUT_CLASSIFICATION	1.8214684820164452E-6	TEST
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999717842430081	WITHOUT_CLASSIFICATION	2.821575699176056E-5	TEST
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9992277065006548	WITHOUT_CLASSIFICATION	7.722934993451912E-4	TEST
// unread back	WITHOUT_CLASSIFICATION	0.9999936402793616	WITHOUT_CLASSIFICATION	6.359720638381568E-6	TEST
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999961545235984	WITHOUT_CLASSIFICATION	3.845476401600498E-6	TEST
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999947707183083	WITHOUT_CLASSIFICATION	5.2292816916118405E-6	TEST
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999926182172652	WITHOUT_CLASSIFICATION	7.381782734840319E-6	TEST
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999992414618767	WITHOUT_CLASSIFICATION	7.585381233279629E-7	TEST
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999994972572789	WITHOUT_CLASSIFICATION	5.027427210452676E-7	TEST
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999838136225598	WITHOUT_CLASSIFICATION	1.618637744010212E-5	TEST
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999977875117625	WITHOUT_CLASSIFICATION	2.212488237523635E-6	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.999960712048866	WITHOUT_CLASSIFICATION	3.928795113391405E-5	TEST
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999955065018434	WITHOUT_CLASSIFICATION	4.4934981565065595E-6	TEST
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999840739866442	WITHOUT_CLASSIFICATION	1.5926013355737292E-5	TEST
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999120586986868	WITHOUT_CLASSIFICATION	8.794130131321048E-5	TEST
// silence	WITHOUT_CLASSIFICATION	0.9999345638863254	WITHOUT_CLASSIFICATION	6.543611367458778E-5	TEST
// silence	WITHOUT_CLASSIFICATION	0.9999345638863254	WITHOUT_CLASSIFICATION	6.543611367458778E-5	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.9999950710444812	WITHOUT_CLASSIFICATION	4.92895551888327E-6	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.9999950710444812	WITHOUT_CLASSIFICATION	4.92895551888327E-6	TEST
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999733195610162	WITHOUT_CLASSIFICATION	2.6680438983772458E-5	TEST
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999056064311637	WITHOUT_CLASSIFICATION	9.439356883634066E-5	TEST
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999905691707286	WITHOUT_CLASSIFICATION	9.430829271360258E-6	TEST
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999535646046049	WITHOUT_CLASSIFICATION	4.643539539499181E-5	TEST
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999669591090811	WITHOUT_CLASSIFICATION	3.304089091881753E-5	TEST
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999889296740068	WITHOUT_CLASSIFICATION	1.107032599322412E-5	TEST
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999906877738955	WITHOUT_CLASSIFICATION	9.31222610440587E-6	TEST
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.999997666410355	WITHOUT_CLASSIFICATION	2.333589644942306E-6	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999996626451372	WITHOUT_CLASSIFICATION	3.373548628023177E-7	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999702469769428	WITHOUT_CLASSIFICATION	2.975302305720683E-5	TEST
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999867583174011	WITHOUT_CLASSIFICATION	1.3241682598790114E-5	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999896130727739	WITHOUT_CLASSIFICATION	1.0386927226078031E-5	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999896130727739	WITHOUT_CLASSIFICATION	1.0386927226078031E-5	TEST
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999695015733194	WITHOUT_CLASSIFICATION	3.049842668058679E-5	TEST
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.999989798646822	WITHOUT_CLASSIFICATION	1.0201353178021142E-5	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999765424359229	WITHOUT_CLASSIFICATION	2.3457564077025943E-5	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999765424359229	WITHOUT_CLASSIFICATION	2.3457564077025943E-5	TEST
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999928492895404	WITHOUT_CLASSIFICATION	7.150710459648863E-6	TEST
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999935771218049	WITHOUT_CLASSIFICATION	6.422878195113782E-6	TEST
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999758708560824	WITHOUT_CLASSIFICATION	2.4129143917587455E-5	TEST
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999793344698101	WITHOUT_CLASSIFICATION	2.0665530189871765E-5	TEST
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999876161222429	WITHOUT_CLASSIFICATION	1.238387775723708E-5	TEST
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999478584176651	WITHOUT_CLASSIFICATION	5.2141582334993426E-5	TEST
// save the ungot	WITHOUT_CLASSIFICATION	0.9999980714166016	WITHOUT_CLASSIFICATION	1.928583398307155E-6	TEST
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999929132030535	WITHOUT_CLASSIFICATION	7.086796946560974E-6	TEST
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999785301114376	WITHOUT_CLASSIFICATION	2.146988856241E-5	TEST
// flush first	WITHOUT_CLASSIFICATION	0.9999958022690417	WITHOUT_CLASSIFICATION	4.197730958355146E-6	TEST
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999628287802181	WITHOUT_CLASSIFICATION	3.717121978179113E-5	TEST
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999339993483481	WITHOUT_CLASSIFICATION	6.600065165177999E-5	TEST
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999894722926853	WITHOUT_CLASSIFICATION	1.0527707314766444E-5	TEST
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999560728642772	WITHOUT_CLASSIFICATION	4.392713572269627E-5	TEST
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999959589094622	WITHOUT_CLASSIFICATION	4.041090537776874E-6	TEST
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9998942172424788	WITHOUT_CLASSIFICATION	1.0578275752122851E-4	TEST
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999907227502851	WITHOUT_CLASSIFICATION	9.277249714945512E-6	TEST
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999909199055373	WITHOUT_CLASSIFICATION	9.080094462681202E-6	TEST
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999165307507754	WITHOUT_CLASSIFICATION	8.346924922463512E-5	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999561804283008	WITHOUT_CLASSIFICATION	4.3819571699204384E-5	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9075574508287654	WITHOUT_CLASSIFICATION	0.09244254917123461	TEST
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999763492857341	WITHOUT_CLASSIFICATION	2.365071426599243E-5	TEST
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999788945943437	WITHOUT_CLASSIFICATION	2.110540565628894E-5	TEST
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999832154391205	WITHOUT_CLASSIFICATION	1.6784560879490653E-5	TEST
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999861793324634	WITHOUT_CLASSIFICATION	1.382066753664682E-5	TEST
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999976309109359	WITHOUT_CLASSIFICATION	2.36908906407529E-6	TEST
// else leave it null	WITHOUT_CLASSIFICATION	0.9999799133777172	WITHOUT_CLASSIFICATION	2.0086622282720494E-5	TEST
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.999978457057619	WITHOUT_CLASSIFICATION	2.1542942381059196E-5	TEST
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999897749152904	WITHOUT_CLASSIFICATION	1.0225084709734649E-5	TEST
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999865120510584	WITHOUT_CLASSIFICATION	1.3487948941627482E-5	TEST
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999958268458486	WITHOUT_CLASSIFICATION	4.173154151287198E-6	TEST
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999957336482207	WITHOUT_CLASSIFICATION	4.266351779348203E-6	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999987329216853	WITHOUT_CLASSIFICATION	1.267078314763917E-6	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999987329216853	WITHOUT_CLASSIFICATION	1.267078314763917E-6	TEST
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999971786201758	WITHOUT_CLASSIFICATION	2.821379824145064E-6	TEST
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999998554979915	WITHOUT_CLASSIFICATION	1.445020085049334E-7	TEST
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9996449917217615	WITHOUT_CLASSIFICATION	3.5500827823852713E-4	TEST
// Init	WITHOUT_CLASSIFICATION	0.9999351082612973	WITHOUT_CLASSIFICATION	6.489173870274677E-5	TEST
// Block	WITHOUT_CLASSIFICATION	0.9999347230240639	WITHOUT_CLASSIFICATION	6.527697593613067E-5	TEST
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999946094546558	WITHOUT_CLASSIFICATION	5.39054534410117E-6	TEST
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9991583051172894	WITHOUT_CLASSIFICATION	8.416948827105445E-4	TEST
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9991583051172894	WITHOUT_CLASSIFICATION	8.416948827105445E-4	TEST
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9997648737866179	WITHOUT_CLASSIFICATION	2.3512621338199393E-4	TEST
// ok	WITHOUT_CLASSIFICATION	0.9999430265899841	WITHOUT_CLASSIFICATION	5.697341001582588E-5	TEST
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999968455844702	WITHOUT_CLASSIFICATION	3.1544155298161007E-6	TEST
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9998356662369839	WITHOUT_CLASSIFICATION	1.6433376301594585E-4	TEST
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999319020686014	WITHOUT_CLASSIFICATION	6.809793139860171E-5	TEST
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9996172729289144	WITHOUT_CLASSIFICATION	3.8272707108546236E-4	TEST
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.999997920156076	WITHOUT_CLASSIFICATION	2.079843923998781E-6	TEST
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999958381684568	WITHOUT_CLASSIFICATION	4.161831543182888E-6	TEST
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9996922507148388	WITHOUT_CLASSIFICATION	3.077492851612498E-4	TEST
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999815394628223	WITHOUT_CLASSIFICATION	1.846053717769616E-5	TEST
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.99999689256142	WITHOUT_CLASSIFICATION	3.1074385800564313E-6	TEST
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999794771749921	WITHOUT_CLASSIFICATION	2.052282500788757E-5	TEST
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999930078019903	WITHOUT_CLASSIFICATION	6.992198009778273E-6	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999974997955735	WITHOUT_CLASSIFICATION	2.500204426534942E-6	TEST
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999774510344308	WITHOUT_CLASSIFICATION	2.254896556922984E-5	TEST
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999682159369145	WITHOUT_CLASSIFICATION	3.178406308542427E-5	TEST
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999446916156545	WITHOUT_CLASSIFICATION	5.5308384345482517E-5	TEST
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999754490726371	WITHOUT_CLASSIFICATION	2.455092736279662E-5	TEST
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.999983809329094	WITHOUT_CLASSIFICATION	1.619067090603097E-5	TEST
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999603145235033	WITHOUT_CLASSIFICATION	3.968547649674345E-5	TEST
// void methods should work	WITHOUT_CLASSIFICATION	0.9999814822215939	WITHOUT_CLASSIFICATION	1.8517778406169853E-5	TEST
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999854863961736	WITHOUT_CLASSIFICATION	1.4513603826477549E-5	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9998668467780483	WITHOUT_CLASSIFICATION	1.3315322195163882E-4	TEST
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999265316038087	WITHOUT_CLASSIFICATION	7.346839619129815E-5	TEST
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999958576298617	WITHOUT_CLASSIFICATION	4.142370138364234E-6	TEST
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999665180549758	WITHOUT_CLASSIFICATION	3.3481945024057415E-5	TEST
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999933171971744	WITHOUT_CLASSIFICATION	6.682802825516119E-6	TEST
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9991149342168796	WITHOUT_CLASSIFICATION	8.85065783120386E-4	TEST
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9998157947091826	WITHOUT_CLASSIFICATION	1.8420529081746728E-4	TEST
// value equality	WITHOUT_CLASSIFICATION	0.9999923356574387	WITHOUT_CLASSIFICATION	7.664342561401506E-6	TEST
// identity equality	WITHOUT_CLASSIFICATION	0.9999937953081552	WITHOUT_CLASSIFICATION	6.204691844752932E-6	TEST
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999666126568628	WITHOUT_CLASSIFICATION	3.3387343137074063E-5	TEST
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999934463842975	WITHOUT_CLASSIFICATION	6.553615702504317E-6	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999848729753699	WITHOUT_CLASSIFICATION	1.5127024630145492E-5	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999848729753699	WITHOUT_CLASSIFICATION	1.5127024630145492E-5	TEST
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999848729753699	WITHOUT_CLASSIFICATION	1.5127024630145492E-5	TEST
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999483183625041	WITHOUT_CLASSIFICATION	5.168163749591267E-5	TEST
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999934400548761	WITHOUT_CLASSIFICATION	6.559945123928643E-6	TEST
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999654503045328	WITHOUT_CLASSIFICATION	3.454969546721112E-5	TEST
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999336251309963	WITHOUT_CLASSIFICATION	6.63748690037003E-5	TEST
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.999987742593224	WITHOUT_CLASSIFICATION	1.2257406776055432E-5	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999987634728161	WITHOUT_CLASSIFICATION	1.2365271838372817E-6	TEST
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999988677774111	WITHOUT_CLASSIFICATION	1.1322225889469883E-6	TEST
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999819468255434	WITHOUT_CLASSIFICATION	1.8053174456596018E-5	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999999474472462	WITHOUT_CLASSIFICATION	5.2552753838887274E-8	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.999591223760613	WITHOUT_CLASSIFICATION	4.087762393869918E-4	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999840107693162	WITHOUT_CLASSIFICATION	1.598923068377051E-5	TEST
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999608415646956	WITHOUT_CLASSIFICATION	3.9158435304392345E-5	TEST
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999978417871919	WITHOUT_CLASSIFICATION	2.1582128081522993E-6	TEST
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999961631030109	WITHOUT_CLASSIFICATION	3.8368969891994945E-6	TEST
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9998852036675036	WITHOUT_CLASSIFICATION	1.147963324964428E-4	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999997972018867	WITHOUT_CLASSIFICATION	2.0279811330327168E-7	TEST
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9998152783318226	WITHOUT_CLASSIFICATION	1.8472166817743522E-4	TEST
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999962792494045	WITHOUT_CLASSIFICATION	3.720750595426409E-6	TEST
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9981856833901567	WITHOUT_CLASSIFICATION	0.0018143166098432378	TEST
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999812418363759	WITHOUT_CLASSIFICATION	1.8758163624082767E-5	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999232158809492	WITHOUT_CLASSIFICATION	7.678411905072954E-5	TEST
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999999477098749	WITHOUT_CLASSIFICATION	5.2290125128335845E-8	TEST
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999990712765181	WITHOUT_CLASSIFICATION	9.287234819508217E-7	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.999925005797175	WITHOUT_CLASSIFICATION	7.499420282499975E-5	TEST
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999805826984817	WITHOUT_CLASSIFICATION	1.94173015184044E-5	TEST
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9998203222519747	WITHOUT_CLASSIFICATION	1.7967774802532727E-4	TEST
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999965356996308	WITHOUT_CLASSIFICATION	3.4643003692985228E-6	TEST
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.999978293031387	WITHOUT_CLASSIFICATION	2.1706968612944242E-5	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999858754706592	WITHOUT_CLASSIFICATION	1.412452934072867E-5	TEST
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.999978293031387	WITHOUT_CLASSIFICATION	2.1706968612944242E-5	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999962387858367	WITHOUT_CLASSIFICATION	3.7612141632968074E-6	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999858754706592	WITHOUT_CLASSIFICATION	1.412452934072867E-5	TEST
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9994269414676824	WITHOUT_CLASSIFICATION	5.730585323175316E-4	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999950751409558	WITHOUT_CLASSIFICATION	4.9248590442732945E-6	TEST
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9999640892814554	WITHOUT_CLASSIFICATION	3.5910718544476984E-5	TEST
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9640326180809011	WITHOUT_CLASSIFICATION	0.03596738191909882	TEST
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999954768886973	WITHOUT_CLASSIFICATION	4.52311130269359E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999941804132957	WITHOUT_CLASSIFICATION	5.819586704258118E-6	TEST
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999667638165544	WITHOUT_CLASSIFICATION	3.323618344569293E-5	TEST
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9989569525730174	WITHOUT_CLASSIFICATION	0.0010430474269825809	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999951224636179	WITHOUT_CLASSIFICATION	4.877536382089451E-6	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999561804283008	WITHOUT_CLASSIFICATION	4.3819571699204384E-5	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999872642543131	WITHOUT_CLASSIFICATION	1.2735745686992921E-5	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999970988154215	WITHOUT_CLASSIFICATION	2.9011845784281684E-6	TEST
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999967222565499	WITHOUT_CLASSIFICATION	3.277743450114141E-6	TEST
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999922935209938	WITHOUT_CLASSIFICATION	7.706479006201461E-6	TEST
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999665577514218	WITHOUT_CLASSIFICATION	3.3442248578222834E-5	TEST
// switch // while	WITHOUT_CLASSIFICATION	0.9999944681638523	WITHOUT_CLASSIFICATION	5.531836147808937E-6	TEST
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9988388473157591	WITHOUT_CLASSIFICATION	0.00116115268424088	TEST
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999913843945032	WITHOUT_CLASSIFICATION	8.61560549682172E-6	TEST
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999995936356658	WITHOUT_CLASSIFICATION	4.0636433415684635E-7	TEST
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.99998265176061	WITHOUT_CLASSIFICATION	1.7348239390002122E-5	TEST
// expected	WITHOUT_CLASSIFICATION	0.9999941870886884	WITHOUT_CLASSIFICATION	5.81291131156144E-6	TEST
// Do nothing	WITHOUT_CLASSIFICATION	0.9999948699650107	WITHOUT_CLASSIFICATION	5.130034989215914E-6	TEST
// constructor	WITHOUT_CLASSIFICATION	0.9999945861923297	WITHOUT_CLASSIFICATION	5.413807670347776E-6	TEST
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999320500779448	WITHOUT_CLASSIFICATION	6.794992205512806E-5	TEST
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999784152051483	WITHOUT_CLASSIFICATION	2.158479485173563E-5	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9998750109815888	WITHOUT_CLASSIFICATION	1.2498901841120598E-4	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999370084123547	WITHOUT_CLASSIFICATION	6.299158764542964E-5	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999975639153736	WITHOUT_CLASSIFICATION	2.436084626403795E-6	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999975639153736	WITHOUT_CLASSIFICATION	2.436084626403795E-6	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999928147087463	WITHOUT_CLASSIFICATION	7.1852912537213485E-6	TEST
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999964830119857	WITHOUT_CLASSIFICATION	3.516988014261715E-6	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999987428544557	WITHOUT_CLASSIFICATION	1.2571455442917326E-6	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.998466577315963	WITHOUT_CLASSIFICATION	0.0015334226840369872	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.998466577315963	WITHOUT_CLASSIFICATION	0.0015334226840369872	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.998466577315963	WITHOUT_CLASSIFICATION	0.0015334226840369872	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.998466577315963	WITHOUT_CLASSIFICATION	0.0015334226840369872	TEST
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.999988652142002	WITHOUT_CLASSIFICATION	1.134785799783588E-5	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999891662641727	WITHOUT_CLASSIFICATION	1.0833735827390224E-5	TEST
// "else" body	WITHOUT_CLASSIFICATION	0.9999936563243202	WITHOUT_CLASSIFICATION	6.343675679822669E-6	TEST
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9998036726256453	WITHOUT_CLASSIFICATION	1.9632737435471345E-4	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9998197004893433	WITHOUT_CLASSIFICATION	1.8029951065669594E-4	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998454290853288	WITHOUT_CLASSIFICATION	1.5457091467119816E-4	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998454290853288	WITHOUT_CLASSIFICATION	1.5457091467119816E-4	TEST
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999966621661034	WITHOUT_CLASSIFICATION	3.3378338967132866E-6	TEST
/* 10! */	WITHOUT_CLASSIFICATION	0.9998443336975474	WITHOUT_CLASSIFICATION	1.5566630245257587E-4	TEST
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999199914073084	WITHOUT_CLASSIFICATION	8.000859269159769E-5	TEST
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9997776226478406	WITHOUT_CLASSIFICATION	2.2237735215927023E-4	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999601525523468	WITHOUT_CLASSIFICATION	3.984744765316833E-5	TEST
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.999988004255232	WITHOUT_CLASSIFICATION	1.1995744768079544E-5	TEST
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999999774599838	WITHOUT_CLASSIFICATION	2.254001624511332E-8	TEST
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9998430642801536	WITHOUT_CLASSIFICATION	1.56935719846374E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999962387858367	WITHOUT_CLASSIFICATION	3.7612141632968074E-6	TEST
// line 449	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 495	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999848729753699	WITHOUT_CLASSIFICATION	1.5127024630145492E-5	TEST
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999995446993093	WITHOUT_CLASSIFICATION	4.553006906849913E-7	TEST
/* 14! */	WITHOUT_CLASSIFICATION	0.9998443336975474	WITHOUT_CLASSIFICATION	1.5566630245257587E-4	TEST
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999685833100322	WITHOUT_CLASSIFICATION	3.141668996779456E-5	TEST
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999946025684106	WITHOUT_CLASSIFICATION	5.397431589367851E-6	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999955954192532	WITHOUT_CLASSIFICATION	4.404580746846329E-6	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999955954192532	WITHOUT_CLASSIFICATION	4.404580746846329E-6	TEST
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999199914073084	WITHOUT_CLASSIFICATION	8.000859269159769E-5	TEST
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999999273369682	WITHOUT_CLASSIFICATION	7.266303176917592E-8	TEST
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999635110682085	WITHOUT_CLASSIFICATION	3.6488931791537626E-5	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999952173116541	WITHOUT_CLASSIFICATION	4.782688345858409E-6	TEST
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999967493115787	WITHOUT_CLASSIFICATION	3.250688421416212E-6	TEST
/* 18! */	WITHOUT_CLASSIFICATION	0.9998443336975474	WITHOUT_CLASSIFICATION	1.5566630245257587E-4	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999373573875188	WITHOUT_CLASSIFICATION	6.264261248120402E-5	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999922309920098	WITHOUT_CLASSIFICATION	7.769007990195995E-6	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999922309920098	WITHOUT_CLASSIFICATION	7.769007990195995E-6	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999922309920098	WITHOUT_CLASSIFICATION	7.769007990195995E-6	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999922309920098	WITHOUT_CLASSIFICATION	7.769007990195995E-6	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999940969060832	WITHOUT_CLASSIFICATION	5.903093916864542E-6	TEST
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.999999978709541	WITHOUT_CLASSIFICATION	2.129045899487378E-8	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999647282888571	WITHOUT_CLASSIFICATION	3.5271711142945185E-5	TEST
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999340310217385	WITHOUT_CLASSIFICATION	6.596897826151992E-5	TEST
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999936006460882	WITHOUT_CLASSIFICATION	6.399353911754694E-6	TEST
/* 22! */	WITHOUT_CLASSIFICATION	0.9998443336975474	WITHOUT_CLASSIFICATION	1.5566630245257587E-4	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999872787517634	WITHOUT_CLASSIFICATION	1.272124823660505E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999969182554193	WITHOUT_CLASSIFICATION	3.0817445807003706E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999969182554193	WITHOUT_CLASSIFICATION	3.0817445807003706E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999969182554193	WITHOUT_CLASSIFICATION	3.0817445807003706E-5	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9998428693927952	WITHOUT_CLASSIFICATION	1.5713060720475407E-4	TEST
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999985434911601	WITHOUT_CLASSIFICATION	1.4565088398507067E-6	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999566746452877	WITHOUT_CLASSIFICATION	4.3325354712251484E-5	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999566746452877	WITHOUT_CLASSIFICATION	4.3325354712251484E-5	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.9999345638863254	WITHOUT_CLASSIFICATION	6.543611367458778E-5	TEST
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999994733809	WITHOUT_CLASSIFICATION	5.266191492863842E-10	TEST
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9997837170900775	WITHOUT_CLASSIFICATION	2.1628290992237347E-4	TEST
// BASE64	WITHOUT_CLASSIFICATION	0.9999345638863254	WITHOUT_CLASSIFICATION	6.543611367458778E-5	TEST
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999995326917829	WITHOUT_CLASSIFICATION	4.673082171772226E-7	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999978095525888	WITHOUT_CLASSIFICATION	2.1904474113032085E-6	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999969529851139	WITHOUT_CLASSIFICATION	3.0470148859467117E-6	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999969529851139	WITHOUT_CLASSIFICATION	3.0470148859467117E-6	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999813014308498	WITHOUT_CLASSIFICATION	1.869856915018962E-5	TEST
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999995527092804	WITHOUT_CLASSIFICATION	4.472907194897658E-7	TEST
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.999999422650884	WITHOUT_CLASSIFICATION	5.773491160689513E-7	TEST
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.999835777624411	WITHOUT_CLASSIFICATION	1.6422237558896645E-4	TEST
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9998774685546731	WITHOUT_CLASSIFICATION	1.2253144532691312E-4	TEST
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999997178685355	WITHOUT_CLASSIFICATION	2.8213146445926255E-7	TEST
// carriage return	WITHOUT_CLASSIFICATION	0.9999964752943955	WITHOUT_CLASSIFICATION	3.5247056045477376E-6	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.999866921501978	WITHOUT_CLASSIFICATION	1.3307849802196925E-4	TEST
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999982344263629	WITHOUT_CLASSIFICATION	1.7655736370491949E-6	TEST
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999970916814349	WITHOUT_CLASSIFICATION	2.9083185650557586E-6	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999915523210168	WITHOUT_CLASSIFICATION	8.447678983283103E-6	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999955971863059	WITHOUT_CLASSIFICATION	4.402813694105347E-6	TEST
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.99998526570156	WITHOUT_CLASSIFICATION	1.47342984399306E-5	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999934409753947	WITHOUT_CLASSIFICATION	6.5590246053888495E-6	TEST
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999993533710874	WITHOUT_CLASSIFICATION	6.466289127033361E-7	TEST
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.999999792658622	WITHOUT_CLASSIFICATION	2.0734137796173783E-7	TEST
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999896117279655	WITHOUT_CLASSIFICATION	1.0388272034520235E-5	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999973265139097	WITHOUT_CLASSIFICATION	2.6734860902287985E-6	TEST
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999893469808422	WITHOUT_CLASSIFICATION	1.0653019157721151E-5	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999994165703012	WITHOUT_CLASSIFICATION	5.834296987877303E-7	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999949055309654	WITHOUT_CLASSIFICATION	5.094469034646223E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999965201824328	WITHOUT_CLASSIFICATION	3.4798175672530295E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999965201824328	WITHOUT_CLASSIFICATION	3.4798175672530295E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999965201824328	WITHOUT_CLASSIFICATION	3.4798175672530295E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999965201824328	WITHOUT_CLASSIFICATION	3.4798175672530295E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999965201824328	WITHOUT_CLASSIFICATION	3.4798175672530295E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999965201824328	WITHOUT_CLASSIFICATION	3.4798175672530295E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999965201824328	WITHOUT_CLASSIFICATION	3.4798175672530295E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999965201824328	WITHOUT_CLASSIFICATION	3.4798175672530295E-6	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999684692477633	WITHOUT_CLASSIFICATION	3.153075223670604E-5	TEST
/* fall through */	WITHOUT_CLASSIFICATION	0.9999864839322168	WITHOUT_CLASSIFICATION	1.3516067783197799E-5	TEST
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9959568310769503	WITHOUT_CLASSIFICATION	0.004043168923049742	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9998799065557913	WITHOUT_CLASSIFICATION	1.2009344420867495E-4	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999987634728161	WITHOUT_CLASSIFICATION	1.2365271838372817E-6	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999987634728161	WITHOUT_CLASSIFICATION	1.2365271838372817E-6	TEST
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999826618760349	WITHOUT_CLASSIFICATION	1.7338123965072473E-5	TEST
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999994794403335	WITHOUT_CLASSIFICATION	5.205596664869153E-7	TEST
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999745770605302	WITHOUT_CLASSIFICATION	2.542293946982913E-5	TEST
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999821115356725	WITHOUT_CLASSIFICATION	1.788846432747242E-5	TEST
// get current context	WITHOUT_CLASSIFICATION	0.9999953535176597	WITHOUT_CLASSIFICATION	4.646482340354893E-6	TEST
// octal constant	WITHOUT_CLASSIFICATION	0.9999937764414164	WITHOUT_CLASSIFICATION	6.2235585836553335E-6	TEST
// read	WITHOUT_CLASSIFICATION	0.9999366639220202	WITHOUT_CLASSIFICATION	6.333607797989781E-5	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999516050582201	WITHOUT_CLASSIFICATION	4.8394941780008374E-5	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9998588279726415	WITHOUT_CLASSIFICATION	1.411720273585427E-4	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999992553514889	WITHOUT_CLASSIFICATION	7.446485111055419E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999992553514889	WITHOUT_CLASSIFICATION	7.446485111055419E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999992553514889	WITHOUT_CLASSIFICATION	7.446485111055419E-6	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999846123954673	WITHOUT_CLASSIFICATION	1.5387604532624135E-5	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999299324281411	WITHOUT_CLASSIFICATION	7.006757185886471E-5	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9998988863095976	WITHOUT_CLASSIFICATION	1.0111369040237514E-4	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999898495001369	WITHOUT_CLASSIFICATION	1.0150499863132593E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999867541838049	WITHOUT_CLASSIFICATION	1.3245816195171987E-5	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999976615248647	WITHOUT_CLASSIFICATION	2.338475135404686E-6	TEST
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999913779365159	WITHOUT_CLASSIFICATION	8.62206348408679E-6	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999334834879096	WITHOUT_CLASSIFICATION	6.65165120904364E-5	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999334834879096	WITHOUT_CLASSIFICATION	6.65165120904364E-5	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999949206100868	WITHOUT_CLASSIFICATION	5.079389913201145E-6	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999687153700741	WITHOUT_CLASSIFICATION	3.128462992597502E-5	TEST
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999985761705301	WITHOUT_CLASSIFICATION	1.4238294699097967E-6	TEST
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999789444030291	WITHOUT_CLASSIFICATION	2.1055596970835355E-5	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999964343731801	WITHOUT_CLASSIFICATION	3.5656268198928043E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999964343731801	WITHOUT_CLASSIFICATION	3.5656268198928043E-6	TEST
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999861635815969	WITHOUT_CLASSIFICATION	1.3836418403059006E-5	TEST
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.999964552234627	WITHOUT_CLASSIFICATION	3.5447765373056384E-5	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999470708053485	WITHOUT_CLASSIFICATION	5.292919465135612E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999978075637043	WITHOUT_CLASSIFICATION	2.192436295786272E-6	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999932047970682	WITHOUT_CLASSIFICATION	6.795202931771683E-6	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999932047970682	WITHOUT_CLASSIFICATION	6.795202931771683E-6	TEST
// check arity	WITHOUT_CLASSIFICATION	0.9999968982349159	WITHOUT_CLASSIFICATION	3.1017650841165366E-6	TEST
// check arity	WITHOUT_CLASSIFICATION	0.9999968982349159	WITHOUT_CLASSIFICATION	3.1017650841165366E-6	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999989530028902	WITHOUT_CLASSIFICATION	1.046997109708214E-6	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999862569266788	WITHOUT_CLASSIFICATION	1.3743073321160479E-5	TEST
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999782335577179	WITHOUT_CLASSIFICATION	2.1766442282152557E-5	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999345638863254	WITHOUT_CLASSIFICATION	6.543611367458778E-5	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999640117477222	WITHOUT_CLASSIFICATION	3.598825227774907E-5	TEST
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999960980554028	WITHOUT_CLASSIFICATION	3.901944597180594E-6	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999797653011893	WITHOUT_CLASSIFICATION	2.0234698810739844E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999362954414281	WITHOUT_CLASSIFICATION	6.370455857185054E-5	TEST
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999985425513556	WITHOUT_CLASSIFICATION	1.4574486444656717E-6	TEST
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999998515925614	WITHOUT_CLASSIFICATION	1.4840743857599295E-7	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999959711706887	WITHOUT_CLASSIFICATION	4.0288293112241296E-6	TEST
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9995251983984377	WITHOUT_CLASSIFICATION	4.748016015623966E-4	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999884041530313	WITHOUT_CLASSIFICATION	1.1595846968728769E-5	TEST
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999995176487599	WITHOUT_CLASSIFICATION	4.823512400861181E-7	TEST
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.999988899123863	WITHOUT_CLASSIFICATION	1.1100876137120668E-5	TEST
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999482017527218	WITHOUT_CLASSIFICATION	5.179824727819103E-5	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999962074177173	WITHOUT_CLASSIFICATION	3.7925822827206813E-6	TEST
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9991906736111033	WITHOUT_CLASSIFICATION	8.093263888967082E-4	TEST
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999521280201541	WITHOUT_CLASSIFICATION	4.787197984587967E-5	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999970988154215	WITHOUT_CLASSIFICATION	2.9011845784281684E-6	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999908408349483	WITHOUT_CLASSIFICATION	9.159165051792917E-6	TEST
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999952857462739	WITHOUT_CLASSIFICATION	4.714253725979141E-6	TEST
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999938160109708	WITHOUT_CLASSIFICATION	6.1839890291729196E-6	TEST
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.999905933588001	WITHOUT_CLASSIFICATION	9.406641199908196E-5	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999861704987577	WITHOUT_CLASSIFICATION	1.382950124227198E-5	TEST
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999954717347741	WITHOUT_CLASSIFICATION	4.528265225849829E-6	TEST
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999698889366292	WITHOUT_CLASSIFICATION	3.0111063370857742E-5	TEST
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999997497270976	WITHOUT_CLASSIFICATION	2.5027290250734946E-7	TEST
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999929787421528	WITHOUT_CLASSIFICATION	7.021257847214669E-6	TEST
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999800608794575	WITHOUT_CLASSIFICATION	1.9939120542544913E-5	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999981894575597	WITHOUT_CLASSIFICATION	1.8105424403305509E-6	TEST
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999954793502314	WITHOUT_CLASSIFICATION	4.520649768644485E-6	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999833725624815	WITHOUT_CLASSIFICATION	1.662743751845294E-5	TEST
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999829392503768	WITHOUT_CLASSIFICATION	1.7060749623182066E-5	TEST
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999889951635025	WITHOUT_CLASSIFICATION	1.100483649756356E-5	TEST
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999833479820232	WITHOUT_CLASSIFICATION	1.66520179768262E-5	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999547631242243	WITHOUT_CLASSIFICATION	4.5236875775676675E-5	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999995715866495	WITHOUT_CLASSIFICATION	4.284133504381126E-7	TEST
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999983144138224	WITHOUT_CLASSIFICATION	1.6855861776583593E-6	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999347178580742	WITHOUT_CLASSIFICATION	6.528214192583944E-5	TEST
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9997083915004118	WITHOUT_CLASSIFICATION	2.916084995882063E-4	TEST
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999865603647368	WITHOUT_CLASSIFICATION	1.343963526332585E-5	TEST
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999923470474797	WITHOUT_CLASSIFICATION	7.652952520244866E-6	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999229539576041	WITHOUT_CLASSIFICATION	7.704604239586619E-5	TEST
// specific arity	WITHOUT_CLASSIFICATION	0.9999950755647637	WITHOUT_CLASSIFICATION	4.924435236222837E-6	TEST
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.999996601794455	WITHOUT_CLASSIFICATION	3.398205544999867E-6	TEST
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999630066469094	WITHOUT_CLASSIFICATION	3.699335309059092E-5	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999665577514218	WITHOUT_CLASSIFICATION	3.3442248578222834E-5	TEST
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999383665404665	WITHOUT_CLASSIFICATION	6.163345953345272E-5	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999856088060398	WITHOUT_CLASSIFICATION	1.4391193960212647E-5	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999856088060398	WITHOUT_CLASSIFICATION	1.4391193960212647E-5	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999239771655478	WITHOUT_CLASSIFICATION	7.602283445218218E-5	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999239771655478	WITHOUT_CLASSIFICATION	7.602283445218218E-5	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998854452033369	WITHOUT_CLASSIFICATION	1.1455479666310884E-4	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998854452033369	WITHOUT_CLASSIFICATION	1.1455479666310884E-4	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999907068824723	WITHOUT_CLASSIFICATION	9.29311752777286E-6	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999907068824723	WITHOUT_CLASSIFICATION	9.29311752777286E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999849328421361	WITHOUT_CLASSIFICATION	1.5067157863855519E-5	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999849328421361	WITHOUT_CLASSIFICATION	1.5067157863855519E-5	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999849328421361	WITHOUT_CLASSIFICATION	1.5067157863855519E-5	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999414259429388	WITHOUT_CLASSIFICATION	5.857405706121209E-5	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999911119515215	WITHOUT_CLASSIFICATION	8.888048478604835E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999911119515215	WITHOUT_CLASSIFICATION	8.888048478604835E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999911119515215	WITHOUT_CLASSIFICATION	8.888048478604835E-6	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999653350860644	WITHOUT_CLASSIFICATION	3.466491393555372E-5	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999653350860644	WITHOUT_CLASSIFICATION	3.466491393555372E-5	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999653350860644	WITHOUT_CLASSIFICATION	3.466491393555372E-5	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999665577514218	WITHOUT_CLASSIFICATION	3.3442248578222834E-5	TEST
// backspace	WITHOUT_CLASSIFICATION	0.9999934440533412	WITHOUT_CLASSIFICATION	6.555946658829295E-6	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
/* package-private */	WITHOUT_CLASSIFICATION	0.9999643341335572	WITHOUT_CLASSIFICATION	3.566586644276485E-5	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999943188342332	WITHOUT_CLASSIFICATION	5.681165766813735E-6	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999943188342332	WITHOUT_CLASSIFICATION	5.681165766813735E-6	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999915274313765	WITHOUT_CLASSIFICATION	8.472568623401702E-6	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999344410333001	WITHOUT_CLASSIFICATION	6.555896669988413E-5	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999344410333001	WITHOUT_CLASSIFICATION	6.555896669988413E-5	TEST
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.811486852469392	WITHOUT_CLASSIFICATION	0.18851314753060805	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9998646420574461	WITHOUT_CLASSIFICATION	1.353579425538882E-4	TEST
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.999939276634562	WITHOUT_CLASSIFICATION	6.072336543816391E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999823498771035	WITHOUT_CLASSIFICATION	1.7650122896448232E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999823498771035	WITHOUT_CLASSIFICATION	1.7650122896448232E-5	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.999992677923485	WITHOUT_CLASSIFICATION	7.32207651498167E-6	TEST
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9994784608533781	WITHOUT_CLASSIFICATION	5.21539146621826E-4	TEST
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999161920543284	WITHOUT_CLASSIFICATION	8.380794567169805E-5	TEST
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999830702075171	WITHOUT_CLASSIFICATION	1.6929792482874415E-5	TEST
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9985939167115722	WITHOUT_CLASSIFICATION	0.0014060832884278036	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999823498771035	WITHOUT_CLASSIFICATION	1.7650122896448232E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999823498771035	WITHOUT_CLASSIFICATION	1.7650122896448232E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999823498771035	WITHOUT_CLASSIFICATION	1.7650122896448232E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999823498771035	WITHOUT_CLASSIFICATION	1.7650122896448232E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999823498771035	WITHOUT_CLASSIFICATION	1.7650122896448232E-5	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999909625745315	WITHOUT_CLASSIFICATION	9.037425468497429E-6	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999651405734209	WITHOUT_CLASSIFICATION	3.485942657903967E-5	TEST
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999991278892919	WITHOUT_CLASSIFICATION	8.721107081303692E-7	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999620432498231	WITHOUT_CLASSIFICATION	3.795675017689947E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999858012683024	WITHOUT_CLASSIFICATION	1.419873169762464E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999858012683024	WITHOUT_CLASSIFICATION	1.419873169762464E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999858012683024	WITHOUT_CLASSIFICATION	1.419873169762464E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999858012683024	WITHOUT_CLASSIFICATION	1.419873169762464E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999858012683024	WITHOUT_CLASSIFICATION	1.419873169762464E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999858012683024	WITHOUT_CLASSIFICATION	1.419873169762464E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999858012683024	WITHOUT_CLASSIFICATION	1.419873169762464E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999858012683024	WITHOUT_CLASSIFICATION	1.419873169762464E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999858012683024	WITHOUT_CLASSIFICATION	1.419873169762464E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999858012683024	WITHOUT_CLASSIFICATION	1.419873169762464E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999858012683024	WITHOUT_CLASSIFICATION	1.419873169762464E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999858012683024	WITHOUT_CLASSIFICATION	1.419873169762464E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999858012683024	WITHOUT_CLASSIFICATION	1.419873169762464E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999858012683024	WITHOUT_CLASSIFICATION	1.419873169762464E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999858012683024	WITHOUT_CLASSIFICATION	1.419873169762464E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999858012683024	WITHOUT_CLASSIFICATION	1.419873169762464E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999858012683024	WITHOUT_CLASSIFICATION	1.419873169762464E-5	TEST
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999998735881404	WITHOUT_CLASSIFICATION	1.2641185961464874E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999858012683024	WITHOUT_CLASSIFICATION	1.419873169762464E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999858012683024	WITHOUT_CLASSIFICATION	1.419873169762464E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999858012683024	WITHOUT_CLASSIFICATION	1.419873169762464E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999858012683024	WITHOUT_CLASSIFICATION	1.419873169762464E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999858012683024	WITHOUT_CLASSIFICATION	1.419873169762464E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999858012683024	WITHOUT_CLASSIFICATION	1.419873169762464E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999858012683024	WITHOUT_CLASSIFICATION	1.419873169762464E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999858012683024	WITHOUT_CLASSIFICATION	1.419873169762464E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999858012683024	WITHOUT_CLASSIFICATION	1.419873169762464E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999858012683024	WITHOUT_CLASSIFICATION	1.419873169762464E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999858012683024	WITHOUT_CLASSIFICATION	1.419873169762464E-5	TEST
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999786767308873	WITHOUT_CLASSIFICATION	2.132326911277093E-5	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9995563915418114	WITHOUT_CLASSIFICATION	4.4360845818868877E-4	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999927557177455	WITHOUT_CLASSIFICATION	7.244282254476118E-6	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999960422354381	WITHOUT_CLASSIFICATION	3.957764561811151E-6	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999643361442974	WITHOUT_CLASSIFICATION	3.5663855702697516E-5	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999232158809492	WITHOUT_CLASSIFICATION	7.678411905072954E-5	TEST
// only public methods	WITHOUT_CLASSIFICATION	0.9999902938613955	WITHOUT_CLASSIFICATION	9.706138604443755E-6	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999615928747142	WITHOUT_CLASSIFICATION	3.840712528579193E-5	TEST
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999995351702146	WITHOUT_CLASSIFICATION	4.648297855368042E-7	TEST
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.999999338048193	WITHOUT_CLASSIFICATION	6.619518069597029E-7	TEST
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999924061331705	WITHOUT_CLASSIFICATION	7.593866829488077E-6	TEST
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.999999963926258	WITHOUT_CLASSIFICATION	3.6073741968464023E-8	TEST
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999948063255477	WITHOUT_CLASSIFICATION	5.193674452274794E-6	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999843202932033	WITHOUT_CLASSIFICATION	1.5679706796724626E-5	TEST
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999403712297348	WITHOUT_CLASSIFICATION	5.962877026528967E-5	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999870699087954	WITHOUT_CLASSIFICATION	1.2930091204649142E-5	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999999474472462	WITHOUT_CLASSIFICATION	5.2552753838887274E-8	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998319902818373	WITHOUT_CLASSIFICATION	1.6800971816269546E-4	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998319902818373	WITHOUT_CLASSIFICATION	1.6800971816269546E-4	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998319902818373	WITHOUT_CLASSIFICATION	1.6800971816269546E-4	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998319902818373	WITHOUT_CLASSIFICATION	1.6800971816269546E-4	TEST
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999984568906559	WITHOUT_CLASSIFICATION	1.5431093440347352E-6	TEST
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999216183684374	WITHOUT_CLASSIFICATION	7.838163156257916E-5	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999721053467936	WITHOUT_CLASSIFICATION	2.7894653206406493E-5	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999721053467936	WITHOUT_CLASSIFICATION	2.7894653206406493E-5	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999994739468099	WITHOUT_CLASSIFICATION	5.260531900256532E-7	TEST
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999384964761668	WITHOUT_CLASSIFICATION	6.150352383324634E-5	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999944291545377	WITHOUT_CLASSIFICATION	5.5708454622730055E-6	TEST
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999858285949309	WITHOUT_CLASSIFICATION	1.4171405069083902E-5	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999656580133839	WITHOUT_CLASSIFICATION	3.434198661619613E-5	TEST
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999400066885972	WITHOUT_CLASSIFICATION	5.999331140291837E-5	TEST
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999837661072508	WITHOUT_CLASSIFICATION	1.623389274924491E-5	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999927081054012	WITHOUT_CLASSIFICATION	7.291894598888512E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999927081054012	WITHOUT_CLASSIFICATION	7.291894598888512E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999927081054012	WITHOUT_CLASSIFICATION	7.291894598888512E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999927081054012	WITHOUT_CLASSIFICATION	7.291894598888512E-6	TEST
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999925058588058	WITHOUT_CLASSIFICATION	7.4941411942111485E-6	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999979936446723	WITHOUT_CLASSIFICATION	2.0063553276337228E-6	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999979936446723	WITHOUT_CLASSIFICATION	2.0063553276337228E-6	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999979936446723	WITHOUT_CLASSIFICATION	2.0063553276337228E-6	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999886745529495	WITHOUT_CLASSIFICATION	1.1325447050432611E-5	TEST
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999638667661102	WITHOUT_CLASSIFICATION	3.613323388981859E-5	TEST
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999858515009361	WITHOUT_CLASSIFICATION	1.4148499063828255E-5	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.998466577315963	WITHOUT_CLASSIFICATION	0.0015334226840369872	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.998466577315963	WITHOUT_CLASSIFICATION	0.0015334226840369872	TEST
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999941140792497	WITHOUT_CLASSIFICATION	5.885920750385412E-6	TEST
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999994101863912	WITHOUT_CLASSIFICATION	5.898136087547704E-7	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.9999894599129117	WITHOUT_CLASSIFICATION	1.0540087088322328E-5	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.9999894599129117	WITHOUT_CLASSIFICATION	1.0540087088322328E-5	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999738343588985	WITHOUT_CLASSIFICATION	2.61656411014342E-5	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999738343588985	WITHOUT_CLASSIFICATION	2.61656411014342E-5	TEST
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999116517184559	WITHOUT_CLASSIFICATION	8.834828154414316E-5	TEST
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9998485559454279	WITHOUT_CLASSIFICATION	1.5144405457213344E-4	TEST
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999665180549758	WITHOUT_CLASSIFICATION	3.3481945024057415E-5	TEST
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999708051410269	WITHOUT_CLASSIFICATION	2.919485897318151E-5	TEST
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999702137495459	WITHOUT_CLASSIFICATION	2.9786250454088935E-5	TEST
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999960500512888	WITHOUT_CLASSIFICATION	3.949948711219236E-6	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.999966568106155	WITHOUT_CLASSIFICATION	3.343189384491926E-5	TEST
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999949234097135	WITHOUT_CLASSIFICATION	5.076590286499182E-6	TEST
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999062770562321	WITHOUT_CLASSIFICATION	9.372294376782768E-5	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999870872531674	WITHOUT_CLASSIFICATION	1.2912746832587697E-5	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999870872531674	WITHOUT_CLASSIFICATION	1.2912746832587697E-5	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999963482542056	WITHOUT_CLASSIFICATION	3.6517457944494594E-6	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999963482542056	WITHOUT_CLASSIFICATION	3.6517457944494594E-6	TEST
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.999994418585726	WITHOUT_CLASSIFICATION	5.581414273875093E-6	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999874030903626	WITHOUT_CLASSIFICATION	1.2596909637272022E-5	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999843875830868	WITHOUT_CLASSIFICATION	1.5612416913172648E-5	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9996012562187385	WITHOUT_CLASSIFICATION	3.987437812614635E-4	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9996012562187385	WITHOUT_CLASSIFICATION	3.987437812614635E-4	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9996012562187385	WITHOUT_CLASSIFICATION	3.987437812614635E-4	TEST
// line 286	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 476	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 513	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 530	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 533	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 551	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// end loop	WITHOUT_CLASSIFICATION	0.9999965601440294	WITHOUT_CLASSIFICATION	3.439855970572396E-6	TEST
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9998591833096313	WITHOUT_CLASSIFICATION	1.4081669036867479E-4	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999991122484587	WITHOUT_CLASSIFICATION	8.877515414331553E-7	TEST
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9999939304933785	WITHOUT_CLASSIFICATION	6.069506621530082E-6	TEST
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9998332424216408	WITHOUT_CLASSIFICATION	1.6675757835906042E-4	TEST
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.999983326744586	WITHOUT_CLASSIFICATION	1.6673255414037323E-5	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.998466577315963	WITHOUT_CLASSIFICATION	0.0015334226840369872	TEST
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999995991224248	WITHOUT_CLASSIFICATION	4.0087757518698667E-7	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.999940199085218	WITHOUT_CLASSIFICATION	5.980091478200646E-5	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999975639153736	WITHOUT_CLASSIFICATION	2.436084626403795E-6	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9992232996412416	WITHOUT_CLASSIFICATION	7.767003587584671E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9992232996412416	WITHOUT_CLASSIFICATION	7.767003587584671E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9992232996412416	WITHOUT_CLASSIFICATION	7.767003587584671E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9992232996412416	WITHOUT_CLASSIFICATION	7.767003587584671E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9992232996412416	WITHOUT_CLASSIFICATION	7.767003587584671E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999198573311996	WITHOUT_CLASSIFICATION	8.014266880034776E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9992232996412416	WITHOUT_CLASSIFICATION	7.767003587584671E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9992232996412416	WITHOUT_CLASSIFICATION	7.767003587584671E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9992232996412416	WITHOUT_CLASSIFICATION	7.767003587584671E-4	TEST
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999854346357715	WITHOUT_CLASSIFICATION	1.456536422860709E-5	TEST
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.999982437409797	WITHOUT_CLASSIFICATION	1.7562590203080892E-5	TEST
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9997700517020933	WITHOUT_CLASSIFICATION	2.2994829790675707E-4	TEST
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999272170522127	WITHOUT_CLASSIFICATION	7.27829477874217E-5	TEST
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9998012509448959	WITHOUT_CLASSIFICATION	1.9874905510401178E-4	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9996666862888897	WITHOUT_CLASSIFICATION	3.3331371111042517E-4	TEST
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999716383739224	WITHOUT_CLASSIFICATION	2.836162607760824E-5	TEST
// line 572	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 625	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 649	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 723	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 745	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 766	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 785	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 800	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 812	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 827	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 864	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 886	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 911	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 929	WITHOUT_CLASSIFICATION	0.9999955951158724	WITHOUT_CLASSIFICATION	4.4048841274732675E-6	TEST
// line 952	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 970	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 972	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 991	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1011	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1026	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1067	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1085	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1145	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1169	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1201	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1229	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1287	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1293	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1307	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1325	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1363	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1398	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1473	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1492	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1523	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1562	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1582	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1620	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1635	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1652	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1681	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1755	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1789	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999934376744988	WITHOUT_CLASSIFICATION	6.562325501224605E-6	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999811757700297	WITHOUT_CLASSIFICATION	1.8824229970321538E-5	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9997248800448234	WITHOUT_CLASSIFICATION	2.7511995517655877E-4	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9998703779209712	WITHOUT_CLASSIFICATION	1.2962207902878279E-4	TEST
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.999988231055957	WITHOUT_CLASSIFICATION	1.1768944042933397E-5	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999927525564379	WITHOUT_CLASSIFICATION	7.2474435620466695E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999927525564379	WITHOUT_CLASSIFICATION	7.2474435620466695E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999927525564379	WITHOUT_CLASSIFICATION	7.2474435620466695E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999927525564379	WITHOUT_CLASSIFICATION	7.2474435620466695E-6	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9995781730410838	WITHOUT_CLASSIFICATION	4.2182695891622223E-4	TEST
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999995008070545	WITHOUT_CLASSIFICATION	4.991929455915583E-7	TEST
// line 313	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 339	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 361	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 413	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 451	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 472	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 500	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 515	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 555	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 582	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 619	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 636	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 669	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 703	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 776	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 814	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 823	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 854	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 872	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 905	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 925	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 958	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 992	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1047	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1072	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1081	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1108	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1136	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1168	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1192	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1241	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1267	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1286	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1301	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1314	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1333	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1362	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1395	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1420	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1439	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1476	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1535	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1588	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1618	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1643	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1669	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1728	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1753	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1779	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1794	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1812	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1837	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1895	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1925	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1950	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 1992	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// line 2014	WITHOUT_CLASSIFICATION	0.9999955948492562	WITHOUT_CLASSIFICATION	4.40515074383199E-6	TEST
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999598796847097	WITHOUT_CLASSIFICATION	4.0120315290265516E-5	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999952075554405	WITHOUT_CLASSIFICATION	4.792444559592418E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999967924104737	WITHOUT_CLASSIFICATION	3.2075895264093044E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999967924104737	WITHOUT_CLASSIFICATION	3.2075895264093044E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999967924104737	WITHOUT_CLASSIFICATION	3.2075895264093044E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999967924104737	WITHOUT_CLASSIFICATION	3.2075895264093044E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999967924104737	WITHOUT_CLASSIFICATION	3.2075895264093044E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999967924104737	WITHOUT_CLASSIFICATION	3.2075895264093044E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999967924104737	WITHOUT_CLASSIFICATION	3.2075895264093044E-6	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999888482354623	WITHOUT_CLASSIFICATION	1.1151764537755992E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999888482354623	WITHOUT_CLASSIFICATION	1.1151764537755992E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999888482354623	WITHOUT_CLASSIFICATION	1.1151764537755992E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999888482354623	WITHOUT_CLASSIFICATION	1.1151764537755992E-5	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9996072665686193	WITHOUT_CLASSIFICATION	3.9273343138076E-4	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9996072665686193	WITHOUT_CLASSIFICATION	3.9273343138076E-4	TEST
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9998486998991309	WITHOUT_CLASSIFICATION	1.5130010086897438E-4	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999996129019678	WITHOUT_CLASSIFICATION	3.8709803224185864E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999996129019678	WITHOUT_CLASSIFICATION	3.8709803224185864E-7	TEST
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999618701771209	WITHOUT_CLASSIFICATION	3.812982287916746E-5	TEST
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999950637611675	WITHOUT_CLASSIFICATION	4.936238832441542E-6	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999670499056497	WITHOUT_CLASSIFICATION	3.29500943503861E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999670499056497	WITHOUT_CLASSIFICATION	3.29500943503861E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999670499056497	WITHOUT_CLASSIFICATION	3.29500943503861E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999670499056497	WITHOUT_CLASSIFICATION	3.29500943503861E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999670499056497	WITHOUT_CLASSIFICATION	3.29500943503861E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999670499056497	WITHOUT_CLASSIFICATION	3.29500943503861E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999670499056497	WITHOUT_CLASSIFICATION	3.29500943503861E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999670499056497	WITHOUT_CLASSIFICATION	3.29500943503861E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999670499056497	WITHOUT_CLASSIFICATION	3.29500943503861E-5	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999892589862392	WITHOUT_CLASSIFICATION	1.0741013760840184E-5	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999892589862392	WITHOUT_CLASSIFICATION	1.0741013760840184E-5	TEST
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999913322191551	WITHOUT_CLASSIFICATION	8.667780844784897E-6	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999887404065415	WITHOUT_CLASSIFICATION	1.1259593458469965E-5	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999887404065415	WITHOUT_CLASSIFICATION	1.1259593458469965E-5	TEST
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999986545761167	WITHOUT_CLASSIFICATION	1.3454238832205235E-6	TEST
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.5863370310235694	TEST	0.4136629689764307	WITHOUT_CLASSIFICATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999998724447496	WITHOUT_CLASSIFICATION	1.2755525039451834E-7	TEST
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999930461775123	WITHOUT_CLASSIFICATION	6.953822487780903E-6	TEST
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999723670461372	WITHOUT_CLASSIFICATION	2.76329538626901E-5	TEST
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999665854952409	WITHOUT_CLASSIFICATION	3.341450475918412E-5	TEST
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.999996148036817	WITHOUT_CLASSIFICATION	3.8519631829317915E-6	TEST
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999918696970864	WITHOUT_CLASSIFICATION	8.13030291351838E-6	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.999275363942951	WITHOUT_CLASSIFICATION	7.246360570490256E-4	TEST
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9996869018935947	WITHOUT_CLASSIFICATION	3.1309810640532405E-4	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9898779430304848	WITHOUT_CLASSIFICATION	0.01012205696951519	TEST
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999987545360227	WITHOUT_CLASSIFICATION	1.2454639773372937E-6	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999926711629156	WITHOUT_CLASSIFICATION	7.328837084381496E-6	TEST
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999978366594069	WITHOUT_CLASSIFICATION	2.163340593122581E-6	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999397638688864	WITHOUT_CLASSIFICATION	6.023613111366218E-5	TEST
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999940165081357	WITHOUT_CLASSIFICATION	5.98349186426443E-6	TEST
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999738690444349	WITHOUT_CLASSIFICATION	2.6130955565195488E-5	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.999779818713007	WITHOUT_CLASSIFICATION	2.2018128699291181E-4	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999507923497755	WITHOUT_CLASSIFICATION	4.9207650224417506E-5	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999507923497755	WITHOUT_CLASSIFICATION	4.9207650224417506E-5	TEST
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999876715134728	WITHOUT_CLASSIFICATION	1.2328486527174003E-5	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999496334325617	WITHOUT_CLASSIFICATION	5.0366567438279787E-5	TEST
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999831483063345	WITHOUT_CLASSIFICATION	1.6851693665465266E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9992013859715962	WITHOUT_CLASSIFICATION	7.986140284038021E-4	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.999878659682539	WITHOUT_CLASSIFICATION	1.2134031746107459E-4	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.999878659682539	WITHOUT_CLASSIFICATION	1.2134031746107459E-4	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.999878659682539	WITHOUT_CLASSIFICATION	1.2134031746107459E-4	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999981709285048	WITHOUT_CLASSIFICATION	1.8290714951058465E-6	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999066874595518	WITHOUT_CLASSIFICATION	9.331254044810435E-5	TEST
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999978693926372	WITHOUT_CLASSIFICATION	2.130607362755986E-6	TEST
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999998911302994	WITHOUT_CLASSIFICATION	1.0886970052705613E-7	TEST
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999981398931378	WITHOUT_CLASSIFICATION	1.8601068621479405E-6	TEST
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999997242223708	WITHOUT_CLASSIFICATION	2.7577762918341564E-7	TEST
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.999991490911088	WITHOUT_CLASSIFICATION	8.509088912041071E-6	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999702469769428	WITHOUT_CLASSIFICATION	2.975302305720683E-5	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999996626451372	WITHOUT_CLASSIFICATION	3.373548628023177E-7	TEST
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999846482878237	WITHOUT_CLASSIFICATION	1.535171217623225E-5	TEST
// reset buffer	WITHOUT_CLASSIFICATION	0.999994231567578	WITHOUT_CLASSIFICATION	5.768432421928754E-6	TEST
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999957932811376	WITHOUT_CLASSIFICATION	4.2067188623529086E-6	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9075574508287654	WITHOUT_CLASSIFICATION	0.09244254917123461	TEST
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999710966076398	WITHOUT_CLASSIFICATION	2.890339236008382E-5	TEST
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.999997369525572	WITHOUT_CLASSIFICATION	2.630474427863963E-6	TEST
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999387844038611	WITHOUT_CLASSIFICATION	6.121559613893492E-5	TEST
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.999981173114488	WITHOUT_CLASSIFICATION	1.8826885512057553E-5	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9998668467780483	WITHOUT_CLASSIFICATION	1.3315322195163882E-4	TEST
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.999998522129261	WITHOUT_CLASSIFICATION	1.4778707389421764E-6	TEST
