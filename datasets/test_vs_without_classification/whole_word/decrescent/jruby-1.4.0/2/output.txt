// ?R  | boolean | True if file is readable by the real uid/gid of the caller // FIXME: Need to implement an readable_real_p in FileTest	TEST	0.9999973221538605	WITHOUT_CLASSIFICATION	2.677846139577022E-6	TEST
// TODO make an assert here	TEST	0.9557583296821804	WITHOUT_CLASSIFICATION	0.0442416703178195	TEST
// TODO add test methods here. The name must begin with 'test'. For example:	TEST	0.8086112282134191	TEST	0.19138877178658098	WITHOUT_CLASSIFICATION
// TODO: Make into an assert once I get things like blockbodynodes to be implicit nil	TEST	0.9955934707449096	WITHOUT_CLASSIFICATION	0.0044065292550905105	TEST
// if the method is extending something, then we have // to test if the handler is initialized...	TEST	0.9998834496893148	WITHOUT_CLASSIFICATION	1.1655031068528813E-4	TEST
// ?W  | boolean | True if file1 exists and is writable by the real uid/gid // FIXME: Need to implement an writable_real_p in FileTest	TEST	0.999998247598498	WITHOUT_CLASSIFICATION	1.7524015020235874E-6	TEST
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.999922338208542	WITHOUT_CLASSIFICATION	7.766179145802374E-5	TEST
// line 335	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999912428701605	WITHOUT_CLASSIFICATION	8.75712983938783E-6	TEST
// line 362	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
// line 391	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
/* ^D */	WITHOUT_CLASSIFICATION	0.999849619183643	WITHOUT_CLASSIFICATION	1.5038081635710562E-4	TEST
/* ^Z */	WITHOUT_CLASSIFICATION	0.999849619183643	WITHOUT_CLASSIFICATION	1.5038081635710562E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9998825363990939	WITHOUT_CLASSIFICATION	1.1746360090614672E-4	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9998825363990939	WITHOUT_CLASSIFICATION	1.1746360090614672E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999578076811179	WITHOUT_CLASSIFICATION	4.2192318882095255E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999578076811179	WITHOUT_CLASSIFICATION	4.2192318882095255E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999578076811179	WITHOUT_CLASSIFICATION	4.2192318882095255E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999578076811179	WITHOUT_CLASSIFICATION	4.2192318882095255E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999578076811179	WITHOUT_CLASSIFICATION	4.2192318882095255E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999578076811179	WITHOUT_CLASSIFICATION	4.2192318882095255E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999578076811179	WITHOUT_CLASSIFICATION	4.2192318882095255E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999578076811179	WITHOUT_CLASSIFICATION	4.2192318882095255E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999578076811179	WITHOUT_CLASSIFICATION	4.2192318882095255E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999578076811179	WITHOUT_CLASSIFICATION	4.2192318882095255E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999578076811179	WITHOUT_CLASSIFICATION	4.2192318882095255E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999578076811179	WITHOUT_CLASSIFICATION	4.2192318882095255E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999578076811179	WITHOUT_CLASSIFICATION	4.2192318882095255E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999578076811179	WITHOUT_CLASSIFICATION	4.2192318882095255E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999578076811179	WITHOUT_CLASSIFICATION	4.2192318882095255E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999578076811179	WITHOUT_CLASSIFICATION	4.2192318882095255E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999578076811179	WITHOUT_CLASSIFICATION	4.2192318882095255E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999578076811179	WITHOUT_CLASSIFICATION	4.2192318882095255E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999578076811179	WITHOUT_CLASSIFICATION	4.2192318882095255E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999578076811179	WITHOUT_CLASSIFICATION	4.2192318882095255E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999578076811179	WITHOUT_CLASSIFICATION	4.2192318882095255E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999578076811179	WITHOUT_CLASSIFICATION	4.2192318882095255E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999578076811179	WITHOUT_CLASSIFICATION	4.2192318882095255E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999578076811179	WITHOUT_CLASSIFICATION	4.2192318882095255E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999578076811179	WITHOUT_CLASSIFICATION	4.2192318882095255E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999578076811179	WITHOUT_CLASSIFICATION	4.2192318882095255E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999578076811179	WITHOUT_CLASSIFICATION	4.2192318882095255E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999578076811179	WITHOUT_CLASSIFICATION	4.2192318882095255E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999578076811179	WITHOUT_CLASSIFICATION	4.2192318882095255E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999578076811179	WITHOUT_CLASSIFICATION	4.2192318882095255E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999578076811179	WITHOUT_CLASSIFICATION	4.2192318882095255E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999578076811179	WITHOUT_CLASSIFICATION	4.2192318882095255E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999578076811179	WITHOUT_CLASSIFICATION	4.2192318882095255E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999578076811179	WITHOUT_CLASSIFICATION	4.2192318882095255E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999578076811179	WITHOUT_CLASSIFICATION	4.2192318882095255E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999578076811179	WITHOUT_CLASSIFICATION	4.2192318882095255E-5	TEST
// return result	WITHOUT_CLASSIFICATION	0.9999943712574042	WITHOUT_CLASSIFICATION	5.628742595837416E-6	TEST
// name	WITHOUT_CLASSIFICATION	0.999905511221801	WITHOUT_CLASSIFICATION	9.448877819893786E-5	TEST
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999674187952842	WITHOUT_CLASSIFICATION	3.258120471582441E-5	TEST
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999886937456369	WITHOUT_CLASSIFICATION	1.13062543630279E-5	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999885029815945	WITHOUT_CLASSIFICATION	1.14970184055988E-5	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999885029815945	WITHOUT_CLASSIFICATION	1.14970184055988E-5	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999885029815945	WITHOUT_CLASSIFICATION	1.14970184055988E-5	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999885029815945	WITHOUT_CLASSIFICATION	1.14970184055988E-5	TEST
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999637568528295	WITHOUT_CLASSIFICATION	3.6243147170639436E-5	TEST
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999337941375068	WITHOUT_CLASSIFICATION	6.620586249323888E-5	TEST
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999624831784271	WITHOUT_CLASSIFICATION	3.751682157300401E-5	TEST
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.999952726720046	WITHOUT_CLASSIFICATION	4.727327995406184E-5	TEST
// Version information:	WITHOUT_CLASSIFICATION	0.9999694633680671	WITHOUT_CLASSIFICATION	3.053663193287137E-5	TEST
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999992174998485	WITHOUT_CLASSIFICATION	7.825001513834753E-7	TEST
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999908146041802	WITHOUT_CLASSIFICATION	9.185395819722257E-6	TEST
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999935595077091	WITHOUT_CLASSIFICATION	6.440492290902028E-6	TEST
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999999170014672	WITHOUT_CLASSIFICATION	8.299853290705171E-8	TEST
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9939081553097413	WITHOUT_CLASSIFICATION	0.00609184469025879	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999576420612114	WITHOUT_CLASSIFICATION	4.2357938788595806E-5	TEST
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999785391642527	WITHOUT_CLASSIFICATION	2.146083574728803E-5	TEST
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.999690871689207	WITHOUT_CLASSIFICATION	3.091283107930524E-4	TEST
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999877582374505	WITHOUT_CLASSIFICATION	1.2241762549521964E-5	TEST
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999550718774071	WITHOUT_CLASSIFICATION	4.492812259292838E-5	TEST
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999761604289399	WITHOUT_CLASSIFICATION	2.3839571060099036E-5	TEST
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9999962653426053	WITHOUT_CLASSIFICATION	3.7346573947698003E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999885029815945	WITHOUT_CLASSIFICATION	1.14970184055988E-5	TEST
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999509421351593	WITHOUT_CLASSIFICATION	4.905786484067734E-5	TEST
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999685753209598	WITHOUT_CLASSIFICATION	3.1424679040116754E-5	TEST
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999515629809492	WITHOUT_CLASSIFICATION	4.8437019050771835E-5	TEST
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9999473760941953	WITHOUT_CLASSIFICATION	5.26239058048385E-5	TEST
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9999850344836676	WITHOUT_CLASSIFICATION	1.4965516332328757E-5	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.9999942897702655	WITHOUT_CLASSIFICATION	5.71022973456516E-6	TEST
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999752124844611	WITHOUT_CLASSIFICATION	2.4787515538912285E-5	TEST
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999241778130631	WITHOUT_CLASSIFICATION	7.582218693691417E-5	TEST
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999620070480988	WITHOUT_CLASSIFICATION	3.799295190129558E-5	TEST
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999867397683535	WITHOUT_CLASSIFICATION	1.3260231646626043E-5	TEST
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999585154368285	WITHOUT_CLASSIFICATION	4.148456317154919E-5	TEST
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999498117183035	WITHOUT_CLASSIFICATION	5.018828169643903E-5	TEST
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9992717483712659	WITHOUT_CLASSIFICATION	7.282516287340572E-4	TEST
// IOT is also 6	WITHOUT_CLASSIFICATION	0.999982583540615	WITHOUT_CLASSIFICATION	1.741645938502097E-5	TEST
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999812324375329	WITHOUT_CLASSIFICATION	1.8767562467034203E-5	TEST
// RubySignal	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999503567663325	WITHOUT_CLASSIFICATION	4.9643233667650196E-5	TEST
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9963519753235216	WITHOUT_CLASSIFICATION	0.0036480246764783943	TEST
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.99999556135578	WITHOUT_CLASSIFICATION	4.438644219946513E-6	TEST
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999920007970461	WITHOUT_CLASSIFICATION	7.999202953972148E-6	TEST
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999695005133072	WITHOUT_CLASSIFICATION	3.0499486692712757E-5	TEST
//io.finish();	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9996833302458988	WITHOUT_CLASSIFICATION	3.166697541010938E-4	TEST
// hmm...	WITHOUT_CLASSIFICATION	0.9999577922012789	WITHOUT_CLASSIFICATION	4.220779872101935E-5	TEST
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.99996055198622	WITHOUT_CLASSIFICATION	3.944801377991606E-5	TEST
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999713005042675	WITHOUT_CLASSIFICATION	2.869949573248324E-5	TEST
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999713524444523	WITHOUT_CLASSIFICATION	2.864755554763475E-5	TEST
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999850606902582	WITHOUT_CLASSIFICATION	1.4939309741763527E-5	TEST
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999692855741596	WITHOUT_CLASSIFICATION	3.071442584031114E-5	TEST
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999343506027248	WITHOUT_CLASSIFICATION	6.56493972751653E-5	TEST
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999555856866438	WITHOUT_CLASSIFICATION	4.4414313356240145E-5	TEST
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9998916128826998	WITHOUT_CLASSIFICATION	1.0838711730020956E-4	TEST
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999951781166909	WITHOUT_CLASSIFICATION	4.821883309137434E-6	TEST
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999897562392694	WITHOUT_CLASSIFICATION	1.0243760730568235E-5	TEST
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999852744221961	WITHOUT_CLASSIFICATION	1.4725577803797603E-5	TEST
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999983304830411	WITHOUT_CLASSIFICATION	1.6695169588772377E-6	TEST
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9994517411685692	WITHOUT_CLASSIFICATION	5.482588314309044E-4	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999414833736107	WITHOUT_CLASSIFICATION	5.8516626389391996E-5	TEST
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999981767149937	WITHOUT_CLASSIFICATION	1.8232850063717937E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999418592756167	WITHOUT_CLASSIFICATION	5.8140724383301216E-5	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999751212584004	WITHOUT_CLASSIFICATION	2.487874159969168E-5	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999579238573145	WITHOUT_CLASSIFICATION	4.207614268544103E-5	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999579238573145	WITHOUT_CLASSIFICATION	4.207614268544103E-5	TEST
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9999405887066269	WITHOUT_CLASSIFICATION	5.9411293373026296E-5	TEST
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999928131693546	WITHOUT_CLASSIFICATION	7.1868306454875425E-6	TEST
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999711591868174	WITHOUT_CLASSIFICATION	2.8840813182557405E-5	TEST
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999811609814718	WITHOUT_CLASSIFICATION	1.8839018528102555E-5	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999853823646966	WITHOUT_CLASSIFICATION	1.4617635303352773E-5	TEST
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9998033699676355	WITHOUT_CLASSIFICATION	1.9663003236447627E-4	TEST
// ???	WITHOUT_CLASSIFICATION	0.9999588740643012	WITHOUT_CLASSIFICATION	4.112593569884832E-5	TEST
// PID	WITHOUT_CLASSIFICATION	0.9999577922012789	WITHOUT_CLASSIFICATION	4.220779872101935E-5	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999418592756167	WITHOUT_CLASSIFICATION	5.8140724383301216E-5	TEST
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999969371167323	WITHOUT_CLASSIFICATION	3.062883267793606E-6	TEST
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9998975052431354	WITHOUT_CLASSIFICATION	1.024947568646336E-4	TEST
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999886205460132	WITHOUT_CLASSIFICATION	1.1379453986861029E-5	TEST
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999900090167377	WITHOUT_CLASSIFICATION	9.990983262169896E-6	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999472892821988	WITHOUT_CLASSIFICATION	5.2710717801185923E-5	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999472892821988	WITHOUT_CLASSIFICATION	5.2710717801185923E-5	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999472892821988	WITHOUT_CLASSIFICATION	5.2710717801185923E-5	TEST
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999936236038134	WITHOUT_CLASSIFICATION	6.37639618657645E-6	TEST
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999857408041575	WITHOUT_CLASSIFICATION	1.4259195842573565E-5	TEST
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999932079816001	WITHOUT_CLASSIFICATION	6.792018399809963E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999753683528956	WITHOUT_CLASSIFICATION	2.463164710448305E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999753683528956	WITHOUT_CLASSIFICATION	2.463164710448305E-5	TEST
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9975701131386323	WITHOUT_CLASSIFICATION	0.0024298868613676743	TEST
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999981212130516	WITHOUT_CLASSIFICATION	1.8787869483482263E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999753683528956	WITHOUT_CLASSIFICATION	2.463164710448305E-5	TEST
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999853364798538	WITHOUT_CLASSIFICATION	1.4663520146384008E-5	TEST
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9997713878804593	WITHOUT_CLASSIFICATION	2.286121195407846E-4	TEST
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999714212621436	WITHOUT_CLASSIFICATION	2.8578737856383133E-5	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999940421387044	WITHOUT_CLASSIFICATION	5.957861295541472E-6	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999292856440353	WITHOUT_CLASSIFICATION	7.071435596469068E-5	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999702640114225	WITHOUT_CLASSIFICATION	2.9735988577501753E-5	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999702640114225	WITHOUT_CLASSIFICATION	2.9735988577501753E-5	TEST
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999584760509145	WITHOUT_CLASSIFICATION	4.152394908550838E-5	TEST
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999874495754092	WITHOUT_CLASSIFICATION	1.2550424590735251E-5	TEST
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999593100816562	WITHOUT_CLASSIFICATION	4.0689918343707756E-5	TEST
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999694081273955	WITHOUT_CLASSIFICATION	3.0591872604375854E-5	TEST
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999658828644743	WITHOUT_CLASSIFICATION	3.411713552563184E-5	TEST
// extras flag	WITHOUT_CLASSIFICATION	0.999989423577586	WITHOUT_CLASSIFICATION	1.057642241394715E-5	TEST
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// ...nothing	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// utility method	WITHOUT_CLASSIFICATION	0.9999913511553968	WITHOUT_CLASSIFICATION	8.648844603076924E-6	TEST
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999831454657867	WITHOUT_CLASSIFICATION	1.685453421331883E-5	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999418592756167	WITHOUT_CLASSIFICATION	5.8140724383301216E-5	TEST
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999824959918056	WITHOUT_CLASSIFICATION	1.750400819436137E-5	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999494065143809	WITHOUT_CLASSIFICATION	5.059348561903267E-5	TEST
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9999819635253571	WITHOUT_CLASSIFICATION	1.8036474642941573E-5	TEST
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999463747203454	WITHOUT_CLASSIFICATION	5.3625279654461645E-5	TEST
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999792513710567	WITHOUT_CLASSIFICATION	2.0748628943332838E-5	TEST
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999757172954331	WITHOUT_CLASSIFICATION	2.4282704566845312E-5	TEST
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999258001181385	WITHOUT_CLASSIFICATION	7.419988186155272E-5	TEST
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.999969297369491	WITHOUT_CLASSIFICATION	3.070263050905737E-5	TEST
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9999269593776976	WITHOUT_CLASSIFICATION	7.304062230240105E-5	TEST
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999101253836906	WITHOUT_CLASSIFICATION	8.98746163094714E-5	TEST
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999329294781234	WITHOUT_CLASSIFICATION	6.707052187659216E-5	TEST
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999952565585324	WITHOUT_CLASSIFICATION	4.743441467647882E-6	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999885315129187	WITHOUT_CLASSIFICATION	1.1468487081277485E-5	TEST
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9996763992007752	WITHOUT_CLASSIFICATION	3.2360079922475187E-4	TEST
// recheck condition	WITHOUT_CLASSIFICATION	0.9999889351699359	WITHOUT_CLASSIFICATION	1.1064830064126145E-5	TEST
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999804428159293	WITHOUT_CLASSIFICATION	1.955718407069656E-5	TEST
// Construct key services	WITHOUT_CLASSIFICATION	0.9999714717169034	WITHOUT_CLASSIFICATION	2.852828309659846E-5	TEST
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999958988271075	WITHOUT_CLASSIFICATION	4.101172892427082E-6	TEST
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999954829811696	WITHOUT_CLASSIFICATION	4.5170188304451895E-6	TEST
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999877308460311	WITHOUT_CLASSIFICATION	1.2269153969014334E-5	TEST
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999978560237963	WITHOUT_CLASSIFICATION	2.143976203603019E-6	TEST
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999886500155492	WITHOUT_CLASSIFICATION	1.1349984450962997E-5	TEST
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999133346743734	WITHOUT_CLASSIFICATION	8.666532562660773E-5	TEST
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999911139394513	WITHOUT_CLASSIFICATION	8.88606054881298E-6	TEST
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999600620389508	WITHOUT_CLASSIFICATION	3.9937961049073785E-5	TEST
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999678646290416	WITHOUT_CLASSIFICATION	3.2135370958270276E-5	TEST
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999522099172786	WITHOUT_CLASSIFICATION	4.7790082721313755E-5	TEST
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999788885480597	WITHOUT_CLASSIFICATION	2.1111451940303376E-5	TEST
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999923775038729	WITHOUT_CLASSIFICATION	7.6224961271406976E-6	TEST
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999828523292755	WITHOUT_CLASSIFICATION	1.7147670724524048E-5	TEST
// determine spacing	WITHOUT_CLASSIFICATION	0.9999886582526446	WITHOUT_CLASSIFICATION	1.1341747355407282E-5	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9993675562221702	WITHOUT_CLASSIFICATION	6.324437778297661E-4	TEST
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999391849560613	WITHOUT_CLASSIFICATION	6.081504393865706E-5	TEST
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9998213915396205	WITHOUT_CLASSIFICATION	1.7860846037951036E-4	TEST
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.999506447106174	WITHOUT_CLASSIFICATION	4.935528938260469E-4	TEST
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998848406400631	WITHOUT_CLASSIFICATION	1.1515935993685209E-4	TEST
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9994510848547642	WITHOUT_CLASSIFICATION	5.489151452356833E-4	TEST
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999734299684226	WITHOUT_CLASSIFICATION	2.6570031577303863E-5	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999725177286273	WITHOUT_CLASSIFICATION	2.748227137275888E-5	TEST
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999788356226714	WITHOUT_CLASSIFICATION	2.1164377328620405E-5	TEST
// Default objects	WITHOUT_CLASSIFICATION	0.9999889996681223	WITHOUT_CLASSIFICATION	1.1000331877752595E-5	TEST
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999348814929048	WITHOUT_CLASSIFICATION	6.511850709523208E-5	TEST
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999224113483994	WITHOUT_CLASSIFICATION	7.758865160049816E-5	TEST
// Java support	WITHOUT_CLASSIFICATION	0.9999919229681263	WITHOUT_CLASSIFICATION	8.077031873686144E-6	TEST
// Parser stats	WITHOUT_CLASSIFICATION	0.9999885075754394	WITHOUT_CLASSIFICATION	1.1492424560581484E-5	TEST
// Compilation	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999589118138119	WITHOUT_CLASSIFICATION	4.108818618801296E-5	TEST
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999566652488591	WITHOUT_CLASSIFICATION	4.333475114090596E-5	TEST
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999252847040637	WITHOUT_CLASSIFICATION	7.471529593632233E-5	TEST
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999330479800856	WITHOUT_CLASSIFICATION	6.695201991442934E-5	TEST
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999571827330358	WITHOUT_CLASSIFICATION	4.2817266964088924E-5	TEST
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999832969384986	WITHOUT_CLASSIFICATION	1.670306150142686E-5	TEST
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999559357696437	WITHOUT_CLASSIFICATION	4.406423035636215E-5	TEST
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9997479856446394	WITHOUT_CLASSIFICATION	2.520143553605587E-4	TEST
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9998626400297143	WITHOUT_CLASSIFICATION	1.3735997028564847E-4	TEST
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999972173996438	WITHOUT_CLASSIFICATION	2.7826003562004777E-6	TEST
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999796472382407	WITHOUT_CLASSIFICATION	2.03527617592076E-5	TEST
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// default options	WITHOUT_CLASSIFICATION	0.9999940354666396	WITHOUT_CLASSIFICATION	5.964533360419589E-6	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999577922012789	WITHOUT_CLASSIFICATION	4.220779872101935E-5	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999577922012789	WITHOUT_CLASSIFICATION	4.220779872101935E-5	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9999607201443019	WITHOUT_CLASSIFICATION	3.927985569805627E-5	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9999607201443019	WITHOUT_CLASSIFICATION	3.927985569805627E-5	TEST
// long name option	WITHOUT_CLASSIFICATION	0.9999509541927023	WITHOUT_CLASSIFICATION	4.904580729772132E-5	TEST
// conversion	WITHOUT_CLASSIFICATION	0.9999886587815208	WITHOUT_CLASSIFICATION	1.1341218479303602E-5	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999414788521509	WITHOUT_CLASSIFICATION	5.8521147849191404E-5	TEST
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9998964337690768	WITHOUT_CLASSIFICATION	1.0356623092323681E-4	TEST
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999737455798752	WITHOUT_CLASSIFICATION	2.625442012476255E-5	TEST
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999664199122942	WITHOUT_CLASSIFICATION	3.358008770584246E-5	TEST
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.999969297369491	WITHOUT_CLASSIFICATION	3.070263050905737E-5	TEST
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.999969297369491	WITHOUT_CLASSIFICATION	3.070263050905737E-5	TEST
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.999969297369491	WITHOUT_CLASSIFICATION	3.070263050905737E-5	TEST
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999525697563353	WITHOUT_CLASSIFICATION	4.7430243664720174E-5	TEST
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.999998340467462	WITHOUT_CLASSIFICATION	1.6595325380023497E-6	TEST
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999590085310592	WITHOUT_CLASSIFICATION	4.09914689408644E-5	TEST
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999283437872436	WITHOUT_CLASSIFICATION	7.165621275646698E-5	TEST
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999713334300484	WITHOUT_CLASSIFICATION	2.8666569951579086E-5	TEST
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999590085310592	WITHOUT_CLASSIFICATION	4.09914689408644E-5	TEST
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999876605655924	WITHOUT_CLASSIFICATION	1.2339434407618989E-5	TEST
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.999969297369491	WITHOUT_CLASSIFICATION	3.070263050905737E-5	TEST
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999983612379593	WITHOUT_CLASSIFICATION	1.6387620407598502E-6	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999671266770989	WITHOUT_CLASSIFICATION	3.287332290122912E-5	TEST
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999494236977813	WITHOUT_CLASSIFICATION	5.057630221880133E-5	TEST
// Illegal combination	WITHOUT_CLASSIFICATION	0.999969297369491	WITHOUT_CLASSIFICATION	3.070263050905737E-5	TEST
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999938616029392	WITHOUT_CLASSIFICATION	6.1383970607572656E-6	TEST
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9998196330098343	WITHOUT_CLASSIFICATION	1.8036699016564197E-4	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9998806542886379	WITHOUT_CLASSIFICATION	1.1934571136210613E-4	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999972106065551	WITHOUT_CLASSIFICATION	2.7893934448262784E-6	TEST
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999672999560224	WITHOUT_CLASSIFICATION	3.270004397763575E-5	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999944077540299	WITHOUT_CLASSIFICATION	5.592245970074362E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999944077540299	WITHOUT_CLASSIFICATION	5.592245970074362E-6	TEST
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999160050164887	WITHOUT_CLASSIFICATION	8.399498351132583E-5	TEST
// string given	WITHOUT_CLASSIFICATION	0.9999830545463121	WITHOUT_CLASSIFICATION	1.694545368786374E-5	TEST
// hash given	WITHOUT_CLASSIFICATION	0.9999943231734654	WITHOUT_CLASSIFICATION	5.6768265346467625E-6	TEST
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999979536682367	WITHOUT_CLASSIFICATION	2.0463317632514277E-6	TEST
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9995627463323342	WITHOUT_CLASSIFICATION	4.3725366766567624E-4	TEST
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999590085310592	WITHOUT_CLASSIFICATION	4.09914689408644E-5	TEST
// nothing	WITHOUT_CLASSIFICATION	0.9999672602929228	WITHOUT_CLASSIFICATION	3.2739707077138925E-5	TEST
// nothing	WITHOUT_CLASSIFICATION	0.9999672602929228	WITHOUT_CLASSIFICATION	3.2739707077138925E-5	TEST
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999590085310592	WITHOUT_CLASSIFICATION	4.09914689408644E-5	TEST
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9928464894346739	WITHOUT_CLASSIFICATION	0.007153510565326102	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.999993098558852	WITHOUT_CLASSIFICATION	6.9014411480203325E-6	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.999993098558852	WITHOUT_CLASSIFICATION	6.9014411480203325E-6	TEST
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999690501211318	WITHOUT_CLASSIFICATION	3.094987886825586E-5	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9997672876742097	WITHOUT_CLASSIFICATION	2.3271232579021202E-4	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9997672876742097	WITHOUT_CLASSIFICATION	2.3271232579021202E-4	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999891645830187	WITHOUT_CLASSIFICATION	1.0835416981237095E-5	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999891645830187	WITHOUT_CLASSIFICATION	1.0835416981237095E-5	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999577922012789	WITHOUT_CLASSIFICATION	4.220779872101935E-5	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999577922012789	WITHOUT_CLASSIFICATION	4.220779872101935E-5	TEST
// QTRUE	WITHOUT_CLASSIFICATION	0.9999577922012789	WITHOUT_CLASSIFICATION	4.220779872101935E-5	TEST
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999107443580474	WITHOUT_CLASSIFICATION	8.925564195259752E-5	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999853581305187	WITHOUT_CLASSIFICATION	1.4641869481269645E-5	TEST
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999890393581123	WITHOUT_CLASSIFICATION	1.096064188762441E-5	TEST
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999905476532445	WITHOUT_CLASSIFICATION	9.452346755473632E-6	TEST
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999866874277791	WITHOUT_CLASSIFICATION	1.3312572220845486E-5	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999762055494462	WITHOUT_CLASSIFICATION	2.3794450553729792E-5	TEST
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999977152242299	WITHOUT_CLASSIFICATION	2.2847757701849565E-6	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999762055494462	WITHOUT_CLASSIFICATION	2.3794450553729792E-5	TEST
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9871999561308056	WITHOUT_CLASSIFICATION	0.012800043869194505	TEST
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999809644319579	WITHOUT_CLASSIFICATION	1.9035568042147028E-5	TEST
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999431649858688	WITHOUT_CLASSIFICATION	5.683501413114447E-5	TEST
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.999992932862405	WITHOUT_CLASSIFICATION	7.067137595013119E-6	TEST
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999773683415272	WITHOUT_CLASSIFICATION	2.2631658472914453E-5	TEST
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9994940478349741	WITHOUT_CLASSIFICATION	5.059521650259862E-4	TEST
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.999813841790593	WITHOUT_CLASSIFICATION	1.861582094070913E-4	TEST
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999692979599089	WITHOUT_CLASSIFICATION	3.0702040091084124E-5	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999865012556275	WITHOUT_CLASSIFICATION	1.3498744372590868E-5	TEST
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999743234821579	WITHOUT_CLASSIFICATION	2.5676517842136918E-5	TEST
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.999969297369491	WITHOUT_CLASSIFICATION	3.070263050905737E-5	TEST
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9998173893405348	WITHOUT_CLASSIFICATION	1.8261065946518622E-4	TEST
// file not given	WITHOUT_CLASSIFICATION	0.9999916230466436	WITHOUT_CLASSIFICATION	8.376953356403007E-6	TEST
// string to eval	WITHOUT_CLASSIFICATION	0.999987472432942	WITHOUT_CLASSIFICATION	1.252756705814674E-5	TEST
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999816014777896	WITHOUT_CLASSIFICATION	1.839852221037591E-5	TEST
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.999987419473897	WITHOUT_CLASSIFICATION	1.2580526102973069E-5	TEST
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.999927264801071	WITHOUT_CLASSIFICATION	7.273519892902505E-5	TEST
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999752795087857	WITHOUT_CLASSIFICATION	2.4720491214214226E-5	TEST
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9996897757807839	WITHOUT_CLASSIFICATION	3.1022421921612063E-4	TEST
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9994479739081076	WITHOUT_CLASSIFICATION	5.520260918923638E-4	TEST
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9998527423287001	WITHOUT_CLASSIFICATION	1.4725767129976356E-4	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999243386813236	WITHOUT_CLASSIFICATION	7.566131867650124E-5	TEST
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999653083691958	WITHOUT_CLASSIFICATION	3.4691630804200606E-5	TEST
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999736049100986	WITHOUT_CLASSIFICATION	2.639508990147436E-5	TEST
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999656005702391	WITHOUT_CLASSIFICATION	3.4399429760806525E-5	TEST
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.999916215776196	WITHOUT_CLASSIFICATION	8.378422380400819E-5	TEST
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999262230023163	WITHOUT_CLASSIFICATION	7.377699768374858E-5	TEST
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999560966823039	WITHOUT_CLASSIFICATION	4.390331769608969E-5	TEST
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999838134890444	WITHOUT_CLASSIFICATION	1.618651095560189E-5	TEST
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999463867502081	WITHOUT_CLASSIFICATION	5.361324979200293E-5	TEST
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.999986483881972	WITHOUT_CLASSIFICATION	1.3516118028009516E-5	TEST
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999992257319716	WITHOUT_CLASSIFICATION	7.742680283634178E-7	TEST
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999982943351918	WITHOUT_CLASSIFICATION	1.7056648080927883E-6	TEST
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999589703864453	WITHOUT_CLASSIFICATION	4.102961355464604E-5	TEST
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999921327657721	WITHOUT_CLASSIFICATION	7.8672342279125E-6	TEST
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999937236190056	WITHOUT_CLASSIFICATION	6.276380994451121E-6	TEST
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.999980107881764	WITHOUT_CLASSIFICATION	1.9892118236047565E-5	TEST
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999822872931177	WITHOUT_CLASSIFICATION	1.7712706882389712E-5	TEST
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999970164822652	WITHOUT_CLASSIFICATION	2.983517734734081E-6	TEST
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999801470239865	WITHOUT_CLASSIFICATION	1.9852976013481118E-5	TEST
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999926208006923	WITHOUT_CLASSIFICATION	7.379199307708216E-6	TEST
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999921039878824	WITHOUT_CLASSIFICATION	7.896012117640921E-6	TEST
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999937006603287	WITHOUT_CLASSIFICATION	6.299339671327155E-6	TEST
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999929952616603	WITHOUT_CLASSIFICATION	7.004738339650595E-6	TEST
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999981802953648	WITHOUT_CLASSIFICATION	1.8197046351493233E-6	TEST
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999833878777413	WITHOUT_CLASSIFICATION	1.661212225868052E-5	TEST
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999610594026024	WITHOUT_CLASSIFICATION	3.8940597397550926E-5	TEST
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999878148846066	WITHOUT_CLASSIFICATION	1.2185115393462185E-5	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999758955595314	WITHOUT_CLASSIFICATION	2.4104440468675058E-5	TEST
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999389951740495	WITHOUT_CLASSIFICATION	6.1004825950483105E-5	TEST
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999887704232674	WITHOUT_CLASSIFICATION	1.1229576732596732E-5	TEST
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999667394763561	WITHOUT_CLASSIFICATION	3.326052364394532E-5	TEST
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9993330731659004	WITHOUT_CLASSIFICATION	6.669268340996281E-4	TEST
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999422341068567	WITHOUT_CLASSIFICATION	5.776589314338467E-5	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999973438082178	WITHOUT_CLASSIFICATION	2.6561917822685507E-6	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999973438082178	WITHOUT_CLASSIFICATION	2.6561917822685507E-6	TEST
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999448507715195	WITHOUT_CLASSIFICATION	5.514922848046735E-5	TEST
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999483832320312	WITHOUT_CLASSIFICATION	5.161676796881861E-5	TEST
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999221476687752	WITHOUT_CLASSIFICATION	7.785233122481118E-5	TEST
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999863856438194	WITHOUT_CLASSIFICATION	1.3614356180624927E-5	TEST
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999968283220698	WITHOUT_CLASSIFICATION	3.1716779302096206E-6	TEST
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.99997416388373	WITHOUT_CLASSIFICATION	2.583611627003829E-5	TEST
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.99992927887359	WITHOUT_CLASSIFICATION	7.072112641008368E-5	TEST
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999936118582955	WITHOUT_CLASSIFICATION	6.388141704556336E-6	TEST
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999203165745695	WITHOUT_CLASSIFICATION	7.968342543049948E-5	TEST
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999983539225438	WITHOUT_CLASSIFICATION	1.6460774561994898E-6	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999966433314035	WITHOUT_CLASSIFICATION	3.3566685964323934E-6	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999966433314035	WITHOUT_CLASSIFICATION	3.3566685964323934E-6	TEST
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9998298199817411	WITHOUT_CLASSIFICATION	1.7018001825894674E-4	TEST
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999973784688477	WITHOUT_CLASSIFICATION	2.6215311522170278E-6	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999381302665137	WITHOUT_CLASSIFICATION	6.186973348635684E-5	TEST
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999859413538746	WITHOUT_CLASSIFICATION	1.4058646125344071E-5	TEST
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999385155149788	WITHOUT_CLASSIFICATION	6.148448502119394E-5	TEST
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999924216456488	WITHOUT_CLASSIFICATION	7.578354351073293E-6	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999616294494789	WITHOUT_CLASSIFICATION	3.8370550521193655E-5	TEST
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999362588779437	WITHOUT_CLASSIFICATION	6.374112205632486E-5	TEST
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999946786802368	WITHOUT_CLASSIFICATION	5.321319763119016E-6	TEST
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999600368816423	WITHOUT_CLASSIFICATION	3.9963118357804436E-5	TEST
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999886821989712	WITHOUT_CLASSIFICATION	1.1317801028860501E-5	TEST
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9998547954897299	WITHOUT_CLASSIFICATION	1.4520451027010028E-4	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999885594509463	WITHOUT_CLASSIFICATION	1.144054905363531E-5	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999885594509463	WITHOUT_CLASSIFICATION	1.144054905363531E-5	TEST
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9998703012732009	WITHOUT_CLASSIFICATION	1.2969872679907427E-4	TEST
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999633575162163	WITHOUT_CLASSIFICATION	3.664248378360303E-5	TEST
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999558485590737	WITHOUT_CLASSIFICATION	4.4151440926212904E-5	TEST
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.999933549743968	WITHOUT_CLASSIFICATION	6.64502560319994E-5	TEST
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999427983728836	WITHOUT_CLASSIFICATION	5.7201627116337006E-5	TEST
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999478504135562	WITHOUT_CLASSIFICATION	5.214958644396787E-5	TEST
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.999723170425661	WITHOUT_CLASSIFICATION	2.7682957433902456E-4	TEST
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999707300544284	WITHOUT_CLASSIFICATION	2.9269945571510818E-5	TEST
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999639250793926	WITHOUT_CLASSIFICATION	3.6074920607386656E-5	TEST
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999700843449582	WITHOUT_CLASSIFICATION	2.991565504180206E-5	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999381302665137	WITHOUT_CLASSIFICATION	6.186973348635684E-5	TEST
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9998513527011644	WITHOUT_CLASSIFICATION	1.486472988354631E-4	TEST
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999940174746959	WITHOUT_CLASSIFICATION	5.9825253041325016E-6	TEST
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9998229246996678	WITHOUT_CLASSIFICATION	1.7707530033206746E-4	TEST
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999977042845762	WITHOUT_CLASSIFICATION	2.2957154237001376E-6	TEST
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999698932025693	WITHOUT_CLASSIFICATION	3.010679743069705E-5	TEST
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999989455726198	WITHOUT_CLASSIFICATION	1.0544273802015943E-6	TEST
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999362127370195	WITHOUT_CLASSIFICATION	6.378726298056246E-5	TEST
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.999994831126199	WITHOUT_CLASSIFICATION	5.168873800874322E-6	TEST
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999947477974085	WITHOUT_CLASSIFICATION	5.252202591565739E-6	TEST
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999947878981231	WITHOUT_CLASSIFICATION	5.2121018768561945E-6	TEST
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999968390761874	WITHOUT_CLASSIFICATION	3.160923812579311E-6	TEST
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9998762173884025	WITHOUT_CLASSIFICATION	1.237826115975062E-4	TEST
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999722525740051	WITHOUT_CLASSIFICATION	2.7747425994916195E-5	TEST
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999783714980292	WITHOUT_CLASSIFICATION	2.1628501970775256E-5	TEST
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9998737808111253	WITHOUT_CLASSIFICATION	1.2621918887465954E-4	TEST
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999909930911994	WITHOUT_CLASSIFICATION	9.006908800480132E-6	TEST
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9995985146481385	WITHOUT_CLASSIFICATION	4.014853518614272E-4	TEST
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9998906073538445	WITHOUT_CLASSIFICATION	1.0939264615551748E-4	TEST
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999593620286094	WITHOUT_CLASSIFICATION	4.0637971390656956E-5	TEST
// rename is successful	WITHOUT_CLASSIFICATION	0.9999386628001109	WITHOUT_CLASSIFICATION	6.133719988911965E-5	TEST
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999619932569316	WITHOUT_CLASSIFICATION	3.80067430684798E-5	TEST
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999659454944856	WITHOUT_CLASSIFICATION	3.405450551453544E-5	TEST
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999418842343392	WITHOUT_CLASSIFICATION	5.811576566089831E-5	TEST
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9998196973251017	WITHOUT_CLASSIFICATION	1.803026748983204E-4	TEST
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.999979024116169	WITHOUT_CLASSIFICATION	2.0975883831005387E-5	TEST
// 16 ?	WITHOUT_CLASSIFICATION	0.999968059515643	WITHOUT_CLASSIFICATION	3.194048435691392E-5	TEST
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999287664762889	WITHOUT_CLASSIFICATION	7.123352371110256E-5	TEST
// size + 1;	WITHOUT_CLASSIFICATION	0.9999920199471399	WITHOUT_CLASSIFICATION	7.980052859973948E-6	TEST
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999774672429348	WITHOUT_CLASSIFICATION	2.2532757065176557E-5	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999493748069824	WITHOUT_CLASSIFICATION	5.062519301749191E-5	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999493748069824	WITHOUT_CLASSIFICATION	5.062519301749191E-5	TEST
// put implementation	WITHOUT_CLASSIFICATION	0.9999744697328958	WITHOUT_CLASSIFICATION	2.5530267104199477E-5	TEST
// get implementation	WITHOUT_CLASSIFICATION	0.9999820284986797	WITHOUT_CLASSIFICATION	1.7971501320335475E-5	TEST
// specialized for value	WITHOUT_CLASSIFICATION	0.999963381579857	WITHOUT_CLASSIFICATION	3.6618420143126894E-5	TEST
// delete implementation	WITHOUT_CLASSIFICATION	0.9999762373032378	WITHOUT_CLASSIFICATION	2.3762696762210693E-5	TEST
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999889532707066	WITHOUT_CLASSIFICATION	1.1046729293328414E-5	TEST
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999701327922406	WITHOUT_CLASSIFICATION	2.98672077593372E-5	TEST
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999418592756167	WITHOUT_CLASSIFICATION	5.8140724383301216E-5	TEST
// update the hash value	WITHOUT_CLASSIFICATION	0.9999925888336247	WITHOUT_CLASSIFICATION	7.411166375270264E-6	TEST
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9997560541768408	WITHOUT_CLASSIFICATION	2.4394582315916732E-4	TEST
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999541625738467	WITHOUT_CLASSIFICATION	4.583742615318307E-5	TEST
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999584760509145	WITHOUT_CLASSIFICATION	4.152394908550838E-5	TEST
// remain where we are	WITHOUT_CLASSIFICATION	0.9999644476144859	WITHOUT_CLASSIFICATION	3.5552385514080173E-5	TEST
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9991794760570998	WITHOUT_CLASSIFICATION	8.205239429003006E-4	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999725177286273	WITHOUT_CLASSIFICATION	2.748227137275888E-5	TEST
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999707866603305	WITHOUT_CLASSIFICATION	2.9213339669524386E-5	TEST
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9991084216504877	WITHOUT_CLASSIFICATION	8.915783495122141E-4	TEST
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999997278170583	WITHOUT_CLASSIFICATION	2.72182941745979E-7	TEST
// first try as directory	WITHOUT_CLASSIFICATION	0.9999936137391068	WITHOUT_CLASSIFICATION	6.386260893118108E-6	TEST
// next as regular file	WITHOUT_CLASSIFICATION	0.9999943222773094	WITHOUT_CLASSIFICATION	5.677722690570438E-6	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9998170353101627	WITHOUT_CLASSIFICATION	1.8296468983730363E-4	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// Stream-based	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9997068568082245	WITHOUT_CLASSIFICATION	2.931431917754388E-4	TEST
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999899996625511	WITHOUT_CLASSIFICATION	1.000033744881362E-5	TEST
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999554316288194	WITHOUT_CLASSIFICATION	4.45683711805735E-5	TEST
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9998992989076831	WITHOUT_CLASSIFICATION	1.0070109231687632E-4	TEST
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999868569015805	WITHOUT_CLASSIFICATION	1.3143098419453928E-5	TEST
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999775912792349	WITHOUT_CLASSIFICATION	2.240872076520256E-5	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999000492210578	WITHOUT_CLASSIFICATION	9.995077894227275E-5	TEST
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999897346883777	WITHOUT_CLASSIFICATION	1.0265311622347497E-5	TEST
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999612943619353	WITHOUT_CLASSIFICATION	3.870563806473591E-5	TEST
// re-register	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999396148956609	WITHOUT_CLASSIFICATION	6.0385104339198874E-5	TEST
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.999864714586721	WITHOUT_CLASSIFICATION	1.3528541327899524E-4	TEST
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999882103890557	WITHOUT_CLASSIFICATION	1.1789610944313445E-5	TEST
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9998874347371451	WITHOUT_CLASSIFICATION	1.1256526285491304E-4	TEST
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999176586812424	WITHOUT_CLASSIFICATION	8.234131875758972E-5	TEST
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999943888559276	WITHOUT_CLASSIFICATION	5.611144072393758E-6	TEST
// use original modes	WITHOUT_CLASSIFICATION	0.9999842125565028	WITHOUT_CLASSIFICATION	1.578744349710706E-5	TEST
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999798573689702	WITHOUT_CLASSIFICATION	2.0142631029716403E-5	TEST
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9998884828058765	WITHOUT_CLASSIFICATION	1.1151719412361323E-4	TEST
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.999949382942814	WITHOUT_CLASSIFICATION	5.0617057186043214E-5	TEST
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999776246357599	WITHOUT_CLASSIFICATION	2.2375364240167933E-5	TEST
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9998786588694455	WITHOUT_CLASSIFICATION	1.2134113055450943E-4	TEST
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9998095607502588	WITHOUT_CLASSIFICATION	1.904392497411512E-4	TEST
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9998646263867744	WITHOUT_CLASSIFICATION	1.3537361322551057E-4	TEST
//Everything written	WITHOUT_CLASSIFICATION	0.9998453634785482	WITHOUT_CLASSIFICATION	1.5463652145170797E-4	TEST
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999828359249266	WITHOUT_CLASSIFICATION	1.7164075073339303E-5	TEST
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9998609326801771	WITHOUT_CLASSIFICATION	1.390673198228344E-4	TEST
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.999612920446597	WITHOUT_CLASSIFICATION	3.87079553403045E-4	TEST
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999856084178836	WITHOUT_CLASSIFICATION	1.43915821164442E-5	TEST
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999834016525594	WITHOUT_CLASSIFICATION	1.6598347440656536E-5	TEST
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999166471042298	WITHOUT_CLASSIFICATION	8.335289577018528E-5	TEST
// hmmmm	WITHOUT_CLASSIFICATION	0.9999577922012789	WITHOUT_CLASSIFICATION	4.220779872101935E-5	TEST
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9997845332440847	WITHOUT_CLASSIFICATION	2.154667559153719E-4	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999901748658184	WITHOUT_CLASSIFICATION	9.825134181528237E-6	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999949927205094	WITHOUT_CLASSIFICATION	5.007279490597524E-6	TEST
// Length to read	WITHOUT_CLASSIFICATION	0.999995317198142	WITHOUT_CLASSIFICATION	4.682801857987372E-6	TEST
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999355324886169	WITHOUT_CLASSIFICATION	6.446751138310968E-5	TEST
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999753480236641	WITHOUT_CLASSIFICATION	2.465197633586425E-5	TEST
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999529884438301	WITHOUT_CLASSIFICATION	4.7011556169860045E-5	TEST
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999821525804441	WITHOUT_CLASSIFICATION	1.7847419555913903E-5	TEST
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999820919978283	WITHOUT_CLASSIFICATION	1.7908002171783392E-5	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999840995130469	WITHOUT_CLASSIFICATION	1.5900486953079232E-5	TEST
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999590085310592	WITHOUT_CLASSIFICATION	4.09914689408644E-5	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999840995130469	WITHOUT_CLASSIFICATION	1.5900486953079232E-5	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.999790320926243	WITHOUT_CLASSIFICATION	2.0967907375690295E-4	TEST
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9988368895116119	WITHOUT_CLASSIFICATION	0.0011631104883882287	TEST
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999140797191729	WITHOUT_CLASSIFICATION	8.592028082706584E-5	TEST
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.9971830972869774	WITHOUT_CLASSIFICATION	0.00281690271302267	TEST
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999354491223763	WITHOUT_CLASSIFICATION	6.45508776236984E-5	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999777866461915	WITHOUT_CLASSIFICATION	2.221335380839644E-5	TEST
// write	WITHOUT_CLASSIFICATION	0.9999110008852512	WITHOUT_CLASSIFICATION	8.899911474884569E-5	TEST
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.999852614709408	WITHOUT_CLASSIFICATION	1.4738529059199197E-4	TEST
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999636028816488	WITHOUT_CLASSIFICATION	3.6397118351167656E-5	TEST
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9999700818283217	WITHOUT_CLASSIFICATION	2.9918171678370837E-5	TEST
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9999816130320405	WITHOUT_CLASSIFICATION	1.8386967959600002E-5	TEST
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999888376936857	WITHOUT_CLASSIFICATION	1.1162306314336786E-5	TEST
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9999835371972179	WITHOUT_CLASSIFICATION	1.6462802782104355E-5	TEST
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999968971351929	WITHOUT_CLASSIFICATION	3.102864807137803E-6	TEST
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9997406298104763	WITHOUT_CLASSIFICATION	2.5937018952380315E-4	TEST
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9945749214123687	WITHOUT_CLASSIFICATION	0.005425078587631228	TEST
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999980955435007	WITHOUT_CLASSIFICATION	1.9044564992131298E-6	TEST
// The class of this object	WITHOUT_CLASSIFICATION	0.9999682882694039	WITHOUT_CLASSIFICATION	3.1711730596246724E-5	TEST
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999894611035582	WITHOUT_CLASSIFICATION	1.0538896441687506E-5	TEST
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9992717483712659	WITHOUT_CLASSIFICATION	7.282516287340572E-4	TEST
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9995335507403516	WITHOUT_CLASSIFICATION	4.66449259648442E-4	TEST
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9998906073538445	WITHOUT_CLASSIFICATION	1.0939264615551748E-4	TEST
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.999969297369491	WITHOUT_CLASSIFICATION	3.070263050905737E-5	TEST
// for interface impls	WITHOUT_CLASSIFICATION	0.9999585160154658	WITHOUT_CLASSIFICATION	4.1483984534163426E-5	TEST
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9998955553364013	WITHOUT_CLASSIFICATION	1.0444466359877992E-4	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999957158853864	WITHOUT_CLASSIFICATION	4.284114613701268E-6	TEST
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999966494144343	WITHOUT_CLASSIFICATION	3.350585565598506E-6	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999576420612114	WITHOUT_CLASSIFICATION	4.2357938788595806E-5	TEST
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999969571364647	WITHOUT_CLASSIFICATION	3.0428635353649756E-6	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999493748069824	WITHOUT_CLASSIFICATION	5.062519301749191E-5	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999493748069824	WITHOUT_CLASSIFICATION	5.062519301749191E-5	TEST
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999503270653737	WITHOUT_CLASSIFICATION	4.967293462636238E-5	TEST
// Struct methods	WITHOUT_CLASSIFICATION	0.999990582655938	WITHOUT_CLASSIFICATION	9.417344062047302E-6	TEST
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9994343978420595	WITHOUT_CLASSIFICATION	5.6560215794049E-4	TEST
// define access methods.	WITHOUT_CLASSIFICATION	0.9999835814921489	WITHOUT_CLASSIFICATION	1.641850785112051E-5	TEST
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999124302493895	WITHOUT_CLASSIFICATION	8.756975061061278E-5	TEST
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999649169910506	WITHOUT_CLASSIFICATION	3.508300894935749E-5	TEST
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999810814506583	WITHOUT_CLASSIFICATION	1.8918549341671376E-5	TEST
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.999969297369491	WITHOUT_CLASSIFICATION	3.070263050905737E-5	TEST
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999793561141813	WITHOUT_CLASSIFICATION	2.0643885818666295E-5	TEST
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999505706370655	WITHOUT_CLASSIFICATION	4.942936293454614E-5	TEST
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999917680440569	WITHOUT_CLASSIFICATION	8.231955943151024E-6	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999913847037809	WITHOUT_CLASSIFICATION	8.615296219137977E-6	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999913847037809	WITHOUT_CLASSIFICATION	8.615296219137977E-6	TEST
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999763566319875	WITHOUT_CLASSIFICATION	2.364336801256216E-5	TEST
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999924865538304	WITHOUT_CLASSIFICATION	7.513446169616553E-6	TEST
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.999942844065556	WITHOUT_CLASSIFICATION	5.715593444400212E-5	TEST
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999522919286906	WITHOUT_CLASSIFICATION	4.770807130928348E-5	TEST
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999851785169652	WITHOUT_CLASSIFICATION	1.482148303485683E-5	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999754749686383	WITHOUT_CLASSIFICATION	2.4525031361749918E-5	TEST
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999453559088506	WITHOUT_CLASSIFICATION	5.464409114937282E-5	TEST
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999769905885572	WITHOUT_CLASSIFICATION	2.3009411442846115E-5	TEST
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9997264136401741	WITHOUT_CLASSIFICATION	2.7358635982585003E-4	TEST
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999740469111087	WITHOUT_CLASSIFICATION	2.595308889131766E-5	TEST
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9997571646253859	WITHOUT_CLASSIFICATION	2.4283537461397835E-4	TEST
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999719176118063	WITHOUT_CLASSIFICATION	2.8082388193638784E-5	TEST
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9997623696066563	WITHOUT_CLASSIFICATION	2.3763039334375174E-4	TEST
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9998737649208236	WITHOUT_CLASSIFICATION	1.262350791764251E-4	TEST
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999471453007942	WITHOUT_CLASSIFICATION	5.285469920584236E-5	TEST
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9998464320083268	WITHOUT_CLASSIFICATION	1.5356799167323028E-4	TEST
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999843630819754	WITHOUT_CLASSIFICATION	1.563691802458519E-5	TEST
// reopen a java class	WITHOUT_CLASSIFICATION	0.999988274072027	WITHOUT_CLASSIFICATION	1.1725927973099808E-5	TEST
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.999895824342706	WITHOUT_CLASSIFICATION	1.0417565729404124E-4	TEST
// reopen a java module	WITHOUT_CLASSIFICATION	0.999976477513951	WITHOUT_CLASSIFICATION	2.3522486048911137E-5	TEST
//FIXME warning	WITHOUT_CLASSIFICATION	0.9998564475001592	WITHOUT_CLASSIFICATION	1.4355249984075564E-4	TEST
// FIXME warning	WITHOUT_CLASSIFICATION	0.9999900262242328	WITHOUT_CLASSIFICATION	9.973775767123785E-6	TEST
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9998238868797354	WITHOUT_CLASSIFICATION	1.761131202644885E-4	TEST
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999974064111679	WITHOUT_CLASSIFICATION	2.5935888322599177E-6	TEST
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9998729462136187	WITHOUT_CLASSIFICATION	1.2705378638131894E-4	TEST
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.999997995369075	WITHOUT_CLASSIFICATION	2.004630924953865E-6	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999987077631236	WITHOUT_CLASSIFICATION	1.2922368764236997E-6	TEST
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9998566682498581	WITHOUT_CLASSIFICATION	1.433317501419261E-4	TEST
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999642699952573	WITHOUT_CLASSIFICATION	3.573000474265662E-5	TEST
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999555495879248	WITHOUT_CLASSIFICATION	4.4450412075229445E-5	TEST
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999364888137061	WITHOUT_CLASSIFICATION	6.35111862939354E-5	TEST
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999174539256358	WITHOUT_CLASSIFICATION	8.25460743641714E-5	TEST
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999945366385673	WITHOUT_CLASSIFICATION	5.4633614327127434E-6	TEST
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.999995438858608	WITHOUT_CLASSIFICATION	4.5611413920247465E-6	TEST
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999703841944458	WITHOUT_CLASSIFICATION	2.961580555414322E-5	TEST
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999891167753399	WITHOUT_CLASSIFICATION	1.0883224660214271E-5	TEST
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999509354086472	WITHOUT_CLASSIFICATION	4.906459135288033E-5	TEST
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999509354086472	WITHOUT_CLASSIFICATION	4.906459135288033E-5	TEST
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999783996367876	WITHOUT_CLASSIFICATION	2.1600363212410313E-5	TEST
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999518583135802	WITHOUT_CLASSIFICATION	4.8141686419880475E-5	TEST
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999914067613991	WITHOUT_CLASSIFICATION	8.593238600875635E-6	TEST
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9999838085876037	WITHOUT_CLASSIFICATION	1.6191412396387145E-5	TEST
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9998537987959032	WITHOUT_CLASSIFICATION	1.462012040967786E-4	TEST
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999735551722536	WITHOUT_CLASSIFICATION	2.64448277463757E-5	TEST
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9998498294234414	WITHOUT_CLASSIFICATION	1.5017057655866825E-4	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999888529893503	WITHOUT_CLASSIFICATION	1.1147010649690706E-5	TEST
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999973647505132	WITHOUT_CLASSIFICATION	2.6352494868935104E-6	TEST
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999832855649415	WITHOUT_CLASSIFICATION	1.6714435058405306E-5	TEST
//reopen	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
// ARGF methods	WITHOUT_CLASSIFICATION	0.999990582655938	WITHOUT_CLASSIFICATION	9.417344062047302E-6	TEST
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999647738075311	WITHOUT_CLASSIFICATION	3.522619246888139E-5	TEST
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999707360092526	WITHOUT_CLASSIFICATION	2.9263990747341407E-5	TEST
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999952537172857	WITHOUT_CLASSIFICATION	4.7462827143890045E-6	TEST
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.999999046226355	WITHOUT_CLASSIFICATION	9.537736450095455E-7	TEST
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999735576399796	WITHOUT_CLASSIFICATION	2.644236002044397E-5	TEST
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999939039064137	WITHOUT_CLASSIFICATION	6.096093586307193E-6	TEST
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.999987928239085	WITHOUT_CLASSIFICATION	1.2071760914965964E-5	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999818386474129	WITHOUT_CLASSIFICATION	1.816135258705387E-5	TEST
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999896455646613	WITHOUT_CLASSIFICATION	1.0354435338613004E-5	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999845561091347	WITHOUT_CLASSIFICATION	1.5443890865268566E-5	TEST
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999647201548898	WITHOUT_CLASSIFICATION	3.527984511012704E-5	TEST
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999475352071507	WITHOUT_CLASSIFICATION	5.246479284940724E-5	TEST
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9998768984897	WITHOUT_CLASSIFICATION	1.2310151030005547E-4	TEST
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9998774709496203	WITHOUT_CLASSIFICATION	1.2252905037975442E-4	TEST
// ignore error	WITHOUT_CLASSIFICATION	0.9999940206073882	WITHOUT_CLASSIFICATION	5.979392611820074E-6	TEST
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999549866157774	WITHOUT_CLASSIFICATION	4.501338422260486E-5	TEST
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999518583135802	WITHOUT_CLASSIFICATION	4.8141686419880475E-5	TEST
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9996989551732814	WITHOUT_CLASSIFICATION	3.010448267186088E-4	TEST
// odd	WITHOUT_CLASSIFICATION	0.9999578008961135	WITHOUT_CLASSIFICATION	4.219910388651525E-5	TEST
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999942283316812	WITHOUT_CLASSIFICATION	5.77166831884714E-6	TEST
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999594459722538	WITHOUT_CLASSIFICATION	4.055402774626242E-5	TEST
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999846664785454	WITHOUT_CLASSIFICATION	1.533352145448323E-5	TEST
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999848801299336	WITHOUT_CLASSIFICATION	1.5119870066342221E-5	TEST
/*  0! */	WITHOUT_CLASSIFICATION	0.999895358338074	WITHOUT_CLASSIFICATION	1.0464166192608174E-4	TEST
/*  1! */	WITHOUT_CLASSIFICATION	0.999895358338074	WITHOUT_CLASSIFICATION	1.0464166192608174E-4	TEST
/*  2! */	WITHOUT_CLASSIFICATION	0.999895358338074	WITHOUT_CLASSIFICATION	1.0464166192608174E-4	TEST
/*  3! */	WITHOUT_CLASSIFICATION	0.999895358338074	WITHOUT_CLASSIFICATION	1.0464166192608174E-4	TEST
/*  4! */	WITHOUT_CLASSIFICATION	0.999895358338074	WITHOUT_CLASSIFICATION	1.0464166192608174E-4	TEST
/*  5! */	WITHOUT_CLASSIFICATION	0.999895358338074	WITHOUT_CLASSIFICATION	1.0464166192608174E-4	TEST
/*  6! */	WITHOUT_CLASSIFICATION	0.999895358338074	WITHOUT_CLASSIFICATION	1.0464166192608174E-4	TEST
/*  7! */	WITHOUT_CLASSIFICATION	0.999895358338074	WITHOUT_CLASSIFICATION	1.0464166192608174E-4	TEST
/*  8! */	WITHOUT_CLASSIFICATION	0.999895358338074	WITHOUT_CLASSIFICATION	1.0464166192608174E-4	TEST
/*  9! */	WITHOUT_CLASSIFICATION	0.999895358338074	WITHOUT_CLASSIFICATION	1.0464166192608174E-4	TEST
/* 11! */	WITHOUT_CLASSIFICATION	0.999849619183643	WITHOUT_CLASSIFICATION	1.5038081635710562E-4	TEST
/* 12! */	WITHOUT_CLASSIFICATION	0.999849619183643	WITHOUT_CLASSIFICATION	1.5038081635710562E-4	TEST
/* 13! */	WITHOUT_CLASSIFICATION	0.999849619183643	WITHOUT_CLASSIFICATION	1.5038081635710562E-4	TEST
/* 15! */	WITHOUT_CLASSIFICATION	0.999849619183643	WITHOUT_CLASSIFICATION	1.5038081635710562E-4	TEST
/* 16! */	WITHOUT_CLASSIFICATION	0.999849619183643	WITHOUT_CLASSIFICATION	1.5038081635710562E-4	TEST
/* 17! */	WITHOUT_CLASSIFICATION	0.999849619183643	WITHOUT_CLASSIFICATION	1.5038081635710562E-4	TEST
/* 19! */	WITHOUT_CLASSIFICATION	0.999849619183643	WITHOUT_CLASSIFICATION	1.5038081635710562E-4	TEST
/* 20! */	WITHOUT_CLASSIFICATION	0.999849619183643	WITHOUT_CLASSIFICATION	1.5038081635710562E-4	TEST
/* 21! */	WITHOUT_CLASSIFICATION	0.999849619183643	WITHOUT_CLASSIFICATION	1.5038081635710562E-4	TEST
// Static constants	WITHOUT_CLASSIFICATION	0.9999893215156265	WITHOUT_CLASSIFICATION	1.0678484373494737E-5	TEST
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9999445748877662	WITHOUT_CLASSIFICATION	5.542511223370013E-5	TEST
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999520702781945	WITHOUT_CLASSIFICATION	4.792972180533745E-5	TEST
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999838507412142	WITHOUT_CLASSIFICATION	1.6149258785773644E-5	TEST
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.999988140822643	WITHOUT_CLASSIFICATION	1.1859177357098142E-5	TEST
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999947864837614	WITHOUT_CLASSIFICATION	5.213516238654481E-6	TEST
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999983255958226	WITHOUT_CLASSIFICATION	1.674404177531073E-6	TEST
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9999951662918973	WITHOUT_CLASSIFICATION	4.833708102639058E-6	TEST
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999980492938848	WITHOUT_CLASSIFICATION	1.9507061152202862E-6	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.999941806321123	WITHOUT_CLASSIFICATION	5.819367887698401E-5	TEST
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9672028050207903	WITHOUT_CLASSIFICATION	0.03279719497920974	TEST
// integer division	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999945195151607	WITHOUT_CLASSIFICATION	5.480484839255591E-6	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999692992431596	WITHOUT_CLASSIFICATION	3.070075684040828E-5	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999692992431596	WITHOUT_CLASSIFICATION	3.070075684040828E-5	TEST
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999947864837614	WITHOUT_CLASSIFICATION	5.213516238654481E-6	TEST
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9998729652115244	WITHOUT_CLASSIFICATION	1.2703478847563818E-4	TEST
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999996201940636	WITHOUT_CLASSIFICATION	3.7980593644912115E-7	TEST
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999679839387982	WITHOUT_CLASSIFICATION	3.2016061201818807E-5	TEST
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999957435095744	WITHOUT_CLASSIFICATION	4.256490425516351E-6	TEST
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9996911419451322	WITHOUT_CLASSIFICATION	3.088580548677964E-4	TEST
// sign	WITHOUT_CLASSIFICATION	0.9999578273529945	WITHOUT_CLASSIFICATION	4.217264700537769E-5	TEST
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999881667606257	WITHOUT_CLASSIFICATION	1.1833239374246123E-5	TEST
// normalize the value	WITHOUT_CLASSIFICATION	0.9999915478683524	WITHOUT_CLASSIFICATION	8.452131647665352E-6	TEST
// base	WITHOUT_CLASSIFICATION	0.9999552337705421	WITHOUT_CLASSIFICATION	4.4766229457926195E-5	TEST
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9996528037225069	WITHOUT_CLASSIFICATION	3.4719627749313673E-4	TEST
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999752915394663	WITHOUT_CLASSIFICATION	2.470846053371768E-5	TEST
// eh?!	WITHOUT_CLASSIFICATION	0.9999577922012789	WITHOUT_CLASSIFICATION	4.220779872101935E-5	TEST
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999443736835643	WITHOUT_CLASSIFICATION	5.562631643578682E-5	TEST
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999890171390142	WITHOUT_CLASSIFICATION	1.0982860985845135E-5	TEST
// the requested precision	WITHOUT_CLASSIFICATION	0.9999901928641921	WITHOUT_CLASSIFICATION	9.807135807988202E-6	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.9999942897702655	WITHOUT_CLASSIFICATION	5.71022973456516E-6	TEST
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999751754144666	WITHOUT_CLASSIFICATION	2.482458553340269E-5	TEST
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999673967868777	WITHOUT_CLASSIFICATION	3.260321312214318E-5	TEST
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9997651464275032	WITHOUT_CLASSIFICATION	2.3485357249677935E-4	TEST
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999873054881613	WITHOUT_CLASSIFICATION	1.2694511838733317E-5	TEST
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999913430752987	WITHOUT_CLASSIFICATION	8.656924701329224E-6	TEST
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999856020615131	WITHOUT_CLASSIFICATION	1.4397938487021072E-5	TEST
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999888241693174	WITHOUT_CLASSIFICATION	1.1175830682480152E-5	TEST
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.999949656200356	WITHOUT_CLASSIFICATION	5.034379964395162E-5	TEST
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999845178329402	WITHOUT_CLASSIFICATION	1.548216705986791E-5	TEST
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999783975561719	WITHOUT_CLASSIFICATION	2.1602443828076624E-5	TEST
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999449204161163	WITHOUT_CLASSIFICATION	5.507958388381825E-5	TEST
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999774833048344	WITHOUT_CLASSIFICATION	2.2516695165704175E-5	TEST
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999813197594334	WITHOUT_CLASSIFICATION	1.8680240566627414E-5	TEST
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999775832121897	WITHOUT_CLASSIFICATION	2.2416787810316915E-5	TEST
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999779403830733	WITHOUT_CLASSIFICATION	2.205961692660227E-5	TEST
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.999980763667156	WITHOUT_CLASSIFICATION	1.9236332843928336E-5	TEST
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999414763498443	WITHOUT_CLASSIFICATION	5.852365015555536E-5	TEST
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999840995130469	WITHOUT_CLASSIFICATION	1.5900486953079232E-5	TEST
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999935250967498	WITHOUT_CLASSIFICATION	6.4749032503156834E-6	TEST
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999916183140256	WITHOUT_CLASSIFICATION	8.381685974358544E-6	TEST
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9998654672172124	WITHOUT_CLASSIFICATION	1.345327827876178E-4	TEST
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999971974817357	WITHOUT_CLASSIFICATION	2.80251826437013E-6	TEST
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999893545830805	WITHOUT_CLASSIFICATION	1.0645416919434425E-5	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999216819683072	WITHOUT_CLASSIFICATION	7.831803169276574E-5	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999216819683072	WITHOUT_CLASSIFICATION	7.831803169276574E-5	TEST
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999624583950756	WITHOUT_CLASSIFICATION	3.754160492430873E-5	TEST
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999564102788735	WITHOUT_CLASSIFICATION	4.358972112648876E-5	TEST
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999964010683418	WITHOUT_CLASSIFICATION	3.5989316581909346E-6	TEST
//consume the file name	WITHOUT_CLASSIFICATION	0.9997740779615347	WITHOUT_CLASSIFICATION	2.2592203846529717E-4	TEST
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9987119409476038	WITHOUT_CLASSIFICATION	0.0012880590523961764	TEST
// try cwd first	WITHOUT_CLASSIFICATION	0.9999908481363594	WITHOUT_CLASSIFICATION	9.151863640627606E-6	TEST
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999505980187012	WITHOUT_CLASSIFICATION	4.940198129877622E-5	TEST
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9975709870773595	WITHOUT_CLASSIFICATION	0.0024290129226405338	TEST
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999741287028188	WITHOUT_CLASSIFICATION	2.5871297181220567E-5	TEST
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999741287028188	WITHOUT_CLASSIFICATION	2.5871297181220567E-5	TEST
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999741287028188	WITHOUT_CLASSIFICATION	2.5871297181220567E-5	TEST
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999267411605967	WITHOUT_CLASSIFICATION	7.325883940329786E-5	TEST
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9994510848547642	WITHOUT_CLASSIFICATION	5.489151452356833E-4	TEST
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999707340235491	WITHOUT_CLASSIFICATION	2.926597645084101E-5	TEST
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9945749214123687	WITHOUT_CLASSIFICATION	0.005425078587631228	TEST
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9999303936072869	WITHOUT_CLASSIFICATION	6.96063927131847E-5	TEST
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9994063722254827	WITHOUT_CLASSIFICATION	5.936277745173381E-4	TEST
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999920954752164	WITHOUT_CLASSIFICATION	7.904524783539897E-6	TEST
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999948579786648	WITHOUT_CLASSIFICATION	5.142021335214837E-6	TEST
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9994510848547642	WITHOUT_CLASSIFICATION	5.489151452356833E-4	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999743061448951	WITHOUT_CLASSIFICATION	2.5693855104856812E-5	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999743061448951	WITHOUT_CLASSIFICATION	2.5693855104856812E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999399889410218	WITHOUT_CLASSIFICATION	6.001105897832141E-5	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999840348232624	WITHOUT_CLASSIFICATION	1.596517673762709E-5	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9998562212527162	WITHOUT_CLASSIFICATION	1.4377874728371487E-4	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999683260493767	WITHOUT_CLASSIFICATION	3.167395062331118E-5	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999853581305187	WITHOUT_CLASSIFICATION	1.4641869481269645E-5	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.999986066816039	WITHOUT_CLASSIFICATION	1.3933183961061608E-5	TEST
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.999073793738992	WITHOUT_CLASSIFICATION	9.26206261008104E-4	TEST
// Profile	WITHOUT_CLASSIFICATION	0.9999578150830464	WITHOUT_CLASSIFICATION	4.218491695360428E-5	TEST
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9997055908089211	WITHOUT_CLASSIFICATION	2.9440919107888506E-4	TEST
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999968144856959	WITHOUT_CLASSIFICATION	3.1855143041651126E-6	TEST
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9998934702745389	WITHOUT_CLASSIFICATION	1.0652972546104717E-4	TEST
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.999992093833744	WITHOUT_CLASSIFICATION	7.906166256039951E-6	TEST
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9996766028329332	WITHOUT_CLASSIFICATION	3.2339716706677557E-4	TEST
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9991806991391501	WITHOUT_CLASSIFICATION	8.193008608499597E-4	TEST
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9997780597802838	WITHOUT_CLASSIFICATION	2.2194021971619696E-4	TEST
// reset the state	WITHOUT_CLASSIFICATION	0.9999968771991796	WITHOUT_CLASSIFICATION	3.1228008203889965E-6	TEST
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9994926637095599	WITHOUT_CLASSIFICATION	5.073362904399756E-4	TEST
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
//str is frozen	WITHOUT_CLASSIFICATION	0.999665347722303	WITHOUT_CLASSIFICATION	3.346522776970482E-4	TEST
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999318039410434	WITHOUT_CLASSIFICATION	6.81960589566E-5	TEST
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.999550564549117	WITHOUT_CLASSIFICATION	4.4943545088309576E-4	TEST
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999949252533857	WITHOUT_CLASSIFICATION	5.0747466142314295E-6	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999957158853864	WITHOUT_CLASSIFICATION	4.284114613701268E-6	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999754749686383	WITHOUT_CLASSIFICATION	2.4525031361749918E-5	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999959614660413	WITHOUT_CLASSIFICATION	4.0385339587049975E-6	TEST
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999863722377234	WITHOUT_CLASSIFICATION	1.3627762276683263E-5	TEST
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999967314495177	WITHOUT_CLASSIFICATION	3.268550482267245E-6	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9998235964241305	WITHOUT_CLASSIFICATION	1.7640357586933586E-4	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.999983612798335	WITHOUT_CLASSIFICATION	1.638720166493306E-5	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.999983612798335	WITHOUT_CLASSIFICATION	1.638720166493306E-5	TEST
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999964575424195	WITHOUT_CLASSIFICATION	3.5424575804861662E-6	TEST
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999625755453548	WITHOUT_CLASSIFICATION	3.742445464523025E-5	TEST
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9998783132245451	WITHOUT_CLASSIFICATION	1.2168677545491035E-4	TEST
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999783531042723	WITHOUT_CLASSIFICATION	2.1646895727756574E-5	TEST
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999957491129968	WITHOUT_CLASSIFICATION	4.250887003270086E-6	TEST
// static initializing method	WITHOUT_CLASSIFICATION	0.9999791646981508	WITHOUT_CLASSIFICATION	2.0835301849114276E-5	TEST
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9998201431356601	WITHOUT_CLASSIFICATION	1.7985686433988782E-4	TEST
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.999993570014519	WITHOUT_CLASSIFICATION	6.429985480860308E-6	TEST
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999167841695067	WITHOUT_CLASSIFICATION	8.321583049334279E-5	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999675139674807	WITHOUT_CLASSIFICATION	3.248603251929398E-5	TEST
// self // method name	WITHOUT_CLASSIFICATION	0.9999483075109297	WITHOUT_CLASSIFICATION	5.16924890704036E-5	TEST
// the default allocator	WITHOUT_CLASSIFICATION	0.9999945765164988	WITHOUT_CLASSIFICATION	5.42348350121155E-6	TEST
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999838862413998	WITHOUT_CLASSIFICATION	1.611375860026999E-5	TEST
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999721325809869	WITHOUT_CLASSIFICATION	2.7867419013123707E-5	TEST
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.99997590149462	WITHOUT_CLASSIFICATION	2.4098505379992597E-5	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999414788521509	WITHOUT_CLASSIFICATION	5.8521147849191404E-5	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999206803596107	WITHOUT_CLASSIFICATION	7.93196403893546E-5	TEST
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999948699908009	WITHOUT_CLASSIFICATION	5.130009199005757E-6	TEST
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999968043254334	WITHOUT_CLASSIFICATION	3.195674566656261E-6	TEST
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9998235845986199	WITHOUT_CLASSIFICATION	1.764154013802323E-4	TEST
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.999906643275214	WITHOUT_CLASSIFICATION	9.335672478605362E-5	TEST
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999715939941982	WITHOUT_CLASSIFICATION	2.8406005801693746E-5	TEST
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.999969297369491	WITHOUT_CLASSIFICATION	3.070263050905737E-5	TEST
// a gotcha	WITHOUT_CLASSIFICATION	0.9999910974771707	WITHOUT_CLASSIFICATION	8.902522829246734E-6	TEST
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999984666234415	WITHOUT_CLASSIFICATION	1.5333765584663207E-6	TEST
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999740785473747	WITHOUT_CLASSIFICATION	2.59214526252365E-5	TEST
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999838862413998	WITHOUT_CLASSIFICATION	1.611375860026999E-5	TEST
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999632060400923	WITHOUT_CLASSIFICATION	3.679395990769675E-5	TEST
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.99997590149462	WITHOUT_CLASSIFICATION	2.4098505379992597E-5	TEST
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999569311222051	WITHOUT_CLASSIFICATION	4.306887779483805E-5	TEST
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999833612097349	WITHOUT_CLASSIFICATION	1.6638790265166053E-5	TEST
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.999969297369491	WITHOUT_CLASSIFICATION	3.070263050905737E-5	TEST
// provider is not available	WITHOUT_CLASSIFICATION	0.9998813485719297	WITHOUT_CLASSIFICATION	1.1865142807037959E-4	TEST
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999765645511646	WITHOUT_CLASSIFICATION	2.3435448835446194E-5	TEST
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.999982875985039	WITHOUT_CLASSIFICATION	1.7124014961071215E-5	TEST
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999364004063396	WITHOUT_CLASSIFICATION	6.359959366040386E-5	TEST
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999747801697328	WITHOUT_CLASSIFICATION	2.5219830267125905E-5	TEST
// we only add live threads	WITHOUT_CLASSIFICATION	0.9997240739702277	WITHOUT_CLASSIFICATION	2.7592602977240043E-4	TEST
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999967261424788	WITHOUT_CLASSIFICATION	3.2738575212149842E-6	TEST
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999985564724013	WITHOUT_CLASSIFICATION	1.443527598682232E-6	TEST
// JRubyService	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// while	WITHOUT_CLASSIFICATION	0.9999604455072053	WITHOUT_CLASSIFICATION	3.955449279461175E-5	TEST
/* \OOO */	WITHOUT_CLASSIFICATION	0.999849619183643	WITHOUT_CLASSIFICATION	1.5038081635710562E-4	TEST
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999982205013493	WITHOUT_CLASSIFICATION	1.7794986506372598E-6	TEST
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999727883900859	WITHOUT_CLASSIFICATION	2.7211609914158428E-5	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999883669420184	WITHOUT_CLASSIFICATION	1.163305798143244E-5	TEST
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999560427403997	WITHOUT_CLASSIFICATION	4.395725960026982E-5	TEST
// silent ?	WITHOUT_CLASSIFICATION	0.9999913879409009	WITHOUT_CLASSIFICATION	8.612059099128206E-6	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.999849619183643	WITHOUT_CLASSIFICATION	1.5038081635710562E-4	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9998906073538445	WITHOUT_CLASSIFICATION	1.0939264615551748E-4	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999590085310592	WITHOUT_CLASSIFICATION	4.09914689408644E-5	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999590085310592	WITHOUT_CLASSIFICATION	4.09914689408644E-5	TEST
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9998936546610848	WITHOUT_CLASSIFICATION	1.0634533891512169E-4	TEST
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999674440212976	WITHOUT_CLASSIFICATION	3.255597870243544E-5	TEST
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999590085310592	WITHOUT_CLASSIFICATION	4.09914689408644E-5	TEST
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999309031199869	WITHOUT_CLASSIFICATION	6.909688001304828E-5	TEST
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999590085310592	WITHOUT_CLASSIFICATION	4.09914689408644E-5	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.999849619183643	WITHOUT_CLASSIFICATION	1.5038081635710562E-4	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999590085310592	WITHOUT_CLASSIFICATION	4.09914689408644E-5	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9998906073538445	WITHOUT_CLASSIFICATION	1.0939264615551748E-4	TEST
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9998196330098343	WITHOUT_CLASSIFICATION	1.8036699016564197E-4	TEST
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999590085310592	WITHOUT_CLASSIFICATION	4.09914689408644E-5	TEST
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999590085310592	WITHOUT_CLASSIFICATION	4.09914689408644E-5	TEST
// inner switch	WITHOUT_CLASSIFICATION	0.9999907944267813	WITHOUT_CLASSIFICATION	9.20557321878398E-6	TEST
// newInstance here	WITHOUT_CLASSIFICATION	0.9999867865167839	WITHOUT_CLASSIFICATION	1.321348321620698E-5	TEST
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.999969297369491	WITHOUT_CLASSIFICATION	3.070263050905737E-5	TEST
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.999969297369491	WITHOUT_CLASSIFICATION	3.070263050905737E-5	TEST
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999767510003621	WITHOUT_CLASSIFICATION	2.3248999637801943E-5	TEST
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// option_to_str	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999951967016305	WITHOUT_CLASSIFICATION	4.8032983694902785E-6	TEST
// args should be before block	WITHOUT_CLASSIFICATION	0.9999225103733116	WITHOUT_CLASSIFICATION	7.748962668839289E-5	TEST
// args should be at end	WITHOUT_CLASSIFICATION	0.9998817411034329	WITHOUT_CLASSIFICATION	1.182588965671346E-4	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9997460076439703	WITHOUT_CLASSIFICATION	2.5399235602977866E-4	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9997460076439703	WITHOUT_CLASSIFICATION	2.5399235602977866E-4	TEST
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999711438558077	WITHOUT_CLASSIFICATION	2.8856144192347633E-5	TEST
// start a new populator	WITHOUT_CLASSIFICATION	0.9999660467548316	WITHOUT_CLASSIFICATION	3.395324516836122E-5	TEST
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.99996622589039	WITHOUT_CLASSIFICATION	3.377410961010227E-5	TEST
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9988151603323235	WITHOUT_CLASSIFICATION	0.0011848396676764654	TEST
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999713941575419	WITHOUT_CLASSIFICATION	2.8605842458171303E-5	TEST
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9994283345356736	WITHOUT_CLASSIFICATION	5.716654643263739E-4	TEST
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999786274692785	WITHOUT_CLASSIFICATION	2.1372530721500413E-5	TEST
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999503607024429	WITHOUT_CLASSIFICATION	4.963929755716797E-5	TEST
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999711605006636	WITHOUT_CLASSIFICATION	2.8839499336534485E-5	TEST
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999923020758001	WITHOUT_CLASSIFICATION	7.697924199889777E-6	TEST
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999819982823319	WITHOUT_CLASSIFICATION	1.8001717667993144E-5	TEST
//                }	WITHOUT_CLASSIFICATION	0.9999920217618741	WITHOUT_CLASSIFICATION	7.978238125970843E-6	TEST
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999474345287247	WITHOUT_CLASSIFICATION	5.2565471275184156E-5	TEST
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9982461428533173	WITHOUT_CLASSIFICATION	0.0017538571466827958	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999465451877492	WITHOUT_CLASSIFICATION	5.345481225074443E-5	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999820681423802	WITHOUT_CLASSIFICATION	1.793185761986541E-5	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999957207473302	WITHOUT_CLASSIFICATION	4.279252669830361E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999963018052117	WITHOUT_CLASSIFICATION	3.6981947883799775E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999963018052117	WITHOUT_CLASSIFICATION	3.6981947883799775E-6	TEST
// colon3	WITHOUT_CLASSIFICATION	0.9999577922012789	WITHOUT_CLASSIFICATION	4.220779872101935E-5	TEST
// Colon3	WITHOUT_CLASSIFICATION	0.9999577922012789	WITHOUT_CLASSIFICATION	4.220779872101935E-5	TEST
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999699040754518	WITHOUT_CLASSIFICATION	3.0095924548141966E-5	TEST
// For b.foo	WITHOUT_CLASSIFICATION	0.9999815999936191	WITHOUT_CLASSIFICATION	1.8400006380910957E-5	TEST
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999739536432841	WITHOUT_CLASSIFICATION	2.6046356715866407E-5	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999963018052117	WITHOUT_CLASSIFICATION	3.6981947883799775E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999963018052117	WITHOUT_CLASSIFICATION	3.6981947883799775E-6	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999565452869791	WITHOUT_CLASSIFICATION	4.345471302097103E-5	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999565452869791	WITHOUT_CLASSIFICATION	4.345471302097103E-5	TEST
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9996293105592118	WITHOUT_CLASSIFICATION	3.706894407882342E-4	TEST
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999815999936191	WITHOUT_CLASSIFICATION	1.8400006380910957E-5	TEST
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999923135657997	WITHOUT_CLASSIFICATION	7.686434200331792E-6	TEST
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999728515032762	WITHOUT_CLASSIFICATION	2.7148496723798613E-5	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999834669945392	WITHOUT_CLASSIFICATION	1.653300546081418E-5	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999834669945392	WITHOUT_CLASSIFICATION	1.653300546081418E-5	TEST
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999828707188716	WITHOUT_CLASSIFICATION	1.712928112845939E-5	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999804165630289	WITHOUT_CLASSIFICATION	1.9583436971094728E-4	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998681064653718	WITHOUT_CLASSIFICATION	1.318935346281803E-4	TEST
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9998674469936596	WITHOUT_CLASSIFICATION	1.3255300634038963E-4	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999565452869791	WITHOUT_CLASSIFICATION	4.345471302097103E-5	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999795568524404	WITHOUT_CLASSIFICATION	2.0443147559479423E-5	TEST
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9998746142126766	WITHOUT_CLASSIFICATION	1.253857873233262E-4	TEST
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999872511614476	WITHOUT_CLASSIFICATION	1.2748838552422851E-5	TEST
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999749581102583	WITHOUT_CLASSIFICATION	2.5041889741703717E-5	TEST
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999931068506003	WITHOUT_CLASSIFICATION	6.8931493997472654E-6	TEST
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9998691652827209	WITHOUT_CLASSIFICATION	1.3083471727910834E-4	TEST
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999647738075311	WITHOUT_CLASSIFICATION	3.522619246888139E-5	TEST
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999717354710771	WITHOUT_CLASSIFICATION	2.8264528922871344E-5	TEST
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999907168169331	WITHOUT_CLASSIFICATION	9.283183066966252E-6	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999820681423802	WITHOUT_CLASSIFICATION	1.793185761986541E-5	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999963018052117	WITHOUT_CLASSIFICATION	3.6981947883799775E-6	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999565452869791	WITHOUT_CLASSIFICATION	4.345471302097103E-5	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999795568524404	WITHOUT_CLASSIFICATION	2.0443147559479423E-5	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999928418931123	WITHOUT_CLASSIFICATION	7.15810688764855E-6	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999928418931123	WITHOUT_CLASSIFICATION	7.15810688764855E-6	TEST
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999894820351873	WITHOUT_CLASSIFICATION	1.051796481262277E-5	TEST
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999898687242149	WITHOUT_CLASSIFICATION	1.0131275785063477E-5	TEST
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999858835237583	WITHOUT_CLASSIFICATION	1.4116476241815007E-5	TEST
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999986595410848	WITHOUT_CLASSIFICATION	1.3404589152137797E-6	TEST
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999560779576884	WITHOUT_CLASSIFICATION	4.392204231163668E-5	TEST
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999981459218548	WITHOUT_CLASSIFICATION	1.8540781451180099E-6	TEST
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9997974484811268	WITHOUT_CLASSIFICATION	2.0255151887327324E-4	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9998147123849684	WITHOUT_CLASSIFICATION	1.8528761503156093E-4	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999986430957186	WITHOUT_CLASSIFICATION	1.3569042814099252E-6	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999659247205767	WITHOUT_CLASSIFICATION	3.4075279423376596E-5	TEST
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999314525052047	WITHOUT_CLASSIFICATION	6.854749479540012E-5	TEST
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999986565584799	WITHOUT_CLASSIFICATION	1.3434415201042416E-6	TEST
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999817244718031	WITHOUT_CLASSIFICATION	1.8275528196906945E-5	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999957207473302	WITHOUT_CLASSIFICATION	4.279252669830361E-6	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999565452869791	WITHOUT_CLASSIFICATION	4.345471302097103E-5	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999804165630289	WITHOUT_CLASSIFICATION	1.9583436971094728E-4	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998681064653718	WITHOUT_CLASSIFICATION	1.318935346281803E-4	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998681064653718	WITHOUT_CLASSIFICATION	1.318935346281803E-4	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999565452869791	WITHOUT_CLASSIFICATION	4.345471302097103E-5	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999795568524404	WITHOUT_CLASSIFICATION	2.0443147559479423E-5	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999795568524404	WITHOUT_CLASSIFICATION	2.0443147559479423E-5	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999928418931123	WITHOUT_CLASSIFICATION	7.15810688764855E-6	TEST
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999912049708909	WITHOUT_CLASSIFICATION	8.795029109099428E-6	TEST
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9993270431384136	WITHOUT_CLASSIFICATION	6.729568615862999E-4	TEST
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999988152654766	WITHOUT_CLASSIFICATION	1.1847345234086685E-6	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9996625109422734	WITHOUT_CLASSIFICATION	3.3748905772658854E-4	TEST
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999047475501319	WITHOUT_CLASSIFICATION	9.525244986806546E-5	TEST
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9996327516673137	WITHOUT_CLASSIFICATION	3.672483326864106E-4	TEST
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999190060789972	WITHOUT_CLASSIFICATION	8.099392100281637E-5	TEST
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999859008893708	WITHOUT_CLASSIFICATION	1.4099110629276919E-5	TEST
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999737125725642	WITHOUT_CLASSIFICATION	2.6287427435796448E-5	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999804165630289	WITHOUT_CLASSIFICATION	1.9583436971094728E-4	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998681064653718	WITHOUT_CLASSIFICATION	1.318935346281803E-4	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998681064653718	WITHOUT_CLASSIFICATION	1.318935346281803E-4	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999565452869791	WITHOUT_CLASSIFICATION	4.345471302097103E-5	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9998147123849684	WITHOUT_CLASSIFICATION	1.8528761503156093E-4	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999659247205767	WITHOUT_CLASSIFICATION	3.4075279423376596E-5	TEST
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9986761417171809	WITHOUT_CLASSIFICATION	0.0013238582828190852	TEST
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999937946788081	WITHOUT_CLASSIFICATION	6.2053211918763E-6	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999815999936191	WITHOUT_CLASSIFICATION	1.8400006380910957E-5	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999815999936191	WITHOUT_CLASSIFICATION	1.8400006380910957E-5	TEST
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.999969297369491	WITHOUT_CLASSIFICATION	3.070263050905737E-5	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999787910600066	WITHOUT_CLASSIFICATION	2.1208939993375903E-5	TEST
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9998804139777767	WITHOUT_CLASSIFICATION	1.195860222233132E-4	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.999971663248902	WITHOUT_CLASSIFICATION	2.8336751098015727E-5	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.9999948995896893	WITHOUT_CLASSIFICATION	5.100410310690514E-6	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.9999948995896893	WITHOUT_CLASSIFICATION	5.100410310690514E-6	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999716423534293	WITHOUT_CLASSIFICATION	2.8357646570757417E-5	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999716423534293	WITHOUT_CLASSIFICATION	2.8357646570757417E-5	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999828461534918	WITHOUT_CLASSIFICATION	1.7153846508257066E-5	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999828461534918	WITHOUT_CLASSIFICATION	1.7153846508257066E-5	TEST
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999705638030225	WITHOUT_CLASSIFICATION	2.9436196977523977E-5	TEST
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999710013263717	WITHOUT_CLASSIFICATION	2.8998673628323545E-5	TEST
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.999729464337246	WITHOUT_CLASSIFICATION	2.705356627539556E-4	TEST
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999697454988922	WITHOUT_CLASSIFICATION	3.0254501107731443E-5	TEST
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999988844005895	WITHOUT_CLASSIFICATION	1.1155994105149473E-6	TEST
// pragmas	WITHOUT_CLASSIFICATION	0.9999577922012789	WITHOUT_CLASSIFICATION	4.220779872101935E-5	TEST
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999677366019294	WITHOUT_CLASSIFICATION	3.226339807055711E-5	TEST
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999927247842539	WITHOUT_CLASSIFICATION	7.2752157460992456E-6	TEST
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9998118628025492	WITHOUT_CLASSIFICATION	1.8813719745090635E-4	TEST
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999343541131815	WITHOUT_CLASSIFICATION	6.5645886818454E-5	TEST
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999956299638985	WITHOUT_CLASSIFICATION	4.3700361015772894E-6	TEST
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999609008462158	WITHOUT_CLASSIFICATION	3.909915378420872E-5	TEST
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999514502599623	WITHOUT_CLASSIFICATION	4.854974003763184E-5	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999791777544194	WITHOUT_CLASSIFICATION	2.0822245580576513E-5	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999791777544194	WITHOUT_CLASSIFICATION	2.0822245580576513E-5	TEST
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999250074156566	WITHOUT_CLASSIFICATION	7.499258434340983E-5	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.999986066816039	WITHOUT_CLASSIFICATION	1.3933183961061608E-5	TEST
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.999798242356136	WITHOUT_CLASSIFICATION	2.0175764386403953E-4	TEST
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999910072016588	WITHOUT_CLASSIFICATION	8.992798341185E-6	TEST
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999520819835926	WITHOUT_CLASSIFICATION	4.79180164073631E-5	TEST
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999655882008001	WITHOUT_CLASSIFICATION	3.441179919998157E-5	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999816344762377	WITHOUT_CLASSIFICATION	1.8365523762379785E-5	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999825319877663	WITHOUT_CLASSIFICATION	1.746801223363915E-5	TEST
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999986963024329	WITHOUT_CLASSIFICATION	1.3036975671078068E-6	TEST
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999833571450454	WITHOUT_CLASSIFICATION	1.6642854954611997E-5	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999707754390144	WITHOUT_CLASSIFICATION	2.9224560985719097E-5	TEST
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9993592585933533	WITHOUT_CLASSIFICATION	6.407414066467032E-4	TEST
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9997715791080449	WITHOUT_CLASSIFICATION	2.2842089195505486E-4	TEST
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9998559688189496	WITHOUT_CLASSIFICATION	1.4403118105049616E-4	TEST
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9996596017139217	WITHOUT_CLASSIFICATION	3.4039828607835247E-4	TEST
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9997995869466546	WITHOUT_CLASSIFICATION	2.0041305334532686E-4	TEST
// can't do it	WITHOUT_CLASSIFICATION	0.999956762244359	WITHOUT_CLASSIFICATION	4.323775564088179E-5	TEST
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999745917471592	WITHOUT_CLASSIFICATION	2.5408252840738873E-5	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.99998035668951	WITHOUT_CLASSIFICATION	1.9643310490018944E-5	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.99998035668951	WITHOUT_CLASSIFICATION	1.9643310490018944E-5	TEST
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9998599026079666	WITHOUT_CLASSIFICATION	1.4009739203341604E-4	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9992717483712659	WITHOUT_CLASSIFICATION	7.282516287340572E-4	TEST
//[]	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
//[]	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999647738075311	WITHOUT_CLASSIFICATION	3.522619246888139E-5	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9992717483712659	WITHOUT_CLASSIFICATION	7.282516287340572E-4	TEST
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9992717483712659	WITHOUT_CLASSIFICATION	7.282516287340572E-4	TEST
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.999983838920881	WITHOUT_CLASSIFICATION	1.61610791189314E-5	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999930281519629	WITHOUT_CLASSIFICATION	6.971848037129287E-6	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999930281519629	WITHOUT_CLASSIFICATION	6.971848037129287E-6	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999934072265145	WITHOUT_CLASSIFICATION	6.5927734854463254E-6	TEST
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999791158930569	WITHOUT_CLASSIFICATION	2.0884106943137897E-5	TEST
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999409828546181	WITHOUT_CLASSIFICATION	5.901714538199355E-5	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9992717483712659	WITHOUT_CLASSIFICATION	7.282516287340572E-4	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9992717483712659	WITHOUT_CLASSIFICATION	7.282516287340572E-4	TEST
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9992717483712659	WITHOUT_CLASSIFICATION	7.282516287340572E-4	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9992717483712659	WITHOUT_CLASSIFICATION	7.282516287340572E-4	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9998931137977115	WITHOUT_CLASSIFICATION	1.0688620228856487E-4	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999941558593726	WITHOUT_CLASSIFICATION	5.844140627480376E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999941558593726	WITHOUT_CLASSIFICATION	5.844140627480376E-6	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999693108448375	WITHOUT_CLASSIFICATION	3.068915516240672E-5	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999693108448375	WITHOUT_CLASSIFICATION	3.068915516240672E-5	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999693108448375	WITHOUT_CLASSIFICATION	3.068915516240672E-5	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999941558593726	WITHOUT_CLASSIFICATION	5.844140627480376E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999941558593726	WITHOUT_CLASSIFICATION	5.844140627480376E-6	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9998931137977115	WITHOUT_CLASSIFICATION	1.0688620228856487E-4	TEST
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999219311743359	WITHOUT_CLASSIFICATION	7.80688256640874E-5	TEST
// always false or nil	WITHOUT_CLASSIFICATION	0.9999744065509194	WITHOUT_CLASSIFICATION	2.5593449080582553E-5	TEST
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999560371355679	WITHOUT_CLASSIFICATION	4.3962864432036914E-5	TEST
// normal	WITHOUT_CLASSIFICATION	0.9999581126459445	WITHOUT_CLASSIFICATION	4.188735405560804E-5	TEST
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999984146412804	WITHOUT_CLASSIFICATION	1.5853587196046369E-6	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999274647610663	WITHOUT_CLASSIFICATION	7.25352389336236E-5	TEST
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999802146997708	WITHOUT_CLASSIFICATION	1.9785300229080865E-5	TEST
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999792723965022	WITHOUT_CLASSIFICATION	2.0727603497823936E-5	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999707754390144	WITHOUT_CLASSIFICATION	2.9224560985719097E-5	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999941558593726	WITHOUT_CLASSIFICATION	5.844140627480376E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999941558593726	WITHOUT_CLASSIFICATION	5.844140627480376E-6	TEST
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999875922841458	WITHOUT_CLASSIFICATION	1.2407715854084147E-5	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999881953081371	WITHOUT_CLASSIFICATION	1.1804691862850372E-5	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999920114946461	WITHOUT_CLASSIFICATION	7.988505353891038E-6	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.999988150247649	WITHOUT_CLASSIFICATION	1.1849752350971591E-5	TEST
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999868690838352	WITHOUT_CLASSIFICATION	1.3130916164780472E-5	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999968561632682	WITHOUT_CLASSIFICATION	3.143836731775229E-6	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999869337238548	WITHOUT_CLASSIFICATION	1.306627614519433E-5	TEST
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999983144866843	WITHOUT_CLASSIFICATION	1.6855133156762515E-6	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999806318333831	WITHOUT_CLASSIFICATION	1.9368166616898706E-5	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999505481075616	WITHOUT_CLASSIFICATION	4.9451892438387626E-5	TEST
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9996277138280106	WITHOUT_CLASSIFICATION	3.7228617198935824E-4	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.999938433916204	WITHOUT_CLASSIFICATION	6.156608379609335E-5	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9998504238008239	WITHOUT_CLASSIFICATION	1.495761991759965E-4	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999717547047577	WITHOUT_CLASSIFICATION	2.8245295242349233E-5	TEST
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999982413909942	WITHOUT_CLASSIFICATION	1.7586090057945615E-6	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999577922012789	WITHOUT_CLASSIFICATION	4.220779872101935E-5	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999577922012789	WITHOUT_CLASSIFICATION	4.220779872101935E-5	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999577922012789	WITHOUT_CLASSIFICATION	4.220779872101935E-5	TEST
// compile into array	WITHOUT_CLASSIFICATION	0.9999691886032904	WITHOUT_CLASSIFICATION	3.0811396709549725E-5	TEST
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999973611598489	WITHOUT_CLASSIFICATION	2.6388401510204907E-6	TEST
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999888826779669	WITHOUT_CLASSIFICATION	1.1117322033043156E-5	TEST
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999458597557346	WITHOUT_CLASSIFICATION	5.4140244265325916E-5	TEST
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999702757418444	WITHOUT_CLASSIFICATION	2.9724258155620286E-5	TEST
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999713318503411	WITHOUT_CLASSIFICATION	2.8668149658919088E-5	TEST
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.999992939134144	WITHOUT_CLASSIFICATION	7.060865855941888E-6	TEST
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9998261952128723	WITHOUT_CLASSIFICATION	1.738047871276836E-4	TEST
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999315494218541	WITHOUT_CLASSIFICATION	6.845057814575888E-5	TEST
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999926519369983	WITHOUT_CLASSIFICATION	7.348063001729237E-6	TEST
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.999982894571943	WITHOUT_CLASSIFICATION	1.710542805704112E-5	TEST
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9998718668543334	WITHOUT_CLASSIFICATION	1.281331456666802E-4	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999934072265145	WITHOUT_CLASSIFICATION	6.5927734854463254E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999941558593726	WITHOUT_CLASSIFICATION	5.844140627480376E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999941558593726	WITHOUT_CLASSIFICATION	5.844140627480376E-6	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9998931137977115	WITHOUT_CLASSIFICATION	1.0688620228856487E-4	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999274647610663	WITHOUT_CLASSIFICATION	7.25352389336236E-5	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999881953081371	WITHOUT_CLASSIFICATION	1.1804691862850372E-5	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.999988150247649	WITHOUT_CLASSIFICATION	1.1849752350971591E-5	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999968561632682	WITHOUT_CLASSIFICATION	3.143836731775229E-6	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999920114946461	WITHOUT_CLASSIFICATION	7.988505353891038E-6	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999869337238548	WITHOUT_CLASSIFICATION	1.306627614519433E-5	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999505481075616	WITHOUT_CLASSIFICATION	4.9451892438387626E-5	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999806318333831	WITHOUT_CLASSIFICATION	1.9368166616898706E-5	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.999938433916204	WITHOUT_CLASSIFICATION	6.156608379609335E-5	TEST
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999897539218886	WITHOUT_CLASSIFICATION	1.0246078111419774E-5	TEST
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999971559420313	WITHOUT_CLASSIFICATION	2.8440579687169914E-6	TEST
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999725795521541	WITHOUT_CLASSIFICATION	2.7420447845816138E-5	TEST
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999898584077187	WITHOUT_CLASSIFICATION	1.0141592281245052E-5	TEST
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999541257720925	WITHOUT_CLASSIFICATION	4.587422790742591E-5	TEST
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999897148891255	WITHOUT_CLASSIFICATION	1.0285110874418546E-5	TEST
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999708031037418	WITHOUT_CLASSIFICATION	2.9196896258302068E-5	TEST
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9997399239766659	WITHOUT_CLASSIFICATION	2.6007602333409576E-4	TEST
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999379285185653	WITHOUT_CLASSIFICATION	6.20714814346464E-5	TEST
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999985237232699	WITHOUT_CLASSIFICATION	1.476276730136753E-6	TEST
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999875379260887	WITHOUT_CLASSIFICATION	1.2462073911315453E-5	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999738930956515	WITHOUT_CLASSIFICATION	2.610690434841414E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999357725652016	WITHOUT_CLASSIFICATION	6.422743479839685E-5	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999629139878904	WITHOUT_CLASSIFICATION	3.7086012109618264E-5	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999890491104089	WITHOUT_CLASSIFICATION	1.0950889591096335E-5	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999801784318776	WITHOUT_CLASSIFICATION	1.9821568122396064E-5	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999405070998201	WITHOUT_CLASSIFICATION	5.9492900179838275E-5	TEST
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999813486051006	WITHOUT_CLASSIFICATION	1.865139489942095E-5	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999946992053638	WITHOUT_CLASSIFICATION	5.300794636136869E-6	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999841279783206	WITHOUT_CLASSIFICATION	1.5872021679428404E-5	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999770417421082	WITHOUT_CLASSIFICATION	2.2958257891730113E-5	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999884867063454	WITHOUT_CLASSIFICATION	1.151329365454952E-5	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999884867063454	WITHOUT_CLASSIFICATION	1.151329365454952E-5	TEST
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9997046364077757	WITHOUT_CLASSIFICATION	2.953635922242689E-4	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999720719008921	WITHOUT_CLASSIFICATION	2.7928099107974625E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
/*arg2*/	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999720719008921	WITHOUT_CLASSIFICATION	2.7928099107974625E-5	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999529563158518	WITHOUT_CLASSIFICATION	4.704368414817539E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999953399598471	WITHOUT_CLASSIFICATION	4.660040152879507E-6	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999953399598471	WITHOUT_CLASSIFICATION	4.660040152879507E-6	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.999989804926505	WITHOUT_CLASSIFICATION	1.0195073494978202E-5	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.999989804926505	WITHOUT_CLASSIFICATION	1.0195073494978202E-5	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9999578516135758	WITHOUT_CLASSIFICATION	4.2148386424288235E-5	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9999578516135758	WITHOUT_CLASSIFICATION	4.2148386424288235E-5	TEST
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999447472299806	WITHOUT_CLASSIFICATION	5.52527700194381E-5	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999802386275579	WITHOUT_CLASSIFICATION	1.9761372442056805E-5	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999802386275579	WITHOUT_CLASSIFICATION	1.9761372442056805E-5	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999903503789946	WITHOUT_CLASSIFICATION	9.649621005323023E-6	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999903503789946	WITHOUT_CLASSIFICATION	9.649621005323023E-6	TEST
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999635069802517	WITHOUT_CLASSIFICATION	3.6493019748232256E-5	TEST
// call site	WITHOUT_CLASSIFICATION	0.9999919976003248	WITHOUT_CLASSIFICATION	8.002399675282947E-6	TEST
// call site	WITHOUT_CLASSIFICATION	0.9999919976003248	WITHOUT_CLASSIFICATION	8.002399675282947E-6	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999887040573403	WITHOUT_CLASSIFICATION	1.1295942659721689E-5	TEST
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999262446907439	WITHOUT_CLASSIFICATION	7.375530925620248E-5	TEST
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999844218428938	WITHOUT_CLASSIFICATION	1.5578157106267553E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999887040573403	WITHOUT_CLASSIFICATION	1.1295942659721689E-5	TEST
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999584578607497	WITHOUT_CLASSIFICATION	4.154213925034859E-5	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.999974817084328	WITHOUT_CLASSIFICATION	2.5182915671977102E-5	TEST
// args	WITHOUT_CLASSIFICATION	0.9999579884963427	WITHOUT_CLASSIFICATION	4.201150365722706E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999589000396566	WITHOUT_CLASSIFICATION	4.1099960343449424E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999589000396566	WITHOUT_CLASSIFICATION	4.1099960343449424E-5	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999921097598242	WITHOUT_CLASSIFICATION	7.890240175855457E-6	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999219062902442	WITHOUT_CLASSIFICATION	7.809370975573151E-5	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.9999219062902442	WITHOUT_CLASSIFICATION	7.809370975573151E-5	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.999889197984884	WITHOUT_CLASSIFICATION	1.1080201511608089E-4	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999493748069824	WITHOUT_CLASSIFICATION	5.062519301749191E-5	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999780972839059	WITHOUT_CLASSIFICATION	2.1902716094211873E-5	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999780972839059	WITHOUT_CLASSIFICATION	2.1902716094211873E-5	TEST
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.999996175716762	WITHOUT_CLASSIFICATION	3.824283238000816E-6	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// args	WITHOUT_CLASSIFICATION	0.9999579884963427	WITHOUT_CLASSIFICATION	4.201150365722706E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999589000396566	WITHOUT_CLASSIFICATION	4.1099960343449424E-5	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999921097598242	WITHOUT_CLASSIFICATION	7.890240175855457E-6	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999219062902442	WITHOUT_CLASSIFICATION	7.809370975573151E-5	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.9999219062902442	WITHOUT_CLASSIFICATION	7.809370975573151E-5	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.999889197984884	WITHOUT_CLASSIFICATION	1.1080201511608089E-4	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999743543068258	WITHOUT_CLASSIFICATION	2.5645693174164646E-5	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999895917652861	WITHOUT_CLASSIFICATION	1.0408234713821413E-5	TEST
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999821547882127	WITHOUT_CLASSIFICATION	1.7845211787246373E-5	TEST
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999335916412726	WITHOUT_CLASSIFICATION	6.640835872731236E-5	TEST
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999708603904225	WITHOUT_CLASSIFICATION	2.913960957754811E-5	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999268318061824	WITHOUT_CLASSIFICATION	7.316819381761818E-5	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999178324154119	WITHOUT_CLASSIFICATION	8.216758458817102E-5	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999178324154119	WITHOUT_CLASSIFICATION	8.216758458817102E-5	TEST
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.99996653373356	WITHOUT_CLASSIFICATION	3.3466266439957656E-5	TEST
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999518892911038	WITHOUT_CLASSIFICATION	4.811070889612121E-5	TEST
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999518892911038	WITHOUT_CLASSIFICATION	4.811070889612121E-5	TEST
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.999955144566281	WITHOUT_CLASSIFICATION	4.485543371897288E-5	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999518892911038	WITHOUT_CLASSIFICATION	4.811070889612121E-5	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999518892911038	WITHOUT_CLASSIFICATION	4.811070889612121E-5	TEST
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999254640276137	WITHOUT_CLASSIFICATION	7.453597238616329E-5	TEST
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999254640276137	WITHOUT_CLASSIFICATION	7.453597238616329E-5	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999531548571716	WITHOUT_CLASSIFICATION	4.684514282845306E-5	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999531548571716	WITHOUT_CLASSIFICATION	4.684514282845306E-5	TEST
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999518892911038	WITHOUT_CLASSIFICATION	4.811070889612121E-5	TEST
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999645097274098	WITHOUT_CLASSIFICATION	3.549027259023474E-5	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999493748069824	WITHOUT_CLASSIFICATION	5.062519301749191E-5	TEST
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999938597663993	WITHOUT_CLASSIFICATION	6.140233600660726E-6	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9998420323241698	WITHOUT_CLASSIFICATION	1.5796767583017347E-4	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999368247154505	WITHOUT_CLASSIFICATION	6.317528454947698E-5	TEST
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999786219969004	WITHOUT_CLASSIFICATION	2.1378003099709607E-5	TEST
// load Object under value	WITHOUT_CLASSIFICATION	0.9999606555617572	WITHOUT_CLASSIFICATION	3.934443824284545E-5	TEST
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999659382506476	WITHOUT_CLASSIFICATION	3.406174935247163E-5	TEST
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999632614181401	WITHOUT_CLASSIFICATION	3.673858185995449E-5	TEST
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9998018513511147	WITHOUT_CLASSIFICATION	1.98148648885256E-4	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999522175127511	WITHOUT_CLASSIFICATION	4.778248724897994E-5	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999522175127511	WITHOUT_CLASSIFICATION	4.778248724897994E-5	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999499383271826	WITHOUT_CLASSIFICATION	5.0061672817385126E-5	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999499383271826	WITHOUT_CLASSIFICATION	5.0061672817385126E-5	TEST
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999887406253691	WITHOUT_CLASSIFICATION	1.1259374630839246E-5	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999940794342809	WITHOUT_CLASSIFICATION	5.92056571914214E-6	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999940794342809	WITHOUT_CLASSIFICATION	5.92056571914214E-6	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999940794342809	WITHOUT_CLASSIFICATION	5.92056571914214E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999635124451461	WITHOUT_CLASSIFICATION	3.648755485378331E-5	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9996805676486493	WITHOUT_CLASSIFICATION	3.194323513505886E-4	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9996805676486493	WITHOUT_CLASSIFICATION	3.194323513505886E-4	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999847259401954	WITHOUT_CLASSIFICATION	1.5274059804520544E-5	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.9999950187816476	WITHOUT_CLASSIFICATION	4.981218352325318E-6	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.999958229337036	WITHOUT_CLASSIFICATION	4.177066296393674E-5	TEST
// skip catch block	WITHOUT_CLASSIFICATION	0.9999891007054293	WITHOUT_CLASSIFICATION	1.0899294570725165E-5	TEST
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999285628660662	WITHOUT_CLASSIFICATION	7.143713393373465E-5	TEST
// next jump	WITHOUT_CLASSIFICATION	0.9999902610621556	WITHOUT_CLASSIFICATION	9.738937844391973E-6	TEST
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9995690991401939	WITHOUT_CLASSIFICATION	4.309008598061616E-4	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999357725652016	WITHOUT_CLASSIFICATION	6.422743479839685E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999357725652016	WITHOUT_CLASSIFICATION	6.422743479839685E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999635124451461	WITHOUT_CLASSIFICATION	3.648755485378331E-5	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999847259401954	WITHOUT_CLASSIFICATION	1.5274059804520544E-5	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999958446600826	WITHOUT_CLASSIFICATION	4.155339917404589E-6	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.9999950187816476	WITHOUT_CLASSIFICATION	4.981218352325318E-6	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.999958229337036	WITHOUT_CLASSIFICATION	4.177066296393674E-5	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.999986038208851	WITHOUT_CLASSIFICATION	1.3961791148957353E-5	TEST
// break jump	WITHOUT_CLASSIFICATION	0.9999885427319152	WITHOUT_CLASSIFICATION	1.1457268084899627E-5	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998142947418693	WITHOUT_CLASSIFICATION	1.857052581307499E-4	TEST
//[reg]	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999161753222322	WITHOUT_CLASSIFICATION	8.382467776777704E-5	TEST
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999931419139229	WITHOUT_CLASSIFICATION	6.858086077144355E-6	TEST
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999882431647467	WITHOUT_CLASSIFICATION	1.1756835253310168E-5	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.999986038208851	WITHOUT_CLASSIFICATION	1.3961791148957353E-5	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.999821043109925	WITHOUT_CLASSIFICATION	1.789568900750197E-4	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.999821043109925	WITHOUT_CLASSIFICATION	1.789568900750197E-4	TEST
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9998604247541721	WITHOUT_CLASSIFICATION	1.3957524582785866E-4	TEST
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999898198847647	WITHOUT_CLASSIFICATION	1.018011523537371E-5	TEST
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999920764452483	WITHOUT_CLASSIFICATION	7.923554751538445E-6	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999399388970367	WITHOUT_CLASSIFICATION	6.0061102963347083E-5	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999873324796965	WITHOUT_CLASSIFICATION	1.2667520303432935E-5	TEST
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999808719520934	WITHOUT_CLASSIFICATION	1.9128047906554243E-5	TEST
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999820015229129	WITHOUT_CLASSIFICATION	1.7998477087044586E-5	TEST
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999504033112507	WITHOUT_CLASSIFICATION	4.95966887492537E-5	TEST
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999905680987398	WITHOUT_CLASSIFICATION	9.431901260216875E-6	TEST
// false // zero	WITHOUT_CLASSIFICATION	0.9999897097500686	WITHOUT_CLASSIFICATION	1.0290249931381146E-5	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999395744566216	WITHOUT_CLASSIFICATION	6.0425543378331234E-5	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999399388970367	WITHOUT_CLASSIFICATION	6.0061102963347083E-5	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999873324796965	WITHOUT_CLASSIFICATION	1.2667520303432935E-5	TEST
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999895454737828	WITHOUT_CLASSIFICATION	1.0454526217224844E-5	TEST
// push false	WITHOUT_CLASSIFICATION	0.9999888291683912	WITHOUT_CLASSIFICATION	1.1170831608801674E-5	TEST
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9992717483712659	WITHOUT_CLASSIFICATION	7.282516287340572E-4	TEST
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9995582198565621	WITHOUT_CLASSIFICATION	4.4178014343776683E-4	TEST
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999581365989445	WITHOUT_CLASSIFICATION	4.1863401055637216E-5	TEST
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9992717483712659	WITHOUT_CLASSIFICATION	7.282516287340572E-4	TEST
//[C]	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
// push true	WITHOUT_CLASSIFICATION	0.999989854865936	WITHOUT_CLASSIFICATION	1.014513406412266E-5	TEST
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999770124112617	WITHOUT_CLASSIFICATION	2.2987588738262008E-5	TEST
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9995582198565621	WITHOUT_CLASSIFICATION	4.4178014343776683E-4	TEST
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9992717483712659	WITHOUT_CLASSIFICATION	7.282516287340572E-4	TEST
//[boolean]	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.999974409340997	WITHOUT_CLASSIFICATION	2.5590659003013662E-5	TEST
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999360640721731	WITHOUT_CLASSIFICATION	6.393592782694086E-5	TEST
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9998957064102552	WITHOUT_CLASSIFICATION	1.0429358974474863E-4	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999988982707786	WITHOUT_CLASSIFICATION	1.1017292213935817E-6	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999896981186716	WITHOUT_CLASSIFICATION	1.0301881328498032E-5	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999925935645919	WITHOUT_CLASSIFICATION	7.406435408039707E-6	TEST
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999555288308107	WITHOUT_CLASSIFICATION	4.4471169189234354E-5	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999896981186716	WITHOUT_CLASSIFICATION	1.0301881328498032E-5	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999925935645919	WITHOUT_CLASSIFICATION	7.406435408039707E-6	TEST
// finally with exception	WITHOUT_CLASSIFICATION	0.9999105110290346	WITHOUT_CLASSIFICATION	8.948897096537838E-5	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999946242672332	WITHOUT_CLASSIFICATION	5.375732766926134E-6	TEST
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999232985635814	WITHOUT_CLASSIFICATION	7.670143641857476E-5	TEST
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999186422180245	WITHOUT_CLASSIFICATION	8.135778197555222E-5	TEST
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999282586746167	WITHOUT_CLASSIFICATION	7.174132538327894E-5	TEST
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999486176608708	WITHOUT_CLASSIFICATION	5.1382339129207176E-5	TEST
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999912323728317	WITHOUT_CLASSIFICATION	8.767627168298727E-6	TEST
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999912879126635	WITHOUT_CLASSIFICATION	8.712087336618071E-6	TEST
// script object	WITHOUT_CLASSIFICATION	0.9999909445908991	WITHOUT_CLASSIFICATION	9.055409100903145E-6	TEST
// arities	WITHOUT_CLASSIFICATION	0.9999577922012789	WITHOUT_CLASSIFICATION	4.220779872101935E-5	TEST
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9957518045633059	WITHOUT_CLASSIFICATION	0.004248195436694029	TEST
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999530978880455	WITHOUT_CLASSIFICATION	4.690211195453556E-5	TEST
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.999975443168641	WITHOUT_CLASSIFICATION	2.4556831359047024E-5	TEST
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999909600663824	WITHOUT_CLASSIFICATION	9.039933617589552E-6	TEST
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9968192985725153	WITHOUT_CLASSIFICATION	0.0031807014274847626	TEST
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.999937658861318	WITHOUT_CLASSIFICATION	6.234113868195973E-5	TEST
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999781247766829	WITHOUT_CLASSIFICATION	2.1875223317114803E-5	TEST
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999020889014921	WITHOUT_CLASSIFICATION	9.79110985078103E-5	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999792589647385	WITHOUT_CLASSIFICATION	2.07410352614922E-5	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999763760824497	WITHOUT_CLASSIFICATION	2.3623917550290173E-5	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999880436570571	WITHOUT_CLASSIFICATION	1.1956342942873252E-5	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999885498480985	WITHOUT_CLASSIFICATION	1.1450151901557878E-5	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999885498480985	WITHOUT_CLASSIFICATION	1.1450151901557878E-5	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999275037007219	WITHOUT_CLASSIFICATION	7.249629927801408E-5	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999275037007219	WITHOUT_CLASSIFICATION	7.249629927801408E-5	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999058780545893	WITHOUT_CLASSIFICATION	9.412194541072204E-5	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999058780545893	WITHOUT_CLASSIFICATION	9.412194541072204E-5	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999516176687913	WITHOUT_CLASSIFICATION	4.83823312087185E-5	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999957334899763	WITHOUT_CLASSIFICATION	4.266510023750713E-6	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999944861441503	WITHOUT_CLASSIFICATION	5.513855849646247E-6	TEST
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999776255563207	WITHOUT_CLASSIFICATION	2.2374443679290318E-5	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.999992988485454	WITHOUT_CLASSIFICATION	7.011514545956744E-6	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999478730131982	WITHOUT_CLASSIFICATION	5.212698680177728E-5	TEST
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999633363767122	WITHOUT_CLASSIFICATION	3.6663623287775746E-5	TEST
// then optional args	WITHOUT_CLASSIFICATION	0.9999853512707529	WITHOUT_CLASSIFICATION	1.4648729247093726E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999357725652016	WITHOUT_CLASSIFICATION	6.422743479839685E-5	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999516176687913	WITHOUT_CLASSIFICATION	4.83823312087185E-5	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999957334899763	WITHOUT_CLASSIFICATION	4.266510023750713E-6	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999944861441503	WITHOUT_CLASSIFICATION	5.513855849646247E-6	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.999992988485454	WITHOUT_CLASSIFICATION	7.011514545956744E-6	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999478730131982	WITHOUT_CLASSIFICATION	5.212698680177728E-5	TEST
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999271055439736	WITHOUT_CLASSIFICATION	7.289445602650105E-5	TEST
// finally, post args	WITHOUT_CLASSIFICATION	0.9999716167003384	WITHOUT_CLASSIFICATION	2.8383299661619153E-5	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9991214930261726	WITHOUT_CLASSIFICATION	8.785069738273583E-4	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9991214930261726	WITHOUT_CLASSIFICATION	8.785069738273583E-4	TEST
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999820584815914	WITHOUT_CLASSIFICATION	1.7941518408661135E-5	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9997704203949499	WITHOUT_CLASSIFICATION	2.295796050501285E-4	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999904473306612	WITHOUT_CLASSIFICATION	9.552669338727443E-6	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999824838532242	WITHOUT_CLASSIFICATION	1.7516146775783516E-5	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999824838532242	WITHOUT_CLASSIFICATION	1.7516146775783516E-5	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999389689170571	WITHOUT_CLASSIFICATION	6.1031082942933973E-5	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9994583513023793	WITHOUT_CLASSIFICATION	5.416486976207241E-4	TEST
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999895287059697	WITHOUT_CLASSIFICATION	1.047129403037962E-5	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999918655356098	WITHOUT_CLASSIFICATION	8.13446439023745E-6	TEST
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999956668144624	WITHOUT_CLASSIFICATION	4.333185537637232E-6	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999629139878904	WITHOUT_CLASSIFICATION	3.7086012109618264E-5	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999890491104089	WITHOUT_CLASSIFICATION	1.0950889591096335E-5	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999801784318776	WITHOUT_CLASSIFICATION	1.9821568122396064E-5	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999405070998201	WITHOUT_CLASSIFICATION	5.9492900179838275E-5	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999841279783206	WITHOUT_CLASSIFICATION	1.5872021679428404E-5	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999770417421082	WITHOUT_CLASSIFICATION	2.2958257891730113E-5	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999389689170571	WITHOUT_CLASSIFICATION	6.1031082942933973E-5	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9994583513023793	WITHOUT_CLASSIFICATION	5.416486976207241E-4	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999918655356098	WITHOUT_CLASSIFICATION	8.13446439023745E-6	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999915913444889	WITHOUT_CLASSIFICATION	8.408655511062131E-6	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999904473306612	WITHOUT_CLASSIFICATION	9.552669338727443E-6	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999904473306612	WITHOUT_CLASSIFICATION	9.552669338727443E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999395744566216	WITHOUT_CLASSIFICATION	6.0425543378331234E-5	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999395744566216	WITHOUT_CLASSIFICATION	6.0425543378331234E-5	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999701151255327	WITHOUT_CLASSIFICATION	2.988487446735074E-5	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999701151255327	WITHOUT_CLASSIFICATION	2.988487446735074E-5	TEST
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999885569936369	WITHOUT_CLASSIFICATION	1.1443006363202575E-5	TEST
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999850659842552	WITHOUT_CLASSIFICATION	1.4934015744868843E-5	TEST
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999267993159096	WITHOUT_CLASSIFICATION	7.320068409041721E-5	TEST
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999342087017599	WITHOUT_CLASSIFICATION	6.579129824009991E-5	TEST
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.999991232087615	WITHOUT_CLASSIFICATION	8.767912385053696E-6	TEST
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999828538171729	WITHOUT_CLASSIFICATION	1.714618282706228E-5	TEST
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999876846694129	WITHOUT_CLASSIFICATION	1.231533058700788E-5	TEST
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999638378759316	WITHOUT_CLASSIFICATION	3.6162124068376236E-5	TEST
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999569953650039	WITHOUT_CLASSIFICATION	4.300463499600139E-5	TEST
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999738930956515	WITHOUT_CLASSIFICATION	2.610690434841414E-5	TEST
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.999873342514364	WITHOUT_CLASSIFICATION	1.2665748563594678E-4	TEST
// verify the class	WITHOUT_CLASSIFICATION	0.9999981579774896	WITHOUT_CLASSIFICATION	1.8420225103551216E-6	TEST
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999520855141829	WITHOUT_CLASSIFICATION	4.7914485816987925E-5	TEST
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999925948549067	WITHOUT_CLASSIFICATION	7.405145093279999E-6	TEST
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999689351413492	WITHOUT_CLASSIFICATION	3.1064858650820956E-5	TEST
// thread context	WITHOUT_CLASSIFICATION	0.9999906396691574	WITHOUT_CLASSIFICATION	9.360330842699321E-6	TEST
// line number	WITHOUT_CLASSIFICATION	0.9999917368790809	WITHOUT_CLASSIFICATION	8.263120918960353E-6	TEST
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999569156170776	WITHOUT_CLASSIFICATION	4.308438292251903E-5	TEST
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9998817983289385	WITHOUT_CLASSIFICATION	1.1820167106146691E-4	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999890491104089	WITHOUT_CLASSIFICATION	1.0950889591096335E-5	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999405070998201	WITHOUT_CLASSIFICATION	5.9492900179838275E-5	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999884867063454	WITHOUT_CLASSIFICATION	1.151329365454952E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999589000396566	WITHOUT_CLASSIFICATION	4.1099960343449424E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999589000396566	WITHOUT_CLASSIFICATION	4.1099960343449424E-5	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999915913444889	WITHOUT_CLASSIFICATION	8.408655511062131E-6	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999904473306612	WITHOUT_CLASSIFICATION	9.552669338727443E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999395744566216	WITHOUT_CLASSIFICATION	6.0425543378331234E-5	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999701151255327	WITHOUT_CLASSIFICATION	2.988487446735074E-5	TEST
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9996023843342475	WITHOUT_CLASSIFICATION	3.9761566575253034E-4	TEST
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9970553805780635	WITHOUT_CLASSIFICATION	0.002944619421936497	TEST
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999839705282045	WITHOUT_CLASSIFICATION	1.6029471795449603E-5	TEST
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9996712438332884	WITHOUT_CLASSIFICATION	3.2875616671160143E-4	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999689598455946	WITHOUT_CLASSIFICATION	3.104015440537892E-5	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999689598455946	WITHOUT_CLASSIFICATION	3.104015440537892E-5	TEST
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999468850392073	WITHOUT_CLASSIFICATION	5.311496079285784E-5	TEST
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999765910389433	WITHOUT_CLASSIFICATION	2.3408961056715736E-5	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999725358351625	WITHOUT_CLASSIFICATION	2.7464164837423418E-5	TEST
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999765910389433	WITHOUT_CLASSIFICATION	2.3408961056715736E-5	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999963738176826	WITHOUT_CLASSIFICATION	3.626182317414416E-6	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999963738176826	WITHOUT_CLASSIFICATION	3.626182317414416E-6	TEST
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999103007518704	WITHOUT_CLASSIFICATION	8.969924812967782E-5	TEST
// normal closure	WITHOUT_CLASSIFICATION	0.9999885830606761	WITHOUT_CLASSIFICATION	1.1416939323974682E-5	TEST
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999695510563208	WITHOUT_CLASSIFICATION	3.0448943679166704E-5	TEST
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9937262896095027	WITHOUT_CLASSIFICATION	0.006273710390497355	TEST
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999863648396146	WITHOUT_CLASSIFICATION	1.3635160385455573E-5	TEST
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999886851478106	WITHOUT_CLASSIFICATION	1.1314852189392733E-5	TEST
// Ruby name 	WITHOUT_CLASSIFICATION	0.999974244877636	WITHOUT_CLASSIFICATION	2.5755122363934926E-5	TEST
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999795765995168	WITHOUT_CLASSIFICATION	2.0423400483206653E-5	TEST
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9999798788811444	WITHOUT_CLASSIFICATION	2.0121118855633607E-5	TEST
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9901507710236381	WITHOUT_CLASSIFICATION	0.009849228976361785	TEST
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999388438008512	WITHOUT_CLASSIFICATION	6.115619914883452E-5	TEST
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9998896521737596	WITHOUT_CLASSIFICATION	1.1034782624038131E-4	TEST
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999998416939491	WITHOUT_CLASSIFICATION	1.583060509861909E-7	TEST
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999920538702742	WITHOUT_CLASSIFICATION	7.946129725726851E-6	TEST
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9996722224057946	WITHOUT_CLASSIFICATION	3.277775942053297E-4	TEST
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999903786193173	WITHOUT_CLASSIFICATION	9.621380682834714E-6	TEST
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999731665050811	WITHOUT_CLASSIFICATION	2.683349491890385E-5	TEST
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999896998363502	WITHOUT_CLASSIFICATION	1.0300163649760643E-5	TEST
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999998753276844	WITHOUT_CLASSIFICATION	1.24672315665883E-7	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999921114379704	WITHOUT_CLASSIFICATION	7.88856202959333E-6	TEST
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9998581630809135	WITHOUT_CLASSIFICATION	1.4183691908651745E-4	TEST
// inline script	WITHOUT_CLASSIFICATION	0.999988658518642	WITHOUT_CLASSIFICATION	1.134148135806794E-5	TEST
// inline script	WITHOUT_CLASSIFICATION	0.999988658518642	WITHOUT_CLASSIFICATION	1.134148135806794E-5	TEST
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999837222884851	WITHOUT_CLASSIFICATION	1.627771151498061E-5	TEST
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999949072286926	WITHOUT_CLASSIFICATION	5.09277130743237E-6	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999825319877663	WITHOUT_CLASSIFICATION	1.746801223363915E-5	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999825319877663	WITHOUT_CLASSIFICATION	1.746801223363915E-5	TEST
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.999902336452649	WITHOUT_CLASSIFICATION	9.766354735095391E-5	TEST
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.999989293837065	WITHOUT_CLASSIFICATION	1.0706162935103966E-5	TEST
// done // done // done // done	WITHOUT_CLASSIFICATION	0.999890688441129	WITHOUT_CLASSIFICATION	1.0931155887091733E-4	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999723656361649	WITHOUT_CLASSIFICATION	2.7634363835042247E-5	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999723656361649	WITHOUT_CLASSIFICATION	2.7634363835042247E-5	TEST
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999844060012616	WITHOUT_CLASSIFICATION	1.5593998738439557E-5	TEST
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999979613149539	WITHOUT_CLASSIFICATION	2.038685046085553E-6	TEST
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999937189500635	WITHOUT_CLASSIFICATION	6.28104993640169E-6	TEST
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999954982798945	WITHOUT_CLASSIFICATION	4.50172010554818E-6	TEST
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999682478890499	WITHOUT_CLASSIFICATION	3.175211094996047E-5	TEST
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999957412873238	WITHOUT_CLASSIFICATION	4.25871267613928E-6	TEST
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999897145030547	WITHOUT_CLASSIFICATION	1.0285496945202833E-5	TEST
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999939740190443	WITHOUT_CLASSIFICATION	6.025980955619254E-6	TEST
// build each "when"	WITHOUT_CLASSIFICATION	0.9999917061430865	WITHOUT_CLASSIFICATION	8.29385691353486E-6	TEST
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999468845049733	WITHOUT_CLASSIFICATION	5.31154950267583E-5	TEST
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9998661737234628	WITHOUT_CLASSIFICATION	1.338262765372679E-4	TEST
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999878610766506	WITHOUT_CLASSIFICATION	1.2138923349383738E-5	TEST
// close it out	WITHOUT_CLASSIFICATION	0.999970318101461	WITHOUT_CLASSIFICATION	2.968189853906329E-5	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9998931450090742	WITHOUT_CLASSIFICATION	1.0685499092574247E-4	TEST
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9999761923092563	WITHOUT_CLASSIFICATION	2.380769074373551E-5	TEST
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999982909642483	WITHOUT_CLASSIFICATION	1.709035751579918E-6	TEST
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999949088774752	WITHOUT_CLASSIFICATION	5.091122524780737E-6	TEST
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999834221660311	WITHOUT_CLASSIFICATION	1.6577833968880672E-5	TEST
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999839799923028	WITHOUT_CLASSIFICATION	1.6020007697188592E-5	TEST
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999853009963983	WITHOUT_CLASSIFICATION	1.4699003601762749E-5	TEST
// Instance method	WITHOUT_CLASSIFICATION	0.9999913417839803	WITHOUT_CLASSIFICATION	8.65821601967668E-6	TEST
// Class method	WITHOUT_CLASSIFICATION	0.9999920706686066	WITHOUT_CLASSIFICATION	7.929331393361223E-6	TEST
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999530841248622	WITHOUT_CLASSIFICATION	4.691587513782114E-5	TEST
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999785405764356	WITHOUT_CLASSIFICATION	2.1459423564396053E-5	TEST
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999949427194124	WITHOUT_CLASSIFICATION	5.057280587692798E-6	TEST
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.999993972756887	WITHOUT_CLASSIFICATION	6.027243113063213E-6	TEST
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9995160369011336	WITHOUT_CLASSIFICATION	4.839630988663917E-4	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999425547157065	WITHOUT_CLASSIFICATION	5.744528429345202E-5	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999885861111805	WITHOUT_CLASSIFICATION	1.1413888819519884E-5	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999990089056515	WITHOUT_CLASSIFICATION	9.910943484793207E-7	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999977437039367	WITHOUT_CLASSIFICATION	2.25629606335057E-6	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9998931450090742	WITHOUT_CLASSIFICATION	1.0685499092574247E-4	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999425547157065	WITHOUT_CLASSIFICATION	5.744528429345202E-5	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999885861111805	WITHOUT_CLASSIFICATION	1.1413888819519884E-5	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999977437039367	WITHOUT_CLASSIFICATION	2.25629606335057E-6	TEST
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9998524010798494	WITHOUT_CLASSIFICATION	1.475989201506849E-4	TEST
// Build the new module	WITHOUT_CLASSIFICATION	0.9999832713753682	WITHOUT_CLASSIFICATION	1.6728624631750562E-5	TEST
// Build the module body	WITHOUT_CLASSIFICATION	0.9999901733979316	WITHOUT_CLASSIFICATION	9.82660206839564E-6	TEST
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999265456717418	WITHOUT_CLASSIFICATION	7.345432825819748E-5	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999954934519393	WITHOUT_CLASSIFICATION	4.506548060774482E-6	TEST
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999993612803333	WITHOUT_CLASSIFICATION	6.387196668437386E-7	TEST
// get attr	WITHOUT_CLASSIFICATION	0.9999921114379704	WITHOUT_CLASSIFICATION	7.88856202959333E-6	TEST
// call operator	WITHOUT_CLASSIFICATION	0.9999920124700309	WITHOUT_CLASSIFICATION	7.987529969110643E-6	TEST
// set attr	WITHOUT_CLASSIFICATION	0.9999932520817354	WITHOUT_CLASSIFICATION	6.747918264557494E-6	TEST
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999649943168497	WITHOUT_CLASSIFICATION	3.500568315026429E-5	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999850225771393	WITHOUT_CLASSIFICATION	1.4977422860791812E-5	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999850225771393	WITHOUT_CLASSIFICATION	1.4977422860791812E-5	TEST
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999469992330788	WITHOUT_CLASSIFICATION	5.3000766921156986E-5	TEST
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999942956740117	WITHOUT_CLASSIFICATION	5.70432598840977E-6	TEST
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.999997599895827	WITHOUT_CLASSIFICATION	2.400104172918732E-6	TEST
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999944056868143	WITHOUT_CLASSIFICATION	5.594313185735052E-6	TEST
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9998229854555127	WITHOUT_CLASSIFICATION	1.770145444872174E-4	TEST
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999727753901511	WITHOUT_CLASSIFICATION	2.7224609848882137E-5	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999964611376219	WITHOUT_CLASSIFICATION	3.5388623781114698E-6	TEST
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999932917105794	WITHOUT_CLASSIFICATION	6.70828942057941E-6	TEST
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999998477183927	WITHOUT_CLASSIFICATION	1.5228160745764543E-7	TEST
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999912585253631	WITHOUT_CLASSIFICATION	8.741474636907698E-6	TEST
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999996558556077	WITHOUT_CLASSIFICATION	3.441443922471905E-7	TEST
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999242329816369	WITHOUT_CLASSIFICATION	7.576701836304526E-5	TEST
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999944683065244	WITHOUT_CLASSIFICATION	5.531693475604948E-6	TEST
// alu operations	WITHOUT_CLASSIFICATION	0.9999886933850783	WITHOUT_CLASSIFICATION	1.1306614921765488E-5	TEST
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999973000646286	WITHOUT_CLASSIFICATION	2.6999353714466823E-6	TEST
// closure instructions	WITHOUT_CLASSIFICATION	0.999969297369491	WITHOUT_CLASSIFICATION	3.070263050905737E-5	TEST
// eval instructions	WITHOUT_CLASSIFICATION	0.9999885351142598	WITHOUT_CLASSIFICATION	1.1464885740283065E-5	TEST
// def instructions	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// exception instructions	WITHOUT_CLASSIFICATION	0.9999758199699813	WITHOUT_CLASSIFICATION	2.418003001874315E-5	TEST
// Loads	WITHOUT_CLASSIFICATION	0.9999577922012789	WITHOUT_CLASSIFICATION	4.220779872101935E-5	TEST
// Stores	WITHOUT_CLASSIFICATION	0.9999577922012789	WITHOUT_CLASSIFICATION	4.220779872101935E-5	TEST
// jump and branch operations	WITHOUT_CLASSIFICATION	0.99999284748259	WITHOUT_CLASSIFICATION	7.152517410095064E-6	TEST
// others	WITHOUT_CLASSIFICATION	0.9999585179421319	WITHOUT_CLASSIFICATION	4.1482057868167466E-5	TEST
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999762435225271	WITHOUT_CLASSIFICATION	2.3756477472869237E-5	TEST
// optimization guards	WITHOUT_CLASSIFICATION	0.9999698569261866	WITHOUT_CLASSIFICATION	3.0143073813405064E-5	TEST
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.999305868479539	WITHOUT_CLASSIFICATION	6.941315204610294E-4	TEST
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.999998438387504	WITHOUT_CLASSIFICATION	1.561612495933526E-6	TEST
// scripts	WITHOUT_CLASSIFICATION	0.9999578958874941	WITHOUT_CLASSIFICATION	4.210411250585586E-5	TEST
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999945390905604	WITHOUT_CLASSIFICATION	5.460909439727478E-6	TEST
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999909904417666	WITHOUT_CLASSIFICATION	9.009558233361486E-6	TEST
// methods and closures	WITHOUT_CLASSIFICATION	0.9999940388404588	WITHOUT_CLASSIFICATION	5.961159541139912E-6	TEST
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999581059813434	WITHOUT_CLASSIFICATION	4.1894018656614084E-5	TEST
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999045613681612	WITHOUT_CLASSIFICATION	9.543863183878664E-5	TEST
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999334413032053	WITHOUT_CLASSIFICATION	6.655869679465504E-5	TEST
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9997871795176847	WITHOUT_CLASSIFICATION	2.128204823152769E-4	TEST
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999142397864509	WITHOUT_CLASSIFICATION	8.576021354911752E-5	TEST
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9998118452498572	WITHOUT_CLASSIFICATION	1.881547501428256E-4	TEST
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999931326786938	WITHOUT_CLASSIFICATION	6.867321306254042E-6	TEST
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9998944269860174	WITHOUT_CLASSIFICATION	1.0557301398268862E-4	TEST
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999536163942973	WITHOUT_CLASSIFICATION	4.6383605702719344E-5	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998714454912592	WITHOUT_CLASSIFICATION	1.2855450874085472E-4	TEST
// Readline	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999922269360313	WITHOUT_CLASSIFICATION	7.773063968709934E-6	TEST
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999148580893445	WITHOUT_CLASSIFICATION	8.514191065541734E-5	TEST
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999935524728499	WITHOUT_CLASSIFICATION	6.447527150018562E-6	TEST
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9999958493076384	WITHOUT_CLASSIFICATION	4.150692361600488E-6	TEST
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999994681837313	WITHOUT_CLASSIFICATION	5.318162686206642E-7	TEST
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999830141483046	WITHOUT_CLASSIFICATION	1.698585169535689E-5	TEST
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.999851056755484	WITHOUT_CLASSIFICATION	1.4894324451608364E-4	TEST
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9998101702326727	WITHOUT_CLASSIFICATION	1.8982976732729884E-4	TEST
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999985509065321	WITHOUT_CLASSIFICATION	1.449093467770543E-6	TEST
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999117625296154	WITHOUT_CLASSIFICATION	8.823747038457381E-5	TEST
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9991766800440472	WITHOUT_CLASSIFICATION	8.233199559526197E-4	TEST
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9968399799742848	WITHOUT_CLASSIFICATION	0.0031600200257153165	TEST
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999842612730943	WITHOUT_CLASSIFICATION	1.573872690570827E-4	TEST
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999858455065533	WITHOUT_CLASSIFICATION	1.4154493446674406E-5	TEST
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9998433058937384	WITHOUT_CLASSIFICATION	1.5669410626160233E-4	TEST
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9999313693563792	WITHOUT_CLASSIFICATION	6.863064362087113E-5	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9952332019608695	WITHOUT_CLASSIFICATION	0.004766798039130559	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9952332019608695	WITHOUT_CLASSIFICATION	0.004766798039130559	TEST
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999842612730943	WITHOUT_CLASSIFICATION	1.573872690570827E-4	TEST
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9996308621209677	WITHOUT_CLASSIFICATION	3.691378790322706E-4	TEST
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999842683587837	WITHOUT_CLASSIFICATION	1.573164121629922E-4	TEST
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9998437041486852	WITHOUT_CLASSIFICATION	1.562958513148212E-4	TEST
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999398950161013	WITHOUT_CLASSIFICATION	6.01049838987583E-5	TEST
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9998710608888204	WITHOUT_CLASSIFICATION	1.289391111795594E-4	TEST
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9998196330098343	WITHOUT_CLASSIFICATION	1.8036699016564197E-4	TEST
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9998682332835478	WITHOUT_CLASSIFICATION	1.317667164522057E-4	TEST
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999350457970787	WITHOUT_CLASSIFICATION	6.495420292125829E-5	TEST
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999860105030136	WITHOUT_CLASSIFICATION	1.3989496986366661E-5	TEST
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9998217493844238	WITHOUT_CLASSIFICATION	1.7825061557611628E-4	TEST
// class or module	WITHOUT_CLASSIFICATION	0.9999944726713892	WITHOUT_CLASSIFICATION	5.527328610870717E-6	TEST
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999843100027335	WITHOUT_CLASSIFICATION	1.5689997266450276E-5	TEST
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999517040283352	WITHOUT_CLASSIFICATION	4.829597166480231E-5	TEST
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999554189407287	WITHOUT_CLASSIFICATION	4.4581059271251636E-5	TEST
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999922238254761	WITHOUT_CLASSIFICATION	7.776174523837452E-6	TEST
// IN changed!	WITHOUT_CLASSIFICATION	0.9999885458770563	WITHOUT_CLASSIFICATION	1.1454122943611355E-5	TEST
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9998783928477638	WITHOUT_CLASSIFICATION	1.2160715223621638E-4	TEST
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999778869807939	WITHOUT_CLASSIFICATION	2.211301920608463E-5	TEST
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9995917585413607	WITHOUT_CLASSIFICATION	4.082414586392698E-4	TEST
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9998547418023004	WITHOUT_CLASSIFICATION	1.452581976996866E-4	TEST
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.999993356892045	WITHOUT_CLASSIFICATION	6.6431079550243845E-6	TEST
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999969692124502	WITHOUT_CLASSIFICATION	3.0307875497593416E-6	TEST
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999947067783921	WITHOUT_CLASSIFICATION	5.29322160793203E-6	TEST
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9998526466779362	WITHOUT_CLASSIFICATION	1.473533220638003E-4	TEST
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9994912259656108	WITHOUT_CLASSIFICATION	5.087740343891778E-4	TEST
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9996943895968027	WITHOUT_CLASSIFICATION	3.0561040319730177E-4	TEST
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999034896155227	WITHOUT_CLASSIFICATION	9.651038447731179E-5	TEST
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999645558692415	WITHOUT_CLASSIFICATION	3.544413075849459E-5	TEST
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999705348253473	WITHOUT_CLASSIFICATION	2.9465174652748396E-5	TEST
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999879390677067	WITHOUT_CLASSIFICATION	1.2060932293467257E-5	TEST
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999933870157518	WITHOUT_CLASSIFICATION	6.612984248172695E-6	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9998722877271184	WITHOUT_CLASSIFICATION	1.2771227288161776E-4	TEST
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.999762255805851	WITHOUT_CLASSIFICATION	2.3774419414901421E-4	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9998722877271184	WITHOUT_CLASSIFICATION	1.2771227288161776E-4	TEST
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999743726139213	WITHOUT_CLASSIFICATION	2.5627386078609648E-5	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999464771451	WITHOUT_CLASSIFICATION	5.352285490011458E-5	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999464771451	WITHOUT_CLASSIFICATION	5.352285490011458E-5	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999464771451	WITHOUT_CLASSIFICATION	5.352285490011458E-5	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.999968260309012	WITHOUT_CLASSIFICATION	3.1739690988037875E-5	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.999968260309012	WITHOUT_CLASSIFICATION	3.1739690988037875E-5	TEST
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9993976195888642	WITHOUT_CLASSIFICATION	6.023804111357931E-4	TEST
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999653030461133	WITHOUT_CLASSIFICATION	3.4696953886767136E-5	TEST
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999699249449019	WITHOUT_CLASSIFICATION	3.0075055098192145E-5	TEST
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9999921780226593	WITHOUT_CLASSIFICATION	7.821977340843594E-6	TEST
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999737861773721	WITHOUT_CLASSIFICATION	2.6213822627846387E-5	TEST
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9997021273910939	WITHOUT_CLASSIFICATION	2.978726089060975E-4	TEST
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999550752641136	WITHOUT_CLASSIFICATION	4.492473588632137E-5	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999620343784809	WITHOUT_CLASSIFICATION	3.796562151908513E-5	TEST
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999223551010861	WITHOUT_CLASSIFICATION	7.76448989138976E-5	TEST
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.999979551130996	WITHOUT_CLASSIFICATION	2.044886900399642E-5	TEST
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999639695934911	WITHOUT_CLASSIFICATION	3.603040650882183E-5	TEST
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999873031010111	WITHOUT_CLASSIFICATION	1.2696898988922196E-5	TEST
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999816126772297	WITHOUT_CLASSIFICATION	1.8387322770222024E-5	TEST
// root-level logic	WITHOUT_CLASSIFICATION	0.9999886407958893	WITHOUT_CLASSIFICATION	1.1359204110620128E-5	TEST
// root-level methods	WITHOUT_CLASSIFICATION	0.9999748669053421	WITHOUT_CLASSIFICATION	2.5133094657914422E-5	TEST
// root-level classes	WITHOUT_CLASSIFICATION	0.9999726010180775	WITHOUT_CLASSIFICATION	2.7398981922430963E-5	TEST
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999867536478892	WITHOUT_CLASSIFICATION	1.3246352110771641E-5	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999813559098361	WITHOUT_CLASSIFICATION	1.8644090163902565E-5	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999813559098361	WITHOUT_CLASSIFICATION	1.8644090163902565E-5	TEST
// receiver	WITHOUT_CLASSIFICATION	0.9999885049032414	WITHOUT_CLASSIFICATION	1.1495096758515997E-5	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999821385885784	WITHOUT_CLASSIFICATION	1.7861411421618342E-5	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999821385885784	WITHOUT_CLASSIFICATION	1.7861411421618342E-5	TEST
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999740338826973	WITHOUT_CLASSIFICATION	2.5966117302615157E-5	TEST
// Object[] args	WITHOUT_CLASSIFICATION	0.9999885559086061	WITHOUT_CLASSIFICATION	1.1444091393922462E-5	TEST
// load handle	WITHOUT_CLASSIFICATION	0.9999831986472252	WITHOUT_CLASSIFICATION	1.680135277487094E-5	TEST
// args array	WITHOUT_CLASSIFICATION	0.9999887709112655	WITHOUT_CLASSIFICATION	1.1229088734653902E-5	TEST
// i'th argument	WITHOUT_CLASSIFICATION	0.9999900865695753	WITHOUT_CLASSIFICATION	9.913430424641426E-6	TEST
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999574038542997	WITHOUT_CLASSIFICATION	4.259614570039717E-5	TEST
// Object arg0	WITHOUT_CLASSIFICATION	0.9999885733644812	WITHOUT_CLASSIFICATION	1.1426635518723574E-5	TEST
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999734097997527	WITHOUT_CLASSIFICATION	2.659020024734841E-5	TEST
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999579148701482	WITHOUT_CLASSIFICATION	4.2085129851772057E-5	TEST
// no silly ticks!	WITHOUT_CLASSIFICATION	0.999991891972124	WITHOUT_CLASSIFICATION	8.108027875965563E-6	TEST
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999783611731698	WITHOUT_CLASSIFICATION	2.1638826830250678E-5	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999441269380519	WITHOUT_CLASSIFICATION	5.587306194807288E-5	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999959614660413	WITHOUT_CLASSIFICATION	4.0385339587049975E-6	TEST
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.999975511855634	WITHOUT_CLASSIFICATION	2.4488144366022714E-5	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999620343784809	WITHOUT_CLASSIFICATION	3.796562151908513E-5	TEST
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9995582198565621	WITHOUT_CLASSIFICATION	4.4178014343776683E-4	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999897076665062	WITHOUT_CLASSIFICATION	1.0292333493837245E-5	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999940810009464	WITHOUT_CLASSIFICATION	5.9189990534801985E-6	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999940810009464	WITHOUT_CLASSIFICATION	5.9189990534801985E-6	TEST
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9998838240805308	WITHOUT_CLASSIFICATION	1.1617591946926805E-4	TEST
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.99985719098354	WITHOUT_CLASSIFICATION	1.4280901646011182E-4	TEST
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999898355958847	WITHOUT_CLASSIFICATION	1.0164404115307435E-5	TEST
// restore position	WITHOUT_CLASSIFICATION	0.9999888701967514	WITHOUT_CLASSIFICATION	1.1129803248495368E-5	TEST
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999945669430957	WITHOUT_CLASSIFICATION	5.433056904352592E-6	TEST
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999960545544474	WITHOUT_CLASSIFICATION	3.945445552568199E-6	TEST
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999973015854442	WITHOUT_CLASSIFICATION	2.698414555790473E-6	TEST
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9996748345640319	WITHOUT_CLASSIFICATION	3.251654359681134E-4	TEST
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999048099600386	WITHOUT_CLASSIFICATION	9.519003996136167E-5	TEST
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999125635158184	WITHOUT_CLASSIFICATION	8.743648418163929E-5	TEST
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999619817684886	WITHOUT_CLASSIFICATION	3.80182315113469E-5	TEST
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9998698637900506	WITHOUT_CLASSIFICATION	1.3013620994936094E-4	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999603861813979	WITHOUT_CLASSIFICATION	3.9613818602074826E-5	TEST
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999440082079835	WITHOUT_CLASSIFICATION	5.599179201646029E-5	TEST
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999206097809817	WITHOUT_CLASSIFICATION	7.939021901825286E-5	TEST
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999749771479666	WITHOUT_CLASSIFICATION	2.5022852033306233E-5	TEST
// Toplevel defines	WITHOUT_CLASSIFICATION	0.999988498705619	WITHOUT_CLASSIFICATION	1.1501294380966713E-5	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999730949418921	WITHOUT_CLASSIFICATION	2.6905058107820802E-5	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999362822070853	WITHOUT_CLASSIFICATION	6.371779291465654E-5	TEST
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999820899620875	WITHOUT_CLASSIFICATION	1.791003791250555E-5	TEST
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999965909900013	WITHOUT_CLASSIFICATION	3.409009998833068E-6	TEST
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999693185334069	WITHOUT_CLASSIFICATION	3.068146659311269E-5	TEST
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999986118283004	WITHOUT_CLASSIFICATION	1.3881716996148013E-6	TEST
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999951545451473	WITHOUT_CLASSIFICATION	4.845454852701985E-6	TEST
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.999969297369491	WITHOUT_CLASSIFICATION	3.070263050905737E-5	TEST
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.999752054866879	WITHOUT_CLASSIFICATION	2.479451331209342E-4	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9994273521382138	WITHOUT_CLASSIFICATION	5.726478617861838E-4	TEST
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999842622565234	WITHOUT_CLASSIFICATION	1.5737743476596167E-5	TEST
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999856546394312	WITHOUT_CLASSIFICATION	1.4345360568921685E-5	TEST
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999817043853525	WITHOUT_CLASSIFICATION	1.8295614647432598E-5	TEST
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999797035379211	WITHOUT_CLASSIFICATION	2.0296462078863928E-5	TEST
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.999976887719318	WITHOUT_CLASSIFICATION	2.3112280681888114E-5	TEST
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999926521819646	WITHOUT_CLASSIFICATION	7.347818035313225E-6	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999377607521389	WITHOUT_CLASSIFICATION	6.223924786117321E-5	TEST
// $blah	WITHOUT_CLASSIFICATION	0.9999577922012789	WITHOUT_CLASSIFICATION	4.220779872101935E-5	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9994273521382138	WITHOUT_CLASSIFICATION	5.726478617861838E-4	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999922537740079	WITHOUT_CLASSIFICATION	7.746225992092554E-6	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999377607521389	WITHOUT_CLASSIFICATION	6.223924786117321E-5	TEST
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999407031767784	WITHOUT_CLASSIFICATION	5.929682322157835E-5	TEST
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999842587099833	WITHOUT_CLASSIFICATION	1.5741290016685418E-5	TEST
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999973171238388	WITHOUT_CLASSIFICATION	2.682876161152237E-6	TEST
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999616862891245	WITHOUT_CLASSIFICATION	3.831371087541441E-5	TEST
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999842524972038	WITHOUT_CLASSIFICATION	1.5747502796148788E-5	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.99999613313342	WITHOUT_CLASSIFICATION	3.866866580034338E-6	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.99999613313342	WITHOUT_CLASSIFICATION	3.866866580034338E-6	TEST
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9998556640239139	WITHOUT_CLASSIFICATION	1.443359760859939E-4	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999973407821475	WITHOUT_CLASSIFICATION	2.6592178524057485E-6	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999927797503719	WITHOUT_CLASSIFICATION	7.220249627990251E-6	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999927797503719	WITHOUT_CLASSIFICATION	7.220249627990251E-6	TEST
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999999308972061	WITHOUT_CLASSIFICATION	6.910279386847541E-8	TEST
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9992717483712659	WITHOUT_CLASSIFICATION	7.282516287340572E-4	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999564392562763	WITHOUT_CLASSIFICATION	4.356074372367359E-5	TEST
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999917837496911	WITHOUT_CLASSIFICATION	8.21625030885174E-6	TEST
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999956939516718	WITHOUT_CLASSIFICATION	4.3060483282561495E-6	TEST
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999773846871708	WITHOUT_CLASSIFICATION	2.2615312829164163E-5	TEST
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9997615219628592	WITHOUT_CLASSIFICATION	2.3847803714093633E-4	TEST
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999750441963033	WITHOUT_CLASSIFICATION	2.495580369674085E-5	TEST
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999924352479952	WITHOUT_CLASSIFICATION	7.564752004860328E-6	TEST
// host and port given	WITHOUT_CLASSIFICATION	0.9999969297384902	WITHOUT_CLASSIFICATION	3.0702615098558667E-6	TEST
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999699380798901	WITHOUT_CLASSIFICATION	3.0061920109978303E-5	TEST
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9997383449294812	WITHOUT_CLASSIFICATION	2.616550705188434E-4	TEST
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9998328669203269	WITHOUT_CLASSIFICATION	1.671330796731321E-4	TEST
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999717588532905	WITHOUT_CLASSIFICATION	2.8241146709579516E-5	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999578117484553	WITHOUT_CLASSIFICATION	4.2188251544772096E-5	TEST
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999803520126116	WITHOUT_CLASSIFICATION	1.9647987388333032E-5	TEST
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9999425453487586	WITHOUT_CLASSIFICATION	5.745465124147085E-5	TEST
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.99995366357504	WITHOUT_CLASSIFICATION	4.633642495992202E-5	TEST
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9998970135123078	WITHOUT_CLASSIFICATION	1.0298648769224539E-4	TEST
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999229713366661	WITHOUT_CLASSIFICATION	7.702866333395716E-5	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.9999577922012789	WITHOUT_CLASSIFICATION	4.220779872101935E-5	TEST
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999577922012789	WITHOUT_CLASSIFICATION	4.220779872101935E-5	TEST
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9996331221213993	WITHOUT_CLASSIFICATION	3.668778786006806E-4	TEST
// line 323	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999845561091347	WITHOUT_CLASSIFICATION	1.5443890865268566E-5	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999845561091347	WITHOUT_CLASSIFICATION	1.5443890865268566E-5	TEST
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999949433710886	WITHOUT_CLASSIFICATION	5.056628911326122E-6	TEST
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999792789345742	WITHOUT_CLASSIFICATION	2.072106542581875E-5	TEST
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9996277138280106	WITHOUT_CLASSIFICATION	3.7228617198935824E-4	TEST
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999864738716865	WITHOUT_CLASSIFICATION	1.3526128313487304E-5	TEST
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.999933600201207	WITHOUT_CLASSIFICATION	6.63997987930079E-5	TEST
// RubySocket	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9998926958379482	WITHOUT_CLASSIFICATION	1.0730416205178656E-4	TEST
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999647933532729	WITHOUT_CLASSIFICATION	3.520664672699766E-5	TEST
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999954781064667	WITHOUT_CLASSIFICATION	4.521893533315722E-6	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999935458234932	WITHOUT_CLASSIFICATION	6.454176506888442E-6	TEST
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999748945933955	WITHOUT_CLASSIFICATION	2.5105406604512644E-5	TEST
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999809325055252	WITHOUT_CLASSIFICATION	1.9067494474715336E-5	TEST
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9992717483712659	WITHOUT_CLASSIFICATION	7.282516287340572E-4	TEST
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999669675837473	WITHOUT_CLASSIFICATION	3.30324162527407E-5	TEST
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9998059725088255	WITHOUT_CLASSIFICATION	1.940274911744978E-4	TEST
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999886201237441	WITHOUT_CLASSIFICATION	1.1379876255975075E-5	TEST
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999318114852115	WITHOUT_CLASSIFICATION	6.818851478845346E-5	TEST
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999825679328022	WITHOUT_CLASSIFICATION	1.743206719776233E-5	TEST
// be dead	WITHOUT_CLASSIFICATION	0.9999792921273511	WITHOUT_CLASSIFICATION	2.0707872648845122E-5	TEST
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999881319981527	WITHOUT_CLASSIFICATION	1.186800184729083E-5	TEST
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999827846804004	WITHOUT_CLASSIFICATION	1.7215319599636056E-5	TEST
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9994470353930632	WITHOUT_CLASSIFICATION	5.529646069367707E-4	TEST
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9994208223993691	WITHOUT_CLASSIFICATION	5.791776006308676E-4	TEST
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999898040824057	WITHOUT_CLASSIFICATION	1.019591759427607E-5	TEST
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999983754919815	WITHOUT_CLASSIFICATION	1.6245080186164229E-6	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9998520859063745	WITHOUT_CLASSIFICATION	1.4791409362546054E-4	TEST
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9998558472845069	WITHOUT_CLASSIFICATION	1.4415271549298312E-4	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999770018447729	WITHOUT_CLASSIFICATION	2.299815522713026E-5	TEST
// main body	WITHOUT_CLASSIFICATION	0.9999896540815166	WITHOUT_CLASSIFICATION	1.0345918483360835E-5	TEST
// return jump handling	WITHOUT_CLASSIFICATION	0.9999817445232286	WITHOUT_CLASSIFICATION	1.8255476771389947E-5	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999578786950671	WITHOUT_CLASSIFICATION	4.212130493276645E-5	TEST
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999656272901296	WITHOUT_CLASSIFICATION	3.437270987035276E-5	TEST
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999706618322842	WITHOUT_CLASSIFICATION	2.9338167715677408E-5	TEST
// clear the redo	WITHOUT_CLASSIFICATION	0.9999966251220469	WITHOUT_CLASSIFICATION	3.3748779530541335E-6	TEST
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999775944743523	WITHOUT_CLASSIFICATION	2.240552564777722E-5	TEST
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999638578911578	WITHOUT_CLASSIFICATION	3.614210884213146E-5	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999302678460933	WITHOUT_CLASSIFICATION	6.973215390676135E-5	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9994922681406725	WITHOUT_CLASSIFICATION	5.077318593274016E-4	TEST
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999813338146486	WITHOUT_CLASSIFICATION	1.866618535143854E-5	TEST
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999305900481159	WITHOUT_CLASSIFICATION	6.940995188407349E-5	TEST
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999688443245407	WITHOUT_CLASSIFICATION	3.1155675459312075E-5	TEST
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999796876412723	WITHOUT_CLASSIFICATION	2.0312358727656295E-5	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.99997274118636	WITHOUT_CLASSIFICATION	2.725881363988844E-5	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.99997274118636	WITHOUT_CLASSIFICATION	2.725881363988844E-5	TEST
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999769172405208	WITHOUT_CLASSIFICATION	2.3082759479107076E-5	TEST
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999833960681282	WITHOUT_CLASSIFICATION	1.6603931871767007E-5	TEST
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999852099099852	WITHOUT_CLASSIFICATION	1.4790090014868905E-5	TEST
// return	WITHOUT_CLASSIFICATION	0.9999737363545437	WITHOUT_CLASSIFICATION	2.626364545624763E-5	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999792589647385	WITHOUT_CLASSIFICATION	2.07410352614922E-5	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999763760824497	WITHOUT_CLASSIFICATION	2.3623917550290173E-5	TEST
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999532541710342	WITHOUT_CLASSIFICATION	4.674582896583874E-5	TEST
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9998981393965685	WITHOUT_CLASSIFICATION	1.0186060343151415E-4	TEST
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9997598135502381	WITHOUT_CLASSIFICATION	2.4018644976176676E-4	TEST
// tc	WITHOUT_CLASSIFICATION	0.9999577922012789	WITHOUT_CLASSIFICATION	4.220779872101935E-5	TEST
// self // name	WITHOUT_CLASSIFICATION	0.9999744320627955	WITHOUT_CLASSIFICATION	2.5567937204588595E-5	TEST
// no args	WITHOUT_CLASSIFICATION	0.9999703907231228	WITHOUT_CLASSIFICATION	2.9609276877259574E-5	TEST
// variable args with block	WITHOUT_CLASSIFICATION	0.9998290355038694	WITHOUT_CLASSIFICATION	1.7096449613064708E-4	TEST
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999333123202496	WITHOUT_CLASSIFICATION	6.668767975039677E-5	TEST
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999467256560339	WITHOUT_CLASSIFICATION	5.3274343966068585E-5	TEST
// one arg with block	WITHOUT_CLASSIFICATION	0.9999178274871576	WITHOUT_CLASSIFICATION	8.217251284236368E-5	TEST
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999956963355268	WITHOUT_CLASSIFICATION	4.3036644732079424E-5	TEST
// two args with block	WITHOUT_CLASSIFICATION	0.9998673058332719	WITHOUT_CLASSIFICATION	1.3269416672801422E-4	TEST
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999930459800759	WITHOUT_CLASSIFICATION	6.95401992409975E-5	TEST
// three args with block	WITHOUT_CLASSIFICATION	0.9998898688987794	WITHOUT_CLASSIFICATION	1.1013110122056476E-4	TEST
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999422849047666	WITHOUT_CLASSIFICATION	5.77150952334927E-5	TEST
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9996088707525536	WITHOUT_CLASSIFICATION	3.911292474464084E-4	TEST
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9997962409174892	WITHOUT_CLASSIFICATION	2.0375908251079076E-4	TEST
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999460206089645	WITHOUT_CLASSIFICATION	5.397939103545408E-5	TEST
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999706338937769	WITHOUT_CLASSIFICATION	2.9366106223000363E-5	TEST
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999525487620243	WITHOUT_CLASSIFICATION	4.7451237975542914E-5	TEST
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999606178518168	WITHOUT_CLASSIFICATION	3.938214818329963E-5	TEST
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999619894314208	WITHOUT_CLASSIFICATION	3.801056857917924E-5	TEST
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999721775807828	WITHOUT_CLASSIFICATION	2.782241921717247E-5	TEST
// static invocation	WITHOUT_CLASSIFICATION	0.9999896956967225	WITHOUT_CLASSIFICATION	1.0304303277470733E-5	TEST
// virtual invocation	WITHOUT_CLASSIFICATION	0.999969300383566	WITHOUT_CLASSIFICATION	3.069961643396354E-5	TEST
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9982110403590976	WITHOUT_CLASSIFICATION	0.001788959640902439	TEST
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999928315112637	WITHOUT_CLASSIFICATION	7.168488736292603E-6	TEST
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999880597181153	WITHOUT_CLASSIFICATION	1.1940281884742669E-5	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9994922681406725	WITHOUT_CLASSIFICATION	5.077318593274016E-4	TEST
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9996184785700687	WITHOUT_CLASSIFICATION	3.815214299312462E-4	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999257934641667	WITHOUT_CLASSIFICATION	7.420653583342068E-5	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999257934641667	WITHOUT_CLASSIFICATION	7.420653583342068E-5	TEST
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999694170427547	WITHOUT_CLASSIFICATION	3.058295724530003E-5	TEST
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999254383550639	WITHOUT_CLASSIFICATION	7.456164493611262E-5	TEST
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.999969297369491	WITHOUT_CLASSIFICATION	3.070263050905737E-5	TEST
// never reached	WITHOUT_CLASSIFICATION	0.9999896776319961	WITHOUT_CLASSIFICATION	1.0322368003923056E-5	TEST
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9999420181312607	WITHOUT_CLASSIFICATION	5.798186873927655E-5	TEST
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999465885671359	WITHOUT_CLASSIFICATION	5.341143286411466E-5	TEST
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9999568797546426	WITHOUT_CLASSIFICATION	4.312024535727099E-5	TEST
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9999302808584558	WITHOUT_CLASSIFICATION	6.971914154420346E-5	TEST
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9999466975039596	WITHOUT_CLASSIFICATION	5.330249604051881E-5	TEST
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9999569677026823	WITHOUT_CLASSIFICATION	4.303229731776662E-5	TEST
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9999304230538212	WITHOUT_CLASSIFICATION	6.957694617879855E-5	TEST
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9999421363893088	WITHOUT_CLASSIFICATION	5.786361069120102E-5	TEST
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999902628195675	WITHOUT_CLASSIFICATION	9.73718043259023E-6	TEST
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999493748069824	WITHOUT_CLASSIFICATION	5.062519301749191E-5	TEST
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999673832003126	WITHOUT_CLASSIFICATION	3.261679968732039E-5	TEST
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.999991208442291	WITHOUT_CLASSIFICATION	8.79155770904176E-6	TEST
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999806939360357	WITHOUT_CLASSIFICATION	1.9306063964330067E-5	TEST
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9999839770116602	WITHOUT_CLASSIFICATION	1.602298833979705E-5	TEST
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999852400767012	WITHOUT_CLASSIFICATION	1.4759923298810991E-5	TEST
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999880840722685	WITHOUT_CLASSIFICATION	1.1915927731568068E-5	TEST
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9999807333136138	WITHOUT_CLASSIFICATION	1.9266686386205636E-5	TEST
// promise to implement three	WITHOUT_CLASSIFICATION	0.9999902826801793	WITHOUT_CLASSIFICATION	9.7173198206366E-6	TEST
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.999972726459739	WITHOUT_CLASSIFICATION	2.7273540261049312E-5	TEST
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999541417981002	WITHOUT_CLASSIFICATION	4.585820189978435E-5	TEST
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999973548280906	WITHOUT_CLASSIFICATION	2.6451719095279524E-6	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.99998666578914	WITHOUT_CLASSIFICATION	1.3334210859954175E-5	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999601476396918	WITHOUT_CLASSIFICATION	3.985236030834126E-5	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999604937666653	WITHOUT_CLASSIFICATION	3.95062333347137E-5	TEST
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999967593408484	WITHOUT_CLASSIFICATION	3.2406591515948144E-6	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999882602057932	WITHOUT_CLASSIFICATION	1.1739794206693746E-5	TEST
// start setup method	WITHOUT_CLASSIFICATION	0.999980078135004	WITHOUT_CLASSIFICATION	1.9921864996062866E-5	TEST
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999932520817354	WITHOUT_CLASSIFICATION	6.747918264557494E-6	TEST
// set Ruby	WITHOUT_CLASSIFICATION	0.9999932520817354	WITHOUT_CLASSIFICATION	6.747918264557494E-6	TEST
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999914608627393	WITHOUT_CLASSIFICATION	8.539137260726767E-6	TEST
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9998974869090089	WITHOUT_CLASSIFICATION	1.0251309099108081E-4	TEST
// get current context	WITHOUT_CLASSIFICATION	0.9999861488797407	WITHOUT_CLASSIFICATION	1.3851120259231865E-5	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999742522957477	WITHOUT_CLASSIFICATION	2.5747704252424968E-5	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.99998666578914	WITHOUT_CLASSIFICATION	1.3334210859954175E-5	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999601476396918	WITHOUT_CLASSIFICATION	3.985236030834126E-5	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999604937666653	WITHOUT_CLASSIFICATION	3.95062333347137E-5	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999882602057932	WITHOUT_CLASSIFICATION	1.1739794206693746E-5	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.999989615435158	WITHOUT_CLASSIFICATION	1.0384564841979778E-5	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9998849052522656	WITHOUT_CLASSIFICATION	1.1509474773438711E-4	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.99998868820848	WITHOUT_CLASSIFICATION	1.1311791519988955E-5	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999860217880643	WITHOUT_CLASSIFICATION	1.3978211935699634E-5	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999912970246075	WITHOUT_CLASSIFICATION	8.702975392410957E-6	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9997488579218098	WITHOUT_CLASSIFICATION	2.5114207819019476E-4	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.9999932067363713	WITHOUT_CLASSIFICATION	6.793263628743363E-6	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999954647007911	WITHOUT_CLASSIFICATION	4.535299208876675E-6	TEST
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999592929356768	WITHOUT_CLASSIFICATION	4.070706432323792E-5	TEST
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999968576758301	WITHOUT_CLASSIFICATION	3.1423241698227636E-6	TEST
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999698220693785	WITHOUT_CLASSIFICATION	3.0177930621511225E-5	TEST
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999689564549908	WITHOUT_CLASSIFICATION	3.1043545009036424E-5	TEST
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999965803115465	WITHOUT_CLASSIFICATION	3.419688453647978E-6	TEST
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999839545673723	WITHOUT_CLASSIFICATION	1.604543262758013E-5	TEST
// store it	WITHOUT_CLASSIFICATION	0.99996944878926	WITHOUT_CLASSIFICATION	3.0551210739996674E-5	TEST
// end of try block	WITHOUT_CLASSIFICATION	0.9999950312968318	WITHOUT_CLASSIFICATION	4.968703168183809E-6	TEST
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.999969962677737	WITHOUT_CLASSIFICATION	3.003732226305246E-5	TEST
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.999908723518845	WITHOUT_CLASSIFICATION	9.127648115500798E-5	TEST
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.999963340100184	WITHOUT_CLASSIFICATION	3.665989981608093E-5	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999742522957477	WITHOUT_CLASSIFICATION	2.5747704252424968E-5	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9998849052522656	WITHOUT_CLASSIFICATION	1.1509474773438711E-4	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.99998868820848	WITHOUT_CLASSIFICATION	1.1311791519988955E-5	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999912970246075	WITHOUT_CLASSIFICATION	8.702975392410957E-6	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9997488579218098	WITHOUT_CLASSIFICATION	2.5114207819019476E-4	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.9999932067363713	WITHOUT_CLASSIFICATION	6.793263628743363E-6	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999954647007911	WITHOUT_CLASSIFICATION	4.535299208876675E-6	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999980827563624	WITHOUT_CLASSIFICATION	1.917243637519513E-6	TEST
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999469373637636	WITHOUT_CLASSIFICATION	5.306263623630546E-5	TEST
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999898727250908	WITHOUT_CLASSIFICATION	1.0127274909294822E-5	TEST
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999785070568684	WITHOUT_CLASSIFICATION	2.1492943131601988E-5	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999299117187235	WITHOUT_CLASSIFICATION	7.008828127642381E-5	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999299117187235	WITHOUT_CLASSIFICATION	7.008828127642381E-5	TEST
// setup the class	WITHOUT_CLASSIFICATION	0.9999981212072323	WITHOUT_CLASSIFICATION	1.8787927677335403E-6	TEST
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999943167316465	WITHOUT_CLASSIFICATION	5.68326835344659E-6	TEST
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.999962550500028	WITHOUT_CLASSIFICATION	3.744949997200823E-5	TEST
// probably a primitive	WITHOUT_CLASSIFICATION	0.999985121369129	WITHOUT_CLASSIFICATION	1.4878630871164285E-5	TEST
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999891322430416	WITHOUT_CLASSIFICATION	1.0867756958263705E-5	TEST
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999985539653404	WITHOUT_CLASSIFICATION	1.4460346596059225E-6	TEST
// set the full name	WITHOUT_CLASSIFICATION	0.9999919389207547	WITHOUT_CLASSIFICATION	8.061079245244521E-6	TEST
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999766842302504	WITHOUT_CLASSIFICATION	2.331576974948215E-5	TEST
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9998082744614772	WITHOUT_CLASSIFICATION	1.9172553852288144E-4	TEST
// add array construction methods	WITHOUT_CLASSIFICATION	0.9998008577059928	WITHOUT_CLASSIFICATION	1.9914229400722912E-4	TEST
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9998132912103233	WITHOUT_CLASSIFICATION	1.8670878967684762E-4	TEST
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999701473084168	WITHOUT_CLASSIFICATION	2.9852691583260404E-5	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9998169840640704	WITHOUT_CLASSIFICATION	1.8301593592962232E-4	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999563170322127	WITHOUT_CLASSIFICATION	4.368296778737498E-5	TEST
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999242845807103	WITHOUT_CLASSIFICATION	7.571541928968467E-5	TEST
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9998820369274883	WITHOUT_CLASSIFICATION	1.1796307251161003E-4	TEST
// add all static variables	WITHOUT_CLASSIFICATION	0.9998963675662489	WITHOUT_CLASSIFICATION	1.0363243375111528E-4	TEST
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9998854875315812	WITHOUT_CLASSIFICATION	1.1451246841872186E-4	TEST
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999897491505458	WITHOUT_CLASSIFICATION	1.0250849454109151E-5	TEST
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999979601341763	WITHOUT_CLASSIFICATION	2.0398658236528197E-6	TEST
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9968752757434176	WITHOUT_CLASSIFICATION	0.0031247242565822634	TEST
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999906774673826	WITHOUT_CLASSIFICATION	9.322532617411702E-6	TEST
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.999994555876606	WITHOUT_CLASSIFICATION	5.444123393954998E-6	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9979603415078455	WITHOUT_CLASSIFICATION	0.0020396584921545105	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999942426710688	WITHOUT_CLASSIFICATION	5.757328931137298E-6	TEST
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999975887787441	WITHOUT_CLASSIFICATION	2.4112212558809926E-6	TEST
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9997690788081506	WITHOUT_CLASSIFICATION	2.3092119184939803E-4	TEST
// line 326	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999942426710688	WITHOUT_CLASSIFICATION	5.757328931137298E-6	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999563170322127	WITHOUT_CLASSIFICATION	4.368296778737498E-5	TEST
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999241790871234	WITHOUT_CLASSIFICATION	7.582091287663243E-5	TEST
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999774269536141	WITHOUT_CLASSIFICATION	2.257304638582935E-5	TEST
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.999954267690125	WITHOUT_CLASSIFICATION	4.573230987506221E-5	TEST
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.999997866910693	WITHOUT_CLASSIFICATION	2.1330893069883154E-6	TEST
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999826389009839	WITHOUT_CLASSIFICATION	1.736109901603295E-5	TEST
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999613456537517	WITHOUT_CLASSIFICATION	3.865434624830316E-5	TEST
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9991195932474264	WITHOUT_CLASSIFICATION	8.804067525736874E-4	TEST
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9996833837130871	WITHOUT_CLASSIFICATION	3.1661628691296553E-4	TEST
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9995470561727364	WITHOUT_CLASSIFICATION	4.529438272635619E-4	TEST
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9997045154748154	WITHOUT_CLASSIFICATION	2.9548452518456374E-4	TEST
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999944815422309	WITHOUT_CLASSIFICATION	5.5184577690836E-6	TEST
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999747240282345	WITHOUT_CLASSIFICATION	2.5275971765414537E-5	TEST
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999455235167864	WITHOUT_CLASSIFICATION	5.44764832135126E-5	TEST
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999991774758785	WITHOUT_CLASSIFICATION	8.225241214076736E-7	TEST
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999861404476237	WITHOUT_CLASSIFICATION	1.3859552376372977E-5	TEST
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999792315672918	WITHOUT_CLASSIFICATION	2.0768432708182753E-5	TEST
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999943826469242	WITHOUT_CLASSIFICATION	5.617353075853766E-6	TEST
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9999722863325404	WITHOUT_CLASSIFICATION	2.7713667459503205E-5	TEST
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999958376738065	WITHOUT_CLASSIFICATION	4.162326193488584E-6	TEST
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999588402357396	WITHOUT_CLASSIFICATION	4.1159764260424705E-5	TEST
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999910999580626	WITHOUT_CLASSIFICATION	8.900041937498399E-6	TEST
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999583890731768	WITHOUT_CLASSIFICATION	4.161092682320319E-5	TEST
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999062578734061	WITHOUT_CLASSIFICATION	9.374212659387701E-5	TEST
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999982348030403	WITHOUT_CLASSIFICATION	1.7651969597571966E-6	TEST
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999653780269194	WITHOUT_CLASSIFICATION	3.462197308060227E-5	TEST
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999493748069824	WITHOUT_CLASSIFICATION	5.062519301749191E-5	TEST
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9995720357890601	WITHOUT_CLASSIFICATION	4.279642109398575E-4	TEST
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9989421713398142	WITHOUT_CLASSIFICATION	0.0010578286601857646	TEST
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999188289155833	WITHOUT_CLASSIFICATION	8.117108441670315E-5	TEST
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999796927634665	WITHOUT_CLASSIFICATION	2.030723653342492E-5	TEST
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999194217624716	WITHOUT_CLASSIFICATION	8.057823752834736E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999895368386121	WITHOUT_CLASSIFICATION	1.0463161387785214E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999895368386121	WITHOUT_CLASSIFICATION	1.0463161387785214E-5	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9998169840640704	WITHOUT_CLASSIFICATION	1.8301593592962232E-4	TEST
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999814187630562	WITHOUT_CLASSIFICATION	1.858123694380881E-5	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.999956731156168	WITHOUT_CLASSIFICATION	4.3268843831970315E-5	TEST
// weakly reserved names	WITHOUT_CLASSIFICATION	0.999972725926555	WITHOUT_CLASSIFICATION	2.7274073445027048E-5	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999749700581465	WITHOUT_CLASSIFICATION	2.5029941853456616E-5	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999749700581465	WITHOUT_CLASSIFICATION	2.5029941853456616E-5	TEST
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999670414055233	WITHOUT_CLASSIFICATION	3.295859447674098E-5	TEST
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999406723328373	WITHOUT_CLASSIFICATION	5.932766716269731E-5	TEST
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999760313345412	WITHOUT_CLASSIFICATION	2.3968665458870457E-5	TEST
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999582364341968	WITHOUT_CLASSIFICATION	4.176356580325478E-5	TEST
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9998566056155282	WITHOUT_CLASSIFICATION	1.4339438447169109E-4	TEST
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999952237339677	WITHOUT_CLASSIFICATION	4.7762660323657E-6	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999945790093921	WITHOUT_CLASSIFICATION	5.420990607903707E-6	TEST
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999790357080273	WITHOUT_CLASSIFICATION	2.0964291972776988E-5	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999647907977185	WITHOUT_CLASSIFICATION	3.520920228144534E-5	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999315121481007	WITHOUT_CLASSIFICATION	6.848785189919607E-5	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.999966647041262	WITHOUT_CLASSIFICATION	3.335295873797637E-5	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.999970930059413	WITHOUT_CLASSIFICATION	2.906994058702858E-5	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999520668787003	WITHOUT_CLASSIFICATION	4.793312129973023E-5	TEST
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999815669550993	WITHOUT_CLASSIFICATION	1.8433044900692862E-5	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999493748069824	WITHOUT_CLASSIFICATION	5.062519301749191E-5	TEST
// something?	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999628133284278	WITHOUT_CLASSIFICATION	3.718667157224369E-5	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999628133284278	WITHOUT_CLASSIFICATION	3.718667157224369E-5	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999688365161999	WITHOUT_CLASSIFICATION	3.1163483800060716E-5	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999688365161999	WITHOUT_CLASSIFICATION	3.1163483800060716E-5	TEST
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.999948639222116	WITHOUT_CLASSIFICATION	5.136077788409916E-5	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9995600693467607	WITHOUT_CLASSIFICATION	4.399306532393679E-4	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9998703945004814	WITHOUT_CLASSIFICATION	1.2960549951854865E-4	TEST
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999890698278429	WITHOUT_CLASSIFICATION	1.0930172157145065E-5	TEST
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999794920732141	WITHOUT_CLASSIFICATION	2.0507926785886193E-5	TEST
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999646543357175	WITHOUT_CLASSIFICATION	3.5345664282549765E-5	TEST
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999547304735702	WITHOUT_CLASSIFICATION	4.526952642981666E-5	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.999970930059413	WITHOUT_CLASSIFICATION	2.906994058702858E-5	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999520668787003	WITHOUT_CLASSIFICATION	4.793312129973023E-5	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999493748069824	WITHOUT_CLASSIFICATION	5.062519301749191E-5	TEST
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999664770929665	WITHOUT_CLASSIFICATION	3.35229070335649E-5	TEST
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9998713266700203	WITHOUT_CLASSIFICATION	1.2867332997972507E-4	TEST
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999980109842818	WITHOUT_CLASSIFICATION	1.9890157182902972E-6	TEST
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999362331066615	WITHOUT_CLASSIFICATION	6.376689333860896E-5	TEST
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9998844319874751	WITHOUT_CLASSIFICATION	1.155680125248307E-4	TEST
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999052800222211	WITHOUT_CLASSIFICATION	9.471997777878482E-5	TEST
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999698917695627	WITHOUT_CLASSIFICATION	3.01082304372749E-5	TEST
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999698917695627	WITHOUT_CLASSIFICATION	3.01082304372749E-5	TEST
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999528151912624	WITHOUT_CLASSIFICATION	4.7184808737570145E-5	TEST
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999617139910043	WITHOUT_CLASSIFICATION	3.828600899562935E-5	TEST
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999656106218757	WITHOUT_CLASSIFICATION	3.438937812430603E-5	TEST
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999460629311682	WITHOUT_CLASSIFICATION	5.3937068831881786E-5	TEST
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999520668787003	WITHOUT_CLASSIFICATION	4.793312129973023E-5	TEST
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9994717585727712	WITHOUT_CLASSIFICATION	5.282414272288097E-4	TEST
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.999989251025384	WITHOUT_CLASSIFICATION	1.0748974615871271E-5	TEST
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.999989921362336	WITHOUT_CLASSIFICATION	1.0078637663920572E-5	TEST
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999940722017088	WITHOUT_CLASSIFICATION	5.927798291296992E-6	TEST
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9997348578831105	WITHOUT_CLASSIFICATION	2.6514211688952015E-4	TEST
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999650248355044	WITHOUT_CLASSIFICATION	3.4975164495496234E-5	TEST
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.999989699607621	WITHOUT_CLASSIFICATION	1.0300392379034171E-5	TEST
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999828992488623	WITHOUT_CLASSIFICATION	1.7100751137646903E-5	TEST
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.999987983489609	WITHOUT_CLASSIFICATION	1.2016510390901187E-5	TEST
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9992717483712659	WITHOUT_CLASSIFICATION	7.282516287340572E-4	TEST
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999877334270278	WITHOUT_CLASSIFICATION	1.2266572972097891E-5	TEST
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999457829469821	WITHOUT_CLASSIFICATION	5.421705301789233E-5	TEST
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999844178272842	WITHOUT_CLASSIFICATION	1.5582172715788704E-5	TEST
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9997981373455961	WITHOUT_CLASSIFICATION	2.018626544038291E-4	TEST
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9960820341229547	WITHOUT_CLASSIFICATION	0.003917965877045253	TEST
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999903072450237	WITHOUT_CLASSIFICATION	9.692754976319163E-6	TEST
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9998318467008445	WITHOUT_CLASSIFICATION	1.6815329915552605E-4	TEST
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999184272010546	WITHOUT_CLASSIFICATION	8.157279894544658E-5	TEST
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999275549483903	WITHOUT_CLASSIFICATION	7.244505160979287E-5	TEST
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999283816800303	WITHOUT_CLASSIFICATION	7.161831996976517E-5	TEST
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.999994704816646	WITHOUT_CLASSIFICATION	5.295183354000002E-6	TEST
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999942038300873	WITHOUT_CLASSIFICATION	5.7961699126996075E-6	TEST
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9998076254505319	WITHOUT_CLASSIFICATION	1.9237454946814209E-4	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999792277613193	WITHOUT_CLASSIFICATION	2.0772238680672425E-5	TEST
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999917670287305	WITHOUT_CLASSIFICATION	8.232971269460135E-6	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999636654787978	WITHOUT_CLASSIFICATION	3.633452120213555E-5	TEST
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999646911591199	WITHOUT_CLASSIFICATION	3.5308840880006604E-5	TEST
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999812458372418	WITHOUT_CLASSIFICATION	1.875416275820763E-5	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.999956731156168	WITHOUT_CLASSIFICATION	4.3268843831970315E-5	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999792277613193	WITHOUT_CLASSIFICATION	2.0772238680672425E-5	TEST
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9997695232466063	WITHOUT_CLASSIFICATION	2.3047675339376506E-4	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999975200245572	WITHOUT_CLASSIFICATION	2.479975442725568E-6	TEST
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999761884168978	WITHOUT_CLASSIFICATION	2.3811583102242536E-5	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9998184866877374	WITHOUT_CLASSIFICATION	1.8151331226253818E-4	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9998184866877374	WITHOUT_CLASSIFICATION	1.8151331226253818E-4	TEST
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999843805175472	WITHOUT_CLASSIFICATION	1.561948245274891E-5	TEST
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999873224286833	WITHOUT_CLASSIFICATION	1.2677571316713831E-5	TEST
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999994680212169	WITHOUT_CLASSIFICATION	5.319787831197277E-7	TEST
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999990135312037	WITHOUT_CLASSIFICATION	9.86468796294296E-7	TEST
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9999591805810965	WITHOUT_CLASSIFICATION	4.081941890350833E-5	TEST
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9997450743378499	WITHOUT_CLASSIFICATION	2.549256621502013E-4	TEST
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9991701929039478	WITHOUT_CLASSIFICATION	8.29807096052237E-4	TEST
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.999847812781259	WITHOUT_CLASSIFICATION	1.521872187410592E-4	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999653084287771	WITHOUT_CLASSIFICATION	3.469157122298633E-5	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999653084287771	WITHOUT_CLASSIFICATION	3.469157122298633E-5	TEST
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999810181381353	WITHOUT_CLASSIFICATION	1.8981861864627856E-5	TEST
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9995659690442109	WITHOUT_CLASSIFICATION	4.340309557890273E-4	TEST
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999981345895099	WITHOUT_CLASSIFICATION	1.8654104901525175E-6	TEST
// must be a public method	WITHOUT_CLASSIFICATION	0.9999947436248942	WITHOUT_CLASSIFICATION	5.25637510589316E-6	TEST
// must be a public class	WITHOUT_CLASSIFICATION	0.9999965560258165	WITHOUT_CLASSIFICATION	3.4439741836037223E-6	TEST
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.999994001202773	WITHOUT_CLASSIFICATION	5.998797226966168E-6	TEST
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999419629752548	WITHOUT_CLASSIFICATION	5.803702474517494E-5	TEST
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999946270096879	WITHOUT_CLASSIFICATION	5.372990312057647E-6	TEST
// no matching method found	WITHOUT_CLASSIFICATION	0.9999850060665157	WITHOUT_CLASSIFICATION	1.4993933484321272E-5	TEST
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9960616841834662	WITHOUT_CLASSIFICATION	0.003938315816533861	TEST
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999158710289079	WITHOUT_CLASSIFICATION	8.412897109205438E-5	TEST
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9998968820387028	WITHOUT_CLASSIFICATION	1.0311796129722453E-4	TEST
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999544486784714	WITHOUT_CLASSIFICATION	4.555132152864054E-5	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9995582198565621	WITHOUT_CLASSIFICATION	4.4178014343776683E-4	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9995582198565621	WITHOUT_CLASSIFICATION	4.4178014343776683E-4	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999787910600066	WITHOUT_CLASSIFICATION	2.1208939993375903E-5	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999954647007911	WITHOUT_CLASSIFICATION	4.535299208876675E-6	TEST
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9960616841834662	WITHOUT_CLASSIFICATION	0.003938315816533861	TEST
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999843739461561	WITHOUT_CLASSIFICATION	1.5626053843886316E-5	TEST
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999992352925193	WITHOUT_CLASSIFICATION	7.647074806421792E-7	TEST
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999945797266689	WITHOUT_CLASSIFICATION	5.420273331119325E-6	TEST
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999409313794645	WITHOUT_CLASSIFICATION	5.906862053539812E-5	TEST
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.999996928152322	WITHOUT_CLASSIFICATION	3.0718476779834874E-6	TEST
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999852912820228	WITHOUT_CLASSIFICATION	1.470871797719781E-5	TEST
/* package scope */	WITHOUT_CLASSIFICATION	0.9999628499100705	WITHOUT_CLASSIFICATION	3.715008992964583E-5	TEST
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.999956731156168	WITHOUT_CLASSIFICATION	4.3268843831970315E-5	TEST
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999748669053421	WITHOUT_CLASSIFICATION	2.5133094657914422E-5	TEST
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9995182251319584	WITHOUT_CLASSIFICATION	4.817748680415931E-4	TEST
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999820943158036	WITHOUT_CLASSIFICATION	1.7905684196333692E-5	TEST
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.999444850577527	WITHOUT_CLASSIFICATION	5.551494224730581E-4	TEST
// get any included interfaces	WITHOUT_CLASSIFICATION	0.999975338262206	WITHOUT_CLASSIFICATION	2.4661737793936263E-5	TEST
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999920921481543	WITHOUT_CLASSIFICATION	7.907851845711825E-6	TEST
// statically initialized below	WITHOUT_CLASSIFICATION	0.9997812255087224	WITHOUT_CLASSIFICATION	2.18774491277675E-4	TEST
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999848563952973	WITHOUT_CLASSIFICATION	1.514360470270933E-5	TEST
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999887665313695	WITHOUT_CLASSIFICATION	1.1233468630440217E-5	TEST
// should not happen!	WITHOUT_CLASSIFICATION	0.9996083765111228	WITHOUT_CLASSIFICATION	3.916234888772913E-4	TEST
// start class	WITHOUT_CLASSIFICATION	0.9999950164522873	WITHOUT_CLASSIFICATION	4.983547712777522E-6	TEST
// make getter for handler	WITHOUT_CLASSIFICATION	0.9998466136220544	WITHOUT_CLASSIFICATION	1.5338637794551469E-4	TEST
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999279132497788	WITHOUT_CLASSIFICATION	7.208675022115958E-5	TEST
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9871656534792997	WITHOUT_CLASSIFICATION	0.012834346520700214	TEST
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999251082765516	WITHOUT_CLASSIFICATION	7.489172344845054E-5	TEST
// create static private method field	WITHOUT_CLASSIFICATION	0.9999702466635237	WITHOUT_CLASSIFICATION	2.9753336476318546E-5	TEST
// load static empty array	WITHOUT_CLASSIFICATION	0.9999714915337395	WITHOUT_CLASSIFICATION	2.850846626043332E-5	TEST
// box arguments	WITHOUT_CLASSIFICATION	0.9999907817776738	WITHOUT_CLASSIFICATION	9.21822232616793E-6	TEST
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9996474701344644	WITHOUT_CLASSIFICATION	3.5252986553559873E-4	TEST
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999872538315329	WITHOUT_CLASSIFICATION	1.2746168467129938E-5	TEST
// do a void return	WITHOUT_CLASSIFICATION	0.9999922105475841	WITHOUT_CLASSIFICATION	7.789452415844453E-6	TEST
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999750583839453	WITHOUT_CLASSIFICATION	2.494161605470285E-5	TEST
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999843805175472	WITHOUT_CLASSIFICATION	1.561948245274891E-5	TEST
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999606664517686	WITHOUT_CLASSIFICATION	3.933354823135118E-5	TEST
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999986492279545	WITHOUT_CLASSIFICATION	1.350772045610379E-6	TEST
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999677353834483	WITHOUT_CLASSIFICATION	3.226461655165783E-5	TEST
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999675938053849	WITHOUT_CLASSIFICATION	3.2406194615147146E-5	TEST
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999839648407903	WITHOUT_CLASSIFICATION	1.6035159209650168E-5	TEST
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999943922602598	WITHOUT_CLASSIFICATION	5.607739740281674E-6	TEST
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999763331819758	WITHOUT_CLASSIFICATION	2.3666818024167674E-5	TEST
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9995010094934018	WITHOUT_CLASSIFICATION	4.989905065982198E-4	TEST
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9990191710899935	WITHOUT_CLASSIFICATION	9.808289100065898E-4	TEST
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.999957674536149	WITHOUT_CLASSIFICATION	4.232546385091813E-5	TEST
/* NUL */	WITHOUT_CLASSIFICATION	0.999849619183643	WITHOUT_CLASSIFICATION	1.5038081635710562E-4	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9998562212527162	WITHOUT_CLASSIFICATION	1.4377874728371487E-4	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999683260493767	WITHOUT_CLASSIFICATION	3.167395062331118E-5	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999986430957186	WITHOUT_CLASSIFICATION	1.3569042814099252E-6	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9996625109422734	WITHOUT_CLASSIFICATION	3.3748905772658854E-4	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999784452042327	WITHOUT_CLASSIFICATION	2.1554795767296754E-5	TEST
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999914994689272	WITHOUT_CLASSIFICATION	8.500531072835976E-6	TEST
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999672295257339	WITHOUT_CLASSIFICATION	3.2770474266134245E-5	TEST
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.999977913121392	WITHOUT_CLASSIFICATION	2.208687860804017E-5	TEST
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999325945555483	WITHOUT_CLASSIFICATION	6.740544445173606E-5	TEST
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999417619598381	WITHOUT_CLASSIFICATION	5.8238040161896467E-5	TEST
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999664315088543	WITHOUT_CLASSIFICATION	3.356849114569033E-5	TEST
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9998967265683432	WITHOUT_CLASSIFICATION	1.0327343165693886E-4	TEST
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999987114042166	WITHOUT_CLASSIFICATION	1.2885957834381349E-6	TEST
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999722489538342	WITHOUT_CLASSIFICATION	2.7751046165798942E-5	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.999992111580918	WITHOUT_CLASSIFICATION	7.88841908202361E-6	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.999992111580918	WITHOUT_CLASSIFICATION	7.88841908202361E-6	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.999992111580918	WITHOUT_CLASSIFICATION	7.88841908202361E-6	TEST
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999981282306794	WITHOUT_CLASSIFICATION	1.8717693205719657E-6	TEST
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999971644699197	WITHOUT_CLASSIFICATION	2.8355300802278075E-6	TEST
// Single node in list	WITHOUT_CLASSIFICATION	0.9999859412164054	WITHOUT_CLASSIFICATION	1.4058783594626072E-5	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999495109367076	WITHOUT_CLASSIFICATION	5.0489063292319794E-5	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999495109367076	WITHOUT_CLASSIFICATION	5.0489063292319794E-5	TEST
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999721060919845	WITHOUT_CLASSIFICATION	2.7893908015501607E-5	TEST
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999181857397615	WITHOUT_CLASSIFICATION	8.181426023849013E-5	TEST
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999255763793142	WITHOUT_CLASSIFICATION	7.442362068581754E-5	TEST
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999949570909231	WITHOUT_CLASSIFICATION	5.042909076865776E-6	TEST
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999890770865824	WITHOUT_CLASSIFICATION	1.0922913417612431E-5	TEST
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9998651515966747	WITHOUT_CLASSIFICATION	1.3484840332532032E-4	TEST
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999643248248095	WITHOUT_CLASSIFICATION	3.5675175190489204E-5	TEST
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.999991061674888	WITHOUT_CLASSIFICATION	8.938325111894625E-6	TEST
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999930287633056	WITHOUT_CLASSIFICATION	6.971236694323142E-6	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999757678096042	WITHOUT_CLASSIFICATION	2.4232190395818616E-5	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999757678096042	WITHOUT_CLASSIFICATION	2.4232190395818616E-5	TEST
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999277109255419	WITHOUT_CLASSIFICATION	7.228907445808028E-5	TEST
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999810667056921	WITHOUT_CLASSIFICATION	1.8933294307961004E-5	TEST
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.999973706638116	WITHOUT_CLASSIFICATION	2.6293361884014017E-5	TEST
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999693170268006	WITHOUT_CLASSIFICATION	3.068297319949198E-5	TEST
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999758498400348	WITHOUT_CLASSIFICATION	2.41501599651795E-5	TEST
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999836402592183	WITHOUT_CLASSIFICATION	1.63597407816668E-5	TEST
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999592494764522	WITHOUT_CLASSIFICATION	4.075052354768492E-5	TEST
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999592613637763	WITHOUT_CLASSIFICATION	4.0738636223705245E-5	TEST
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999577922012789	WITHOUT_CLASSIFICATION	4.220779872101935E-5	TEST
// POP	WITHOUT_CLASSIFICATION	0.9999577922012789	WITHOUT_CLASSIFICATION	4.220779872101935E-5	TEST
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.999977506083496	WITHOUT_CLASSIFICATION	2.249391650394142E-5	TEST
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999577922012789	WITHOUT_CLASSIFICATION	4.220779872101935E-5	TEST
// SET_P	WITHOUT_CLASSIFICATION	0.9999577922012789	WITHOUT_CLASSIFICATION	4.220779872101935E-5	TEST
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999510983849241	WITHOUT_CLASSIFICATION	4.8901615075914597E-5	TEST
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9997348812099635	WITHOUT_CLASSIFICATION	2.651187900366126E-4	TEST
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999830498529345	WITHOUT_CLASSIFICATION	1.6950147065472246E-5	TEST
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999463945760334	WITHOUT_CLASSIFICATION	5.360542396651192E-5	TEST
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999096272268138	WITHOUT_CLASSIFICATION	9.037277318622515E-5	TEST
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999614025358706	WITHOUT_CLASSIFICATION	3.859746412945013E-5	TEST
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999809197103625	WITHOUT_CLASSIFICATION	1.9080289637558512E-5	TEST
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9999477192350934	WITHOUT_CLASSIFICATION	5.228076490658453E-5	TEST
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999686321153296	WITHOUT_CLASSIFICATION	3.13678846704344E-5	TEST
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999289815522286	WITHOUT_CLASSIFICATION	7.101844777134842E-5	TEST
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999735539576345	WITHOUT_CLASSIFICATION	2.644604236550664E-5	TEST
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999842316593224	WITHOUT_CLASSIFICATION	1.5768340677643897E-5	TEST
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999555503756671	WITHOUT_CLASSIFICATION	4.444962433291656E-5	TEST
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999730427284517	WITHOUT_CLASSIFICATION	2.6957271548226504E-5	TEST
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999058868551346	WITHOUT_CLASSIFICATION	9.411314486529933E-5	TEST
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999912240653557	WITHOUT_CLASSIFICATION	8.77593464433556E-6	TEST
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.999988502499677	WITHOUT_CLASSIFICATION	1.1497500322906166E-5	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.999849619183643	WITHOUT_CLASSIFICATION	1.5038081635710562E-4	TEST
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999829142303369	WITHOUT_CLASSIFICATION	1.7085769663096633E-5	TEST
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999713223494543	WITHOUT_CLASSIFICATION	2.867765054567135E-5	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.999849619183643	WITHOUT_CLASSIFICATION	1.5038081635710562E-4	TEST
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999770143075446	WITHOUT_CLASSIFICATION	2.2985692455449166E-5	TEST
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9997949516246267	WITHOUT_CLASSIFICATION	2.05048375373163E-4	TEST
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9998718720336158	WITHOUT_CLASSIFICATION	1.2812796638415403E-4	TEST
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999698116609466	WITHOUT_CLASSIFICATION	3.0188339053358502E-5	TEST
// documentation nodes	WITHOUT_CLASSIFICATION	0.999954172180985	WITHOUT_CLASSIFICATION	4.582781901492026E-5	TEST
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999968882349844	WITHOUT_CLASSIFICATION	3.111765015650787E-6	TEST
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999911679333868	WITHOUT_CLASSIFICATION	8.83206661304605E-6	TEST
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9996310947694108	WITHOUT_CLASSIFICATION	3.689052305892779E-4	TEST
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999590085310592	WITHOUT_CLASSIFICATION	4.09914689408644E-5	TEST
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999590085310592	WITHOUT_CLASSIFICATION	4.09914689408644E-5	TEST
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999590085310592	WITHOUT_CLASSIFICATION	4.09914689408644E-5	TEST
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999126439969279	WITHOUT_CLASSIFICATION	8.735600307204843E-5	TEST
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9998135021391713	WITHOUT_CLASSIFICATION	1.864978608286593E-4	TEST
/* $@: error position */	WITHOUT_CLASSIFICATION	0.999937815266934	WITHOUT_CLASSIFICATION	6.218473306592381E-5	TEST
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9998294505811964	WITHOUT_CLASSIFICATION	1.705494188036048E-4	TEST
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9998994215281506	WITHOUT_CLASSIFICATION	1.005784718494131E-4	TEST
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9998776339868939	WITHOUT_CLASSIFICATION	1.223660131061894E-4	TEST
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9998834946904821	WITHOUT_CLASSIFICATION	1.1650530951791153E-4	TEST
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999590085310592	WITHOUT_CLASSIFICATION	4.09914689408644E-5	TEST
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999423243531372	WITHOUT_CLASSIFICATION	5.7675646862673546E-5	TEST
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9998925005229299	WITHOUT_CLASSIFICATION	1.0749947707006628E-4	TEST
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999174818749642	WITHOUT_CLASSIFICATION	8.251812503575908E-5	TEST
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999694904047781	WITHOUT_CLASSIFICATION	3.0509595221802895E-5	TEST
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9996472230650655	WITHOUT_CLASSIFICATION	3.52776934934549E-4	TEST
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9996561334006682	WITHOUT_CLASSIFICATION	3.438665993317965E-4	TEST
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999491459690444	WITHOUT_CLASSIFICATION	5.085403095558854E-5	TEST
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9990657204334533	WITHOUT_CLASSIFICATION	9.342795665467791E-4	TEST
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// block (primary)	WITHOUT_CLASSIFICATION	0.9999887976814181	WITHOUT_CLASSIFICATION	1.120231858179242E-5	TEST
// block (expr)	WITHOUT_CLASSIFICATION	0.9999887976814181	WITHOUT_CLASSIFICATION	1.120231858179242E-5	TEST
// hash	WITHOUT_CLASSIFICATION	0.999958278441006	WITHOUT_CLASSIFICATION	4.172155899394842E-5	TEST
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9992575436857497	WITHOUT_CLASSIFICATION	7.424563142503729E-4	TEST
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9999276217484141	WITHOUT_CLASSIFICATION	7.237825158586133E-5	TEST
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999708147549065	WITHOUT_CLASSIFICATION	2.9185245093600013E-5	TEST
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999919951460455	WITHOUT_CLASSIFICATION	8.004853954535906E-6	TEST
// binary	WITHOUT_CLASSIFICATION	0.9999597075444455	WITHOUT_CLASSIFICATION	4.029245555441401E-5	TEST
// decimal	WITHOUT_CLASSIFICATION	0.9999578644224177	WITHOUT_CLASSIFICATION	4.2135577582218736E-5	TEST
//Octal	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.999994754835527	WITHOUT_CLASSIFICATION	5.245164472923527E-6	TEST
// backslash	WITHOUT_CLASSIFICATION	0.9999885907722252	WITHOUT_CLASSIFICATION	1.1409227774806898E-5	TEST
// newline	WITHOUT_CLASSIFICATION	0.9999577922012789	WITHOUT_CLASSIFICATION	4.220779872101935E-5	TEST
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999891692246682	WITHOUT_CLASSIFICATION	1.0830775331774541E-5	TEST
// form feed	WITHOUT_CLASSIFICATION	0.9999889978612727	WITHOUT_CLASSIFICATION	1.1002138727322894E-5	TEST
// vertical tab	WITHOUT_CLASSIFICATION	0.9999891698760425	WITHOUT_CLASSIFICATION	1.083012395746298E-5	TEST
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// escape	WITHOUT_CLASSIFICATION	0.9999577971119389	WITHOUT_CLASSIFICATION	4.22028880611264E-5	TEST
// hex constant	WITHOUT_CLASSIFICATION	0.9999885666764138	WITHOUT_CLASSIFICATION	1.1433323586180156E-5	TEST
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9997741912429989	WITHOUT_CLASSIFICATION	2.2580875700097038E-4	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999956989356121	WITHOUT_CLASSIFICATION	4.301064387856269E-6	TEST
// space	WITHOUT_CLASSIFICATION	0.9999709445587867	WITHOUT_CLASSIFICATION	2.9055441213400195E-5	TEST
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9997052122129974	WITHOUT_CLASSIFICATION	2.9478778700267296E-4	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999657461685217	WITHOUT_CLASSIFICATION	3.425383147823292E-5	TEST
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999913723750256	WITHOUT_CLASSIFICATION	8.627624974470287E-6	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999956989356121	WITHOUT_CLASSIFICATION	4.301064387856269E-6	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9999560418885557	WITHOUT_CLASSIFICATION	4.3958111444398294E-5	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9999560418885557	WITHOUT_CLASSIFICATION	4.3958111444398294E-5	TEST
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.999956435027481	WITHOUT_CLASSIFICATION	4.356497251892649E-5	TEST
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999438912297116	WITHOUT_CLASSIFICATION	5.610877028838142E-5	TEST
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999880848464816	WITHOUT_CLASSIFICATION	1.1915153518298287E-5	TEST
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999424057725753	WITHOUT_CLASSIFICATION	5.7594227424712605E-5	TEST
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999834113637012	WITHOUT_CLASSIFICATION	1.658863629889414E-5	TEST
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999493748069824	WITHOUT_CLASSIFICATION	5.062519301749191E-5	TEST
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.87320837504349	TEST	0.12679162495650995	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9998513104977069	WITHOUT_CLASSIFICATION	1.4868950229312766E-4	TEST
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999162652206371	WITHOUT_CLASSIFICATION	8.373477936287377E-5	TEST
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999339070008068	WITHOUT_CLASSIFICATION	6.609299919327685E-5	TEST
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9998543909732797	WITHOUT_CLASSIFICATION	1.456090267203215E-4	TEST
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9996702267177168	WITHOUT_CLASSIFICATION	3.297732822832258E-4	TEST
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999791142900464	WITHOUT_CLASSIFICATION	2.0885709953658475E-5	TEST
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999848462856502	WITHOUT_CLASSIFICATION	1.5153714349876639E-5	TEST
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9998045809494849	WITHOUT_CLASSIFICATION	1.9541905051501777E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
// line 329	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9992823336758605	WITHOUT_CLASSIFICATION	7.176663241395833E-4	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999700136180337	WITHOUT_CLASSIFICATION	2.9986381966277344E-5	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9998369432064467	WITHOUT_CLASSIFICATION	1.6305679355323958E-4	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999720435632814	WITHOUT_CLASSIFICATION	2.7956436718526452E-5	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999957397008356	WITHOUT_CLASSIFICATION	4.260299164512458E-6	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999885166539969	WITHOUT_CLASSIFICATION	1.1483346003089893E-5	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999886658338217	WITHOUT_CLASSIFICATION	1.1334166178274583E-5	TEST
// line 271	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 274	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 303	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 311	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 314	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 317	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 332	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 338	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 341	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 344	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 358	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 367	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 378	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 407	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 411	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 414	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 434	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 443	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 446	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 452	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 457	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 464	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 467	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 470	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 479	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 484	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 492	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 498	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 501	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 504	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 507	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 510	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 519	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 525	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 556	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 559	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 563	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 569	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 575	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 578	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 587	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 596	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 604	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 607	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 613	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 616	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 634	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 638	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 643	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 646	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 655	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 660	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 667	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 670	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 701	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 717	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 720	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 726	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 729	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 735	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 738	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 751	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 754	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 757	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 760	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 763	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 769	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 775	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 797	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 803	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 806	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 809	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 815	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 818	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 821	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 824	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 830	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 833	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 836	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 852	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 858	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 861	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 868	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 871	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 876	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 879	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 883	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 899	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 903	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 907	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 915	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 920	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 923	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 926	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 936	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 940	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 944	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 948	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 956	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 964	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 967	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 972	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 978	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 984	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 986	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 996	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1001	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1008	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1014	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1029	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1032	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1034	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1045	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1048	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1051	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1058	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1070	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1073	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1076	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1079	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1082	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1089	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1100	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1103	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1107	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1113	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1115	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1119	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1135	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1137	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1151	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1154	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1164	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1175	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1178	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1187	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1189	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1193	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1214	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1234	WITHOUT_CLASSIFICATION	0.9999911411606449	WITHOUT_CLASSIFICATION	8.858839355112853E-6	TEST
// line 1239	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1243	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1263	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1269	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1280	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1283	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1290	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1296	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1299	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1302	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1309	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1313	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1315	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1328	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1335	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1352	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1358	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1374	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1381	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1415	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1431	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1434	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1440	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1443	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1453	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1465	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1477	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1480	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1485	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1488	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1510	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1516	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1533	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1550	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1553	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1556	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1565	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1568	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1571	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1574	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1577	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1587	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1600	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1609	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1623	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1626	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1638	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1641	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1644	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1649	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1655	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1658	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1661	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1672	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1677	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1687	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1694	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1733	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1745	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1757	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1769	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1775	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1784	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1808	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1814	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999413814314556	WITHOUT_CLASSIFICATION	5.861856854424957E-5	TEST
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999210209854801	WITHOUT_CLASSIFICATION	7.897901451987252E-5	TEST
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999153210708477	WITHOUT_CLASSIFICATION	8.467892915227804E-5	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9991032105424182	WITHOUT_CLASSIFICATION	8.967894575818073E-4	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9998155125163163	WITHOUT_CLASSIFICATION	1.8448748368362294E-4	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9994385302087431	WITHOUT_CLASSIFICATION	5.614697912569506E-4	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9994385302087431	WITHOUT_CLASSIFICATION	5.614697912569506E-4	TEST
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9997398299441819	WITHOUT_CLASSIFICATION	2.601700558181611E-4	TEST
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9998096496967477	WITHOUT_CLASSIFICATION	1.9035030325231274E-4	TEST
// line 529	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9998653040100967	WITHOUT_CLASSIFICATION	1.346959899033622E-4	TEST
/* XXX*/	WITHOUT_CLASSIFICATION	0.9998148367228263	WITHOUT_CLASSIFICATION	1.8516327717370786E-4	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999017738944966	WITHOUT_CLASSIFICATION	9.822610550339182E-5	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998046851563104	WITHOUT_CLASSIFICATION	1.9531484368955044E-4	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9998653040100967	WITHOUT_CLASSIFICATION	1.346959899033622E-4	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.999777916411577	WITHOUT_CLASSIFICATION	2.220835884230966E-4	TEST
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.999960968655567	WITHOUT_CLASSIFICATION	3.9031344432936693E-5	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999787637726371	WITHOUT_CLASSIFICATION	2.123622736302474E-5	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9988080723523614	WITHOUT_CLASSIFICATION	0.0011919276476386475	TEST
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999911383526211	WITHOUT_CLASSIFICATION	8.861647378914197E-6	TEST
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999817840817912	WITHOUT_CLASSIFICATION	1.8215918208838408E-5	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999875416903853	WITHOUT_CLASSIFICATION	1.2458309614796344E-5	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999875416903853	WITHOUT_CLASSIFICATION	1.2458309614796344E-5	TEST
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999303399581577	WITHOUT_CLASSIFICATION	6.966004184232433E-5	TEST
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9993302268413787	WITHOUT_CLASSIFICATION	6.697731586212562E-4	TEST
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9998044586392598	WITHOUT_CLASSIFICATION	1.9554136074027782E-4	TEST
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.999982652991979	WITHOUT_CLASSIFICATION	1.7347008021087655E-5	TEST
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9998331262633169	WITHOUT_CLASSIFICATION	1.668737366830124E-4	TEST
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9996592684717915	WITHOUT_CLASSIFICATION	3.4073152820851413E-4	TEST
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999949608816839	WITHOUT_CLASSIFICATION	5.0391183159742906E-6	TEST
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999524290672215	WITHOUT_CLASSIFICATION	4.757093277857603E-5	TEST
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999674937853266	WITHOUT_CLASSIFICATION	3.250621467340338E-5	TEST
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.999962311010678	WITHOUT_CLASSIFICATION	3.768898932191333E-5	TEST
// Parser states:	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.999992779232119	WITHOUT_CLASSIFICATION	7.220767880986402E-6	TEST
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999925461179984	WITHOUT_CLASSIFICATION	7.453882001582024E-6	TEST
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.999770004974652	WITHOUT_CLASSIFICATION	2.299950253480447E-4	TEST
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9998906073538445	WITHOUT_CLASSIFICATION	1.0939264615551748E-4	TEST
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999670564901958	WITHOUT_CLASSIFICATION	3.2943509804201214E-5	TEST
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999494995272481	WITHOUT_CLASSIFICATION	5.050047275181796E-5	TEST
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999641085677853	WITHOUT_CLASSIFICATION	3.589143221460405E-5	TEST
// Node	WITHOUT_CLASSIFICATION	0.9999579539083011	WITHOUT_CLASSIFICATION	4.20460916988122E-5	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9997923164178778	WITHOUT_CLASSIFICATION	2.0768358212220207E-4	TEST
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9994931610226843	WITHOUT_CLASSIFICATION	5.068389773158227E-4	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9997923164178778	WITHOUT_CLASSIFICATION	2.0768358212220207E-4	TEST
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9996263498474521	WITHOUT_CLASSIFICATION	3.7365015254791864E-4	TEST
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9994931610226843	WITHOUT_CLASSIFICATION	5.068389773158227E-4	TEST
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.999971732094849	WITHOUT_CLASSIFICATION	2.826790515096364E-5	TEST
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999590085310592	WITHOUT_CLASSIFICATION	4.09914689408644E-5	TEST
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999913704102603	WITHOUT_CLASSIFICATION	8.629589739660653E-6	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999577922012789	WITHOUT_CLASSIFICATION	4.220779872101935E-5	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999577922012789	WITHOUT_CLASSIFICATION	4.220779872101935E-5	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999577922012789	WITHOUT_CLASSIFICATION	4.220779872101935E-5	TEST
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.999875657559054	WITHOUT_CLASSIFICATION	1.243424409458693E-4	TEST
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9828459198331568	WITHOUT_CLASSIFICATION	0.017154080166843177	TEST
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999702375953748	WITHOUT_CLASSIFICATION	2.9762404625183115E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999700136180337	WITHOUT_CLASSIFICATION	2.9986381966277344E-5	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999720435632814	WITHOUT_CLASSIFICATION	2.7956436718526452E-5	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999957397008356	WITHOUT_CLASSIFICATION	4.260299164512458E-6	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999885166539969	WITHOUT_CLASSIFICATION	1.1483346003089893E-5	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999886658338217	WITHOUT_CLASSIFICATION	1.1334166178274583E-5	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 280	WITHOUT_CLASSIFICATION	0.9999911307389823	WITHOUT_CLASSIFICATION	8.869261017697537E-6	TEST
// line 283	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 296	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 324	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 327	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 331	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 333	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 336	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 342	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 345	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 348	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 354	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 368	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 377	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 388	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 392	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 397	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 429	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 432	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 436	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 445	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 448	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 454	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 459	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 466	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 469	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 478	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 481	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 488	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 494	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 497	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 503	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 506	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 509	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 512	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 521	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 526	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 785	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 534	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 549	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 552	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 558	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 561	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 571	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 574	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 579	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 586	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 589	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 592	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 595	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 598	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 623	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 627	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 630	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 633	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 639	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 648	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 657	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 661	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 666	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 678	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 682	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 688	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 699	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 706	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 708	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 727	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 737	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 753	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 779	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 801	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 808	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 811	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 817	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 899	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 944	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 820	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 826	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 829	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 832	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 851	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 857	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 860	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 863	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 866	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 869	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 875	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 884	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 887	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 890	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 902	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 909	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 912	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 916	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 922	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 928	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 941	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 947	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 951	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 955	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 965	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 969	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 977	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 983	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1013	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1023	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1035	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1041	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1043	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1054	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1057	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1060	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1069	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1075	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1078	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1084	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1087	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1090	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1093	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1114	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1116	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1118	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1124	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1126	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1138	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1144	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1149	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1155	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1162	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1173	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1179	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1182	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1190	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1196	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1213	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1217	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1231	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1236	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1244	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1254	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1258	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1264	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1270	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1273	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1276	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1279	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1282	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1289	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1292	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1295	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1298	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1305	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1308	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1311	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1317	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1323	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1326	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1329	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1337	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1342	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1345	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1354	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1359	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1366	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1369	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1373	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1377	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1383	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1399	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1401	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1406	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1417	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1424	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1427	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1430	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1433	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1436	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1442	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1445	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1458	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1464	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1489	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1493	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1507	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1519	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1532	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1538	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1542	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1557	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1573	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1591	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1607	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1610	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1622	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1625	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1636	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1639	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1647	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1651	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1657	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1660	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1663	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1678	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1702	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1711	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1719	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1722	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1731	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1734	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1738	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1746	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1756	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1758	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1761	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1767	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1776	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1782	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1785	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1788	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1791	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1797	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1800	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1803	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1806	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1809	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1815	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1825	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1828	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1831	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1847	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9994385302087431	WITHOUT_CLASSIFICATION	5.614697912569506E-4	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9994385302087431	WITHOUT_CLASSIFICATION	5.614697912569506E-4	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9998653040100967	WITHOUT_CLASSIFICATION	1.346959899033622E-4	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999017738944966	WITHOUT_CLASSIFICATION	9.822610550339182E-5	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998046851563104	WITHOUT_CLASSIFICATION	1.9531484368955044E-4	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9998653040100967	WITHOUT_CLASSIFICATION	1.346959899033622E-4	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.999777916411577	WITHOUT_CLASSIFICATION	2.220835884230966E-4	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999493748069824	WITHOUT_CLASSIFICATION	5.062519301749191E-5	TEST
// line 1854	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1869	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1872	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1877	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1886	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1898	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1902	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1905	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1911	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1918	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1935	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1938	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1942	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1948	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1960	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1963	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1968	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1972	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1982	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1995	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 2000	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 2006	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 2010	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9998475572099551	WITHOUT_CLASSIFICATION	1.524427900448774E-4	TEST
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9995515827726114	WITHOUT_CLASSIFICATION	4.4841722738865364E-4	TEST
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9998835354123771	WITHOUT_CLASSIFICATION	1.1646458762291109E-4	TEST
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999897336283898	WITHOUT_CLASSIFICATION	1.0266371610168975E-5	TEST
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9998951590336337	WITHOUT_CLASSIFICATION	1.0484096636620913E-4	TEST
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9997972167764754	WITHOUT_CLASSIFICATION	2.0278322352460432E-4	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999787637726371	WITHOUT_CLASSIFICATION	2.123622736302474E-5	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9988080723523614	WITHOUT_CLASSIFICATION	0.0011919276476386475	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999875416903853	WITHOUT_CLASSIFICATION	1.2458309614796344E-5	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999875416903853	WITHOUT_CLASSIFICATION	1.2458309614796344E-5	TEST
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9998841800911697	WITHOUT_CLASSIFICATION	1.1581990883028465E-4	TEST
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999887048038363	WITHOUT_CLASSIFICATION	1.1295196163812136E-5	TEST
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.999976328791909	WITHOUT_CLASSIFICATION	2.3671208090984888E-5	TEST
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999911383526211	WITHOUT_CLASSIFICATION	8.861647378914197E-6	TEST
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999938373520776	WITHOUT_CLASSIFICATION	6.162647922480134E-6	TEST
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9997369891571	WITHOUT_CLASSIFICATION	2.630108429000691E-4	TEST
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999682113502641	WITHOUT_CLASSIFICATION	3.178864973581001E-5	TEST
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999892845091021	WITHOUT_CLASSIFICATION	1.071549089791813E-5	TEST
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.999983599446662	WITHOUT_CLASSIFICATION	1.640055333794858E-5	TEST
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999666401189503	WITHOUT_CLASSIFICATION	3.335988104980082E-5	TEST
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999495846381893	WITHOUT_CLASSIFICATION	5.041536181075095E-5	TEST
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999373621618096	WITHOUT_CLASSIFICATION	6.263783819030593E-5	TEST
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999147711931711	WITHOUT_CLASSIFICATION	8.522880682895712E-5	TEST
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999847176847042	WITHOUT_CLASSIFICATION	1.528231529583025E-5	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999800135940995	WITHOUT_CLASSIFICATION	1.998640590053966E-5	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999800135940995	WITHOUT_CLASSIFICATION	1.998640590053966E-5	TEST
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.999589415874478	WITHOUT_CLASSIFICATION	4.105841255219929E-4	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999907723708578	WITHOUT_CLASSIFICATION	9.22762914216891E-6	TEST
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999931776356155	WITHOUT_CLASSIFICATION	6.822364384526492E-6	TEST
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9996547256697378	WITHOUT_CLASSIFICATION	3.4527433026222167E-4	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999926564500434	WITHOUT_CLASSIFICATION	7.343549956561542E-6	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999828686182347	WITHOUT_CLASSIFICATION	1.7131381765262007E-5	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999916111375575	WITHOUT_CLASSIFICATION	8.38886244250374E-6	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999828686182347	WITHOUT_CLASSIFICATION	1.7131381765262007E-5	TEST
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999266385005081	WITHOUT_CLASSIFICATION	7.336149949195042E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999810067929694	WITHOUT_CLASSIFICATION	1.899320703057669E-5	TEST
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.999773208639856	WITHOUT_CLASSIFICATION	2.2679136014407865E-4	TEST
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.999397989233122	WITHOUT_CLASSIFICATION	6.020107668780323E-4	TEST
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9993031588519644	WITHOUT_CLASSIFICATION	6.968411480355077E-4	TEST
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9993031588519644	WITHOUT_CLASSIFICATION	6.968411480355077E-4	TEST
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999919537696398	WITHOUT_CLASSIFICATION	8.046230360262909E-6	TEST
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999755366167267	WITHOUT_CLASSIFICATION	2.4463383273313907E-5	TEST
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999753785662018	WITHOUT_CLASSIFICATION	2.462143379825235E-5	TEST
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999861109452074	WITHOUT_CLASSIFICATION	1.3889054792519689E-5	TEST
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.999971692769473	WITHOUT_CLASSIFICATION	2.830723052712994E-5	TEST
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9992794171767445	WITHOUT_CLASSIFICATION	7.205828232553944E-4	TEST
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9992794171767445	WITHOUT_CLASSIFICATION	7.205828232553944E-4	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.99826994777888	WITHOUT_CLASSIFICATION	0.0017300522211200341	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9997688851031062	WITHOUT_CLASSIFICATION	2.3111489689367834E-4	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9997688851031062	WITHOUT_CLASSIFICATION	2.3111489689367834E-4	TEST
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999274428168601	WITHOUT_CLASSIFICATION	7.255718313998017E-5	TEST
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9998135635157722	WITHOUT_CLASSIFICATION	1.8643648422769578E-4	TEST
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9998968925108528	WITHOUT_CLASSIFICATION	1.0310748914720398E-4	TEST
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999893996754023	WITHOUT_CLASSIFICATION	1.0600324597717285E-5	TEST
// required and optional only	WITHOUT_CLASSIFICATION	0.999992437442113	WITHOUT_CLASSIFICATION	7.562557887064043E-6	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999828686182347	WITHOUT_CLASSIFICATION	1.7131381765262007E-5	TEST
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999610355120536	WITHOUT_CLASSIFICATION	3.896448794628332E-5	TEST
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999998127588368	WITHOUT_CLASSIFICATION	1.8724116323197947E-7	TEST
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999603177928784	WITHOUT_CLASSIFICATION	3.968220712149068E-5	TEST
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999610355120536	WITHOUT_CLASSIFICATION	3.896448794628332E-5	TEST
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999997449063459	WITHOUT_CLASSIFICATION	2.5509365408315863E-7	TEST
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999934668476788	WITHOUT_CLASSIFICATION	6.5331523213388095E-6	TEST
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999767477466538	WITHOUT_CLASSIFICATION	2.3252253346198272E-5	TEST
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.999751148725425	WITHOUT_CLASSIFICATION	2.488512745749002E-4	TEST
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.99937000023655	WITHOUT_CLASSIFICATION	6.299997634499721E-4	TEST
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999196459677472	WITHOUT_CLASSIFICATION	8.035403225281168E-5	TEST
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999477396308204	WITHOUT_CLASSIFICATION	5.226036917957372E-5	TEST
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999991232876936	WITHOUT_CLASSIFICATION	8.767123064571924E-7	TEST
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9996607082391376	WITHOUT_CLASSIFICATION	3.3929176086241905E-4	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999888202780428	WITHOUT_CLASSIFICATION	1.117972195725766E-5	TEST
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9998471013194535	WITHOUT_CLASSIFICATION	1.5289868054636587E-4	TEST
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999693534513455	WITHOUT_CLASSIFICATION	3.064654865457E-5	TEST
// binary typed calls	WITHOUT_CLASSIFICATION	0.999971620369942	WITHOUT_CLASSIFICATION	2.837963005789786E-5	TEST
// id must always be even	WITHOUT_CLASSIFICATION	0.9999791762439271	WITHOUT_CLASSIFICATION	2.082375607290476E-5	TEST
// with block pass	WITHOUT_CLASSIFICATION	0.9999590441365521	WITHOUT_CLASSIFICATION	4.0955863447951515E-5	TEST
// no block	WITHOUT_CLASSIFICATION	0.9999921047925739	WITHOUT_CLASSIFICATION	7.895207425960829E-6	TEST
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9998891777718374	WITHOUT_CLASSIFICATION	1.1082222816269566E-4	TEST
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9994319079683165	WITHOUT_CLASSIFICATION	5.680920316835182E-4	TEST
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9988626556100076	WITHOUT_CLASSIFICATION	0.0011373443899924136	TEST
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999616888795486	WITHOUT_CLASSIFICATION	3.8311120451435474E-5	TEST
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999780806908263	WITHOUT_CLASSIFICATION	2.191930917371161E-5	TEST
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999633239239897	WITHOUT_CLASSIFICATION	3.66760760104099E-5	TEST
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999336632473356	WITHOUT_CLASSIFICATION	6.633675266441694E-5	TEST
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.99999211841322	WITHOUT_CLASSIFICATION	7.881586779978888E-6	TEST
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9996718951368222	WITHOUT_CLASSIFICATION	3.281048631778736E-4	TEST
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999694187732989	WITHOUT_CLASSIFICATION	3.058122670102148E-5	TEST
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999555982124305	WITHOUT_CLASSIFICATION	4.440178756939402E-5	TEST
// Lastline	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9989673839720029	WITHOUT_CLASSIFICATION	0.0010326160279970661	TEST
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999960701158314	WITHOUT_CLASSIFICATION	3.92988416861254E-6	TEST
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999873668799567	WITHOUT_CLASSIFICATION	1.2633120043296064E-5	TEST
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.99998682482272	WITHOUT_CLASSIFICATION	1.3175177280057435E-5	TEST
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999787331177372	WITHOUT_CLASSIFICATION	2.126688226277275E-5	TEST
// silently ignore	WITHOUT_CLASSIFICATION	0.999989726450354	WITHOUT_CLASSIFICATION	1.0273549645961506E-5	TEST
// used by compiler	WITHOUT_CLASSIFICATION	0.9999896796723813	WITHOUT_CLASSIFICATION	1.032032761874278E-5	TEST
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999955229371629	WITHOUT_CLASSIFICATION	4.477062837045275E-6	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999493748069824	WITHOUT_CLASSIFICATION	5.062519301749191E-5	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9997113534433282	WITHOUT_CLASSIFICATION	2.886465566718147E-4	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999840348232624	WITHOUT_CLASSIFICATION	1.596517673762709E-5	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9998562212527162	WITHOUT_CLASSIFICATION	1.4377874728371487E-4	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999683260493767	WITHOUT_CLASSIFICATION	3.167395062331118E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999810067929694	WITHOUT_CLASSIFICATION	1.899320703057669E-5	TEST
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999864814354037	WITHOUT_CLASSIFICATION	1.3518564596321633E-5	TEST
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999851047978195	WITHOUT_CLASSIFICATION	1.4895202180398788E-5	TEST
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999766725992899	WITHOUT_CLASSIFICATION	2.332740071008497E-5	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999988964707499	WITHOUT_CLASSIFICATION	1.1035292501133213E-6	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999988964707499	WITHOUT_CLASSIFICATION	1.1035292501133213E-6	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999773807740608	WITHOUT_CLASSIFICATION	2.2619225939094658E-5	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999773807740608	WITHOUT_CLASSIFICATION	2.2619225939094658E-5	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999773807740608	WITHOUT_CLASSIFICATION	2.2619225939094658E-5	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999701102106654	WITHOUT_CLASSIFICATION	2.988978933452039E-5	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999701102106654	WITHOUT_CLASSIFICATION	2.988978933452039E-5	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999575904926149	WITHOUT_CLASSIFICATION	4.240950738513987E-5	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999575904926149	WITHOUT_CLASSIFICATION	4.240950738513987E-5	TEST
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9988982621760354	WITHOUT_CLASSIFICATION	0.0011017378239645311	TEST
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9998087059607514	WITHOUT_CLASSIFICATION	1.9129403924867105E-4	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.9999913847037809	WITHOUT_CLASSIFICATION	8.615296219137977E-6	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.9999913847037809	WITHOUT_CLASSIFICATION	8.615296219137977E-6	TEST
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999312210239336	WITHOUT_CLASSIFICATION	6.87789760663252E-5	TEST
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999146984224989	WITHOUT_CLASSIFICATION	8.530157750105989E-5	TEST
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999584759624327	WITHOUT_CLASSIFICATION	4.152403756731366E-5	TEST
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.99996988065807	WITHOUT_CLASSIFICATION	3.0119341929959984E-5	TEST
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999786257658965	WITHOUT_CLASSIFICATION	2.1374234103549397E-5	TEST
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999397134796002	WITHOUT_CLASSIFICATION	6.028652039971192E-5	TEST
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999011735764947	WITHOUT_CLASSIFICATION	9.882642350533236E-5	TEST
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999693405874461	WITHOUT_CLASSIFICATION	3.065941255390253E-5	TEST
// caller	WITHOUT_CLASSIFICATION	0.9999579312032156	WITHOUT_CLASSIFICATION	4.20687967842714E-5	TEST
// calltype // block	WITHOUT_CLASSIFICATION	0.9999887976814181	WITHOUT_CLASSIFICATION	1.120231858179242E-5	TEST
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999902126975387	WITHOUT_CLASSIFICATION	9.787302461168151E-6	TEST
// load arity for check	WITHOUT_CLASSIFICATION	0.99996364728204	WITHOUT_CLASSIFICATION	3.635271796002626E-5	TEST
// throw	WITHOUT_CLASSIFICATION	0.9999624209901133	WITHOUT_CLASSIFICATION	3.7579009886634514E-5	TEST
// load arity for error	WITHOUT_CLASSIFICATION	0.9999582075375035	WITHOUT_CLASSIFICATION	4.179246249645981E-5	TEST
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999714040601998	WITHOUT_CLASSIFICATION	2.859593980018753E-5	TEST
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9995582198565621	WITHOUT_CLASSIFICATION	4.4178014343776683E-4	TEST
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9999144410298523	WITHOUT_CLASSIFICATION	8.555897014773485E-5	TEST
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.999969297369491	WITHOUT_CLASSIFICATION	3.070263050905737E-5	TEST
// InvocationCallback	WITHOUT_CLASSIFICATION	0.999969297369491	WITHOUT_CLASSIFICATION	3.070263050905737E-5	TEST
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9992717483712659	WITHOUT_CLASSIFICATION	7.282516287340572E-4	TEST
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999590251100609	WITHOUT_CLASSIFICATION	4.0974889939204765E-5	TEST
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999312746251116	WITHOUT_CLASSIFICATION	6.872537488839927E-5	TEST
// load the encoding	WITHOUT_CLASSIFICATION	0.9999960029183421	WITHOUT_CLASSIFICATION	3.9970816579520516E-6	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999525161354748	WITHOUT_CLASSIFICATION	4.748386452528919E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999525161354748	WITHOUT_CLASSIFICATION	4.748386452528919E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999525161354748	WITHOUT_CLASSIFICATION	4.748386452528919E-5	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999494374188267	WITHOUT_CLASSIFICATION	5.056258117326992E-5	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999494374188267	WITHOUT_CLASSIFICATION	5.056258117326992E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999494374188267	WITHOUT_CLASSIFICATION	5.056258117326992E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999494374188267	WITHOUT_CLASSIFICATION	5.056258117326992E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999494374188267	WITHOUT_CLASSIFICATION	5.056258117326992E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999949672567374	WITHOUT_CLASSIFICATION	5.032743262591472E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999949672567374	WITHOUT_CLASSIFICATION	5.032743262591472E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999949672567374	WITHOUT_CLASSIFICATION	5.032743262591472E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999949672567374	WITHOUT_CLASSIFICATION	5.032743262591472E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999949672567374	WITHOUT_CLASSIFICATION	5.032743262591472E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999949672567374	WITHOUT_CLASSIFICATION	5.032743262591472E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999949672567374	WITHOUT_CLASSIFICATION	5.032743262591472E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999949672567374	WITHOUT_CLASSIFICATION	5.032743262591472E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999949672567374	WITHOUT_CLASSIFICATION	5.032743262591472E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999949672567374	WITHOUT_CLASSIFICATION	5.032743262591472E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999949672567374	WITHOUT_CLASSIFICATION	5.032743262591472E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999949672567374	WITHOUT_CLASSIFICATION	5.032743262591472E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999949672567374	WITHOUT_CLASSIFICATION	5.032743262591472E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999949672567374	WITHOUT_CLASSIFICATION	5.032743262591472E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999949672567374	WITHOUT_CLASSIFICATION	5.032743262591472E-5	TEST
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999807788428849	WITHOUT_CLASSIFICATION	1.922115711505072E-5	TEST
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.999969297369491	WITHOUT_CLASSIFICATION	3.070263050905737E-5	TEST
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999493748069824	WITHOUT_CLASSIFICATION	5.062519301749191E-5	TEST
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999979797708044	WITHOUT_CLASSIFICATION	2.0202291956259432E-6	TEST
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999493748069824	WITHOUT_CLASSIFICATION	5.062519301749191E-5	TEST
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999804366636976	WITHOUT_CLASSIFICATION	1.9563336302366037E-5	TEST
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999482443733528	WITHOUT_CLASSIFICATION	5.175562664718481E-5	TEST
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999342099888051	WITHOUT_CLASSIFICATION	6.579001119485927E-5	TEST
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9998504518835902	WITHOUT_CLASSIFICATION	1.4954811640973515E-4	TEST
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9997751401356515	WITHOUT_CLASSIFICATION	2.2485986434859335E-4	TEST
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999945990755202	WITHOUT_CLASSIFICATION	5.400924479790088E-6	TEST
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999855294912526	WITHOUT_CLASSIFICATION	1.4470508747259025E-5	TEST
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999973920213219	WITHOUT_CLASSIFICATION	2.607978678073723E-6	TEST
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999275073009756	WITHOUT_CLASSIFICATION	7.249269902439739E-5	TEST
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9962698171848223	WITHOUT_CLASSIFICATION	0.00373018281517764	TEST
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9998492669698866	WITHOUT_CLASSIFICATION	1.507330301133177E-4	TEST
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999946156918528	WITHOUT_CLASSIFICATION	5.384308147182783E-6	TEST
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999933605186817	WITHOUT_CLASSIFICATION	6.63948131840678E-6	TEST
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999973435951742	WITHOUT_CLASSIFICATION	2.656404825746709E-6	TEST
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9988787340593112	WITHOUT_CLASSIFICATION	0.0011212659406888428	TEST
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.999969373588761	WITHOUT_CLASSIFICATION	3.06264112390065E-5	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999916111375575	WITHOUT_CLASSIFICATION	8.38886244250374E-6	TEST
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.997036778295178	WITHOUT_CLASSIFICATION	0.002963221704822054	TEST
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999823511095307	WITHOUT_CLASSIFICATION	1.764889046925538E-5	TEST
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999986781485519	WITHOUT_CLASSIFICATION	1.3218514480777676E-6	TEST
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999922546971661	WITHOUT_CLASSIFICATION	7.745302833941534E-6	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999718405721898	WITHOUT_CLASSIFICATION	2.8159427810190735E-5	TEST
// extension extensions	WITHOUT_CLASSIFICATION	0.9999696739876085	WITHOUT_CLASSIFICATION	3.0326012391478205E-5	TEST
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999500485693815	WITHOUT_CLASSIFICATION	4.995143061849014E-5	TEST
// try all extensions	WITHOUT_CLASSIFICATION	0.9999734349604964	WITHOUT_CLASSIFICATION	2.656503950361621E-5	TEST
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999205728171775	WITHOUT_CLASSIFICATION	7.942718282252903E-5	TEST
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999865187981496	WITHOUT_CLASSIFICATION	1.3481201850374213E-5	TEST
// try only literal search	WITHOUT_CLASSIFICATION	0.9999643314549144	WITHOUT_CLASSIFICATION	3.566854508569545E-5	TEST
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999905217385351	WITHOUT_CLASSIFICATION	9.478261464858287E-6	TEST
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999777003670732	WITHOUT_CLASSIFICATION	2.2299632926661312E-5	TEST
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.999995233675021	WITHOUT_CLASSIFICATION	4.76632497900064E-6	TEST
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999525647623344	WITHOUT_CLASSIFICATION	4.743523766563146E-5	TEST
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999974487005704	WITHOUT_CLASSIFICATION	2.551299429549275E-6	TEST
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999627140219737	WITHOUT_CLASSIFICATION	3.7285978026293124E-5	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999756796886359	WITHOUT_CLASSIFICATION	2.4320311364015294E-5	TEST
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999702303038356	WITHOUT_CLASSIFICATION	2.9769696164313414E-5	TEST
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999721064329936	WITHOUT_CLASSIFICATION	2.7893567006420835E-5	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9997708190227661	WITHOUT_CLASSIFICATION	2.2918097723376713E-4	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9997708190227661	WITHOUT_CLASSIFICATION	2.2918097723376713E-4	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.999901618275684	WITHOUT_CLASSIFICATION	9.838172431603875E-5	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.999901618275684	WITHOUT_CLASSIFICATION	9.838172431603875E-5	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9997702833079883	WITHOUT_CLASSIFICATION	2.2971669201173248E-4	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9997702833079883	WITHOUT_CLASSIFICATION	2.2971669201173248E-4	TEST
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.999970523293512	WITHOUT_CLASSIFICATION	2.9476706487905216E-5	TEST
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999663978792253	WITHOUT_CLASSIFICATION	3.360212077473152E-5	TEST
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9995803706527241	WITHOUT_CLASSIFICATION	4.1962934727582916E-4	TEST
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9997582200734489	WITHOUT_CLASSIFICATION	2.4177992655104955E-4	TEST
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999783181062645	WITHOUT_CLASSIFICATION	2.1681893735442378E-5	TEST
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9986797092864572	WITHOUT_CLASSIFICATION	0.0013202907135428223	TEST
// signed short, native	WITHOUT_CLASSIFICATION	0.99996937621348	WITHOUT_CLASSIFICATION	3.0623786520018705E-5	TEST
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999915582247464	WITHOUT_CLASSIFICATION	8.441775253529014E-6	TEST
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999434051673991	WITHOUT_CLASSIFICATION	5.659483260092042E-5	TEST
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9983832305050054	WITHOUT_CLASSIFICATION	0.0016167694949945066	TEST
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9996031449836571	WITHOUT_CLASSIFICATION	3.968550163429278E-4	TEST
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999628046334753	WITHOUT_CLASSIFICATION	3.719536652465805E-5	TEST
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999969971949207	WITHOUT_CLASSIFICATION	3.0028050792768753E-6	TEST
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999997428531963	WITHOUT_CLASSIFICATION	2.5714680371702683E-7	TEST
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999013645813535	WITHOUT_CLASSIFICATION	9.863541864643209E-5	TEST
//            write('S');	WITHOUT_CLASSIFICATION	0.9999786365216058	WITHOUT_CLASSIFICATION	2.1363478394211403E-5	TEST
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999934869882842	WITHOUT_CLASSIFICATION	6.513011715787976E-6	TEST
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999857088534723	WITHOUT_CLASSIFICATION	1.4291146527598817E-5	TEST
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.999840922682775	WITHOUT_CLASSIFICATION	1.5907731722499625E-4	TEST
// w_symbol	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// w_unique	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999587519167134	WITHOUT_CLASSIFICATION	4.124808328667047E-5	TEST
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999780806789872	WITHOUT_CLASSIFICATION	2.1919321012896432E-5	TEST
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999259799379447	WITHOUT_CLASSIFICATION	7.402006205530135E-5	TEST
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999781750797956	WITHOUT_CLASSIFICATION	2.1824920204427566E-5	TEST
// sic	WITHOUT_CLASSIFICATION	0.9999577922012789	WITHOUT_CLASSIFICATION	4.220779872101935E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999940549218567	WITHOUT_CLASSIFICATION	5.945078143308809E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999940549218567	WITHOUT_CLASSIFICATION	5.945078143308809E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999940549218567	WITHOUT_CLASSIFICATION	5.945078143308809E-5	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999996986207784	WITHOUT_CLASSIFICATION	3.013792215387166E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999996986207784	WITHOUT_CLASSIFICATION	3.013792215387166E-7	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999888202780428	WITHOUT_CLASSIFICATION	1.117972195725766E-5	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999888202780428	WITHOUT_CLASSIFICATION	1.117972195725766E-5	TEST
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999925785286389	WITHOUT_CLASSIFICATION	7.4214713610632325E-6	TEST
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9999677347482964	WITHOUT_CLASSIFICATION	3.2265251703618035E-5	TEST
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999693658334821	WITHOUT_CLASSIFICATION	3.063416651792376E-5	TEST
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999698703169074	WITHOUT_CLASSIFICATION	3.0129683092588667E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999940549218567	WITHOUT_CLASSIFICATION	5.945078143308809E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999940549218567	WITHOUT_CLASSIFICATION	5.945078143308809E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999940549218567	WITHOUT_CLASSIFICATION	5.945078143308809E-5	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999996986207784	WITHOUT_CLASSIFICATION	3.013792215387166E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999996986207784	WITHOUT_CLASSIFICATION	3.013792215387166E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999996986207784	WITHOUT_CLASSIFICATION	3.013792215387166E-7	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999888202780428	WITHOUT_CLASSIFICATION	1.117972195725766E-5	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999888202780428	WITHOUT_CLASSIFICATION	1.117972195725766E-5	TEST
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999709228949674	WITHOUT_CLASSIFICATION	2.9077105032551686E-5	TEST
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999891372930867	WITHOUT_CLASSIFICATION	1.0862706913247086E-5	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999919743522464	WITHOUT_CLASSIFICATION	8.025647753471797E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999919743522464	WITHOUT_CLASSIFICATION	8.025647753471797E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999919743522464	WITHOUT_CLASSIFICATION	8.025647753471797E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999919743522464	WITHOUT_CLASSIFICATION	8.025647753471797E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999919743522464	WITHOUT_CLASSIFICATION	8.025647753471797E-6	TEST
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999715501267429	WITHOUT_CLASSIFICATION	2.8449873257101814E-5	TEST
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9998675665889737	WITHOUT_CLASSIFICATION	1.3243341102623407E-4	TEST
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999881666558027	WITHOUT_CLASSIFICATION	1.1833344197334278E-5	TEST
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999739586327419	WITHOUT_CLASSIFICATION	2.6041367258073294E-5	TEST
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999689414935911	WITHOUT_CLASSIFICATION	3.10585064089701E-5	TEST
// not enough bytes	WITHOUT_CLASSIFICATION	0.9999755489248089	WITHOUT_CLASSIFICATION	2.4451075191118455E-5	TEST
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999880536691934	WITHOUT_CLASSIFICATION	1.194633080647142E-5	TEST
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999909266500836	WITHOUT_CLASSIFICATION	9.073349916365134E-6	TEST
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999407284452358	WITHOUT_CLASSIFICATION	5.927155476426877E-5	TEST
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999342731373427	WITHOUT_CLASSIFICATION	6.572686265731139E-5	TEST
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9997528724121668	WITHOUT_CLASSIFICATION	2.471275878331803E-4	TEST
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999744565048633	WITHOUT_CLASSIFICATION	2.5543495136734154E-5	TEST
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999734895954016	WITHOUT_CLASSIFICATION	2.6510404598472115E-5	TEST
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999307582737896	WITHOUT_CLASSIFICATION	6.924172621030193E-5	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999883488259714	WITHOUT_CLASSIFICATION	1.1651174028499013E-5	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999883488259714	WITHOUT_CLASSIFICATION	1.1651174028499013E-5	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999883488259714	WITHOUT_CLASSIFICATION	1.1651174028499013E-5	TEST
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9983826115215427	WITHOUT_CLASSIFICATION	0.0016173884784571994	TEST
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9983826115215427	WITHOUT_CLASSIFICATION	0.0016173884784571994	TEST
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.999988564617977	WITHOUT_CLASSIFICATION	1.1435382023073242E-5	TEST
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999265997854007	WITHOUT_CLASSIFICATION	7.34002145993906E-5	TEST
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999583774637493	WITHOUT_CLASSIFICATION	4.16225362506991E-5	TEST
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999583774637493	WITHOUT_CLASSIFICATION	4.16225362506991E-5	TEST
// single precision, native	WITHOUT_CLASSIFICATION	0.9999747594581276	WITHOUT_CLASSIFICATION	2.5240541872292576E-5	TEST
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999583810308097	WITHOUT_CLASSIFICATION	4.161896919025797E-5	TEST
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999598802794754	WITHOUT_CLASSIFICATION	4.011972052457823E-5	TEST
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999598802794754	WITHOUT_CLASSIFICATION	4.011972052457823E-5	TEST
// double precision, native	WITHOUT_CLASSIFICATION	0.9999756708029344	WITHOUT_CLASSIFICATION	2.4329197065687228E-5	TEST
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.999969373588761	WITHOUT_CLASSIFICATION	3.06264112390065E-5	TEST
// signed char	WITHOUT_CLASSIFICATION	0.999988608720619	WITHOUT_CLASSIFICATION	1.1391279380953608E-5	TEST
// unsigned char	WITHOUT_CLASSIFICATION	0.9999886048594462	WITHOUT_CLASSIFICATION	1.1395140553736835E-5	TEST
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999693050250731	WITHOUT_CLASSIFICATION	3.0694974926860706E-5	TEST
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999884985852658	WITHOUT_CLASSIFICATION	1.150141473425677E-5	TEST
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999698628023094	WITHOUT_CLASSIFICATION	3.013719769054651E-5	TEST
// int, native	WITHOUT_CLASSIFICATION	0.9999887075884735	WITHOUT_CLASSIFICATION	1.1292411526510417E-5	TEST
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.999949410504142	WITHOUT_CLASSIFICATION	5.0589495857925425E-5	TEST
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999142504462596	WITHOUT_CLASSIFICATION	8.574955374046462E-5	TEST
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999771382511006	WITHOUT_CLASSIFICATION	2.2861748899442433E-5	TEST
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9999568219531588	WITHOUT_CLASSIFICATION	4.3178046841232016E-5	TEST
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.999969297369491	WITHOUT_CLASSIFICATION	3.070263050905737E-5	TEST
// obtain a	WITHOUT_CLASSIFICATION	0.999991100561631	WITHOUT_CLASSIFICATION	8.899438369016187E-6	TEST
// obtain b	WITHOUT_CLASSIFICATION	0.9999885715147833	WITHOUT_CLASSIFICATION	1.1428485216774152E-5	TEST
// obtain c	WITHOUT_CLASSIFICATION	0.9999898383010394	WITHOUT_CLASSIFICATION	1.016169896068689E-5	TEST
// obtain d	WITHOUT_CLASSIFICATION	0.9999885079102284	WITHOUT_CLASSIFICATION	1.1492089771692344E-5	TEST
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9995367551786607	WITHOUT_CLASSIFICATION	4.632448213393373E-4	TEST
/* 1 */	WITHOUT_CLASSIFICATION	0.9998571217357747	WITHOUT_CLASSIFICATION	1.4287826422537954E-4	TEST
/* 2 */	WITHOUT_CLASSIFICATION	0.9998725284654881	WITHOUT_CLASSIFICATION	1.2747153451189884E-4	TEST
/* 3 */	WITHOUT_CLASSIFICATION	0.999858322248192	WITHOUT_CLASSIFICATION	1.416777518078827E-4	TEST
/* 4 */	WITHOUT_CLASSIFICATION	0.9998703508021164	WITHOUT_CLASSIFICATION	1.296491978836945E-4	TEST
/* 5 */	WITHOUT_CLASSIFICATION	0.9998552733240132	WITHOUT_CLASSIFICATION	1.4472667598671902E-4	TEST
/* 6 */	WITHOUT_CLASSIFICATION	0.9998607246325245	WITHOUT_CLASSIFICATION	1.3927536747537002E-4	TEST
/* 7 */	WITHOUT_CLASSIFICATION	0.9998499426029795	WITHOUT_CLASSIFICATION	1.5005739702043117E-4	TEST
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999316168427006	WITHOUT_CLASSIFICATION	6.838315729942185E-5	TEST
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.999919048058723	WITHOUT_CLASSIFICATION	8.095194127695862E-5	TEST
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999988022299756	WITHOUT_CLASSIFICATION	1.1977700244250535E-6	TEST
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9399458771713368	TEST	0.06005412282866313	WITHOUT_CLASSIFICATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999911679654986	WITHOUT_CLASSIFICATION	8.832034501454702E-6	TEST
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999972214900965	WITHOUT_CLASSIFICATION	2.7785099035399536E-6	TEST
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999345914367658	WITHOUT_CLASSIFICATION	6.540856323422821E-5	TEST
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999621627266202	WITHOUT_CLASSIFICATION	3.783727337989898E-5	TEST
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.99989762564913	WITHOUT_CLASSIFICATION	1.0237435087003402E-4	TEST
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9995223055624166	WITHOUT_CLASSIFICATION	4.7769443758345046E-4	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9991366687853601	WITHOUT_CLASSIFICATION	8.633312146399126E-4	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9991366687853601	WITHOUT_CLASSIFICATION	8.633312146399126E-4	TEST
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9989976668400432	WITHOUT_CLASSIFICATION	0.001002333159956716	TEST
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999822151350338	WITHOUT_CLASSIFICATION	1.7784864966214953E-5	TEST
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9995223055624166	WITHOUT_CLASSIFICATION	4.7769443758345046E-4	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.998786060066824	WITHOUT_CLASSIFICATION	0.0012139399331759604	TEST
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.999763106907653	WITHOUT_CLASSIFICATION	2.3689309234697865E-4	TEST
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9998147410174489	WITHOUT_CLASSIFICATION	1.852589825511396E-4	TEST
// are we recursing?	WITHOUT_CLASSIFICATION	0.9999843755602066	WITHOUT_CLASSIFICATION	1.5624439793454118E-5	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999826497012866	WITHOUT_CLASSIFICATION	1.735029871344523E-5	TEST
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999939385529945	WITHOUT_CLASSIFICATION	6.061447005579655E-6	TEST
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999894567581159	WITHOUT_CLASSIFICATION	1.0543241884097017E-5	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999965039082832	WITHOUT_CLASSIFICATION	3.4960917168297042E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999965039082832	WITHOUT_CLASSIFICATION	3.4960917168297042E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999965039082832	WITHOUT_CLASSIFICATION	3.4960917168297042E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999965039082832	WITHOUT_CLASSIFICATION	3.4960917168297042E-6	TEST
// try both	WITHOUT_CLASSIFICATION	0.9999890443707418	WITHOUT_CLASSIFICATION	1.095562925833399E-5	TEST
// just unix	WITHOUT_CLASSIFICATION	0.9999922086310538	WITHOUT_CLASSIFICATION	7.791368946223111E-6	TEST
// just windows	WITHOUT_CLASSIFICATION	0.9999951441958694	WITHOUT_CLASSIFICATION	4.855804130568814E-6	TEST
// neither	WITHOUT_CLASSIFICATION	0.9999577953567689	WITHOUT_CLASSIFICATION	4.22046432311466E-5	TEST
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9998287919086519	WITHOUT_CLASSIFICATION	1.7120809134802024E-4	TEST
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999552856049353	WITHOUT_CLASSIFICATION	4.47143950646187E-5	TEST
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999912213586383	WITHOUT_CLASSIFICATION	8.778641361833146E-6	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999826311629838	WITHOUT_CLASSIFICATION	1.736883701626461E-5	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999826311629838	WITHOUT_CLASSIFICATION	1.736883701626461E-5	TEST
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999868048695649	WITHOUT_CLASSIFICATION	1.3195130434957963E-5	TEST
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999817620217811	WITHOUT_CLASSIFICATION	1.8237978218933843E-5	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9992799989151084	WITHOUT_CLASSIFICATION	7.200010848916318E-4	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999912724656679	WITHOUT_CLASSIFICATION	8.727534332192827E-6	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999912724656679	WITHOUT_CLASSIFICATION	8.727534332192827E-6	TEST
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999868641531573	WITHOUT_CLASSIFICATION	1.3135846842637991E-5	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.99999156880291	WITHOUT_CLASSIFICATION	8.431197090011994E-6	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.99999156880291	WITHOUT_CLASSIFICATION	8.431197090011994E-6	TEST
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9991683369963911	WITHOUT_CLASSIFICATION	8.316630036088624E-4	TEST
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999866401875054	WITHOUT_CLASSIFICATION	1.3359812494567888E-5	TEST
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999940511639007	WITHOUT_CLASSIFICATION	5.948836099312438E-6	TEST
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9997461888772474	WITHOUT_CLASSIFICATION	2.5381112275259574E-4	TEST
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999480656324764	WITHOUT_CLASSIFICATION	5.193436752349075E-5	TEST
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.999997575678901	WITHOUT_CLASSIFICATION	2.4243210989393827E-6	TEST
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9996633130018809	WITHOUT_CLASSIFICATION	3.3668699811905664E-4	TEST
//sequential	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999898156750374	WITHOUT_CLASSIFICATION	1.0184324962662186E-5	TEST
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999626911521887	WITHOUT_CLASSIFICATION	3.7308847811246537E-5	TEST
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999583246975957	WITHOUT_CLASSIFICATION	4.167530240431104E-5	TEST
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9280794499356148	WITHOUT_CLASSIFICATION	0.07192055006438516	TEST
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9394549184998964	WITHOUT_CLASSIFICATION	0.06054508150010363	TEST
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999932708615558	WITHOUT_CLASSIFICATION	6.729138444339926E-6	TEST
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999782203602392	WITHOUT_CLASSIFICATION	2.1779639760785966E-5	TEST
// Args	WITHOUT_CLASSIFICATION	0.9999577980499018	WITHOUT_CLASSIFICATION	4.2201950098080015E-5	TEST
// static methods only	WITHOUT_CLASSIFICATION	0.9999691416331838	WITHOUT_CLASSIFICATION	3.085836681609505E-5	TEST
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9994183935450933	WITHOUT_CLASSIFICATION	5.816064549066324E-4	TEST
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999895806127772	WITHOUT_CLASSIFICATION	1.0419387222756672E-5	TEST
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999645618145981	WITHOUT_CLASSIFICATION	3.543818540188915E-5	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999911829438213	WITHOUT_CLASSIFICATION	8.817056178744208E-6	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999872630990233	WITHOUT_CLASSIFICATION	1.2736900976770416E-5	TEST
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999511938001254	WITHOUT_CLASSIFICATION	4.880619987455809E-5	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999862674655194	WITHOUT_CLASSIFICATION	1.3732534480657785E-5	TEST
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9999524809544391	WITHOUT_CLASSIFICATION	4.751904556079433E-5	TEST
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999983349237623	WITHOUT_CLASSIFICATION	1.6650762377249126E-6	TEST
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999408675042284	WITHOUT_CLASSIFICATION	5.913249577152177E-5	TEST
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999987921849881	WITHOUT_CLASSIFICATION	1.20781501180151E-6	TEST
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999258998085409	WITHOUT_CLASSIFICATION	7.410019145918855E-5	TEST
// ..	WITHOUT_CLASSIFICATION	0.9999578215302479	WITHOUT_CLASSIFICATION	4.217846975216195E-5	TEST
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999531599654705	WITHOUT_CLASSIFICATION	4.684003452946472E-5	TEST
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9999083273859957	WITHOUT_CLASSIFICATION	9.167261400425183E-5	TEST
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999702598812557	WITHOUT_CLASSIFICATION	2.9740118744420024E-5	TEST
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999995251905512	WITHOUT_CLASSIFICATION	4.7480944881126736E-7	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9994824120198889	WITHOUT_CLASSIFICATION	5.17587980111209E-4	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999791773863069	WITHOUT_CLASSIFICATION	2.082261369307564E-5	TEST
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9994183935450933	WITHOUT_CLASSIFICATION	5.816064549066324E-4	TEST
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9994225465910845	WITHOUT_CLASSIFICATION	5.774534089155834E-4	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9994824120198889	WITHOUT_CLASSIFICATION	5.17587980111209E-4	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999791773863069	WITHOUT_CLASSIFICATION	2.082261369307564E-5	TEST
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.999927480794625	WITHOUT_CLASSIFICATION	7.251920537500045E-5	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9998918735744909	WITHOUT_CLASSIFICATION	1.0812642550901365E-4	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9998918735744909	WITHOUT_CLASSIFICATION	1.0812642550901365E-4	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999324361165949	WITHOUT_CLASSIFICATION	6.756388340519159E-5	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999743001329209	WITHOUT_CLASSIFICATION	2.5699867079107183E-5	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999793583453052	WITHOUT_CLASSIFICATION	2.0641654694748634E-5	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999930714746977	WITHOUT_CLASSIFICATION	6.9285253022616505E-6	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9997352252701949	WITHOUT_CLASSIFICATION	2.647747298051778E-4	TEST
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9998766300559465	WITHOUT_CLASSIFICATION	1.2336994405340578E-4	TEST
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999767448111408	WITHOUT_CLASSIFICATION	2.3255188859095524E-5	TEST
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999587964123557	WITHOUT_CLASSIFICATION	4.120358764431309E-5	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999476325413964	WITHOUT_CLASSIFICATION	5.2367458603699993E-5	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9999577922012789	WITHOUT_CLASSIFICATION	4.220779872101935E-5	TEST
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999004314724371	WITHOUT_CLASSIFICATION	9.956852756286954E-5	TEST
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999641623072814	WITHOUT_CLASSIFICATION	3.583769271855746E-5	TEST
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999849243537285	WITHOUT_CLASSIFICATION	1.5075646271502977E-5	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999780783442457	WITHOUT_CLASSIFICATION	2.1921655754247475E-5	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999780783442457	WITHOUT_CLASSIFICATION	2.1921655754247475E-5	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9997570263941622	WITHOUT_CLASSIFICATION	2.4297360583774424E-4	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9997570263941622	WITHOUT_CLASSIFICATION	2.4297360583774424E-4	TEST
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999634547996546	WITHOUT_CLASSIFICATION	3.6545200345317156E-5	TEST
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999943159480028	WITHOUT_CLASSIFICATION	5.684051997174754E-6	TEST
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999518847206138	WITHOUT_CLASSIFICATION	4.811527938628763E-5	TEST
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9994183935450933	WITHOUT_CLASSIFICATION	5.816064549066324E-4	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999793583453052	WITHOUT_CLASSIFICATION	2.0641654694748634E-5	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999930714746977	WITHOUT_CLASSIFICATION	6.9285253022616505E-6	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999476325413964	WITHOUT_CLASSIFICATION	5.2367458603699993E-5	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9999577922012789	WITHOUT_CLASSIFICATION	4.220779872101935E-5	TEST
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999874873479668	WITHOUT_CLASSIFICATION	1.2512652033246114E-5	TEST
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999902277908282	WITHOUT_CLASSIFICATION	9.77220917172944E-6	TEST
// \v	WITHOUT_CLASSIFICATION	0.9999577922012789	WITHOUT_CLASSIFICATION	4.220779872101935E-5	TEST
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999886048594462	WITHOUT_CLASSIFICATION	1.1395140553736835E-5	TEST
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.999963913545077	WITHOUT_CLASSIFICATION	3.608645492294411E-5	TEST
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999308082985107	WITHOUT_CLASSIFICATION	6.919170148928576E-5	TEST
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9997923651148982	WITHOUT_CLASSIFICATION	2.0763488510171807E-4	TEST
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999885087436299	WITHOUT_CLASSIFICATION	1.1491256370078555E-5	TEST
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999923041348192	WITHOUT_CLASSIFICATION	7.69586518069479E-6	TEST
// negative values	WITHOUT_CLASSIFICATION	0.9999914851074289	WITHOUT_CLASSIFICATION	8.514892571090526E-6	TEST
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999959566785924	WITHOUT_CLASSIFICATION	4.043321407652465E-6	TEST
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.99878579601296	WITHOUT_CLASSIFICATION	0.001214203987039985	TEST
// no such luck...	WITHOUT_CLASSIFICATION	0.9999919974880139	WITHOUT_CLASSIFICATION	8.002511986070422E-6	TEST
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9998310470060736	WITHOUT_CLASSIFICATION	1.689529939263634E-4	TEST
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999866108487027	WITHOUT_CLASSIFICATION	1.3389151297238211E-5	TEST
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999770542508369	WITHOUT_CLASSIFICATION	2.294574916303943E-5	TEST
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999158853742806	WITHOUT_CLASSIFICATION	8.411462571940474E-5	TEST
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9998482569221994	WITHOUT_CLASSIFICATION	1.5174307780059824E-4	TEST
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9998970411647591	WITHOUT_CLASSIFICATION	1.0295883524081572E-4	TEST
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.999969297369491	WITHOUT_CLASSIFICATION	3.070263050905737E-5	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.999969297369491	WITHOUT_CLASSIFICATION	3.070263050905737E-5	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.999969297369491	WITHOUT_CLASSIFICATION	3.070263050905737E-5	TEST
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9996522271792783	WITHOUT_CLASSIFICATION	3.4777282072180003E-4	TEST
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999590085310592	WITHOUT_CLASSIFICATION	4.09914689408644E-5	TEST
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999991478393047	WITHOUT_CLASSIFICATION	8.521606953290926E-7	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9994183935450933	WITHOUT_CLASSIFICATION	5.816064549066324E-4	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9994183935450933	WITHOUT_CLASSIFICATION	5.816064549066324E-4	TEST
// \v	WITHOUT_CLASSIFICATION	0.9999577922012789	WITHOUT_CLASSIFICATION	4.220779872101935E-5	TEST
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9992717483712659	WITHOUT_CLASSIFICATION	7.282516287340572E-4	TEST
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9994183935450933	WITHOUT_CLASSIFICATION	5.816064549066324E-4	TEST
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9994183935450933	WITHOUT_CLASSIFICATION	5.816064549066324E-4	TEST
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9994183935450933	WITHOUT_CLASSIFICATION	5.816064549066324E-4	TEST
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9994183935450933	WITHOUT_CLASSIFICATION	5.816064549066324E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9994183935450933	WITHOUT_CLASSIFICATION	5.816064549066324E-4	TEST
// no number	WITHOUT_CLASSIFICATION	0.9999924463506296	WITHOUT_CLASSIFICATION	7.55364937043325E-6	TEST
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999906446268632	WITHOUT_CLASSIFICATION	9.355373136903509E-6	TEST
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9980453884448233	WITHOUT_CLASSIFICATION	0.0019546115551767307	TEST
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9998640448533415	WITHOUT_CLASSIFICATION	1.3595514665860328E-4	TEST
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999969129492781	WITHOUT_CLASSIFICATION	3.0870507219569943E-6	TEST
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999939166370665	WITHOUT_CLASSIFICATION	6.083362933438299E-6	TEST
// goto next bucket	WITHOUT_CLASSIFICATION	0.999990255962962	WITHOUT_CLASSIFICATION	9.74403703809865E-6	TEST
// we reached the end	WITHOUT_CLASSIFICATION	0.9999881264296033	WITHOUT_CLASSIFICATION	1.1873570396720536E-5	TEST
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999637423193796	WITHOUT_CLASSIFICATION	3.625768062044892E-5	TEST
// states	WITHOUT_CLASSIFICATION	0.999959331377967	WITHOUT_CLASSIFICATION	4.066862203291846E-5	TEST
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9998117558058885	WITHOUT_CLASSIFICATION	1.8824419411142185E-4	TEST
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999876850626193	WITHOUT_CLASSIFICATION	1.2314937380674209E-5	TEST
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999990308448546	WITHOUT_CLASSIFICATION	9.691551452978206E-7	TEST
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999596222664292	WITHOUT_CLASSIFICATION	4.037773357069016E-5	TEST
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999925377954514	WITHOUT_CLASSIFICATION	7.4622045487156805E-6	TEST
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.999933371540494	WITHOUT_CLASSIFICATION	6.66284595059312E-5	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999882195605887	WITHOUT_CLASSIFICATION	1.1780439411289938E-5	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999560807910228	WITHOUT_CLASSIFICATION	4.391920897724117E-5	TEST
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.999975790878698	WITHOUT_CLASSIFICATION	2.420912130191327E-5	TEST
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999733546414948	WITHOUT_CLASSIFICATION	2.6645358505243988E-5	TEST
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999995728456795	WITHOUT_CLASSIFICATION	4.271543204908332E-7	TEST
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999959745808987	WITHOUT_CLASSIFICATION	4.025419101348808E-6	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998733722303643	WITHOUT_CLASSIFICATION	1.266277696355672E-4	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998733722303643	WITHOUT_CLASSIFICATION	1.266277696355672E-4	TEST
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999646140891124	WITHOUT_CLASSIFICATION	3.538591088764446E-5	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999896558043284	WITHOUT_CLASSIFICATION	1.0344195671636523E-5	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999896558043284	WITHOUT_CLASSIFICATION	1.0344195671636523E-5	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999942141449009	WITHOUT_CLASSIFICATION	5.785855099150782E-6	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999942141449009	WITHOUT_CLASSIFICATION	5.785855099150782E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999832970036041	WITHOUT_CLASSIFICATION	1.6702996395880904E-5	TEST
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999858498440418	WITHOUT_CLASSIFICATION	1.4150155958178184E-5	TEST
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999959222322803	WITHOUT_CLASSIFICATION	4.077767719742242E-6	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999814945235571	WITHOUT_CLASSIFICATION	1.850547644289194E-5	TEST
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999822724102535	WITHOUT_CLASSIFICATION	1.7727589746468892E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999589000396566	WITHOUT_CLASSIFICATION	4.1099960343449424E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999589000396566	WITHOUT_CLASSIFICATION	4.1099960343449424E-5	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999882195605887	WITHOUT_CLASSIFICATION	1.1780439411289938E-5	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999882195605887	WITHOUT_CLASSIFICATION	1.1780439411289938E-5	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999882195605887	WITHOUT_CLASSIFICATION	1.1780439411289938E-5	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999560807910228	WITHOUT_CLASSIFICATION	4.391920897724117E-5	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998733722303643	WITHOUT_CLASSIFICATION	1.266277696355672E-4	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998733722303643	WITHOUT_CLASSIFICATION	1.266277696355672E-4	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998733722303643	WITHOUT_CLASSIFICATION	1.266277696355672E-4	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999832970036041	WITHOUT_CLASSIFICATION	1.6702996395880904E-5	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999832970036041	WITHOUT_CLASSIFICATION	1.6702996395880904E-5	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999832970036041	WITHOUT_CLASSIFICATION	1.6702996395880904E-5	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999814945235571	WITHOUT_CLASSIFICATION	1.850547644289194E-5	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999814945235571	WITHOUT_CLASSIFICATION	1.850547644289194E-5	TEST
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999891810210442	WITHOUT_CLASSIFICATION	1.0818978955818731E-5	TEST
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999285991830837	WITHOUT_CLASSIFICATION	7.140081691628873E-5	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999376547251886	WITHOUT_CLASSIFICATION	6.234527481139607E-5	TEST
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9974018836734888	WITHOUT_CLASSIFICATION	0.0025981163265111334	TEST
// no digits, error	WITHOUT_CLASSIFICATION	0.9999953149324958	WITHOUT_CLASSIFICATION	4.685067504135292E-6	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999853743051034	WITHOUT_CLASSIFICATION	1.462569489663992E-5	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999853743051034	WITHOUT_CLASSIFICATION	1.462569489663992E-5	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999670901295623	WITHOUT_CLASSIFICATION	3.29098704377391E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999305237671479	WITHOUT_CLASSIFICATION	6.947623285204741E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999305237671479	WITHOUT_CLASSIFICATION	6.947623285204741E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999305237671479	WITHOUT_CLASSIFICATION	6.947623285204741E-5	TEST
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999914184865709	WITHOUT_CLASSIFICATION	8.581513429134812E-6	TEST
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999740058311958	WITHOUT_CLASSIFICATION	2.599416880425133E-5	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999560807910228	WITHOUT_CLASSIFICATION	4.391920897724117E-5	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999832970036041	WITHOUT_CLASSIFICATION	1.6702996395880904E-5	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999832970036041	WITHOUT_CLASSIFICATION	1.6702996395880904E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999305237671479	WITHOUT_CLASSIFICATION	6.947623285204741E-5	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999670901295623	WITHOUT_CLASSIFICATION	3.29098704377391E-5	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999411028262623	WITHOUT_CLASSIFICATION	5.8897173737789565E-5	TEST
// switch //while	WITHOUT_CLASSIFICATION	0.9999884999360226	WITHOUT_CLASSIFICATION	1.1500063977373748E-5	TEST
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999959678979574	WITHOUT_CLASSIFICATION	4.032102042509365E-6	TEST
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.99999416380099	WITHOUT_CLASSIFICATION	5.8361990099086896E-6	TEST
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.999969297369491	WITHOUT_CLASSIFICATION	3.070263050905737E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.999728135311446	WITHOUT_CLASSIFICATION	2.718646885540027E-4	TEST
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999873568635047	WITHOUT_CLASSIFICATION	1.264313649521461E-5	TEST
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.999969297369491	WITHOUT_CLASSIFICATION	3.070263050905737E-5	TEST
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999224564607045	WITHOUT_CLASSIFICATION	7.754353929540918E-5	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999950023929958	WITHOUT_CLASSIFICATION	4.99760700423345E-6	TEST
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999353643779721	WITHOUT_CLASSIFICATION	6.463562202791294E-5	TEST
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999684818246309	WITHOUT_CLASSIFICATION	3.151817536911048E-5	TEST
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999488929201111	WITHOUT_CLASSIFICATION	5.110707988897397E-5	TEST
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999831784747558	WITHOUT_CLASSIFICATION	1.6821525244240185E-5	TEST
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999937487146904	WITHOUT_CLASSIFICATION	6.2512853096735264E-6	TEST
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999920683480896	WITHOUT_CLASSIFICATION	7.931651910330268E-6	TEST
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999499609178013	WITHOUT_CLASSIFICATION	5.0039082198584656E-5	TEST
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9995582198565621	WITHOUT_CLASSIFICATION	4.4178014343776683E-4	TEST
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999855234608185	WITHOUT_CLASSIFICATION	1.4476539181589923E-5	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9995479206078903	WITHOUT_CLASSIFICATION	4.5207939210954647E-4	TEST
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9993343446823543	WITHOUT_CLASSIFICATION	6.656553176456589E-4	TEST
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999166244645437	WITHOUT_CLASSIFICATION	8.337553545643647E-5	TEST
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999969400363448	WITHOUT_CLASSIFICATION	3.059963655129677E-6	TEST
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999264120203638	WITHOUT_CLASSIFICATION	7.358797963616026E-5	TEST
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9988213714872589	WITHOUT_CLASSIFICATION	0.0011786285127410776	TEST
// unread back	WITHOUT_CLASSIFICATION	0.9999887537312298	WITHOUT_CLASSIFICATION	1.124626877021419E-5	TEST
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999841721422513	WITHOUT_CLASSIFICATION	1.582785774861233E-5	TEST
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999894157559642	WITHOUT_CLASSIFICATION	1.0584244035719235E-5	TEST
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999880989205289	WITHOUT_CLASSIFICATION	1.1901079471125913E-5	TEST
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999929853736075	WITHOUT_CLASSIFICATION	7.014626392588266E-6	TEST
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999993535685353	WITHOUT_CLASSIFICATION	6.464314647548425E-7	TEST
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999686475261832	WITHOUT_CLASSIFICATION	3.135247381678661E-5	TEST
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999939323884928	WITHOUT_CLASSIFICATION	6.067611507230507E-6	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999411028262623	WITHOUT_CLASSIFICATION	5.8897173737789565E-5	TEST
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.999985905754055	WITHOUT_CLASSIFICATION	1.4094245944946322E-5	TEST
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999659979418779	WITHOUT_CLASSIFICATION	3.4002058122073924E-5	TEST
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999448843860328	WITHOUT_CLASSIFICATION	5.5115613967072526E-5	TEST
// silence	WITHOUT_CLASSIFICATION	0.9999577922012789	WITHOUT_CLASSIFICATION	4.220779872101935E-5	TEST
// silence	WITHOUT_CLASSIFICATION	0.9999577922012789	WITHOUT_CLASSIFICATION	4.220779872101935E-5	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.9999917274535389	WITHOUT_CLASSIFICATION	8.272546461105629E-6	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.9999917274535389	WITHOUT_CLASSIFICATION	8.272546461105629E-6	TEST
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.999934801639586	WITHOUT_CLASSIFICATION	6.519836041399785E-5	TEST
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.999881515346175	WITHOUT_CLASSIFICATION	1.1848465382502023E-4	TEST
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999769974049931	WITHOUT_CLASSIFICATION	2.300259500691266E-5	TEST
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9998860034463435	WITHOUT_CLASSIFICATION	1.1399655365661701E-4	TEST
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.999968306793115	WITHOUT_CLASSIFICATION	3.169320688497981E-5	TEST
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999782168894943	WITHOUT_CLASSIFICATION	2.1783110505743795E-5	TEST
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999906877098842	WITHOUT_CLASSIFICATION	9.312290115815975E-6	TEST
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999928199122279	WITHOUT_CLASSIFICATION	7.1800877721963695E-6	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999980253123893	WITHOUT_CLASSIFICATION	1.9746876106541306E-6	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.999924950604681	WITHOUT_CLASSIFICATION	7.504939531896142E-5	TEST
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999456579599679	WITHOUT_CLASSIFICATION	5.434204003207637E-5	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.999988855231085	WITHOUT_CLASSIFICATION	1.1144768915057395E-5	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.999988855231085	WITHOUT_CLASSIFICATION	1.1144768915057395E-5	TEST
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.999906247365116	WITHOUT_CLASSIFICATION	9.375263488397607E-5	TEST
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999807038925019	WITHOUT_CLASSIFICATION	1.929610749797685E-5	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999670064209863	WITHOUT_CLASSIFICATION	3.2993579013725753E-5	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999670064209863	WITHOUT_CLASSIFICATION	3.2993579013725753E-5	TEST
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999835229326842	WITHOUT_CLASSIFICATION	1.647706731579996E-5	TEST
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999849471222886	WITHOUT_CLASSIFICATION	1.505287771151154E-5	TEST
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999242766121696	WITHOUT_CLASSIFICATION	7.572338783033175E-5	TEST
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999531973408475	WITHOUT_CLASSIFICATION	4.6802659152572934E-5	TEST
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999784526418941	WITHOUT_CLASSIFICATION	2.1547358105912432E-5	TEST
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9998223168320373	WITHOUT_CLASSIFICATION	1.7768316796276085E-4	TEST
// save the ungot	WITHOUT_CLASSIFICATION	0.999996700639226	WITHOUT_CLASSIFICATION	3.299360774077987E-6	TEST
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999727421935396	WITHOUT_CLASSIFICATION	2.7257806460446756E-5	TEST
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.999975032533007	WITHOUT_CLASSIFICATION	2.4967466993064942E-5	TEST
// flush first	WITHOUT_CLASSIFICATION	0.9999914539583471	WITHOUT_CLASSIFICATION	8.546041652819232E-6	TEST
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9998636087402188	WITHOUT_CLASSIFICATION	1.3639125978113899E-4	TEST
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999025697448517	WITHOUT_CLASSIFICATION	9.743025514825484E-5	TEST
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999603330898895	WITHOUT_CLASSIFICATION	3.9666910110438546E-5	TEST
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999067579474775	WITHOUT_CLASSIFICATION	9.324205252246328E-5	TEST
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999855955826794	WITHOUT_CLASSIFICATION	1.440441732060329E-5	TEST
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9994516632993947	WITHOUT_CLASSIFICATION	5.483367006053957E-4	TEST
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999816779980494	WITHOUT_CLASSIFICATION	1.8322001950603956E-5	TEST
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999797154388875	WITHOUT_CLASSIFICATION	2.0284561112502264E-5	TEST
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999498890959987	WITHOUT_CLASSIFICATION	5.0110904001274337E-5	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9998599534322365	WITHOUT_CLASSIFICATION	1.400465677634147E-4	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9529787487670768	WITHOUT_CLASSIFICATION	0.04702125123292327	TEST
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999849212607306	WITHOUT_CLASSIFICATION	1.5078739269545201E-5	TEST
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999859017792265	WITHOUT_CLASSIFICATION	1.409822077341991E-5	TEST
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999651960277015	WITHOUT_CLASSIFICATION	3.4803972298567646E-5	TEST
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999838597318904	WITHOUT_CLASSIFICATION	1.614026810954228E-5	TEST
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999798671330297	WITHOUT_CLASSIFICATION	2.013286697039563E-5	TEST
// else leave it null	WITHOUT_CLASSIFICATION	0.9999348833277403	WITHOUT_CLASSIFICATION	6.511667225976015E-5	TEST
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999794937870807	WITHOUT_CLASSIFICATION	2.0506212919305783E-5	TEST
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999842047156443	WITHOUT_CLASSIFICATION	1.5795284355697023E-5	TEST
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999943662499943	WITHOUT_CLASSIFICATION	5.6337500056321195E-6	TEST
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999955743805035	WITHOUT_CLASSIFICATION	4.425619496542754E-6	TEST
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999945344036424	WITHOUT_CLASSIFICATION	5.465596357657473E-6	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999967868295847	WITHOUT_CLASSIFICATION	3.213170415255618E-6	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999967868295847	WITHOUT_CLASSIFICATION	3.213170415255618E-6	TEST
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999920570009394	WITHOUT_CLASSIFICATION	7.942999060572951E-6	TEST
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999995927893097	WITHOUT_CLASSIFICATION	4.07210690273455E-7	TEST
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9992764390286935	WITHOUT_CLASSIFICATION	7.235609713066468E-4	TEST
// Init	WITHOUT_CLASSIFICATION	0.9999578573233467	WITHOUT_CLASSIFICATION	4.214267665317722E-5	TEST
// Block	WITHOUT_CLASSIFICATION	0.9999577941823342	WITHOUT_CLASSIFICATION	4.220581766580953E-5	TEST
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999852870480601	WITHOUT_CLASSIFICATION	1.4712951939837859E-5	TEST
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9976407165304061	WITHOUT_CLASSIFICATION	0.002359283469593946	TEST
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9976407165304061	WITHOUT_CLASSIFICATION	0.002359283469593946	TEST
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9992076900416019	WITHOUT_CLASSIFICATION	7.923099583981661E-4	TEST
// ok	WITHOUT_CLASSIFICATION	0.9999640776425008	WITHOUT_CLASSIFICATION	3.592235749924226E-5	TEST
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999623716737605	WITHOUT_CLASSIFICATION	3.7628326239505794E-5	TEST
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9990070830753739	WITHOUT_CLASSIFICATION	9.92916924626171E-4	TEST
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9998522406267935	WITHOUT_CLASSIFICATION	1.477593732065306E-4	TEST
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9992784293581892	WITHOUT_CLASSIFICATION	7.21570641810806E-4	TEST
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999957156541299	WITHOUT_CLASSIFICATION	4.284345870060993E-6	TEST
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999903011635043	WITHOUT_CLASSIFICATION	9.698836495811464E-6	TEST
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9995334853416415	WITHOUT_CLASSIFICATION	4.6651465835837976E-4	TEST
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999783913725361	WITHOUT_CLASSIFICATION	2.1608627463968838E-5	TEST
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9999904715202975	WITHOUT_CLASSIFICATION	9.528479702478524E-6	TEST
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999771449901097	WITHOUT_CLASSIFICATION	2.2855009890297732E-5	TEST
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999467309448097	WITHOUT_CLASSIFICATION	5.326905519036525E-5	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999972106065551	WITHOUT_CLASSIFICATION	2.7893934448262784E-6	TEST
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999686284718265	WITHOUT_CLASSIFICATION	3.13715281733518E-5	TEST
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9998182522802861	WITHOUT_CLASSIFICATION	1.8174771971392513E-4	TEST
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9997492270755749	WITHOUT_CLASSIFICATION	2.507729244251218E-4	TEST
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999619161525602	WITHOUT_CLASSIFICATION	3.808384743965819E-5	TEST
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999819982823319	WITHOUT_CLASSIFICATION	1.8001717667993144E-5	TEST
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999647738075311	WITHOUT_CLASSIFICATION	3.522619246888139E-5	TEST
// void methods should work	WITHOUT_CLASSIFICATION	0.9999208455586162	WITHOUT_CLASSIFICATION	7.915444138384689E-5	TEST
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999370928104411	WITHOUT_CLASSIFICATION	6.290718955893586E-5	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9998352263410053	WITHOUT_CLASSIFICATION	1.647736589947341E-4	TEST
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999637933940545	WITHOUT_CLASSIFICATION	3.620660594549726E-5	TEST
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999703742516695	WITHOUT_CLASSIFICATION	2.9625748330589056E-5	TEST
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999493748069824	WITHOUT_CLASSIFICATION	5.062519301749191E-5	TEST
//        int n = 10;	WITHOUT_CLASSIFICATION	0.999989612919544	WITHOUT_CLASSIFICATION	1.0387080456017134E-5	TEST
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9991015444193353	WITHOUT_CLASSIFICATION	8.984555806646463E-4	TEST
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9995582198565621	WITHOUT_CLASSIFICATION	4.4178014343776683E-4	TEST
// value equality	WITHOUT_CLASSIFICATION	0.999990569078311	WITHOUT_CLASSIFICATION	9.430921688973817E-6	TEST
// identity equality	WITHOUT_CLASSIFICATION	0.999988833623143	WITHOUT_CLASSIFICATION	1.1166376857059583E-5	TEST
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999493748069824	WITHOUT_CLASSIFICATION	5.062519301749191E-5	TEST
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999885192654161	WITHOUT_CLASSIFICATION	1.148073458394462E-5	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.999969297369491	WITHOUT_CLASSIFICATION	3.070263050905737E-5	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.999969297369491	WITHOUT_CLASSIFICATION	3.070263050905737E-5	TEST
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.999969297369491	WITHOUT_CLASSIFICATION	3.070263050905737E-5	TEST
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999313005718359	WITHOUT_CLASSIFICATION	6.869942816410366E-5	TEST
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999885055609684	WITHOUT_CLASSIFICATION	1.1494439031607081E-5	TEST
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999120722259642	WITHOUT_CLASSIFICATION	8.792777403577677E-5	TEST
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9998991240313562	WITHOUT_CLASSIFICATION	1.0087596864383138E-4	TEST
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999776817749512	WITHOUT_CLASSIFICATION	2.2318225048824694E-5	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999884867063454	WITHOUT_CLASSIFICATION	1.151329365454952E-5	TEST
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999881924884204	WITHOUT_CLASSIFICATION	1.1807511579668748E-5	TEST
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999630134108006	WITHOUT_CLASSIFICATION	3.69865891993507E-5	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999991959949416	WITHOUT_CLASSIFICATION	8.040050584731763E-7	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9992717483712659	WITHOUT_CLASSIFICATION	7.282516287340572E-4	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999529563158518	WITHOUT_CLASSIFICATION	4.704368414817539E-5	TEST
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999668416703077	WITHOUT_CLASSIFICATION	3.315832969229411E-5	TEST
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999969800001709	WITHOUT_CLASSIFICATION	3.0199998290680832E-6	TEST
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.999991160162385	WITHOUT_CLASSIFICATION	8.839837614971657E-6	TEST
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9999571503242216	WITHOUT_CLASSIFICATION	4.284967577831865E-5	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999975200245572	WITHOUT_CLASSIFICATION	2.479975442725568E-6	TEST
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9995582198565621	WITHOUT_CLASSIFICATION	4.4178014343776683E-4	TEST
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999971644038183	WITHOUT_CLASSIFICATION	2.8355961817059503E-6	TEST
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9997974668513061	WITHOUT_CLASSIFICATION	2.0253314869396068E-4	TEST
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999822944668388	WITHOUT_CLASSIFICATION	1.7705533161138317E-5	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9998782669351154	WITHOUT_CLASSIFICATION	1.2173306488470634E-4	TEST
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999987841218403	WITHOUT_CLASSIFICATION	1.2158781596507637E-6	TEST
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999951248599739	WITHOUT_CLASSIFICATION	4.87514002618536E-6	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999647907977185	WITHOUT_CLASSIFICATION	3.520920228144534E-5	TEST
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999371327787291	WITHOUT_CLASSIFICATION	6.286722127090127E-5	TEST
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999200753223452	WITHOUT_CLASSIFICATION	7.992467765490925E-5	TEST
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999880068442735	WITHOUT_CLASSIFICATION	1.199315572657995E-5	TEST
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.999963642122125	WITHOUT_CLASSIFICATION	3.6357877875138093E-5	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999705952074641	WITHOUT_CLASSIFICATION	2.94047925357866E-5	TEST
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.999963642122125	WITHOUT_CLASSIFICATION	3.6357877875138093E-5	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.999992611596058	WITHOUT_CLASSIFICATION	7.3884039420174476E-6	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999705952074641	WITHOUT_CLASSIFICATION	2.94047925357866E-5	TEST
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9973708985271776	WITHOUT_CLASSIFICATION	0.0026291014728223204	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999862674655194	WITHOUT_CLASSIFICATION	1.3732534480657785E-5	TEST
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.99986611744518	WITHOUT_CLASSIFICATION	1.3388255482002374E-4	TEST
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9808330832080514	WITHOUT_CLASSIFICATION	0.01916691679194869	TEST
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999808798865063	WITHOUT_CLASSIFICATION	1.912011349372557E-5	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999919743522464	WITHOUT_CLASSIFICATION	8.025647753471797E-6	TEST
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999503195145195	WITHOUT_CLASSIFICATION	4.9680485480470886E-5	TEST
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9992855497777928	WITHOUT_CLASSIFICATION	7.14450222207168E-4	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999743001329209	WITHOUT_CLASSIFICATION	2.5699867079107183E-5	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9998599534322365	WITHOUT_CLASSIFICATION	1.400465677634147E-4	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999376547251886	WITHOUT_CLASSIFICATION	6.234527481139607E-5	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999928418931123	WITHOUT_CLASSIFICATION	7.15810688764855E-6	TEST
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999943869395548	WITHOUT_CLASSIFICATION	5.613060445129704E-6	TEST
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999621197418288	WITHOUT_CLASSIFICATION	3.788025817128707E-5	TEST
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999493748069824	WITHOUT_CLASSIFICATION	5.062519301749191E-5	TEST
// switch // while	WITHOUT_CLASSIFICATION	0.9999892228845524	WITHOUT_CLASSIFICATION	1.0777115447620346E-5	TEST
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9993943290684485	WITHOUT_CLASSIFICATION	6.056709315515141E-4	TEST
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999186315949062	WITHOUT_CLASSIFICATION	8.13684050937815E-5	TEST
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999971460038494	WITHOUT_CLASSIFICATION	2.8539961506564932E-6	TEST
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999711521427798	WITHOUT_CLASSIFICATION	2.884785722021713E-5	TEST
// expected	WITHOUT_CLASSIFICATION	0.9999898027263402	WITHOUT_CLASSIFICATION	1.019727365976466E-5	TEST
// Do nothing	WITHOUT_CLASSIFICATION	0.9999921254340088	WITHOUT_CLASSIFICATION	7.874565991158217E-6	TEST
// constructor	WITHOUT_CLASSIFICATION	0.9999852188811036	WITHOUT_CLASSIFICATION	1.4781118896417695E-5	TEST
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999052230452272	WITHOUT_CLASSIFICATION	9.477695477278865E-5	TEST
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999368543921564	WITHOUT_CLASSIFICATION	6.314560784356672E-5	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9998464425863861	WITHOUT_CLASSIFICATION	1.5355741361396387E-4	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999000492210578	WITHOUT_CLASSIFICATION	9.995077894227275E-5	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999818386474129	WITHOUT_CLASSIFICATION	1.816135258705387E-5	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999818386474129	WITHOUT_CLASSIFICATION	1.816135258705387E-5	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.99998035668951	WITHOUT_CLASSIFICATION	1.9643310490018944E-5	TEST
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999919703219654	WITHOUT_CLASSIFICATION	8.029678034597173E-6	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999973407821475	WITHOUT_CLASSIFICATION	2.6592178524057485E-6	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9979603415078455	WITHOUT_CLASSIFICATION	0.0020396584921545105	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9979603415078455	WITHOUT_CLASSIFICATION	0.0020396584921545105	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9979603415078455	WITHOUT_CLASSIFICATION	0.0020396584921545105	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9979603415078455	WITHOUT_CLASSIFICATION	0.0020396584921545105	TEST
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999846432745544	WITHOUT_CLASSIFICATION	1.53567254456317E-5	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999717547047577	WITHOUT_CLASSIFICATION	2.8245295242349233E-5	TEST
// "else" body	WITHOUT_CLASSIFICATION	0.9999889345293612	WITHOUT_CLASSIFICATION	1.1065470638774583E-5	TEST
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9998769036483228	WITHOUT_CLASSIFICATION	1.230963516772216E-4	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9995795070920646	WITHOUT_CLASSIFICATION	4.204929079354183E-4	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9993675562221702	WITHOUT_CLASSIFICATION	6.324437778297661E-4	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9993675562221702	WITHOUT_CLASSIFICATION	6.324437778297661E-4	TEST
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999871872598953	WITHOUT_CLASSIFICATION	1.2812740104600156E-5	TEST
/* 10! */	WITHOUT_CLASSIFICATION	0.999849619183643	WITHOUT_CLASSIFICATION	1.5038081635710562E-4	TEST
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999651114111293	WITHOUT_CLASSIFICATION	3.488858887077747E-5	TEST
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9999348307640301	WITHOUT_CLASSIFICATION	6.516923596986173E-5	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9998504238008239	WITHOUT_CLASSIFICATION	1.495761991759965E-4	TEST
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999713688723134	WITHOUT_CLASSIFICATION	2.8631127686652966E-5	TEST
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999997471992377	WITHOUT_CLASSIFICATION	2.52800762367968E-7	TEST
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9996414741922186	WITHOUT_CLASSIFICATION	3.5852580778135835E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.999992611596058	WITHOUT_CLASSIFICATION	7.3884039420174476E-6	TEST
// line 449	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 495	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// Management/monitoring	WITHOUT_CLASSIFICATION	0.999969297369491	WITHOUT_CLASSIFICATION	3.070263050905737E-5	TEST
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999982456426867	WITHOUT_CLASSIFICATION	1.754357313216479E-6	TEST
/* 14! */	WITHOUT_CLASSIFICATION	0.999849619183643	WITHOUT_CLASSIFICATION	1.5038081635710562E-4	TEST
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999229792469799	WITHOUT_CLASSIFICATION	7.70207530201633E-5	TEST
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999852042746606	WITHOUT_CLASSIFICATION	1.4795725339303147E-5	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999880436570571	WITHOUT_CLASSIFICATION	1.1956342942873252E-5	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999880436570571	WITHOUT_CLASSIFICATION	1.1956342942873252E-5	TEST
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999651114111293	WITHOUT_CLASSIFICATION	3.488858887077747E-5	TEST
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999993755719544	WITHOUT_CLASSIFICATION	6.244280455577619E-7	TEST
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9997550258892819	WITHOUT_CLASSIFICATION	2.449741107180661E-4	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999885498480985	WITHOUT_CLASSIFICATION	1.1450151901557878E-5	TEST
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999867967624022	WITHOUT_CLASSIFICATION	1.3203237597892648E-5	TEST
/* 18! */	WITHOUT_CLASSIFICATION	0.999849619183643	WITHOUT_CLASSIFICATION	1.5038081635710562E-4	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999465451877492	WITHOUT_CLASSIFICATION	5.345481225074443E-5	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999738930956515	WITHOUT_CLASSIFICATION	2.610690434841414E-5	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999738930956515	WITHOUT_CLASSIFICATION	2.610690434841414E-5	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999738930956515	WITHOUT_CLASSIFICATION	2.610690434841414E-5	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999738930956515	WITHOUT_CLASSIFICATION	2.610690434841414E-5	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999723656361649	WITHOUT_CLASSIFICATION	2.7634363835042247E-5	TEST
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999951245118461	WITHOUT_CLASSIFICATION	4.875488153903523E-6	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999578117484553	WITHOUT_CLASSIFICATION	4.2188251544772096E-5	TEST
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999070361305818	WITHOUT_CLASSIFICATION	9.296386941810934E-5	TEST
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999756593872049	WITHOUT_CLASSIFICATION	2.4340612795127654E-5	TEST
/* 22! */	WITHOUT_CLASSIFICATION	0.999849619183643	WITHOUT_CLASSIFICATION	1.5038081635710562E-4	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999820681423802	WITHOUT_CLASSIFICATION	1.793185761986541E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999357725652016	WITHOUT_CLASSIFICATION	6.422743479839685E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999357725652016	WITHOUT_CLASSIFICATION	6.422743479839685E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999357725652016	WITHOUT_CLASSIFICATION	6.422743479839685E-5	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9997704203949499	WITHOUT_CLASSIFICATION	2.295796050501285E-4	TEST
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999958068614774	WITHOUT_CLASSIFICATION	4.193138522680921E-6	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9998722877271184	WITHOUT_CLASSIFICATION	1.2771227288161776E-4	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9998722877271184	WITHOUT_CLASSIFICATION	1.2771227288161776E-4	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.9999577922012789	WITHOUT_CLASSIFICATION	4.220779872101935E-5	TEST
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999525274177	WITHOUT_CLASSIFICATION	4.747258235635444E-8	TEST
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.999817814887647	WITHOUT_CLASSIFICATION	1.8218511235298165E-4	TEST
// BASE64	WITHOUT_CLASSIFICATION	0.9999577922012789	WITHOUT_CLASSIFICATION	4.220779872101935E-5	TEST
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999977538120275	WITHOUT_CLASSIFICATION	2.246187972567683E-6	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999957207473302	WITHOUT_CLASSIFICATION	4.279252669830361E-6	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999629139878904	WITHOUT_CLASSIFICATION	3.7086012109618264E-5	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999629139878904	WITHOUT_CLASSIFICATION	3.7086012109618264E-5	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999824838532242	WITHOUT_CLASSIFICATION	1.7516146775783516E-5	TEST
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999988029615805	WITHOUT_CLASSIFICATION	1.1970384195853303E-6	TEST
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.999997192222832	WITHOUT_CLASSIFICATION	2.807777167997616E-6	TEST
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9996329435410801	WITHOUT_CLASSIFICATION	3.670564589197938E-4	TEST
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9999421363893088	WITHOUT_CLASSIFICATION	5.786361069120102E-5	TEST
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999961400668718	WITHOUT_CLASSIFICATION	3.859933128274157E-6	TEST
// carriage return	WITHOUT_CLASSIFICATION	0.9999928415855961	WITHOUT_CLASSIFICATION	7.158414403986472E-6	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9998369432064467	WITHOUT_CLASSIFICATION	1.6305679355323958E-4	TEST
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.999998340467462	WITHOUT_CLASSIFICATION	1.6595325380023497E-6	TEST
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999895464701276	WITHOUT_CLASSIFICATION	1.0453529872487189E-5	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999890491104089	WITHOUT_CLASSIFICATION	1.0950889591096335E-5	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999701151255327	WITHOUT_CLASSIFICATION	2.988487446735074E-5	TEST
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999601040866336	WITHOUT_CLASSIFICATION	3.989591336640905E-5	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999935458234932	WITHOUT_CLASSIFICATION	6.454176506888442E-6	TEST
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999799345257524	WITHOUT_CLASSIFICATION	2.006547424749474E-5	TEST
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999997919560122	WITHOUT_CLASSIFICATION	2.080439878134538E-7	TEST
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999884593095744	WITHOUT_CLASSIFICATION	1.1540690425649684E-5	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999946992053638	WITHOUT_CLASSIFICATION	5.300794636136869E-6	TEST
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999771884241849	WITHOUT_CLASSIFICATION	2.281157581513325E-5	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999990089056515	WITHOUT_CLASSIFICATION	9.910943484793207E-7	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.999989615435158	WITHOUT_CLASSIFICATION	1.0384564841979778E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999895368386121	WITHOUT_CLASSIFICATION	1.0463161387785214E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999895368386121	WITHOUT_CLASSIFICATION	1.0463161387785214E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999895368386121	WITHOUT_CLASSIFICATION	1.0463161387785214E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999895368386121	WITHOUT_CLASSIFICATION	1.0463161387785214E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999895368386121	WITHOUT_CLASSIFICATION	1.0463161387785214E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999895368386121	WITHOUT_CLASSIFICATION	1.0463161387785214E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999895368386121	WITHOUT_CLASSIFICATION	1.0463161387785214E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999895368386121	WITHOUT_CLASSIFICATION	1.0463161387785214E-5	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9998703945004814	WITHOUT_CLASSIFICATION	1.2960549951854865E-4	TEST
/* fall through */	WITHOUT_CLASSIFICATION	0.9999636501437601	WITHOUT_CLASSIFICATION	3.6349856239831127E-5	TEST
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9988588464527702	WITHOUT_CLASSIFICATION	0.001141153547229745	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.999790320926243	WITHOUT_CLASSIFICATION	2.0967907375690295E-4	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999884867063454	WITHOUT_CLASSIFICATION	1.151329365454952E-5	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999884867063454	WITHOUT_CLASSIFICATION	1.151329365454952E-5	TEST
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.99996230486077	WITHOUT_CLASSIFICATION	3.769513922995814E-5	TEST
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999947413088226	WITHOUT_CLASSIFICATION	5.258691177349513E-6	TEST
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999478293348718	WITHOUT_CLASSIFICATION	5.2170665128110056E-5	TEST
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999786549737902	WITHOUT_CLASSIFICATION	2.1345026209770834E-5	TEST
// get current context	WITHOUT_CLASSIFICATION	0.9999861488797407	WITHOUT_CLASSIFICATION	1.3851120259231865E-5	TEST
// octal constant	WITHOUT_CLASSIFICATION	0.9999885633401312	WITHOUT_CLASSIFICATION	1.1436659868846663E-5	TEST
// read	WITHOUT_CLASSIFICATION	0.9999535870232727	WITHOUT_CLASSIFICATION	4.641297672725966E-5	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999671266770989	WITHOUT_CLASSIFICATION	3.287332290122912E-5	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.999941806321123	WITHOUT_CLASSIFICATION	5.819367887698401E-5	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999963018052117	WITHOUT_CLASSIFICATION	3.6981947883799775E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999963018052117	WITHOUT_CLASSIFICATION	3.6981947883799775E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999963018052117	WITHOUT_CLASSIFICATION	3.6981947883799775E-6	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999689598455946	WITHOUT_CLASSIFICATION	3.104015440537892E-5	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999441269380519	WITHOUT_CLASSIFICATION	5.587306194807288E-5	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9998806542886379	WITHOUT_CLASSIFICATION	1.1934571136210613E-4	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999777866461915	WITHOUT_CLASSIFICATION	2.221335380839644E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999725358351625	WITHOUT_CLASSIFICATION	2.7464164837423418E-5	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999954934519393	WITHOUT_CLASSIFICATION	4.506548060774482E-6	TEST
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999789126237525	WITHOUT_CLASSIFICATION	2.108737624741228E-5	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9998520859063745	WITHOUT_CLASSIFICATION	1.4791409362546054E-4	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9998520859063745	WITHOUT_CLASSIFICATION	1.4791409362546054E-4	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999860217880643	WITHOUT_CLASSIFICATION	1.3978211935699634E-5	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.999956731156168	WITHOUT_CLASSIFICATION	4.3268843831970315E-5	TEST
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999986047702801	WITHOUT_CLASSIFICATION	1.3952297198852709E-6	TEST
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999756530990058	WITHOUT_CLASSIFICATION	2.434690099414155E-5	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999944077540299	WITHOUT_CLASSIFICATION	5.592245970074362E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999944077540299	WITHOUT_CLASSIFICATION	5.592245970074362E-6	TEST
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999920073492077	WITHOUT_CLASSIFICATION	7.992650792237573E-6	TEST
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.999923834649848	WITHOUT_CLASSIFICATION	7.616535015196421E-5	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999804165630289	WITHOUT_CLASSIFICATION	1.9583436971094728E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999963738176826	WITHOUT_CLASSIFICATION	3.626182317414416E-6	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999897076665062	WITHOUT_CLASSIFICATION	1.0292333493837245E-5	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999897076665062	WITHOUT_CLASSIFICATION	1.0292333493837245E-5	TEST
// check arity	WITHOUT_CLASSIFICATION	0.9999942177382076	WITHOUT_CLASSIFICATION	5.7822617924278025E-6	TEST
// check arity	WITHOUT_CLASSIFICATION	0.9999942177382076	WITHOUT_CLASSIFICATION	5.7822617924278025E-6	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999980827563624	WITHOUT_CLASSIFICATION	1.917243637519513E-6	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999749700581465	WITHOUT_CLASSIFICATION	2.5029941853456616E-5	TEST
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999855072266292	WITHOUT_CLASSIFICATION	1.4492773370831096E-5	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999577922012789	WITHOUT_CLASSIFICATION	4.220779872101935E-5	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9998906073538445	WITHOUT_CLASSIFICATION	1.0939264615551748E-4	TEST
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999939259416024	WITHOUT_CLASSIFICATION	6.074058397648219E-6	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999565452869791	WITHOUT_CLASSIFICATION	4.345471302097103E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999589000396566	WITHOUT_CLASSIFICATION	4.1099960343449424E-5	TEST
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999932243448744	WITHOUT_CLASSIFICATION	6.775655125548955E-6	TEST
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999988218353072	WITHOUT_CLASSIFICATION	1.1781646928192132E-6	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999770018447729	WITHOUT_CLASSIFICATION	2.299815522713026E-5	TEST
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9994565102207835	WITHOUT_CLASSIFICATION	5.434897792164755E-4	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999945790093921	WITHOUT_CLASSIFICATION	5.420990607903707E-6	TEST
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.999997891511182	WITHOUT_CLASSIFICATION	2.1084888180184315E-6	TEST
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999779153660744	WITHOUT_CLASSIFICATION	2.208463392554954E-5	TEST
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999830188906977	WITHOUT_CLASSIFICATION	1.6981109302254577E-5	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999865012556275	WITHOUT_CLASSIFICATION	1.3498744372590868E-5	TEST
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9978624982762792	WITHOUT_CLASSIFICATION	0.0021375017237208506	TEST
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999386853397033	WITHOUT_CLASSIFICATION	6.131466029669891E-5	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999928418931123	WITHOUT_CLASSIFICATION	7.15810688764855E-6	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999781275627743	WITHOUT_CLASSIFICATION	2.187243722577788E-5	TEST
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999926105491722	WITHOUT_CLASSIFICATION	7.389450827749186E-6	TEST
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999889874706082	WITHOUT_CLASSIFICATION	1.1012529391882984E-5	TEST
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999130271386784	WITHOUT_CLASSIFICATION	8.697286132163053E-5	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999636654787978	WITHOUT_CLASSIFICATION	3.633452120213555E-5	TEST
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999837927287532	WITHOUT_CLASSIFICATION	1.6207271246800864E-5	TEST
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9998956215512859	WITHOUT_CLASSIFICATION	1.0437844871419495E-4	TEST
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999992082632726	WITHOUT_CLASSIFICATION	7.917367274920483E-7	TEST
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999783855550632	WITHOUT_CLASSIFICATION	2.1614444936752427E-5	TEST
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.999991916446468	WITHOUT_CLASSIFICATION	8.083553532058386E-6	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999895917652861	WITHOUT_CLASSIFICATION	1.0408234713821413E-5	TEST
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.999990920457311	WITHOUT_CLASSIFICATION	9.07954268907239E-6	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999243386813236	WITHOUT_CLASSIFICATION	7.566131867650124E-5	TEST
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999947213726993	WITHOUT_CLASSIFICATION	5.278627300706592E-6	TEST
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999811009086159	WITHOUT_CLASSIFICATION	1.8899091384022128E-5	TEST
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999734146847356	WITHOUT_CLASSIFICATION	2.6585315264449692E-5	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999268318061824	WITHOUT_CLASSIFICATION	7.316819381761818E-5	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999964611376219	WITHOUT_CLASSIFICATION	3.5388623781114698E-6	TEST
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999953980922055	WITHOUT_CLASSIFICATION	4.601907794490903E-6	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999578786950671	WITHOUT_CLASSIFICATION	4.212130493276645E-5	TEST
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.999593397244434	WITHOUT_CLASSIFICATION	4.066027555660149E-4	TEST
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999819518677538	WITHOUT_CLASSIFICATION	1.804813224617697E-5	TEST
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999705146109789	WITHOUT_CLASSIFICATION	2.948538902114723E-5	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9996625109422734	WITHOUT_CLASSIFICATION	3.3748905772658854E-4	TEST
// specific arity	WITHOUT_CLASSIFICATION	0.9999899482303796	WITHOUT_CLASSIFICATION	1.0051769620486338E-5	TEST
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.999998374266572	WITHOUT_CLASSIFICATION	1.625733427996146E-6	TEST
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999764482258627	WITHOUT_CLASSIFICATION	2.355177413733753E-5	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999493748069824	WITHOUT_CLASSIFICATION	5.062519301749191E-5	TEST
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999123744803242	WITHOUT_CLASSIFICATION	8.762551967572539E-5	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.999971663248902	WITHOUT_CLASSIFICATION	2.8336751098015727E-5	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.999971663248902	WITHOUT_CLASSIFICATION	2.8336751098015727E-5	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9998420323241698	WITHOUT_CLASSIFICATION	1.5796767583017347E-4	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9998420323241698	WITHOUT_CLASSIFICATION	1.5796767583017347E-4	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998714454912592	WITHOUT_CLASSIFICATION	1.2855450874085472E-4	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998714454912592	WITHOUT_CLASSIFICATION	1.2855450874085472E-4	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999414833736107	WITHOUT_CLASSIFICATION	5.8516626389391996E-5	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999414833736107	WITHOUT_CLASSIFICATION	5.8516626389391996E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999368247154505	WITHOUT_CLASSIFICATION	6.317528454947698E-5	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999368247154505	WITHOUT_CLASSIFICATION	6.317528454947698E-5	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999368247154505	WITHOUT_CLASSIFICATION	6.317528454947698E-5	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999315121481007	WITHOUT_CLASSIFICATION	6.848785189919607E-5	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999418592756167	WITHOUT_CLASSIFICATION	5.8140724383301216E-5	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999418592756167	WITHOUT_CLASSIFICATION	5.8140724383301216E-5	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999418592756167	WITHOUT_CLASSIFICATION	5.8140724383301216E-5	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999758955595314	WITHOUT_CLASSIFICATION	2.4104440468675058E-5	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999758955595314	WITHOUT_CLASSIFICATION	2.4104440468675058E-5	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999758955595314	WITHOUT_CLASSIFICATION	2.4104440468675058E-5	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999493748069824	WITHOUT_CLASSIFICATION	5.062519301749191E-5	TEST
// backspace	WITHOUT_CLASSIFICATION	0.999988504244595	WITHOUT_CLASSIFICATION	1.1495755404914964E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
/* package-private */	WITHOUT_CLASSIFICATION	0.9998906073538445	WITHOUT_CLASSIFICATION	1.0939264615551748E-4	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999897984224535	WITHOUT_CLASSIFICATION	1.02015775465338E-5	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999897984224535	WITHOUT_CLASSIFICATION	1.02015775465338E-5	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999751212584004	WITHOUT_CLASSIFICATION	2.487874159969168E-5	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9998981256091009	WITHOUT_CLASSIFICATION	1.0187439089913048E-4	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9998981256091009	WITHOUT_CLASSIFICATION	1.0187439089913048E-4	TEST
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9790825132912557	WITHOUT_CLASSIFICATION	0.020917486708744278	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9997113534433282	WITHOUT_CLASSIFICATION	2.886465566718147E-4	TEST
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9998535324632741	WITHOUT_CLASSIFICATION	1.464675367258499E-4	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999635124451461	WITHOUT_CLASSIFICATION	3.648755485378331E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999635124451461	WITHOUT_CLASSIFICATION	3.648755485378331E-5	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999853823646966	WITHOUT_CLASSIFICATION	1.4617635303352773E-5	TEST
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.999865369370762	WITHOUT_CLASSIFICATION	1.346306292380552E-4	TEST
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999411557205558	WITHOUT_CLASSIFICATION	5.88442794441846E-5	TEST
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999761285510537	WITHOUT_CLASSIFICATION	2.387144894632257E-5	TEST
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9943605475116228	WITHOUT_CLASSIFICATION	0.005639452488377073	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999635124451461	WITHOUT_CLASSIFICATION	3.648755485378331E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999635124451461	WITHOUT_CLASSIFICATION	3.648755485378331E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999635124451461	WITHOUT_CLASSIFICATION	3.648755485378331E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999635124451461	WITHOUT_CLASSIFICATION	3.648755485378331E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999635124451461	WITHOUT_CLASSIFICATION	3.648755485378331E-5	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999730949418921	WITHOUT_CLASSIFICATION	2.6905058107820802E-5	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999302678460933	WITHOUT_CLASSIFICATION	6.973215390676135E-5	TEST
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999953804430267	WITHOUT_CLASSIFICATION	4.619556973278347E-6	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.999966647041262	WITHOUT_CLASSIFICATION	3.335295873797637E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999753683528956	WITHOUT_CLASSIFICATION	2.463164710448305E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999753683528956	WITHOUT_CLASSIFICATION	2.463164710448305E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999753683528956	WITHOUT_CLASSIFICATION	2.463164710448305E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999753683528956	WITHOUT_CLASSIFICATION	2.463164710448305E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999753683528956	WITHOUT_CLASSIFICATION	2.463164710448305E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999753683528956	WITHOUT_CLASSIFICATION	2.463164710448305E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999753683528956	WITHOUT_CLASSIFICATION	2.463164710448305E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999753683528956	WITHOUT_CLASSIFICATION	2.463164710448305E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999753683528956	WITHOUT_CLASSIFICATION	2.463164710448305E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999753683528956	WITHOUT_CLASSIFICATION	2.463164710448305E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999753683528956	WITHOUT_CLASSIFICATION	2.463164710448305E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999753683528956	WITHOUT_CLASSIFICATION	2.463164710448305E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999753683528956	WITHOUT_CLASSIFICATION	2.463164710448305E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999753683528956	WITHOUT_CLASSIFICATION	2.463164710448305E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999753683528956	WITHOUT_CLASSIFICATION	2.463164710448305E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999753683528956	WITHOUT_CLASSIFICATION	2.463164710448305E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999753683528956	WITHOUT_CLASSIFICATION	2.463164710448305E-5	TEST
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999988506647149	WITHOUT_CLASSIFICATION	1.1493352850218913E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999753683528956	WITHOUT_CLASSIFICATION	2.463164710448305E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999753683528956	WITHOUT_CLASSIFICATION	2.463164710448305E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999753683528956	WITHOUT_CLASSIFICATION	2.463164710448305E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999753683528956	WITHOUT_CLASSIFICATION	2.463164710448305E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999753683528956	WITHOUT_CLASSIFICATION	2.463164710448305E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999753683528956	WITHOUT_CLASSIFICATION	2.463164710448305E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999753683528956	WITHOUT_CLASSIFICATION	2.463164710448305E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999753683528956	WITHOUT_CLASSIFICATION	2.463164710448305E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999753683528956	WITHOUT_CLASSIFICATION	2.463164710448305E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999753683528956	WITHOUT_CLASSIFICATION	2.463164710448305E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999753683528956	WITHOUT_CLASSIFICATION	2.463164710448305E-5	TEST
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9997761047493552	WITHOUT_CLASSIFICATION	2.2389525064486722E-4	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9998235964241305	WITHOUT_CLASSIFICATION	1.7640357586933586E-4	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999958446600826	WITHOUT_CLASSIFICATION	4.155339917404589E-6	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999921114379704	WITHOUT_CLASSIFICATION	7.88856202959333E-6	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999362822070853	WITHOUT_CLASSIFICATION	6.371779291465654E-5	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9998782669351154	WITHOUT_CLASSIFICATION	1.2173306488470634E-4	TEST
// only public methods	WITHOUT_CLASSIFICATION	0.9999733457272414	WITHOUT_CLASSIFICATION	2.6654272758519898E-5	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999292856440353	WITHOUT_CLASSIFICATION	7.071435596469068E-5	TEST
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999991175522798	WITHOUT_CLASSIFICATION	8.824477202441035E-7	TEST
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9999915373140057	WITHOUT_CLASSIFICATION	8.462685994182311E-6	TEST
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999626078811249	WITHOUT_CLASSIFICATION	3.739211887515592E-5	TEST
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999990593333267	WITHOUT_CLASSIFICATION	9.406666734641782E-7	TEST
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999902959104277	WITHOUT_CLASSIFICATION	9.7040895723053E-6	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999616294494789	WITHOUT_CLASSIFICATION	3.8370550521193655E-5	TEST
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999532852237787	WITHOUT_CLASSIFICATION	4.6714776221336976E-5	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999675139674807	WITHOUT_CLASSIFICATION	3.248603251929398E-5	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999991959949416	WITHOUT_CLASSIFICATION	8.040050584731763E-7	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998142947418693	WITHOUT_CLASSIFICATION	1.857052581307499E-4	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998142947418693	WITHOUT_CLASSIFICATION	1.857052581307499E-4	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998142947418693	WITHOUT_CLASSIFICATION	1.857052581307499E-4	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998142947418693	WITHOUT_CLASSIFICATION	1.857052581307499E-4	TEST
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999915731132595	WITHOUT_CLASSIFICATION	8.426886740462422E-6	TEST
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9998448881299599	WITHOUT_CLASSIFICATION	1.5511187004018704E-4	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999444070777097	WITHOUT_CLASSIFICATION	5.559292229017926E-5	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999444070777097	WITHOUT_CLASSIFICATION	5.559292229017926E-5	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999988982707786	WITHOUT_CLASSIFICATION	1.1017292213935817E-6	TEST
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9998537274494865	WITHOUT_CLASSIFICATION	1.4627255051340694E-4	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999922537740079	WITHOUT_CLASSIFICATION	7.746225992092554E-6	TEST
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999636480691872	WITHOUT_CLASSIFICATION	3.635193081282403E-5	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9995600693467607	WITHOUT_CLASSIFICATION	4.399306532393679E-4	TEST
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9996361121230054	WITHOUT_CLASSIFICATION	3.6388787699467926E-4	TEST
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999839564854641	WITHOUT_CLASSIFICATION	1.604351453594709E-5	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999872681144084	WITHOUT_CLASSIFICATION	1.2731885591666979E-5	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999872681144084	WITHOUT_CLASSIFICATION	1.2731885591666979E-5	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999872681144084	WITHOUT_CLASSIFICATION	1.2731885591666979E-5	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999872681144084	WITHOUT_CLASSIFICATION	1.2731885591666979E-5	TEST
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999934027637878	WITHOUT_CLASSIFICATION	6.597236212285481E-6	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999987077631236	WITHOUT_CLASSIFICATION	1.2922368764236997E-6	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999987077631236	WITHOUT_CLASSIFICATION	1.2922368764236997E-6	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999987077631236	WITHOUT_CLASSIFICATION	1.2922368764236997E-6	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999816344762377	WITHOUT_CLASSIFICATION	1.8365523762379785E-5	TEST
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999369282070862	WITHOUT_CLASSIFICATION	6.307179291381797E-5	TEST
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.999959252679884	WITHOUT_CLASSIFICATION	4.074732011609147E-5	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9979603415078455	WITHOUT_CLASSIFICATION	0.0020396584921545105	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9979603415078455	WITHOUT_CLASSIFICATION	0.0020396584921545105	TEST
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999978815254865	WITHOUT_CLASSIFICATION	2.118474513460035E-6	TEST
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999977975942608	WITHOUT_CLASSIFICATION	2.20240573922086E-6	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.9999662853401677	WITHOUT_CLASSIFICATION	3.3714659832287505E-5	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.9999662853401677	WITHOUT_CLASSIFICATION	3.3714659832287505E-5	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999206803596107	WITHOUT_CLASSIFICATION	7.93196403893546E-5	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999206803596107	WITHOUT_CLASSIFICATION	7.93196403893546E-5	TEST
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.999904833411494	WITHOUT_CLASSIFICATION	9.516658850604238E-5	TEST
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9935960624481283	WITHOUT_CLASSIFICATION	0.006403937551871816	TEST
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999493748069824	WITHOUT_CLASSIFICATION	5.062519301749191E-5	TEST
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999219966373039	WITHOUT_CLASSIFICATION	7.8003362696088E-5	TEST
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999518583135802	WITHOUT_CLASSIFICATION	4.8141686419880475E-5	TEST
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999932299181797	WITHOUT_CLASSIFICATION	6.770081820245167E-6	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999494065143809	WITHOUT_CLASSIFICATION	5.059348561903267E-5	TEST
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999809094168798	WITHOUT_CLASSIFICATION	1.9090583120198397E-5	TEST
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9998486163274457	WITHOUT_CLASSIFICATION	1.5138367255427198E-4	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999883669420184	WITHOUT_CLASSIFICATION	1.163305798143244E-5	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999883669420184	WITHOUT_CLASSIFICATION	1.163305798143244E-5	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999885315129187	WITHOUT_CLASSIFICATION	1.1468487081277485E-5	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999885315129187	WITHOUT_CLASSIFICATION	1.1468487081277485E-5	TEST
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999787636150642	WITHOUT_CLASSIFICATION	2.1236384935833098E-5	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999888529893503	WITHOUT_CLASSIFICATION	1.1147010649690706E-5	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999590085310592	WITHOUT_CLASSIFICATION	4.09914689408644E-5	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9992823336758605	WITHOUT_CLASSIFICATION	7.176663241395833E-4	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9992823336758605	WITHOUT_CLASSIFICATION	7.176663241395833E-4	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9992823336758605	WITHOUT_CLASSIFICATION	7.176663241395833E-4	TEST
// line 286	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 476	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 513	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 530	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 533	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 551	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// end loop	WITHOUT_CLASSIFICATION	0.9999925623451003	WITHOUT_CLASSIFICATION	7.437654899829757E-6	TEST
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.999919680494467	WITHOUT_CLASSIFICATION	8.031950553290723E-5	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999946242672332	WITHOUT_CLASSIFICATION	5.375732766926134E-6	TEST
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.999980154954743	WITHOUT_CLASSIFICATION	1.984504525688668E-5	TEST
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9997926535930284	WITHOUT_CLASSIFICATION	2.0734640697172736E-4	TEST
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999697461321633	WITHOUT_CLASSIFICATION	3.025386783678453E-5	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9979603415078455	WITHOUT_CLASSIFICATION	0.0020396584921545105	TEST
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999974740716844	WITHOUT_CLASSIFICATION	2.5259283156649155E-6	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9998170353101627	WITHOUT_CLASSIFICATION	1.8296468983730363E-4	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999818386474129	WITHOUT_CLASSIFICATION	1.816135258705387E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998344223071574	WITHOUT_CLASSIFICATION	1.6557769284264546E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999375229445966	WITHOUT_CLASSIFICATION	6.247705540337478E-5	TEST
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999751625409001	WITHOUT_CLASSIFICATION	2.4837459099834076E-5	TEST
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9996917950081642	WITHOUT_CLASSIFICATION	3.0820499183577477E-4	TEST
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999389307420633	WITHOUT_CLASSIFICATION	6.10692579366603E-5	TEST
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9995721121666011	WITHOUT_CLASSIFICATION	4.2788783339876564E-4	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999657461685217	WITHOUT_CLASSIFICATION	3.425383147823292E-5	TEST
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999394478801832	WITHOUT_CLASSIFICATION	6.055211981680791E-5	TEST
// line 572	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 625	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 649	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 723	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 745	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 766	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 785	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 800	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 812	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 827	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 864	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 886	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 911	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 929	WITHOUT_CLASSIFICATION	0.9999911316197712	WITHOUT_CLASSIFICATION	8.868380228885522E-6	TEST
// line 952	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 970	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 972	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 991	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1011	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1026	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1067	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1085	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1145	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1169	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1201	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1229	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1287	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1293	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1307	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1325	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1363	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1398	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1473	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1492	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1523	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1562	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1582	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1620	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1635	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1652	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1681	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1755	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1789	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999884957166622	WITHOUT_CLASSIFICATION	1.1504283337881717E-5	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999413814314556	WITHOUT_CLASSIFICATION	5.861856854424957E-5	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9991032105424182	WITHOUT_CLASSIFICATION	8.967894575818073E-4	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9998155125163163	WITHOUT_CLASSIFICATION	1.8448748368362294E-4	TEST
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999483382558114	WITHOUT_CLASSIFICATION	5.166174418861416E-5	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999787637726371	WITHOUT_CLASSIFICATION	2.123622736302474E-5	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999787637726371	WITHOUT_CLASSIFICATION	2.123622736302474E-5	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999787637726371	WITHOUT_CLASSIFICATION	2.123622736302474E-5	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999787637726371	WITHOUT_CLASSIFICATION	2.123622736302474E-5	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9997923164178778	WITHOUT_CLASSIFICATION	2.0768358212220207E-4	TEST
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999985281164951	WITHOUT_CLASSIFICATION	1.471883504858516E-6	TEST
// line 313	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 339	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 361	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 413	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 451	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 472	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 500	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 515	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 555	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 582	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 619	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 636	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 669	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 703	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 776	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 814	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 823	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 854	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 872	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 905	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 925	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 958	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 992	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1047	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1072	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1081	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1108	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1136	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1168	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1192	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1241	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1267	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1286	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1301	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1314	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1333	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1362	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1395	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1420	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1439	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1476	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1535	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1588	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1618	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1643	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1669	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1728	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1753	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1779	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1794	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1812	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1837	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1895	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1925	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1950	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 1992	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// line 2014	WITHOUT_CLASSIFICATION	0.9999911304314009	WITHOUT_CLASSIFICATION	8.869568599130564E-6	TEST
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999394958308722	WITHOUT_CLASSIFICATION	6.050416912778808E-5	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999907723708578	WITHOUT_CLASSIFICATION	9.22762914216891E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999926564500434	WITHOUT_CLASSIFICATION	7.343549956561542E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999926564500434	WITHOUT_CLASSIFICATION	7.343549956561542E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999926564500434	WITHOUT_CLASSIFICATION	7.343549956561542E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999926564500434	WITHOUT_CLASSIFICATION	7.343549956561542E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999926564500434	WITHOUT_CLASSIFICATION	7.343549956561542E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999926564500434	WITHOUT_CLASSIFICATION	7.343549956561542E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999926564500434	WITHOUT_CLASSIFICATION	7.343549956561542E-6	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999810067929694	WITHOUT_CLASSIFICATION	1.899320703057669E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999810067929694	WITHOUT_CLASSIFICATION	1.899320703057669E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999810067929694	WITHOUT_CLASSIFICATION	1.899320703057669E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999810067929694	WITHOUT_CLASSIFICATION	1.899320703057669E-5	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.99826994777888	WITHOUT_CLASSIFICATION	0.0017300522211200341	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.99826994777888	WITHOUT_CLASSIFICATION	0.0017300522211200341	TEST
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9998727679735737	WITHOUT_CLASSIFICATION	1.27232026426194E-4	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999988964707499	WITHOUT_CLASSIFICATION	1.1035292501133213E-6	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999988964707499	WITHOUT_CLASSIFICATION	1.1035292501133213E-6	TEST
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999178173239435	WITHOUT_CLASSIFICATION	8.218267605647638E-5	TEST
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999780441190242	WITHOUT_CLASSIFICATION	2.1955880975722747E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999949672567374	WITHOUT_CLASSIFICATION	5.032743262591472E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999949672567374	WITHOUT_CLASSIFICATION	5.032743262591472E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999949672567374	WITHOUT_CLASSIFICATION	5.032743262591472E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999949672567374	WITHOUT_CLASSIFICATION	5.032743262591472E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999949672567374	WITHOUT_CLASSIFICATION	5.032743262591472E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999949672567374	WITHOUT_CLASSIFICATION	5.032743262591472E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999949672567374	WITHOUT_CLASSIFICATION	5.032743262591472E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999949672567374	WITHOUT_CLASSIFICATION	5.032743262591472E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999949672567374	WITHOUT_CLASSIFICATION	5.032743262591472E-5	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999718405721898	WITHOUT_CLASSIFICATION	2.8159427810190735E-5	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999718405721898	WITHOUT_CLASSIFICATION	2.8159427810190735E-5	TEST
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999803257610365	WITHOUT_CLASSIFICATION	1.9674238963598656E-5	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999756796886359	WITHOUT_CLASSIFICATION	2.4320311364015294E-5	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999756796886359	WITHOUT_CLASSIFICATION	2.4320311364015294E-5	TEST
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999990986218226	WITHOUT_CLASSIFICATION	9.01378177485418E-7	TEST
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9974521859143174	WITHOUT_CLASSIFICATION	0.0025478140856825945	TEST
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999988752416649	WITHOUT_CLASSIFICATION	1.1247583350926425E-6	TEST
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.999991123022588	WITHOUT_CLASSIFICATION	8.876977411946507E-6	TEST
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999598837177494	WITHOUT_CLASSIFICATION	4.011628225060596E-5	TEST
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.999949410504142	WITHOUT_CLASSIFICATION	5.0589495857925425E-5	TEST
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999848425237854	WITHOUT_CLASSIFICATION	1.5157476214565946E-5	TEST
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999892767002126	WITHOUT_CLASSIFICATION	1.0723299787418475E-5	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9992799989151084	WITHOUT_CLASSIFICATION	7.200010848916318E-4	TEST
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9992699325418472	WITHOUT_CLASSIFICATION	7.300674581529431E-4	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.998786060066824	WITHOUT_CLASSIFICATION	0.0012139399331759604	TEST
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999950441665636	WITHOUT_CLASSIFICATION	4.955833436485197E-6	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999826497012866	WITHOUT_CLASSIFICATION	1.735029871344523E-5	TEST
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.99999730723299	WITHOUT_CLASSIFICATION	2.6927670100417717E-6	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999324361165949	WITHOUT_CLASSIFICATION	6.756388340519159E-5	TEST
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.999987390324517	WITHOUT_CLASSIFICATION	1.2609675483049599E-5	TEST
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999624539725191	WITHOUT_CLASSIFICATION	3.754602748093237E-5	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9997352252701949	WITHOUT_CLASSIFICATION	2.647747298051778E-4	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999476325413964	WITHOUT_CLASSIFICATION	5.2367458603699993E-5	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999476325413964	WITHOUT_CLASSIFICATION	5.2367458603699993E-5	TEST
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999777339211396	WITHOUT_CLASSIFICATION	2.2266078860389098E-5	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998733722303643	WITHOUT_CLASSIFICATION	1.266277696355672E-4	TEST
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999661810733896	WITHOUT_CLASSIFICATION	3.3818926610252964E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9993927655366722	WITHOUT_CLASSIFICATION	6.072344633276876E-4	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.999728135311446	WITHOUT_CLASSIFICATION	2.718646885540027E-4	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.999728135311446	WITHOUT_CLASSIFICATION	2.718646885540027E-4	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.999728135311446	WITHOUT_CLASSIFICATION	2.718646885540027E-4	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999950023929958	WITHOUT_CLASSIFICATION	4.99760700423345E-6	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9995479206078903	WITHOUT_CLASSIFICATION	4.5207939210954647E-4	TEST
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999982445856145	WITHOUT_CLASSIFICATION	1.755414385586369E-6	TEST
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999994782961835	WITHOUT_CLASSIFICATION	5.217038164596811E-7	TEST
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999880710574623	WITHOUT_CLASSIFICATION	1.1928942537562223E-5	TEST
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999994009281857	WITHOUT_CLASSIFICATION	5.990718142563584E-7	TEST
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.999972607245594	WITHOUT_CLASSIFICATION	2.7392754405928956E-5	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.999924950604681	WITHOUT_CLASSIFICATION	7.504939531896142E-5	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999980253123893	WITHOUT_CLASSIFICATION	1.9746876106541306E-6	TEST
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999795455622096	WITHOUT_CLASSIFICATION	2.045443779030766E-5	TEST
// reset buffer	WITHOUT_CLASSIFICATION	0.9999890440235664	WITHOUT_CLASSIFICATION	1.0955976433717428E-5	TEST
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999859811127356	WITHOUT_CLASSIFICATION	1.4018887264368048E-5	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9529787487670768	WITHOUT_CLASSIFICATION	0.04702125123292327	TEST
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.999978628757389	WITHOUT_CLASSIFICATION	2.137124261096509E-5	TEST
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.999992049530606	WITHOUT_CLASSIFICATION	7.950469393989333E-6	TEST
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999788479337083	WITHOUT_CLASSIFICATION	2.1152066291745517E-5	TEST
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999243083915433	WITHOUT_CLASSIFICATION	7.569160845665299E-5	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9998352263410053	WITHOUT_CLASSIFICATION	1.647736589947341E-4	TEST
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999974647072265	WITHOUT_CLASSIFICATION	2.535292773600979E-6	TEST
