// ?R  | boolean | True if file is readable by the real uid/gid of the caller // FIXME: Need to implement an readable_real_p in FileTest	TEST	0.9999937343450623	WITHOUT_CLASSIFICATION	6.265654937650539E-6	TEST
// TODO make an assert here	TEST	0.9364755206659009	WITHOUT_CLASSIFICATION	0.06352447933409912	TEST
// TODO add test methods here. The name must begin with 'test'. For example:	TEST	0.8777386847387509	TEST	0.12226131526124909	WITHOUT_CLASSIFICATION
// TODO: Make into an assert once I get things like blockbodynodes to be implicit nil	TEST	0.9982599975674279	WITHOUT_CLASSIFICATION	0.0017400024325721175	TEST
// if the method is extending something, then we have // to test if the handler is initialized...	TEST	0.9999146777202295	WITHOUT_CLASSIFICATION	8.532227977055599E-5	TEST
// ?W  | boolean | True if file1 exists and is writable by the real uid/gid // FIXME: Need to implement an writable_real_p in FileTest	TEST	0.9999954517513696	WITHOUT_CLASSIFICATION	4.548248630462495E-6	TEST
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999165351896985	WITHOUT_CLASSIFICATION	8.346481030153881E-5	TEST
// line 335	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999976463107685	WITHOUT_CLASSIFICATION	2.353689231534626E-6	TEST
// line 362	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
// line 391	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
/* ^D */	WITHOUT_CLASSIFICATION	0.9996972112811555	WITHOUT_CLASSIFICATION	3.0278871884449414E-4	TEST
/* ^Z */	WITHOUT_CLASSIFICATION	0.9996972669858764	WITHOUT_CLASSIFICATION	3.0273301412366997E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9998863922702219	WITHOUT_CLASSIFICATION	1.1360772977810338E-4	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9998863922702219	WITHOUT_CLASSIFICATION	1.1360772977810338E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998767112662175	WITHOUT_CLASSIFICATION	1.2328873378262862E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998767112662175	WITHOUT_CLASSIFICATION	1.2328873378262862E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998767112662175	WITHOUT_CLASSIFICATION	1.2328873378262862E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998767112662175	WITHOUT_CLASSIFICATION	1.2328873378262862E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998767112662175	WITHOUT_CLASSIFICATION	1.2328873378262862E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998767112662175	WITHOUT_CLASSIFICATION	1.2328873378262862E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998767112662175	WITHOUT_CLASSIFICATION	1.2328873378262862E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998767112662175	WITHOUT_CLASSIFICATION	1.2328873378262862E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998767112662175	WITHOUT_CLASSIFICATION	1.2328873378262862E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998767112662175	WITHOUT_CLASSIFICATION	1.2328873378262862E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998767112662175	WITHOUT_CLASSIFICATION	1.2328873378262862E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998767112662175	WITHOUT_CLASSIFICATION	1.2328873378262862E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998767112662175	WITHOUT_CLASSIFICATION	1.2328873378262862E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998767112662175	WITHOUT_CLASSIFICATION	1.2328873378262862E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998767112662175	WITHOUT_CLASSIFICATION	1.2328873378262862E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998767112662175	WITHOUT_CLASSIFICATION	1.2328873378262862E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998767112662175	WITHOUT_CLASSIFICATION	1.2328873378262862E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998767112662175	WITHOUT_CLASSIFICATION	1.2328873378262862E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998767112662175	WITHOUT_CLASSIFICATION	1.2328873378262862E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998767112662175	WITHOUT_CLASSIFICATION	1.2328873378262862E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998767112662175	WITHOUT_CLASSIFICATION	1.2328873378262862E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998767112662175	WITHOUT_CLASSIFICATION	1.2328873378262862E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998767112662175	WITHOUT_CLASSIFICATION	1.2328873378262862E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998767112662175	WITHOUT_CLASSIFICATION	1.2328873378262862E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998767112662175	WITHOUT_CLASSIFICATION	1.2328873378262862E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998767112662175	WITHOUT_CLASSIFICATION	1.2328873378262862E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998767112662175	WITHOUT_CLASSIFICATION	1.2328873378262862E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998767112662175	WITHOUT_CLASSIFICATION	1.2328873378262862E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998767112662175	WITHOUT_CLASSIFICATION	1.2328873378262862E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998767112662175	WITHOUT_CLASSIFICATION	1.2328873378262862E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998767112662175	WITHOUT_CLASSIFICATION	1.2328873378262862E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998767112662175	WITHOUT_CLASSIFICATION	1.2328873378262862E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998767112662175	WITHOUT_CLASSIFICATION	1.2328873378262862E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998767112662175	WITHOUT_CLASSIFICATION	1.2328873378262862E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998767112662175	WITHOUT_CLASSIFICATION	1.2328873378262862E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998767112662175	WITHOUT_CLASSIFICATION	1.2328873378262862E-4	TEST
// return result	WITHOUT_CLASSIFICATION	0.9999964023449421	WITHOUT_CLASSIFICATION	3.5976550578289973E-6	TEST
// name	WITHOUT_CLASSIFICATION	0.9996872912671046	WITHOUT_CLASSIFICATION	3.12708732895327E-4	TEST
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999772463721901	WITHOUT_CLASSIFICATION	2.275362780990842E-5	TEST
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999910151315645	WITHOUT_CLASSIFICATION	8.984868435526806E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999909734433883	WITHOUT_CLASSIFICATION	9.026556611653949E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999909734433883	WITHOUT_CLASSIFICATION	9.026556611653949E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999909734433883	WITHOUT_CLASSIFICATION	9.026556611653949E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999909734433883	WITHOUT_CLASSIFICATION	9.026556611653949E-6	TEST
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999897532286064	WITHOUT_CLASSIFICATION	1.0246771393656366E-5	TEST
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999385824761291	WITHOUT_CLASSIFICATION	6.14175238709784E-5	TEST
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999828524853511	WITHOUT_CLASSIFICATION	1.714751464891765E-5	TEST
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999759084437526	WITHOUT_CLASSIFICATION	2.4091556247474314E-5	TEST
// Version information:	WITHOUT_CLASSIFICATION	0.9999800176755059	WITHOUT_CLASSIFICATION	1.9982324493984833E-5	TEST
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999991144246424	WITHOUT_CLASSIFICATION	8.855753576540529E-7	TEST
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999881904180847	WITHOUT_CLASSIFICATION	1.1809581915332313E-5	TEST
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999953260814274	WITHOUT_CLASSIFICATION	4.673918572637826E-6	TEST
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999997140401774	WITHOUT_CLASSIFICATION	2.8595982263164554E-7	TEST
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9961841203502326	WITHOUT_CLASSIFICATION	0.003815879649767396	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.999982478215214	WITHOUT_CLASSIFICATION	1.7521784786019828E-5	TEST
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999880944677441	WITHOUT_CLASSIFICATION	1.1905532255845225E-5	TEST
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9997942224661471	WITHOUT_CLASSIFICATION	2.057775338529218E-4	TEST
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999970161235495	WITHOUT_CLASSIFICATION	2.983876450448007E-6	TEST
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999697410179343	WITHOUT_CLASSIFICATION	3.0258982065625948E-5	TEST
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999878479792091	WITHOUT_CLASSIFICATION	1.2152020790809925E-5	TEST
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9999995646901316	WITHOUT_CLASSIFICATION	4.353098684034419E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999909734433883	WITHOUT_CLASSIFICATION	9.026556611653949E-6	TEST
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999622811951167	WITHOUT_CLASSIFICATION	3.7718804883234044E-5	TEST
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999625129498358	WITHOUT_CLASSIFICATION	3.748705016418932E-5	TEST
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999625400852735	WITHOUT_CLASSIFICATION	3.7459914726444866E-5	TEST
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9999811694925181	WITHOUT_CLASSIFICATION	1.883050748177918E-5	TEST
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9999496484305361	WITHOUT_CLASSIFICATION	5.035156946394235E-5	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.9999943838449827	WITHOUT_CLASSIFICATION	5.616155017297231E-6	TEST
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999791540806967	WITHOUT_CLASSIFICATION	2.084591930329638E-5	TEST
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999079504478702	WITHOUT_CLASSIFICATION	9.204955212979902E-5	TEST
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999718904463644	WITHOUT_CLASSIFICATION	2.8109553635681043E-5	TEST
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999791284303027	WITHOUT_CLASSIFICATION	2.0871569697295646E-5	TEST
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9989549362325866	WITHOUT_CLASSIFICATION	0.0010450637674134294	TEST
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999228449176667	WITHOUT_CLASSIFICATION	7.71550823332803E-5	TEST
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9994458700358531	WITHOUT_CLASSIFICATION	5.541299641469029E-4	TEST
// IOT is also 6	WITHOUT_CLASSIFICATION	0.999986720590254	WITHOUT_CLASSIFICATION	1.3279409745943253E-5	TEST
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999850268941259	WITHOUT_CLASSIFICATION	1.497310587395876E-5	TEST
// RubySignal	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999606985784383	WITHOUT_CLASSIFICATION	3.9301421561599073E-5	TEST
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.990787541721577	WITHOUT_CLASSIFICATION	0.0092124582784229	TEST
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999883234422825	WITHOUT_CLASSIFICATION	1.1676557717602639E-5	TEST
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999966687791991	WITHOUT_CLASSIFICATION	3.331220801024719E-6	TEST
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.999981148414236	WITHOUT_CLASSIFICATION	1.8851585763904022E-5	TEST
//io.finish();	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9998384414076394	WITHOUT_CLASSIFICATION	1.615585923605913E-4	TEST
// hmm...	WITHOUT_CLASSIFICATION	0.9998760203152212	WITHOUT_CLASSIFICATION	1.2397968477886542E-4	TEST
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9998866744013652	WITHOUT_CLASSIFICATION	1.1332559863467222E-4	TEST
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999770475962727	WITHOUT_CLASSIFICATION	2.2952403727273512E-5	TEST
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999866361497924	WITHOUT_CLASSIFICATION	1.3363850207492324E-5	TEST
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999863606526661	WITHOUT_CLASSIFICATION	1.3639347333865146E-5	TEST
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999855937552679	WITHOUT_CLASSIFICATION	1.4406244732239512E-5	TEST
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999467842821594	WITHOUT_CLASSIFICATION	5.321571784055499E-5	TEST
/* Time class methods */	WITHOUT_CLASSIFICATION	0.999972995110344	WITHOUT_CLASSIFICATION	2.7004889656029873E-5	TEST
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.999898997193935	WITHOUT_CLASSIFICATION	1.0100280606498847E-4	TEST
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999972905213372	WITHOUT_CLASSIFICATION	2.7094786627830984E-6	TEST
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.999997352526912	WITHOUT_CLASSIFICATION	2.6474730878615608E-6	TEST
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999846304145894	WITHOUT_CLASSIFICATION	1.5369585410696313E-5	TEST
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999990598721716	WITHOUT_CLASSIFICATION	9.401278283039492E-7	TEST
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9995984250037737	WITHOUT_CLASSIFICATION	4.0157499622624915E-4	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999885658420352	WITHOUT_CLASSIFICATION	1.1434157964743297E-5	TEST
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999990649938786	WITHOUT_CLASSIFICATION	9.350061214099105E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999886149671926	WITHOUT_CLASSIFICATION	1.1385032807312541E-5	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999881025168877	WITHOUT_CLASSIFICATION	1.1897483112278275E-5	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999687984149415	WITHOUT_CLASSIFICATION	3.120158505854325E-5	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999687984149415	WITHOUT_CLASSIFICATION	3.120158505854325E-5	TEST
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9999429996577087	WITHOUT_CLASSIFICATION	5.70003422912901E-5	TEST
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999938600639029	WITHOUT_CLASSIFICATION	6.139936097141571E-6	TEST
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999786025407212	WITHOUT_CLASSIFICATION	2.1397459278783335E-5	TEST
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999894427465877	WITHOUT_CLASSIFICATION	1.0557253412260213E-5	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999916822974968	WITHOUT_CLASSIFICATION	8.317702503209669E-6	TEST
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9997927857327127	WITHOUT_CLASSIFICATION	2.072142672873093E-4	TEST
// ???	WITHOUT_CLASSIFICATION	0.999883104984688	WITHOUT_CLASSIFICATION	1.168950153119678E-4	TEST
// PID	WITHOUT_CLASSIFICATION	0.9998760203152212	WITHOUT_CLASSIFICATION	1.2397968477886542E-4	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999886149671926	WITHOUT_CLASSIFICATION	1.1385032807312541E-5	TEST
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999979896050813	WITHOUT_CLASSIFICATION	2.0103949187189915E-6	TEST
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999570469582542	WITHOUT_CLASSIFICATION	4.295304174592878E-5	TEST
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999992784000955	WITHOUT_CLASSIFICATION	7.215999045298343E-7	TEST
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999986597188841	WITHOUT_CLASSIFICATION	1.3402811158014294E-6	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999895238987004	WITHOUT_CLASSIFICATION	1.0476101299477129E-5	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999895238987004	WITHOUT_CLASSIFICATION	1.0476101299477129E-5	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999895238987004	WITHOUT_CLASSIFICATION	1.0476101299477129E-5	TEST
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.999999057645011	WITHOUT_CLASSIFICATION	9.423549890945189E-7	TEST
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999975085064348	WITHOUT_CLASSIFICATION	2.4914935652898835E-6	TEST
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999951781351404	WITHOUT_CLASSIFICATION	4.8218648595629195E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999780072504408	WITHOUT_CLASSIFICATION	2.1992749559270272E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999780072504408	WITHOUT_CLASSIFICATION	2.1992749559270272E-5	TEST
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.998925233836364	WITHOUT_CLASSIFICATION	0.0010747661636359494	TEST
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999976181689373	WITHOUT_CLASSIFICATION	2.381831062663263E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999780072504408	WITHOUT_CLASSIFICATION	2.1992749559270272E-5	TEST
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999906072362935	WITHOUT_CLASSIFICATION	9.392763706588843E-6	TEST
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9998733448341275	WITHOUT_CLASSIFICATION	1.2665516587247947E-4	TEST
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999755605339723	WITHOUT_CLASSIFICATION	2.4439466027702743E-5	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999953353526475	WITHOUT_CLASSIFICATION	4.664647352477162E-6	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999452851214395	WITHOUT_CLASSIFICATION	5.4714878560520285E-5	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999791173180342	WITHOUT_CLASSIFICATION	2.0882681965735183E-5	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999791173180342	WITHOUT_CLASSIFICATION	2.0882681965735183E-5	TEST
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999712730531366	WITHOUT_CLASSIFICATION	2.872694686342221E-5	TEST
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999879077793297	WITHOUT_CLASSIFICATION	1.2092220670354096E-5	TEST
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999803404807971	WITHOUT_CLASSIFICATION	1.9659519202891322E-5	TEST
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999758957736379	WITHOUT_CLASSIFICATION	2.4104226362091125E-5	TEST
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999643406099896	WITHOUT_CLASSIFICATION	3.565939001037376E-5	TEST
// extras flag	WITHOUT_CLASSIFICATION	0.9999921245584091	WITHOUT_CLASSIFICATION	7.875441590862135E-6	TEST
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// ...nothing	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// utility method	WITHOUT_CLASSIFICATION	0.9999957410134251	WITHOUT_CLASSIFICATION	4.258986574928498E-6	TEST
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999923650806886	WITHOUT_CLASSIFICATION	7.634919311307441E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999886149671926	WITHOUT_CLASSIFICATION	1.1385032807312541E-5	TEST
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999306252339851	WITHOUT_CLASSIFICATION	6.937476601491979E-5	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999585883446899	WITHOUT_CLASSIFICATION	4.14116553101102E-5	TEST
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9999851098768139	WITHOUT_CLASSIFICATION	1.4890123185981736E-5	TEST
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999750541435044	WITHOUT_CLASSIFICATION	2.4945856495684183E-5	TEST
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999773958098198	WITHOUT_CLASSIFICATION	2.260419018020369E-5	TEST
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999821445111934	WITHOUT_CLASSIFICATION	1.785548880668383E-5	TEST
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999498003830387	WITHOUT_CLASSIFICATION	5.0199616961378665E-5	TEST
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999781247058505	WITHOUT_CLASSIFICATION	2.1875294149594788E-5	TEST
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.999925170527591	WITHOUT_CLASSIFICATION	7.482947240901203E-5	TEST
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9998585876633173	WITHOUT_CLASSIFICATION	1.4141233668281617E-4	TEST
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.999976862154536	WITHOUT_CLASSIFICATION	2.3137845464053014E-5	TEST
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999948621036904	WITHOUT_CLASSIFICATION	5.137896309683962E-6	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999936352919896	WITHOUT_CLASSIFICATION	6.364708010407316E-6	TEST
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9998251109250771	WITHOUT_CLASSIFICATION	1.7488907492293812E-4	TEST
// recheck condition	WITHOUT_CLASSIFICATION	0.9999914505457925	WITHOUT_CLASSIFICATION	8.549454207551989E-6	TEST
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999828632501254	WITHOUT_CLASSIFICATION	1.7136749874518474E-5	TEST
// Construct key services	WITHOUT_CLASSIFICATION	0.9999500133684749	WITHOUT_CLASSIFICATION	4.9986631525107516E-5	TEST
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999955949974888	WITHOUT_CLASSIFICATION	4.405002511215834E-6	TEST
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999970885826116	WITHOUT_CLASSIFICATION	2.9114173883975004E-6	TEST
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999919556915887	WITHOUT_CLASSIFICATION	8.044308411323804E-6	TEST
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999986800457382	WITHOUT_CLASSIFICATION	1.319954261749833E-6	TEST
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999940027128373	WITHOUT_CLASSIFICATION	5.997287162665975E-6	TEST
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999398197392658	WITHOUT_CLASSIFICATION	6.0180260734253E-5	TEST
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999933471401501	WITHOUT_CLASSIFICATION	6.652859849942882E-6	TEST
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.999971496588753	WITHOUT_CLASSIFICATION	2.8503411247138287E-5	TEST
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999728778182435	WITHOUT_CLASSIFICATION	2.7122181756545153E-5	TEST
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.999964379839758	WITHOUT_CLASSIFICATION	3.5620160241896556E-5	TEST
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999887923140155	WITHOUT_CLASSIFICATION	1.1207685984438663E-5	TEST
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999924291659532	WITHOUT_CLASSIFICATION	7.570834046854897E-6	TEST
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999949193280592	WITHOUT_CLASSIFICATION	5.080671940850561E-6	TEST
// determine spacing	WITHOUT_CLASSIFICATION	0.9999916885835367	WITHOUT_CLASSIFICATION	8.311416463371974E-6	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998063551385771	WITHOUT_CLASSIFICATION	1.936448614228966E-4	TEST
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999511633641075	WITHOUT_CLASSIFICATION	4.883663589259344E-5	TEST
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9998961962646423	WITHOUT_CLASSIFICATION	1.0380373535775538E-4	TEST
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.999789835807534	WITHOUT_CLASSIFICATION	2.1016419246600889E-4	TEST
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998914073531042	WITHOUT_CLASSIFICATION	1.0859264689581283E-4	TEST
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.999200499090583	WITHOUT_CLASSIFICATION	7.995009094170003E-4	TEST
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999747649820491	WITHOUT_CLASSIFICATION	2.5235017950976922E-5	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999763750282207	WITHOUT_CLASSIFICATION	2.3624971779321844E-5	TEST
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.999983606713003	WITHOUT_CLASSIFICATION	1.6393286996992002E-5	TEST
// Default objects	WITHOUT_CLASSIFICATION	0.9999913611372595	WITHOUT_CLASSIFICATION	8.638862740457247E-6	TEST
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999821412589414	WITHOUT_CLASSIFICATION	1.785874105856997E-5	TEST
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9998740579579217	WITHOUT_CLASSIFICATION	1.259420420783947E-4	TEST
// Java support	WITHOUT_CLASSIFICATION	0.9999944508822456	WITHOUT_CLASSIFICATION	5.549117754393364E-6	TEST
// Parser stats	WITHOUT_CLASSIFICATION	0.9999909883161883	WITHOUT_CLASSIFICATION	9.011683811603596E-6	TEST
// Compilation	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999730681751434	WITHOUT_CLASSIFICATION	2.693182485661495E-5	TEST
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999707679034704	WITHOUT_CLASSIFICATION	2.92320965296169E-5	TEST
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.999956939292229	WITHOUT_CLASSIFICATION	4.306070777093876E-5	TEST
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999611646483969	WITHOUT_CLASSIFICATION	3.883535160310754E-5	TEST
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999805378002148	WITHOUT_CLASSIFICATION	1.946219978529163E-5	TEST
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999696888474081	WITHOUT_CLASSIFICATION	3.0311152591925374E-5	TEST
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999588127362287	WITHOUT_CLASSIFICATION	4.118726377131024E-5	TEST
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9998242719130054	WITHOUT_CLASSIFICATION	1.7572808699447978E-4	TEST
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999667077851699	WITHOUT_CLASSIFICATION	3.329221483007548E-5	TEST
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999980024012911	WITHOUT_CLASSIFICATION	1.9975987088127104E-6	TEST
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.999996038738717	WITHOUT_CLASSIFICATION	3.961261283018376E-6	TEST
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// default options	WITHOUT_CLASSIFICATION	0.9999964827512984	WITHOUT_CLASSIFICATION	3.517248701718811E-6	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9998760203152212	WITHOUT_CLASSIFICATION	1.2397968477886542E-4	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9998760203152212	WITHOUT_CLASSIFICATION	1.2397968477886542E-4	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9998862722234376	WITHOUT_CLASSIFICATION	1.1372777656239581E-4	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9998862722234376	WITHOUT_CLASSIFICATION	1.1372777656239581E-4	TEST
// long name option	WITHOUT_CLASSIFICATION	0.9999434403798357	WITHOUT_CLASSIFICATION	5.655962016439488E-5	TEST
// conversion	WITHOUT_CLASSIFICATION	0.9999910710810057	WITHOUT_CLASSIFICATION	8.92891899433745E-6	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999885671118147	WITHOUT_CLASSIFICATION	1.1432888185205046E-5	TEST
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9995932126291474	WITHOUT_CLASSIFICATION	4.067873708526096E-4	TEST
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999564612445594	WITHOUT_CLASSIFICATION	4.3538755440579506E-5	TEST
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9997907970307698	WITHOUT_CLASSIFICATION	2.09202969230125E-4	TEST
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999781247058505	WITHOUT_CLASSIFICATION	2.1875294149594788E-5	TEST
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999781247058505	WITHOUT_CLASSIFICATION	2.1875294149594788E-5	TEST
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999781247058505	WITHOUT_CLASSIFICATION	2.1875294149594788E-5	TEST
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999623968486174	WITHOUT_CLASSIFICATION	3.760315138258184E-5	TEST
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999982821087828	WITHOUT_CLASSIFICATION	1.7178912172262373E-6	TEST
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999779104727781	WITHOUT_CLASSIFICATION	2.208952722186532E-5	TEST
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999702408792379	WITHOUT_CLASSIFICATION	2.9759120762092408E-5	TEST
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999849594829272	WITHOUT_CLASSIFICATION	1.5040517072805615E-5	TEST
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999779104727781	WITHOUT_CLASSIFICATION	2.208952722186532E-5	TEST
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999952841443398	WITHOUT_CLASSIFICATION	4.7158556601290596E-6	TEST
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999781247058505	WITHOUT_CLASSIFICATION	2.1875294149594788E-5	TEST
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999891637683385	WITHOUT_CLASSIFICATION	1.0836231661434794E-5	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999656198555095	WITHOUT_CLASSIFICATION	3.438014449051421E-5	TEST
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999591110551437	WITHOUT_CLASSIFICATION	4.088894485630665E-5	TEST
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999781247058505	WITHOUT_CLASSIFICATION	2.1875294149594788E-5	TEST
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999954857187886	WITHOUT_CLASSIFICATION	4.5142812113633134E-6	TEST
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9998987237706235	WITHOUT_CLASSIFICATION	1.012762293764637E-4	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.999840903408734	WITHOUT_CLASSIFICATION	1.5909659126594962E-4	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999932723790934	WITHOUT_CLASSIFICATION	6.7276209065793595E-6	TEST
/* len + margin */	WITHOUT_CLASSIFICATION	0.999982228322835	WITHOUT_CLASSIFICATION	1.7771677164983775E-5	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999945704318685	WITHOUT_CLASSIFICATION	5.42956813148248E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999945704318685	WITHOUT_CLASSIFICATION	5.42956813148248E-6	TEST
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999678284330736	WITHOUT_CLASSIFICATION	3.217156692627104E-5	TEST
// string given	WITHOUT_CLASSIFICATION	0.9999824089078034	WITHOUT_CLASSIFICATION	1.759109219656302E-5	TEST
// hash given	WITHOUT_CLASSIFICATION	0.9999945022542475	WITHOUT_CLASSIFICATION	5.497745752443538E-6	TEST
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999990788813413	WITHOUT_CLASSIFICATION	9.211186586221935E-7	TEST
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9997804702540425	WITHOUT_CLASSIFICATION	2.195297459575928E-4	TEST
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999779104727781	WITHOUT_CLASSIFICATION	2.208952722186532E-5	TEST
// nothing	WITHOUT_CLASSIFICATION	0.9998649445439354	WITHOUT_CLASSIFICATION	1.3505545606461647E-4	TEST
// nothing	WITHOUT_CLASSIFICATION	0.9998649445439354	WITHOUT_CLASSIFICATION	1.3505545606461647E-4	TEST
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999779104727781	WITHOUT_CLASSIFICATION	2.208952722186532E-5	TEST
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9945131613966062	WITHOUT_CLASSIFICATION	0.005486838603393821	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999947932103537	WITHOUT_CLASSIFICATION	5.206789646392284E-6	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999947932103537	WITHOUT_CLASSIFICATION	5.206789646392284E-6	TEST
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999900437992012	WITHOUT_CLASSIFICATION	9.956200798775801E-6	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9997815671516808	WITHOUT_CLASSIFICATION	2.1843284831927253E-4	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9997815671516808	WITHOUT_CLASSIFICATION	2.1843284831927253E-4	TEST
// modified	WITHOUT_CLASSIFICATION	0.999992048572128	WITHOUT_CLASSIFICATION	7.951427872068656E-6	TEST
// modified	WITHOUT_CLASSIFICATION	0.999992048572128	WITHOUT_CLASSIFICATION	7.951427872068656E-6	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9998760203152212	WITHOUT_CLASSIFICATION	1.2397968477886542E-4	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9998760203152212	WITHOUT_CLASSIFICATION	1.2397968477886542E-4	TEST
// QTRUE	WITHOUT_CLASSIFICATION	0.9998760203152212	WITHOUT_CLASSIFICATION	1.2397968477886542E-4	TEST
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999558212629683	WITHOUT_CLASSIFICATION	4.417873703163046E-5	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999918300264636	WITHOUT_CLASSIFICATION	8.169973536397301E-6	TEST
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999978988772342	WITHOUT_CLASSIFICATION	2.1011227657833526E-6	TEST
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.999994359041166	WITHOUT_CLASSIFICATION	5.6409588340200055E-6	TEST
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999929890087444	WITHOUT_CLASSIFICATION	7.01099125555075E-6	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999879390972367	WITHOUT_CLASSIFICATION	1.206090276329399E-5	TEST
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999988397074985	WITHOUT_CLASSIFICATION	1.1602925015643257E-6	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999879390972367	WITHOUT_CLASSIFICATION	1.206090276329399E-5	TEST
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9642457299331483	WITHOUT_CLASSIFICATION	0.03575427006685172	TEST
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999893167778208	WITHOUT_CLASSIFICATION	1.0683222179312906E-5	TEST
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999552517790798	WITHOUT_CLASSIFICATION	4.474822092011523E-5	TEST
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999874727046264	WITHOUT_CLASSIFICATION	1.252729537358758E-5	TEST
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999723543137807	WITHOUT_CLASSIFICATION	2.7645686219272934E-5	TEST
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9996621103457268	WITHOUT_CLASSIFICATION	3.3788965427315184E-4	TEST
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9998761929138398	WITHOUT_CLASSIFICATION	1.2380708616026165E-4	TEST
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999781991456246	WITHOUT_CLASSIFICATION	2.1800854375389777E-5	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999958133564397	WITHOUT_CLASSIFICATION	4.186643560291534E-6	TEST
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999843437290261	WITHOUT_CLASSIFICATION	1.565627097395826E-5	TEST
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999781247058505	WITHOUT_CLASSIFICATION	2.1875294149594788E-5	TEST
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.999790972090672	WITHOUT_CLASSIFICATION	2.0902790932797043E-4	TEST
// file not given	WITHOUT_CLASSIFICATION	0.999993684947626	WITHOUT_CLASSIFICATION	6.315052374092716E-6	TEST
// string to eval	WITHOUT_CLASSIFICATION	0.9999923852180056	WITHOUT_CLASSIFICATION	7.614781994365216E-6	TEST
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999903065290708	WITHOUT_CLASSIFICATION	9.69347092915842E-6	TEST
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999852749558391	WITHOUT_CLASSIFICATION	1.4725044160947242E-5	TEST
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999531216692651	WITHOUT_CLASSIFICATION	4.687833073496589E-5	TEST
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999842447308355	WITHOUT_CLASSIFICATION	1.5755269164548554E-5	TEST
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9998387500731333	WITHOUT_CLASSIFICATION	1.6124992686675883E-4	TEST
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9995741532922195	WITHOUT_CLASSIFICATION	4.258467077804342E-4	TEST
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9994685759731113	WITHOUT_CLASSIFICATION	5.314240268886309E-4	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999702193750206	WITHOUT_CLASSIFICATION	2.978062497944535E-5	TEST
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999842441202138	WITHOUT_CLASSIFICATION	1.5755879786284427E-5	TEST
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999570265253517	WITHOUT_CLASSIFICATION	4.297347464836025E-5	TEST
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999339012410563	WITHOUT_CLASSIFICATION	6.609875894370343E-5	TEST
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.999946231916676	WITHOUT_CLASSIFICATION	5.3768083324132056E-5	TEST
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999524705541291	WITHOUT_CLASSIFICATION	4.7529445870987096E-5	TEST
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999115561553303	WITHOUT_CLASSIFICATION	8.844384466964306E-5	TEST
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.999995148366283	WITHOUT_CLASSIFICATION	4.851633717007802E-6	TEST
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999654046694539	WITHOUT_CLASSIFICATION	3.459533054607298E-5	TEST
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999949964289749	WITHOUT_CLASSIFICATION	5.003571025075504E-6	TEST
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999994589636787	WITHOUT_CLASSIFICATION	5.410363213396236E-7	TEST
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999981714941177	WITHOUT_CLASSIFICATION	1.8285058822532026E-6	TEST
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999170275157376	WITHOUT_CLASSIFICATION	8.297248426238568E-5	TEST
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.999991240270031	WITHOUT_CLASSIFICATION	8.759729969018512E-6	TEST
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999928689449428	WITHOUT_CLASSIFICATION	7.131055057225771E-6	TEST
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999892722766425	WITHOUT_CLASSIFICATION	1.0727723357579714E-5	TEST
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999738017082213	WITHOUT_CLASSIFICATION	2.619829177869836E-5	TEST
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999948115009647	WITHOUT_CLASSIFICATION	5.188499035371435E-6	TEST
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999892825431134	WITHOUT_CLASSIFICATION	1.0717456886596342E-5	TEST
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999906476859233	WITHOUT_CLASSIFICATION	9.352314076719554E-6	TEST
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999912818752777	WITHOUT_CLASSIFICATION	8.71812472228591E-6	TEST
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999929028146839	WITHOUT_CLASSIFICATION	7.097185316139167E-6	TEST
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999947495325388	WITHOUT_CLASSIFICATION	5.250467461244587E-6	TEST
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999989624144332	WITHOUT_CLASSIFICATION	1.0375855667808898E-6	TEST
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999868673465943	WITHOUT_CLASSIFICATION	1.3132653405802084E-5	TEST
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999568541985003	WITHOUT_CLASSIFICATION	4.3145801499722306E-5	TEST
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999943698951663	WITHOUT_CLASSIFICATION	5.6301048337183176E-6	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999449434985611	WITHOUT_CLASSIFICATION	5.5056501438911135E-5	TEST
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999516776973258	WITHOUT_CLASSIFICATION	4.8322302674126996E-5	TEST
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999942758984376	WITHOUT_CLASSIFICATION	5.724101562487267E-6	TEST
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999921904763783	WITHOUT_CLASSIFICATION	7.80952362166756E-6	TEST
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9995347757668593	WITHOUT_CLASSIFICATION	4.65224233140618E-4	TEST
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999753050509553	WITHOUT_CLASSIFICATION	2.469494904468817E-5	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999985484132485	WITHOUT_CLASSIFICATION	1.4515867514545E-6	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999985484132485	WITHOUT_CLASSIFICATION	1.4515867514545E-6	TEST
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.999752984625109	WITHOUT_CLASSIFICATION	2.4701537489099916E-4	TEST
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9997802302410481	WITHOUT_CLASSIFICATION	2.1976975895189087E-4	TEST
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999299778425856	WITHOUT_CLASSIFICATION	7.002215741441066E-5	TEST
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999879216922608	WITHOUT_CLASSIFICATION	1.2078307739181889E-5	TEST
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999986576065892	WITHOUT_CLASSIFICATION	1.3423934107477428E-6	TEST
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999778995901967	WITHOUT_CLASSIFICATION	2.210040980330445E-5	TEST
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999532168538988	WITHOUT_CLASSIFICATION	4.6783146101188475E-5	TEST
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999982164635338	WITHOUT_CLASSIFICATION	1.7835364661312908E-6	TEST
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999575044090948	WITHOUT_CLASSIFICATION	4.2495590905110045E-5	TEST
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999987907982058	WITHOUT_CLASSIFICATION	1.2092017942190412E-6	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999970992025866	WITHOUT_CLASSIFICATION	2.9007974134411535E-6	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999970992025866	WITHOUT_CLASSIFICATION	2.9007974134411535E-6	TEST
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9999570941192187	WITHOUT_CLASSIFICATION	4.290588078131504E-5	TEST
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999991108004508	WITHOUT_CLASSIFICATION	8.891995492068365E-7	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9997919081692592	WITHOUT_CLASSIFICATION	2.0809183074078702E-4	TEST
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999879165401571	WITHOUT_CLASSIFICATION	1.2083459842954202E-5	TEST
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999558328700798	WITHOUT_CLASSIFICATION	4.416712992013744E-5	TEST
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999949222171505	WITHOUT_CLASSIFICATION	5.077782849599078E-6	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999736374216488	WITHOUT_CLASSIFICATION	2.6362578351169486E-5	TEST
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999505882373555	WITHOUT_CLASSIFICATION	4.941176264448225E-5	TEST
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999958112222056	WITHOUT_CLASSIFICATION	4.188777794320155E-6	TEST
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999797945689453	WITHOUT_CLASSIFICATION	2.020543105479649E-5	TEST
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999905466953034	WITHOUT_CLASSIFICATION	9.453304696533906E-6	TEST
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9998835541423403	WITHOUT_CLASSIFICATION	1.164458576596536E-4	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999869206323618	WITHOUT_CLASSIFICATION	1.3079367638080407E-5	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999869206323618	WITHOUT_CLASSIFICATION	1.3079367638080407E-5	TEST
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999317028734284	WITHOUT_CLASSIFICATION	6.82971265715476E-5	TEST
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999832974544796	WITHOUT_CLASSIFICATION	1.670254552043102E-5	TEST
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999738220713047	WITHOUT_CLASSIFICATION	2.617792869531856E-5	TEST
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999568010585955	WITHOUT_CLASSIFICATION	4.319894140434604E-5	TEST
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999474657435774	WITHOUT_CLASSIFICATION	5.253425642263717E-5	TEST
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999600604677029	WITHOUT_CLASSIFICATION	3.993953229710906E-5	TEST
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9998850994649947	WITHOUT_CLASSIFICATION	1.1490053500532903E-4	TEST
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999803122151567	WITHOUT_CLASSIFICATION	1.9687784843352732E-5	TEST
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999690626285788	WITHOUT_CLASSIFICATION	3.0937371421153035E-5	TEST
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999803550421343	WITHOUT_CLASSIFICATION	1.964495786565401E-5	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9997919081692592	WITHOUT_CLASSIFICATION	2.0809183074078702E-4	TEST
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9998904381710306	WITHOUT_CLASSIFICATION	1.0956182896935745E-4	TEST
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999947723111249	WITHOUT_CLASSIFICATION	5.22768887513492E-6	TEST
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9998037945252226	WITHOUT_CLASSIFICATION	1.9620547477746576E-4	TEST
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999991314669756	WITHOUT_CLASSIFICATION	8.685330242537318E-7	TEST
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999785246686774	WITHOUT_CLASSIFICATION	2.1475331322506154E-5	TEST
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999995300839384	WITHOUT_CLASSIFICATION	4.6991606165011125E-7	TEST
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999811719950727	WITHOUT_CLASSIFICATION	1.882800492728067E-5	TEST
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.999997951069419	WITHOUT_CLASSIFICATION	2.048930581006565E-6	TEST
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999953001912434	WITHOUT_CLASSIFICATION	4.699808756504714E-6	TEST
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999979293120589	WITHOUT_CLASSIFICATION	2.0706879411780617E-6	TEST
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999989075695261	WITHOUT_CLASSIFICATION	1.092430473779656E-6	TEST
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9998599575169976	WITHOUT_CLASSIFICATION	1.4004248300227462E-4	TEST
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999800694591521	WITHOUT_CLASSIFICATION	1.99305408479556E-5	TEST
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999868566555398	WITHOUT_CLASSIFICATION	1.314334446012971E-5	TEST
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9998594429907569	WITHOUT_CLASSIFICATION	1.405570092431942E-4	TEST
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999951708180891	WITHOUT_CLASSIFICATION	4.829181910939718E-6	TEST
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9998642542157998	WITHOUT_CLASSIFICATION	1.3574578420024516E-4	TEST
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999465673109809	WITHOUT_CLASSIFICATION	5.343268901916544E-5	TEST
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999783344072861	WITHOUT_CLASSIFICATION	2.1665592713912856E-5	TEST
// rename is successful	WITHOUT_CLASSIFICATION	0.9999511668703964	WITHOUT_CLASSIFICATION	4.883312960363312E-5	TEST
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999863104852255	WITHOUT_CLASSIFICATION	1.3689514774630051E-5	TEST
// try to rename one more time	WITHOUT_CLASSIFICATION	0.999977980226511	WITHOUT_CLASSIFICATION	2.2019773489016313E-5	TEST
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.999971866576106	WITHOUT_CLASSIFICATION	2.8133423893939074E-5	TEST
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999484325506532	WITHOUT_CLASSIFICATION	5.156744934675162E-5	TEST
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999851599518189	WITHOUT_CLASSIFICATION	1.484004818098593E-5	TEST
// 16 ?	WITHOUT_CLASSIFICATION	0.9999064891537435	WITHOUT_CLASSIFICATION	9.3510846256507E-5	TEST
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999432735507165	WITHOUT_CLASSIFICATION	5.67264492835031E-5	TEST
// size + 1;	WITHOUT_CLASSIFICATION	0.9999939273253811	WITHOUT_CLASSIFICATION	6.0726746189836055E-6	TEST
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999874391259712	WITHOUT_CLASSIFICATION	1.2560874028812833E-5	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999585364323899	WITHOUT_CLASSIFICATION	4.146356761012515E-5	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999585364323899	WITHOUT_CLASSIFICATION	4.146356761012515E-5	TEST
// put implementation	WITHOUT_CLASSIFICATION	0.9999813595182373	WITHOUT_CLASSIFICATION	1.8640481762653616E-5	TEST
// get implementation	WITHOUT_CLASSIFICATION	0.9999878542671208	WITHOUT_CLASSIFICATION	1.214573287918758E-5	TEST
// specialized for value	WITHOUT_CLASSIFICATION	0.9999778141410679	WITHOUT_CLASSIFICATION	2.2185858932102837E-5	TEST
// delete implementation	WITHOUT_CLASSIFICATION	0.999983196745528	WITHOUT_CLASSIFICATION	1.680325447201736E-5	TEST
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999492833949414	WITHOUT_CLASSIFICATION	5.0716605058630084E-5	TEST
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999927566589134	WITHOUT_CLASSIFICATION	7.24334108656198E-6	TEST
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999886149671926	WITHOUT_CLASSIFICATION	1.1385032807312541E-5	TEST
// update the hash value	WITHOUT_CLASSIFICATION	0.9999950840052511	WITHOUT_CLASSIFICATION	4.915994748933032E-6	TEST
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9991337908306122	WITHOUT_CLASSIFICATION	8.662091693877631E-4	TEST
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999630549437033	WITHOUT_CLASSIFICATION	3.6945056296649125E-5	TEST
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999712730531366	WITHOUT_CLASSIFICATION	2.872694686342221E-5	TEST
// remain where we are	WITHOUT_CLASSIFICATION	0.9999652138210284	WITHOUT_CLASSIFICATION	3.478617897156721E-5	TEST
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9994632769593126	WITHOUT_CLASSIFICATION	5.367230406873569E-4	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999763750282207	WITHOUT_CLASSIFICATION	2.3624971779321844E-5	TEST
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999904502891135	WITHOUT_CLASSIFICATION	9.549710886502367E-6	TEST
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9976633052303279	WITHOUT_CLASSIFICATION	0.00233669476967222	TEST
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999998926216961	WITHOUT_CLASSIFICATION	1.0737830397776375E-7	TEST
// first try as directory	WITHOUT_CLASSIFICATION	0.9999980919549336	WITHOUT_CLASSIFICATION	1.9080450664287875E-6	TEST
// next as regular file	WITHOUT_CLASSIFICATION	0.9999974885563632	WITHOUT_CLASSIFICATION	2.5114436367405284E-6	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999239909383899	WITHOUT_CLASSIFICATION	7.60090616101019E-5	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// Stream-based	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9998856123297107	WITHOUT_CLASSIFICATION	1.1438767028932348E-4	TEST
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999982253975537	WITHOUT_CLASSIFICATION	1.7746024463330177E-6	TEST
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999693767773515	WITHOUT_CLASSIFICATION	3.062322264843982E-5	TEST
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999114481697341	WITHOUT_CLASSIFICATION	8.855183026589088E-5	TEST
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999948403116448	WITHOUT_CLASSIFICATION	5.159688355287062E-6	TEST
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999898069982729	WITHOUT_CLASSIFICATION	1.0193001727006842E-5	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.999907573761146	WITHOUT_CLASSIFICATION	9.242623885391446E-5	TEST
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999922386198918	WITHOUT_CLASSIFICATION	7.761380108224021E-6	TEST
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999850752676636	WITHOUT_CLASSIFICATION	1.4924732336473652E-5	TEST
// re-register	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999461292353659	WITHOUT_CLASSIFICATION	5.3870764634221666E-5	TEST
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999882579957139	WITHOUT_CLASSIFICATION	1.1742004286057542E-5	TEST
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999931477094213	WITHOUT_CLASSIFICATION	6.8522905787388075E-6	TEST
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999277076226434	WITHOUT_CLASSIFICATION	7.229237735663503E-5	TEST
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999646690476216	WITHOUT_CLASSIFICATION	3.533095237835133E-5	TEST
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999944205142429	WITHOUT_CLASSIFICATION	5.579485757082663E-6	TEST
// use original modes	WITHOUT_CLASSIFICATION	0.9999792103413196	WITHOUT_CLASSIFICATION	2.078965868035301E-5	TEST
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999884049756067	WITHOUT_CLASSIFICATION	1.1595024393382815E-5	TEST
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.99987074517329	WITHOUT_CLASSIFICATION	1.2925482670989762E-4	TEST
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999593061616071	WITHOUT_CLASSIFICATION	4.069383839283063E-5	TEST
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999784108924759	WITHOUT_CLASSIFICATION	2.1589107524202693E-5	TEST
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999591920914302	WITHOUT_CLASSIFICATION	4.08079085696299E-5	TEST
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.999940774175791	WITHOUT_CLASSIFICATION	5.922582420912255E-5	TEST
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999839140054233	WITHOUT_CLASSIFICATION	1.608599457660332E-5	TEST
//Everything written	WITHOUT_CLASSIFICATION	0.9998926894356103	WITHOUT_CLASSIFICATION	1.0731056438979316E-4	TEST
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999868989079402	WITHOUT_CLASSIFICATION	1.3101092059815375E-5	TEST
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9998303629157899	WITHOUT_CLASSIFICATION	1.6963708421007217E-4	TEST
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9997289804666241	WITHOUT_CLASSIFICATION	2.710195333759565E-4	TEST
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.999984490985227	WITHOUT_CLASSIFICATION	1.550901477294067E-5	TEST
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999830149203497	WITHOUT_CLASSIFICATION	1.6985079650367598E-5	TEST
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999297151354855	WITHOUT_CLASSIFICATION	7.028486451461812E-5	TEST
// hmmmm	WITHOUT_CLASSIFICATION	0.9998760203152212	WITHOUT_CLASSIFICATION	1.2397968477886542E-4	TEST
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999448077060243	WITHOUT_CLASSIFICATION	5.5192293975591316E-5	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.99999630163784	WITHOUT_CLASSIFICATION	3.6983621599598638E-6	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999973744172441	WITHOUT_CLASSIFICATION	2.625582755808095E-6	TEST
// Length to read	WITHOUT_CLASSIFICATION	0.9999976167296182	WITHOUT_CLASSIFICATION	2.3832703818154405E-6	TEST
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999765738418295	WITHOUT_CLASSIFICATION	2.342615817047405E-5	TEST
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999786316670303	WITHOUT_CLASSIFICATION	2.136833296965214E-5	TEST
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999741177341146	WITHOUT_CLASSIFICATION	2.5882265885475076E-5	TEST
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999837404974788	WITHOUT_CLASSIFICATION	1.6259502521204456E-5	TEST
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999835642642285	WITHOUT_CLASSIFICATION	1.6435735771435414E-5	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999887163355021	WITHOUT_CLASSIFICATION	1.128366449785834E-5	TEST
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999779104727781	WITHOUT_CLASSIFICATION	2.208952722186532E-5	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999887163355021	WITHOUT_CLASSIFICATION	1.128366449785834E-5	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9998145674593506	WITHOUT_CLASSIFICATION	1.8543254064944836E-4	TEST
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9996208583941337	WITHOUT_CLASSIFICATION	3.7914160586629685E-4	TEST
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999640900561609	WITHOUT_CLASSIFICATION	3.590994383907574E-5	TEST
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.9980349034244242	WITHOUT_CLASSIFICATION	0.0019650965755756895	TEST
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999620844871768	WITHOUT_CLASSIFICATION	3.7915512823277786E-5	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999850540656656	WITHOUT_CLASSIFICATION	1.4945934334401094E-5	TEST
// write	WITHOUT_CLASSIFICATION	0.9997468947047656	WITHOUT_CLASSIFICATION	2.5310529523442555E-4	TEST
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9996825511247721	WITHOUT_CLASSIFICATION	3.1744887522788795E-4	TEST
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999835113522965	WITHOUT_CLASSIFICATION	1.6488647703614452E-5	TEST
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9999859686651912	WITHOUT_CLASSIFICATION	1.4031334808784333E-5	TEST
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9999946674725447	WITHOUT_CLASSIFICATION	5.332527455329197E-6	TEST
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999914946845866	WITHOUT_CLASSIFICATION	8.505315413429894E-6	TEST
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9999888776585419	WITHOUT_CLASSIFICATION	1.1122341458047307E-5	TEST
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.999996971045162	WITHOUT_CLASSIFICATION	3.0289548379051226E-6	TEST
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9998215752190442	WITHOUT_CLASSIFICATION	1.7842478095577073E-4	TEST
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9961973017306027	WITHOUT_CLASSIFICATION	0.003802698269397304	TEST
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999995349712274	WITHOUT_CLASSIFICATION	4.650287725484685E-7	TEST
// The class of this object	WITHOUT_CLASSIFICATION	0.999953867270102	WITHOUT_CLASSIFICATION	4.6132729897898915E-5	TEST
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.999986327694256	WITHOUT_CLASSIFICATION	1.3672305743915592E-5	TEST
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9994458700358531	WITHOUT_CLASSIFICATION	5.541299641469029E-4	TEST
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9997757800421795	WITHOUT_CLASSIFICATION	2.242199578204265E-4	TEST
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999465673109809	WITHOUT_CLASSIFICATION	5.343268901916544E-5	TEST
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999781247058505	WITHOUT_CLASSIFICATION	2.1875294149594788E-5	TEST
// for interface impls	WITHOUT_CLASSIFICATION	0.9999742247908074	WITHOUT_CLASSIFICATION	2.5775209192519897E-5	TEST
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999625220787518	WITHOUT_CLASSIFICATION	3.74779212483052E-5	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999947153887108	WITHOUT_CLASSIFICATION	5.284611289237593E-6	TEST
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999980755549293	WITHOUT_CLASSIFICATION	1.9244450707376843E-6	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.999982478215214	WITHOUT_CLASSIFICATION	1.7521784786019828E-5	TEST
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999977830551414	WITHOUT_CLASSIFICATION	2.216944858459829E-6	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999585954744858	WITHOUT_CLASSIFICATION	4.140452551414198E-5	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999585954744858	WITHOUT_CLASSIFICATION	4.140452551414198E-5	TEST
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.999963075753978	WITHOUT_CLASSIFICATION	3.692424602204864E-5	TEST
// Struct methods	WITHOUT_CLASSIFICATION	0.9999926291981507	WITHOUT_CLASSIFICATION	7.370801849370443E-6	TEST
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9995857754751849	WITHOUT_CLASSIFICATION	4.1422452481518224E-4	TEST
// define access methods.	WITHOUT_CLASSIFICATION	0.9999892790318166	WITHOUT_CLASSIFICATION	1.0720968183436017E-5	TEST
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.999974030308843	WITHOUT_CLASSIFICATION	2.5969691156988228E-5	TEST
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.999975931276957	WITHOUT_CLASSIFICATION	2.4068723042931555E-5	TEST
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999759386542815	WITHOUT_CLASSIFICATION	2.4061345718529385E-5	TEST
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999781247058505	WITHOUT_CLASSIFICATION	2.1875294149594788E-5	TEST
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999870055234338	WITHOUT_CLASSIFICATION	1.299447656620825E-5	TEST
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999598133054093	WITHOUT_CLASSIFICATION	4.018669459062649E-5	TEST
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999994234805462	WITHOUT_CLASSIFICATION	5.765194537707663E-7	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.999993171497756	WITHOUT_CLASSIFICATION	6.828502243900922E-6	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.999993171497756	WITHOUT_CLASSIFICATION	6.828502243900922E-6	TEST
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999820730986235	WITHOUT_CLASSIFICATION	1.792690137638274E-5	TEST
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999889002053995	WITHOUT_CLASSIFICATION	1.1099794600392905E-5	TEST
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999628040365632	WITHOUT_CLASSIFICATION	3.7195963436879455E-5	TEST
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999071247803067	WITHOUT_CLASSIFICATION	9.28752196933124E-5	TEST
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999934558966147	WITHOUT_CLASSIFICATION	6.544103385336807E-6	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999835492139693	WITHOUT_CLASSIFICATION	1.6450786030822164E-5	TEST
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999114665601474	WITHOUT_CLASSIFICATION	8.853343985269957E-5	TEST
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.999988183722967	WITHOUT_CLASSIFICATION	1.1816277032882235E-5	TEST
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9994681158982301	WITHOUT_CLASSIFICATION	5.318841017698825E-4	TEST
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.999989655224836	WITHOUT_CLASSIFICATION	1.0344775163985624E-5	TEST
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999177905720219	WITHOUT_CLASSIFICATION	8.220942797813165E-5	TEST
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999873699688722	WITHOUT_CLASSIFICATION	1.2630031127852318E-5	TEST
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999277121184765	WITHOUT_CLASSIFICATION	7.228788152349353E-5	TEST
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999484223738274	WITHOUT_CLASSIFICATION	5.1577626172472297E-5	TEST
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999953167543477	WITHOUT_CLASSIFICATION	4.683245652252817E-6	TEST
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999137410207489	WITHOUT_CLASSIFICATION	8.625897925102089E-5	TEST
// superClazz = null;	WITHOUT_CLASSIFICATION	0.999990423105772	WITHOUT_CLASSIFICATION	9.57689422795398E-6	TEST
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999931469181289	WITHOUT_CLASSIFICATION	6.853081871140601E-6	TEST
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999603214541884	WITHOUT_CLASSIFICATION	3.9678545811593197E-5	TEST
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999890212469263	WITHOUT_CLASSIFICATION	1.097875307378182E-5	TEST
//FIXME warning	WITHOUT_CLASSIFICATION	0.9998889862274392	WITHOUT_CLASSIFICATION	1.1101377256082277E-4	TEST
// FIXME warning	WITHOUT_CLASSIFICATION	0.9999650917110359	WITHOUT_CLASSIFICATION	3.4908288964162506E-5	TEST
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9998266671873042	WITHOUT_CLASSIFICATION	1.7333281269587026E-4	TEST
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999990944202356	WITHOUT_CLASSIFICATION	9.055797643659709E-7	TEST
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999749203436764	WITHOUT_CLASSIFICATION	2.5079656323569153E-5	TEST
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999984528878705	WITHOUT_CLASSIFICATION	1.5471121295370691E-6	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999971270788336	WITHOUT_CLASSIFICATION	2.8729211664123487E-6	TEST
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999302595520578	WITHOUT_CLASSIFICATION	6.974044794216285E-5	TEST
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999644052443724	WITHOUT_CLASSIFICATION	3.559475562774548E-5	TEST
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999729529692593	WITHOUT_CLASSIFICATION	2.7047030740652154E-5	TEST
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999936656255223	WITHOUT_CLASSIFICATION	6.3343744777415396E-6	TEST
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999485841729557	WITHOUT_CLASSIFICATION	5.141582704427267E-5	TEST
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.999997889397314	WITHOUT_CLASSIFICATION	2.1106026859988565E-6	TEST
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.999998461323818	WITHOUT_CLASSIFICATION	1.5386761820395278E-6	TEST
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999850507905048	WITHOUT_CLASSIFICATION	1.4949209495235777E-5	TEST
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999972060110427	WITHOUT_CLASSIFICATION	2.7939889572440517E-6	TEST
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999595385445129	WITHOUT_CLASSIFICATION	4.0461455487026254E-5	TEST
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999595385445129	WITHOUT_CLASSIFICATION	4.0461455487026254E-5	TEST
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9998446687735267	WITHOUT_CLASSIFICATION	1.5533122647327964E-4	TEST
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999639167804535	WITHOUT_CLASSIFICATION	3.6083219546546504E-5	TEST
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999931919285722	WITHOUT_CLASSIFICATION	6.8080714277804815E-6	TEST
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9999878491453866	WITHOUT_CLASSIFICATION	1.2150854613285476E-5	TEST
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9999612166819924	WITHOUT_CLASSIFICATION	3.8783318007530524E-5	TEST
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999877509743996	WITHOUT_CLASSIFICATION	1.2249025600409194E-5	TEST
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9998868160535745	WITHOUT_CLASSIFICATION	1.1318394642540043E-4	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999897454784565	WITHOUT_CLASSIFICATION	1.025452154336998E-5	TEST
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999979209122724	WITHOUT_CLASSIFICATION	2.0790877276349416E-6	TEST
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999956730589767	WITHOUT_CLASSIFICATION	4.326941023327563E-6	TEST
//reopen	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999926291981507	WITHOUT_CLASSIFICATION	7.370801849370443E-6	TEST
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999626456458494	WITHOUT_CLASSIFICATION	3.735435415068075E-5	TEST
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999780163969537	WITHOUT_CLASSIFICATION	2.1983603046309465E-5	TEST
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999977782797212	WITHOUT_CLASSIFICATION	2.2217202787143185E-6	TEST
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999995834661809	WITHOUT_CLASSIFICATION	4.165338191362741E-7	TEST
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999927382541306	WITHOUT_CLASSIFICATION	7.261745869435621E-6	TEST
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999965533521145	WITHOUT_CLASSIFICATION	3.4466478854865905E-6	TEST
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999955326506708	WITHOUT_CLASSIFICATION	4.467349329232008E-6	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999971359648354	WITHOUT_CLASSIFICATION	2.864035164536834E-6	TEST
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999919286558582	WITHOUT_CLASSIFICATION	8.071344141812208E-6	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999882321281862	WITHOUT_CLASSIFICATION	1.176787181381572E-5	TEST
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999846317656187	WITHOUT_CLASSIFICATION	1.5368234381213655E-5	TEST
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999783441865407	WITHOUT_CLASSIFICATION	2.165581345924928E-5	TEST
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999478362693291	WITHOUT_CLASSIFICATION	5.216373067078491E-5	TEST
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999490455169774	WITHOUT_CLASSIFICATION	5.0954483022645455E-5	TEST
// ignore error	WITHOUT_CLASSIFICATION	0.9999967363987784	WITHOUT_CLASSIFICATION	3.2636012216361756E-6	TEST
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999967843319248	WITHOUT_CLASSIFICATION	3.215668075208307E-5	TEST
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999639167804535	WITHOUT_CLASSIFICATION	3.6083219546546504E-5	TEST
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9998054745054592	WITHOUT_CLASSIFICATION	1.9452549454089147E-4	TEST
// odd	WITHOUT_CLASSIFICATION	0.9998760557843005	WITHOUT_CLASSIFICATION	1.2394421569948225E-4	TEST
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999988059048226	WITHOUT_CLASSIFICATION	1.1940951774004955E-6	TEST
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999579491791664	WITHOUT_CLASSIFICATION	4.205082083366155E-5	TEST
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999919908394734	WITHOUT_CLASSIFICATION	8.009160526579177E-6	TEST
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999977742742988	WITHOUT_CLASSIFICATION	2.2257257011040056E-6	TEST
/*  0! */	WITHOUT_CLASSIFICATION	0.9997272118480951	WITHOUT_CLASSIFICATION	2.727881519048952E-4	TEST
/*  1! */	WITHOUT_CLASSIFICATION	0.9997272118480951	WITHOUT_CLASSIFICATION	2.727881519048952E-4	TEST
/*  2! */	WITHOUT_CLASSIFICATION	0.9997272118480951	WITHOUT_CLASSIFICATION	2.727881519048952E-4	TEST
/*  3! */	WITHOUT_CLASSIFICATION	0.9997272118480951	WITHOUT_CLASSIFICATION	2.727881519048952E-4	TEST
/*  4! */	WITHOUT_CLASSIFICATION	0.9997272118480951	WITHOUT_CLASSIFICATION	2.727881519048952E-4	TEST
/*  5! */	WITHOUT_CLASSIFICATION	0.9997272118480951	WITHOUT_CLASSIFICATION	2.727881519048952E-4	TEST
/*  6! */	WITHOUT_CLASSIFICATION	0.9997272118480951	WITHOUT_CLASSIFICATION	2.727881519048952E-4	TEST
/*  7! */	WITHOUT_CLASSIFICATION	0.9997272118480951	WITHOUT_CLASSIFICATION	2.727881519048952E-4	TEST
/*  8! */	WITHOUT_CLASSIFICATION	0.9997272118480951	WITHOUT_CLASSIFICATION	2.727881519048952E-4	TEST
/*  9! */	WITHOUT_CLASSIFICATION	0.9997272118480951	WITHOUT_CLASSIFICATION	2.727881519048952E-4	TEST
/* 11! */	WITHOUT_CLASSIFICATION	0.9996972112811555	WITHOUT_CLASSIFICATION	3.0278871884449414E-4	TEST
/* 12! */	WITHOUT_CLASSIFICATION	0.9996972112811555	WITHOUT_CLASSIFICATION	3.0278871884449414E-4	TEST
/* 13! */	WITHOUT_CLASSIFICATION	0.9996972112811555	WITHOUT_CLASSIFICATION	3.0278871884449414E-4	TEST
/* 15! */	WITHOUT_CLASSIFICATION	0.9996972112811555	WITHOUT_CLASSIFICATION	3.0278871884449414E-4	TEST
/* 16! */	WITHOUT_CLASSIFICATION	0.9996972112811555	WITHOUT_CLASSIFICATION	3.0278871884449414E-4	TEST
/* 17! */	WITHOUT_CLASSIFICATION	0.9996972112811555	WITHOUT_CLASSIFICATION	3.0278871884449414E-4	TEST
/* 19! */	WITHOUT_CLASSIFICATION	0.9996972112811555	WITHOUT_CLASSIFICATION	3.0278871884449414E-4	TEST
/* 20! */	WITHOUT_CLASSIFICATION	0.9996972112811555	WITHOUT_CLASSIFICATION	3.0278871884449414E-4	TEST
/* 21! */	WITHOUT_CLASSIFICATION	0.9996972112811555	WITHOUT_CLASSIFICATION	3.0278871884449414E-4	TEST
// Static constants	WITHOUT_CLASSIFICATION	0.9999913150684455	WITHOUT_CLASSIFICATION	8.684931554492921E-6	TEST
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9999483023991629	WITHOUT_CLASSIFICATION	5.1697600837162673E-5	TEST
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999618988972729	WITHOUT_CLASSIFICATION	3.810110272708876E-5	TEST
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.999986014399805	WITHOUT_CLASSIFICATION	1.398560019511936E-5	TEST
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999942515527235	WITHOUT_CLASSIFICATION	5.748447276418831E-6	TEST
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999967234239437	WITHOUT_CLASSIFICATION	3.2765760561400404E-6	TEST
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999990494481631	WITHOUT_CLASSIFICATION	9.505518368351942E-7	TEST
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9999835958055494	WITHOUT_CLASSIFICATION	1.6404194450580618E-5	TEST
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999986051687404	WITHOUT_CLASSIFICATION	1.3948312595965498E-6	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9997755256488526	WITHOUT_CLASSIFICATION	2.244743511472808E-4	TEST
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9755591314086247	WITHOUT_CLASSIFICATION	0.024440868591375266	TEST
// integer division	WITHOUT_CLASSIFICATION	0.9999909681343336	WITHOUT_CLASSIFICATION	9.031865666353157E-6	TEST
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999967277868378	WITHOUT_CLASSIFICATION	3.272213162160861E-6	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999781256744161	WITHOUT_CLASSIFICATION	2.187432558394534E-5	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999781256744161	WITHOUT_CLASSIFICATION	2.187432558394534E-5	TEST
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999967234239437	WITHOUT_CLASSIFICATION	3.2765760561400404E-6	TEST
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9998736226964134	WITHOUT_CLASSIFICATION	1.2637730358667492E-4	TEST
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999997143963134	WITHOUT_CLASSIFICATION	2.856036866355758E-7	TEST
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999900240149324	WITHOUT_CLASSIFICATION	9.975985067670822E-6	TEST
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999960518267517	WITHOUT_CLASSIFICATION	3.948173248371485E-6	TEST
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9998962533324967	WITHOUT_CLASSIFICATION	1.0374666750337028E-4	TEST
// sign	WITHOUT_CLASSIFICATION	0.9998760973808078	WITHOUT_CLASSIFICATION	1.2390261919214716E-4	TEST
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999915787181349	WITHOUT_CLASSIFICATION	8.421281865123314E-6	TEST
// normalize the value	WITHOUT_CLASSIFICATION	0.999994183060296	WITHOUT_CLASSIFICATION	5.8169397040252E-6	TEST
// base	WITHOUT_CLASSIFICATION	0.9998883309318268	WITHOUT_CLASSIFICATION	1.1166906817318637E-4	TEST
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.999587077340214	WITHOUT_CLASSIFICATION	4.1292265978600093E-4	TEST
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999946753974868	WITHOUT_CLASSIFICATION	5.324602513243736E-6	TEST
// eh?!	WITHOUT_CLASSIFICATION	0.9998760203152212	WITHOUT_CLASSIFICATION	1.2397968477886542E-4	TEST
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9998638502356225	WITHOUT_CLASSIFICATION	1.3614976437737597E-4	TEST
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999913869838324	WITHOUT_CLASSIFICATION	8.613016167625802E-6	TEST
// the requested precision	WITHOUT_CLASSIFICATION	0.9999922969113157	WITHOUT_CLASSIFICATION	7.703088684306754E-6	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.9999943838449827	WITHOUT_CLASSIFICATION	5.616155017297231E-6	TEST
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999858569279677	WITHOUT_CLASSIFICATION	1.4143072032351422E-5	TEST
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999815997032496	WITHOUT_CLASSIFICATION	1.8400296750458082E-5	TEST
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9998566999850367	WITHOUT_CLASSIFICATION	1.4330001496333945E-4	TEST
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999907886229674	WITHOUT_CLASSIFICATION	9.211377032481357E-6	TEST
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999902595731106	WITHOUT_CLASSIFICATION	9.740426889458222E-6	TEST
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999909783917529	WITHOUT_CLASSIFICATION	9.02160824704685E-6	TEST
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999881852484629	WITHOUT_CLASSIFICATION	1.1814751537145085E-5	TEST
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999921529100091	WITHOUT_CLASSIFICATION	7.847089990868948E-6	TEST
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999586998519495	WITHOUT_CLASSIFICATION	4.130014805049009E-5	TEST
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999918285645604	WITHOUT_CLASSIFICATION	8.171435439731878E-6	TEST
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999657968409951	WITHOUT_CLASSIFICATION	3.420315900490688E-5	TEST
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999506156823792	WITHOUT_CLASSIFICATION	4.9384317620767225E-5	TEST
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999813218077788	WITHOUT_CLASSIFICATION	1.867819222131698E-5	TEST
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999826335694666	WITHOUT_CLASSIFICATION	1.736643053344915E-5	TEST
// root x is ready!	WITHOUT_CLASSIFICATION	0.999982247349346	WITHOUT_CLASSIFICATION	1.7752650653928043E-5	TEST
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999824757886602	WITHOUT_CLASSIFICATION	1.7524211339777066E-5	TEST
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999821506673778	WITHOUT_CLASSIFICATION	1.7849332622184327E-5	TEST
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999885646696387	WITHOUT_CLASSIFICATION	1.1435330361254154E-5	TEST
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999887163355021	WITHOUT_CLASSIFICATION	1.128366449785834E-5	TEST
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.999996985686474	WITHOUT_CLASSIFICATION	3.0143135260264412E-6	TEST
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999962648192501	WITHOUT_CLASSIFICATION	3.7351807498456694E-6	TEST
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9999409587220208	WITHOUT_CLASSIFICATION	5.9041277979247754E-5	TEST
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999979721463895	WITHOUT_CLASSIFICATION	2.0278536104979742E-6	TEST
// try the normal property first	WITHOUT_CLASSIFICATION	0.999987412314458	WITHOUT_CLASSIFICATION	1.2587685542103682E-5	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999480873082358	WITHOUT_CLASSIFICATION	5.191269176424415E-5	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999480873082358	WITHOUT_CLASSIFICATION	5.191269176424415E-5	TEST
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999777955400366	WITHOUT_CLASSIFICATION	2.2204459963327954E-5	TEST
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999622348311483	WITHOUT_CLASSIFICATION	3.776516885164335E-5	TEST
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999973554591295	WITHOUT_CLASSIFICATION	2.644540870466559E-6	TEST
//consume the file name	WITHOUT_CLASSIFICATION	0.9998731327380599	WITHOUT_CLASSIFICATION	1.2686726194016014E-4	TEST
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9995169186681413	WITHOUT_CLASSIFICATION	4.8308133185876503E-4	TEST
// try cwd first	WITHOUT_CLASSIFICATION	0.9999939109848355	WITHOUT_CLASSIFICATION	6.089015164613673E-6	TEST
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.999959035740514	WITHOUT_CLASSIFICATION	4.0964259485985646E-5	TEST
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9990180026002782	WITHOUT_CLASSIFICATION	9.819973997218033E-4	TEST
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999816505045438	WITHOUT_CLASSIFICATION	1.8349495456212847E-5	TEST
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999816505045438	WITHOUT_CLASSIFICATION	1.8349495456212847E-5	TEST
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999816505045438	WITHOUT_CLASSIFICATION	1.8349495456212847E-5	TEST
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999137795528915	WITHOUT_CLASSIFICATION	8.622044710841413E-5	TEST
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.999200499090583	WITHOUT_CLASSIFICATION	7.995009094170003E-4	TEST
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.999992351328029	WITHOUT_CLASSIFICATION	7.648671970970504E-6	TEST
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9961973017306027	WITHOUT_CLASSIFICATION	0.003802698269397304	TEST
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9999605486846574	WITHOUT_CLASSIFICATION	3.94513153425576E-5	TEST
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9998162374508915	WITHOUT_CLASSIFICATION	1.8376254910844496E-4	TEST
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999912731699617	WITHOUT_CLASSIFICATION	8.726830038311693E-6	TEST
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999966062900448	WITHOUT_CLASSIFICATION	3.3937099552122042E-6	TEST
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.999200499090583	WITHOUT_CLASSIFICATION	7.995009094170003E-4	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999674069115637	WITHOUT_CLASSIFICATION	3.259308843635695E-5	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999674069115637	WITHOUT_CLASSIFICATION	3.259308843635695E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9998038906788513	WITHOUT_CLASSIFICATION	1.961093211487941E-4	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999874082324036	WITHOUT_CLASSIFICATION	1.2591767596272995E-5	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9998927115417465	WITHOUT_CLASSIFICATION	1.0728845825346665E-4	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.999983431285417	WITHOUT_CLASSIFICATION	1.6568714582971853E-5	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999918300264636	WITHOUT_CLASSIFICATION	8.169973536397301E-6	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999936480340036	WITHOUT_CLASSIFICATION	6.351965996431338E-6	TEST
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9994661457903994	WITHOUT_CLASSIFICATION	5.338542096007297E-4	TEST
// Profile	WITHOUT_CLASSIFICATION	0.9998760685108811	WITHOUT_CLASSIFICATION	1.2393148911888627E-4	TEST
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9998074120515106	WITHOUT_CLASSIFICATION	1.9258794848946788E-4	TEST
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999983964934617	WITHOUT_CLASSIFICATION	1.6035065383086135E-6	TEST
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999278618203779	WITHOUT_CLASSIFICATION	7.213817962213347E-5	TEST
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999931631251904	WITHOUT_CLASSIFICATION	6.836874809611561E-6	TEST
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.999785513582717	WITHOUT_CLASSIFICATION	2.144864172831125E-4	TEST
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9990851122018956	WITHOUT_CLASSIFICATION	9.148877981044498E-4	TEST
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9996522171759872	WITHOUT_CLASSIFICATION	3.4778282401287685E-4	TEST
// reset the state	WITHOUT_CLASSIFICATION	0.999997324321158	WITHOUT_CLASSIFICATION	2.675678842018036E-6	TEST
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9988928469155621	WITHOUT_CLASSIFICATION	0.0011071530844378775	TEST
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
//str is frozen	WITHOUT_CLASSIFICATION	0.9997257584853424	WITHOUT_CLASSIFICATION	2.7424151465753105E-4	TEST
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9998987505733744	WITHOUT_CLASSIFICATION	1.0124942662553842E-4	TEST
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9992015873421591	WITHOUT_CLASSIFICATION	7.984126578409777E-4	TEST
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999950357172975	WITHOUT_CLASSIFICATION	4.964282702415118E-6	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999947153887108	WITHOUT_CLASSIFICATION	5.284611289237593E-6	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999835492139693	WITHOUT_CLASSIFICATION	1.6450786030822164E-5	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999968719787832	WITHOUT_CLASSIFICATION	3.128021216876478E-6	TEST
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999929606976117	WITHOUT_CLASSIFICATION	7.0393023882162995E-6	TEST
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.999997807882571	WITHOUT_CLASSIFICATION	2.192117429058543E-6	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9996545167077275	WITHOUT_CLASSIFICATION	3.454832922724992E-4	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.999989047132623	WITHOUT_CLASSIFICATION	1.0952867377028098E-5	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.999989047132623	WITHOUT_CLASSIFICATION	1.0952867377028098E-5	TEST
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999970247005984	WITHOUT_CLASSIFICATION	2.975299401717513E-6	TEST
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999833405620641	WITHOUT_CLASSIFICATION	1.6659437935892995E-5	TEST
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999564966660629	WITHOUT_CLASSIFICATION	4.3503333937144125E-5	TEST
// update all subclasses	WITHOUT_CLASSIFICATION	0.999988909583902	WITHOUT_CLASSIFICATION	1.1090416098132469E-5	TEST
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999978303309425	WITHOUT_CLASSIFICATION	2.169669057476877E-6	TEST
// static initializing method	WITHOUT_CLASSIFICATION	0.999990859601548	WITHOUT_CLASSIFICATION	9.140398451883723E-6	TEST
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999349961634861	WITHOUT_CLASSIFICATION	6.500383651391379E-5	TEST
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999982681348537	WITHOUT_CLASSIFICATION	1.7318651462633562E-6	TEST
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999559208555806	WITHOUT_CLASSIFICATION	4.407914441930764E-5	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999789095658288	WITHOUT_CLASSIFICATION	2.109043417120471E-5	TEST
// self // method name	WITHOUT_CLASSIFICATION	0.9999744606079108	WITHOUT_CLASSIFICATION	2.5539392089114496E-5	TEST
// the default allocator	WITHOUT_CLASSIFICATION	0.9999957829836822	WITHOUT_CLASSIFICATION	4.2170163178442075E-6	TEST
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999866866446856	WITHOUT_CLASSIFICATION	1.3313355314482238E-5	TEST
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999825550191497	WITHOUT_CLASSIFICATION	1.744498085038635E-5	TEST
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.999988145887503	WITHOUT_CLASSIFICATION	1.1854112497089772E-5	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999885671118147	WITHOUT_CLASSIFICATION	1.1432888185205046E-5	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999505576459886	WITHOUT_CLASSIFICATION	4.9442354011401525E-5	TEST
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999944449110961	WITHOUT_CLASSIFICATION	5.555088903803862E-6	TEST
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999982324816855	WITHOUT_CLASSIFICATION	1.767518314463321E-6	TEST
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9998907409908687	WITHOUT_CLASSIFICATION	1.09259009131223E-4	TEST
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999291974554153	WITHOUT_CLASSIFICATION	7.080254458473678E-5	TEST
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999683940801469	WITHOUT_CLASSIFICATION	3.1605919853115864E-5	TEST
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999781247058505	WITHOUT_CLASSIFICATION	2.1875294149594788E-5	TEST
// a gotcha	WITHOUT_CLASSIFICATION	0.999993935708975	WITHOUT_CLASSIFICATION	6.064291025087719E-6	TEST
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999992946630936	WITHOUT_CLASSIFICATION	7.053369063062866E-7	TEST
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999826070894159	WITHOUT_CLASSIFICATION	1.7392910584152066E-5	TEST
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999866866446856	WITHOUT_CLASSIFICATION	1.3313355314482238E-5	TEST
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999794171594918	WITHOUT_CLASSIFICATION	2.0582840508237876E-5	TEST
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.999988145887503	WITHOUT_CLASSIFICATION	1.1854112497089772E-5	TEST
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999598620643816	WITHOUT_CLASSIFICATION	4.013793561845647E-5	TEST
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999880309347207	WITHOUT_CLASSIFICATION	1.1969065279297654E-5	TEST
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999781247058505	WITHOUT_CLASSIFICATION	2.1875294149594788E-5	TEST
// provider is not available	WITHOUT_CLASSIFICATION	0.9998940488448164	WITHOUT_CLASSIFICATION	1.0595115518372392E-4	TEST
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999049136562387	WITHOUT_CLASSIFICATION	9.508634376130198E-5	TEST
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999900349487489	WITHOUT_CLASSIFICATION	9.96505125110579E-6	TEST
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999542514324037	WITHOUT_CLASSIFICATION	4.5748567596364837E-5	TEST
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999741895999776	WITHOUT_CLASSIFICATION	2.5810400022369804E-5	TEST
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999168453790126	WITHOUT_CLASSIFICATION	8.315462098749914E-5	TEST
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999992321670773	WITHOUT_CLASSIFICATION	7.678329227003276E-7	TEST
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999988851472276	WITHOUT_CLASSIFICATION	1.114852772440147E-6	TEST
// JRubyService	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// while	WITHOUT_CLASSIFICATION	0.9998821724371181	WITHOUT_CLASSIFICATION	1.1782756288191439E-4	TEST
/* \OOO */	WITHOUT_CLASSIFICATION	0.9996972112811555	WITHOUT_CLASSIFICATION	3.0278871884449414E-4	TEST
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999992776005592	WITHOUT_CLASSIFICATION	7.223994409485194E-7	TEST
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999816675715008	WITHOUT_CLASSIFICATION	1.8332428499214694E-5	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999883370453198	WITHOUT_CLASSIFICATION	1.166295468029724E-5	TEST
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999630681667299	WITHOUT_CLASSIFICATION	3.693183327011515E-5	TEST
// silent ?	WITHOUT_CLASSIFICATION	0.999993173913173	WITHOUT_CLASSIFICATION	6.826086827089362E-6	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9996972112811555	WITHOUT_CLASSIFICATION	3.0278871884449414E-4	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999465673109809	WITHOUT_CLASSIFICATION	5.343268901916544E-5	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999779104727781	WITHOUT_CLASSIFICATION	2.208952722186532E-5	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999779104727781	WITHOUT_CLASSIFICATION	2.208952722186532E-5	TEST
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999395151397743	WITHOUT_CLASSIFICATION	6.048486022575371E-5	TEST
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.999967031734245	WITHOUT_CLASSIFICATION	3.296826575504854E-5	TEST
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999779104727781	WITHOUT_CLASSIFICATION	2.208952722186532E-5	TEST
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999719974241249	WITHOUT_CLASSIFICATION	2.8002575875169915E-5	TEST
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999779104727781	WITHOUT_CLASSIFICATION	2.208952722186532E-5	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9996972112811555	WITHOUT_CLASSIFICATION	3.0278871884449414E-4	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999779104727781	WITHOUT_CLASSIFICATION	2.208952722186532E-5	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999465673109809	WITHOUT_CLASSIFICATION	5.343268901916544E-5	TEST
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9998987237706235	WITHOUT_CLASSIFICATION	1.012762293764637E-4	TEST
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999779104727781	WITHOUT_CLASSIFICATION	2.208952722186532E-5	TEST
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999779104727781	WITHOUT_CLASSIFICATION	2.208952722186532E-5	TEST
// inner switch	WITHOUT_CLASSIFICATION	0.9999942680578939	WITHOUT_CLASSIFICATION	5.731942106015586E-6	TEST
// newInstance here	WITHOUT_CLASSIFICATION	0.9999829664088451	WITHOUT_CLASSIFICATION	1.7033591154909452E-5	TEST
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999781247058505	WITHOUT_CLASSIFICATION	2.1875294149594788E-5	TEST
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999781247058505	WITHOUT_CLASSIFICATION	2.1875294149594788E-5	TEST
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999808473623532	WITHOUT_CLASSIFICATION	1.915263764681077E-5	TEST
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// option_to_str	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.999993359209485	WITHOUT_CLASSIFICATION	6.640790515050677E-6	TEST
// args should be before block	WITHOUT_CLASSIFICATION	0.9999533942095341	WITHOUT_CLASSIFICATION	4.660579046601345E-5	TEST
// args should be at end	WITHOUT_CLASSIFICATION	0.9999518230739439	WITHOUT_CLASSIFICATION	4.8176926056189496E-5	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9998671971762306	WITHOUT_CLASSIFICATION	1.3280282376939377E-4	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9998671971762306	WITHOUT_CLASSIFICATION	1.3280282376939377E-4	TEST
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999841429561112	WITHOUT_CLASSIFICATION	1.585704388884535E-5	TEST
// start a new populator	WITHOUT_CLASSIFICATION	0.9999725351606988	WITHOUT_CLASSIFICATION	2.7464839301134834E-5	TEST
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.999973821114429	WITHOUT_CLASSIFICATION	2.6178885571060472E-5	TEST
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9996384616411522	WITHOUT_CLASSIFICATION	3.615383588477499E-4	TEST
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999852089552254	WITHOUT_CLASSIFICATION	1.479104477471406E-5	TEST
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9998328289454154	WITHOUT_CLASSIFICATION	1.6717105458471994E-4	TEST
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999847481317328	WITHOUT_CLASSIFICATION	1.5251868267388352E-5	TEST
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999531527866506	WITHOUT_CLASSIFICATION	4.684721334936307E-5	TEST
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999808298060149	WITHOUT_CLASSIFICATION	1.9170193985122105E-5	TEST
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999966602873696	WITHOUT_CLASSIFICATION	3.3397126303908094E-6	TEST
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999834690543753	WITHOUT_CLASSIFICATION	1.6530945624783426E-5	TEST
//                }	WITHOUT_CLASSIFICATION	0.9999922664625007	WITHOUT_CLASSIFICATION	7.733537499272359E-6	TEST
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.999950099567752	WITHOUT_CLASSIFICATION	4.9900432247976134E-5	TEST
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.999474145738604	WITHOUT_CLASSIFICATION	5.25854261396011E-4	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999395878674261	WITHOUT_CLASSIFICATION	6.041213257399739E-5	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999832570882955	WITHOUT_CLASSIFICATION	1.674291170458562E-5	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999968038747765	WITHOUT_CLASSIFICATION	3.1961252235196707E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999954296869872	WITHOUT_CLASSIFICATION	4.5703130128153195E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999954296869872	WITHOUT_CLASSIFICATION	4.5703130128153195E-6	TEST
// colon3	WITHOUT_CLASSIFICATION	0.9998760203152212	WITHOUT_CLASSIFICATION	1.2397968477886542E-4	TEST
// Colon3	WITHOUT_CLASSIFICATION	0.9998760203152212	WITHOUT_CLASSIFICATION	1.2397968477886542E-4	TEST
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9998477757135634	WITHOUT_CLASSIFICATION	1.5222428643658548E-4	TEST
// For b.foo	WITHOUT_CLASSIFICATION	0.9999865332852392	WITHOUT_CLASSIFICATION	1.3466714760729442E-5	TEST
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999756156121745	WITHOUT_CLASSIFICATION	2.438438782551935E-5	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999954296869872	WITHOUT_CLASSIFICATION	4.5703130128153195E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999954296869872	WITHOUT_CLASSIFICATION	4.5703130128153195E-6	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999745223927904	WITHOUT_CLASSIFICATION	2.5477607209594966E-5	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999745223927904	WITHOUT_CLASSIFICATION	2.5477607209594966E-5	TEST
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9997559521350188	WITHOUT_CLASSIFICATION	2.4404786498115707E-4	TEST
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999865332852392	WITHOUT_CLASSIFICATION	1.3466714760729442E-5	TEST
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999948828861939	WITHOUT_CLASSIFICATION	5.117113806165468E-6	TEST
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999879165472451	WITHOUT_CLASSIFICATION	1.2083452754889831E-5	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999856050031711	WITHOUT_CLASSIFICATION	1.4394996828865448E-5	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999856050031711	WITHOUT_CLASSIFICATION	1.4394996828865448E-5	TEST
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999928071082185	WITHOUT_CLASSIFICATION	7.192891781580878E-6	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9998938789204194	WITHOUT_CLASSIFICATION	1.0612107958054822E-4	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999477885196848	WITHOUT_CLASSIFICATION	5.2211480315248185E-5	TEST
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9999261048946042	WITHOUT_CLASSIFICATION	7.389510539571425E-5	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999745223927904	WITHOUT_CLASSIFICATION	2.5477607209594966E-5	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999794083787835	WITHOUT_CLASSIFICATION	2.0591621216441335E-5	TEST
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.999829440417561	WITHOUT_CLASSIFICATION	1.7055958243883762E-4	TEST
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999830706199745	WITHOUT_CLASSIFICATION	1.6929380025527885E-5	TEST
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999884658227025	WITHOUT_CLASSIFICATION	1.1534177297377903E-5	TEST
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999976599684973	WITHOUT_CLASSIFICATION	2.3400315025719257E-6	TEST
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999318668571471	WITHOUT_CLASSIFICATION	6.813314285288418E-5	TEST
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999626456458494	WITHOUT_CLASSIFICATION	3.735435415068075E-5	TEST
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999930738027389	WITHOUT_CLASSIFICATION	6.926197261113576E-6	TEST
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999929152494534	WITHOUT_CLASSIFICATION	7.084750546611143E-6	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999832570882955	WITHOUT_CLASSIFICATION	1.674291170458562E-5	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999954296869872	WITHOUT_CLASSIFICATION	4.5703130128153195E-6	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999745223927904	WITHOUT_CLASSIFICATION	2.5477607209594966E-5	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999794083787835	WITHOUT_CLASSIFICATION	2.0591621216441335E-5	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999975108186272	WITHOUT_CLASSIFICATION	2.489181372714981E-6	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999975108186272	WITHOUT_CLASSIFICATION	2.489181372714981E-6	TEST
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.999988281639478	WITHOUT_CLASSIFICATION	1.1718360522002434E-5	TEST
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999958336570693	WITHOUT_CLASSIFICATION	4.1663429305703E-6	TEST
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999949353394258	WITHOUT_CLASSIFICATION	5.064660574106728E-6	TEST
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999990699363774	WITHOUT_CLASSIFICATION	9.300636224469222E-7	TEST
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9998472889721236	WITHOUT_CLASSIFICATION	1.5271102787627102E-4	TEST
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999990056936519	WITHOUT_CLASSIFICATION	9.943063481708494E-7	TEST
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999157494244759	WITHOUT_CLASSIFICATION	8.425057552411857E-5	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9998106429624847	WITHOUT_CLASSIFICATION	1.8935703751526387E-4	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999994184573605	WITHOUT_CLASSIFICATION	5.815426395256078E-7	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999588590692423	WITHOUT_CLASSIFICATION	4.114093075764503E-5	TEST
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999655348244753	WITHOUT_CLASSIFICATION	3.446517552466974E-5	TEST
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999995512388203	WITHOUT_CLASSIFICATION	4.4876117957587694E-7	TEST
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999802280293212	WITHOUT_CLASSIFICATION	1.977197067882566E-5	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999968038747765	WITHOUT_CLASSIFICATION	3.1961252235196707E-6	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999745223927904	WITHOUT_CLASSIFICATION	2.5477607209594966E-5	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9998938789204194	WITHOUT_CLASSIFICATION	1.0612107958054822E-4	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999477885196848	WITHOUT_CLASSIFICATION	5.2211480315248185E-5	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999477885196848	WITHOUT_CLASSIFICATION	5.2211480315248185E-5	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999745223927904	WITHOUT_CLASSIFICATION	2.5477607209594966E-5	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999794083787835	WITHOUT_CLASSIFICATION	2.0591621216441335E-5	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999794083787835	WITHOUT_CLASSIFICATION	2.0591621216441335E-5	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999975108186272	WITHOUT_CLASSIFICATION	2.489181372714981E-6	TEST
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999903949497493	WITHOUT_CLASSIFICATION	9.605050250744318E-6	TEST
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9993093895388223	WITHOUT_CLASSIFICATION	6.90610461177543E-4	TEST
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999991124726715	WITHOUT_CLASSIFICATION	8.875273285297252E-7	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.999863186527573	WITHOUT_CLASSIFICATION	1.368134724269131E-4	TEST
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999419311078421	WITHOUT_CLASSIFICATION	5.806889215789909E-5	TEST
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9991736647256109	WITHOUT_CLASSIFICATION	8.26335274389136E-4	TEST
// add in reverse order	WITHOUT_CLASSIFICATION	0.999963077788763	WITHOUT_CLASSIFICATION	3.692221123697268E-5	TEST
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999946414208859	WITHOUT_CLASSIFICATION	5.358579114124958E-6	TEST
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999839238880838	WITHOUT_CLASSIFICATION	1.6076111916286036E-5	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9998938789204194	WITHOUT_CLASSIFICATION	1.0612107958054822E-4	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999477885196848	WITHOUT_CLASSIFICATION	5.2211480315248185E-5	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999477885196848	WITHOUT_CLASSIFICATION	5.2211480315248185E-5	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999745223927904	WITHOUT_CLASSIFICATION	2.5477607209594966E-5	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9998106429624847	WITHOUT_CLASSIFICATION	1.8935703751526387E-4	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999588590692423	WITHOUT_CLASSIFICATION	4.114093075764503E-5	TEST
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9982071773140371	WITHOUT_CLASSIFICATION	0.0017928226859629218	TEST
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999969636227294	WITHOUT_CLASSIFICATION	3.036377270580256E-6	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999865332852392	WITHOUT_CLASSIFICATION	1.3466714760729442E-5	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999865332852392	WITHOUT_CLASSIFICATION	1.3466714760729442E-5	TEST
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999781247058505	WITHOUT_CLASSIFICATION	2.1875294149594788E-5	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999737262740751	WITHOUT_CLASSIFICATION	2.6273725924914775E-5	TEST
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.999939781800185	WITHOUT_CLASSIFICATION	6.021819981506309E-5	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999791753558835	WITHOUT_CLASSIFICATION	2.082464411648301E-5	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.9999975619105951	WITHOUT_CLASSIFICATION	2.438089404858922E-6	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.9999975619105951	WITHOUT_CLASSIFICATION	2.438089404858922E-6	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999701196357452	WITHOUT_CLASSIFICATION	2.9880364254778394E-5	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999701196357452	WITHOUT_CLASSIFICATION	2.9880364254778394E-5	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.999991941437595	WITHOUT_CLASSIFICATION	8.05856240511723E-6	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.999991941437595	WITHOUT_CLASSIFICATION	8.05856240511723E-6	TEST
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999791570151492	WITHOUT_CLASSIFICATION	2.0842984850806794E-5	TEST
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.999980104962706	WITHOUT_CLASSIFICATION	1.989503729400144E-5	TEST
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9998308636939789	WITHOUT_CLASSIFICATION	1.6913630602105134E-4	TEST
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999855755032657	WITHOUT_CLASSIFICATION	1.4424496734261923E-5	TEST
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999996179166033	WITHOUT_CLASSIFICATION	3.8208339659675973E-7	TEST
// pragmas	WITHOUT_CLASSIFICATION	0.9998760203152212	WITHOUT_CLASSIFICATION	1.2397968477886542E-4	TEST
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999891346411397	WITHOUT_CLASSIFICATION	1.0865358860192523E-5	TEST
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.999995932767557	WITHOUT_CLASSIFICATION	4.067232443008086E-6	TEST
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9994992438182252	WITHOUT_CLASSIFICATION	5.007561817747531E-4	TEST
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9994073522630731	WITHOUT_CLASSIFICATION	5.926477369269276E-4	TEST
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.999997735932113	WITHOUT_CLASSIFICATION	2.264067886883668E-6	TEST
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.999980407534666	WITHOUT_CLASSIFICATION	1.9592465333967717E-5	TEST
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9998522153401963	WITHOUT_CLASSIFICATION	1.477846598037493E-4	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999834216702884	WITHOUT_CLASSIFICATION	1.6578329711560544E-5	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999834216702884	WITHOUT_CLASSIFICATION	1.6578329711560544E-5	TEST
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9998295159511293	WITHOUT_CLASSIFICATION	1.7048404887062558E-4	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999936480340036	WITHOUT_CLASSIFICATION	6.351965996431338E-6	TEST
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9998758632071042	WITHOUT_CLASSIFICATION	1.2413679289575703E-4	TEST
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999964868185675	WITHOUT_CLASSIFICATION	3.5131814325628043E-6	TEST
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999902896981191	WITHOUT_CLASSIFICATION	9.710301880988454E-6	TEST
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999791112769465	WITHOUT_CLASSIFICATION	2.0888723053539514E-5	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999895276954629	WITHOUT_CLASSIFICATION	1.047230453705814E-5	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999907838691244	WITHOUT_CLASSIFICATION	9.21613087559605E-6	TEST
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999994357873859	WITHOUT_CLASSIFICATION	5.642126140689748E-7	TEST
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999679534437457	WITHOUT_CLASSIFICATION	3.204655625436832E-5	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999855954736055	WITHOUT_CLASSIFICATION	1.4404526394389125E-5	TEST
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9996637470025205	WITHOUT_CLASSIFICATION	3.3625299747950117E-4	TEST
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999034768698043	WITHOUT_CLASSIFICATION	9.652313019573392E-5	TEST
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999803285457664	WITHOUT_CLASSIFICATION	1.9671454233619277E-5	TEST
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9998867124328578	WITHOUT_CLASSIFICATION	1.1328756714229046E-4	TEST
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9997862384408257	WITHOUT_CLASSIFICATION	2.137615591742874E-4	TEST
// can't do it	WITHOUT_CLASSIFICATION	0.999973686391393	WITHOUT_CLASSIFICATION	2.6313608607038122E-5	TEST
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999805000174263	WITHOUT_CLASSIFICATION	1.9499982573639793E-5	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999880764713728	WITHOUT_CLASSIFICATION	1.1923528627157585E-5	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999880764713728	WITHOUT_CLASSIFICATION	1.1923528627157585E-5	TEST
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999645453847813	WITHOUT_CLASSIFICATION	3.545461521871972E-5	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9994458700358531	WITHOUT_CLASSIFICATION	5.541299641469029E-4	TEST
//[]	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
//[]	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999626456458494	WITHOUT_CLASSIFICATION	3.735435415068075E-5	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9994458700358531	WITHOUT_CLASSIFICATION	5.541299641469029E-4	TEST
//[RubyClass]	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9994458700358531	WITHOUT_CLASSIFICATION	5.541299641469029E-4	TEST
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999951763280114	WITHOUT_CLASSIFICATION	4.823671988706052E-6	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999957862064793	WITHOUT_CLASSIFICATION	4.2137935206181E-6	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999957862064793	WITHOUT_CLASSIFICATION	4.2137935206181E-6	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999959950052938	WITHOUT_CLASSIFICATION	4.004994706265478E-6	TEST
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999928067815479	WITHOUT_CLASSIFICATION	7.193218452045784E-6	TEST
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999514520120216	WITHOUT_CLASSIFICATION	4.854798797833246E-5	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9994458700358531	WITHOUT_CLASSIFICATION	5.541299641469029E-4	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9994458700358531	WITHOUT_CLASSIFICATION	5.541299641469029E-4	TEST
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9994458700358531	WITHOUT_CLASSIFICATION	5.541299641469029E-4	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9994458700358531	WITHOUT_CLASSIFICATION	5.541299641469029E-4	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999423534443721	WITHOUT_CLASSIFICATION	5.7646555627841524E-5	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999959530477075	WITHOUT_CLASSIFICATION	4.046952292490377E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999959530477075	WITHOUT_CLASSIFICATION	4.046952292490377E-6	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999697868592676	WITHOUT_CLASSIFICATION	3.021314073239537E-5	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999697868592676	WITHOUT_CLASSIFICATION	3.021314073239537E-5	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999697868592676	WITHOUT_CLASSIFICATION	3.021314073239537E-5	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999959530477075	WITHOUT_CLASSIFICATION	4.046952292490377E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999959530477075	WITHOUT_CLASSIFICATION	4.046952292490377E-6	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999423534443721	WITHOUT_CLASSIFICATION	5.7646555627841524E-5	TEST
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.999964528602973	WITHOUT_CLASSIFICATION	3.547139702704063E-5	TEST
// always false or nil	WITHOUT_CLASSIFICATION	0.9999795368562459	WITHOUT_CLASSIFICATION	2.046314375403918E-5	TEST
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999364187178758	WITHOUT_CLASSIFICATION	6.358128212422272E-5	TEST
// normal	WITHOUT_CLASSIFICATION	0.9998786243701374	WITHOUT_CLASSIFICATION	1.2137562986270027E-4	TEST
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999994157885187	WITHOUT_CLASSIFICATION	5.842114812372184E-7	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999359911016704	WITHOUT_CLASSIFICATION	6.400889832961502E-5	TEST
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999917091320213	WITHOUT_CLASSIFICATION	8.29086797867374E-6	TEST
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.99997968042179	WITHOUT_CLASSIFICATION	2.0319578209958306E-5	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999855954736055	WITHOUT_CLASSIFICATION	1.4404526394389125E-5	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999959530477075	WITHOUT_CLASSIFICATION	4.046952292490377E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999959530477075	WITHOUT_CLASSIFICATION	4.046952292490377E-6	TEST
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999896079517986	WITHOUT_CLASSIFICATION	1.0392048201443396E-5	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.99999127929728	WITHOUT_CLASSIFICATION	8.720702719906751E-6	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999938344416386	WITHOUT_CLASSIFICATION	6.165558361494513E-6	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999899274805488	WITHOUT_CLASSIFICATION	1.0072519451213554E-5	TEST
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999876558541653	WITHOUT_CLASSIFICATION	1.2344145834643475E-5	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999961341943463	WITHOUT_CLASSIFICATION	3.865805653695112E-6	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999878971104522	WITHOUT_CLASSIFICATION	1.2102889547812366E-5	TEST
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999992025309676	WITHOUT_CLASSIFICATION	7.974690323135503E-7	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999842440943193	WITHOUT_CLASSIFICATION	1.5755905680650557E-5	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999827818361917	WITHOUT_CLASSIFICATION	1.721816380829748E-5	TEST
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9997547024364984	WITHOUT_CLASSIFICATION	2.4529756350150024E-4	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.9999310152614117	WITHOUT_CLASSIFICATION	6.898473858832426E-5	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999454288402673	WITHOUT_CLASSIFICATION	5.45711597328154E-5	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999847965598271	WITHOUT_CLASSIFICATION	1.5203440172952988E-5	TEST
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999994331041278	WITHOUT_CLASSIFICATION	5.668958722665718E-7	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9998760203152212	WITHOUT_CLASSIFICATION	1.2397968477886542E-4	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9998760203152212	WITHOUT_CLASSIFICATION	1.2397968477886542E-4	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9998760203152212	WITHOUT_CLASSIFICATION	1.2397968477886542E-4	TEST
// compile into array	WITHOUT_CLASSIFICATION	0.9999844008261676	WITHOUT_CLASSIFICATION	1.5599173832418313E-5	TEST
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.999998722978293	WITHOUT_CLASSIFICATION	1.2770217070702907E-6	TEST
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.999994492081702	WITHOUT_CLASSIFICATION	5.5079182979936976E-6	TEST
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999160376182387	WITHOUT_CLASSIFICATION	8.396238176133448E-5	TEST
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999848538446617	WITHOUT_CLASSIFICATION	1.5146155338262842E-5	TEST
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999834749332777	WITHOUT_CLASSIFICATION	1.652506672240194E-5	TEST
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999982355205264	WITHOUT_CLASSIFICATION	1.7644794736307085E-6	TEST
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9998740879662759	WITHOUT_CLASSIFICATION	1.2591203372411117E-4	TEST
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999689970087695	WITHOUT_CLASSIFICATION	3.100299123060959E-5	TEST
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999961877773581	WITHOUT_CLASSIFICATION	3.812222641918825E-6	TEST
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999902191795765	WITHOUT_CLASSIFICATION	9.780820423466883E-6	TEST
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999489792055827	WITHOUT_CLASSIFICATION	5.1020794417296156E-5	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999959950052938	WITHOUT_CLASSIFICATION	4.004994706265478E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999959530477075	WITHOUT_CLASSIFICATION	4.046952292490377E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999959530477075	WITHOUT_CLASSIFICATION	4.046952292490377E-6	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999423534443721	WITHOUT_CLASSIFICATION	5.7646555627841524E-5	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999359911016704	WITHOUT_CLASSIFICATION	6.400889832961502E-5	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.99999127929728	WITHOUT_CLASSIFICATION	8.720702719906751E-6	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999899274805488	WITHOUT_CLASSIFICATION	1.0072519451213554E-5	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999961341943463	WITHOUT_CLASSIFICATION	3.865805653695112E-6	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999938344416386	WITHOUT_CLASSIFICATION	6.165558361494513E-6	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999878971104522	WITHOUT_CLASSIFICATION	1.2102889547812366E-5	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999827818361917	WITHOUT_CLASSIFICATION	1.721816380829748E-5	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999842440943193	WITHOUT_CLASSIFICATION	1.5755905680650557E-5	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.9999310152614117	WITHOUT_CLASSIFICATION	6.898473858832426E-5	TEST
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999930536379871	WITHOUT_CLASSIFICATION	6.9463620130151825E-6	TEST
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999973787538915	WITHOUT_CLASSIFICATION	2.6212461085648765E-6	TEST
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999880779925658	WITHOUT_CLASSIFICATION	1.1922007434062128E-5	TEST
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999905699184423	WITHOUT_CLASSIFICATION	9.430081557699836E-6	TEST
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999637357446843	WITHOUT_CLASSIFICATION	3.6264255315625084E-5	TEST
// Time the compilation	WITHOUT_CLASSIFICATION	0.99999197141028	WITHOUT_CLASSIFICATION	8.028589720054822E-6	TEST
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999866244880048	WITHOUT_CLASSIFICATION	1.337551199522847E-5	TEST
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.999757122646981	WITHOUT_CLASSIFICATION	2.4287735301890112E-4	TEST
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999816914577323	WITHOUT_CLASSIFICATION	1.8308542267630323E-5	TEST
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999992593677527	WITHOUT_CLASSIFICATION	7.406322472914408E-7	TEST
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999865450009819	WITHOUT_CLASSIFICATION	1.3454999017973466E-5	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999853123137045	WITHOUT_CLASSIFICATION	1.4687686295628891E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999543860286725	WITHOUT_CLASSIFICATION	4.561397132747378E-5	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999935875156506	WITHOUT_CLASSIFICATION	6.412484349463784E-6	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.999992723221606	WITHOUT_CLASSIFICATION	7.276778393927862E-6	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999864512411498	WITHOUT_CLASSIFICATION	1.3548758850194511E-5	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999742363167488	WITHOUT_CLASSIFICATION	2.576368325116822E-5	TEST
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999902281362804	WITHOUT_CLASSIFICATION	9.771863719695644E-6	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.999996130871378	WITHOUT_CLASSIFICATION	3.869128621996222E-6	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999922251890135	WITHOUT_CLASSIFICATION	7.77481098635926E-6	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.999991919091055	WITHOUT_CLASSIFICATION	8.080908945026539E-6	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999977978099974	WITHOUT_CLASSIFICATION	2.2021900026455245E-6	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999977978099974	WITHOUT_CLASSIFICATION	2.2021900026455245E-6	TEST
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9998030214803467	WITHOUT_CLASSIFICATION	1.9697851965326134E-4	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999919031750406	WITHOUT_CLASSIFICATION	8.09682495948292E-6	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
/*arg2*/	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999919031750406	WITHOUT_CLASSIFICATION	8.09682495948292E-6	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999777488293439	WITHOUT_CLASSIFICATION	2.2251170656108803E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999976767154538	WITHOUT_CLASSIFICATION	2.323284546232269E-6	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999976767154538	WITHOUT_CLASSIFICATION	2.323284546232269E-6	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999934481897615	WITHOUT_CLASSIFICATION	6.551810238419292E-6	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999934481897615	WITHOUT_CLASSIFICATION	6.551810238419292E-6	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9998761518329738	WITHOUT_CLASSIFICATION	1.2384816702610326E-4	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9998761518329738	WITHOUT_CLASSIFICATION	1.2384816702610326E-4	TEST
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999159419783689	WITHOUT_CLASSIFICATION	8.405802163114397E-5	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999552071507198	WITHOUT_CLASSIFICATION	4.479284928011316E-5	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999552071507198	WITHOUT_CLASSIFICATION	4.479284928011316E-5	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999874391051252	WITHOUT_CLASSIFICATION	1.2560894874718416E-5	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999874391051252	WITHOUT_CLASSIFICATION	1.2560894874718416E-5	TEST
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999781533365127	WITHOUT_CLASSIFICATION	2.184666348729428E-5	TEST
// call site	WITHOUT_CLASSIFICATION	0.99999482338436	WITHOUT_CLASSIFICATION	5.17661563998353E-6	TEST
// call site	WITHOUT_CLASSIFICATION	0.99999482338436	WITHOUT_CLASSIFICATION	5.17661563998353E-6	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.99998793001336	WITHOUT_CLASSIFICATION	1.2069986640036341E-5	TEST
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9998754638402193	WITHOUT_CLASSIFICATION	1.2453615978074673E-4	TEST
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999929794183077	WITHOUT_CLASSIFICATION	7.020581692355628E-6	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.99998793001336	WITHOUT_CLASSIFICATION	1.2069986640036341E-5	TEST
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.999970031237294	WITHOUT_CLASSIFICATION	2.9968762706025464E-5	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999877864777315	WITHOUT_CLASSIFICATION	1.2213522268599914E-5	TEST
// args	WITHOUT_CLASSIFICATION	0.9998774358171936	WITHOUT_CLASSIFICATION	1.2256418280632731E-4	TEST
// block	WITHOUT_CLASSIFICATION	0.9998785193326936	WITHOUT_CLASSIFICATION	1.2148066730638023E-4	TEST
// block	WITHOUT_CLASSIFICATION	0.9998785193326936	WITHOUT_CLASSIFICATION	1.2148066730638023E-4	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999954347795081	WITHOUT_CLASSIFICATION	4.565220491802036E-6	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999535541760352	WITHOUT_CLASSIFICATION	4.644582396480937E-5	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.9999535541760352	WITHOUT_CLASSIFICATION	4.6445823964809414E-5	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.999909912604184	WITHOUT_CLASSIFICATION	9.008739581601013E-5	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999585364323899	WITHOUT_CLASSIFICATION	4.146356761012515E-5	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.999986657212882	WITHOUT_CLASSIFICATION	1.3342787117841255E-5	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.999986657212882	WITHOUT_CLASSIFICATION	1.3342787117841255E-5	TEST
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999970217842605	WITHOUT_CLASSIFICATION	2.978215739487196E-6	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// args	WITHOUT_CLASSIFICATION	0.9998774358171936	WITHOUT_CLASSIFICATION	1.2256418280632731E-4	TEST
// block	WITHOUT_CLASSIFICATION	0.9998785193326936	WITHOUT_CLASSIFICATION	1.2148066730638023E-4	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999954347795081	WITHOUT_CLASSIFICATION	4.565220491802036E-6	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999535541760352	WITHOUT_CLASSIFICATION	4.644582396480937E-5	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.9999535541760352	WITHOUT_CLASSIFICATION	4.6445823964809414E-5	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.999909912604184	WITHOUT_CLASSIFICATION	9.008739581601013E-5	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999799019807457	WITHOUT_CLASSIFICATION	2.0098019254310968E-5	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999958029655932	WITHOUT_CLASSIFICATION	4.197034406836196E-6	TEST
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999884923437058	WITHOUT_CLASSIFICATION	1.1507656294148957E-5	TEST
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999847696209615	WITHOUT_CLASSIFICATION	1.5230379038467093E-5	TEST
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999693896352684	WITHOUT_CLASSIFICATION	3.0610364731682986E-5	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999325004330162	WITHOUT_CLASSIFICATION	6.749956698382337E-5	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999349306942781	WITHOUT_CLASSIFICATION	6.50693057218673E-5	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999349306942781	WITHOUT_CLASSIFICATION	6.50693057218673E-5	TEST
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999820370803524	WITHOUT_CLASSIFICATION	1.7962919647621072E-5	TEST
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999687719427114	WITHOUT_CLASSIFICATION	3.122805728866757E-5	TEST
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999687719427114	WITHOUT_CLASSIFICATION	3.122805728866757E-5	TEST
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999698600129692	WITHOUT_CLASSIFICATION	3.0139987030853938E-5	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999687719427114	WITHOUT_CLASSIFICATION	3.122805728866757E-5	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999687719427114	WITHOUT_CLASSIFICATION	3.122805728866757E-5	TEST
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999565299748612	WITHOUT_CLASSIFICATION	4.34700251388401E-5	TEST
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999566000331456	WITHOUT_CLASSIFICATION	4.339996685449758E-5	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999694019628611	WITHOUT_CLASSIFICATION	3.059803713887825E-5	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999694019628611	WITHOUT_CLASSIFICATION	3.059803713887825E-5	TEST
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999687719427114	WITHOUT_CLASSIFICATION	3.122805728866757E-5	TEST
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999857687575316	WITHOUT_CLASSIFICATION	1.4231242468269194E-5	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999585364323899	WITHOUT_CLASSIFICATION	4.146356761012515E-5	TEST
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999954721044827	WITHOUT_CLASSIFICATION	4.527895517259583E-6	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9998722175883433	WITHOUT_CLASSIFICATION	1.2778241165661809E-4	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.999979825327841	WITHOUT_CLASSIFICATION	2.017467215898963E-5	TEST
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999811317323515	WITHOUT_CLASSIFICATION	1.8868267648532755E-5	TEST
// load Object under value	WITHOUT_CLASSIFICATION	0.9999630758404617	WITHOUT_CLASSIFICATION	3.6924159538255315E-5	TEST
// put under object array already present	WITHOUT_CLASSIFICATION	0.999931921376123	WITHOUT_CLASSIFICATION	6.807862387703296E-5	TEST
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999852617400841	WITHOUT_CLASSIFICATION	1.4738259915965222E-5	TEST
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999655341611111	WITHOUT_CLASSIFICATION	3.4465838888765815E-5	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999894893066272	WITHOUT_CLASSIFICATION	1.0510693372800186E-5	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999894893066272	WITHOUT_CLASSIFICATION	1.0510693372800186E-5	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.999959062553798	WITHOUT_CLASSIFICATION	4.09374462019593E-5	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.999959062553798	WITHOUT_CLASSIFICATION	4.09374462019593E-5	TEST
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.999993417820974	WITHOUT_CLASSIFICATION	6.582179026110931E-6	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.99999596968031	WITHOUT_CLASSIFICATION	4.030319689939965E-6	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.99999596968031	WITHOUT_CLASSIFICATION	4.030319689939965E-6	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.99999596968031	WITHOUT_CLASSIFICATION	4.030319689939965E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999732322531362	WITHOUT_CLASSIFICATION	2.6767746863792792E-5	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999524428577407	WITHOUT_CLASSIFICATION	4.7557142259389096E-5	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999524428577407	WITHOUT_CLASSIFICATION	4.7557142259389096E-5	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999890628392696	WITHOUT_CLASSIFICATION	1.0937160730362637E-5	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.9999962875974299	WITHOUT_CLASSIFICATION	3.71240257013246E-6	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999681559230047	WITHOUT_CLASSIFICATION	3.184407699530996E-5	TEST
// skip catch block	WITHOUT_CLASSIFICATION	0.999992431262524	WITHOUT_CLASSIFICATION	7.568737475936996E-6	TEST
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999464954288568	WITHOUT_CLASSIFICATION	5.350457114317883E-5	TEST
// next jump	WITHOUT_CLASSIFICATION	0.999992236161717	WITHOUT_CLASSIFICATION	7.76383828299971E-6	TEST
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9991227918138047	WITHOUT_CLASSIFICATION	8.772081861952055E-4	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999543860286725	WITHOUT_CLASSIFICATION	4.561397132747378E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999543860286725	WITHOUT_CLASSIFICATION	4.561397132747378E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999732322531362	WITHOUT_CLASSIFICATION	2.6767746863792792E-5	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999890628392696	WITHOUT_CLASSIFICATION	1.0937160730362637E-5	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999918010857142	WITHOUT_CLASSIFICATION	8.198914285769022E-6	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.9999962875974299	WITHOUT_CLASSIFICATION	3.71240257013246E-6	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999681559230047	WITHOUT_CLASSIFICATION	3.184407699530996E-5	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999844002672764	WITHOUT_CLASSIFICATION	1.559973272353255E-5	TEST
// break jump	WITHOUT_CLASSIFICATION	0.999991198544004	WITHOUT_CLASSIFICATION	8.801455996116093E-6	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998284613589941	WITHOUT_CLASSIFICATION	1.7153864100587611E-4	TEST
//[reg]	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999199188453514	WITHOUT_CLASSIFICATION	8.00811546485836E-5	TEST
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999971559418569	WITHOUT_CLASSIFICATION	2.844058143133557E-6	TEST
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.999994400417013	WITHOUT_CLASSIFICATION	5.59958298695079E-6	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999844002672764	WITHOUT_CLASSIFICATION	1.559973272353255E-5	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999384440639965	WITHOUT_CLASSIFICATION	6.155593600354163E-5	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999384440639965	WITHOUT_CLASSIFICATION	6.155593600354163E-5	TEST
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999606284756738	WITHOUT_CLASSIFICATION	3.937152432618147E-5	TEST
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999926851373309	WITHOUT_CLASSIFICATION	7.314862669180374E-6	TEST
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999945278450948	WITHOUT_CLASSIFICATION	5.472154905158854E-6	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999775661835647	WITHOUT_CLASSIFICATION	2.2433816435275577E-5	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999735828999087	WITHOUT_CLASSIFICATION	2.6417100091350882E-5	TEST
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999931014939615	WITHOUT_CLASSIFICATION	6.8985060384558E-6	TEST
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999892191448841	WITHOUT_CLASSIFICATION	1.0780855115925177E-5	TEST
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999596279817451	WITHOUT_CLASSIFICATION	4.037201825486812E-5	TEST
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999974865451087	WITHOUT_CLASSIFICATION	2.513454891286286E-6	TEST
// false // zero	WITHOUT_CLASSIFICATION	0.9999928788181459	WITHOUT_CLASSIFICATION	7.121181854058207E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999728162674963	WITHOUT_CLASSIFICATION	2.7183732503672803E-5	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999775661835647	WITHOUT_CLASSIFICATION	2.2433816435275577E-5	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999735828999087	WITHOUT_CLASSIFICATION	2.6417100091350882E-5	TEST
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999925824469683	WITHOUT_CLASSIFICATION	7.4175530316696536E-6	TEST
// push false	WITHOUT_CLASSIFICATION	0.9999913817798165	WITHOUT_CLASSIFICATION	8.618220183580118E-6	TEST
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9994458700358531	WITHOUT_CLASSIFICATION	5.541299641469029E-4	TEST
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9997075820215736	WITHOUT_CLASSIFICATION	2.924179784264227E-4	TEST
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999542914290561	WITHOUT_CLASSIFICATION	4.570857094383789E-5	TEST
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9994458700358531	WITHOUT_CLASSIFICATION	5.541299641469029E-4	TEST
//[C]	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
// push true	WITHOUT_CLASSIFICATION	0.9999927883383712	WITHOUT_CLASSIFICATION	7.211661628810135E-6	TEST
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999694153956467	WITHOUT_CLASSIFICATION	3.058460435331886E-5	TEST
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9997075820215736	WITHOUT_CLASSIFICATION	2.924179784264227E-4	TEST
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9994458700358531	WITHOUT_CLASSIFICATION	5.541299641469029E-4	TEST
//[boolean]	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.999981449027832	WITHOUT_CLASSIFICATION	1.8550972168022513E-5	TEST
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999250096490577	WITHOUT_CLASSIFICATION	7.499035094232922E-5	TEST
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.999926330033118	WITHOUT_CLASSIFICATION	7.366996688188853E-5	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999991788007192	WITHOUT_CLASSIFICATION	8.211992807058261E-7	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999909618490649	WITHOUT_CLASSIFICATION	9.038150935132337E-6	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999921539608597	WITHOUT_CLASSIFICATION	7.846039140268892E-6	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999910942223877	WITHOUT_CLASSIFICATION	8.905777612381659E-6	TEST
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999747482644685	WITHOUT_CLASSIFICATION	2.5251735531545212E-5	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999909618490649	WITHOUT_CLASSIFICATION	9.038150935132337E-6	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999921539608597	WITHOUT_CLASSIFICATION	7.846039140268892E-6	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999910942223877	WITHOUT_CLASSIFICATION	8.905777612381659E-6	TEST
// finally with exception	WITHOUT_CLASSIFICATION	0.9999144023868404	WITHOUT_CLASSIFICATION	8.559761315960951E-5	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999979096971393	WITHOUT_CLASSIFICATION	2.0903028607531422E-6	TEST
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.999978034516339	WITHOUT_CLASSIFICATION	2.1965483660992303E-5	TEST
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9997921800358017	WITHOUT_CLASSIFICATION	2.0781996419826036E-4	TEST
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999571491314843	WITHOUT_CLASSIFICATION	4.2850868515685136E-5	TEST
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999685313669022	WITHOUT_CLASSIFICATION	3.1468633097801496E-5	TEST
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999972338286082	WITHOUT_CLASSIFICATION	2.766171391937975E-6	TEST
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999972922775753	WITHOUT_CLASSIFICATION	2.7077224247806907E-6	TEST
// script object	WITHOUT_CLASSIFICATION	0.9999860336021557	WITHOUT_CLASSIFICATION	1.3966397844375352E-5	TEST
// arities	WITHOUT_CLASSIFICATION	0.9998760203152212	WITHOUT_CLASSIFICATION	1.2397968477886542E-4	TEST
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9933416347002183	WITHOUT_CLASSIFICATION	0.006658365299781658	TEST
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999528649382883	WITHOUT_CLASSIFICATION	4.713506171175366E-5	TEST
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999774792842092	WITHOUT_CLASSIFICATION	2.2520715790741147E-5	TEST
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999968060960222	WITHOUT_CLASSIFICATION	3.1939039777970605E-6	TEST
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9949365754989253	WITHOUT_CLASSIFICATION	0.005063424501074662	TEST
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999541079209433	WITHOUT_CLASSIFICATION	4.589207905667264E-5	TEST
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999829436703427	WITHOUT_CLASSIFICATION	1.7056329657286692E-5	TEST
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9998842813744263	WITHOUT_CLASSIFICATION	1.1571862557367703E-4	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999899838029472	WITHOUT_CLASSIFICATION	1.001619705275821E-5	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999884012781719	WITHOUT_CLASSIFICATION	1.1598721828100103E-5	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999932128584202	WITHOUT_CLASSIFICATION	6.787141579742606E-6	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999926038488647	WITHOUT_CLASSIFICATION	7.396151135316899E-6	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999926038488647	WITHOUT_CLASSIFICATION	7.396151135316899E-6	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999441986725965	WITHOUT_CLASSIFICATION	5.580132740345004E-5	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999441986725965	WITHOUT_CLASSIFICATION	5.580132740345004E-5	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999760724565838	WITHOUT_CLASSIFICATION	2.3927543416214425E-5	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999760724565838	WITHOUT_CLASSIFICATION	2.3927543416214425E-5	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999394046574454	WITHOUT_CLASSIFICATION	6.059534255452776E-5	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999977575356149	WITHOUT_CLASSIFICATION	2.2424643851213277E-6	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.999995588425513	WITHOUT_CLASSIFICATION	4.411574487042553E-6	TEST
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999950627939271	WITHOUT_CLASSIFICATION	4.93720607286632E-6	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999940937570252	WITHOUT_CLASSIFICATION	5.906242974797571E-6	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999763180660403	WITHOUT_CLASSIFICATION	2.3681933959730984E-5	TEST
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999788999217891	WITHOUT_CLASSIFICATION	2.1100078210891927E-5	TEST
// then optional args	WITHOUT_CLASSIFICATION	0.9999908158587667	WITHOUT_CLASSIFICATION	9.184141233285713E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999543860286725	WITHOUT_CLASSIFICATION	4.561397132747378E-5	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999394046574454	WITHOUT_CLASSIFICATION	6.059534255452776E-5	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999977575356149	WITHOUT_CLASSIFICATION	2.2424643851213277E-6	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.999995588425513	WITHOUT_CLASSIFICATION	4.411574487042553E-6	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999940937570252	WITHOUT_CLASSIFICATION	5.906242974797571E-6	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999763180660403	WITHOUT_CLASSIFICATION	2.3681933959730984E-5	TEST
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999607943155268	WITHOUT_CLASSIFICATION	3.92056844732885E-5	TEST
// finally, post args	WITHOUT_CLASSIFICATION	0.9999792118587661	WITHOUT_CLASSIFICATION	2.0788141233919394E-5	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9991124421189914	WITHOUT_CLASSIFICATION	8.875578810086347E-4	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9991124421189914	WITHOUT_CLASSIFICATION	8.875578810086347E-4	TEST
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999891778507816	WITHOUT_CLASSIFICATION	1.0822149218391277E-5	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.999851647051272	WITHOUT_CLASSIFICATION	1.4835294872792413E-4	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999963323155264	WITHOUT_CLASSIFICATION	3.667684473667145E-6	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999875188947722	WITHOUT_CLASSIFICATION	1.2481105227868343E-5	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999875188947722	WITHOUT_CLASSIFICATION	1.2481105227868343E-5	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999581528816082	WITHOUT_CLASSIFICATION	4.184711839178274E-5	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9998527988093671	WITHOUT_CLASSIFICATION	1.4720119063297337E-4	TEST
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999943106641418	WITHOUT_CLASSIFICATION	5.689335858204012E-6	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999909585033913	WITHOUT_CLASSIFICATION	9.041496608758358E-6	TEST
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999975336241712	WITHOUT_CLASSIFICATION	2.466375828792803E-6	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999935875156506	WITHOUT_CLASSIFICATION	6.412484349463784E-6	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.999992723221606	WITHOUT_CLASSIFICATION	7.276778393927862E-6	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999864512411498	WITHOUT_CLASSIFICATION	1.3548758850194511E-5	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999742363167488	WITHOUT_CLASSIFICATION	2.576368325116822E-5	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999922251890135	WITHOUT_CLASSIFICATION	7.77481098635926E-6	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.999991919091055	WITHOUT_CLASSIFICATION	8.080908945026539E-6	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999581528816082	WITHOUT_CLASSIFICATION	4.184711839178274E-5	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9998527988093671	WITHOUT_CLASSIFICATION	1.4720119063297337E-4	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999909585033913	WITHOUT_CLASSIFICATION	9.041496608758358E-6	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999969092587028	WITHOUT_CLASSIFICATION	3.0907412971811106E-6	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999963323155264	WITHOUT_CLASSIFICATION	3.667684473667145E-6	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999963323155264	WITHOUT_CLASSIFICATION	3.667684473667145E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999728162674963	WITHOUT_CLASSIFICATION	2.7183732503672803E-5	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999728162674963	WITHOUT_CLASSIFICATION	2.7183732503672803E-5	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.999987253790062	WITHOUT_CLASSIFICATION	1.2746209937945186E-5	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.999987253790062	WITHOUT_CLASSIFICATION	1.2746209937945186E-5	TEST
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999950059724866	WITHOUT_CLASSIFICATION	4.994027513440634E-6	TEST
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999959125936015	WITHOUT_CLASSIFICATION	4.087406398435862E-6	TEST
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999577120411826	WITHOUT_CLASSIFICATION	4.2287958817447236E-5	TEST
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999407925240053	WITHOUT_CLASSIFICATION	5.920747599466573E-5	TEST
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999941006557199	WITHOUT_CLASSIFICATION	5.899344279998813E-6	TEST
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999873574368463	WITHOUT_CLASSIFICATION	1.2642563153687529E-5	TEST
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999894647226573	WITHOUT_CLASSIFICATION	1.053527734267195E-5	TEST
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999818844325514	WITHOUT_CLASSIFICATION	1.8115567448614E-5	TEST
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999704521024753	WITHOUT_CLASSIFICATION	2.95478975247244E-5	TEST
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999853123137045	WITHOUT_CLASSIFICATION	1.4687686295628891E-5	TEST
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999793941200021	WITHOUT_CLASSIFICATION	2.060587999781743E-5	TEST
// verify the class	WITHOUT_CLASSIFICATION	0.9999980557714003	WITHOUT_CLASSIFICATION	1.9442285997829867E-6	TEST
// create dir if necessary	WITHOUT_CLASSIFICATION	0.999986509213092	WITHOUT_CLASSIFICATION	1.3490786908094554E-5	TEST
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.999995588470802	WITHOUT_CLASSIFICATION	4.4115291979530755E-6	TEST
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999914500561888	WITHOUT_CLASSIFICATION	8.549943811255516E-6	TEST
// thread context	WITHOUT_CLASSIFICATION	0.9999931802350661	WITHOUT_CLASSIFICATION	6.819764933857717E-6	TEST
// line number	WITHOUT_CLASSIFICATION	0.9999930906068629	WITHOUT_CLASSIFICATION	6.909393137081514E-6	TEST
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999656202194328	WITHOUT_CLASSIFICATION	3.437978056716983E-5	TEST
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9998817922469176	WITHOUT_CLASSIFICATION	1.1820775308241197E-4	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.999992723221606	WITHOUT_CLASSIFICATION	7.276778393927862E-6	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999742363167488	WITHOUT_CLASSIFICATION	2.576368325116822E-5	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999977978099974	WITHOUT_CLASSIFICATION	2.2021900026455245E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9998785193326936	WITHOUT_CLASSIFICATION	1.2148066730638023E-4	TEST
// block	WITHOUT_CLASSIFICATION	0.9998785193326936	WITHOUT_CLASSIFICATION	1.2148066730638023E-4	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999969092587028	WITHOUT_CLASSIFICATION	3.0907412971811106E-6	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999963323155264	WITHOUT_CLASSIFICATION	3.667684473667145E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999728162674963	WITHOUT_CLASSIFICATION	2.7183732503672803E-5	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.999987253790062	WITHOUT_CLASSIFICATION	1.2746209937945186E-5	TEST
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.99994310771616	WITHOUT_CLASSIFICATION	5.689228384004488E-5	TEST
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9991328153273188	WITHOUT_CLASSIFICATION	8.671846726812219E-4	TEST
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999871188304352	WITHOUT_CLASSIFICATION	1.2881169564812682E-5	TEST
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9995592111349058	WITHOUT_CLASSIFICATION	4.407888650943421E-4	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999807464650305	WITHOUT_CLASSIFICATION	1.9253534969426722E-5	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999807464650305	WITHOUT_CLASSIFICATION	1.9253534969426722E-5	TEST
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999803252481747	WITHOUT_CLASSIFICATION	1.967475182528147E-5	TEST
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999870622734712	WITHOUT_CLASSIFICATION	1.2937726528735471E-5	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999810360078378	WITHOUT_CLASSIFICATION	1.896399216214125E-5	TEST
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999845631778101	WITHOUT_CLASSIFICATION	1.5436822189847427E-5	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999970037107535	WITHOUT_CLASSIFICATION	2.9962892464478256E-6	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999970037107535	WITHOUT_CLASSIFICATION	2.9962892464478256E-6	TEST
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.999937996221384	WITHOUT_CLASSIFICATION	6.200377861601558E-5	TEST
// normal closure	WITHOUT_CLASSIFICATION	0.999991153126191	WITHOUT_CLASSIFICATION	8.846873809041232E-6	TEST
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999744174570562	WITHOUT_CLASSIFICATION	2.5582542943792488E-5	TEST
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9985432557308451	WITHOUT_CLASSIFICATION	0.0014567442691548384	TEST
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999789994340443	WITHOUT_CLASSIFICATION	2.100056595571457E-5	TEST
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999940127752173	WITHOUT_CLASSIFICATION	5.9872247826667694E-6	TEST
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999771865621734	WITHOUT_CLASSIFICATION	2.2813437826667767E-5	TEST
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999881450028372	WITHOUT_CLASSIFICATION	1.185499716279556E-5	TEST
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9999880222634877	WITHOUT_CLASSIFICATION	1.1977736512342289E-5	TEST
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9871834173024037	WITHOUT_CLASSIFICATION	0.012816582697596335	TEST
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999291351264816	WITHOUT_CLASSIFICATION	7.08648735184712E-5	TEST
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999643970972586	WITHOUT_CLASSIFICATION	3.5602902741343744E-5	TEST
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999998817954596	WITHOUT_CLASSIFICATION	1.1820454042038434E-7	TEST
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.99999457117988	WITHOUT_CLASSIFICATION	5.42882011997048E-6	TEST
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9997954401231307	WITHOUT_CLASSIFICATION	2.0455987686933706E-4	TEST
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999916544734763	WITHOUT_CLASSIFICATION	8.345526523740994E-6	TEST
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999907707790249	WITHOUT_CLASSIFICATION	9.22922097507783E-6	TEST
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999926287793782	WITHOUT_CLASSIFICATION	7.37122062184953E-6	TEST
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999998870304245	WITHOUT_CLASSIFICATION	1.1296957542060402E-7	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999942444410161	WITHOUT_CLASSIFICATION	5.755558983828912E-6	TEST
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9998862103001894	WITHOUT_CLASSIFICATION	1.1378969981059739E-4	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999893141899375	WITHOUT_CLASSIFICATION	1.0685810062507102E-5	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999893141899375	WITHOUT_CLASSIFICATION	1.0685810062507102E-5	TEST
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999951060010821	WITHOUT_CLASSIFICATION	4.893998917842773E-6	TEST
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999950442108906	WITHOUT_CLASSIFICATION	4.955789109437306E-6	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999907838691244	WITHOUT_CLASSIFICATION	9.21613087559605E-6	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999907838691244	WITHOUT_CLASSIFICATION	9.21613087559605E-6	TEST
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9999258802828803	WITHOUT_CLASSIFICATION	7.411971711966333E-5	TEST
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.999990775233064	WITHOUT_CLASSIFICATION	9.224766936016583E-6	TEST
// done // done // done // done	WITHOUT_CLASSIFICATION	0.999858258469508	WITHOUT_CLASSIFICATION	1.4174153049198253E-4	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999904186205163	WITHOUT_CLASSIFICATION	9.581379483740933E-6	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999904186205163	WITHOUT_CLASSIFICATION	9.581379483740933E-6	TEST
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999953792268041	WITHOUT_CLASSIFICATION	4.620773195874858E-6	TEST
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999991331943944	WITHOUT_CLASSIFICATION	8.668056056959792E-7	TEST
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999970195768101	WITHOUT_CLASSIFICATION	2.9804231899125434E-6	TEST
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999959026391191	WITHOUT_CLASSIFICATION	4.097360881018053E-6	TEST
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999867649371875	WITHOUT_CLASSIFICATION	1.3235062812467925E-5	TEST
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999953298418751	WITHOUT_CLASSIFICATION	4.670158124962207E-6	TEST
// the CASE instruction	WITHOUT_CLASSIFICATION	0.999991963785767	WITHOUT_CLASSIFICATION	8.036214232863478E-6	TEST
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999970193879917	WITHOUT_CLASSIFICATION	2.9806120082139104E-6	TEST
// build each "when"	WITHOUT_CLASSIFICATION	0.9999936973025307	WITHOUT_CLASSIFICATION	6.302697469225751E-6	TEST
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999626333777341	WITHOUT_CLASSIFICATION	3.736662226592059E-5	TEST
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999403229680079	WITHOUT_CLASSIFICATION	5.967703199210672E-5	TEST
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999804061056592	WITHOUT_CLASSIFICATION	1.9593894340774622E-5	TEST
// close it out	WITHOUT_CLASSIFICATION	0.9999881292309476	WITHOUT_CLASSIFICATION	1.1870769052425326E-5	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.999910245469785	WITHOUT_CLASSIFICATION	8.97545302149014E-5	TEST
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9999821851013442	WITHOUT_CLASSIFICATION	1.7814898655902455E-5	TEST
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999983442638065	WITHOUT_CLASSIFICATION	1.655736193494718E-6	TEST
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999960414858945	WITHOUT_CLASSIFICATION	3.958514105450117E-6	TEST
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999875621002988	WITHOUT_CLASSIFICATION	1.2437899701168956E-5	TEST
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999879790631377	WITHOUT_CLASSIFICATION	1.2020936862219886E-5	TEST
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999952508380808	WITHOUT_CLASSIFICATION	4.749161919102494E-6	TEST
// Instance method	WITHOUT_CLASSIFICATION	0.9999956650615193	WITHOUT_CLASSIFICATION	4.3349384807307874E-6	TEST
// Class method	WITHOUT_CLASSIFICATION	0.9999965224253508	WITHOUT_CLASSIFICATION	3.4775746493063276E-6	TEST
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999731984522295	WITHOUT_CLASSIFICATION	2.6801547770455036E-5	TEST
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999868358032185	WITHOUT_CLASSIFICATION	1.3164196781629399E-5	TEST
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999962202210079	WITHOUT_CLASSIFICATION	3.779778992168576E-6	TEST
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999972535243267	WITHOUT_CLASSIFICATION	2.746475673372531E-6	TEST
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.999774544677772	WITHOUT_CLASSIFICATION	2.254553222279543E-4	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999475282230543	WITHOUT_CLASSIFICATION	5.247177694569754E-5	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999911281300944	WITHOUT_CLASSIFICATION	8.871869905692231E-6	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999992869347076	WITHOUT_CLASSIFICATION	7.130652924191057E-7	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999991736431059	WITHOUT_CLASSIFICATION	8.26356894115347E-7	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.999910245469785	WITHOUT_CLASSIFICATION	8.97545302149014E-5	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999475282230543	WITHOUT_CLASSIFICATION	5.247177694569754E-5	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999911281300944	WITHOUT_CLASSIFICATION	8.871869905692231E-6	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999991736431059	WITHOUT_CLASSIFICATION	8.26356894115347E-7	TEST
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9998538895326442	WITHOUT_CLASSIFICATION	1.461104673558091E-4	TEST
// Build the new module	WITHOUT_CLASSIFICATION	0.9999823577986033	WITHOUT_CLASSIFICATION	1.7642201396683796E-5	TEST
// Build the module body	WITHOUT_CLASSIFICATION	0.9999924145023217	WITHOUT_CLASSIFICATION	7.5854976782421175E-6	TEST
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999505413762546	WITHOUT_CLASSIFICATION	4.9458623745426606E-5	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999959913742972	WITHOUT_CLASSIFICATION	4.008625702830448E-6	TEST
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999996173034859	WITHOUT_CLASSIFICATION	3.826965141697905E-7	TEST
// get attr	WITHOUT_CLASSIFICATION	0.9999942444410161	WITHOUT_CLASSIFICATION	5.755558983828912E-6	TEST
// call operator	WITHOUT_CLASSIFICATION	0.9999948824754364	WITHOUT_CLASSIFICATION	5.117524563555015E-6	TEST
// set attr	WITHOUT_CLASSIFICATION	0.9999942563650588	WITHOUT_CLASSIFICATION	5.743634941190614E-6	TEST
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999772373356612	WITHOUT_CLASSIFICATION	2.2762664338774852E-5	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999870179429632	WITHOUT_CLASSIFICATION	1.2982057036878178E-5	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999870179429632	WITHOUT_CLASSIFICATION	1.2982057036878178E-5	TEST
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999562446693058	WITHOUT_CLASSIFICATION	4.3755330694181515E-5	TEST
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999975060066555	WITHOUT_CLASSIFICATION	2.493993344471747E-6	TEST
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999987427042006	WITHOUT_CLASSIFICATION	1.2572957993473169E-6	TEST
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999961676933554	WITHOUT_CLASSIFICATION	3.832306644573611E-6	TEST
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999013035750762	WITHOUT_CLASSIFICATION	9.869642492382034E-5	TEST
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999822653905588	WITHOUT_CLASSIFICATION	1.7734609441192333E-5	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999994162161608	WITHOUT_CLASSIFICATION	5.837838392163216E-7	TEST
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999957875077378	WITHOUT_CLASSIFICATION	4.212492262204341E-6	TEST
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999507319428	WITHOUT_CLASSIFICATION	4.926805724395058E-8	TEST
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999942606030877	WITHOUT_CLASSIFICATION	5.739396912364032E-6	TEST
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999198856033	WITHOUT_CLASSIFICATION	8.011439672575014E-8	TEST
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999377551974711	WITHOUT_CLASSIFICATION	6.224480252888816E-5	TEST
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999975726557441	WITHOUT_CLASSIFICATION	2.4273442559623003E-6	TEST
// alu operations	WITHOUT_CLASSIFICATION	0.9999911558885805	WITHOUT_CLASSIFICATION	8.844111419479227E-6	TEST
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999988349133754	WITHOUT_CLASSIFICATION	1.1650866246023334E-6	TEST
// closure instructions	WITHOUT_CLASSIFICATION	0.9999781405834479	WITHOUT_CLASSIFICATION	2.1859416552161696E-5	TEST
// eval instructions	WITHOUT_CLASSIFICATION	0.9999910949976879	WITHOUT_CLASSIFICATION	8.905002312073395E-6	TEST
// def instructions	WITHOUT_CLASSIFICATION	0.9999909601072116	WITHOUT_CLASSIFICATION	9.039892788544602E-6	TEST
// exception instructions	WITHOUT_CLASSIFICATION	0.9999796006808884	WITHOUT_CLASSIFICATION	2.0399319111591578E-5	TEST
// Loads	WITHOUT_CLASSIFICATION	0.9998760203152212	WITHOUT_CLASSIFICATION	1.2397968477886542E-4	TEST
// Stores	WITHOUT_CLASSIFICATION	0.9998760203152212	WITHOUT_CLASSIFICATION	1.2397968477886542E-4	TEST
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999956443399619	WITHOUT_CLASSIFICATION	4.355660038075128E-6	TEST
// others	WITHOUT_CLASSIFICATION	0.9998773634077971	WITHOUT_CLASSIFICATION	1.2263659220297093E-4	TEST
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999853414443687	WITHOUT_CLASSIFICATION	1.4658555631282128E-5	TEST
// optimization guards	WITHOUT_CLASSIFICATION	0.9999782347683451	WITHOUT_CLASSIFICATION	2.1765231654793522E-5	TEST
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999172006672404	WITHOUT_CLASSIFICATION	8.2799332759575E-5	TEST
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999979848277699	WITHOUT_CLASSIFICATION	2.015172230098477E-6	TEST
// scripts	WITHOUT_CLASSIFICATION	0.9998765141243158	WITHOUT_CLASSIFICATION	1.2348587568430602E-4	TEST
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999968865903176	WITHOUT_CLASSIFICATION	3.113409682436727E-6	TEST
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.999994397412317	WITHOUT_CLASSIFICATION	5.602587683014074E-6	TEST
// methods and closures	WITHOUT_CLASSIFICATION	0.9999963638121402	WITHOUT_CLASSIFICATION	3.636187859818666E-6	TEST
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999771952080864	WITHOUT_CLASSIFICATION	2.2804791913600414E-5	TEST
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999364590980775	WITHOUT_CLASSIFICATION	6.354090192256783E-5	TEST
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999557158764203	WITHOUT_CLASSIFICATION	4.428412357971962E-5	TEST
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9996985827153911	WITHOUT_CLASSIFICATION	3.014172846088454E-4	TEST
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999395137883554	WITHOUT_CLASSIFICATION	6.048621164448708E-5	TEST
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999420797657722	WITHOUT_CLASSIFICATION	5.7920234227845515E-5	TEST
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999976901664479	WITHOUT_CLASSIFICATION	2.3098335521279893E-6	TEST
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999465250616609	WITHOUT_CLASSIFICATION	5.347493833901715E-5	TEST
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999680280206468	WITHOUT_CLASSIFICATION	3.1971979353267106E-5	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999370489167633	WITHOUT_CLASSIFICATION	6.295108323667191E-5	TEST
// Readline	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999945144084845	WITHOUT_CLASSIFICATION	5.485591515442266E-6	TEST
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999620447186064	WITHOUT_CLASSIFICATION	3.7955281393609563E-5	TEST
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999965081656292	WITHOUT_CLASSIFICATION	3.491834370703658E-6	TEST
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.999999109481876	WITHOUT_CLASSIFICATION	8.905181239880331E-7	TEST
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999998691738021	WITHOUT_CLASSIFICATION	1.3082619796080028E-7	TEST
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.999991942384862	WITHOUT_CLASSIFICATION	8.057615137977049E-6	TEST
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999202665424424	WITHOUT_CLASSIFICATION	7.973345755766582E-5	TEST
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9998938368696026	WITHOUT_CLASSIFICATION	1.0616313039738921E-4	TEST
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999995213113102	WITHOUT_CLASSIFICATION	4.786886898295142E-7	TEST
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999285195220904	WITHOUT_CLASSIFICATION	7.148047790966021E-5	TEST
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9995633625267809	WITHOUT_CLASSIFICATION	4.3663747321901657E-4	TEST
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9986815597321254	WITHOUT_CLASSIFICATION	0.0013184402678746271	TEST
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.99992825892352	WITHOUT_CLASSIFICATION	7.174107647990081E-5	TEST
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999899850561096	WITHOUT_CLASSIFICATION	1.001494389044648E-5	TEST
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9998770638799205	WITHOUT_CLASSIFICATION	1.2293612007959314E-4	TEST
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9999919105220297	WITHOUT_CLASSIFICATION	8.089477970203313E-6	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9989266538774229	WITHOUT_CLASSIFICATION	0.0010733461225771533	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9989266538774229	WITHOUT_CLASSIFICATION	0.0010733461225771533	TEST
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.99992825892352	WITHOUT_CLASSIFICATION	7.174107647990081E-5	TEST
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.999555289065476	WITHOUT_CLASSIFICATION	4.4471093452401017E-4	TEST
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999283180657014	WITHOUT_CLASSIFICATION	7.168193429866292E-5	TEST
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999294365146268	WITHOUT_CLASSIFICATION	7.05634853731121E-5	TEST
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.999962074099362	WITHOUT_CLASSIFICATION	3.792590063804897E-5	TEST
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9998772882328671	WITHOUT_CLASSIFICATION	1.227117671328407E-4	TEST
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9998987289649246	WITHOUT_CLASSIFICATION	1.0127103507541433E-4	TEST
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999448630579936	WITHOUT_CLASSIFICATION	5.513694200639337E-5	TEST
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999703961831654	WITHOUT_CLASSIFICATION	2.9603816834663827E-5	TEST
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999933934779929	WITHOUT_CLASSIFICATION	6.606522007095188E-6	TEST
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9998996565375592	WITHOUT_CLASSIFICATION	1.0034346244080894E-4	TEST
// class or module	WITHOUT_CLASSIFICATION	0.9999936749679912	WITHOUT_CLASSIFICATION	6.325032008759805E-6	TEST
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999903193031745	WITHOUT_CLASSIFICATION	9.680696825593721E-6	TEST
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999708678107468	WITHOUT_CLASSIFICATION	2.913218925312784E-5	TEST
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999744148557341	WITHOUT_CLASSIFICATION	2.5585144265916446E-5	TEST
// IN is the same!	WITHOUT_CLASSIFICATION	0.999992470967814	WITHOUT_CLASSIFICATION	7.529032186000254E-6	TEST
// IN changed!	WITHOUT_CLASSIFICATION	0.9999909883972492	WITHOUT_CLASSIFICATION	9.011602750844034E-6	TEST
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999449733410768	WITHOUT_CLASSIFICATION	5.5026658923096416E-5	TEST
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999759221421819	WITHOUT_CLASSIFICATION	2.4077857818096243E-5	TEST
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9997919075213888	WITHOUT_CLASSIFICATION	2.0809247861116353E-4	TEST
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999194739958981	WITHOUT_CLASSIFICATION	8.052600410200455E-5	TEST
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999965013117124	WITHOUT_CLASSIFICATION	3.498688287558105E-6	TEST
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.999998812519237	WITHOUT_CLASSIFICATION	1.1874807630808834E-6	TEST
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999987540014699	WITHOUT_CLASSIFICATION	1.2459985300793274E-6	TEST
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999175327103513	WITHOUT_CLASSIFICATION	8.246728964862203E-5	TEST
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9998130352168346	WITHOUT_CLASSIFICATION	1.869647831652769E-4	TEST
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9998623198691585	WITHOUT_CLASSIFICATION	1.3768013084143187E-4	TEST
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.999993084113854	WITHOUT_CLASSIFICATION	6.9158861459458175E-6	TEST
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999815781588961	WITHOUT_CLASSIFICATION	1.8421841103888614E-5	TEST
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999870878280112	WITHOUT_CLASSIFICATION	1.2912171988791582E-5	TEST
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999901886030532	WITHOUT_CLASSIFICATION	9.81139694674533E-6	TEST
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999827204335386	WITHOUT_CLASSIFICATION	1.7279566461408726E-5	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999381574668327	WITHOUT_CLASSIFICATION	6.184253316727636E-5	TEST
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9998568142642159	WITHOUT_CLASSIFICATION	1.4318573578405003E-4	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999381574668327	WITHOUT_CLASSIFICATION	6.184253316727636E-5	TEST
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999823361352403	WITHOUT_CLASSIFICATION	1.7663864759743522E-5	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999419708412249	WITHOUT_CLASSIFICATION	5.802915877498813E-5	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999419708412249	WITHOUT_CLASSIFICATION	5.802915877498813E-5	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999419708412249	WITHOUT_CLASSIFICATION	5.802915877498813E-5	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999873687982855	WITHOUT_CLASSIFICATION	1.2631201714551217E-5	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999873687982855	WITHOUT_CLASSIFICATION	1.2631201714551217E-5	TEST
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9996637177051504	WITHOUT_CLASSIFICATION	3.362822948495917E-4	TEST
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999775408480914	WITHOUT_CLASSIFICATION	2.2459151908544998E-5	TEST
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.99998711521509	WITHOUT_CLASSIFICATION	1.2884784910064774E-5	TEST
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9999793578124466	WITHOUT_CLASSIFICATION	2.064218755331838E-5	TEST
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999874067938529	WITHOUT_CLASSIFICATION	1.2593206147076229E-5	TEST
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9998964758556633	WITHOUT_CLASSIFICATION	1.035241443366837E-4	TEST
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999561629819906	WITHOUT_CLASSIFICATION	4.383701800929944E-5	TEST
// ignore	WITHOUT_CLASSIFICATION	0.99990623623779	WITHOUT_CLASSIFICATION	9.376376220999139E-5	TEST
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9998971954534548	WITHOUT_CLASSIFICATION	1.0280454654520593E-4	TEST
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999861400286945	WITHOUT_CLASSIFICATION	1.3859971305621729E-5	TEST
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999767839280814	WITHOUT_CLASSIFICATION	2.3216071918554427E-5	TEST
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999880460213694	WITHOUT_CLASSIFICATION	1.1953978630535039E-5	TEST
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999887810231264	WITHOUT_CLASSIFICATION	1.1218976873580146E-5	TEST
// root-level logic	WITHOUT_CLASSIFICATION	0.9999912845559049	WITHOUT_CLASSIFICATION	8.715444095083141E-6	TEST
// root-level methods	WITHOUT_CLASSIFICATION	0.9999821702843762	WITHOUT_CLASSIFICATION	1.7829715623730204E-5	TEST
// root-level classes	WITHOUT_CLASSIFICATION	0.9999806848154971	WITHOUT_CLASSIFICATION	1.9315184502826676E-5	TEST
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999804876260561	WITHOUT_CLASSIFICATION	1.9512373943946987E-5	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.999987918047527	WITHOUT_CLASSIFICATION	1.2081952472951655E-5	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.999987918047527	WITHOUT_CLASSIFICATION	1.2081952472951655E-5	TEST
// receiver	WITHOUT_CLASSIFICATION	0.9999909640790459	WITHOUT_CLASSIFICATION	9.035920954109854E-6	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999885903928311	WITHOUT_CLASSIFICATION	1.1409607169017172E-5	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999885903928311	WITHOUT_CLASSIFICATION	1.1409607169017172E-5	TEST
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999527922902424	WITHOUT_CLASSIFICATION	4.7207709757630764E-5	TEST
// Object[] args	WITHOUT_CLASSIFICATION	0.9999910638716671	WITHOUT_CLASSIFICATION	8.936128332928886E-6	TEST
// load handle	WITHOUT_CLASSIFICATION	0.9999887546683859	WITHOUT_CLASSIFICATION	1.1245331614060411E-5	TEST
// args array	WITHOUT_CLASSIFICATION	0.9999915181291917	WITHOUT_CLASSIFICATION	8.481870808274944E-6	TEST
// i'th argument	WITHOUT_CLASSIFICATION	0.9999922091008179	WITHOUT_CLASSIFICATION	7.790899182096582E-6	TEST
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.999970159191647	WITHOUT_CLASSIFICATION	2.984080835303153E-5	TEST
// Object arg0	WITHOUT_CLASSIFICATION	0.9999910102756654	WITHOUT_CLASSIFICATION	8.98972433455741E-6	TEST
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999802999183578	WITHOUT_CLASSIFICATION	1.9700081642208854E-5	TEST
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999536366105845	WITHOUT_CLASSIFICATION	4.63633894155361E-5	TEST
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999953391195343	WITHOUT_CLASSIFICATION	4.6608804656372046E-6	TEST
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999887222571315	WITHOUT_CLASSIFICATION	1.1277742868446864E-5	TEST
// at end	WITHOUT_CLASSIFICATION	0.9998650770263204	WITHOUT_CLASSIFICATION	1.3492297367952903E-4	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999968719787832	WITHOUT_CLASSIFICATION	3.128021216876478E-6	TEST
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999903050315473	WITHOUT_CLASSIFICATION	9.694968452629713E-6	TEST
// ignore	WITHOUT_CLASSIFICATION	0.99990623623779	WITHOUT_CLASSIFICATION	9.376376220999139E-5	TEST
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9997075820215736	WITHOUT_CLASSIFICATION	2.924179784264227E-4	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999904337141561	WITHOUT_CLASSIFICATION	9.566285843850495E-6	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999968121685283	WITHOUT_CLASSIFICATION	3.1878314716842134E-6	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999968121685283	WITHOUT_CLASSIFICATION	3.1878314716842134E-6	TEST
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999200619438966	WITHOUT_CLASSIFICATION	7.993805610344758E-5	TEST
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9998139467881144	WITHOUT_CLASSIFICATION	1.8605321188553764E-4	TEST
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999969431056545	WITHOUT_CLASSIFICATION	3.056894345613653E-6	TEST
// restore position	WITHOUT_CLASSIFICATION	0.9999913209619078	WITHOUT_CLASSIFICATION	8.67903809213376E-6	TEST
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999994841288932	WITHOUT_CLASSIFICATION	5.158711067678035E-7	TEST
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999966072085569	WITHOUT_CLASSIFICATION	3.392791443057825E-6	TEST
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.999998301042101	WITHOUT_CLASSIFICATION	1.6989578990043563E-6	TEST
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9990026017286977	WITHOUT_CLASSIFICATION	9.973982713023207E-4	TEST
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.999827313216363	WITHOUT_CLASSIFICATION	1.726867836371133E-4	TEST
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999728967687684	WITHOUT_CLASSIFICATION	2.7103231231616524E-5	TEST
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999663850549622	WITHOUT_CLASSIFICATION	3.3614945037811204E-5	TEST
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999524280392347	WITHOUT_CLASSIFICATION	4.757196076537746E-5	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999675219127128	WITHOUT_CLASSIFICATION	3.2478087287318944E-5	TEST
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999592987576665	WITHOUT_CLASSIFICATION	4.0701242333425796E-5	TEST
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9998646699022139	WITHOUT_CLASSIFICATION	1.353300977861488E-4	TEST
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999822623731152	WITHOUT_CLASSIFICATION	1.7737626884949207E-5	TEST
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999909647644872	WITHOUT_CLASSIFICATION	9.035235512779428E-6	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999842837598972	WITHOUT_CLASSIFICATION	1.5716240102744E-5	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999404529346233	WITHOUT_CLASSIFICATION	5.954706537668083E-5	TEST
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999896911372926	WITHOUT_CLASSIFICATION	1.0308862707463156E-5	TEST
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999979293296557	WITHOUT_CLASSIFICATION	2.0706703442235306E-6	TEST
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999782141531547	WITHOUT_CLASSIFICATION	2.178584684525633E-5	TEST
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.99999966436296	WITHOUT_CLASSIFICATION	3.3563704003415027E-7	TEST
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.999992072060453	WITHOUT_CLASSIFICATION	7.927939546986704E-6	TEST
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999781247058505	WITHOUT_CLASSIFICATION	2.1875294149594788E-5	TEST
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9998862455271338	WITHOUT_CLASSIFICATION	1.137544728661405E-4	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9993996614809305	WITHOUT_CLASSIFICATION	6.003385190695342E-4	TEST
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999945012859566	WITHOUT_CLASSIFICATION	5.498714043442164E-6	TEST
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999850637884146	WITHOUT_CLASSIFICATION	1.4936211585348208E-5	TEST
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999961203257802	WITHOUT_CLASSIFICATION	3.879674219833165E-6	TEST
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.999990373864067	WITHOUT_CLASSIFICATION	9.626135932997789E-6	TEST
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999806010003385	WITHOUT_CLASSIFICATION	1.939899966154776E-5	TEST
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999764998299508	WITHOUT_CLASSIFICATION	2.350017004914322E-5	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.999956032897071	WITHOUT_CLASSIFICATION	4.3967102928885414E-5	TEST
// $blah	WITHOUT_CLASSIFICATION	0.9998760203152212	WITHOUT_CLASSIFICATION	1.2397968477886542E-4	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9993996614809305	WITHOUT_CLASSIFICATION	6.003385190695342E-4	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999931148997372	WITHOUT_CLASSIFICATION	6.885100262763411E-6	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.999956032897071	WITHOUT_CLASSIFICATION	4.3967102928885414E-5	TEST
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999405590400028	WITHOUT_CLASSIFICATION	5.944095999733702E-5	TEST
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999898185122359	WITHOUT_CLASSIFICATION	1.0181487764131095E-5	TEST
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.999997747159673	WITHOUT_CLASSIFICATION	2.252840326992194E-6	TEST
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999737566046202	WITHOUT_CLASSIFICATION	2.6243395379770085E-5	TEST
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999750941513462	WITHOUT_CLASSIFICATION	2.4905848653816E-5	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999981415222882	WITHOUT_CLASSIFICATION	1.8584777118290718E-6	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999981415222882	WITHOUT_CLASSIFICATION	1.8584777118290718E-6	TEST
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9998467269195547	WITHOUT_CLASSIFICATION	1.5327308044530262E-4	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999985331182902	WITHOUT_CLASSIFICATION	1.4668817097784679E-6	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999948453290112	WITHOUT_CLASSIFICATION	5.1546709887378734E-6	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999948453290112	WITHOUT_CLASSIFICATION	5.1546709887378734E-6	TEST
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999999781581084	WITHOUT_CLASSIFICATION	2.1841891681732168E-8	TEST
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9994458700358531	WITHOUT_CLASSIFICATION	5.541299641469029E-4	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999713110426115	WITHOUT_CLASSIFICATION	2.8688957388502698E-5	TEST
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999910256756136	WITHOUT_CLASSIFICATION	8.974324386347135E-6	TEST
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999993788566791	WITHOUT_CLASSIFICATION	6.211433208698933E-7	TEST
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999866762767896	WITHOUT_CLASSIFICATION	1.3323723210332649E-5	TEST
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9997378797499139	WITHOUT_CLASSIFICATION	2.6212025008608695E-4	TEST
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999907936297778	WITHOUT_CLASSIFICATION	9.206370222099152E-6	TEST
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999931512364844	WITHOUT_CLASSIFICATION	6.8487635156571666E-6	TEST
// host and port given	WITHOUT_CLASSIFICATION	0.9999976109478935	WITHOUT_CLASSIFICATION	2.389052106552147E-6	TEST
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999790043995513	WITHOUT_CLASSIFICATION	2.0995600448670658E-5	TEST
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9995122652922571	WITHOUT_CLASSIFICATION	4.877347077429207E-4	TEST
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9998407040603224	WITHOUT_CLASSIFICATION	1.592959396775148E-4	TEST
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999762162082829	WITHOUT_CLASSIFICATION	2.3783791717073397E-5	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999628689861585	WITHOUT_CLASSIFICATION	3.713101384144209E-5	TEST
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999910160830312	WITHOUT_CLASSIFICATION	8.983916968740753E-6	TEST
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9999624305296314	WITHOUT_CLASSIFICATION	3.756947036866332E-5	TEST
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999613073971698	WITHOUT_CLASSIFICATION	3.869260283013553E-5	TEST
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9998380828901753	WITHOUT_CLASSIFICATION	1.6191710982469822E-4	TEST
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999722350936201	WITHOUT_CLASSIFICATION	2.7764906379859795E-5	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.9998760203152212	WITHOUT_CLASSIFICATION	1.2397968477886542E-4	TEST
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9998760203152212	WITHOUT_CLASSIFICATION	1.2397968477886542E-4	TEST
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9997595019870005	WITHOUT_CLASSIFICATION	2.4049801299942216E-4	TEST
// line 323	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999882321281862	WITHOUT_CLASSIFICATION	1.176787181381572E-5	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999882321281862	WITHOUT_CLASSIFICATION	1.176787181381572E-5	TEST
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.999999364741079	WITHOUT_CLASSIFICATION	6.352589210200449E-7	TEST
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999845689906394	WITHOUT_CLASSIFICATION	1.5431009360699876E-5	TEST
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9997547024364984	WITHOUT_CLASSIFICATION	2.4529756350150024E-4	TEST
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999905007159617	WITHOUT_CLASSIFICATION	9.49928403818071E-6	TEST
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999365547978032	WITHOUT_CLASSIFICATION	6.344520219676487E-5	TEST
// RubySocket	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999246523926345	WITHOUT_CLASSIFICATION	7.534760736554965E-5	TEST
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999626748242819	WITHOUT_CLASSIFICATION	3.7325175718120114E-5	TEST
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999986809665978	WITHOUT_CLASSIFICATION	1.319033402198753E-6	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999899948887094	WITHOUT_CLASSIFICATION	1.0005111290538462E-5	TEST
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999905241095121	WITHOUT_CLASSIFICATION	9.475890487946648E-6	TEST
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999931790618369	WITHOUT_CLASSIFICATION	6.8209381630505355E-6	TEST
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9994458700358531	WITHOUT_CLASSIFICATION	5.541299641469029E-4	TEST
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999752600592648	WITHOUT_CLASSIFICATION	2.4739940735190567E-5	TEST
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999708065981072	WITHOUT_CLASSIFICATION	2.9193401892732902E-5	TEST
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999915692852631	WITHOUT_CLASSIFICATION	8.430714736926352E-6	TEST
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999655575377671	WITHOUT_CLASSIFICATION	3.4442462233004646E-5	TEST
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999889407150068	WITHOUT_CLASSIFICATION	1.1059284993151666E-5	TEST
// be dead	WITHOUT_CLASSIFICATION	0.9999187383524252	WITHOUT_CLASSIFICATION	8.126164757476755E-5	TEST
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999965575083171	WITHOUT_CLASSIFICATION	3.442491682997845E-6	TEST
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999914201657337	WITHOUT_CLASSIFICATION	8.57983426624572E-6	TEST
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.999556525695654	WITHOUT_CLASSIFICATION	4.4347430434596956E-4	TEST
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.99920845700886	WITHOUT_CLASSIFICATION	7.915429911399672E-4	TEST
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999894645503514	WITHOUT_CLASSIFICATION	1.0535449648599494E-5	TEST
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.999999176212159	WITHOUT_CLASSIFICATION	8.237878411211272E-7	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999151474403013	WITHOUT_CLASSIFICATION	8.485255969870712E-5	TEST
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9997403346087983	WITHOUT_CLASSIFICATION	2.596653912016843E-4	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999898039670209	WITHOUT_CLASSIFICATION	1.0196032979132065E-5	TEST
// main body	WITHOUT_CLASSIFICATION	0.9999923315512038	WITHOUT_CLASSIFICATION	7.668448796245112E-6	TEST
// return jump handling	WITHOUT_CLASSIFICATION	0.9999888801305488	WITHOUT_CLASSIFICATION	1.1119869451247938E-5	TEST
// finally	WITHOUT_CLASSIFICATION	0.9998763038819077	WITHOUT_CLASSIFICATION	1.2369611809224734E-4	TEST
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999862448319969	WITHOUT_CLASSIFICATION	1.3755168003004034E-5	TEST
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999805853607994	WITHOUT_CLASSIFICATION	1.9414639200614318E-5	TEST
// clear the redo	WITHOUT_CLASSIFICATION	0.9999970264334793	WITHOUT_CLASSIFICATION	2.973566520626807E-6	TEST
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999895068307136	WITHOUT_CLASSIFICATION	1.0493169286462684E-5	TEST
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999861169227143	WITHOUT_CLASSIFICATION	1.3883077285778205E-5	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999495954192951	WITHOUT_CLASSIFICATION	5.0404580704874114E-5	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9997499343830827	WITHOUT_CLASSIFICATION	2.500656169173495E-4	TEST
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999556497996324	WITHOUT_CLASSIFICATION	4.4350200367672257E-5	TEST
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.999940063294957	WITHOUT_CLASSIFICATION	5.993670504309226E-5	TEST
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.999961401863127	WITHOUT_CLASSIFICATION	3.8598136872970354E-5	TEST
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999900354064609	WITHOUT_CLASSIFICATION	9.964593539163966E-6	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999877494175994	WITHOUT_CLASSIFICATION	1.2250582400530229E-5	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999877494175994	WITHOUT_CLASSIFICATION	1.2250582400530229E-5	TEST
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999896888084555	WITHOUT_CLASSIFICATION	1.0311191544470006E-5	TEST
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999826258843858	WITHOUT_CLASSIFICATION	1.7374115614160637E-5	TEST
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999719206943934	WITHOUT_CLASSIFICATION	2.8079305606552116E-5	TEST
// return	WITHOUT_CLASSIFICATION	0.999929274356811	WITHOUT_CLASSIFICATION	7.072564318902587E-5	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999899838029472	WITHOUT_CLASSIFICATION	1.001619705275821E-5	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999884012781719	WITHOUT_CLASSIFICATION	1.1598721828100103E-5	TEST
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999629535341811	WITHOUT_CLASSIFICATION	3.7046465818988556E-5	TEST
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999215135704003	WITHOUT_CLASSIFICATION	7.848642959975916E-5	TEST
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.999823754634872	WITHOUT_CLASSIFICATION	1.762453651279237E-4	TEST
// tc	WITHOUT_CLASSIFICATION	0.9998760203152212	WITHOUT_CLASSIFICATION	1.2397968477886542E-4	TEST
// self // name	WITHOUT_CLASSIFICATION	0.9999780715563915	WITHOUT_CLASSIFICATION	2.192844360842105E-5	TEST
// no args	WITHOUT_CLASSIFICATION	0.9999368093174625	WITHOUT_CLASSIFICATION	6.319068253750744E-5	TEST
// variable args with block	WITHOUT_CLASSIFICATION	0.9998759270841204	WITHOUT_CLASSIFICATION	1.2407291587954327E-4	TEST
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999740147154345	WITHOUT_CLASSIFICATION	2.5985284565495397E-5	TEST
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999763989740095	WITHOUT_CLASSIFICATION	2.3601025990537274E-5	TEST
// one arg with block	WITHOUT_CLASSIFICATION	0.9999367057494053	WITHOUT_CLASSIFICATION	6.329425059468543E-5	TEST
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999798591093828	WITHOUT_CLASSIFICATION	2.0140890617135823E-5	TEST
// two args with block	WITHOUT_CLASSIFICATION	0.9999023186050668	WITHOUT_CLASSIFICATION	9.768139493310911E-5	TEST
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999686909338616	WITHOUT_CLASSIFICATION	3.130906613823927E-5	TEST
// three args with block	WITHOUT_CLASSIFICATION	0.9999112941715692	WITHOUT_CLASSIFICATION	8.870582843077362E-5	TEST
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999715679765666	WITHOUT_CLASSIFICATION	2.843202343338306E-5	TEST
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9998414757768491	WITHOUT_CLASSIFICATION	1.5852422315079686E-4	TEST
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9998396326307919	WITHOUT_CLASSIFICATION	1.6036736920811248E-4	TEST
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999631267372229	WITHOUT_CLASSIFICATION	3.6873262777118415E-5	TEST
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999803990816603	WITHOUT_CLASSIFICATION	1.9600918339772603E-5	TEST
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.999969530313029	WITHOUT_CLASSIFICATION	3.0469686971009608E-5	TEST
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999723302259058	WITHOUT_CLASSIFICATION	2.766977409418379E-5	TEST
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999811082780741	WITHOUT_CLASSIFICATION	1.8891721925907945E-5	TEST
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999715190845617	WITHOUT_CLASSIFICATION	2.8480915438260984E-5	TEST
// static invocation	WITHOUT_CLASSIFICATION	0.9999921522348911	WITHOUT_CLASSIFICATION	7.847765108892876E-6	TEST
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999784451629968	WITHOUT_CLASSIFICATION	2.155483700313646E-5	TEST
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9994898952626124	WITHOUT_CLASSIFICATION	5.101047373875878E-4	TEST
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999957595038013	WITHOUT_CLASSIFICATION	4.240496198702955E-6	TEST
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999760498054062	WITHOUT_CLASSIFICATION	2.395019459372975E-5	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9997499343830827	WITHOUT_CLASSIFICATION	2.500656169173495E-4	TEST
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9998976102026815	WITHOUT_CLASSIFICATION	1.0238979731852527E-4	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999572212176929	WITHOUT_CLASSIFICATION	4.277878230699879E-5	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999572212176929	WITHOUT_CLASSIFICATION	4.277878230699879E-5	TEST
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999841285121109	WITHOUT_CLASSIFICATION	1.5871487889068414E-5	TEST
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999469699481076	WITHOUT_CLASSIFICATION	5.3030051892489294E-5	TEST
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999781247058505	WITHOUT_CLASSIFICATION	2.1875294149594788E-5	TEST
// never reached	WITHOUT_CLASSIFICATION	0.9999921361441236	WITHOUT_CLASSIFICATION	7.863855876300944E-6	TEST
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9998599604386466	WITHOUT_CLASSIFICATION	1.400395613534154E-4	TEST
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9998842895083336	WITHOUT_CLASSIFICATION	1.1571049166637329E-4	TEST
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9999013036666948	WITHOUT_CLASSIFICATION	9.869633330512785E-5	TEST
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9998465033488262	WITHOUT_CLASSIFICATION	1.53496651173879E-4	TEST
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9998848236306914	WITHOUT_CLASSIFICATION	1.1517636930855957E-4	TEST
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.999901759259013	WITHOUT_CLASSIFICATION	9.824074098697818E-5	TEST
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9998472118663344	WITHOUT_CLASSIFICATION	1.5278813366550304E-4	TEST
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9998606068489075	WITHOUT_CLASSIFICATION	1.3939315109244172E-4	TEST
// promise to implement N	WITHOUT_CLASSIFICATION	0.999982070917349	WITHOUT_CLASSIFICATION	1.792908265091447E-5	TEST
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999585364323899	WITHOUT_CLASSIFICATION	4.146356761012515E-5	TEST
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999804885138558	WITHOUT_CLASSIFICATION	1.951148614426587E-5	TEST
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999906898823951	WITHOUT_CLASSIFICATION	9.310117604865207E-6	TEST
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999627501130309	WITHOUT_CLASSIFICATION	3.72498869690511E-5	TEST
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9999661730492788	WITHOUT_CLASSIFICATION	3.382695072113943E-5	TEST
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999720503204375	WITHOUT_CLASSIFICATION	2.794967956263715E-5	TEST
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.999976160370168	WITHOUT_CLASSIFICATION	2.3839629831909476E-5	TEST
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9999629220728178	WITHOUT_CLASSIFICATION	3.707792718221553E-5	TEST
// promise to implement three	WITHOUT_CLASSIFICATION	0.9999821536864735	WITHOUT_CLASSIFICATION	1.7846313526589417E-5	TEST
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999868307640544	WITHOUT_CLASSIFICATION	1.3169235945666278E-5	TEST
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999798660777605	WITHOUT_CLASSIFICATION	2.0133922239575182E-5	TEST
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999980497703355	WITHOUT_CLASSIFICATION	1.950229664445711E-6	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999911604368533	WITHOUT_CLASSIFICATION	8.839563146715525E-6	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999688478148163	WITHOUT_CLASSIFICATION	3.1152185183645825E-5	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999820031389935	WITHOUT_CLASSIFICATION	1.7996861006417972E-5	TEST
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999978170081238	WITHOUT_CLASSIFICATION	2.1829918761251456E-6	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999933840576966	WITHOUT_CLASSIFICATION	6.615942303481751E-6	TEST
// start setup method	WITHOUT_CLASSIFICATION	0.9999913649153567	WITHOUT_CLASSIFICATION	8.635084643370749E-6	TEST
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999942563650588	WITHOUT_CLASSIFICATION	5.743634941190614E-6	TEST
// set Ruby	WITHOUT_CLASSIFICATION	0.9999942563650588	WITHOUT_CLASSIFICATION	5.743634941190614E-6	TEST
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999948640315766	WITHOUT_CLASSIFICATION	5.135968423493869E-6	TEST
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999124248770728	WITHOUT_CLASSIFICATION	8.757512292716308E-5	TEST
// get current context	WITHOUT_CLASSIFICATION	0.9999929906502353	WITHOUT_CLASSIFICATION	7.0093497647348515E-6	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999854878453005	WITHOUT_CLASSIFICATION	1.451215469959485E-5	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999911604368533	WITHOUT_CLASSIFICATION	8.839563146715525E-6	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999688478148163	WITHOUT_CLASSIFICATION	3.1152185183645825E-5	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999820031389935	WITHOUT_CLASSIFICATION	1.7996861006417972E-5	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999933840576966	WITHOUT_CLASSIFICATION	6.615942303481751E-6	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999849039158692	WITHOUT_CLASSIFICATION	1.5096084130646972E-5	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999446021073661	WITHOUT_CLASSIFICATION	5.539789263386611E-5	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999930352411447	WITHOUT_CLASSIFICATION	6.964758855321866E-6	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999920086803651	WITHOUT_CLASSIFICATION	7.991319634897779E-6	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999956505295787	WITHOUT_CLASSIFICATION	4.3494704213324035E-6	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999233056760733	WITHOUT_CLASSIFICATION	7.66943239266364E-5	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.9999969023549555	WITHOUT_CLASSIFICATION	3.0976450445754455E-6	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999958938753235	WITHOUT_CLASSIFICATION	4.106124676465026E-6	TEST
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999637132911612	WITHOUT_CLASSIFICATION	3.628670883871347E-5	TEST
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999975056873425	WITHOUT_CLASSIFICATION	2.4943126576112245E-6	TEST
// prepare temp locals	WITHOUT_CLASSIFICATION	0.999979049627602	WITHOUT_CLASSIFICATION	2.095037239806861E-5	TEST
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999908928103836	WITHOUT_CLASSIFICATION	9.107189616357158E-6	TEST
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999977678035756	WITHOUT_CLASSIFICATION	2.2321964244536413E-6	TEST
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.999990824838218	WITHOUT_CLASSIFICATION	9.175161781975909E-6	TEST
// store it	WITHOUT_CLASSIFICATION	0.9999776138589698	WITHOUT_CLASSIFICATION	2.2386141030228185E-5	TEST
// end of try block	WITHOUT_CLASSIFICATION	0.9999959875790054	WITHOUT_CLASSIFICATION	4.012420994611065E-6	TEST
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999833102813936	WITHOUT_CLASSIFICATION	1.668971860630823E-5	TEST
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999260949887795	WITHOUT_CLASSIFICATION	7.390501122057067E-5	TEST
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999867696078882	WITHOUT_CLASSIFICATION	1.3230392111783256E-5	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999854878453005	WITHOUT_CLASSIFICATION	1.451215469959485E-5	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999446021073661	WITHOUT_CLASSIFICATION	5.539789263386611E-5	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999930352411447	WITHOUT_CLASSIFICATION	6.964758855321866E-6	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999956505295787	WITHOUT_CLASSIFICATION	4.3494704213324035E-6	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999233056760733	WITHOUT_CLASSIFICATION	7.66943239266364E-5	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.9999969023549555	WITHOUT_CLASSIFICATION	3.0976450445754455E-6	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999958938753235	WITHOUT_CLASSIFICATION	4.106124676465026E-6	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999983026524991	WITHOUT_CLASSIFICATION	1.697347500857792E-6	TEST
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999745079252108	WITHOUT_CLASSIFICATION	2.549207478927459E-5	TEST
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999920728431717	WITHOUT_CLASSIFICATION	7.927156828336781E-6	TEST
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999957741601347	WITHOUT_CLASSIFICATION	4.225839865199233E-6	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999544711866805	WITHOUT_CLASSIFICATION	4.552881331960081E-5	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999544711866805	WITHOUT_CLASSIFICATION	4.552881331960081E-5	TEST
// setup the class	WITHOUT_CLASSIFICATION	0.9999979911671507	WITHOUT_CLASSIFICATION	2.008832849367387E-6	TEST
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999980633238656	WITHOUT_CLASSIFICATION	1.93667613434928E-6	TEST
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999874116612862	WITHOUT_CLASSIFICATION	1.258833871374676E-5	TEST
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999916033677587	WITHOUT_CLASSIFICATION	8.396632241317103E-6	TEST
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999942205738098	WITHOUT_CLASSIFICATION	5.779426190248554E-6	TEST
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999986123424077	WITHOUT_CLASSIFICATION	1.3876575922986557E-6	TEST
// set the full name	WITHOUT_CLASSIFICATION	0.9999741533490688	WITHOUT_CLASSIFICATION	2.5846650931274573E-5	TEST
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999874990514409	WITHOUT_CLASSIFICATION	1.2500948559042713E-5	TEST
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999619440082504	WITHOUT_CLASSIFICATION	3.8055991749506744E-5	TEST
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999033378821209	WITHOUT_CLASSIFICATION	9.66621178789865E-5	TEST
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999382695391494	WITHOUT_CLASSIFICATION	6.173046085049648E-5	TEST
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999916500700761	WITHOUT_CLASSIFICATION	8.349929923963477E-6	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9998549366750512	WITHOUT_CLASSIFICATION	1.4506332494879513E-4	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999711320489495	WITHOUT_CLASSIFICATION	2.8867951050564887E-5	TEST
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999683532999767	WITHOUT_CLASSIFICATION	3.164670002332043E-5	TEST
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999547344511945	WITHOUT_CLASSIFICATION	4.526554880551293E-5	TEST
// add all static variables	WITHOUT_CLASSIFICATION	0.999967222309476	WITHOUT_CLASSIFICATION	3.2777690523995414E-5	TEST
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999724374485386	WITHOUT_CLASSIFICATION	2.7562551461340457E-5	TEST
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.999995812449171	WITHOUT_CLASSIFICATION	4.187550828989467E-6	TEST
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999989977465429	WITHOUT_CLASSIFICATION	1.002253457188706E-6	TEST
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9991249994024232	WITHOUT_CLASSIFICATION	8.750005975768616E-4	TEST
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.999994031374884	WITHOUT_CLASSIFICATION	5.968625116016278E-6	TEST
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.999997027305897	WITHOUT_CLASSIFICATION	2.9726941030791195E-6	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9984244670200196	WITHOUT_CLASSIFICATION	0.0015755329799803668	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999976776156747	WITHOUT_CLASSIFICATION	2.3223843253349623E-6	TEST
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.99999915783354	WITHOUT_CLASSIFICATION	8.421664599837354E-7	TEST
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.999777487938985	WITHOUT_CLASSIFICATION	2.22512061015094E-4	TEST
// line 326	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999976776156747	WITHOUT_CLASSIFICATION	2.3223843253349623E-6	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999711320489495	WITHOUT_CLASSIFICATION	2.8867951050564887E-5	TEST
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999168052836993	WITHOUT_CLASSIFICATION	8.319471630057905E-5	TEST
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999914189390111	WITHOUT_CLASSIFICATION	8.581060989013332E-6	TEST
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999879600984205	WITHOUT_CLASSIFICATION	1.2039901579481398E-5	TEST
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999968277546575	WITHOUT_CLASSIFICATION	3.172245342493361E-6	TEST
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999901292714292	WITHOUT_CLASSIFICATION	9.870728570934916E-6	TEST
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999700669705832	WITHOUT_CLASSIFICATION	2.9933029416735923E-5	TEST
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9997629230177674	WITHOUT_CLASSIFICATION	2.3707698223262625E-4	TEST
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999347582798181	WITHOUT_CLASSIFICATION	6.524172018183387E-5	TEST
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9989708942752061	WITHOUT_CLASSIFICATION	0.001029105724793913	TEST
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9998319370878564	WITHOUT_CLASSIFICATION	1.6806291214347665E-4	TEST
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999980882486417	WITHOUT_CLASSIFICATION	1.9117513583747257E-6	TEST
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.999948220509942	WITHOUT_CLASSIFICATION	5.17794900579865E-5	TEST
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9998777349326934	WITHOUT_CLASSIFICATION	1.2226506730659312E-4	TEST
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999976707497431	WITHOUT_CLASSIFICATION	2.3292502569166386E-6	TEST
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999967219873199	WITHOUT_CLASSIFICATION	3.2780126800665425E-6	TEST
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999750054974146	WITHOUT_CLASSIFICATION	2.4994502585407E-5	TEST
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999982184456434	WITHOUT_CLASSIFICATION	1.7815543566290772E-6	TEST
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9999613951353404	WITHOUT_CLASSIFICATION	3.8604864659505296E-5	TEST
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999970135707653	WITHOUT_CLASSIFICATION	2.986429234687198E-6	TEST
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999748148844498	WITHOUT_CLASSIFICATION	2.5185115550114643E-5	TEST
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999898194682771	WITHOUT_CLASSIFICATION	1.0180531722912105E-5	TEST
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.999971525745685	WITHOUT_CLASSIFICATION	2.847425431500126E-5	TEST
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999385099678174	WITHOUT_CLASSIFICATION	6.149003218258309E-5	TEST
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999998316752136	WITHOUT_CLASSIFICATION	1.6832478641940136E-7	TEST
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999956572700475	WITHOUT_CLASSIFICATION	4.342729952574776E-6	TEST
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999585364323899	WITHOUT_CLASSIFICATION	4.146356761012515E-5	TEST
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9995682127858138	WITHOUT_CLASSIFICATION	4.3178721418624084E-4	TEST
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9997423879932531	WITHOUT_CLASSIFICATION	2.57612006746975E-4	TEST
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999213741456116	WITHOUT_CLASSIFICATION	7.862585438841322E-5	TEST
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999850704804325	WITHOUT_CLASSIFICATION	1.4929519567510535E-5	TEST
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999737705529467	WITHOUT_CLASSIFICATION	2.622944705332286E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999950899310088	WITHOUT_CLASSIFICATION	4.910068991072126E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999950899310088	WITHOUT_CLASSIFICATION	4.910068991072126E-6	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9998549366750512	WITHOUT_CLASSIFICATION	1.4506332494879513E-4	TEST
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999776952063528	WITHOUT_CLASSIFICATION	2.2304793647171804E-5	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999454893432363	WITHOUT_CLASSIFICATION	5.4510656763644545E-5	TEST
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999780917459024	WITHOUT_CLASSIFICATION	2.1908254097623792E-5	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999788369635595	WITHOUT_CLASSIFICATION	2.1163036440449095E-5	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999788369635595	WITHOUT_CLASSIFICATION	2.1163036440449095E-5	TEST
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.999974699030271	WITHOUT_CLASSIFICATION	2.5300969728984807E-5	TEST
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999819972738392	WITHOUT_CLASSIFICATION	1.800272616087104E-5	TEST
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.99998214755669	WITHOUT_CLASSIFICATION	1.7852443309939167E-5	TEST
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999706597806506	WITHOUT_CLASSIFICATION	2.934021934943524E-5	TEST
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9998993171588221	WITHOUT_CLASSIFICATION	1.0068284117800446E-4	TEST
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999977446021971	WITHOUT_CLASSIFICATION	2.2553978029032902E-6	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999820251370832	WITHOUT_CLASSIFICATION	1.797486291671727E-5	TEST
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999933830816773	WITHOUT_CLASSIFICATION	6.616918322618743E-6	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999548623657976	WITHOUT_CLASSIFICATION	4.5137634202353805E-5	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999112157728004	WITHOUT_CLASSIFICATION	8.878422719962306E-5	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999642331483637	WITHOUT_CLASSIFICATION	3.5766851636229266E-5	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999790543859365	WITHOUT_CLASSIFICATION	2.094561406347841E-5	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999603239712809	WITHOUT_CLASSIFICATION	3.96760287190707E-5	TEST
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999958285529587	WITHOUT_CLASSIFICATION	4.1714470413446995E-6	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999585364323899	WITHOUT_CLASSIFICATION	4.146356761012515E-5	TEST
// something?	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999754324954762	WITHOUT_CLASSIFICATION	2.4567504523775555E-5	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999754324954762	WITHOUT_CLASSIFICATION	2.4567504523775555E-5	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999836375707201	WITHOUT_CLASSIFICATION	1.636242927992996E-5	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999836375707201	WITHOUT_CLASSIFICATION	1.636242927992996E-5	TEST
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999708262181458	WITHOUT_CLASSIFICATION	2.917378185419414E-5	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999439047483633	WITHOUT_CLASSIFICATION	5.609525163666684E-5	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999496616047727	WITHOUT_CLASSIFICATION	5.0338395227367115E-5	TEST
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999751751524527	WITHOUT_CLASSIFICATION	2.4824847547318127E-5	TEST
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999822802779567	WITHOUT_CLASSIFICATION	1.771972204330177E-5	TEST
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999774637975678	WITHOUT_CLASSIFICATION	2.253620243220849E-5	TEST
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999542506697241	WITHOUT_CLASSIFICATION	4.574933027597893E-5	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999790543859365	WITHOUT_CLASSIFICATION	2.094561406347841E-5	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999603239712809	WITHOUT_CLASSIFICATION	3.96760287190707E-5	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999585364323899	WITHOUT_CLASSIFICATION	4.146356761012515E-5	TEST
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999719128467993	WITHOUT_CLASSIFICATION	2.808715320067218E-5	TEST
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9998312348114881	WITHOUT_CLASSIFICATION	1.687651885119109E-4	TEST
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999981816921164	WITHOUT_CLASSIFICATION	1.818307883615112E-6	TEST
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999539120993974	WITHOUT_CLASSIFICATION	4.608790060253895E-5	TEST
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999593777833398	WITHOUT_CLASSIFICATION	4.0622216660266285E-5	TEST
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9998925644597932	WITHOUT_CLASSIFICATION	1.0743554020679513E-4	TEST
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999792456988295	WITHOUT_CLASSIFICATION	2.075430117049055E-5	TEST
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999792456988295	WITHOUT_CLASSIFICATION	2.075430117049055E-5	TEST
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999725171339257	WITHOUT_CLASSIFICATION	2.748286607442503E-5	TEST
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999688519933453	WITHOUT_CLASSIFICATION	3.1148006654685064E-5	TEST
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999930103709079	WITHOUT_CLASSIFICATION	6.989629092041713E-6	TEST
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999607997358296	WITHOUT_CLASSIFICATION	3.92002641704499E-5	TEST
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999602985632133	WITHOUT_CLASSIFICATION	3.9701436786602294E-5	TEST
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9994779382811625	WITHOUT_CLASSIFICATION	5.220617188375805E-4	TEST
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9999954834658145	WITHOUT_CLASSIFICATION	4.516534185532973E-6	TEST
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999952468174794	WITHOUT_CLASSIFICATION	4.753182520543288E-6	TEST
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999926379715917	WITHOUT_CLASSIFICATION	7.362028408403507E-6	TEST
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999083761354416	WITHOUT_CLASSIFICATION	9.162386455832441E-5	TEST
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999914815829605	WITHOUT_CLASSIFICATION	8.518417039486063E-6	TEST
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999968314207971	WITHOUT_CLASSIFICATION	3.168579202866694E-6	TEST
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999829473194772	WITHOUT_CLASSIFICATION	1.7052680522677454E-5	TEST
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999900176578991	WITHOUT_CLASSIFICATION	9.982342100828031E-6	TEST
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9994458700358531	WITHOUT_CLASSIFICATION	5.541299641469029E-4	TEST
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999918916729796	WITHOUT_CLASSIFICATION	8.108327020274444E-6	TEST
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999616273154882	WITHOUT_CLASSIFICATION	3.8372684511821816E-5	TEST
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999919038845769	WITHOUT_CLASSIFICATION	8.096115423066628E-6	TEST
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999241657357802	WITHOUT_CLASSIFICATION	7.58342642197075E-5	TEST
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9982933532556828	WITHOUT_CLASSIFICATION	0.0017066467443171366	TEST
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999943685528122	WITHOUT_CLASSIFICATION	5.631447187761036E-6	TEST
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9998366954281237	WITHOUT_CLASSIFICATION	1.633045718763417E-4	TEST
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999566325894663	WITHOUT_CLASSIFICATION	4.336741053371031E-5	TEST
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999612365855959	WITHOUT_CLASSIFICATION	3.876341440406207E-5	TEST
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.999958655700054	WITHOUT_CLASSIFICATION	4.1344299945886456E-5	TEST
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999961566001492	WITHOUT_CLASSIFICATION	3.843399850806681E-6	TEST
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999950582157511	WITHOUT_CLASSIFICATION	4.9417842489083305E-6	TEST
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.999912249511837	WITHOUT_CLASSIFICATION	8.775048816299467E-5	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.999992727746652	WITHOUT_CLASSIFICATION	7.272253347934851E-6	TEST
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999949356395396	WITHOUT_CLASSIFICATION	5.064360460474496E-6	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999802620435941	WITHOUT_CLASSIFICATION	1.973795640588888E-5	TEST
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999788331666494	WITHOUT_CLASSIFICATION	2.116683335060321E-5	TEST
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999708499167534	WITHOUT_CLASSIFICATION	2.9150083246551522E-5	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999454893432363	WITHOUT_CLASSIFICATION	5.4510656763644545E-5	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.999992727746652	WITHOUT_CLASSIFICATION	7.272253347934851E-6	TEST
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9998283476016957	WITHOUT_CLASSIFICATION	1.716523983042957E-4	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.999999623462944	WITHOUT_CLASSIFICATION	3.765370560021447E-7	TEST
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999813528328204	WITHOUT_CLASSIFICATION	1.8647167179573017E-5	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9998325287946288	WITHOUT_CLASSIFICATION	1.6747120537126647E-4	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9998325287946288	WITHOUT_CLASSIFICATION	1.6747120537126647E-4	TEST
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999807998078667	WITHOUT_CLASSIFICATION	1.920019213334845E-5	TEST
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.999990637049677	WITHOUT_CLASSIFICATION	9.362950322959829E-6	TEST
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999992767603805	WITHOUT_CLASSIFICATION	7.232396195567136E-7	TEST
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999996837820576	WITHOUT_CLASSIFICATION	3.1621794243555324E-7	TEST
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9999439920873564	WITHOUT_CLASSIFICATION	5.600791264358992E-5	TEST
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.999959104829988	WITHOUT_CLASSIFICATION	4.0895170012000274E-5	TEST
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9998496119937634	WITHOUT_CLASSIFICATION	1.5038800623648883E-4	TEST
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9998715454693456	WITHOUT_CLASSIFICATION	1.2845453065427702E-4	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999727630677997	WITHOUT_CLASSIFICATION	2.7236932200335067E-5	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999727630677997	WITHOUT_CLASSIFICATION	2.7236932200335067E-5	TEST
// no matching ctor found	WITHOUT_CLASSIFICATION	0.999991184078211	WITHOUT_CLASSIFICATION	8.815921789097666E-6	TEST
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9998434768552068	WITHOUT_CLASSIFICATION	1.565231447931594E-4	TEST
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999993934203842	WITHOUT_CLASSIFICATION	6.06579615825124E-7	TEST
// must be a public method	WITHOUT_CLASSIFICATION	0.9999971594197585	WITHOUT_CLASSIFICATION	2.8405802415238286E-6	TEST
// must be a public class	WITHOUT_CLASSIFICATION	0.9999963360548992	WITHOUT_CLASSIFICATION	3.663945100753751E-6	TEST
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999953410238038	WITHOUT_CLASSIFICATION	4.658976196203498E-6	TEST
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999097565111792	WITHOUT_CLASSIFICATION	9.024348882079756E-5	TEST
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999982048787648	WITHOUT_CLASSIFICATION	1.7951212352304798E-6	TEST
// no matching method found	WITHOUT_CLASSIFICATION	0.9999955463386913	WITHOUT_CLASSIFICATION	4.453661308726669E-6	TEST
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9960886702182239	WITHOUT_CLASSIFICATION	0.0039113297817761055	TEST
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.999989013500938	WITHOUT_CLASSIFICATION	1.098649906199027E-5	TEST
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999852804487368	WITHOUT_CLASSIFICATION	1.4719551263125316E-5	TEST
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999923725878153	WITHOUT_CLASSIFICATION	7.627412184827455E-6	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9997075820215736	WITHOUT_CLASSIFICATION	2.924179784264227E-4	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9997075820215736	WITHOUT_CLASSIFICATION	2.924179784264227E-4	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999737262740751	WITHOUT_CLASSIFICATION	2.6273725924914775E-5	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999958938753235	WITHOUT_CLASSIFICATION	4.106124676465026E-6	TEST
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9960886702182239	WITHOUT_CLASSIFICATION	0.0039113297817761055	TEST
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.999993453767823	WITHOUT_CLASSIFICATION	6.546232177023917E-6	TEST
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999998760424986	WITHOUT_CLASSIFICATION	1.239575014608224E-7	TEST
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999991237510415	WITHOUT_CLASSIFICATION	8.762489584613735E-7	TEST
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.999987945884776	WITHOUT_CLASSIFICATION	1.205411522399131E-5	TEST
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999989259569672	WITHOUT_CLASSIFICATION	1.0740430328449165E-6	TEST
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999853309942484	WITHOUT_CLASSIFICATION	1.4669005751739701E-5	TEST
/* package scope */	WITHOUT_CLASSIFICATION	0.9999813083935287	WITHOUT_CLASSIFICATION	1.869160647123417E-5	TEST
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999454893432363	WITHOUT_CLASSIFICATION	5.4510656763644545E-5	TEST
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999821702843762	WITHOUT_CLASSIFICATION	1.7829715623730204E-5	TEST
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9988807003390467	WITHOUT_CLASSIFICATION	0.0011192996609532511	TEST
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999906802490505	WITHOUT_CLASSIFICATION	9.319750949496122E-6	TEST
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9997151278884844	WITHOUT_CLASSIFICATION	2.8487211151563617E-4	TEST
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999864149054326	WITHOUT_CLASSIFICATION	1.3585094567349299E-5	TEST
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999956656977675	WITHOUT_CLASSIFICATION	4.334302232410918E-6	TEST
// statically initialized below	WITHOUT_CLASSIFICATION	0.999841777728857	WITHOUT_CLASSIFICATION	1.582222711430798E-4	TEST
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999865101259177	WITHOUT_CLASSIFICATION	1.3489874082313578E-5	TEST
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999881479855623	WITHOUT_CLASSIFICATION	1.1852014437681219E-5	TEST
// should not happen!	WITHOUT_CLASSIFICATION	0.9998336041894382	WITHOUT_CLASSIFICATION	1.6639581056171598E-4	TEST
// start class	WITHOUT_CLASSIFICATION	0.9999952681061838	WITHOUT_CLASSIFICATION	4.731893816204571E-6	TEST
// make getter for handler	WITHOUT_CLASSIFICATION	0.9998867131038267	WITHOUT_CLASSIFICATION	1.1328689617334754E-4	TEST
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999312887311784	WITHOUT_CLASSIFICATION	6.871126882166011E-5	TEST
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9938934023254598	WITHOUT_CLASSIFICATION	0.006106597674540185	TEST
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999647033859629	WITHOUT_CLASSIFICATION	3.529661403710278E-5	TEST
// create static private method field	WITHOUT_CLASSIFICATION	0.9999882736191159	WITHOUT_CLASSIFICATION	1.1726380884036448E-5	TEST
// load static empty array	WITHOUT_CLASSIFICATION	0.9999834009145883	WITHOUT_CLASSIFICATION	1.6599085411750106E-5	TEST
// box arguments	WITHOUT_CLASSIFICATION	0.9999937773574386	WITHOUT_CLASSIFICATION	6.222642561565115E-6	TEST
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9997962651420883	WITHOUT_CLASSIFICATION	2.037348579115684E-4	TEST
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999927380614221	WITHOUT_CLASSIFICATION	7.261938577879154E-6	TEST
// do a void return	WITHOUT_CLASSIFICATION	0.999995956606209	WITHOUT_CLASSIFICATION	4.0433937909893555E-6	TEST
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999825597207694	WITHOUT_CLASSIFICATION	1.7440279230630638E-5	TEST
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999807998078667	WITHOUT_CLASSIFICATION	1.920019213334845E-5	TEST
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999766049706987	WITHOUT_CLASSIFICATION	2.3395029301259202E-5	TEST
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999992580105589	WITHOUT_CLASSIFICATION	7.419894411399686E-7	TEST
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.999976987437948	WITHOUT_CLASSIFICATION	2.301256205196393E-5	TEST
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999752643978107	WITHOUT_CLASSIFICATION	2.4735602189261455E-5	TEST
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999894104972961	WITHOUT_CLASSIFICATION	1.0589502703976367E-5	TEST
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999956890798044	WITHOUT_CLASSIFICATION	4.3109201956447346E-6	TEST
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999802403506117	WITHOUT_CLASSIFICATION	1.9759649388303048E-5	TEST
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9999001497700939	WITHOUT_CLASSIFICATION	9.985022990603833E-5	TEST
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9990530232215362	WITHOUT_CLASSIFICATION	9.469767784638424E-4	TEST
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.999986323174265	WITHOUT_CLASSIFICATION	1.3676825735134619E-5	TEST
/* NUL */	WITHOUT_CLASSIFICATION	0.9996972112811555	WITHOUT_CLASSIFICATION	3.0278871884449414E-4	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9998927115417465	WITHOUT_CLASSIFICATION	1.0728845825346665E-4	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.999983431285417	WITHOUT_CLASSIFICATION	1.6568714582971853E-5	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999994184573605	WITHOUT_CLASSIFICATION	5.815426395256078E-7	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.999863186527573	WITHOUT_CLASSIFICATION	1.368134724269131E-4	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999924047012655	WITHOUT_CLASSIFICATION	7.59529873453456E-6	TEST
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999897084956485	WITHOUT_CLASSIFICATION	1.029150435159128E-5	TEST
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999779920987278	WITHOUT_CLASSIFICATION	2.2007901272146847E-5	TEST
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999772972265745	WITHOUT_CLASSIFICATION	2.2702773425564554E-5	TEST
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999137524552261	WITHOUT_CLASSIFICATION	8.624754477396103E-5	TEST
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999323184236352	WITHOUT_CLASSIFICATION	6.768157636480426E-5	TEST
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999147350556388	WITHOUT_CLASSIFICATION	8.526494436126156E-5	TEST
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9994526441084379	WITHOUT_CLASSIFICATION	5.473558915621756E-4	TEST
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999946561167147	WITHOUT_CLASSIFICATION	5.343883285345466E-6	TEST
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.999977011722903	WITHOUT_CLASSIFICATION	2.298827709700495E-5	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999860860974576	WITHOUT_CLASSIFICATION	1.391390254228009E-5	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999860860974576	WITHOUT_CLASSIFICATION	1.391390254228009E-5	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999860860974576	WITHOUT_CLASSIFICATION	1.391390254228009E-5	TEST
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999984779392073	WITHOUT_CLASSIFICATION	1.522060792765097E-6	TEST
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.999997765633756	WITHOUT_CLASSIFICATION	2.2343662441466046E-6	TEST
// Single node in list	WITHOUT_CLASSIFICATION	0.9999938564323593	WITHOUT_CLASSIFICATION	6.1435676406773946E-6	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999586123278685	WITHOUT_CLASSIFICATION	4.1387672131514205E-5	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999586123278685	WITHOUT_CLASSIFICATION	4.1387672131514205E-5	TEST
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999727836333118	WITHOUT_CLASSIFICATION	2.7216366688160354E-5	TEST
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.999933930785658	WITHOUT_CLASSIFICATION	6.60692143419722E-5	TEST
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999232078644752	WITHOUT_CLASSIFICATION	7.679213552481533E-5	TEST
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999953455171292	WITHOUT_CLASSIFICATION	4.654482870811852E-6	TEST
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999908393516257	WITHOUT_CLASSIFICATION	9.160648374267028E-6	TEST
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999508306721836	WITHOUT_CLASSIFICATION	4.9169327816384785E-5	TEST
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999259776007403	WITHOUT_CLASSIFICATION	7.40223992596454E-5	TEST
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999918933637504	WITHOUT_CLASSIFICATION	8.106636249687306E-6	TEST
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999946313130674	WITHOUT_CLASSIFICATION	5.368686932549392E-6	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999761515731893	WITHOUT_CLASSIFICATION	2.384842681063077E-5	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999761515731893	WITHOUT_CLASSIFICATION	2.384842681063077E-5	TEST
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999102833018614	WITHOUT_CLASSIFICATION	8.971669813868122E-5	TEST
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999907912839527	WITHOUT_CLASSIFICATION	9.208716047330291E-6	TEST
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999853455465165	WITHOUT_CLASSIFICATION	1.4654453483558448E-5	TEST
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999523678672357	WITHOUT_CLASSIFICATION	4.7632132764308784E-5	TEST
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999725351111872	WITHOUT_CLASSIFICATION	2.746488881290318E-5	TEST
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999954834194168	WITHOUT_CLASSIFICATION	4.516580583198546E-6	TEST
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999780654478659	WITHOUT_CLASSIFICATION	2.19345521339839E-5	TEST
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999780769397426	WITHOUT_CLASSIFICATION	2.1923060257400513E-5	TEST
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9998760203152212	WITHOUT_CLASSIFICATION	1.2397968477886542E-4	TEST
// POP	WITHOUT_CLASSIFICATION	0.9998760203152212	WITHOUT_CLASSIFICATION	1.2397968477886542E-4	TEST
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999569189517566	WITHOUT_CLASSIFICATION	4.30810482434287E-5	TEST
// LEXPOP	WITHOUT_CLASSIFICATION	0.9998760203152212	WITHOUT_CLASSIFICATION	1.2397968477886542E-4	TEST
// SET_P	WITHOUT_CLASSIFICATION	0.9998760203152212	WITHOUT_CLASSIFICATION	1.2397968477886542E-4	TEST
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999602177540063	WITHOUT_CLASSIFICATION	3.978224599375649E-5	TEST
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9998485722614148	WITHOUT_CLASSIFICATION	1.5142773858527165E-4	TEST
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999860701925263	WITHOUT_CLASSIFICATION	1.392980747370717E-5	TEST
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999621853160825	WITHOUT_CLASSIFICATION	3.7814683917614565E-5	TEST
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9997357774647267	WITHOUT_CLASSIFICATION	2.642225352732512E-4	TEST
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999773760511215	WITHOUT_CLASSIFICATION	2.2623948878445567E-5	TEST
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999885442929082	WITHOUT_CLASSIFICATION	1.1455707091885204E-5	TEST
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.999985212738847	WITHOUT_CLASSIFICATION	1.478726115288733E-5	TEST
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999827682368624	WITHOUT_CLASSIFICATION	1.7231763137611397E-5	TEST
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999468647140723	WITHOUT_CLASSIFICATION	5.313528592766437E-5	TEST
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999794197958366	WITHOUT_CLASSIFICATION	2.0580204163397606E-5	TEST
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999894176605003	WITHOUT_CLASSIFICATION	1.0582339499652554E-5	TEST
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999646126736249	WITHOUT_CLASSIFICATION	3.538732637500754E-5	TEST
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999813304547572	WITHOUT_CLASSIFICATION	1.8669545242728924E-5	TEST
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999471330356619	WITHOUT_CLASSIFICATION	5.286696433809729E-5	TEST
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999923235211227	WITHOUT_CLASSIFICATION	7.676478877253748E-6	TEST
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999909606340275	WITHOUT_CLASSIFICATION	9.039365972490845E-6	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.9996972112811555	WITHOUT_CLASSIFICATION	3.0278871884449414E-4	TEST
/* end of script. */	WITHOUT_CLASSIFICATION	0.999990172417529	WITHOUT_CLASSIFICATION	9.827582470983724E-6	TEST
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999872636137214	WITHOUT_CLASSIFICATION	1.273638627861039E-5	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.9996972112811555	WITHOUT_CLASSIFICATION	3.0278871884449414E-4	TEST
/* it's a comment */	WITHOUT_CLASSIFICATION	0.999991134169868	WITHOUT_CLASSIFICATION	8.865830132137668E-6	TEST
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9998067604530831	WITHOUT_CLASSIFICATION	1.9323954691697652E-4	TEST
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999462937065111	WITHOUT_CLASSIFICATION	5.3706293488826534E-5	TEST
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999799387354974	WITHOUT_CLASSIFICATION	2.0061264502623305E-5	TEST
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999665146940631	WITHOUT_CLASSIFICATION	3.3485305936942476E-5	TEST
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999926094112204	WITHOUT_CLASSIFICATION	7.390588779694911E-6	TEST
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999941466463075	WITHOUT_CLASSIFICATION	5.853353692580694E-6	TEST
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9998059300717611	WITHOUT_CLASSIFICATION	1.9406992823897326E-4	TEST
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999779104727781	WITHOUT_CLASSIFICATION	2.208952722186532E-5	TEST
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999779104727781	WITHOUT_CLASSIFICATION	2.208952722186532E-5	TEST
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999779104727781	WITHOUT_CLASSIFICATION	2.208952722186532E-5	TEST
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999585664133261	WITHOUT_CLASSIFICATION	4.143358667390002E-5	TEST
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999190566099776	WITHOUT_CLASSIFICATION	8.094339002231261E-5	TEST
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999749468913214	WITHOUT_CLASSIFICATION	2.505310867862566E-5	TEST
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999063178205828	WITHOUT_CLASSIFICATION	9.36821794172563E-5	TEST
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999544621695869	WITHOUT_CLASSIFICATION	4.553783041317194E-5	TEST
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999511530658355	WITHOUT_CLASSIFICATION	4.884693416453403E-5	TEST
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999367911980929	WITHOUT_CLASSIFICATION	6.320880190719816E-5	TEST
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999779104727781	WITHOUT_CLASSIFICATION	2.208952722186532E-5	TEST
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999800280749835	WITHOUT_CLASSIFICATION	1.9971925016474824E-5	TEST
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999517895277306	WITHOUT_CLASSIFICATION	4.8210472269496406E-5	TEST
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999714960474666	WITHOUT_CLASSIFICATION	2.8503952533435752E-5	TEST
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999833442447145	WITHOUT_CLASSIFICATION	1.6655755285551836E-5	TEST
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9997395724158917	WITHOUT_CLASSIFICATION	2.604275841082299E-4	TEST
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9997927542498454	WITHOUT_CLASSIFICATION	2.072457501545841E-4	TEST
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999407726566167	WITHOUT_CLASSIFICATION	5.922734338315957E-5	TEST
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.999611783039985	WITHOUT_CLASSIFICATION	3.8821696001507003E-4	TEST
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999909665333809	WITHOUT_CLASSIFICATION	9.033466619104236E-6	TEST
// block (primary)	WITHOUT_CLASSIFICATION	0.9999911390377426	WITHOUT_CLASSIFICATION	8.86096225739792E-6	TEST
// block (expr)	WITHOUT_CLASSIFICATION	0.9999911390377426	WITHOUT_CLASSIFICATION	8.86096225739792E-6	TEST
// hash	WITHOUT_CLASSIFICATION	0.9998769941120038	WITHOUT_CLASSIFICATION	1.2300588799622048E-4	TEST
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9992492075836321	WITHOUT_CLASSIFICATION	7.507924163679194E-4	TEST
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9999437095233416	WITHOUT_CLASSIFICATION	5.62904766584729E-5	TEST
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999731529169887	WITHOUT_CLASSIFICATION	2.6847083011152465E-5	TEST
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999918529867716	WITHOUT_CLASSIFICATION	8.147013228313674E-6	TEST
// binary	WITHOUT_CLASSIFICATION	0.9998809584884837	WITHOUT_CLASSIFICATION	1.1904151151641518E-4	TEST
// decimal	WITHOUT_CLASSIFICATION	0.9998762408391864	WITHOUT_CLASSIFICATION	1.237591608136405E-4	TEST
//Octal	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999974157874496	WITHOUT_CLASSIFICATION	2.584212550374443E-6	TEST
// backslash	WITHOUT_CLASSIFICATION	0.9999910429641807	WITHOUT_CLASSIFICATION	8.95703581922674E-6	TEST
// newline	WITHOUT_CLASSIFICATION	0.9998770769453859	WITHOUT_CLASSIFICATION	1.229230546141635E-4	TEST
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999917483271332	WITHOUT_CLASSIFICATION	8.25167286674269E-6	TEST
// form feed	WITHOUT_CLASSIFICATION	0.9999912218007568	WITHOUT_CLASSIFICATION	8.77819924322051E-6	TEST
// vertical tab	WITHOUT_CLASSIFICATION	0.9999917672254164	WITHOUT_CLASSIFICATION	8.23277458372754E-6	TEST
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// escape	WITHOUT_CLASSIFICATION	0.9998766605682883	WITHOUT_CLASSIFICATION	1.2333943171175462E-4	TEST
// hex constant	WITHOUT_CLASSIFICATION	0.9999910248861587	WITHOUT_CLASSIFICATION	8.975113841467E-6	TEST
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9998705737722567	WITHOUT_CLASSIFICATION	1.2942622774326324E-4	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999977247430883	WITHOUT_CLASSIFICATION	2.275256911675045E-6	TEST
// space	WITHOUT_CLASSIFICATION	0.9999301536007069	WITHOUT_CLASSIFICATION	6.984639929312178E-5	TEST
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9998546438059602	WITHOUT_CLASSIFICATION	1.4535619403982E-4	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999609174525854	WITHOUT_CLASSIFICATION	3.9082547414664755E-5	TEST
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999896614361288	WITHOUT_CLASSIFICATION	1.033856387125514E-5	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999977247430883	WITHOUT_CLASSIFICATION	2.275256911675045E-6	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9998961980553805	WITHOUT_CLASSIFICATION	1.0380194461947437E-4	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9998961980553805	WITHOUT_CLASSIFICATION	1.0380194461947437E-4	TEST
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999772393770241	WITHOUT_CLASSIFICATION	2.2760622975879554E-5	TEST
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.999966160651189	WITHOUT_CLASSIFICATION	3.3839348810868175E-5	TEST
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999903734082451	WITHOUT_CLASSIFICATION	9.626591754850506E-6	TEST
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999481980712654	WITHOUT_CLASSIFICATION	5.1801928734464294E-5	TEST
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999900859649937	WITHOUT_CLASSIFICATION	9.914035006233594E-6	TEST
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999585364323899	WITHOUT_CLASSIFICATION	4.146356761012515E-5	TEST
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9611718799372664	TEST	0.038828120062733604	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.99991941477654	WITHOUT_CLASSIFICATION	8.058522346003149E-5	TEST
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999340920292924	WITHOUT_CLASSIFICATION	6.590797070754876E-5	TEST
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999408386736074	WITHOUT_CLASSIFICATION	5.916132639260764E-5	TEST
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999543198713468	WITHOUT_CLASSIFICATION	4.568012865328201E-5	TEST
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9998156002943721	WITHOUT_CLASSIFICATION	1.8439970562798608E-4	TEST
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.999994330609456	WITHOUT_CLASSIFICATION	5.669390544019505E-6	TEST
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999947135792304	WITHOUT_CLASSIFICATION	5.2864207696284105E-6	TEST
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9998873217583856	WITHOUT_CLASSIFICATION	1.1267824161451314E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
// line 329	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9994639125945394	WITHOUT_CLASSIFICATION	5.360874054606263E-4	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999788188097902	WITHOUT_CLASSIFICATION	2.11811902098629E-5	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9998137509539853	WITHOUT_CLASSIFICATION	1.8624904601466401E-4	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999806932255356	WITHOUT_CLASSIFICATION	1.9306774464332076E-5	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999975640821164	WITHOUT_CLASSIFICATION	2.4359178836188224E-6	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999909625948853	WITHOUT_CLASSIFICATION	9.03740511475988E-6	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999912263469033	WITHOUT_CLASSIFICATION	8.773653096646819E-6	TEST
// line 271	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 274	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 303	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 311	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 314	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 317	WITHOUT_CLASSIFICATION	0.9999933169688388	WITHOUT_CLASSIFICATION	6.683031161227226E-6	TEST
// line 332	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 338	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 341	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 344	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 358	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 367	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 378	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 407	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 411	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 414	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 434	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 443	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 446	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 452	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 457	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 464	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 467	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 470	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 479	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 484	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 492	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 498	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 501	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 504	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 507	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 510	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 519	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 525	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 556	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 559	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 563	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 569	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 575	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 578	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 587	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 596	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 604	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 607	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 613	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 616	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 634	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 638	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 643	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 646	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 655	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 660	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 667	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 670	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 701	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 717	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 720	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 726	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 729	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 735	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 738	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 751	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 754	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 757	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 760	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 763	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 769	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 775	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 797	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 803	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 806	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 809	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 815	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 818	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 821	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 824	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 830	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 833	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 836	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 852	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 858	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 861	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 868	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 871	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 876	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 879	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 883	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 899	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 903	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 907	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 915	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 920	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 923	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 926	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 936	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 940	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 944	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 948	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 956	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 964	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 967	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 972	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 978	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 984	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 986	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 996	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1001	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1008	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1014	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1029	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1032	WITHOUT_CLASSIFICATION	0.9999933342765521	WITHOUT_CLASSIFICATION	6.665723447859231E-6	TEST
// line 1034	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1045	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1048	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1051	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1058	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1070	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1073	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1076	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1079	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1082	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1089	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1100	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1103	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1107	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1113	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1115	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1119	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1135	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1137	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1151	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1154	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1164	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1175	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1178	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1187	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1189	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1193	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1214	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1234	WITHOUT_CLASSIFICATION	0.9999933364017058	WITHOUT_CLASSIFICATION	6.663598294258266E-6	TEST
// line 1239	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1243	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1263	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1269	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1280	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1283	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1290	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1296	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1299	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1302	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1309	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1313	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1315	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1328	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1335	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1352	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1358	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1374	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1381	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1415	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1431	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1434	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1440	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1443	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1453	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1465	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1477	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1480	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1485	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1488	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1510	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1516	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1533	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1550	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1553	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1556	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1565	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1568	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1571	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1574	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1577	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1587	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1600	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1609	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1623	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1626	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1638	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1641	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1644	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1649	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1655	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1658	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1661	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1672	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1677	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1687	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1694	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1733	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1745	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1757	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1769	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1775	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1784	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1808	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1814	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999697462138397	WITHOUT_CLASSIFICATION	3.0253786160329988E-5	TEST
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999219916581463	WITHOUT_CLASSIFICATION	7.800834185360441E-5	TEST
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999146740506385	WITHOUT_CLASSIFICATION	8.532594936150983E-5	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9995939408364322	WITHOUT_CLASSIFICATION	4.0605916356784206E-4	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9998587030379822	WITHOUT_CLASSIFICATION	1.412969620178235E-4	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9995937605729004	WITHOUT_CLASSIFICATION	4.062394270996058E-4	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9995937605729004	WITHOUT_CLASSIFICATION	4.062394270996058E-4	TEST
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9998583434283869	WITHOUT_CLASSIFICATION	1.416565716131303E-4	TEST
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.999813520215728	WITHOUT_CLASSIFICATION	1.8647978427199018E-4	TEST
// line 529	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9998967741140288	WITHOUT_CLASSIFICATION	1.0322588597117975E-4	TEST
/* XXX*/	WITHOUT_CLASSIFICATION	0.9994151824899812	WITHOUT_CLASSIFICATION	5.848175100188116E-4	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999606446015293	WITHOUT_CLASSIFICATION	3.93553984705386E-5	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998496000352042	WITHOUT_CLASSIFICATION	1.5039996479594277E-4	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9998967741140288	WITHOUT_CLASSIFICATION	1.0322588597117975E-4	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.999804354551691	WITHOUT_CLASSIFICATION	1.9564544830897478E-4	TEST
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999693567895924	WITHOUT_CLASSIFICATION	3.064321040760713E-5	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999890164595493	WITHOUT_CLASSIFICATION	1.0983540450624733E-5	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.998769464371502	WITHOUT_CLASSIFICATION	0.00123053562849791	TEST
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.999993323017074	WITHOUT_CLASSIFICATION	6.676982925900045E-6	TEST
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.999981873285829	WITHOUT_CLASSIFICATION	1.8126714170949364E-5	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999946765969735	WITHOUT_CLASSIFICATION	5.323403026421355E-6	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999946765969735	WITHOUT_CLASSIFICATION	5.323403026421355E-6	TEST
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9998125207892169	WITHOUT_CLASSIFICATION	1.8747921078319295E-4	TEST
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9986241802078503	WITHOUT_CLASSIFICATION	0.0013758197921496698	TEST
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9998600598960774	WITHOUT_CLASSIFICATION	1.39940103922606E-4	TEST
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999856719523817	WITHOUT_CLASSIFICATION	1.432804761832612E-5	TEST
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999227628489338	WITHOUT_CLASSIFICATION	7.72371510662683E-5	TEST
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.999843057504755	WITHOUT_CLASSIFICATION	1.5694249524509374E-4	TEST
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999983819291475	WITHOUT_CLASSIFICATION	1.6180708525203238E-6	TEST
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999621756079767	WITHOUT_CLASSIFICATION	3.7824392023311405E-5	TEST
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999847197750297	WITHOUT_CLASSIFICATION	1.5280224970268586E-5	TEST
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999663773962328	WITHOUT_CLASSIFICATION	3.3622603767129775E-5	TEST
// Parser states:	WITHOUT_CLASSIFICATION	0.9999909838546048	WITHOUT_CLASSIFICATION	9.016145395106815E-6	TEST
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999943910013951	WITHOUT_CLASSIFICATION	5.6089986049151865E-6	TEST
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999969454986837	WITHOUT_CLASSIFICATION	3.0545013162091717E-6	TEST
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9997943752674054	WITHOUT_CLASSIFICATION	2.0562473259453455E-4	TEST
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999465673109809	WITHOUT_CLASSIFICATION	5.343268901916544E-5	TEST
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999667496920309	WITHOUT_CLASSIFICATION	3.3250307969159494E-5	TEST
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999722282862451	WITHOUT_CLASSIFICATION	2.7771713754906956E-5	TEST
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999526503560247	WITHOUT_CLASSIFICATION	4.734964397537566E-5	TEST
// Node	WITHOUT_CLASSIFICATION	0.9998762953785268	WITHOUT_CLASSIFICATION	1.2370462147321857E-4	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9996010738306431	WITHOUT_CLASSIFICATION	3.9892616935684465E-4	TEST
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9995007612734006	WITHOUT_CLASSIFICATION	4.992387265993507E-4	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9996010738306431	WITHOUT_CLASSIFICATION	3.9892616935684465E-4	TEST
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9993691486237951	WITHOUT_CLASSIFICATION	6.30851376204865E-4	TEST
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9995007612734006	WITHOUT_CLASSIFICATION	4.992387265993507E-4	TEST
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9999791073162622	WITHOUT_CLASSIFICATION	2.089268373781716E-5	TEST
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999779104727781	WITHOUT_CLASSIFICATION	2.208952722186532E-5	TEST
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999891640385968	WITHOUT_CLASSIFICATION	1.0835961403157997E-5	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9998760203152212	WITHOUT_CLASSIFICATION	1.2397968477886542E-4	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9998760203152212	WITHOUT_CLASSIFICATION	1.2397968477886542E-4	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9998760203152212	WITHOUT_CLASSIFICATION	1.2397968477886542E-4	TEST
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999093925641641	WITHOUT_CLASSIFICATION	9.060743583586427E-5	TEST
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.990553059364806	WITHOUT_CLASSIFICATION	0.009446940635194002	TEST
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999796571108631	WITHOUT_CLASSIFICATION	2.034288913689751E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999788188097902	WITHOUT_CLASSIFICATION	2.11811902098629E-5	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999806932255356	WITHOUT_CLASSIFICATION	1.9306774464332076E-5	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999975640821164	WITHOUT_CLASSIFICATION	2.4359178836188224E-6	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999909625948853	WITHOUT_CLASSIFICATION	9.03740511475988E-6	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999912263469033	WITHOUT_CLASSIFICATION	8.773653096646819E-6	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 280	WITHOUT_CLASSIFICATION	0.9999933168086284	WITHOUT_CLASSIFICATION	6.683191371712131E-6	TEST
// line 283	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 296	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 324	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 327	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 331	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 333	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 336	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 342	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 345	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 348	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 354	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 368	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 377	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 388	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 392	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 397	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 429	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 432	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 436	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 445	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 448	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 454	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 459	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 466	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 469	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 478	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 481	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 488	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 494	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 497	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 503	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 506	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 509	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 512	WITHOUT_CLASSIFICATION	0.999993320467638	WITHOUT_CLASSIFICATION	6.67953236204515E-6	TEST
// line 521	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 526	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 785	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 534	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 549	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 552	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 558	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 561	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 571	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 574	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 579	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 586	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 589	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 592	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 595	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 598	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 623	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 627	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 630	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 633	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 639	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 648	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 657	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 661	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 666	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 678	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 682	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 688	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 699	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 706	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 708	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 727	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 737	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 753	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 779	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 801	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 808	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 811	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 817	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 899	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 944	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 820	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 826	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 829	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 832	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 851	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 857	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 860	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 863	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 866	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 869	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 875	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 884	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 887	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 890	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 902	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 909	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 912	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 916	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 922	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 928	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 941	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 947	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 951	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 955	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 965	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 969	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 977	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 983	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1013	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1023	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1035	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1041	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1043	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1054	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1057	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1060	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1069	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1075	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1078	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1084	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1087	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1090	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1093	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1114	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1116	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1118	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1124	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1126	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1138	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1144	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1149	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1155	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1162	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1173	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1179	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1182	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1190	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1196	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1213	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1217	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1231	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1236	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1244	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1254	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1258	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1264	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1270	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1273	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1276	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1279	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1282	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1289	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1292	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1295	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1298	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1305	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1308	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1311	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1317	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1323	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1326	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1329	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1337	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1342	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1345	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1354	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1359	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1366	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1369	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1373	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1377	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1383	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1399	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1401	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1406	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1417	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1424	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1427	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1430	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1433	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1436	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1442	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1445	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1458	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1464	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1489	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1493	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1507	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1519	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1532	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1538	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1542	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1557	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1573	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1591	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1607	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1610	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1622	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1625	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1636	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1639	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1647	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1651	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1657	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1660	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1663	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1678	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1702	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1711	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1719	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1722	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1731	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1734	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1738	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1746	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1756	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1758	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1761	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1767	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1776	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1782	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1785	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1788	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1791	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1797	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1800	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1803	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1806	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1809	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1815	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1825	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1828	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1831	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1847	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9995937605729004	WITHOUT_CLASSIFICATION	4.062394270996058E-4	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9995937605729004	WITHOUT_CLASSIFICATION	4.062394270996058E-4	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9998967741140288	WITHOUT_CLASSIFICATION	1.0322588597117975E-4	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999606446015293	WITHOUT_CLASSIFICATION	3.93553984705386E-5	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998496000352042	WITHOUT_CLASSIFICATION	1.5039996479594277E-4	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9998967741140288	WITHOUT_CLASSIFICATION	1.0322588597117975E-4	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.999804354551691	WITHOUT_CLASSIFICATION	1.9564544830897478E-4	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999585954744858	WITHOUT_CLASSIFICATION	4.140452551414198E-5	TEST
// line 1854	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1869	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1872	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1877	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1886	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1898	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1902	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1905	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1911	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1918	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1935	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1938	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1942	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1948	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1960	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1963	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1968	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1972	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1982	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1995	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 2000	WITHOUT_CLASSIFICATION	0.9999933173161162	WITHOUT_CLASSIFICATION	6.682683883783368E-6	TEST
// line 2006	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 2010	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9998554570699257	WITHOUT_CLASSIFICATION	1.4454293007420187E-4	TEST
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.999714680512168	WITHOUT_CLASSIFICATION	2.853194878319659E-4	TEST
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9998313911314631	WITHOUT_CLASSIFICATION	1.6860886853675572E-4	TEST
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999939670725989	WITHOUT_CLASSIFICATION	6.032927401040748E-6	TEST
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999115321593978	WITHOUT_CLASSIFICATION	8.846784060230617E-5	TEST
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9997053174306414	WITHOUT_CLASSIFICATION	2.946825693586745E-4	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999890164595493	WITHOUT_CLASSIFICATION	1.0983540450624733E-5	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.998769464371502	WITHOUT_CLASSIFICATION	0.00123053562849791	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999946765969735	WITHOUT_CLASSIFICATION	5.323403026421355E-6	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999946765969735	WITHOUT_CLASSIFICATION	5.323403026421355E-6	TEST
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9999455073142696	WITHOUT_CLASSIFICATION	5.449268573034249E-5	TEST
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999873372305549	WITHOUT_CLASSIFICATION	1.2662769445178898E-5	TEST
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.999983833378233	WITHOUT_CLASSIFICATION	1.61666217669815E-5	TEST
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.999993323017074	WITHOUT_CLASSIFICATION	6.676982925900045E-6	TEST
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999976824759077	WITHOUT_CLASSIFICATION	2.3175240922267757E-6	TEST
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9998862385597418	WITHOUT_CLASSIFICATION	1.1376144025812925E-4	TEST
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999809568322724	WITHOUT_CLASSIFICATION	1.90431677277118E-5	TEST
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999945391535368	WITHOUT_CLASSIFICATION	5.46084646321683E-6	TEST
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999852425842726	WITHOUT_CLASSIFICATION	1.4757415727423379E-5	TEST
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999864799438106	WITHOUT_CLASSIFICATION	1.352005618942428E-5	TEST
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999657077481569	WITHOUT_CLASSIFICATION	3.429225184316844E-5	TEST
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999566852714424	WITHOUT_CLASSIFICATION	4.3314728557651375E-5	TEST
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999626847142477	WITHOUT_CLASSIFICATION	3.731528575225607E-5	TEST
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999949928449231	WITHOUT_CLASSIFICATION	5.00715507690917E-6	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.999987157488238	WITHOUT_CLASSIFICATION	1.2842511762118031E-5	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.999987157488238	WITHOUT_CLASSIFICATION	1.2842511762118031E-5	TEST
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9995273853627007	WITHOUT_CLASSIFICATION	4.726146372993938E-4	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999911953604167	WITHOUT_CLASSIFICATION	8.804639583261477E-6	TEST
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999964931553472	WITHOUT_CLASSIFICATION	3.5068446526656796E-6	TEST
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9998333895984187	WITHOUT_CLASSIFICATION	1.6661040158128903E-4	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999994587918072	WITHOUT_CLASSIFICATION	5.412081927887632E-6	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999928354573648	WITHOUT_CLASSIFICATION	7.164542635210117E-6	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999952380165238	WITHOUT_CLASSIFICATION	4.76198347617181E-6	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999928354573648	WITHOUT_CLASSIFICATION	7.164542635210117E-6	TEST
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999876393832712	WITHOUT_CLASSIFICATION	1.2360616728757992E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999893690732082	WITHOUT_CLASSIFICATION	1.0630926791718634E-5	TEST
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9999188472996545	WITHOUT_CLASSIFICATION	8.115270034542592E-5	TEST
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9998527565512767	WITHOUT_CLASSIFICATION	1.4724344872332442E-4	TEST
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9995128940817691	WITHOUT_CLASSIFICATION	4.8710591823087485E-4	TEST
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9995128940817691	WITHOUT_CLASSIFICATION	4.8710591823087485E-4	TEST
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999503580795728	WITHOUT_CLASSIFICATION	4.9641920427252544E-5	TEST
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999730477491457	WITHOUT_CLASSIFICATION	2.6952250854217646E-5	TEST
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999724239419879	WITHOUT_CLASSIFICATION	2.757605801209692E-5	TEST
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999844986709705	WITHOUT_CLASSIFICATION	1.5501329029537024E-5	TEST
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999921508600567	WITHOUT_CLASSIFICATION	7.849139943361526E-6	TEST
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9994500879585432	WITHOUT_CLASSIFICATION	5.499120414569463E-4	TEST
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9994500879585432	WITHOUT_CLASSIFICATION	5.499120414569463E-4	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9995277133268258	WITHOUT_CLASSIFICATION	4.7228667317417486E-4	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9998110386788631	WITHOUT_CLASSIFICATION	1.8896132113681413E-4	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9998110386788631	WITHOUT_CLASSIFICATION	1.8896132113681413E-4	TEST
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999662691232557	WITHOUT_CLASSIFICATION	3.373087674423973E-5	TEST
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.999900919087352	WITHOUT_CLASSIFICATION	9.908091264803766E-5	TEST
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999447859310924	WITHOUT_CLASSIFICATION	5.521406890770785E-5	TEST
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999886923285555	WITHOUT_CLASSIFICATION	1.1307671444553998E-5	TEST
// required and optional only	WITHOUT_CLASSIFICATION	0.9999961812952225	WITHOUT_CLASSIFICATION	3.818704777445659E-6	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999928354573648	WITHOUT_CLASSIFICATION	7.164542635210117E-6	TEST
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999644709040859	WITHOUT_CLASSIFICATION	3.5529095914015565E-5	TEST
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999998919690494	WITHOUT_CLASSIFICATION	1.0803095062880764E-7	TEST
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999444170639706	WITHOUT_CLASSIFICATION	5.55829360294371E-5	TEST
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999645102788975	WITHOUT_CLASSIFICATION	3.54897211024238E-5	TEST
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999997612321035	WITHOUT_CLASSIFICATION	2.387678965348039E-7	TEST
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999989583491539	WITHOUT_CLASSIFICATION	1.0416508461678789E-6	TEST
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999828916400203	WITHOUT_CLASSIFICATION	1.710835997972848E-5	TEST
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9998238837216766	WITHOUT_CLASSIFICATION	1.7611627832344882E-4	TEST
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999939654074664	WITHOUT_CLASSIFICATION	6.034592533612998E-6	TEST
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999003424730663	WITHOUT_CLASSIFICATION	9.965752693374574E-5	TEST
// No argument blocks	WITHOUT_CLASSIFICATION	0.999950094033855	WITHOUT_CLASSIFICATION	4.990596614487165E-5	TEST
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999997961189351	WITHOUT_CLASSIFICATION	2.038810648821686E-7	TEST
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9991604552724597	WITHOUT_CLASSIFICATION	8.395447275402678E-4	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999895776930242	WITHOUT_CLASSIFICATION	1.0422306975787327E-5	TEST
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.999942199636827	WITHOUT_CLASSIFICATION	5.7800363173107034E-5	TEST
// Highest reserved id	WITHOUT_CLASSIFICATION	0.999978618838126	WITHOUT_CLASSIFICATION	2.1381161873899546E-5	TEST
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999804541616945	WITHOUT_CLASSIFICATION	1.9545838305582862E-5	TEST
// id must always be even	WITHOUT_CLASSIFICATION	0.9999825213245611	WITHOUT_CLASSIFICATION	1.747867543891E-5	TEST
// with block pass	WITHOUT_CLASSIFICATION	0.9999650336651819	WITHOUT_CLASSIFICATION	3.4966334818108836E-5	TEST
// no block	WITHOUT_CLASSIFICATION	0.9999954317860523	WITHOUT_CLASSIFICATION	4.568213947684001E-6	TEST
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999099188280164	WITHOUT_CLASSIFICATION	9.008117198368662E-5	TEST
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9995493982703043	WITHOUT_CLASSIFICATION	4.5060172969577154E-4	TEST
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9997950675474357	WITHOUT_CLASSIFICATION	2.0493245256418386E-4	TEST
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.999940551627991	WITHOUT_CLASSIFICATION	5.944837200888799E-5	TEST
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999786915701813	WITHOUT_CLASSIFICATION	2.130842981880573E-5	TEST
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999890091947483	WITHOUT_CLASSIFICATION	1.0990805251739092E-5	TEST
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999603504408755	WITHOUT_CLASSIFICATION	3.9649559124463694E-5	TEST
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.999995544160196	WITHOUT_CLASSIFICATION	4.4558398040985766E-6	TEST
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9998040466139685	WITHOUT_CLASSIFICATION	1.9595338603155306E-4	TEST
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999782126435939	WITHOUT_CLASSIFICATION	2.1787356406104038E-5	TEST
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.999969483073945	WITHOUT_CLASSIFICATION	3.051692605503089E-5	TEST
// Lastline	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9996267033727204	WITHOUT_CLASSIFICATION	3.7329662727964897E-4	TEST
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999980198699749	WITHOUT_CLASSIFICATION	1.9801300250770362E-6	TEST
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999951733334046	WITHOUT_CLASSIFICATION	4.826666595400872E-6	TEST
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999941034571491	WITHOUT_CLASSIFICATION	5.896542850834179E-6	TEST
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999874679577738	WITHOUT_CLASSIFICATION	1.253204222613836E-5	TEST
// silently ignore	WITHOUT_CLASSIFICATION	0.9999931891919794	WITHOUT_CLASSIFICATION	6.810808020585428E-6	TEST
// used by compiler	WITHOUT_CLASSIFICATION	0.999990310336953	WITHOUT_CLASSIFICATION	9.68966304707219E-6	TEST
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999986292756747	WITHOUT_CLASSIFICATION	1.3707243252607586E-6	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999585954744858	WITHOUT_CLASSIFICATION	4.140452551414198E-5	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9998738721243751	WITHOUT_CLASSIFICATION	1.2612787562494304E-4	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999874082324036	WITHOUT_CLASSIFICATION	1.2591767596272995E-5	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9998927115417465	WITHOUT_CLASSIFICATION	1.0728845825346665E-4	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.999983431285417	WITHOUT_CLASSIFICATION	1.6568714582971853E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999893690732082	WITHOUT_CLASSIFICATION	1.0630926791718634E-5	TEST
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999956960117835	WITHOUT_CLASSIFICATION	4.303988216472677E-6	TEST
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999933077814697	WITHOUT_CLASSIFICATION	6.692218530241313E-6	TEST
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999957667874483	WITHOUT_CLASSIFICATION	4.233212551721828E-6	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999993580049424	WITHOUT_CLASSIFICATION	6.419950575882416E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999993580049424	WITHOUT_CLASSIFICATION	6.419950575882416E-7	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999924530287165	WITHOUT_CLASSIFICATION	7.5469712834642054E-6	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999924530287165	WITHOUT_CLASSIFICATION	7.5469712834642054E-6	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999924530287165	WITHOUT_CLASSIFICATION	7.5469712834642054E-6	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999864395746383	WITHOUT_CLASSIFICATION	1.3560425361638462E-5	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999864395746383	WITHOUT_CLASSIFICATION	1.3560425361638462E-5	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999736970721231	WITHOUT_CLASSIFICATION	2.630292787683473E-5	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999736970721231	WITHOUT_CLASSIFICATION	2.630292787683473E-5	TEST
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9997015399655926	WITHOUT_CLASSIFICATION	2.984600344074004E-4	TEST
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999693725145375	WITHOUT_CLASSIFICATION	3.062748546246798E-5	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.999993171497756	WITHOUT_CLASSIFICATION	6.828502243900922E-6	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.999993171497756	WITHOUT_CLASSIFICATION	6.828502243900922E-6	TEST
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999431676838796	WITHOUT_CLASSIFICATION	5.6832316120511726E-5	TEST
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999503603472288	WITHOUT_CLASSIFICATION	4.96396527711764E-5	TEST
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999736353831054	WITHOUT_CLASSIFICATION	2.6364616894596275E-5	TEST
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999883692724568	WITHOUT_CLASSIFICATION	1.1630727543260668E-5	TEST
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999944906104729	WITHOUT_CLASSIFICATION	5.509389527115559E-6	TEST
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999539042133788	WITHOUT_CLASSIFICATION	4.609578662129511E-5	TEST
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999739572798171	WITHOUT_CLASSIFICATION	2.604272018296622E-5	TEST
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999781479135478	WITHOUT_CLASSIFICATION	2.1852086452215172E-5	TEST
// caller	WITHOUT_CLASSIFICATION	0.9998804025418333	WITHOUT_CLASSIFICATION	1.1959745816678457E-4	TEST
// calltype // block	WITHOUT_CLASSIFICATION	0.9999911390377426	WITHOUT_CLASSIFICATION	8.86096225739792E-6	TEST
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999972273167748	WITHOUT_CLASSIFICATION	2.772683225324146E-6	TEST
// load arity for check	WITHOUT_CLASSIFICATION	0.9999799971190716	WITHOUT_CLASSIFICATION	2.000288092838721E-5	TEST
// throw	WITHOUT_CLASSIFICATION	0.9998952542897045	WITHOUT_CLASSIFICATION	1.0474571029540919E-4	TEST
// load arity for error	WITHOUT_CLASSIFICATION	0.999980431735382	WITHOUT_CLASSIFICATION	1.956826461800458E-5	TEST
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999788562236406	WITHOUT_CLASSIFICATION	2.114377635939577E-5	TEST
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9997075820215736	WITHOUT_CLASSIFICATION	2.924179784264227E-4	TEST
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9997477305342475	WITHOUT_CLASSIFICATION	2.5226946575255404E-4	TEST
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999781247058505	WITHOUT_CLASSIFICATION	2.1875294149594788E-5	TEST
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999781247058505	WITHOUT_CLASSIFICATION	2.1875294149594788E-5	TEST
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9994458700358531	WITHOUT_CLASSIFICATION	5.541299641469029E-4	TEST
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999682971699962	WITHOUT_CLASSIFICATION	3.170283000382483E-5	TEST
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999448584489415	WITHOUT_CLASSIFICATION	5.514155105849594E-5	TEST
// load the encoding	WITHOUT_CLASSIFICATION	0.9999971559960881	WITHOUT_CLASSIFICATION	2.844003911947394E-6	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999623921195394	WITHOUT_CLASSIFICATION	3.7607880460650725E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999623921195394	WITHOUT_CLASSIFICATION	3.7607880460650725E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999623921195394	WITHOUT_CLASSIFICATION	3.7607880460650725E-5	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999585840321573	WITHOUT_CLASSIFICATION	4.141596784267444E-5	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999585840321573	WITHOUT_CLASSIFICATION	4.141596784267444E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999585840321573	WITHOUT_CLASSIFICATION	4.141596784267444E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999585840321573	WITHOUT_CLASSIFICATION	4.141596784267444E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999585840321573	WITHOUT_CLASSIFICATION	4.141596784267444E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999590569255176	WITHOUT_CLASSIFICATION	4.0943074482329115E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999590569255176	WITHOUT_CLASSIFICATION	4.0943074482329115E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999590569255176	WITHOUT_CLASSIFICATION	4.0943074482329115E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999590569255176	WITHOUT_CLASSIFICATION	4.0943074482329115E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999590569255176	WITHOUT_CLASSIFICATION	4.0943074482329115E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999590569255176	WITHOUT_CLASSIFICATION	4.0943074482329115E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999590569255176	WITHOUT_CLASSIFICATION	4.0943074482329115E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999590569255176	WITHOUT_CLASSIFICATION	4.0943074482329115E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999590569255176	WITHOUT_CLASSIFICATION	4.0943074482329115E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999590569255176	WITHOUT_CLASSIFICATION	4.0943074482329115E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999590569255176	WITHOUT_CLASSIFICATION	4.0943074482329115E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999590569255176	WITHOUT_CLASSIFICATION	4.0943074482329115E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999590569255176	WITHOUT_CLASSIFICATION	4.0943074482329115E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999590569255176	WITHOUT_CLASSIFICATION	4.0943074482329115E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999590569255176	WITHOUT_CLASSIFICATION	4.0943074482329115E-5	TEST
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999953230101273	WITHOUT_CLASSIFICATION	4.6769898726250705E-6	TEST
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999781247058505	WITHOUT_CLASSIFICATION	2.1875294149594788E-5	TEST
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999585364323899	WITHOUT_CLASSIFICATION	4.146356761012515E-5	TEST
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999985669920408	WITHOUT_CLASSIFICATION	1.4330079592123857E-6	TEST
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999585364323899	WITHOUT_CLASSIFICATION	4.146356761012515E-5	TEST
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999966977659435	WITHOUT_CLASSIFICATION	3.3022340565927903E-6	TEST
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999837040622699	WITHOUT_CLASSIFICATION	1.6295937730108413E-5	TEST
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999557769225902	WITHOUT_CLASSIFICATION	4.422307740986737E-5	TEST
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999396770499397	WITHOUT_CLASSIFICATION	6.0322950060217566E-5	TEST
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9998631138258391	WITHOUT_CLASSIFICATION	1.3688617416085595E-4	TEST
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999984133897645	WITHOUT_CLASSIFICATION	1.5866102354308661E-6	TEST
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.999988363918955	WITHOUT_CLASSIFICATION	1.163608104508079E-5	TEST
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999958298177113	WITHOUT_CLASSIFICATION	4.170182288740591E-6	TEST
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999743736065164	WITHOUT_CLASSIFICATION	2.562639348350429E-5	TEST
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9975786391156838	WITHOUT_CLASSIFICATION	0.0024213608843162513	TEST
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9998712575100658	WITHOUT_CLASSIFICATION	1.2874248993425134E-4	TEST
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999965305623854	WITHOUT_CLASSIFICATION	3.469437614636252E-6	TEST
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999962322455217	WITHOUT_CLASSIFICATION	3.7677544782300317E-6	TEST
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999990585406983	WITHOUT_CLASSIFICATION	9.414593017631589E-7	TEST
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9995632124837811	WITHOUT_CLASSIFICATION	4.367875162188861E-4	TEST
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.99997820097152	WITHOUT_CLASSIFICATION	2.179902848002266E-5	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999952380165238	WITHOUT_CLASSIFICATION	4.76198347617181E-6	TEST
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9973123368598408	WITHOUT_CLASSIFICATION	0.002687663140159343	TEST
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999836024872608	WITHOUT_CLASSIFICATION	1.6397512739186683E-5	TEST
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999982596096343	WITHOUT_CLASSIFICATION	1.7403903657184732E-6	TEST
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999974527878741	WITHOUT_CLASSIFICATION	2.547212125890532E-6	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999875544479156	WITHOUT_CLASSIFICATION	1.2445552084311144E-5	TEST
// extension extensions	WITHOUT_CLASSIFICATION	0.9999792964736197	WITHOUT_CLASSIFICATION	2.070352638038E-5	TEST
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999686813073632	WITHOUT_CLASSIFICATION	3.131869263689492E-5	TEST
// try all extensions	WITHOUT_CLASSIFICATION	0.9999865055787632	WITHOUT_CLASSIFICATION	1.3494421236828349E-5	TEST
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999798560667539	WITHOUT_CLASSIFICATION	2.0143933246120858E-5	TEST
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.999991092467538	WITHOUT_CLASSIFICATION	8.907532462043842E-6	TEST
// try only literal search	WITHOUT_CLASSIFICATION	0.9999812073801132	WITHOUT_CLASSIFICATION	1.8792619886783318E-5	TEST
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999955816802859	WITHOUT_CLASSIFICATION	4.418319714016913E-6	TEST
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999870986959821	WITHOUT_CLASSIFICATION	1.2901304017796246E-5	TEST
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999986843295204	WITHOUT_CLASSIFICATION	1.315670479559928E-6	TEST
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999690527297189	WITHOUT_CLASSIFICATION	3.094727028107258E-5	TEST
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999995125126477	WITHOUT_CLASSIFICATION	4.874873522799821E-7	TEST
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999916635063958	WITHOUT_CLASSIFICATION	8.336493604244241E-6	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999841420596777	WITHOUT_CLASSIFICATION	1.5857940322336676E-5	TEST
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999889017732776	WITHOUT_CLASSIFICATION	1.109822672235306E-5	TEST
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999959084748058	WITHOUT_CLASSIFICATION	4.0915251941748965E-6	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9998883899970898	WITHOUT_CLASSIFICATION	1.1161000291026114E-4	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9998883899970898	WITHOUT_CLASSIFICATION	1.1161000291026114E-4	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999385685571406	WITHOUT_CLASSIFICATION	6.143144285949155E-5	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999385685571406	WITHOUT_CLASSIFICATION	6.143144285949155E-5	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999317727623623	WITHOUT_CLASSIFICATION	6.822723763758854E-5	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999317727623623	WITHOUT_CLASSIFICATION	6.822723763758854E-5	TEST
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999632662299961	WITHOUT_CLASSIFICATION	3.673377000399117E-5	TEST
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999512671918834	WITHOUT_CLASSIFICATION	4.8732808116519964E-5	TEST
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9997872708079785	WITHOUT_CLASSIFICATION	2.1272919202151418E-4	TEST
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999506381417022	WITHOUT_CLASSIFICATION	4.936185829790439E-5	TEST
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999930503240727	WITHOUT_CLASSIFICATION	6.949675927271827E-6	TEST
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9974103248638077	WITHOUT_CLASSIFICATION	0.0025896751361922732	TEST
// signed short, native	WITHOUT_CLASSIFICATION	0.999978230487653	WITHOUT_CLASSIFICATION	2.176951234704292E-5	TEST
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999969679291406	WITHOUT_CLASSIFICATION	3.032070859349046E-6	TEST
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999661770258964	WITHOUT_CLASSIFICATION	3.382297410361098E-5	TEST
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9989832316279068	WITHOUT_CLASSIFICATION	0.0010167683720931952	TEST
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9996558805658693	WITHOUT_CLASSIFICATION	3.4411943413074133E-4	TEST
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999919010398641	WITHOUT_CLASSIFICATION	8.098960135935917E-6	TEST
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999988122103469	WITHOUT_CLASSIFICATION	1.187789653065294E-6	TEST
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999994350404209	WITHOUT_CLASSIFICATION	5.649595791301524E-7	TEST
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999095394834536	WITHOUT_CLASSIFICATION	9.046051654639481E-5	TEST
//            write('S');	WITHOUT_CLASSIFICATION	0.9999802926775105	WITHOUT_CLASSIFICATION	1.9707322489523028E-5	TEST
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.99999800528131	WITHOUT_CLASSIFICATION	1.994718690009455E-6	TEST
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.999985446176961	WITHOUT_CLASSIFICATION	1.4553823039118583E-5	TEST
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9998828046081109	WITHOUT_CLASSIFICATION	1.171953918890501E-4	TEST
// w_symbol	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// w_unique	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999346272957184	WITHOUT_CLASSIFICATION	6.537270428165988E-5	TEST
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999705720753937	WITHOUT_CLASSIFICATION	2.9427924606196427E-5	TEST
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.999893159136947	WITHOUT_CLASSIFICATION	1.068408630529377E-4	TEST
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999911282773812	WITHOUT_CLASSIFICATION	8.871722618660434E-6	TEST
// sic	WITHOUT_CLASSIFICATION	0.9998760203152212	WITHOUT_CLASSIFICATION	1.2397968477886542E-4	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999696769175686	WITHOUT_CLASSIFICATION	3.032308243145514E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999696769175686	WITHOUT_CLASSIFICATION	3.032308243145514E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999696769175686	WITHOUT_CLASSIFICATION	3.032308243145514E-5	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999330520895	WITHOUT_CLASSIFICATION	6.694791053487397E-8	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999330520895	WITHOUT_CLASSIFICATION	6.694791053487397E-8	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999895776930242	WITHOUT_CLASSIFICATION	1.0422306975787327E-5	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999895776930242	WITHOUT_CLASSIFICATION	1.0422306975787327E-5	TEST
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999987068660575	WITHOUT_CLASSIFICATION	1.2931339425653774E-6	TEST
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9999726817664912	WITHOUT_CLASSIFICATION	2.7318233508834334E-5	TEST
// unsigned short, native	WITHOUT_CLASSIFICATION	0.999978197672038	WITHOUT_CLASSIFICATION	2.180232796200406E-5	TEST
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999783344702634	WITHOUT_CLASSIFICATION	2.166552973649845E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999696769175686	WITHOUT_CLASSIFICATION	3.032308243145514E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999696769175686	WITHOUT_CLASSIFICATION	3.032308243145514E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999696769175686	WITHOUT_CLASSIFICATION	3.032308243145514E-5	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999330520895	WITHOUT_CLASSIFICATION	6.694791053487397E-8	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999330520895	WITHOUT_CLASSIFICATION	6.694791053487397E-8	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999330520895	WITHOUT_CLASSIFICATION	6.694791053487397E-8	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999895776930242	WITHOUT_CLASSIFICATION	1.0422306975787327E-5	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999895776930242	WITHOUT_CLASSIFICATION	1.0422306975787327E-5	TEST
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999799839692733	WITHOUT_CLASSIFICATION	2.001603072668152E-5	TEST
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999950956491376	WITHOUT_CLASSIFICATION	4.904350862352425E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999895177214811	WITHOUT_CLASSIFICATION	1.0482278518894114E-5	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999895177214811	WITHOUT_CLASSIFICATION	1.0482278518894114E-5	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999895177214811	WITHOUT_CLASSIFICATION	1.0482278518894114E-5	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999895177214811	WITHOUT_CLASSIFICATION	1.0482278518894114E-5	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999895177214811	WITHOUT_CLASSIFICATION	1.0482278518894114E-5	TEST
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999790859384886	WITHOUT_CLASSIFICATION	2.0914061511390043E-5	TEST
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9999269259826475	WITHOUT_CLASSIFICATION	7.307401735245991E-5	TEST
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.999993398085646	WITHOUT_CLASSIFICATION	6.601914354024096E-6	TEST
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999882924417683	WITHOUT_CLASSIFICATION	1.1707558231665267E-5	TEST
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999497913478864	WITHOUT_CLASSIFICATION	5.020865211370854E-5	TEST
// not enough bytes	WITHOUT_CLASSIFICATION	0.9999517019724551	WITHOUT_CLASSIFICATION	4.8298027544920335E-5	TEST
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999909793539065	WITHOUT_CLASSIFICATION	9.020646093587212E-6	TEST
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999949779434611	WITHOUT_CLASSIFICATION	5.022056538848802E-6	TEST
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999878903997522	WITHOUT_CLASSIFICATION	1.210960024780165E-5	TEST
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999736164531987	WITHOUT_CLASSIFICATION	2.6383546801185468E-5	TEST
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9996994114467805	WITHOUT_CLASSIFICATION	3.00588553219453E-4	TEST
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999268241808436	WITHOUT_CLASSIFICATION	7.317581915639975E-5	TEST
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999756110388542	WITHOUT_CLASSIFICATION	2.4388961145693668E-5	TEST
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999290899955715	WITHOUT_CLASSIFICATION	7.091000442855748E-5	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999913163876912	WITHOUT_CLASSIFICATION	8.683612308847724E-6	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999913163876912	WITHOUT_CLASSIFICATION	8.683612308847724E-6	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999913163876912	WITHOUT_CLASSIFICATION	8.683612308847724E-6	TEST
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9865905140156718	WITHOUT_CLASSIFICATION	0.013409485984328185	TEST
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9865905140156718	WITHOUT_CLASSIFICATION	0.013409485984328185	TEST
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999977184063165	WITHOUT_CLASSIFICATION	2.2815936834925043E-6	TEST
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.99994199608279	WITHOUT_CLASSIFICATION	5.800391720993624E-5	TEST
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999672658534428	WITHOUT_CLASSIFICATION	3.2734146557183383E-5	TEST
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999672658534428	WITHOUT_CLASSIFICATION	3.2734146557183383E-5	TEST
// single precision, native	WITHOUT_CLASSIFICATION	0.999982753617051	WITHOUT_CLASSIFICATION	1.7246382948920845E-5	TEST
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999673101753663	WITHOUT_CLASSIFICATION	3.268982463373761E-5	TEST
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999661344510803	WITHOUT_CLASSIFICATION	3.3865548919666986E-5	TEST
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999661344510803	WITHOUT_CLASSIFICATION	3.3865548919666986E-5	TEST
// double precision, native	WITHOUT_CLASSIFICATION	0.9999821575144143	WITHOUT_CLASSIFICATION	1.7842485585682957E-5	TEST
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.99997820097152	WITHOUT_CLASSIFICATION	2.179902848002266E-5	TEST
// signed char	WITHOUT_CLASSIFICATION	0.9999910809469732	WITHOUT_CLASSIFICATION	8.91905302678807E-6	TEST
// unsigned char	WITHOUT_CLASSIFICATION	0.9999910675021164	WITHOUT_CLASSIFICATION	8.93249788362075E-6	TEST
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999781277717065	WITHOUT_CLASSIFICATION	2.1872228293521196E-5	TEST
// long, big-endian	WITHOUT_CLASSIFICATION	0.999990958002558	WITHOUT_CLASSIFICATION	9.041997441971178E-6	TEST
// unsigned int, native	WITHOUT_CLASSIFICATION	0.99997833143338	WITHOUT_CLASSIFICATION	2.166856662001899E-5	TEST
// int, native	WITHOUT_CLASSIFICATION	0.9999910421975341	WITHOUT_CLASSIFICATION	8.95780246587607E-6	TEST
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999586491040753	WITHOUT_CLASSIFICATION	4.1350895924635176E-5	TEST
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999472986734042	WITHOUT_CLASSIFICATION	5.270132659591288E-5	TEST
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999876354875736	WITHOUT_CLASSIFICATION	1.2364512426402223E-5	TEST
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9999696123556006	WITHOUT_CLASSIFICATION	3.0387644399450442E-5	TEST
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999781718659484	WITHOUT_CLASSIFICATION	2.182813405160444E-5	TEST
// obtain a	WITHOUT_CLASSIFICATION	0.9999939371120553	WITHOUT_CLASSIFICATION	6.062887944711128E-6	TEST
// obtain b	WITHOUT_CLASSIFICATION	0.9999912045233914	WITHOUT_CLASSIFICATION	8.795476608637583E-6	TEST
// obtain c	WITHOUT_CLASSIFICATION	0.9999921819112546	WITHOUT_CLASSIFICATION	7.818088745508382E-6	TEST
// obtain d	WITHOUT_CLASSIFICATION	0.9999909632244751	WITHOUT_CLASSIFICATION	9.03677552489155E-6	TEST
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9998235892660644	WITHOUT_CLASSIFICATION	1.7641073393563636E-4	TEST
/* 1 */	WITHOUT_CLASSIFICATION	0.9997237878557811	WITHOUT_CLASSIFICATION	2.7621214421894355E-4	TEST
/* 2 */	WITHOUT_CLASSIFICATION	0.9997544837318478	WITHOUT_CLASSIFICATION	2.455162681522119E-4	TEST
/* 3 */	WITHOUT_CLASSIFICATION	0.9992446022451438	WITHOUT_CLASSIFICATION	7.553977548563086E-4	TEST
/* 4 */	WITHOUT_CLASSIFICATION	0.9997369400168908	WITHOUT_CLASSIFICATION	2.6305998310919036E-4	TEST
/* 5 */	WITHOUT_CLASSIFICATION	0.9997096852459957	WITHOUT_CLASSIFICATION	2.9031475400432573E-4	TEST
/* 6 */	WITHOUT_CLASSIFICATION	0.999732527794694	WITHOUT_CLASSIFICATION	2.6747220530596953E-4	TEST
/* 7 */	WITHOUT_CLASSIFICATION	0.9997014147680282	WITHOUT_CLASSIFICATION	2.9858523197172755E-4	TEST
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999614611810815	WITHOUT_CLASSIFICATION	3.8538818918338736E-5	TEST
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999387252800412	WITHOUT_CLASSIFICATION	6.127471995867274E-5	TEST
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999982563831618	WITHOUT_CLASSIFICATION	1.7436168382451366E-6	TEST
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.8775489685387416	TEST	0.12245103146125837	WITHOUT_CLASSIFICATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999886671755305	WITHOUT_CLASSIFICATION	1.1332824469444674E-5	TEST
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999977038772466	WITHOUT_CLASSIFICATION	2.2961227534405136E-6	TEST
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999549638712224	WITHOUT_CLASSIFICATION	4.503612877766283E-5	TEST
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999753398866679	WITHOUT_CLASSIFICATION	2.46601133321182E-5	TEST
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999210002790344	WITHOUT_CLASSIFICATION	7.899972096552389E-5	TEST
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9997073178364734	WITHOUT_CLASSIFICATION	2.926821635266621E-4	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9995288586547243	WITHOUT_CLASSIFICATION	4.711413452757685E-4	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9995288586547243	WITHOUT_CLASSIFICATION	4.711413452757685E-4	TEST
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9993675720173352	WITHOUT_CLASSIFICATION	6.324279826648599E-4	TEST
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999951440698822	WITHOUT_CLASSIFICATION	4.855930117819811E-6	TEST
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9997073178364734	WITHOUT_CLASSIFICATION	2.926821635266621E-4	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9941492743094527	WITHOUT_CLASSIFICATION	0.005850725690547353	TEST
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9995433304605075	WITHOUT_CLASSIFICATION	4.566695394924801E-4	TEST
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.999833917625884	WITHOUT_CLASSIFICATION	1.6608237411590526E-4	TEST
// are we recursing?	WITHOUT_CLASSIFICATION	0.9999921346101235	WITHOUT_CLASSIFICATION	7.865389876423333E-6	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.999987740457939	WITHOUT_CLASSIFICATION	1.2259542060991338E-5	TEST
// default PidGetter	WITHOUT_CLASSIFICATION	0.999995257481682	WITHOUT_CLASSIFICATION	4.742518318009931E-6	TEST
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999943113063192	WITHOUT_CLASSIFICATION	5.688693680819037E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999983115041536	WITHOUT_CLASSIFICATION	1.688495846312708E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999983115041536	WITHOUT_CLASSIFICATION	1.688495846312708E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999983115041536	WITHOUT_CLASSIFICATION	1.688495846312708E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999983115041536	WITHOUT_CLASSIFICATION	1.688495846312708E-6	TEST
// try both	WITHOUT_CLASSIFICATION	0.9999922946601937	WITHOUT_CLASSIFICATION	7.705339806314675E-6	TEST
// just unix	WITHOUT_CLASSIFICATION	0.9999962517450666	WITHOUT_CLASSIFICATION	3.748254933447847E-6	TEST
// just windows	WITHOUT_CLASSIFICATION	0.9999977446721271	WITHOUT_CLASSIFICATION	2.2553278728959806E-6	TEST
// neither	WITHOUT_CLASSIFICATION	0.999876023733454	WITHOUT_CLASSIFICATION	1.239762665461024E-4	TEST
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.99988068100614	WITHOUT_CLASSIFICATION	1.1931899386002694E-4	TEST
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999751167397434	WITHOUT_CLASSIFICATION	2.488326025658281E-5	TEST
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999913710273166	WITHOUT_CLASSIFICATION	8.628972683332097E-6	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999964048580241	WITHOUT_CLASSIFICATION	3.595141975864426E-6	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999964048580241	WITHOUT_CLASSIFICATION	3.595141975864426E-6	TEST
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999969769641148	WITHOUT_CLASSIFICATION	3.023035885147609E-6	TEST
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.999962359216895	WITHOUT_CLASSIFICATION	3.7640783104850875E-5	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9990692799716057	WITHOUT_CLASSIFICATION	9.307200283942497E-4	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999951756670776	WITHOUT_CLASSIFICATION	4.824332922333218E-6	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999951756670776	WITHOUT_CLASSIFICATION	4.824332922333218E-6	TEST
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999951399667122	WITHOUT_CLASSIFICATION	4.860033287723905E-6	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999980208774489	WITHOUT_CLASSIFICATION	1.9791225510658276E-6	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999980208774489	WITHOUT_CLASSIFICATION	1.9791225510658276E-6	TEST
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9991157993837319	WITHOUT_CLASSIFICATION	8.842006162680878E-4	TEST
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999976110744032	WITHOUT_CLASSIFICATION	2.3889255968773442E-6	TEST
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999994286266125	WITHOUT_CLASSIFICATION	5.71373387515202E-7	TEST
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.999746588326757	WITHOUT_CLASSIFICATION	2.534116732430206E-4	TEST
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999807296800561	WITHOUT_CLASSIFICATION	1.927031994385486E-5	TEST
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999992432821456	WITHOUT_CLASSIFICATION	7.567178543528975E-7	TEST
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9999070560571182	WITHOUT_CLASSIFICATION	9.294394288177371E-5	TEST
//sequential	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999943690913198	WITHOUT_CLASSIFICATION	5.6309086802582535E-6	TEST
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999796853886097	WITHOUT_CLASSIFICATION	2.0314611390321812E-5	TEST
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.999959912730135	WITHOUT_CLASSIFICATION	4.0087269865030195E-5	TEST
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9085462495198782	WITHOUT_CLASSIFICATION	0.09145375048012185	TEST
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9158906817848889	WITHOUT_CLASSIFICATION	0.08410931821511113	TEST
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999965793412885	WITHOUT_CLASSIFICATION	3.4206587115246094E-6	TEST
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999851048860875	WITHOUT_CLASSIFICATION	1.4895113912417043E-5	TEST
// Args	WITHOUT_CLASSIFICATION	0.9998761066990476	WITHOUT_CLASSIFICATION	1.238933009525347E-4	TEST
// static methods only	WITHOUT_CLASSIFICATION	0.9999818933959019	WITHOUT_CLASSIFICATION	1.8106604098074867E-5	TEST
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9995413615840341	WITHOUT_CLASSIFICATION	4.586384159659533E-4	TEST
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999961959958836	WITHOUT_CLASSIFICATION	3.80400411624088E-6	TEST
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999536926803646	WITHOUT_CLASSIFICATION	4.630731963540379E-5	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999960671808594	WITHOUT_CLASSIFICATION	3.93281914052841E-6	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999949635072474	WITHOUT_CLASSIFICATION	5.0364927526335865E-6	TEST
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.999836263059915	WITHOUT_CLASSIFICATION	1.6373694008501734E-4	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999911570064522	WITHOUT_CLASSIFICATION	8.842993547797497E-6	TEST
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9997434067120359	WITHOUT_CLASSIFICATION	2.5659328796419063E-4	TEST
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.999999195313445	WITHOUT_CLASSIFICATION	8.046865549835839E-7	TEST
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999540427383791	WITHOUT_CLASSIFICATION	4.595726162103241E-5	TEST
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999991474998977	WITHOUT_CLASSIFICATION	8.525001022396916E-7	TEST
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999109880646119	WITHOUT_CLASSIFICATION	8.901193538812138E-5	TEST
// ..	WITHOUT_CLASSIFICATION	0.9998765196255133	WITHOUT_CLASSIFICATION	1.2348037448671858E-4	TEST
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999565326566419	WITHOUT_CLASSIFICATION	4.34673433580608E-5	TEST
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9998907179083121	WITHOUT_CLASSIFICATION	1.092820916880233E-4	TEST
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999726370214638	WITHOUT_CLASSIFICATION	2.736297853616317E-5	TEST
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999992706944424	WITHOUT_CLASSIFICATION	7.293055575207887E-7	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9995357523074897	WITHOUT_CLASSIFICATION	4.642476925103551E-4	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999903027569088	WITHOUT_CLASSIFICATION	9.697243091161772E-6	TEST
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9995413615840341	WITHOUT_CLASSIFICATION	4.586384159659533E-4	TEST
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9995462329401442	WITHOUT_CLASSIFICATION	4.5376705985581957E-4	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9995357523074897	WITHOUT_CLASSIFICATION	4.642476925103551E-4	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999903027569088	WITHOUT_CLASSIFICATION	9.697243091161772E-6	TEST
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999433177737954	WITHOUT_CLASSIFICATION	5.668222620454986E-5	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9998113321182137	WITHOUT_CLASSIFICATION	1.8866788178625903E-4	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9998113321182137	WITHOUT_CLASSIFICATION	1.8866788178625903E-4	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999467159721384	WITHOUT_CLASSIFICATION	5.328402786162582E-5	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999872217913128	WITHOUT_CLASSIFICATION	1.277820868717169E-5	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999888448999515	WITHOUT_CLASSIFICATION	1.1155100048399433E-5	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999958215412651	WITHOUT_CLASSIFICATION	4.178458734967058E-6	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9998409432469387	WITHOUT_CLASSIFICATION	1.590567530612113E-4	TEST
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999497561360221	WITHOUT_CLASSIFICATION	5.02438639779321E-5	TEST
// '.' is printed	WITHOUT_CLASSIFICATION	0.999979555453284	WITHOUT_CLASSIFICATION	2.0444546715969587E-5	TEST
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999748011246152	WITHOUT_CLASSIFICATION	2.5198875384696454E-5	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999348169320624	WITHOUT_CLASSIFICATION	6.51830679374702E-5	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9998764472420829	WITHOUT_CLASSIFICATION	1.2355275791701086E-4	TEST
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999138981667659	WITHOUT_CLASSIFICATION	8.610183323411653E-5	TEST
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999796422359167	WITHOUT_CLASSIFICATION	2.0357764083232142E-5	TEST
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999863346723782	WITHOUT_CLASSIFICATION	1.3665327621752375E-5	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999644158656392	WITHOUT_CLASSIFICATION	3.558413436073181E-5	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999644158656392	WITHOUT_CLASSIFICATION	3.558413436073181E-5	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9998738601270896	WITHOUT_CLASSIFICATION	1.2613987291045328E-4	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9998738601270896	WITHOUT_CLASSIFICATION	1.2613987291045328E-4	TEST
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999785426604622	WITHOUT_CLASSIFICATION	2.145733953790103E-5	TEST
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999930740322004	WITHOUT_CLASSIFICATION	6.92596779961766E-6	TEST
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999573033763922	WITHOUT_CLASSIFICATION	4.2696623607734556E-5	TEST
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9995413615840341	WITHOUT_CLASSIFICATION	4.586384159659533E-4	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999888448999515	WITHOUT_CLASSIFICATION	1.1155100048399433E-5	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999958215412651	WITHOUT_CLASSIFICATION	4.178458734967058E-6	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999348169320624	WITHOUT_CLASSIFICATION	6.51830679374702E-5	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9998764472420829	WITHOUT_CLASSIFICATION	1.2355275791701086E-4	TEST
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999874229896811	WITHOUT_CLASSIFICATION	1.2577010318743591E-5	TEST
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999948801634319	WITHOUT_CLASSIFICATION	5.119836568154358E-6	TEST
// \v	WITHOUT_CLASSIFICATION	0.9998760203152212	WITHOUT_CLASSIFICATION	1.2397968477886542E-4	TEST
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999910675021164	WITHOUT_CLASSIFICATION	8.93249788362075E-6	TEST
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999739201046641	WITHOUT_CLASSIFICATION	2.6079895335879203E-5	TEST
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9998905438541824	WITHOUT_CLASSIFICATION	1.094561458175666E-4	TEST
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9996182893123864	WITHOUT_CLASSIFICATION	3.817106876136463E-4	TEST
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999909743940802	WITHOUT_CLASSIFICATION	9.025605919761769E-6	TEST
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999953074449318	WITHOUT_CLASSIFICATION	4.6925550681277925E-6	TEST
// negative values	WITHOUT_CLASSIFICATION	0.999993521433322	WITHOUT_CLASSIFICATION	6.478566678020626E-6	TEST
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999979681999088	WITHOUT_CLASSIFICATION	2.0318000912064433E-6	TEST
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9978581030573329	WITHOUT_CLASSIFICATION	0.002141896942667132	TEST
// no such luck...	WITHOUT_CLASSIFICATION	0.9999953383770991	WITHOUT_CLASSIFICATION	4.6616229009485905E-6	TEST
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9997547139247344	WITHOUT_CLASSIFICATION	2.452860752656733E-4	TEST
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999926108290786	WITHOUT_CLASSIFICATION	7.389170921260126E-6	TEST
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999882025420285	WITHOUT_CLASSIFICATION	1.1797457971510211E-5	TEST
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999646612669211	WITHOUT_CLASSIFICATION	3.5338733078880924E-5	TEST
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999076563081163	WITHOUT_CLASSIFICATION	9.234369188366716E-5	TEST
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999523739613047	WITHOUT_CLASSIFICATION	4.7626038695249636E-5	TEST
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999781247058505	WITHOUT_CLASSIFICATION	2.1875294149594788E-5	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999781247058505	WITHOUT_CLASSIFICATION	2.1875294149594788E-5	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999781247058505	WITHOUT_CLASSIFICATION	2.1875294149594788E-5	TEST
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9997977462806845	WITHOUT_CLASSIFICATION	2.0225371931552682E-4	TEST
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999779104727781	WITHOUT_CLASSIFICATION	2.208952722186532E-5	TEST
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999996580540332	WITHOUT_CLASSIFICATION	3.419459667629399E-7	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9995436965989665	WITHOUT_CLASSIFICATION	4.56303401033642E-4	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9995436965989665	WITHOUT_CLASSIFICATION	4.56303401033642E-4	TEST
// \v	WITHOUT_CLASSIFICATION	0.9998760203152212	WITHOUT_CLASSIFICATION	1.2397968477886542E-4	TEST
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9994458700358531	WITHOUT_CLASSIFICATION	5.541299641469029E-4	TEST
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9995413615840341	WITHOUT_CLASSIFICATION	4.586384159659533E-4	TEST
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9995413615840341	WITHOUT_CLASSIFICATION	4.586384159659533E-4	TEST
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9995413615840341	WITHOUT_CLASSIFICATION	4.586384159659533E-4	TEST
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9995413615840341	WITHOUT_CLASSIFICATION	4.586384159659533E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9995413615840341	WITHOUT_CLASSIFICATION	4.586384159659533E-4	TEST
// no number	WITHOUT_CLASSIFICATION	0.9999951800603639	WITHOUT_CLASSIFICATION	4.819939636020016E-6	TEST
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999929526351803	WITHOUT_CLASSIFICATION	7.047364819803467E-6	TEST
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9982642719009803	WITHOUT_CLASSIFICATION	0.0017357280990196802	TEST
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9998753035939808	WITHOUT_CLASSIFICATION	1.2469640601921018E-4	TEST
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.999998087486902	WITHOUT_CLASSIFICATION	1.9125130980408018E-6	TEST
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999969378179125	WITHOUT_CLASSIFICATION	3.0621820874240645E-6	TEST
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999922405705407	WITHOUT_CLASSIFICATION	7.759429459325845E-6	TEST
// we reached the end	WITHOUT_CLASSIFICATION	0.9999933319907858	WITHOUT_CLASSIFICATION	6.6680092142552704E-6	TEST
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999752074043083	WITHOUT_CLASSIFICATION	2.479259569173606E-5	TEST
// states	WITHOUT_CLASSIFICATION	0.9998871599789255	WITHOUT_CLASSIFICATION	1.1284002107449862E-4	TEST
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999386892412955	WITHOUT_CLASSIFICATION	6.131075870452405E-5	TEST
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999958423746842	WITHOUT_CLASSIFICATION	4.157625315773871E-6	TEST
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999996974797734	WITHOUT_CLASSIFICATION	3.0252022660670054E-7	TEST
// drop through for sign	WITHOUT_CLASSIFICATION	0.999974908268627	WITHOUT_CLASSIFICATION	2.5091731373003807E-5	TEST
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999880280745864	WITHOUT_CLASSIFICATION	1.1971925413566557E-5	TEST
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999524247622066	WITHOUT_CLASSIFICATION	4.7575237793491696E-5	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999873917654397	WITHOUT_CLASSIFICATION	1.2608234560202055E-5	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999699400102104	WITHOUT_CLASSIFICATION	3.0059989789511428E-5	TEST
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999879733340611	WITHOUT_CLASSIFICATION	1.202666593893369E-5	TEST
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999840521875126	WITHOUT_CLASSIFICATION	1.5947812487398085E-5	TEST
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999499445211	WITHOUT_CLASSIFICATION	5.005547896084351E-8	TEST
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999976102486583	WITHOUT_CLASSIFICATION	2.3897513416210822E-6	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999181734758191	WITHOUT_CLASSIFICATION	8.182652418095401E-5	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999181734758191	WITHOUT_CLASSIFICATION	8.182652418095401E-5	TEST
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999663748084522	WITHOUT_CLASSIFICATION	3.362519154777709E-5	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999931990409006	WITHOUT_CLASSIFICATION	6.800959099392307E-6	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999931990409006	WITHOUT_CLASSIFICATION	6.800959099392307E-6	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999965440717228	WITHOUT_CLASSIFICATION	3.4559282772202436E-6	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999965440717228	WITHOUT_CLASSIFICATION	3.4559282772202436E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999873924789328	WITHOUT_CLASSIFICATION	1.260752106720481E-5	TEST
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999865418975077	WITHOUT_CLASSIFICATION	1.3458102492326516E-5	TEST
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999982183223493	WITHOUT_CLASSIFICATION	1.7816776507944803E-6	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999906247213193	WITHOUT_CLASSIFICATION	9.37527868067739E-6	TEST
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999894891604174	WITHOUT_CLASSIFICATION	1.0510839582604653E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9998785193326936	WITHOUT_CLASSIFICATION	1.2148066730638023E-4	TEST
// block	WITHOUT_CLASSIFICATION	0.9998785193326936	WITHOUT_CLASSIFICATION	1.2148066730638023E-4	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999873917654397	WITHOUT_CLASSIFICATION	1.2608234560202055E-5	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999873917654397	WITHOUT_CLASSIFICATION	1.2608234560202055E-5	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999873917654397	WITHOUT_CLASSIFICATION	1.2608234560202055E-5	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999699400102104	WITHOUT_CLASSIFICATION	3.0059989789511428E-5	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999181734758191	WITHOUT_CLASSIFICATION	8.182652418095401E-5	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999181734758191	WITHOUT_CLASSIFICATION	8.182652418095401E-5	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999181734758191	WITHOUT_CLASSIFICATION	8.182652418095401E-5	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999873924789328	WITHOUT_CLASSIFICATION	1.260752106720481E-5	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999873924789328	WITHOUT_CLASSIFICATION	1.260752106720481E-5	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999873924789328	WITHOUT_CLASSIFICATION	1.260752106720481E-5	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999906247213193	WITHOUT_CLASSIFICATION	9.37527868067739E-6	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999906247213193	WITHOUT_CLASSIFICATION	9.37527868067739E-6	TEST
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999924182050275	WITHOUT_CLASSIFICATION	7.581794972507385E-6	TEST
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999613813652598	WITHOUT_CLASSIFICATION	3.8618634740309055E-5	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999828949822763	WITHOUT_CLASSIFICATION	1.7105017723722466E-5	TEST
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9989481990774657	WITHOUT_CLASSIFICATION	0.0010518009225342693	TEST
// no digits, error	WITHOUT_CLASSIFICATION	0.9999977752057694	WITHOUT_CLASSIFICATION	2.2247942305744674E-6	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999906558926395	WITHOUT_CLASSIFICATION	9.344107360484678E-6	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999906558926395	WITHOUT_CLASSIFICATION	9.344107360484678E-6	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999728767773046	WITHOUT_CLASSIFICATION	2.7123222695424504E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
//switch	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
//switch	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
//switch	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
//switch	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999624279387784	WITHOUT_CLASSIFICATION	3.7572061221598265E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999624279387784	WITHOUT_CLASSIFICATION	3.7572061221598265E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999624279387784	WITHOUT_CLASSIFICATION	3.7572061221598265E-5	TEST
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999928998860312	WITHOUT_CLASSIFICATION	7.1001139687335024E-6	TEST
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999877823967233	WITHOUT_CLASSIFICATION	1.221760327687481E-5	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999699400102104	WITHOUT_CLASSIFICATION	3.0059989789511428E-5	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999873924789328	WITHOUT_CLASSIFICATION	1.260752106720481E-5	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999873924789328	WITHOUT_CLASSIFICATION	1.260752106720481E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
//switch	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999624279387784	WITHOUT_CLASSIFICATION	3.7572061221598265E-5	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999728767773046	WITHOUT_CLASSIFICATION	2.7123222695424504E-5	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999463014389178	WITHOUT_CLASSIFICATION	5.3698561082289225E-5	TEST
// switch //while	WITHOUT_CLASSIFICATION	0.9999910071398814	WITHOUT_CLASSIFICATION	8.99286011854762E-6	TEST
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999993019942278	WITHOUT_CLASSIFICATION	6.980057721405556E-7	TEST
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999967452287511	WITHOUT_CLASSIFICATION	3.254771248812145E-6	TEST
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999781247058505	WITHOUT_CLASSIFICATION	2.1875294149594788E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9998136322309217	WITHOUT_CLASSIFICATION	1.8636776907830693E-4	TEST
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999881070178057	WITHOUT_CLASSIFICATION	1.1892982194161842E-5	TEST
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999781247058505	WITHOUT_CLASSIFICATION	2.1875294149594788E-5	TEST
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.99993195286902	WITHOUT_CLASSIFICATION	6.804713097999247E-5	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999970567980628	WITHOUT_CLASSIFICATION	2.9432019372208386E-6	TEST
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999558968617949	WITHOUT_CLASSIFICATION	4.4103138205160926E-5	TEST
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9998727904016836	WITHOUT_CLASSIFICATION	1.2720959831635038E-4	TEST
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999662446499095	WITHOUT_CLASSIFICATION	3.375535009055873E-5	TEST
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999826277654928	WITHOUT_CLASSIFICATION	1.737223450713929E-5	TEST
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999974046863986	WITHOUT_CLASSIFICATION	2.59531360137404E-6	TEST
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999964971833825	WITHOUT_CLASSIFICATION	3.502816617466648E-6	TEST
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9988106440365488	WITHOUT_CLASSIFICATION	0.00118935596345114	TEST
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9997075820215736	WITHOUT_CLASSIFICATION	2.924179784264227E-4	TEST
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999954391601846	WITHOUT_CLASSIFICATION	4.560839815395691E-6	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.999820672250366	WITHOUT_CLASSIFICATION	1.79327749634074E-4	TEST
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9998230082348925	WITHOUT_CLASSIFICATION	1.7699176510762375E-4	TEST
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999807195934817	WITHOUT_CLASSIFICATION	1.9280406518321787E-5	TEST
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999983319902036	WITHOUT_CLASSIFICATION	1.6680097964010215E-6	TEST
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999592581804726	WITHOUT_CLASSIFICATION	4.074181952751306E-5	TEST
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9992733313449178	WITHOUT_CLASSIFICATION	7.26668655082259E-4	TEST
// unread back	WITHOUT_CLASSIFICATION	0.9999912306223002	WITHOUT_CLASSIFICATION	8.769377699796405E-6	TEST
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999925113680364	WITHOUT_CLASSIFICATION	7.488631963660952E-6	TEST
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.999994749731074	WITHOUT_CLASSIFICATION	5.250268925925334E-6	TEST
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.999993146466347	WITHOUT_CLASSIFICATION	6.853533652981655E-6	TEST
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999982652014585	WITHOUT_CLASSIFICATION	1.7347985414456746E-6	TEST
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999992034346121	WITHOUT_CLASSIFICATION	7.965653879998822E-7	TEST
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999781461712279	WITHOUT_CLASSIFICATION	2.185382877206759E-5	TEST
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.999996950320246	WITHOUT_CLASSIFICATION	3.0496797538362662E-6	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999463014389178	WITHOUT_CLASSIFICATION	5.3698561082289225E-5	TEST
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999944967294742	WITHOUT_CLASSIFICATION	5.503270525872647E-6	TEST
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999726916833773	WITHOUT_CLASSIFICATION	2.7308316622703367E-5	TEST
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9998150933110067	WITHOUT_CLASSIFICATION	1.8490668899328366E-4	TEST
// silence	WITHOUT_CLASSIFICATION	0.9998760203152212	WITHOUT_CLASSIFICATION	1.2397968477886542E-4	TEST
// silence	WITHOUT_CLASSIFICATION	0.9998760203152212	WITHOUT_CLASSIFICATION	1.2397968477886542E-4	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.99999313079432	WITHOUT_CLASSIFICATION	6.869205680002969E-6	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.99999313079432	WITHOUT_CLASSIFICATION	6.869205680002969E-6	TEST
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999552478989452	WITHOUT_CLASSIFICATION	4.4752101054801274E-5	TEST
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9998319733192854	WITHOUT_CLASSIFICATION	1.68026680714577E-4	TEST
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999839810794586	WITHOUT_CLASSIFICATION	1.601892054138533E-5	TEST
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999279567026899	WITHOUT_CLASSIFICATION	7.204329731018597E-5	TEST
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999549478985595	WITHOUT_CLASSIFICATION	4.505210144053344E-5	TEST
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999885142037019	WITHOUT_CLASSIFICATION	1.1485796298005247E-5	TEST
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999941274788969	WITHOUT_CLASSIFICATION	5.872521103170804E-6	TEST
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.999996216810336	WITHOUT_CLASSIFICATION	3.7831896640900835E-6	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.999999629682944	WITHOUT_CLASSIFICATION	3.703170560145219E-7	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999494444414679	WITHOUT_CLASSIFICATION	5.055555853212671E-5	TEST
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999824866537911	WITHOUT_CLASSIFICATION	1.751334620892223E-5	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999862578319569	WITHOUT_CLASSIFICATION	1.3742168042971885E-5	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999862578319569	WITHOUT_CLASSIFICATION	1.3742168042971885E-5	TEST
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999658980608744	WITHOUT_CLASSIFICATION	3.410193912553681E-5	TEST
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.999991728754796	WITHOUT_CLASSIFICATION	8.271245203946212E-6	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.999971423286943	WITHOUT_CLASSIFICATION	2.8576713056935135E-5	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.999971423286943	WITHOUT_CLASSIFICATION	2.8576713056935135E-5	TEST
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999891785427851	WITHOUT_CLASSIFICATION	1.082145721480034E-5	TEST
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999928118120063	WITHOUT_CLASSIFICATION	7.188187993683161E-6	TEST
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999670910015596	WITHOUT_CLASSIFICATION	3.2908998440441175E-5	TEST
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999756842281334	WITHOUT_CLASSIFICATION	2.4315771866604995E-5	TEST
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.99998367799219	WITHOUT_CLASSIFICATION	1.632200780997249E-5	TEST
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9998918238203053	WITHOUT_CLASSIFICATION	1.0817617969466971E-4	TEST
// save the ungot	WITHOUT_CLASSIFICATION	0.9999973880407727	WITHOUT_CLASSIFICATION	2.6119592273852058E-6	TEST
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999898012391111	WITHOUT_CLASSIFICATION	1.0198760889008072E-5	TEST
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999768278536285	WITHOUT_CLASSIFICATION	2.3172146371544115E-5	TEST
// flush first	WITHOUT_CLASSIFICATION	0.9999940583345045	WITHOUT_CLASSIFICATION	5.941665495440987E-6	TEST
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999484387876139	WITHOUT_CLASSIFICATION	5.156121238614698E-5	TEST
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999092890410733	WITHOUT_CLASSIFICATION	9.0710958926693E-5	TEST
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.999985466118077	WITHOUT_CLASSIFICATION	1.4533881922896135E-5	TEST
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999264739551754	WITHOUT_CLASSIFICATION	7.352604482451721E-5	TEST
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999906300902337	WITHOUT_CLASSIFICATION	9.369909766303267E-6	TEST
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9998305005074692	WITHOUT_CLASSIFICATION	1.694994925306377E-4	TEST
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999891855678187	WITHOUT_CLASSIFICATION	1.081443218132263E-5	TEST
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999892610244384	WITHOUT_CLASSIFICATION	1.0738975561651733E-5	TEST
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999067083568082	WITHOUT_CLASSIFICATION	9.329164319181854E-5	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.999927705284835	WITHOUT_CLASSIFICATION	7.229471516498104E-5	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9706330014928228	WITHOUT_CLASSIFICATION	0.029366998507177115	TEST
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999788074850919	WITHOUT_CLASSIFICATION	2.119251490804945E-5	TEST
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999811911739624	WITHOUT_CLASSIFICATION	1.8808826037547134E-5	TEST
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999787741516047	WITHOUT_CLASSIFICATION	2.122584839531403E-5	TEST
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999901762498926	WITHOUT_CLASSIFICATION	9.823750107399706E-6	TEST
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999960070486982	WITHOUT_CLASSIFICATION	3.992951301862337E-6	TEST
// else leave it null	WITHOUT_CLASSIFICATION	0.9999642336312092	WITHOUT_CLASSIFICATION	3.57663687908295E-5	TEST
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999725611204916	WITHOUT_CLASSIFICATION	2.743887950839538E-5	TEST
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999866446336303	WITHOUT_CLASSIFICATION	1.3355366369763698E-5	TEST
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999886768402444	WITHOUT_CLASSIFICATION	1.1323159755669154E-5	TEST
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999965174762698	WITHOUT_CLASSIFICATION	3.482523730077251E-6	TEST
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999941902050522	WITHOUT_CLASSIFICATION	5.809794947729586E-6	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999984823000385	WITHOUT_CLASSIFICATION	1.5176999615287214E-6	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999984823000385	WITHOUT_CLASSIFICATION	1.5176999615287214E-6	TEST
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999958641220983	WITHOUT_CLASSIFICATION	4.135877901716895E-6	TEST
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.999999786134893	WITHOUT_CLASSIFICATION	2.13865107057071E-7	TEST
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9995164993271661	WITHOUT_CLASSIFICATION	4.8350067283386543E-4	TEST
// Init	WITHOUT_CLASSIFICATION	0.9998770804807561	WITHOUT_CLASSIFICATION	1.2291951924388103E-4	TEST
// Block	WITHOUT_CLASSIFICATION	0.9998760291189391	WITHOUT_CLASSIFICATION	1.239708810609145E-4	TEST
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999909971800056	WITHOUT_CLASSIFICATION	9.002819994409973E-6	TEST
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9992217020420735	WITHOUT_CLASSIFICATION	7.782979579265607E-4	TEST
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9992217020420735	WITHOUT_CLASSIFICATION	7.782979579265607E-4	TEST
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9995813782556972	WITHOUT_CLASSIFICATION	4.1862174430294045E-4	TEST
// ok	WITHOUT_CLASSIFICATION	0.9998904612879014	WITHOUT_CLASSIFICATION	1.0953871209855095E-4	TEST
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999882475946376	WITHOUT_CLASSIFICATION	1.1752405362439459E-5	TEST
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9997402550453647	WITHOUT_CLASSIFICATION	2.5974495463538177E-4	TEST
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9998930738015823	WITHOUT_CLASSIFICATION	1.0692619841774878E-4	TEST
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9994608373493888	WITHOUT_CLASSIFICATION	5.391626506111741E-4	TEST
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999976249012151	WITHOUT_CLASSIFICATION	2.375098784857823E-6	TEST
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999929944503465	WITHOUT_CLASSIFICATION	7.005549653483263E-6	TEST
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.999723252015302	WITHOUT_CLASSIFICATION	2.7674798469799294E-4	TEST
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999739904498188	WITHOUT_CLASSIFICATION	2.600955018120893E-5	TEST
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9999958563443114	WITHOUT_CLASSIFICATION	4.143655688572054E-6	TEST
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.999970672976381	WITHOUT_CLASSIFICATION	2.932702361895734E-5	TEST
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999900046510133	WITHOUT_CLASSIFICATION	9.99534898679148E-6	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999932723790934	WITHOUT_CLASSIFICATION	6.7276209065793595E-6	TEST
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999613013888302	WITHOUT_CLASSIFICATION	3.869861116978307E-5	TEST
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999430945397949	WITHOUT_CLASSIFICATION	5.690546020504841E-5	TEST
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999049999904432	WITHOUT_CLASSIFICATION	9.500000955674394E-5	TEST
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999751129010679	WITHOUT_CLASSIFICATION	2.4887098932195543E-5	TEST
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999834690543753	WITHOUT_CLASSIFICATION	1.6530945624783426E-5	TEST
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999626456458494	WITHOUT_CLASSIFICATION	3.735435415068075E-5	TEST
// void methods should work	WITHOUT_CLASSIFICATION	0.9999749915166443	WITHOUT_CLASSIFICATION	2.5008483355746272E-5	TEST
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999803863749713	WITHOUT_CLASSIFICATION	1.961362502863647E-5	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9998946278684342	WITHOUT_CLASSIFICATION	1.0537213156584233E-4	TEST
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999434938080287	WITHOUT_CLASSIFICATION	5.650619197129249E-5	TEST
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999916797295084	WITHOUT_CLASSIFICATION	8.32027049157817E-6	TEST
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999585364323899	WITHOUT_CLASSIFICATION	4.146356761012515E-5	TEST
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999919790585086	WITHOUT_CLASSIFICATION	8.020941491541629E-6	TEST
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.99910926321305	WITHOUT_CLASSIFICATION	8.907367869500353E-4	TEST
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9997075820215736	WITHOUT_CLASSIFICATION	2.924179784264227E-4	TEST
// value equality	WITHOUT_CLASSIFICATION	0.999993466604029	WITHOUT_CLASSIFICATION	6.533395971023911E-6	TEST
// identity equality	WITHOUT_CLASSIFICATION	0.9999915028650603	WITHOUT_CLASSIFICATION	8.497134939687901E-6	TEST
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.999958588696368	WITHOUT_CLASSIFICATION	4.1411303632064424E-5	TEST
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999909706308677	WITHOUT_CLASSIFICATION	9.029369132277836E-6	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999781247058505	WITHOUT_CLASSIFICATION	2.1875294149594788E-5	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999781247058505	WITHOUT_CLASSIFICATION	2.1875294149594788E-5	TEST
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999781247058505	WITHOUT_CLASSIFICATION	2.1875294149594788E-5	TEST
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999320062994003	WITHOUT_CLASSIFICATION	6.79937005997212E-5	TEST
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999909605544042	WITHOUT_CLASSIFICATION	9.039445595882257E-6	TEST
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999652540717541	WITHOUT_CLASSIFICATION	3.474592824596778E-5	TEST
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999236784746008	WITHOUT_CLASSIFICATION	7.632152539911666E-5	TEST
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999833709216991	WITHOUT_CLASSIFICATION	1.6629078300941566E-5	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999977978099974	WITHOUT_CLASSIFICATION	2.2021900026455245E-6	TEST
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999940663782657	WITHOUT_CLASSIFICATION	5.933621734301958E-6	TEST
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999674719553667	WITHOUT_CLASSIFICATION	3.252804463329955E-5	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999998353143421	WITHOUT_CLASSIFICATION	1.6468565784272705E-7	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9994458700358531	WITHOUT_CLASSIFICATION	5.541299641469029E-4	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999777488293439	WITHOUT_CLASSIFICATION	2.2251170656108803E-5	TEST
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999288887197477	WITHOUT_CLASSIFICATION	7.111128025219114E-5	TEST
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999973791179655	WITHOUT_CLASSIFICATION	2.6208820344684876E-6	TEST
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999963203134236	WITHOUT_CLASSIFICATION	3.6796865765665114E-6	TEST
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9998842276993039	WITHOUT_CLASSIFICATION	1.1577230069627119E-4	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.999999623462944	WITHOUT_CLASSIFICATION	3.765370560021447E-7	TEST
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9997075820215736	WITHOUT_CLASSIFICATION	2.924179784264227E-4	TEST
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999934707729432	WITHOUT_CLASSIFICATION	6.529227056726191E-6	TEST
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9997774213715693	WITHOUT_CLASSIFICATION	2.2257862843075738E-4	TEST
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999817783408186	WITHOUT_CLASSIFICATION	1.8221659181469802E-5	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9998916026659599	WITHOUT_CLASSIFICATION	1.083973340400422E-4	TEST
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999998493605267	WITHOUT_CLASSIFICATION	1.506394732168971E-7	TEST
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999981120403748	WITHOUT_CLASSIFICATION	1.8879596251993343E-6	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999548623657976	WITHOUT_CLASSIFICATION	4.5137634202353805E-5	TEST
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999731146336495	WITHOUT_CLASSIFICATION	2.6885366350493908E-5	TEST
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9997676907600083	WITHOUT_CLASSIFICATION	2.3230923999182696E-4	TEST
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999930155784217	WITHOUT_CLASSIFICATION	6.984421578302714E-6	TEST
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.999970452315757	WITHOUT_CLASSIFICATION	2.9547684242989007E-5	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999800200843398	WITHOUT_CLASSIFICATION	1.997991566021563E-5	TEST
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.999970452315757	WITHOUT_CLASSIFICATION	2.9547684242989007E-5	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999972080381396	WITHOUT_CLASSIFICATION	2.7919618603426496E-6	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999800200843398	WITHOUT_CLASSIFICATION	1.997991566021563E-5	TEST
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9995599728757132	WITHOUT_CLASSIFICATION	4.4002712428679E-4	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999911570064522	WITHOUT_CLASSIFICATION	8.842993547797497E-6	TEST
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9998891112956402	WITHOUT_CLASSIFICATION	1.1088870435979025E-4	TEST
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9527145312019675	WITHOUT_CLASSIFICATION	0.047285468798032505	TEST
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.999990392555043	WITHOUT_CLASSIFICATION	9.607444957072367E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999895177214811	WITHOUT_CLASSIFICATION	1.0482278518894114E-5	TEST
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999589340230292	WITHOUT_CLASSIFICATION	4.106597697090791E-5	TEST
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9981098514972221	WITHOUT_CLASSIFICATION	0.001890148502777896	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999872217913128	WITHOUT_CLASSIFICATION	1.277820868717169E-5	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.999927705284835	WITHOUT_CLASSIFICATION	7.229471516498104E-5	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999828949822763	WITHOUT_CLASSIFICATION	1.7105017723722466E-5	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999975108186272	WITHOUT_CLASSIFICATION	2.489181372714981E-6	TEST
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999964014690089	WITHOUT_CLASSIFICATION	3.5985309909824717E-6	TEST
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999906430296942	WITHOUT_CLASSIFICATION	9.356970305725128E-6	TEST
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999585954744858	WITHOUT_CLASSIFICATION	4.140452551414198E-5	TEST
// switch // while	WITHOUT_CLASSIFICATION	0.9999914534325016	WITHOUT_CLASSIFICATION	8.54656749849038E-6	TEST
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9992456700128638	WITHOUT_CLASSIFICATION	7.543299871361151E-4	TEST
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999904845165172	WITHOUT_CLASSIFICATION	9.515483482763104E-6	TEST
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999987187979984	WITHOUT_CLASSIFICATION	1.2812020015559711E-6	TEST
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999714623029831	WITHOUT_CLASSIFICATION	2.853769701697505E-5	TEST
// expected	WITHOUT_CLASSIFICATION	0.9999919194594625	WITHOUT_CLASSIFICATION	8.080540537509638E-6	TEST
// Do nothing	WITHOUT_CLASSIFICATION	0.9999924415499201	WITHOUT_CLASSIFICATION	7.558450079984821E-6	TEST
// constructor	WITHOUT_CLASSIFICATION	0.9999909510484473	WITHOUT_CLASSIFICATION	9.048951552797612E-6	TEST
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9998956631160308	WITHOUT_CLASSIFICATION	1.0433688396923503E-4	TEST
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999720457171791	WITHOUT_CLASSIFICATION	2.795428282085745E-5	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9998958075174691	WITHOUT_CLASSIFICATION	1.0419248253085713E-4	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.999907573761146	WITHOUT_CLASSIFICATION	9.242623885391446E-5	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999971359648354	WITHOUT_CLASSIFICATION	2.864035164536834E-6	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999971359648354	WITHOUT_CLASSIFICATION	2.864035164536834E-6	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999880764713728	WITHOUT_CLASSIFICATION	1.1923528627157585E-5	TEST
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999975796143724	WITHOUT_CLASSIFICATION	2.4203856275017724E-6	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999985331182902	WITHOUT_CLASSIFICATION	1.4668817097784679E-6	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9984244670200196	WITHOUT_CLASSIFICATION	0.0015755329799803668	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9984244670200196	WITHOUT_CLASSIFICATION	0.0015755329799803668	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9984244670200196	WITHOUT_CLASSIFICATION	0.0015755329799803668	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9984244670200196	WITHOUT_CLASSIFICATION	0.0015755329799803668	TEST
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999919574468404	WITHOUT_CLASSIFICATION	8.042553159534456E-6	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999847965598271	WITHOUT_CLASSIFICATION	1.5203440172952988E-5	TEST
// "else" body	WITHOUT_CLASSIFICATION	0.999991359697593	WITHOUT_CLASSIFICATION	8.640302407010183E-6	TEST
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9997727652492561	WITHOUT_CLASSIFICATION	2.2723475074386284E-4	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9997402506785193	WITHOUT_CLASSIFICATION	2.597493214806346E-4	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998063551385771	WITHOUT_CLASSIFICATION	1.936448614228966E-4	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998063551385771	WITHOUT_CLASSIFICATION	1.936448614228966E-4	TEST
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999901730058549	WITHOUT_CLASSIFICATION	9.826994144990614E-6	TEST
/* 10! */	WITHOUT_CLASSIFICATION	0.9996972112811555	WITHOUT_CLASSIFICATION	3.0278871884449414E-4	TEST
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999079400565413	WITHOUT_CLASSIFICATION	9.205994345874729E-5	TEST
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9999535294672504	WITHOUT_CLASSIFICATION	4.647053274965055E-5	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999454288402673	WITHOUT_CLASSIFICATION	5.45711597328154E-5	TEST
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.999983923008397	WITHOUT_CLASSIFICATION	1.607699160291712E-5	TEST
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.999999948819212	WITHOUT_CLASSIFICATION	5.1180788005805364E-8	TEST
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9997714017435312	WITHOUT_CLASSIFICATION	2.285982564689169E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999972080381396	WITHOUT_CLASSIFICATION	2.7919618603426496E-6	TEST
// line 449	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 495	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999781247058505	WITHOUT_CLASSIFICATION	2.1875294149594788E-5	TEST
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999991719063014	WITHOUT_CLASSIFICATION	8.280936984716616E-7	TEST
/* 14! */	WITHOUT_CLASSIFICATION	0.9996972112811555	WITHOUT_CLASSIFICATION	3.0278871884449414E-4	TEST
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999404864773246	WITHOUT_CLASSIFICATION	5.95135226753709E-5	TEST
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999935919264306	WITHOUT_CLASSIFICATION	6.40807356944732E-6	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999932128584202	WITHOUT_CLASSIFICATION	6.787141579742606E-6	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999932128584202	WITHOUT_CLASSIFICATION	6.787141579742606E-6	TEST
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999079400565413	WITHOUT_CLASSIFICATION	9.205994345874721E-5	TEST
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999999082277757	WITHOUT_CLASSIFICATION	9.177222434851462E-8	TEST
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9998067481825365	WITHOUT_CLASSIFICATION	1.9325181746352913E-4	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999926038488647	WITHOUT_CLASSIFICATION	7.396151135316899E-6	TEST
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999942996114665	WITHOUT_CLASSIFICATION	5.700388533500316E-6	TEST
/* 18! */	WITHOUT_CLASSIFICATION	0.9996972112811555	WITHOUT_CLASSIFICATION	3.0278871884449414E-4	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999395878674261	WITHOUT_CLASSIFICATION	6.041213257399739E-5	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999853123137045	WITHOUT_CLASSIFICATION	1.4687686295628891E-5	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999853123137045	WITHOUT_CLASSIFICATION	1.4687686295628891E-5	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999853123137045	WITHOUT_CLASSIFICATION	1.4687686295628891E-5	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999853123137045	WITHOUT_CLASSIFICATION	1.4687686295628891E-5	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999904186205163	WITHOUT_CLASSIFICATION	9.581379483740933E-6	TEST
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999999512293921	WITHOUT_CLASSIFICATION	4.877060791349219E-8	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999628689861585	WITHOUT_CLASSIFICATION	3.713101384144209E-5	TEST
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9998989748280586	WITHOUT_CLASSIFICATION	1.010251719415444E-4	TEST
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999903591770248	WITHOUT_CLASSIFICATION	9.640822975168693E-6	TEST
/* 22! */	WITHOUT_CLASSIFICATION	0.9996972112811555	WITHOUT_CLASSIFICATION	3.0278871884449414E-4	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999832570882955	WITHOUT_CLASSIFICATION	1.674291170458562E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999543860286725	WITHOUT_CLASSIFICATION	4.561397132747378E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999543860286725	WITHOUT_CLASSIFICATION	4.561397132747378E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999543860286725	WITHOUT_CLASSIFICATION	4.561397132747378E-5	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.999851647051272	WITHOUT_CLASSIFICATION	1.4835294872792413E-4	TEST
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999979031323416	WITHOUT_CLASSIFICATION	2.0968676584329033E-6	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999381574668327	WITHOUT_CLASSIFICATION	6.184253316727636E-5	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999381574668327	WITHOUT_CLASSIFICATION	6.184253316727636E-5	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.9998760203152212	WITHOUT_CLASSIFICATION	1.2397968477886542E-4	TEST
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999988507999	WITHOUT_CLASSIFICATION	1.1492000632396897E-9	TEST
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9994395979577155	WITHOUT_CLASSIFICATION	5.60402042284398E-4	TEST
// BASE64	WITHOUT_CLASSIFICATION	0.9998760203152212	WITHOUT_CLASSIFICATION	1.2397968477886542E-4	TEST
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999995967840947	WITHOUT_CLASSIFICATION	4.0321590542302075E-7	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999968038747765	WITHOUT_CLASSIFICATION	3.1961252235196707E-6	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999935875156506	WITHOUT_CLASSIFICATION	6.412484349463784E-6	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999935875156506	WITHOUT_CLASSIFICATION	6.412484349463784E-6	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999875188947722	WITHOUT_CLASSIFICATION	1.2481105227868343E-5	TEST
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999996132477976	WITHOUT_CLASSIFICATION	3.8675220239667054E-7	TEST
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999995264218631	WITHOUT_CLASSIFICATION	4.7357813696016034E-7	TEST
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9997588649725918	WITHOUT_CLASSIFICATION	2.4113502740815568E-4	TEST
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9998606068489075	WITHOUT_CLASSIFICATION	1.3939315109244172E-4	TEST
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999993255041	WITHOUT_CLASSIFICATION	6.744958999807259E-7	TEST
// carriage return	WITHOUT_CLASSIFICATION	0.9999948414198019	WITHOUT_CLASSIFICATION	5.158580198107003E-6	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9998137509539853	WITHOUT_CLASSIFICATION	1.8624904601466401E-4	TEST
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999982821087828	WITHOUT_CLASSIFICATION	1.7178912172262373E-6	TEST
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999954352891011	WITHOUT_CLASSIFICATION	4.5647108989074264E-6	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.999992723221606	WITHOUT_CLASSIFICATION	7.276778393927862E-6	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.999987253790062	WITHOUT_CLASSIFICATION	1.2746209937945186E-5	TEST
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999833320706668	WITHOUT_CLASSIFICATION	1.666792933314183E-5	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999899948887094	WITHOUT_CLASSIFICATION	1.0005111290538462E-5	TEST
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999987774799752	WITHOUT_CLASSIFICATION	1.2225200247901858E-6	TEST
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999997012818294	WITHOUT_CLASSIFICATION	2.9871817063721854E-7	TEST
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999893779738873	WITHOUT_CLASSIFICATION	1.0622026112602436E-5	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.999996130871378	WITHOUT_CLASSIFICATION	3.869128621996222E-6	TEST
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999867363038679	WITHOUT_CLASSIFICATION	1.3263696132092081E-5	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999992869347076	WITHOUT_CLASSIFICATION	7.130652924191057E-7	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999849039158692	WITHOUT_CLASSIFICATION	1.5096084130646972E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999950899310088	WITHOUT_CLASSIFICATION	4.910068991072126E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999950899310088	WITHOUT_CLASSIFICATION	4.910068991072126E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999950899310088	WITHOUT_CLASSIFICATION	4.910068991072126E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999950899310088	WITHOUT_CLASSIFICATION	4.910068991072126E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999950899310088	WITHOUT_CLASSIFICATION	4.910068991072126E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999950899310088	WITHOUT_CLASSIFICATION	4.910068991072126E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999950899310088	WITHOUT_CLASSIFICATION	4.910068991072126E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999950899310088	WITHOUT_CLASSIFICATION	4.910068991072126E-6	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999496616047727	WITHOUT_CLASSIFICATION	5.0338395227367115E-5	TEST
/* fall through */	WITHOUT_CLASSIFICATION	0.99998159111116	WITHOUT_CLASSIFICATION	1.840888883993514E-5	TEST
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.995562309881455	WITHOUT_CLASSIFICATION	0.0044376901185449865	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9998145674593506	WITHOUT_CLASSIFICATION	1.8543254064944836E-4	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999977978099974	WITHOUT_CLASSIFICATION	2.2021900026455245E-6	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999977978099974	WITHOUT_CLASSIFICATION	2.2021900026455245E-6	TEST
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999775833120195	WITHOUT_CLASSIFICATION	2.2416687980587464E-5	TEST
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999991202995915	WITHOUT_CLASSIFICATION	8.797004086418792E-7	TEST
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999652227831421	WITHOUT_CLASSIFICATION	3.477721685790298E-5	TEST
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999794899494449	WITHOUT_CLASSIFICATION	2.051005055509549E-5	TEST
// get current context	WITHOUT_CLASSIFICATION	0.9999929906502353	WITHOUT_CLASSIFICATION	7.0093497647348515E-6	TEST
// octal constant	WITHOUT_CLASSIFICATION	0.9999910201814214	WITHOUT_CLASSIFICATION	8.97981857865101E-6	TEST
// read	WITHOUT_CLASSIFICATION	0.999878659393221	WITHOUT_CLASSIFICATION	1.2134060677906948E-4	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999656198555095	WITHOUT_CLASSIFICATION	3.438014449051421E-5	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9997755256488526	WITHOUT_CLASSIFICATION	2.244743511472808E-4	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999954296869872	WITHOUT_CLASSIFICATION	4.5703130128153195E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999954296869872	WITHOUT_CLASSIFICATION	4.5703130128153195E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999954296869872	WITHOUT_CLASSIFICATION	4.5703130128153195E-6	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999807464650305	WITHOUT_CLASSIFICATION	1.9253534969426722E-5	TEST
// at end	WITHOUT_CLASSIFICATION	0.9998650770263204	WITHOUT_CLASSIFICATION	1.3492297367952903E-4	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.999840903408734	WITHOUT_CLASSIFICATION	1.5909659126594962E-4	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999850540656656	WITHOUT_CLASSIFICATION	1.4945934334401094E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999810360078378	WITHOUT_CLASSIFICATION	1.896399216214125E-5	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999959913742972	WITHOUT_CLASSIFICATION	4.008625702830448E-6	TEST
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999842508021224	WITHOUT_CLASSIFICATION	1.574919787763401E-5	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999151474403013	WITHOUT_CLASSIFICATION	8.485255969870712E-5	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999151474403013	WITHOUT_CLASSIFICATION	8.485255969870712E-5	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999920086803651	WITHOUT_CLASSIFICATION	7.991319634897779E-6	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999454893432363	WITHOUT_CLASSIFICATION	5.4510656763644545E-5	TEST
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999979283346546	WITHOUT_CLASSIFICATION	2.0716653453250565E-6	TEST
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999720717407125	WITHOUT_CLASSIFICATION	2.792825928752658E-5	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999945704318685	WITHOUT_CLASSIFICATION	5.42956813148248E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999945704318685	WITHOUT_CLASSIFICATION	5.42956813148248E-6	TEST
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999778635810826	WITHOUT_CLASSIFICATION	2.2136418917395825E-5	TEST
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.999959218190029	WITHOUT_CLASSIFICATION	4.078180997092444E-5	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9998938789204194	WITHOUT_CLASSIFICATION	1.0612107958054822E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999970037107535	WITHOUT_CLASSIFICATION	2.9962892464478256E-6	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999904337141561	WITHOUT_CLASSIFICATION	9.566285843850495E-6	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999904337141561	WITHOUT_CLASSIFICATION	9.566285843850495E-6	TEST
// check arity	WITHOUT_CLASSIFICATION	0.9999955887096741	WITHOUT_CLASSIFICATION	4.411290325851675E-6	TEST
// check arity	WITHOUT_CLASSIFICATION	0.9999955887096741	WITHOUT_CLASSIFICATION	4.411290325851675E-6	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999983026524991	WITHOUT_CLASSIFICATION	1.697347500857792E-6	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999788369635595	WITHOUT_CLASSIFICATION	2.1163036440449095E-5	TEST
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.999986751094243	WITHOUT_CLASSIFICATION	1.3248905757088026E-5	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9998760203152212	WITHOUT_CLASSIFICATION	1.2397968477886542E-4	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999465673109809	WITHOUT_CLASSIFICATION	5.343268901916544E-5	TEST
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999929940288542	WITHOUT_CLASSIFICATION	7.005971145773389E-6	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999745223927904	WITHOUT_CLASSIFICATION	2.5477607209594966E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9998785193326936	WITHOUT_CLASSIFICATION	1.2148066730638023E-4	TEST
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999961533349341	WITHOUT_CLASSIFICATION	3.846665065996788E-6	TEST
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999997898274277	WITHOUT_CLASSIFICATION	2.1017257239065498E-7	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999898039670209	WITHOUT_CLASSIFICATION	1.0196032979132065E-5	TEST
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9994475159654801	WITHOUT_CLASSIFICATION	5.524840345198E-4	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999820251370832	WITHOUT_CLASSIFICATION	1.797486291671727E-5	TEST
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999990264794312	WITHOUT_CLASSIFICATION	9.735205688521312E-7	TEST
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.999980905903833	WITHOUT_CLASSIFICATION	1.9094096166925443E-5	TEST
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999562494303852	WITHOUT_CLASSIFICATION	4.375056961480999E-5	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999958133564397	WITHOUT_CLASSIFICATION	4.186643560291534E-6	TEST
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9988821491289661	WITHOUT_CLASSIFICATION	0.0011178508710339482	TEST
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999394574915056	WITHOUT_CLASSIFICATION	6.0542508494518584E-5	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999975108186272	WITHOUT_CLASSIFICATION	2.489181372714981E-6	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999837909936193	WITHOUT_CLASSIFICATION	1.6209006380617626E-5	TEST
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999953128950387	WITHOUT_CLASSIFICATION	4.687104961305407E-6	TEST
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999914669180124	WITHOUT_CLASSIFICATION	8.533081987506163E-6	TEST
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999173156328703	WITHOUT_CLASSIFICATION	8.26843671296868E-5	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999802620435941	WITHOUT_CLASSIFICATION	1.973795640588888E-5	TEST
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999891540855363	WITHOUT_CLASSIFICATION	1.0845914463518284E-5	TEST
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999584274385428	WITHOUT_CLASSIFICATION	4.157256145729792E-5	TEST
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999996725127192	WITHOUT_CLASSIFICATION	3.274872808627005E-7	TEST
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999894798853763	WITHOUT_CLASSIFICATION	1.052011462366909E-5	TEST
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999785658757272	WITHOUT_CLASSIFICATION	2.1434124272795778E-5	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999958029655932	WITHOUT_CLASSIFICATION	4.197034406836196E-6	TEST
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999933230218072	WITHOUT_CLASSIFICATION	6.676978192814508E-6	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999702193750206	WITHOUT_CLASSIFICATION	2.978062497944535E-5	TEST
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999738611775485	WITHOUT_CLASSIFICATION	2.613882245147701E-5	TEST
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999839053751678	WITHOUT_CLASSIFICATION	1.609462483215965E-5	TEST
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999800734302575	WITHOUT_CLASSIFICATION	1.992656974245582E-5	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999325004330162	WITHOUT_CLASSIFICATION	6.749956698382337E-5	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999994162161608	WITHOUT_CLASSIFICATION	5.837838392163216E-7	TEST
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.999998268692877	WITHOUT_CLASSIFICATION	1.7313071230256083E-6	TEST
// finally	WITHOUT_CLASSIFICATION	0.9998763038819077	WITHOUT_CLASSIFICATION	1.2369611809224734E-4	TEST
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9997084409983267	WITHOUT_CLASSIFICATION	2.9155900167322747E-4	TEST
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999902907359173	WITHOUT_CLASSIFICATION	9.709264082705276E-6	TEST
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.999992610875968	WITHOUT_CLASSIFICATION	7.38912403206214E-6	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.999863186527573	WITHOUT_CLASSIFICATION	1.368134724269131E-4	TEST
// specific arity	WITHOUT_CLASSIFICATION	0.9999931245491309	WITHOUT_CLASSIFICATION	6.875450869108736E-6	TEST
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999980934916537	WITHOUT_CLASSIFICATION	1.906508346285986E-6	TEST
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999757992228461	WITHOUT_CLASSIFICATION	2.4200777153959515E-5	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999585954744858	WITHOUT_CLASSIFICATION	4.140452551414198E-5	TEST
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999242922391	WITHOUT_CLASSIFICATION	7.57077609000215E-5	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999791753558835	WITHOUT_CLASSIFICATION	2.082464411648301E-5	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999791753558835	WITHOUT_CLASSIFICATION	2.082464411648301E-5	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9998722175883433	WITHOUT_CLASSIFICATION	1.2778241165661809E-4	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9998722175883433	WITHOUT_CLASSIFICATION	1.2778241165661809E-4	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999370489167633	WITHOUT_CLASSIFICATION	6.295108323667191E-5	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999370489167633	WITHOUT_CLASSIFICATION	6.295108323667191E-5	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999885658420352	WITHOUT_CLASSIFICATION	1.1434157964743297E-5	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999885658420352	WITHOUT_CLASSIFICATION	1.1434157964743297E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.999979825327841	WITHOUT_CLASSIFICATION	2.017467215898963E-5	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.999979825327841	WITHOUT_CLASSIFICATION	2.017467215898963E-5	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.999979825327841	WITHOUT_CLASSIFICATION	2.017467215898963E-5	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999112157728004	WITHOUT_CLASSIFICATION	8.878422719962306E-5	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999886149671926	WITHOUT_CLASSIFICATION	1.1385032807312541E-5	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999886149671926	WITHOUT_CLASSIFICATION	1.1385032807312541E-5	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999886149671926	WITHOUT_CLASSIFICATION	1.1385032807312541E-5	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999449434985611	WITHOUT_CLASSIFICATION	5.5056501438911135E-5	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999449434985611	WITHOUT_CLASSIFICATION	5.5056501438911135E-5	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999449434985611	WITHOUT_CLASSIFICATION	5.5056501438911135E-5	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999585954744858	WITHOUT_CLASSIFICATION	4.140452551414198E-5	TEST
// backspace	WITHOUT_CLASSIFICATION	0.999990962540761	WITHOUT_CLASSIFICATION	9.037459238884935E-6	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
/* package-private */	WITHOUT_CLASSIFICATION	0.9999469251581273	WITHOUT_CLASSIFICATION	5.3074841872762394E-5	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999924635735993	WITHOUT_CLASSIFICATION	7.536426400726395E-6	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999924635735993	WITHOUT_CLASSIFICATION	7.536426400726395E-6	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999881025168877	WITHOUT_CLASSIFICATION	1.1897483112278275E-5	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999181713113158	WITHOUT_CLASSIFICATION	8.182868868423612E-5	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999181713113158	WITHOUT_CLASSIFICATION	8.182868868423612E-5	TEST
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.7534279568546002	WITHOUT_CLASSIFICATION	0.24657204314539982	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9998738721243751	WITHOUT_CLASSIFICATION	1.2612787562494304E-4	TEST
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999178196399192	WITHOUT_CLASSIFICATION	8.218036008082094E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999732322531362	WITHOUT_CLASSIFICATION	2.6767746863792792E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999732322531362	WITHOUT_CLASSIFICATION	2.6767746863792792E-5	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999916822974968	WITHOUT_CLASSIFICATION	8.317702503209669E-6	TEST
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9996228891296521	WITHOUT_CLASSIFICATION	3.7711087034777394E-4	TEST
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999102117290755	WITHOUT_CLASSIFICATION	8.97882709245231E-5	TEST
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999817360270178	WITHOUT_CLASSIFICATION	1.826397298217956E-5	TEST
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9975398576332978	WITHOUT_CLASSIFICATION	0.002460142366702252	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999732322531362	WITHOUT_CLASSIFICATION	2.6767746863792792E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999732322531362	WITHOUT_CLASSIFICATION	2.6767746863792792E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999732322531362	WITHOUT_CLASSIFICATION	2.6767746863792792E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999732322531362	WITHOUT_CLASSIFICATION	2.6767746863792792E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999732322531362	WITHOUT_CLASSIFICATION	2.6767746863792792E-5	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999842837598972	WITHOUT_CLASSIFICATION	1.5716240102744E-5	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999495954192951	WITHOUT_CLASSIFICATION	5.0404580704874114E-5	TEST
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999981441018368	WITHOUT_CLASSIFICATION	1.855898163129787E-6	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999642331483637	WITHOUT_CLASSIFICATION	3.5766851636229266E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999780072504408	WITHOUT_CLASSIFICATION	2.1992749559270272E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999780072504408	WITHOUT_CLASSIFICATION	2.1992749559270272E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999780072504408	WITHOUT_CLASSIFICATION	2.1992749559270272E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999780072504408	WITHOUT_CLASSIFICATION	2.1992749559270272E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999780072504408	WITHOUT_CLASSIFICATION	2.1992749559270272E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999780072504408	WITHOUT_CLASSIFICATION	2.1992749559270272E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999780072504408	WITHOUT_CLASSIFICATION	2.1992749559270272E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999780072504408	WITHOUT_CLASSIFICATION	2.1992749559270272E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999780072504408	WITHOUT_CLASSIFICATION	2.1992749559270272E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999780072504408	WITHOUT_CLASSIFICATION	2.1992749559270272E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999780072504408	WITHOUT_CLASSIFICATION	2.1992749559270272E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999780072504408	WITHOUT_CLASSIFICATION	2.1992749559270272E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999780072504408	WITHOUT_CLASSIFICATION	2.1992749559270272E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999780072504408	WITHOUT_CLASSIFICATION	2.1992749559270272E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999780072504408	WITHOUT_CLASSIFICATION	2.1992749559270272E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999780072504408	WITHOUT_CLASSIFICATION	2.1992749559270272E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999780072504408	WITHOUT_CLASSIFICATION	2.1992749559270272E-5	TEST
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.999999877516532	WITHOUT_CLASSIFICATION	1.2248346806728568E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999780072504408	WITHOUT_CLASSIFICATION	2.1992749559270272E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999780072504408	WITHOUT_CLASSIFICATION	2.1992749559270272E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999780072504408	WITHOUT_CLASSIFICATION	2.1992749559270272E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999780072504408	WITHOUT_CLASSIFICATION	2.1992749559270272E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999780072504408	WITHOUT_CLASSIFICATION	2.1992749559270272E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999780072504408	WITHOUT_CLASSIFICATION	2.1992749559270272E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999780072504408	WITHOUT_CLASSIFICATION	2.1992749559270272E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999780072504408	WITHOUT_CLASSIFICATION	2.1992749559270272E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999780072504408	WITHOUT_CLASSIFICATION	2.1992749559270272E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999780072504408	WITHOUT_CLASSIFICATION	2.1992749559270272E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999780072504408	WITHOUT_CLASSIFICATION	2.1992749559270272E-5	TEST
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999481105819452	WITHOUT_CLASSIFICATION	5.1889418054859865E-5	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9996545167077275	WITHOUT_CLASSIFICATION	3.454832922724992E-4	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999918010857142	WITHOUT_CLASSIFICATION	8.198914285769022E-6	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999942444410161	WITHOUT_CLASSIFICATION	5.755558983828912E-6	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999404529346233	WITHOUT_CLASSIFICATION	5.954706537668083E-5	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9998916026659599	WITHOUT_CLASSIFICATION	1.083973340400422E-4	TEST
// only public methods	WITHOUT_CLASSIFICATION	0.9999833171485544	WITHOUT_CLASSIFICATION	1.6682851445605092E-5	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999452851214395	WITHOUT_CLASSIFICATION	5.4714878560520285E-5	TEST
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999997637021159	WITHOUT_CLASSIFICATION	2.3629788413497117E-7	TEST
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9999982555543796	WITHOUT_CLASSIFICATION	1.7444456204780593E-6	TEST
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.999983769382542	WITHOUT_CLASSIFICATION	1.6230617458072067E-5	TEST
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999998499583871	WITHOUT_CLASSIFICATION	1.5004161287881009E-7	TEST
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999940362706553	WITHOUT_CLASSIFICATION	5.963729344733173E-6	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999736374216488	WITHOUT_CLASSIFICATION	2.6362578351169486E-5	TEST
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.999871049958371	WITHOUT_CLASSIFICATION	1.2895004162905504E-4	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999789095658288	WITHOUT_CLASSIFICATION	2.109043417120471E-5	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999998353143421	WITHOUT_CLASSIFICATION	1.6468565784272705E-7	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998284613589941	WITHOUT_CLASSIFICATION	1.7153864100587611E-4	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998284613589941	WITHOUT_CLASSIFICATION	1.7153864100587611E-4	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998284613589941	WITHOUT_CLASSIFICATION	1.7153864100587611E-4	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998284613589941	WITHOUT_CLASSIFICATION	1.7153864100587611E-4	TEST
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999970483777725	WITHOUT_CLASSIFICATION	2.951622227607256E-6	TEST
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9997922285607819	WITHOUT_CLASSIFICATION	2.0777143921814602E-4	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999595829707798	WITHOUT_CLASSIFICATION	4.0417029220126315E-5	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999595829707798	WITHOUT_CLASSIFICATION	4.0417029220126315E-5	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999991788007192	WITHOUT_CLASSIFICATION	8.211992807058261E-7	TEST
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999181301599855	WITHOUT_CLASSIFICATION	8.186984001441966E-5	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999931148997372	WITHOUT_CLASSIFICATION	6.885100262763411E-6	TEST
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999770317095266	WITHOUT_CLASSIFICATION	2.2968290473514875E-5	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999439047483633	WITHOUT_CLASSIFICATION	5.609525163666684E-5	TEST
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999123151815852	WITHOUT_CLASSIFICATION	8.768481841471792E-5	TEST
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999866717494013	WITHOUT_CLASSIFICATION	1.3328250598787124E-5	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999882324079135	WITHOUT_CLASSIFICATION	1.176759208650389E-5	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999882324079135	WITHOUT_CLASSIFICATION	1.176759208650389E-5	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999882324079135	WITHOUT_CLASSIFICATION	1.176759208650389E-5	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999882324079135	WITHOUT_CLASSIFICATION	1.176759208650389E-5	TEST
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999889972521859	WITHOUT_CLASSIFICATION	1.1002747814121588E-5	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999971270788336	WITHOUT_CLASSIFICATION	2.8729211664123487E-6	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999971270788336	WITHOUT_CLASSIFICATION	2.8729211664123487E-6	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999971270788336	WITHOUT_CLASSIFICATION	2.8729211664123487E-6	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999895276954629	WITHOUT_CLASSIFICATION	1.047230453705814E-5	TEST
// finally with no exception	WITHOUT_CLASSIFICATION	0.999955869042625	WITHOUT_CLASSIFICATION	4.413095737486005E-5	TEST
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999761601304465	WITHOUT_CLASSIFICATION	2.3839869553541835E-5	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9984244670200196	WITHOUT_CLASSIFICATION	0.0015755329799803668	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9984244670200196	WITHOUT_CLASSIFICATION	0.0015755329799803668	TEST
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999907481973944	WITHOUT_CLASSIFICATION	9.251802605611829E-6	TEST
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.999998187088203	WITHOUT_CLASSIFICATION	1.8129117970389366E-6	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.9999775880616061	WITHOUT_CLASSIFICATION	2.2411938393937326E-5	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.9999775880616061	WITHOUT_CLASSIFICATION	2.2411938393937326E-5	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999505576459886	WITHOUT_CLASSIFICATION	4.9442354011401525E-5	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999505576459886	WITHOUT_CLASSIFICATION	4.9442354011401525E-5	TEST
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999540728289824	WITHOUT_CLASSIFICATION	4.592717101747003E-5	TEST
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9996652984817426	WITHOUT_CLASSIFICATION	3.347015182574535E-4	TEST
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999585364323899	WITHOUT_CLASSIFICATION	4.146356761012515E-5	TEST
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999455072056977	WITHOUT_CLASSIFICATION	5.449279430215504E-5	TEST
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999639167804535	WITHOUT_CLASSIFICATION	3.6083219546546504E-5	TEST
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999951393080488	WITHOUT_CLASSIFICATION	4.860691951188766E-6	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999585883446899	WITHOUT_CLASSIFICATION	4.14116553101102E-5	TEST
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999891331272026	WITHOUT_CLASSIFICATION	1.086687279743735E-5	TEST
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.99988204664263	WITHOUT_CLASSIFICATION	1.1795335736985472E-4	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999883370453198	WITHOUT_CLASSIFICATION	1.166295468029724E-5	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999883370453198	WITHOUT_CLASSIFICATION	1.166295468029724E-5	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999936352919896	WITHOUT_CLASSIFICATION	6.364708010407316E-6	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999936352919896	WITHOUT_CLASSIFICATION	6.364708010407316E-6	TEST
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999914143275619	WITHOUT_CLASSIFICATION	8.585672438090946E-6	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999897454784565	WITHOUT_CLASSIFICATION	1.025452154336998E-5	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999779104727781	WITHOUT_CLASSIFICATION	2.208952722186532E-5	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9994639125945394	WITHOUT_CLASSIFICATION	5.360874054606263E-4	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9994639125945394	WITHOUT_CLASSIFICATION	5.360874054606263E-4	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9994639125945394	WITHOUT_CLASSIFICATION	5.360874054606263E-4	TEST
// line 286	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 476	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 513	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 530	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 533	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 551	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// end loop	WITHOUT_CLASSIFICATION	0.9999950485753906	WITHOUT_CLASSIFICATION	4.951424609420647E-6	TEST
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.999795315622878	WITHOUT_CLASSIFICATION	2.0468437712191663E-4	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999979096971393	WITHOUT_CLASSIFICATION	2.0903028607531422E-6	TEST
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.999992469282955	WITHOUT_CLASSIFICATION	7.530717044983678E-6	TEST
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9998921230393437	WITHOUT_CLASSIFICATION	1.0787696065635748E-4	TEST
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999721114742994	WITHOUT_CLASSIFICATION	2.788852570058966E-5	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9984244670200196	WITHOUT_CLASSIFICATION	0.0015755329799803668	TEST
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999984522622587	WITHOUT_CLASSIFICATION	1.5477377413453337E-6	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999239909383899	WITHOUT_CLASSIFICATION	7.60090616101019E-5	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999971359648354	WITHOUT_CLASSIFICATION	2.864035164536834E-6	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.999879094975243	WITHOUT_CLASSIFICATION	1.2090502475700368E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999768863287842	WITHOUT_CLASSIFICATION	2.311367121575553E-5	TEST
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999861995304133	WITHOUT_CLASSIFICATION	1.3800469586679513E-5	TEST
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9995739082405536	WITHOUT_CLASSIFICATION	4.260917594463762E-4	TEST
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999371797540083	WITHOUT_CLASSIFICATION	6.282024599163755E-5	TEST
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9997814412182241	WITHOUT_CLASSIFICATION	2.1855878177594925E-4	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999609174525854	WITHOUT_CLASSIFICATION	3.9082547414664755E-5	TEST
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999627642417489	WITHOUT_CLASSIFICATION	3.723575825100006E-5	TEST
// line 572	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 625	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 649	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 723	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 745	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 766	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 785	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 800	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 812	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 827	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 864	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 886	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 911	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 929	WITHOUT_CLASSIFICATION	0.9999933173385435	WITHOUT_CLASSIFICATION	6.682661456519379E-6	TEST
// line 952	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 970	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 972	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 991	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1011	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1026	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1067	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1085	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1145	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1169	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1201	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1229	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1287	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1293	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1307	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1325	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1363	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1398	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1473	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1492	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1523	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1562	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1582	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1620	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1635	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1652	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1681	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1755	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1789	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999909567351143	WITHOUT_CLASSIFICATION	9.04326488569631E-6	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999697462138397	WITHOUT_CLASSIFICATION	3.0253786160329988E-5	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9995939408364322	WITHOUT_CLASSIFICATION	4.0605916356784206E-4	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9998587030379822	WITHOUT_CLASSIFICATION	1.412969620178235E-4	TEST
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999635896980492	WITHOUT_CLASSIFICATION	3.6410301950790725E-5	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999890164595493	WITHOUT_CLASSIFICATION	1.0983540450624733E-5	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999890164595493	WITHOUT_CLASSIFICATION	1.0983540450624733E-5	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999890164595493	WITHOUT_CLASSIFICATION	1.0983540450624733E-5	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999890164595493	WITHOUT_CLASSIFICATION	1.0983540450624733E-5	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9996010738306431	WITHOUT_CLASSIFICATION	3.9892616935684465E-4	TEST
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999991665278377	WITHOUT_CLASSIFICATION	8.334721623453906E-7	TEST
// line 313	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 339	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 361	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 413	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 451	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 472	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 500	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 515	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 555	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 582	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 619	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 636	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 669	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 703	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 776	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 814	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 823	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 854	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 872	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 905	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 925	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 958	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 992	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1047	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1072	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1081	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1108	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1136	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1168	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1192	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1241	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1267	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1286	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1301	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1314	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1333	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1362	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1395	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1420	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1439	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1476	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1535	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1588	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1618	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1643	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1669	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1728	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1753	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1779	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1794	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1812	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1837	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1895	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1925	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1950	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 1992	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// line 2014	WITHOUT_CLASSIFICATION	0.9999933167274295	WITHOUT_CLASSIFICATION	6.6832725704043696E-6	TEST
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999709898608958	WITHOUT_CLASSIFICATION	2.9010139104223784E-5	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999911953604167	WITHOUT_CLASSIFICATION	8.804639583261477E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999994587918072	WITHOUT_CLASSIFICATION	5.412081927887632E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999994587918072	WITHOUT_CLASSIFICATION	5.412081927887632E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999994587918072	WITHOUT_CLASSIFICATION	5.412081927887632E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999994587918072	WITHOUT_CLASSIFICATION	5.412081927887632E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999994587918072	WITHOUT_CLASSIFICATION	5.412081927887632E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999994587918072	WITHOUT_CLASSIFICATION	5.412081927887632E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999994587918072	WITHOUT_CLASSIFICATION	5.412081927887632E-6	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999893690732082	WITHOUT_CLASSIFICATION	1.0630926791718634E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999893690732082	WITHOUT_CLASSIFICATION	1.0630926791718634E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999893690732082	WITHOUT_CLASSIFICATION	1.0630926791718634E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999893690732082	WITHOUT_CLASSIFICATION	1.0630926791718634E-5	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9995277133268258	WITHOUT_CLASSIFICATION	4.7228667317417486E-4	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9995277133268258	WITHOUT_CLASSIFICATION	4.7228667317417486E-4	TEST
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9997931879129224	WITHOUT_CLASSIFICATION	2.0681208707770292E-4	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999993580049424	WITHOUT_CLASSIFICATION	6.419950575882416E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999993580049424	WITHOUT_CLASSIFICATION	6.419950575882416E-7	TEST
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999159948422959	WITHOUT_CLASSIFICATION	8.40051577040734E-5	TEST
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.99999140925499	WITHOUT_CLASSIFICATION	8.59074500995853E-6	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999590569255176	WITHOUT_CLASSIFICATION	4.0943074482329115E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999590569255176	WITHOUT_CLASSIFICATION	4.0943074482329115E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999590569255176	WITHOUT_CLASSIFICATION	4.0943074482329115E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999590569255176	WITHOUT_CLASSIFICATION	4.0943074482329115E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999590569255176	WITHOUT_CLASSIFICATION	4.0943074482329115E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999590569255176	WITHOUT_CLASSIFICATION	4.0943074482329115E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999590569255176	WITHOUT_CLASSIFICATION	4.0943074482329115E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999590569255176	WITHOUT_CLASSIFICATION	4.0943074482329115E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999590569255176	WITHOUT_CLASSIFICATION	4.0943074482329115E-5	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999875544479156	WITHOUT_CLASSIFICATION	1.2445552084311144E-5	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999875544479156	WITHOUT_CLASSIFICATION	1.2445552084311144E-5	TEST
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999827984519684	WITHOUT_CLASSIFICATION	1.7201548031584757E-5	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999841420596777	WITHOUT_CLASSIFICATION	1.5857940322336676E-5	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999841420596777	WITHOUT_CLASSIFICATION	1.5857940322336676E-5	TEST
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999982231937887	WITHOUT_CLASSIFICATION	1.7768062113154836E-6	TEST
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.6947397602210892	WITHOUT_CLASSIFICATION	0.30526023977891076	TEST
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999997351517039	WITHOUT_CLASSIFICATION	2.648482959857118E-7	TEST
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999948668992418	WITHOUT_CLASSIFICATION	5.133100758220855E-6	TEST
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999661803048668	WITHOUT_CLASSIFICATION	3.381969513306927E-5	TEST
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999586491040753	WITHOUT_CLASSIFICATION	4.1350895924635176E-5	TEST
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999942786143106	WITHOUT_CLASSIFICATION	5.721385689549545E-6	TEST
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999915975573023	WITHOUT_CLASSIFICATION	8.40244269775906E-6	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9990692799716057	WITHOUT_CLASSIFICATION	9.307200283942497E-4	TEST
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9995777514509885	WITHOUT_CLASSIFICATION	4.222485490114917E-4	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9941492743094527	WITHOUT_CLASSIFICATION	0.005850725690547353	TEST
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999980185670772	WITHOUT_CLASSIFICATION	1.9814329228895637E-6	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.999987740457939	WITHOUT_CLASSIFICATION	1.2259542060991338E-5	TEST
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999957648751419	WITHOUT_CLASSIFICATION	4.2351248581692885E-6	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999467159721384	WITHOUT_CLASSIFICATION	5.328402786162582E-5	TEST
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999909381196909	WITHOUT_CLASSIFICATION	9.06188030905609E-6	TEST
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999709091803288	WITHOUT_CLASSIFICATION	2.9090819671191463E-5	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9998409432469387	WITHOUT_CLASSIFICATION	1.590567530612113E-4	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999348169320624	WITHOUT_CLASSIFICATION	6.51830679374702E-5	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999348169320624	WITHOUT_CLASSIFICATION	6.51830679374702E-5	TEST
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999831893525208	WITHOUT_CLASSIFICATION	1.6810647479133904E-5	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999181734758191	WITHOUT_CLASSIFICATION	8.182652418095401E-5	TEST
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999743313879488	WITHOUT_CLASSIFICATION	2.5668612051199926E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9983447918578708	WITHOUT_CLASSIFICATION	0.0016552081421292739	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9998136322309217	WITHOUT_CLASSIFICATION	1.8636776907830693E-4	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9998136322309217	WITHOUT_CLASSIFICATION	1.8636776907830693E-4	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9998136322309217	WITHOUT_CLASSIFICATION	1.8636776907830693E-4	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999970567980628	WITHOUT_CLASSIFICATION	2.9432019372208386E-6	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.999820672250366	WITHOUT_CLASSIFICATION	1.79327749634074E-4	TEST
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999984295692628	WITHOUT_CLASSIFICATION	1.5704307372469114E-6	TEST
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999998587058988	WITHOUT_CLASSIFICATION	1.4129410125124497E-7	TEST
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999974537200362	WITHOUT_CLASSIFICATION	2.5462799637134295E-6	TEST
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999997319380343	WITHOUT_CLASSIFICATION	2.680619656958984E-7	TEST
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999856486436075	WITHOUT_CLASSIFICATION	1.4351356392404846E-5	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999494444414679	WITHOUT_CLASSIFICATION	5.055555853212671E-5	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.999999629682944	WITHOUT_CLASSIFICATION	3.703170560145219E-7	TEST
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.999978795120385	WITHOUT_CLASSIFICATION	2.120487961499719E-5	TEST
// reset buffer	WITHOUT_CLASSIFICATION	0.9999916805437531	WITHOUT_CLASSIFICATION	8.319456247003029E-6	TEST
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999970289914123	WITHOUT_CLASSIFICATION	2.971008587625023E-6	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9706330014928228	WITHOUT_CLASSIFICATION	0.029366998507177115	TEST
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999900760704429	WITHOUT_CLASSIFICATION	9.923929557056794E-6	TEST
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999962045939385	WITHOUT_CLASSIFICATION	3.7954060615965394E-6	TEST
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999498326928552	WITHOUT_CLASSIFICATION	5.016730714481634E-5	TEST
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999760898863989	WITHOUT_CLASSIFICATION	2.3910113601079024E-5	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9998946278684342	WITHOUT_CLASSIFICATION	1.0537213156584233E-4	TEST
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999980741667142	WITHOUT_CLASSIFICATION	1.9258332858916015E-6	TEST
