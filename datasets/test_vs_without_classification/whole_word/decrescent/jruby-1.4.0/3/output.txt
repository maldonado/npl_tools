// ?R  | boolean | True if file is readable by the real uid/gid of the caller // FIXME: Need to implement an readable_real_p in FileTest	TEST	0.9999984870781632	WITHOUT_CLASSIFICATION	1.5129218367375647E-6	TEST
// TODO make an assert here	TEST	0.964151747880499	WITHOUT_CLASSIFICATION	0.03584825211950094	TEST
// TODO add test methods here. The name must begin with 'test'. For example:	TEST	0.7848326562554749	TEST	0.21516734374452512	WITHOUT_CLASSIFICATION
// TODO: Make into an assert once I get things like blockbodynodes to be implicit nil	TEST	0.9970847586487783	WITHOUT_CLASSIFICATION	0.002915241351221734	TEST
// if the method is extending something, then we have // to test if the handler is initialized...	TEST	0.9999092760280995	WITHOUT_CLASSIFICATION	9.07239719004574E-5	TEST
// ?W  | boolean | True if file1 exists and is writable by the real uid/gid // FIXME: Need to implement an writable_real_p in FileTest	TEST	0.999998778218791	WITHOUT_CLASSIFICATION	1.2217812090807172E-6	TEST
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999277662926895	WITHOUT_CLASSIFICATION	7.223370731044734E-5	TEST
// line 335	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999967265193941	WITHOUT_CLASSIFICATION	3.2734806058000666E-6	TEST
// line 362	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
// line 391	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
/* ^D */	WITHOUT_CLASSIFICATION	0.9999030942725735	WITHOUT_CLASSIFICATION	9.690572742639396E-5	TEST
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999031142545848	WITHOUT_CLASSIFICATION	9.68857454152258E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9998849181450861	WITHOUT_CLASSIFICATION	1.150818549139811E-4	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9998849181450861	WITHOUT_CLASSIFICATION	1.150818549139811E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999675616350749	WITHOUT_CLASSIFICATION	3.2438364925031535E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999675616350749	WITHOUT_CLASSIFICATION	3.2438364925031535E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999675616350749	WITHOUT_CLASSIFICATION	3.2438364925031535E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999675616350749	WITHOUT_CLASSIFICATION	3.2438364925031535E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999675616350749	WITHOUT_CLASSIFICATION	3.2438364925031535E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999675616350749	WITHOUT_CLASSIFICATION	3.2438364925031535E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999675616350749	WITHOUT_CLASSIFICATION	3.2438364925031535E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999675616350749	WITHOUT_CLASSIFICATION	3.2438364925031535E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999675616350749	WITHOUT_CLASSIFICATION	3.2438364925031535E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999675616350749	WITHOUT_CLASSIFICATION	3.2438364925031535E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999675616350749	WITHOUT_CLASSIFICATION	3.2438364925031535E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999675616350749	WITHOUT_CLASSIFICATION	3.2438364925031535E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999675616350749	WITHOUT_CLASSIFICATION	3.2438364925031535E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999675616350749	WITHOUT_CLASSIFICATION	3.2438364925031535E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999675616350749	WITHOUT_CLASSIFICATION	3.2438364925031535E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999675616350749	WITHOUT_CLASSIFICATION	3.2438364925031535E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999675616350749	WITHOUT_CLASSIFICATION	3.2438364925031535E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999675616350749	WITHOUT_CLASSIFICATION	3.2438364925031535E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999675616350749	WITHOUT_CLASSIFICATION	3.2438364925031535E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999675616350749	WITHOUT_CLASSIFICATION	3.2438364925031535E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999675616350749	WITHOUT_CLASSIFICATION	3.2438364925031535E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999675616350749	WITHOUT_CLASSIFICATION	3.2438364925031535E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999675616350749	WITHOUT_CLASSIFICATION	3.2438364925031535E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999675616350749	WITHOUT_CLASSIFICATION	3.2438364925031535E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999675616350749	WITHOUT_CLASSIFICATION	3.2438364925031535E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999675616350749	WITHOUT_CLASSIFICATION	3.2438364925031535E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999675616350749	WITHOUT_CLASSIFICATION	3.2438364925031535E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999675616350749	WITHOUT_CLASSIFICATION	3.2438364925031535E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999675616350749	WITHOUT_CLASSIFICATION	3.2438364925031535E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999675616350749	WITHOUT_CLASSIFICATION	3.2438364925031535E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999675616350749	WITHOUT_CLASSIFICATION	3.2438364925031535E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999675616350749	WITHOUT_CLASSIFICATION	3.2438364925031535E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999675616350749	WITHOUT_CLASSIFICATION	3.2438364925031535E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999675616350749	WITHOUT_CLASSIFICATION	3.2438364925031535E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999675616350749	WITHOUT_CLASSIFICATION	3.2438364925031535E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999675616350749	WITHOUT_CLASSIFICATION	3.2438364925031535E-5	TEST
// return result	WITHOUT_CLASSIFICATION	0.9999963131389723	WITHOUT_CLASSIFICATION	3.6868610277996126E-6	TEST
// name	WITHOUT_CLASSIFICATION	0.9999367831423387	WITHOUT_CLASSIFICATION	6.321685766128434E-5	TEST
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999794374160588	WITHOUT_CLASSIFICATION	2.0562583941152106E-5	TEST
// Accessor methods.	WITHOUT_CLASSIFICATION	0.999989730429088	WITHOUT_CLASSIFICATION	1.0269570912017866E-5	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999895218580386	WITHOUT_CLASSIFICATION	1.0478141961398087E-5	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999895218580386	WITHOUT_CLASSIFICATION	1.0478141961398087E-5	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999895218580386	WITHOUT_CLASSIFICATION	1.0478141961398087E-5	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999895218580386	WITHOUT_CLASSIFICATION	1.0478141961398087E-5	TEST
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999838135259105	WITHOUT_CLASSIFICATION	1.618647408945236E-5	TEST
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999315787580582	WITHOUT_CLASSIFICATION	6.842124194182588E-5	TEST
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999814201168507	WITHOUT_CLASSIFICATION	1.8579883149350328E-5	TEST
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999675506450258	WITHOUT_CLASSIFICATION	3.244935497414124E-5	TEST
// Version information:	WITHOUT_CLASSIFICATION	0.9999731155829669	WITHOUT_CLASSIFICATION	2.6884417033210765E-5	TEST
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999985976528817	WITHOUT_CLASSIFICATION	1.4023471183949735E-6	TEST
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999865877437422	WITHOUT_CLASSIFICATION	1.3412256257686911E-5	TEST
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999925881262671	WITHOUT_CLASSIFICATION	7.411873732876238E-6	TEST
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999997534174961	WITHOUT_CLASSIFICATION	2.4658250385628726E-7	TEST
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9965503352857761	WITHOUT_CLASSIFICATION	0.0034496647142239507	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999852710411872	WITHOUT_CLASSIFICATION	1.4728958812796454E-5	TEST
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999803952859239	WITHOUT_CLASSIFICATION	1.9604714076213897E-5	TEST
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9998032849145891	WITHOUT_CLASSIFICATION	1.9671508541081682E-4	TEST
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999946289159554	WITHOUT_CLASSIFICATION	5.371084044634838E-6	TEST
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999680164748898	WITHOUT_CLASSIFICATION	3.198352511020724E-5	TEST
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999861073160381	WITHOUT_CLASSIFICATION	1.3892683961858379E-5	TEST
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9999989248605401	WITHOUT_CLASSIFICATION	1.0751394598790283E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999895218580386	WITHOUT_CLASSIFICATION	1.0478141961398087E-5	TEST
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999644861256042	WITHOUT_CLASSIFICATION	3.5513874395876136E-5	TEST
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999643829930288	WITHOUT_CLASSIFICATION	3.561700697127704E-5	TEST
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999647430792471	WITHOUT_CLASSIFICATION	3.525692075289945E-5	TEST
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9999686167899817	WITHOUT_CLASSIFICATION	3.138321001832481E-5	TEST
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9999402866463741	WITHOUT_CLASSIFICATION	5.971335362590853E-5	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.999993174334532	WITHOUT_CLASSIFICATION	6.825665467932794E-6	TEST
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999797955412736	WITHOUT_CLASSIFICATION	2.0204458726389446E-5	TEST
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9998516795920824	WITHOUT_CLASSIFICATION	1.4832040791757788E-4	TEST
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999695812059138	WITHOUT_CLASSIFICATION	3.04187940861494E-5	TEST
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999765271554009	WITHOUT_CLASSIFICATION	2.3472844599059848E-5	TEST
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9993691506985399	WITHOUT_CLASSIFICATION	6.308493014601157E-4	TEST
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999564550116857	WITHOUT_CLASSIFICATION	4.354498831427219E-5	TEST
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.999560448769399	WITHOUT_CLASSIFICATION	4.395512306010262E-4	TEST
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999800127361487	WITHOUT_CLASSIFICATION	1.998726385139298E-5	TEST
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999787548312852	WITHOUT_CLASSIFICATION	2.124516871487249E-5	TEST
// RubySignal	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.999963862611584	WITHOUT_CLASSIFICATION	3.6137388415999244E-5	TEST
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9961908974563325	WITHOUT_CLASSIFICATION	0.0038091025436674305	TEST
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999838908736077	WITHOUT_CLASSIFICATION	1.6109126392242156E-5	TEST
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999967625858841	WITHOUT_CLASSIFICATION	3.2374141159535196E-6	TEST
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999755458276363	WITHOUT_CLASSIFICATION	2.445417236369353E-5	TEST
//io.finish();	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9997734497551745	WITHOUT_CLASSIFICATION	2.265502448255548E-4	TEST
// hmm...	WITHOUT_CLASSIFICATION	0.9999673553645454	WITHOUT_CLASSIFICATION	3.2644635454674836E-5	TEST
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9998420496777652	WITHOUT_CLASSIFICATION	1.579503222348157E-4	TEST
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999774408177965	WITHOUT_CLASSIFICATION	2.2559182203558006E-5	TEST
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999812360197551	WITHOUT_CLASSIFICATION	1.8763980244888525E-5	TEST
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999811567054324	WITHOUT_CLASSIFICATION	1.88432945676056E-5	TEST
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999840555596158	WITHOUT_CLASSIFICATION	1.5944440384121343E-5	TEST
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.999933236029729	WITHOUT_CLASSIFICATION	6.676397027100529E-5	TEST
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999602070746832	WITHOUT_CLASSIFICATION	3.979292531677984E-5	TEST
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.999902110107467	WITHOUT_CLASSIFICATION	9.788989253297648E-5	TEST
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999951742399468	WITHOUT_CLASSIFICATION	4.825760053291389E-6	TEST
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999955162032038	WITHOUT_CLASSIFICATION	4.483796796181349E-6	TEST
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999818485456966	WITHOUT_CLASSIFICATION	1.8151454303398672E-5	TEST
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999958156942884	WITHOUT_CLASSIFICATION	4.184305711549517E-6	TEST
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9994800565739836	WITHOUT_CLASSIFICATION	5.199434260162948E-4	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999609268761853	WITHOUT_CLASSIFICATION	3.907312381467306E-5	TEST
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999987042554059	WITHOUT_CLASSIFICATION	1.2957445940720274E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999611976288035	WITHOUT_CLASSIFICATION	3.880237119649121E-5	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999766126834586	WITHOUT_CLASSIFICATION	2.338731654137312E-5	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999561268278887	WITHOUT_CLASSIFICATION	4.387317211129967E-5	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999561268278887	WITHOUT_CLASSIFICATION	4.387317211129967E-5	TEST
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9999528700085526	WITHOUT_CLASSIFICATION	4.71299914473867E-5	TEST
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.999993559741232	WITHOUT_CLASSIFICATION	6.440258767969301E-6	TEST
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999621001415425	WITHOUT_CLASSIFICATION	3.7899858457427876E-5	TEST
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999875245428772	WITHOUT_CLASSIFICATION	1.2475457122821273E-5	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999780113737399	WITHOUT_CLASSIFICATION	2.1988626260164133E-5	TEST
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9997113174558173	WITHOUT_CLASSIFICATION	2.8868254418264546E-4	TEST
// ???	WITHOUT_CLASSIFICATION	0.9999681868465184	WITHOUT_CLASSIFICATION	3.181315348162124E-5	TEST
// PID	WITHOUT_CLASSIFICATION	0.9999673553645454	WITHOUT_CLASSIFICATION	3.2644635454674836E-5	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999611976288035	WITHOUT_CLASSIFICATION	3.880237119649121E-5	TEST
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999973191037504	WITHOUT_CLASSIFICATION	2.6808962496141026E-6	TEST
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999525061005619	WITHOUT_CLASSIFICATION	4.749389943820732E-5	TEST
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999958102413495	WITHOUT_CLASSIFICATION	4.189758650429073E-6	TEST
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999913414799624	WITHOUT_CLASSIFICATION	8.658520037699614E-6	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999615445647088	WITHOUT_CLASSIFICATION	3.8455435291153285E-5	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999615445647088	WITHOUT_CLASSIFICATION	3.8455435291153285E-5	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999615445647088	WITHOUT_CLASSIFICATION	3.8455435291153285E-5	TEST
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999951527178743	WITHOUT_CLASSIFICATION	4.847282125703882E-6	TEST
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999892962846346	WITHOUT_CLASSIFICATION	1.07037153654772E-5	TEST
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999947531859349	WITHOUT_CLASSIFICATION	5.246814065170055E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999740690762844	WITHOUT_CLASSIFICATION	2.593092371560587E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999740690762844	WITHOUT_CLASSIFICATION	2.593092371560587E-5	TEST
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9988822954625749	WITHOUT_CLASSIFICATION	0.0011177045374250283	TEST
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999976400828996	WITHOUT_CLASSIFICATION	2.3599171004857567E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999740690762844	WITHOUT_CLASSIFICATION	2.593092371560587E-5	TEST
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999838649529487	WITHOUT_CLASSIFICATION	1.613504705136234E-5	TEST
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9998530399523028	WITHOUT_CLASSIFICATION	1.4696004769710567E-4	TEST
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.999974659241583	WITHOUT_CLASSIFICATION	2.534075841697486E-5	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999927557390688	WITHOUT_CLASSIFICATION	7.2442609312667435E-6	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999419734027609	WITHOUT_CLASSIFICATION	5.802659723904649E-5	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.999974363528424	WITHOUT_CLASSIFICATION	2.5636471576088874E-5	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.999974363528424	WITHOUT_CLASSIFICATION	2.5636471576088874E-5	TEST
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999699454801189	WITHOUT_CLASSIFICATION	3.0054519881081067E-5	TEST
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999855528284968	WITHOUT_CLASSIFICATION	1.4447171503313801E-5	TEST
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999702006107187	WITHOUT_CLASSIFICATION	2.9799389281357536E-5	TEST
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999789174384258	WITHOUT_CLASSIFICATION	2.1082561574165587E-5	TEST
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999702873616597	WITHOUT_CLASSIFICATION	2.971263834026901E-5	TEST
// extras flag	WITHOUT_CLASSIFICATION	0.9999911062667926	WITHOUT_CLASSIFICATION	8.893733207425053E-6	TEST
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// ...nothing	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// utility method	WITHOUT_CLASSIFICATION	0.9999943644112719	WITHOUT_CLASSIFICATION	5.635588728093976E-6	TEST
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.999988057119613	WITHOUT_CLASSIFICATION	1.1942880387104388E-5	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999611976288035	WITHOUT_CLASSIFICATION	3.880237119649121E-5	TEST
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999355373498083	WITHOUT_CLASSIFICATION	6.446265019171727E-5	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999604153933916	WITHOUT_CLASSIFICATION	3.958460660838182E-5	TEST
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9999860002244675	WITHOUT_CLASSIFICATION	1.399977553257538E-5	TEST
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999788439842703	WITHOUT_CLASSIFICATION	2.115601572970025E-5	TEST
// MRI does it!	WITHOUT_CLASSIFICATION	0.99997785205453	WITHOUT_CLASSIFICATION	2.2147945470047173E-5	TEST
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999785641721843	WITHOUT_CLASSIFICATION	2.1435827815649333E-5	TEST
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.99994358403118	WITHOUT_CLASSIFICATION	5.6415968820068184E-5	TEST
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999729176684375	WITHOUT_CLASSIFICATION	2.7082331562449563E-5	TEST
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9998452738713467	WITHOUT_CLASSIFICATION	1.5472612865340913E-4	TEST
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9998851134560157	WITHOUT_CLASSIFICATION	1.1488654398423045E-4	TEST
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999687559997614	WITHOUT_CLASSIFICATION	3.124400023845712E-5	TEST
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999963828148174	WITHOUT_CLASSIFICATION	3.6171851826058976E-6	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999881135487666	WITHOUT_CLASSIFICATION	1.188645123334236E-5	TEST
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9997917999579305	WITHOUT_CLASSIFICATION	2.082000420694155E-4	TEST
// recheck condition	WITHOUT_CLASSIFICATION	0.999990182047735	WITHOUT_CLASSIFICATION	9.817952264894808E-6	TEST
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999812773094822	WITHOUT_CLASSIFICATION	1.872269051778508E-5	TEST
// Construct key services	WITHOUT_CLASSIFICATION	0.9999748416141654	WITHOUT_CLASSIFICATION	2.5158385834620417E-5	TEST
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999940447704946	WITHOUT_CLASSIFICATION	5.955229505426175E-6	TEST
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999959535326983	WITHOUT_CLASSIFICATION	4.046467301722205E-6	TEST
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999911574993917	WITHOUT_CLASSIFICATION	8.842500608333491E-6	TEST
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999974317677911	WITHOUT_CLASSIFICATION	2.568232208991855E-6	TEST
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999913272949824	WITHOUT_CLASSIFICATION	8.672705017618549E-6	TEST
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999370075618164	WITHOUT_CLASSIFICATION	6.299243818363538E-5	TEST
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999935045684043	WITHOUT_CLASSIFICATION	6.495431595684278E-6	TEST
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999649565180425	WITHOUT_CLASSIFICATION	3.50434819575206E-5	TEST
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.999959432185044	WITHOUT_CLASSIFICATION	4.056781495600933E-5	TEST
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999652696111156	WITHOUT_CLASSIFICATION	3.4730388884418795E-5	TEST
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999874937567389	WITHOUT_CLASSIFICATION	1.2506243261173326E-5	TEST
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999908533315808	WITHOUT_CLASSIFICATION	9.146668419133582E-6	TEST
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999923070889774	WITHOUT_CLASSIFICATION	7.692911022628997E-6	TEST
// determine spacing	WITHOUT_CLASSIFICATION	0.9999898549020797	WITHOUT_CLASSIFICATION	1.0145097920221236E-5	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9997484384601495	WITHOUT_CLASSIFICATION	2.5156153985048335E-4	TEST
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999571846012477	WITHOUT_CLASSIFICATION	4.2815398752239604E-5	TEST
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9998652561119563	WITHOUT_CLASSIFICATION	1.347438880436189E-4	TEST
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9997311380079489	WITHOUT_CLASSIFICATION	2.688619920510575E-4	TEST
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998911623383966	WITHOUT_CLASSIFICATION	1.088376616034422E-4	TEST
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.999395016505587	WITHOUT_CLASSIFICATION	6.049834944129926E-4	TEST
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999740669274924	WITHOUT_CLASSIFICATION	2.5933072507686298E-5	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.999966893313847	WITHOUT_CLASSIFICATION	3.3106686152950075E-5	TEST
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999857018588015	WITHOUT_CLASSIFICATION	1.4298141198476366E-5	TEST
// Default objects	WITHOUT_CLASSIFICATION	0.9999900323650343	WITHOUT_CLASSIFICATION	9.967634965804883E-6	TEST
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999772810845344	WITHOUT_CLASSIFICATION	2.27189154655547E-5	TEST
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9998852824951239	WITHOUT_CLASSIFICATION	1.147175048760649E-4	TEST
// Java support	WITHOUT_CLASSIFICATION	0.9999930221176324	WITHOUT_CLASSIFICATION	6.977882367515556E-6	TEST
// Parser stats	WITHOUT_CLASSIFICATION	0.9999895483026143	WITHOUT_CLASSIFICATION	1.0451697385759333E-5	TEST
// Compilation	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.999973678021956	WITHOUT_CLASSIFICATION	2.6321978043937855E-5	TEST
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999708360803437	WITHOUT_CLASSIFICATION	2.9163919656279216E-5	TEST
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999553744061425	WITHOUT_CLASSIFICATION	4.4625593857609484E-5	TEST
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999592790798425	WITHOUT_CLASSIFICATION	4.0720920157417834E-5	TEST
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.999967500967456	WITHOUT_CLASSIFICATION	3.249903254401646E-5	TEST
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999681830071337	WITHOUT_CLASSIFICATION	3.181699286629694E-5	TEST
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999606740348472	WITHOUT_CLASSIFICATION	3.9325965152688375E-5	TEST
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9998340927448763	WITHOUT_CLASSIFICATION	1.6590725512371867E-4	TEST
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9998946481757482	WITHOUT_CLASSIFICATION	1.0535182425171487E-4	TEST
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999960278426315	WITHOUT_CLASSIFICATION	3.9721573685463415E-6	TEST
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999869682497058	WITHOUT_CLASSIFICATION	1.3031750294186202E-5	TEST
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// default options	WITHOUT_CLASSIFICATION	0.9999961653618415	WITHOUT_CLASSIFICATION	3.834638158475444E-6	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999673553645454	WITHOUT_CLASSIFICATION	3.2644635454674836E-5	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999673553645454	WITHOUT_CLASSIFICATION	3.2644635454674836E-5	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9999698200853954	WITHOUT_CLASSIFICATION	3.0179914604682788E-5	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9999698200853954	WITHOUT_CLASSIFICATION	3.0179914604682788E-5	TEST
// long name option	WITHOUT_CLASSIFICATION	0.9999608169116071	WITHOUT_CLASSIFICATION	3.918308839284852E-5	TEST
// conversion	WITHOUT_CLASSIFICATION	0.9999896041290104	WITHOUT_CLASSIFICATION	1.0395870989604828E-5	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999609232177921	WITHOUT_CLASSIFICATION	3.907678220783019E-5	TEST
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9996502354927926	WITHOUT_CLASSIFICATION	3.4976450720740153E-4	TEST
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.999943313470728	WITHOUT_CLASSIFICATION	5.6686529271902305E-5	TEST
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9998371163257255	WITHOUT_CLASSIFICATION	1.6288367427453123E-4	TEST
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999729176684375	WITHOUT_CLASSIFICATION	2.7082331562449563E-5	TEST
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999729176684375	WITHOUT_CLASSIFICATION	2.7082331562449563E-5	TEST
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999729176684375	WITHOUT_CLASSIFICATION	2.7082331562449563E-5	TEST
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999632497161863	WITHOUT_CLASSIFICATION	3.67502838135862E-5	TEST
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999980297459493	WITHOUT_CLASSIFICATION	1.9702540506430365E-6	TEST
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999687962302853	WITHOUT_CLASSIFICATION	3.120376971456002E-5	TEST
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999642111869056	WITHOUT_CLASSIFICATION	3.5788813094479004E-5	TEST
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999844686169459	WITHOUT_CLASSIFICATION	1.553138305408843E-5	TEST
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999687962302853	WITHOUT_CLASSIFICATION	3.120376971456002E-5	TEST
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999946389964858	WITHOUT_CLASSIFICATION	5.3610035141655406E-6	TEST
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999729176684375	WITHOUT_CLASSIFICATION	2.7082331562449563E-5	TEST
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999844662960419	WITHOUT_CLASSIFICATION	1.5533703958201222E-5	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999638085059008	WITHOUT_CLASSIFICATION	3.6191494099283237E-5	TEST
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999533383226249	WITHOUT_CLASSIFICATION	4.666167737499625E-5	TEST
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999729176684375	WITHOUT_CLASSIFICATION	2.7082331562449563E-5	TEST
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999941367924526	WITHOUT_CLASSIFICATION	5.863207547423332E-6	TEST
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9998822799848561	WITHOUT_CLASSIFICATION	1.1772001514383176E-4	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999359491249711	WITHOUT_CLASSIFICATION	6.405087502886493E-5	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999847345219771	WITHOUT_CLASSIFICATION	1.5265478022880384E-5	TEST
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999756651784911	WITHOUT_CLASSIFICATION	2.433482150891015E-5	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999927976101286	WITHOUT_CLASSIFICATION	7.202389871396371E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999927976101286	WITHOUT_CLASSIFICATION	7.202389871396371E-6	TEST
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999390082492902	WITHOUT_CLASSIFICATION	6.099175070974928E-5	TEST
// string given	WITHOUT_CLASSIFICATION	0.9999769698245713	WITHOUT_CLASSIFICATION	2.30301754286968E-5	TEST
// hash given	WITHOUT_CLASSIFICATION	0.9999926045354623	WITHOUT_CLASSIFICATION	7.395464537632785E-6	TEST
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999979770304052	WITHOUT_CLASSIFICATION	2.0229695947965777E-6	TEST
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9997601547578409	WITHOUT_CLASSIFICATION	2.3984524215921635E-4	TEST
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999687962302853	WITHOUT_CLASSIFICATION	3.120376971456002E-5	TEST
// nothing	WITHOUT_CLASSIFICATION	0.9999644427988287	WITHOUT_CLASSIFICATION	3.555720117130131E-5	TEST
// nothing	WITHOUT_CLASSIFICATION	0.9999644427988287	WITHOUT_CLASSIFICATION	3.555720117130131E-5	TEST
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999687962302853	WITHOUT_CLASSIFICATION	3.120376971456002E-5	TEST
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9942928314364525	WITHOUT_CLASSIFICATION	0.005707168563547537	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999939132851836	WITHOUT_CLASSIFICATION	6.086714816424953E-6	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999939132851836	WITHOUT_CLASSIFICATION	6.086714816424953E-6	TEST
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999820820979411	WITHOUT_CLASSIFICATION	1.7917902058849873E-5	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.999721198864965	WITHOUT_CLASSIFICATION	2.788011350350503E-4	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.999721198864965	WITHOUT_CLASSIFICATION	2.788011350350503E-4	TEST
// modified	WITHOUT_CLASSIFICATION	0.999990541630367	WITHOUT_CLASSIFICATION	9.458369632933699E-6	TEST
// modified	WITHOUT_CLASSIFICATION	0.999990541630367	WITHOUT_CLASSIFICATION	9.458369632933699E-6	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999673553645454	WITHOUT_CLASSIFICATION	3.2644635454674836E-5	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999673553645454	WITHOUT_CLASSIFICATION	3.2644635454674836E-5	TEST
// QTRUE	WITHOUT_CLASSIFICATION	0.9999673553645454	WITHOUT_CLASSIFICATION	3.2644635454674836E-5	TEST
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999378172188058	WITHOUT_CLASSIFICATION	6.218278119413509E-5	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999899052718374	WITHOUT_CLASSIFICATION	1.0094728162554835E-5	TEST
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999926440760647	WITHOUT_CLASSIFICATION	7.355923935238984E-6	TEST
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999908209556392	WITHOUT_CLASSIFICATION	9.179044360812483E-6	TEST
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999919482774173	WITHOUT_CLASSIFICATION	8.051722582650437E-6	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999793613093607	WITHOUT_CLASSIFICATION	2.0638690639254666E-5	TEST
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999977225655481	WITHOUT_CLASSIFICATION	2.277434451904954E-6	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999793613093607	WITHOUT_CLASSIFICATION	2.0638690639254666E-5	TEST
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9732520959797347	WITHOUT_CLASSIFICATION	0.02674790402026526	TEST
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999874331219835	WITHOUT_CLASSIFICATION	1.256687801643511E-5	TEST
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999578308291782	WITHOUT_CLASSIFICATION	4.216917082175864E-5	TEST
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.999983334447952	WITHOUT_CLASSIFICATION	1.6665552048015005E-5	TEST
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999612494978434	WITHOUT_CLASSIFICATION	3.875050215660075E-5	TEST
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9996660538339337	WITHOUT_CLASSIFICATION	3.339461660662159E-4	TEST
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.999848492709143	WITHOUT_CLASSIFICATION	1.5150729085703916E-4	TEST
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999730257134497	WITHOUT_CLASSIFICATION	2.6974286550378708E-5	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999936023200535	WITHOUT_CLASSIFICATION	6.3976799465322014E-6	TEST
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.999985971148466	WITHOUT_CLASSIFICATION	1.4028851534005457E-5	TEST
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999729176684375	WITHOUT_CLASSIFICATION	2.7082331562449563E-5	TEST
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9997498056082227	WITHOUT_CLASSIFICATION	2.501943917772802E-4	TEST
// file not given	WITHOUT_CLASSIFICATION	0.9999915033066267	WITHOUT_CLASSIFICATION	8.49669337331697E-6	TEST
// string to eval	WITHOUT_CLASSIFICATION	0.9999889383824323	WITHOUT_CLASSIFICATION	1.1061617567599401E-5	TEST
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999897549336794	WITHOUT_CLASSIFICATION	1.024506632061334E-5	TEST
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.999980304689807	WITHOUT_CLASSIFICATION	1.9695310192929977E-5	TEST
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999454754633224	WITHOUT_CLASSIFICATION	5.4524536677674064E-5	TEST
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999741315881707	WITHOUT_CLASSIFICATION	2.5868411829186473E-5	TEST
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9998337617794264	WITHOUT_CLASSIFICATION	1.6623822057366944E-4	TEST
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9994733216988037	WITHOUT_CLASSIFICATION	5.266783011963767E-4	TEST
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9998459455263886	WITHOUT_CLASSIFICATION	1.5405447361141795E-4	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999500391306322	WITHOUT_CLASSIFICATION	4.996086936786996E-5	TEST
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999782847796588	WITHOUT_CLASSIFICATION	2.1715220341199443E-5	TEST
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.999958958931868	WITHOUT_CLASSIFICATION	4.1041068131871166E-5	TEST
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999463306478464	WITHOUT_CLASSIFICATION	5.3669352153679E-5	TEST
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999264147181279	WITHOUT_CLASSIFICATION	7.358528187208925E-5	TEST
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999345707520979	WITHOUT_CLASSIFICATION	6.54292479020861E-5	TEST
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999297222972692	WITHOUT_CLASSIFICATION	7.027770273081609E-5	TEST
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999870445961954	WITHOUT_CLASSIFICATION	1.295540380466992E-5	TEST
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999613240477834	WITHOUT_CLASSIFICATION	3.8675952216597284E-5	TEST
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999918011624008	WITHOUT_CLASSIFICATION	8.198837599155455E-6	TEST
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999985760753691	WITHOUT_CLASSIFICATION	1.4239246308347618E-6	TEST
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.999997286654302	WITHOUT_CLASSIFICATION	2.7133456979114367E-6	TEST
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999330535740696	WITHOUT_CLASSIFICATION	6.694642593034472E-5	TEST
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.999990806300481	WITHOUT_CLASSIFICATION	9.193699518975212E-6	TEST
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999926379866813	WITHOUT_CLASSIFICATION	7.362013318802719E-6	TEST
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999821663851516	WITHOUT_CLASSIFICATION	1.783361484839366E-5	TEST
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999752273366855	WITHOUT_CLASSIFICATION	2.477266331445499E-5	TEST
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.99999556594983	WITHOUT_CLASSIFICATION	4.434050169989309E-6	TEST
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.999982205914651	WITHOUT_CLASSIFICATION	1.7794085348920134E-5	TEST
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999884067444132	WITHOUT_CLASSIFICATION	1.159325558666033E-5	TEST
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999909026055291	WITHOUT_CLASSIFICATION	9.097394470887134E-6	TEST
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999927151047479	WITHOUT_CLASSIFICATION	7.284895252207118E-6	TEST
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999908021404537	WITHOUT_CLASSIFICATION	9.197859546387695E-6	TEST
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999982773766413	WITHOUT_CLASSIFICATION	1.7226233587299868E-6	TEST
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999785811096106	WITHOUT_CLASSIFICATION	2.141889038939877E-5	TEST
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999453742797734	WITHOUT_CLASSIFICATION	5.462572022670121E-5	TEST
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999923451338835	WITHOUT_CLASSIFICATION	7.654866116442858E-6	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999803353966451	WITHOUT_CLASSIFICATION	1.9664603354990485E-5	TEST
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999423908442505	WITHOUT_CLASSIFICATION	5.760915574933896E-5	TEST
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999907863936978	WITHOUT_CLASSIFICATION	9.213606302188771E-6	TEST
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999895724452849	WITHOUT_CLASSIFICATION	1.0427554715201638E-5	TEST
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9996070924842693	WITHOUT_CLASSIFICATION	3.9290751573066554E-4	TEST
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999546129880383	WITHOUT_CLASSIFICATION	4.538701196166839E-5	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999979627521148	WITHOUT_CLASSIFICATION	2.0372478851424084E-6	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999979627521148	WITHOUT_CLASSIFICATION	2.0372478851424084E-6	TEST
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9997916915798062	WITHOUT_CLASSIFICATION	2.0830842019391025E-4	TEST
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9998190614142977	WITHOUT_CLASSIFICATION	1.8093858570224428E-4	TEST
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999189624138566	WITHOUT_CLASSIFICATION	8.103758614340315E-5	TEST
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999883459466181	WITHOUT_CLASSIFICATION	1.1654053381891693E-5	TEST
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999984237046126	WITHOUT_CLASSIFICATION	1.576295387431633E-6	TEST
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999777943369849	WITHOUT_CLASSIFICATION	2.2205663015139937E-5	TEST
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999048546967786	WITHOUT_CLASSIFICATION	9.514530322140954E-5	TEST
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.999996746107118	WITHOUT_CLASSIFICATION	3.25389288189211E-6	TEST
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999338197776102	WITHOUT_CLASSIFICATION	6.618022238988463E-5	TEST
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999980551409284	WITHOUT_CLASSIFICATION	1.9448590716445676E-6	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999957201368995	WITHOUT_CLASSIFICATION	4.279863100406518E-6	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999957201368995	WITHOUT_CLASSIFICATION	4.279863100406518E-6	TEST
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9999203759725771	WITHOUT_CLASSIFICATION	7.96240274229143E-5	TEST
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999978130568618	WITHOUT_CLASSIFICATION	2.1869431382710223E-6	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999343230591109	WITHOUT_CLASSIFICATION	6.567694088912686E-5	TEST
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999848074774299	WITHOUT_CLASSIFICATION	1.519252257007064E-5	TEST
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999543418333909	WITHOUT_CLASSIFICATION	4.56581666090435E-5	TEST
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999917294535003	WITHOUT_CLASSIFICATION	8.270546499646337E-6	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999674013112994	WITHOUT_CLASSIFICATION	3.2598688700704594E-5	TEST
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999576658443251	WITHOUT_CLASSIFICATION	4.233415567490826E-5	TEST
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999954224751496	WITHOUT_CLASSIFICATION	4.577524850381093E-6	TEST
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999801106836637	WITHOUT_CLASSIFICATION	1.9889316336349983E-5	TEST
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999893926880274	WITHOUT_CLASSIFICATION	1.0607311972529743E-5	TEST
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9998394345460655	WITHOUT_CLASSIFICATION	1.6056545393456641E-4	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999917067802062	WITHOUT_CLASSIFICATION	8.29321979378371E-6	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999917067802062	WITHOUT_CLASSIFICATION	8.29321979378371E-6	TEST
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.999933387532541	WITHOUT_CLASSIFICATION	6.661246745908619E-5	TEST
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999815110994111	WITHOUT_CLASSIFICATION	1.8488900588891005E-5	TEST
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999610347376038	WITHOUT_CLASSIFICATION	3.8965262396272696E-5	TEST
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999556351675846	WITHOUT_CLASSIFICATION	4.436483241534735E-5	TEST
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999488176840465	WITHOUT_CLASSIFICATION	5.118231595348986E-5	TEST
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999489434643032	WITHOUT_CLASSIFICATION	5.1056535696846956E-5	TEST
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9998829036083978	WITHOUT_CLASSIFICATION	1.1709639160214084E-4	TEST
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999748134339592	WITHOUT_CLASSIFICATION	2.5186566040761E-5	TEST
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999626270895612	WITHOUT_CLASSIFICATION	3.737291043879302E-5	TEST
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999757749552238	WITHOUT_CLASSIFICATION	2.4225044776081168E-5	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999343230591109	WITHOUT_CLASSIFICATION	6.567694088912686E-5	TEST
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.999892063628327	WITHOUT_CLASSIFICATION	1.0793637167294556E-4	TEST
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999936720787695	WITHOUT_CLASSIFICATION	6.327921230418115E-6	TEST
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9997167002402636	WITHOUT_CLASSIFICATION	2.8329975973643103E-4	TEST
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999984730921669	WITHOUT_CLASSIFICATION	1.5269078330971393E-6	TEST
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.999973585938817	WITHOUT_CLASSIFICATION	2.6414061183047054E-5	TEST
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999990930033378	WITHOUT_CLASSIFICATION	9.069966621331822E-7	TEST
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999615487852688	WITHOUT_CLASSIFICATION	3.8451214731228975E-5	TEST
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999966922166607	WITHOUT_CLASSIFICATION	3.3077833394131947E-6	TEST
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999942883149778	WITHOUT_CLASSIFICATION	5.711685022160332E-6	TEST
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999966708611712	WITHOUT_CLASSIFICATION	3.3291388287414667E-6	TEST
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999977265035912	WITHOUT_CLASSIFICATION	2.273496408816792E-6	TEST
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9998011042166485	WITHOUT_CLASSIFICATION	1.9889578335155218E-4	TEST
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999872250455446	WITHOUT_CLASSIFICATION	1.2774954455502884E-5	TEST
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999854184391793	WITHOUT_CLASSIFICATION	1.4581560820574555E-5	TEST
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9998691591527551	WITHOUT_CLASSIFICATION	1.3084084724500502E-4	TEST
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999950384206511	WITHOUT_CLASSIFICATION	4.961579348904355E-6	TEST
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9998207177944543	WITHOUT_CLASSIFICATION	1.7928220554578472E-4	TEST
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999196051130248	WITHOUT_CLASSIFICATION	8.039488697522884E-5	TEST
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999693966926259	WITHOUT_CLASSIFICATION	3.060330737411446E-5	TEST
// rename is successful	WITHOUT_CLASSIFICATION	0.999941656301408	WITHOUT_CLASSIFICATION	5.8343698592059296E-5	TEST
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999822787115238	WITHOUT_CLASSIFICATION	1.7721288476252314E-5	TEST
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999647585152209	WITHOUT_CLASSIFICATION	3.524148477915191E-5	TEST
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999678744214693	WITHOUT_CLASSIFICATION	3.2125578530666144E-5	TEST
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999226795869521	WITHOUT_CLASSIFICATION	7.732041304787125E-5	TEST
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999341227859958	WITHOUT_CLASSIFICATION	6.587721400417989E-5	TEST
// 16 ?	WITHOUT_CLASSIFICATION	0.9999750482104764	WITHOUT_CLASSIFICATION	2.495178952358355E-5	TEST
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.999943704131644	WITHOUT_CLASSIFICATION	5.629586835589475E-5	TEST
// size + 1;	WITHOUT_CLASSIFICATION	0.999992893677402	WITHOUT_CLASSIFICATION	7.106322598045498E-6	TEST
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999822782273728	WITHOUT_CLASSIFICATION	1.7721772627117092E-5	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.999960343107365	WITHOUT_CLASSIFICATION	3.965689263496092E-5	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.999960343107365	WITHOUT_CLASSIFICATION	3.965689263496092E-5	TEST
// put implementation	WITHOUT_CLASSIFICATION	0.9999786078185856	WITHOUT_CLASSIFICATION	2.1392181414421667E-5	TEST
// get implementation	WITHOUT_CLASSIFICATION	0.999986438176238	WITHOUT_CLASSIFICATION	1.3561823762065486E-5	TEST
// specialized for value	WITHOUT_CLASSIFICATION	0.9999736724595631	WITHOUT_CLASSIFICATION	2.6327540436872192E-5	TEST
// delete implementation	WITHOUT_CLASSIFICATION	0.9999810323123	WITHOUT_CLASSIFICATION	1.896768770005699E-5	TEST
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999743752973254	WITHOUT_CLASSIFICATION	2.5624702674572178E-5	TEST
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999729124790551	WITHOUT_CLASSIFICATION	2.7087520944911754E-5	TEST
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999611976288035	WITHOUT_CLASSIFICATION	3.880237119649121E-5	TEST
// update the hash value	WITHOUT_CLASSIFICATION	0.9999935295836486	WITHOUT_CLASSIFICATION	6.470416351393102E-6	TEST
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9997385193345754	WITHOUT_CLASSIFICATION	2.614806654245604E-4	TEST
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999642483536314	WITHOUT_CLASSIFICATION	3.5751646368620544E-5	TEST
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999699454801189	WITHOUT_CLASSIFICATION	3.0054519881081067E-5	TEST
// remain where we are	WITHOUT_CLASSIFICATION	0.999959984875481	WITHOUT_CLASSIFICATION	4.0015124519016485E-5	TEST
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9994637592822793	WITHOUT_CLASSIFICATION	5.362407177207148E-4	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.999966893313847	WITHOUT_CLASSIFICATION	3.3106686152950075E-5	TEST
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999846086732722	WITHOUT_CLASSIFICATION	1.5391326727831685E-5	TEST
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9994755706879187	WITHOUT_CLASSIFICATION	5.244293120813042E-4	TEST
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.999999822518109	WITHOUT_CLASSIFICATION	1.7748189097029548E-7	TEST
// first try as directory	WITHOUT_CLASSIFICATION	0.9999957464575668	WITHOUT_CLASSIFICATION	4.253542433108335E-6	TEST
// next as regular file	WITHOUT_CLASSIFICATION	0.9999967120412501	WITHOUT_CLASSIFICATION	3.2879587499289456E-6	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9998773254992227	WITHOUT_CLASSIFICATION	1.2267450077736378E-4	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// Stream-based	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9998759108677688	WITHOUT_CLASSIFICATION	1.2408913223111435E-4	TEST
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999934298318655	WITHOUT_CLASSIFICATION	6.570168134585149E-6	TEST
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999606970067852	WITHOUT_CLASSIFICATION	3.9302993214691634E-5	TEST
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999147996480232	WITHOUT_CLASSIFICATION	8.520035197669518E-5	TEST
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999892993941829	WITHOUT_CLASSIFICATION	1.070060581715311E-5	TEST
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999818855308958	WITHOUT_CLASSIFICATION	1.811446910409195E-5	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9998948535274976	WITHOUT_CLASSIFICATION	1.051464725023678E-4	TEST
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999888104664304	WITHOUT_CLASSIFICATION	1.1189533569666429E-5	TEST
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999505629090246	WITHOUT_CLASSIFICATION	4.9437090975350836E-5	TEST
// re-register	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999467403918244	WITHOUT_CLASSIFICATION	5.325960817555152E-5	TEST
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999470830046469	WITHOUT_CLASSIFICATION	5.291699535309466E-5	TEST
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999934433682637	WITHOUT_CLASSIFICATION	6.556631736328547E-6	TEST
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.999966472960431	WITHOUT_CLASSIFICATION	3.352703956897186E-5	TEST
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999517679276605	WITHOUT_CLASSIFICATION	4.823207233948166E-5	TEST
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999933321852453	WITHOUT_CLASSIFICATION	6.667814754663641E-6	TEST
// use original modes	WITHOUT_CLASSIFICATION	0.9999714165871783	WITHOUT_CLASSIFICATION	2.8583412821717854E-5	TEST
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999884874889445	WITHOUT_CLASSIFICATION	1.1512511055547954E-5	TEST
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999374734545293	WITHOUT_CLASSIFICATION	6.252654547067537E-5	TEST
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999607161322069	WITHOUT_CLASSIFICATION	3.928386779319471E-5	TEST
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999724142861988	WITHOUT_CLASSIFICATION	2.758571380131931E-5	TEST
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999071006448192	WITHOUT_CLASSIFICATION	9.289935518082002E-5	TEST
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999119012958393	WITHOUT_CLASSIFICATION	8.809870416074322E-5	TEST
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999325919404908	WITHOUT_CLASSIFICATION	6.740805950921846E-5	TEST
//Everything written	WITHOUT_CLASSIFICATION	0.9998926053258255	WITHOUT_CLASSIFICATION	1.0739467417459063E-4	TEST
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999871416737967	WITHOUT_CLASSIFICATION	1.285832620331445E-5	TEST
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999301957646324	WITHOUT_CLASSIFICATION	6.980423536761813E-5	TEST
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9997190949580548	WITHOUT_CLASSIFICATION	2.809050419452544E-4	TEST
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999747613078448	WITHOUT_CLASSIFICATION	2.5238692155245897E-5	TEST
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999757724421419	WITHOUT_CLASSIFICATION	2.422755785807968E-5	TEST
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999205346176243	WITHOUT_CLASSIFICATION	7.946538237564177E-5	TEST
// hmmmm	WITHOUT_CLASSIFICATION	0.9999673553645454	WITHOUT_CLASSIFICATION	3.2644635454674836E-5	TEST
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.999855887201074	WITHOUT_CLASSIFICATION	1.4411279892602696E-4	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999948879918317	WITHOUT_CLASSIFICATION	5.11200816834039E-6	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999975708414819	WITHOUT_CLASSIFICATION	2.4291585181195863E-6	TEST
// Length to read	WITHOUT_CLASSIFICATION	0.9999963008522598	WITHOUT_CLASSIFICATION	3.6991477401593585E-6	TEST
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999638445467937	WITHOUT_CLASSIFICATION	3.615545320640349E-5	TEST
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999755247310732	WITHOUT_CLASSIFICATION	2.4475268926752553E-5	TEST
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999640512968376	WITHOUT_CLASSIFICATION	3.594870316236549E-5	TEST
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999837403806786	WITHOUT_CLASSIFICATION	1.6259619321471387E-5	TEST
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999836924355836	WITHOUT_CLASSIFICATION	1.630756441647982E-5	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.999981334834109	WITHOUT_CLASSIFICATION	1.866516589097437E-5	TEST
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999687962302853	WITHOUT_CLASSIFICATION	3.120376971456002E-5	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.999981334834109	WITHOUT_CLASSIFICATION	1.866516589097437E-5	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9996071502177896	WITHOUT_CLASSIFICATION	3.9284978221051963E-4	TEST
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9991888135795496	WITHOUT_CLASSIFICATION	8.111864204503682E-4	TEST
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999463007688719	WITHOUT_CLASSIFICATION	5.369923112821019E-5	TEST
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.9964617770346433	WITHOUT_CLASSIFICATION	0.003538222965356658	TEST
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999420789991871	WITHOUT_CLASSIFICATION	5.7921000812783465E-5	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999818347517082	WITHOUT_CLASSIFICATION	1.816524829174214E-5	TEST
// write	WITHOUT_CLASSIFICATION	0.9999350881768755	WITHOUT_CLASSIFICATION	6.4911823124434E-5	TEST
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9997411540057446	WITHOUT_CLASSIFICATION	2.5884599425537254E-4	TEST
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999846166514674	WITHOUT_CLASSIFICATION	1.5383348532519287E-5	TEST
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9999832860736125	WITHOUT_CLASSIFICATION	1.6713926387421246E-5	TEST
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9999917064111314	WITHOUT_CLASSIFICATION	8.293588868572345E-6	TEST
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999901268271734	WITHOUT_CLASSIFICATION	9.873172826598214E-6	TEST
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9999886145308569	WITHOUT_CLASSIFICATION	1.1385469143098066E-5	TEST
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999942193759891	WITHOUT_CLASSIFICATION	5.780624010981798E-6	TEST
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9997296740554534	WITHOUT_CLASSIFICATION	2.7032594454665283E-4	TEST
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9948743301411435	WITHOUT_CLASSIFICATION	0.005125669858856515	TEST
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999991879136501	WITHOUT_CLASSIFICATION	8.120863500007067E-7	TEST
// The class of this object	WITHOUT_CLASSIFICATION	0.9999318027320551	WITHOUT_CLASSIFICATION	6.819726794495744E-5	TEST
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999889896287274	WITHOUT_CLASSIFICATION	1.101037127250316E-5	TEST
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.999560448769399	WITHOUT_CLASSIFICATION	4.395512306010262E-4	TEST
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9996249222018422	WITHOUT_CLASSIFICATION	3.750777981577825E-4	TEST
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999196051130248	WITHOUT_CLASSIFICATION	8.039488697522884E-5	TEST
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999729176684375	WITHOUT_CLASSIFICATION	2.7082331562449563E-5	TEST
// for interface impls	WITHOUT_CLASSIFICATION	0.9999656977682653	WITHOUT_CLASSIFICATION	3.4302231734696846E-5	TEST
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999253298836742	WITHOUT_CLASSIFICATION	7.467011632580473E-5	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999935298910158	WITHOUT_CLASSIFICATION	6.470108984217735E-6	TEST
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999968995199552	WITHOUT_CLASSIFICATION	3.100480044757539E-6	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999852710411872	WITHOUT_CLASSIFICATION	1.4728958812796454E-5	TEST
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999964051211391	WITHOUT_CLASSIFICATION	3.5948788608325945E-6	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999603986532074	WITHOUT_CLASSIFICATION	3.960134679257468E-5	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999603986532074	WITHOUT_CLASSIFICATION	3.960134679257468E-5	TEST
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999639331427908	WITHOUT_CLASSIFICATION	3.6066857209175614E-5	TEST
// Struct methods	WITHOUT_CLASSIFICATION	0.9999919825513692	WITHOUT_CLASSIFICATION	8.017448630884483E-6	TEST
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.999659262566627	WITHOUT_CLASSIFICATION	3.407374333730741E-4	TEST
// define access methods.	WITHOUT_CLASSIFICATION	0.9999874014319138	WITHOUT_CLASSIFICATION	1.2598568086257811E-5	TEST
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999700134687824	WITHOUT_CLASSIFICATION	2.99865312174918E-5	TEST
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999721129807958	WITHOUT_CLASSIFICATION	2.7887019204223365E-5	TEST
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999657377369834	WITHOUT_CLASSIFICATION	3.42622630165041E-5	TEST
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999729176684375	WITHOUT_CLASSIFICATION	2.7082331562449563E-5	TEST
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999857553971484	WITHOUT_CLASSIFICATION	1.424460285163568E-5	TEST
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999619615244094	WITHOUT_CLASSIFICATION	3.8038475590621156E-5	TEST
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999934547375888	WITHOUT_CLASSIFICATION	6.54526241114221E-6	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999919998850286	WITHOUT_CLASSIFICATION	8.000114971327136E-6	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999919998850286	WITHOUT_CLASSIFICATION	8.000114971327136E-6	TEST
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999701136035821	WITHOUT_CLASSIFICATION	2.9886396417899942E-5	TEST
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999796001194197	WITHOUT_CLASSIFICATION	2.0399880580375195E-5	TEST
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999466911442956	WITHOUT_CLASSIFICATION	5.330885570447165E-5	TEST
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999334479980545	WITHOUT_CLASSIFICATION	6.655200194549206E-5	TEST
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999918803324908	WITHOUT_CLASSIFICATION	8.11966750923798E-6	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999796367916169	WITHOUT_CLASSIFICATION	2.036320838305049E-5	TEST
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999103265606782	WITHOUT_CLASSIFICATION	8.96734393217461E-5	TEST
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999843990527854	WITHOUT_CLASSIFICATION	1.5600947214652284E-5	TEST
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9998401132582478	WITHOUT_CLASSIFICATION	1.598867417522154E-4	TEST
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999891680821505	WITHOUT_CLASSIFICATION	1.0831917849497007E-5	TEST
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999069221745781	WITHOUT_CLASSIFICATION	9.307782542184507E-5	TEST
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999898181046717	WITHOUT_CLASSIFICATION	1.018189532827671E-5	TEST
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9998180835870795	WITHOUT_CLASSIFICATION	1.819164129206063E-4	TEST
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999162787866422	WITHOUT_CLASSIFICATION	8.372121335779465E-5	TEST
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999841627946179	WITHOUT_CLASSIFICATION	1.583720538209816E-5	TEST
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9998911636886832	WITHOUT_CLASSIFICATION	1.0883631131680453E-4	TEST
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999858728195311	WITHOUT_CLASSIFICATION	1.4127180468823947E-5	TEST
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999885813903558	WITHOUT_CLASSIFICATION	1.1418609644102924E-5	TEST
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999495107793066	WITHOUT_CLASSIFICATION	5.0489220693337713E-5	TEST
// reopen a java module	WITHOUT_CLASSIFICATION	0.99998251498907	WITHOUT_CLASSIFICATION	1.748501093001361E-5	TEST
//FIXME warning	WITHOUT_CLASSIFICATION	0.9998966042336562	WITHOUT_CLASSIFICATION	1.0339576634377252E-4	TEST
// FIXME warning	WITHOUT_CLASSIFICATION	0.9999906743506737	WITHOUT_CLASSIFICATION	9.325649326413638E-6	TEST
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9998845726313844	WITHOUT_CLASSIFICATION	1.1542736861568324E-4	TEST
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999986922562594	WITHOUT_CLASSIFICATION	1.307743740631382E-6	TEST
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999508726168299	WITHOUT_CLASSIFICATION	4.9127383170137084E-5	TEST
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999974196673695	WITHOUT_CLASSIFICATION	2.580332630490706E-6	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999959289420979	WITHOUT_CLASSIFICATION	4.071057902178317E-6	TEST
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999008902036344	WITHOUT_CLASSIFICATION	9.910979636570526E-5	TEST
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999636991740138	WITHOUT_CLASSIFICATION	3.6300825986219154E-5	TEST
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999601779589277	WITHOUT_CLASSIFICATION	3.982204107236779E-5	TEST
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999885877242827	WITHOUT_CLASSIFICATION	1.1412275717412148E-5	TEST
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999620992569048	WITHOUT_CLASSIFICATION	3.790074309513436E-5	TEST
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999954737606148	WITHOUT_CLASSIFICATION	4.526239385084726E-6	TEST
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999959841700415	WITHOUT_CLASSIFICATION	4.015829958423063E-6	TEST
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999738508193541	WITHOUT_CLASSIFICATION	2.614918064591992E-5	TEST
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999924710516798	WITHOUT_CLASSIFICATION	7.528948320234367E-6	TEST
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999612229866132	WITHOUT_CLASSIFICATION	3.877701338693743E-5	TEST
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999612229866132	WITHOUT_CLASSIFICATION	3.877701338693743E-5	TEST
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999590847089187	WITHOUT_CLASSIFICATION	4.091529108125906E-5	TEST
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999646839055941	WITHOUT_CLASSIFICATION	3.5316094405815155E-5	TEST
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999920163990302	WITHOUT_CLASSIFICATION	7.983600969777819E-6	TEST
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9999866183624624	WITHOUT_CLASSIFICATION	1.3381637537527718E-5	TEST
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.999955252654261	WITHOUT_CLASSIFICATION	4.4747345739063833E-5	TEST
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999776796238025	WITHOUT_CLASSIFICATION	2.2320376197549684E-5	TEST
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.999883082452763	WITHOUT_CLASSIFICATION	1.1691754723690879E-4	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999892877764187	WITHOUT_CLASSIFICATION	1.0712223581308161E-5	TEST
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999973819760448	WITHOUT_CLASSIFICATION	2.618023955258747E-6	TEST
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.999994985000595	WITHOUT_CLASSIFICATION	5.014999404947956E-6	TEST
//reopen	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999919825513692	WITHOUT_CLASSIFICATION	8.017448630884483E-6	TEST
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999686116189687	WITHOUT_CLASSIFICATION	3.138838103144417E-5	TEST
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999798548186645	WITHOUT_CLASSIFICATION	2.0145181335495452E-5	TEST
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999972893984683	WITHOUT_CLASSIFICATION	2.7106015316955632E-6	TEST
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999990925383311	WITHOUT_CLASSIFICATION	9.074616688355493E-7	TEST
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999874013168346	WITHOUT_CLASSIFICATION	1.2598683165277618E-5	TEST
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999913224849938	WITHOUT_CLASSIFICATION	8.677515006131003E-6	TEST
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999903467543635	WITHOUT_CLASSIFICATION	9.653245636583953E-6	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999920858306137	WITHOUT_CLASSIFICATION	7.914169386277978E-6	TEST
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999920808621316	WITHOUT_CLASSIFICATION	7.919137868272442E-6	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.999987211057481	WITHOUT_CLASSIFICATION	1.278894251890723E-5	TEST
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999812402130396	WITHOUT_CLASSIFICATION	1.8759786960394153E-5	TEST
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.999972353864959	WITHOUT_CLASSIFICATION	2.7646135040950413E-5	TEST
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999445954038843	WITHOUT_CLASSIFICATION	5.540459611575023E-5	TEST
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999460225465958	WITHOUT_CLASSIFICATION	5.3977453404268884E-5	TEST
// ignore error	WITHOUT_CLASSIFICATION	0.9999957087170882	WITHOUT_CLASSIFICATION	4.29128291169113E-6	TEST
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999967897735674	WITHOUT_CLASSIFICATION	3.210226432605496E-5	TEST
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999646839055941	WITHOUT_CLASSIFICATION	3.5316094405815155E-5	TEST
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9997760014720626	WITHOUT_CLASSIFICATION	2.2399852793743082E-4	TEST
// odd	WITHOUT_CLASSIFICATION	0.9999673709227891	WITHOUT_CLASSIFICATION	3.262907721085673E-5	TEST
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999943657239809	WITHOUT_CLASSIFICATION	5.634276019077574E-6	TEST
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999693659969431	WITHOUT_CLASSIFICATION	3.0634003056913147E-5	TEST
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999909440600505	WITHOUT_CLASSIFICATION	9.055939949563905E-6	TEST
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999879644572963	WITHOUT_CLASSIFICATION	1.2035542703726387E-5	TEST
/*  0! */	WITHOUT_CLASSIFICATION	0.9999232983220915	WITHOUT_CLASSIFICATION	7.670167790849922E-5	TEST
/*  1! */	WITHOUT_CLASSIFICATION	0.9999232983220915	WITHOUT_CLASSIFICATION	7.670167790849922E-5	TEST
/*  2! */	WITHOUT_CLASSIFICATION	0.9999232983220915	WITHOUT_CLASSIFICATION	7.670167790849922E-5	TEST
/*  3! */	WITHOUT_CLASSIFICATION	0.9999232983220915	WITHOUT_CLASSIFICATION	7.670167790849922E-5	TEST
/*  4! */	WITHOUT_CLASSIFICATION	0.9999232983220915	WITHOUT_CLASSIFICATION	7.670167790849922E-5	TEST
/*  5! */	WITHOUT_CLASSIFICATION	0.9999232983220915	WITHOUT_CLASSIFICATION	7.670167790849922E-5	TEST
/*  6! */	WITHOUT_CLASSIFICATION	0.9999232983220915	WITHOUT_CLASSIFICATION	7.670167790849922E-5	TEST
/*  7! */	WITHOUT_CLASSIFICATION	0.9999232983220915	WITHOUT_CLASSIFICATION	7.670167790849922E-5	TEST
/*  8! */	WITHOUT_CLASSIFICATION	0.9999232983220915	WITHOUT_CLASSIFICATION	7.670167790849922E-5	TEST
/*  9! */	WITHOUT_CLASSIFICATION	0.9999232983220915	WITHOUT_CLASSIFICATION	7.670167790849922E-5	TEST
/* 11! */	WITHOUT_CLASSIFICATION	0.9999030942725735	WITHOUT_CLASSIFICATION	9.690572742639396E-5	TEST
/* 12! */	WITHOUT_CLASSIFICATION	0.9999030942725735	WITHOUT_CLASSIFICATION	9.690572742639396E-5	TEST
/* 13! */	WITHOUT_CLASSIFICATION	0.9999030942725735	WITHOUT_CLASSIFICATION	9.690572742639396E-5	TEST
/* 15! */	WITHOUT_CLASSIFICATION	0.9999030942725735	WITHOUT_CLASSIFICATION	9.690572742639396E-5	TEST
/* 16! */	WITHOUT_CLASSIFICATION	0.9999030942725735	WITHOUT_CLASSIFICATION	9.690572742639396E-5	TEST
/* 17! */	WITHOUT_CLASSIFICATION	0.9999030942725735	WITHOUT_CLASSIFICATION	9.690572742639396E-5	TEST
/* 19! */	WITHOUT_CLASSIFICATION	0.9999030942725735	WITHOUT_CLASSIFICATION	9.690572742639396E-5	TEST
/* 20! */	WITHOUT_CLASSIFICATION	0.9999030942725735	WITHOUT_CLASSIFICATION	9.690572742639396E-5	TEST
/* 21! */	WITHOUT_CLASSIFICATION	0.9999030942725735	WITHOUT_CLASSIFICATION	9.690572742639396E-5	TEST
// Static constants	WITHOUT_CLASSIFICATION	0.9999900089164938	WITHOUT_CLASSIFICATION	9.991083506307658E-6	TEST
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.999947711819547	WITHOUT_CLASSIFICATION	5.228818045303732E-5	TEST
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999645656031041	WITHOUT_CLASSIFICATION	3.5434396895844105E-5	TEST
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999841341827572	WITHOUT_CLASSIFICATION	1.586581724277927E-5	TEST
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999934041443229	WITHOUT_CLASSIFICATION	6.595855677126677E-6	TEST
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999956915181892	WITHOUT_CLASSIFICATION	4.308481810716728E-6	TEST
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999985515157463	WITHOUT_CLASSIFICATION	1.4484842537063991E-6	TEST
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9999767613903452	WITHOUT_CLASSIFICATION	2.323860965480753E-5	TEST
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999977846322367	WITHOUT_CLASSIFICATION	2.2153677632887214E-6	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9998328740033846	WITHOUT_CLASSIFICATION	1.671259966153683E-4	TEST
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9757541570736783	WITHOUT_CLASSIFICATION	0.02424584292632169	TEST
// integer division	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999962471887637	WITHOUT_CLASSIFICATION	3.7528112363176327E-6	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999729187178019	WITHOUT_CLASSIFICATION	2.708128219801592E-5	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999729187178019	WITHOUT_CLASSIFICATION	2.708128219801592E-5	TEST
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999956915181892	WITHOUT_CLASSIFICATION	4.308481810716728E-6	TEST
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9998786353980547	WITHOUT_CLASSIFICATION	1.2136460194537649E-4	TEST
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999991797832847	WITHOUT_CLASSIFICATION	8.202167152737549E-7	TEST
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999841487695065	WITHOUT_CLASSIFICATION	1.5851230493537794E-5	TEST
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999963126761688	WITHOUT_CLASSIFICATION	3.687323831152179E-6	TEST
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.999851316515126	WITHOUT_CLASSIFICATION	1.4868348487391685E-4	TEST
// sign	WITHOUT_CLASSIFICATION	0.9999673831929631	WITHOUT_CLASSIFICATION	3.261680703687419E-5	TEST
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999904700529234	WITHOUT_CLASSIFICATION	9.529947076547935E-6	TEST
// normalize the value	WITHOUT_CLASSIFICATION	0.9999923222319185	WITHOUT_CLASSIFICATION	7.677768081511905E-6	TEST
// base	WITHOUT_CLASSIFICATION	0.9999676707398084	WITHOUT_CLASSIFICATION	3.232926019160689E-5	TEST
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9997643483884936	WITHOUT_CLASSIFICATION	2.3565161150631138E-4	TEST
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.999988102084849	WITHOUT_CLASSIFICATION	1.1897915150965821E-5	TEST
// eh?!	WITHOUT_CLASSIFICATION	0.9999673553645454	WITHOUT_CLASSIFICATION	3.2644635454674836E-5	TEST
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9998892494468822	WITHOUT_CLASSIFICATION	1.1075055311782588E-4	TEST
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999897262798587	WITHOUT_CLASSIFICATION	1.0273720141354052E-5	TEST
// the requested precision	WITHOUT_CLASSIFICATION	0.9999889280595595	WITHOUT_CLASSIFICATION	1.1071940440485943E-5	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.999993174334532	WITHOUT_CLASSIFICATION	6.825665467932794E-6	TEST
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999848963313538	WITHOUT_CLASSIFICATION	1.5103668646133014E-5	TEST
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999780255442423	WITHOUT_CLASSIFICATION	2.1974455757675076E-5	TEST
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9997948822241937	WITHOUT_CLASSIFICATION	2.0511777580624143E-4	TEST
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999880412593734	WITHOUT_CLASSIFICATION	1.1958740626715294E-5	TEST
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999914667921712	WITHOUT_CLASSIFICATION	8.53320782884606E-6	TEST
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.999984684620699	WITHOUT_CLASSIFICATION	1.531537930101013E-5	TEST
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999900468579075	WITHOUT_CLASSIFICATION	9.953142092447976E-6	TEST
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999605101169357	WITHOUT_CLASSIFICATION	3.948988306438908E-5	TEST
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999880387971919	WITHOUT_CLASSIFICATION	1.1961202808041876E-5	TEST
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.999976357365035	WITHOUT_CLASSIFICATION	2.364263496503319E-5	TEST
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999546070141243	WITHOUT_CLASSIFICATION	4.539298587571313E-5	TEST
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999818471132919	WITHOUT_CLASSIFICATION	1.8152886708121877E-5	TEST
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999807363909493	WITHOUT_CLASSIFICATION	1.9263609050682563E-5	TEST
// root x is ready!	WITHOUT_CLASSIFICATION	0.999978473294458	WITHOUT_CLASSIFICATION	2.1526705542065062E-5	TEST
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999825385599904	WITHOUT_CLASSIFICATION	1.7461440009614455E-5	TEST
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999803189820176	WITHOUT_CLASSIFICATION	1.968101798240148E-5	TEST
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999609219402181	WITHOUT_CLASSIFICATION	3.9078059781858786E-5	TEST
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.999981334834109	WITHOUT_CLASSIFICATION	1.866516589097437E-5	TEST
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999948845672252	WITHOUT_CLASSIFICATION	5.115432774797973E-6	TEST
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999940858739111	WITHOUT_CLASSIFICATION	5.914126088857961E-6	TEST
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9999121856629133	WITHOUT_CLASSIFICATION	8.78143370866702E-5	TEST
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999967349847668	WITHOUT_CLASSIFICATION	3.2650152331475847E-6	TEST
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999859993506636	WITHOUT_CLASSIFICATION	1.400064933645633E-5	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999340975930759	WITHOUT_CLASSIFICATION	6.590240692405585E-5	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999340975930759	WITHOUT_CLASSIFICATION	6.590240692405585E-5	TEST
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999681796112225	WITHOUT_CLASSIFICATION	3.18203887775277E-5	TEST
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999567606329944	WITHOUT_CLASSIFICATION	4.323936700550892E-5	TEST
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999923698805783	WITHOUT_CLASSIFICATION	7.630119421821014E-6	TEST
//consume the file name	WITHOUT_CLASSIFICATION	0.9998860824185137	WITHOUT_CLASSIFICATION	1.1391758148627462E-4	TEST
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9994909140313961	WITHOUT_CLASSIFICATION	5.090859686038475E-4	TEST
// try cwd first	WITHOUT_CLASSIFICATION	0.9999928720800618	WITHOUT_CLASSIFICATION	7.127919938231664E-6	TEST
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999614800201838	WITHOUT_CLASSIFICATION	3.851997981620263E-5	TEST
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9985074494088796	WITHOUT_CLASSIFICATION	0.0014925505911203027	TEST
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999792523238767	WITHOUT_CLASSIFICATION	2.0747676123290334E-5	TEST
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999792523238767	WITHOUT_CLASSIFICATION	2.0747676123290334E-5	TEST
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999792523238767	WITHOUT_CLASSIFICATION	2.0747676123290334E-5	TEST
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.999886075343081	WITHOUT_CLASSIFICATION	1.1392465691899627E-4	TEST
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.999395016505587	WITHOUT_CLASSIFICATION	6.049834944129926E-4	TEST
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999727574429237	WITHOUT_CLASSIFICATION	2.724255707630369E-5	TEST
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9948743301411435	WITHOUT_CLASSIFICATION	0.005125669858856515	TEST
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9999409336321698	WITHOUT_CLASSIFICATION	5.9066367830216054E-5	TEST
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9998180789797804	WITHOUT_CLASSIFICATION	1.8192102021975196E-4	TEST
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999835194062675	WITHOUT_CLASSIFICATION	1.6480593732552E-5	TEST
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999945129660477	WITHOUT_CLASSIFICATION	5.487033952315295E-6	TEST
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.999395016505587	WITHOUT_CLASSIFICATION	6.049834944129926E-4	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999595312233266	WITHOUT_CLASSIFICATION	4.0468776673353784E-5	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999595312233266	WITHOUT_CLASSIFICATION	4.0468776673353784E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9998579259572388	WITHOUT_CLASSIFICATION	1.4207404276122022E-4	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.999977887383659	WITHOUT_CLASSIFICATION	2.2112616340980122E-5	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.999903125947129	WITHOUT_CLASSIFICATION	9.687405287102404E-5	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999763789839929	WITHOUT_CLASSIFICATION	2.3621016007116493E-5	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999899052718374	WITHOUT_CLASSIFICATION	1.0094728162554835E-5	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.999993084024916	WITHOUT_CLASSIFICATION	6.915975084005211E-6	TEST
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9995050668597506	WITHOUT_CLASSIFICATION	4.949331402494576E-4	TEST
// Profile	WITHOUT_CLASSIFICATION	0.9999673714710989	WITHOUT_CLASSIFICATION	3.262852890104924E-5	TEST
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9998153018834718	WITHOUT_CLASSIFICATION	1.8469811652820965E-4	TEST
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999976101505353	WITHOUT_CLASSIFICATION	2.389849464742226E-6	TEST
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999455128236384	WITHOUT_CLASSIFICATION	5.448717636166712E-5	TEST
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999910430444515	WITHOUT_CLASSIFICATION	8.956955548566844E-6	TEST
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9998004069160643	WITHOUT_CLASSIFICATION	1.9959308393561093E-4	TEST
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9989404083429352	WITHOUT_CLASSIFICATION	0.001059591657064847	TEST
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9997392700438258	WITHOUT_CLASSIFICATION	2.6072995617413387E-4	TEST
// reset the state	WITHOUT_CLASSIFICATION	0.9999967297506288	WITHOUT_CLASSIFICATION	3.27024937110864E-6	TEST
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.999436303363464	WITHOUT_CLASSIFICATION	5.636966365360231E-4	TEST
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
//str is frozen	WITHOUT_CLASSIFICATION	0.9997445709400888	WITHOUT_CLASSIFICATION	2.5542905991110044E-4	TEST
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999332077443994	WITHOUT_CLASSIFICATION	6.679225560063371E-5	TEST
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9992929559003186	WITHOUT_CLASSIFICATION	7.070440996812491E-4	TEST
// boot the Object class 	WITHOUT_CLASSIFICATION	0.999992578098971	WITHOUT_CLASSIFICATION	7.4219010289728325E-6	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999935298910158	WITHOUT_CLASSIFICATION	6.470108984217735E-6	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999796367916169	WITHOUT_CLASSIFICATION	2.036320838305049E-5	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999960905465564	WITHOUT_CLASSIFICATION	3.909453443689123E-6	TEST
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999907468457978	WITHOUT_CLASSIFICATION	9.253154202131476E-6	TEST
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999969425191488	WITHOUT_CLASSIFICATION	3.057480851250562E-6	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9996701404453104	WITHOUT_CLASSIFICATION	3.2985955468958463E-4	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999848417580643	WITHOUT_CLASSIFICATION	1.5158241935583849E-5	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999848417580643	WITHOUT_CLASSIFICATION	1.5158241935583849E-5	TEST
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999956290134411	WITHOUT_CLASSIFICATION	4.37098655896216E-6	TEST
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999749895585138	WITHOUT_CLASSIFICATION	2.50104414861497E-5	TEST
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.999939692899433	WITHOUT_CLASSIFICATION	6.030710056691699E-5	TEST
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999856293638307	WITHOUT_CLASSIFICATION	1.4370636169368887E-5	TEST
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999968513507771	WITHOUT_CLASSIFICATION	3.148649222858766E-6	TEST
// static initializing method	WITHOUT_CLASSIFICATION	0.9999872802457306	WITHOUT_CLASSIFICATION	1.2719754269491395E-5	TEST
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999267653216818	WITHOUT_CLASSIFICATION	7.323467831818729E-5	TEST
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999965165280611	WITHOUT_CLASSIFICATION	3.483471938991062E-6	TEST
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.999920000996133	WITHOUT_CLASSIFICATION	7.99990038670582E-5	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999738603833607	WITHOUT_CLASSIFICATION	2.613961663936886E-5	TEST
// self // method name	WITHOUT_CLASSIFICATION	0.9999717884225885	WITHOUT_CLASSIFICATION	2.8211577411510964E-5	TEST
// the default allocator	WITHOUT_CLASSIFICATION	0.9999940792730557	WITHOUT_CLASSIFICATION	5.920726944353086E-6	TEST
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999822899636087	WITHOUT_CLASSIFICATION	1.771003639117443E-5	TEST
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999779400354705	WITHOUT_CLASSIFICATION	2.2059964529602844E-5	TEST
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999855213453193	WITHOUT_CLASSIFICATION	1.4478654680619306E-5	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999609232177921	WITHOUT_CLASSIFICATION	3.907678220783019E-5	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999421113502904	WITHOUT_CLASSIFICATION	5.7888649709539416E-5	TEST
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999927048606554	WITHOUT_CLASSIFICATION	7.295139344621866E-6	TEST
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999975732177016	WITHOUT_CLASSIFICATION	2.426782298521744E-6	TEST
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9998616610556228	WITHOUT_CLASSIFICATION	1.3833894437718063E-4	TEST
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.999927334923258	WITHOUT_CLASSIFICATION	7.26650767419581E-5	TEST
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999801959870293	WITHOUT_CLASSIFICATION	1.9804012970777947E-5	TEST
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999729176684375	WITHOUT_CLASSIFICATION	2.7082331562449563E-5	TEST
// a gotcha	WITHOUT_CLASSIFICATION	0.9999909810849632	WITHOUT_CLASSIFICATION	9.018915036708658E-6	TEST
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999988953201888	WITHOUT_CLASSIFICATION	1.1046798111657473E-6	TEST
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999803423500512	WITHOUT_CLASSIFICATION	1.965764994877329E-5	TEST
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999822899636087	WITHOUT_CLASSIFICATION	1.771003639117443E-5	TEST
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999789057079201	WITHOUT_CLASSIFICATION	2.109429207997053E-5	TEST
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999855213453193	WITHOUT_CLASSIFICATION	1.4478654680619306E-5	TEST
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999540602962775	WITHOUT_CLASSIFICATION	4.593970372237238E-5	TEST
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999882853878864	WITHOUT_CLASSIFICATION	1.171461211359856E-5	TEST
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999729176684375	WITHOUT_CLASSIFICATION	2.7082331562449563E-5	TEST
// provider is not available	WITHOUT_CLASSIFICATION	0.9998709988602895	WITHOUT_CLASSIFICATION	1.2900113971051243E-4	TEST
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999102066094332	WITHOUT_CLASSIFICATION	8.979339056683232E-5	TEST
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999881616538063	WITHOUT_CLASSIFICATION	1.1838346193768693E-5	TEST
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.999911488761838	WITHOUT_CLASSIFICATION	8.85112381619937E-5	TEST
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999637728725911	WITHOUT_CLASSIFICATION	3.622712740886609E-5	TEST
// we only add live threads	WITHOUT_CLASSIFICATION	0.9998895301105816	WITHOUT_CLASSIFICATION	1.1046988941835807E-4	TEST
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999989144167042	WITHOUT_CLASSIFICATION	1.0855832957851704E-6	TEST
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999981772281039	WITHOUT_CLASSIFICATION	1.822771896161939E-6	TEST
// JRubyService	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// while	WITHOUT_CLASSIFICATION	0.9999692237905766	WITHOUT_CLASSIFICATION	3.077620942338062E-5	TEST
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999030942725735	WITHOUT_CLASSIFICATION	9.690572742639396E-5	TEST
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.999998555951206	WITHOUT_CLASSIFICATION	1.4440487940613926E-6	TEST
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.999977604729626	WITHOUT_CLASSIFICATION	2.2395270373882596E-5	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999906492910257	WITHOUT_CLASSIFICATION	9.350708974275906E-6	TEST
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999647097068198	WITHOUT_CLASSIFICATION	3.52902931801866E-5	TEST
// silent ?	WITHOUT_CLASSIFICATION	0.9999920029123807	WITHOUT_CLASSIFICATION	7.997087619319769E-6	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999030942725735	WITHOUT_CLASSIFICATION	9.690572742639396E-5	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999196051130248	WITHOUT_CLASSIFICATION	8.039488697522884E-5	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999687962302853	WITHOUT_CLASSIFICATION	3.120376971456002E-5	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999687962302853	WITHOUT_CLASSIFICATION	3.120376971456002E-5	TEST
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999164961917038	WITHOUT_CLASSIFICATION	8.350380829623192E-5	TEST
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999567350617716	WITHOUT_CLASSIFICATION	4.3264938228438034E-5	TEST
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999687962302853	WITHOUT_CLASSIFICATION	3.120376971456002E-5	TEST
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999389215490688	WITHOUT_CLASSIFICATION	6.107845093116625E-5	TEST
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999687962302853	WITHOUT_CLASSIFICATION	3.120376971456002E-5	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999030942725735	WITHOUT_CLASSIFICATION	9.690572742639396E-5	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999687962302853	WITHOUT_CLASSIFICATION	3.120376971456002E-5	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999196051130248	WITHOUT_CLASSIFICATION	8.039488697522884E-5	TEST
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9998822799848561	WITHOUT_CLASSIFICATION	1.1772001514383176E-4	TEST
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999687962302853	WITHOUT_CLASSIFICATION	3.120376971456002E-5	TEST
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999687962302853	WITHOUT_CLASSIFICATION	3.120376971456002E-5	TEST
// inner switch	WITHOUT_CLASSIFICATION	0.9999930700806376	WITHOUT_CLASSIFICATION	6.929919362362903E-6	TEST
// newInstance here	WITHOUT_CLASSIFICATION	0.9999897928151927	WITHOUT_CLASSIFICATION	1.0207184807188764E-5	TEST
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999729176684375	WITHOUT_CLASSIFICATION	2.7082331562449563E-5	TEST
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999729176684375	WITHOUT_CLASSIFICATION	2.7082331562449563E-5	TEST
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999786180612098	WITHOUT_CLASSIFICATION	2.1381938790203498E-5	TEST
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// option_to_str	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.999989842560053	WITHOUT_CLASSIFICATION	1.0157439947032975E-5	TEST
// args should be before block	WITHOUT_CLASSIFICATION	0.9999056331736929	WITHOUT_CLASSIFICATION	9.436682630713395E-5	TEST
// args should be at end	WITHOUT_CLASSIFICATION	0.9998977942557515	WITHOUT_CLASSIFICATION	1.0220574424846218E-4	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.999851116259724	WITHOUT_CLASSIFICATION	1.4888374027597186E-4	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.999851116259724	WITHOUT_CLASSIFICATION	1.4888374027597186E-4	TEST
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999798401145416	WITHOUT_CLASSIFICATION	2.015988545846836E-5	TEST
// start a new populator	WITHOUT_CLASSIFICATION	0.9999560917748278	WITHOUT_CLASSIFICATION	4.390822517206192E-5	TEST
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999725021730758	WITHOUT_CLASSIFICATION	2.749782692429879E-5	TEST
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9994673292870874	WITHOUT_CLASSIFICATION	5.326707129126498E-4	TEST
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999845171812745	WITHOUT_CLASSIFICATION	1.548281872550807E-5	TEST
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9997234598587479	WITHOUT_CLASSIFICATION	2.7654014125201543E-4	TEST
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999849026615895	WITHOUT_CLASSIFICATION	1.5097338410553286E-5	TEST
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999444697100662	WITHOUT_CLASSIFICATION	5.553028993375606E-5	TEST
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.999983164560166	WITHOUT_CLASSIFICATION	1.68354398340257E-5	TEST
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999952343810921	WITHOUT_CLASSIFICATION	4.765618907872904E-6	TEST
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999835783049867	WITHOUT_CLASSIFICATION	1.6421695013219547E-5	TEST
//                }	WITHOUT_CLASSIFICATION	0.9999921919211203	WITHOUT_CLASSIFICATION	7.808078879648516E-6	TEST
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999436844737345	WITHOUT_CLASSIFICATION	5.631552626536258E-5	TEST
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9991171242348217	WITHOUT_CLASSIFICATION	8.828757651784476E-4	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999178641050552	WITHOUT_CLASSIFICATION	8.21358949448364E-5	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.999978683931302	WITHOUT_CLASSIFICATION	2.1316068698089637E-5	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999964346932901	WITHOUT_CLASSIFICATION	3.5653067099148613E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999951755221406	WITHOUT_CLASSIFICATION	4.82447785941872E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999951755221406	WITHOUT_CLASSIFICATION	4.82447785941872E-6	TEST
// colon3	WITHOUT_CLASSIFICATION	0.9999673553645454	WITHOUT_CLASSIFICATION	3.2644635454674836E-5	TEST
// Colon3	WITHOUT_CLASSIFICATION	0.9999673553645454	WITHOUT_CLASSIFICATION	3.2644635454674836E-5	TEST
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9997415205906769	WITHOUT_CLASSIFICATION	2.5847940932308616E-4	TEST
// For b.foo	WITHOUT_CLASSIFICATION	0.9999842948491433	WITHOUT_CLASSIFICATION	1.5705150856724505E-5	TEST
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999733389101422	WITHOUT_CLASSIFICATION	2.666108985781608E-5	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999951755221406	WITHOUT_CLASSIFICATION	4.82447785941872E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999951755221406	WITHOUT_CLASSIFICATION	4.82447785941872E-6	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999795506396898	WITHOUT_CLASSIFICATION	2.0449360310275102E-5	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999795506396898	WITHOUT_CLASSIFICATION	2.0449360310275102E-5	TEST
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9997712864687088	WITHOUT_CLASSIFICATION	2.2871353129104695E-4	TEST
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999842948491433	WITHOUT_CLASSIFICATION	1.5705150856724505E-5	TEST
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999949865983275	WITHOUT_CLASSIFICATION	5.013401672461466E-6	TEST
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.999990497945854	WITHOUT_CLASSIFICATION	9.502054145864844E-6	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.999986263207918	WITHOUT_CLASSIFICATION	1.3736792081915328E-5	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.999986263207918	WITHOUT_CLASSIFICATION	1.3736792081915328E-5	TEST
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999896921953318	WITHOUT_CLASSIFICATION	1.0307804668204887E-5	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999041564349738	WITHOUT_CLASSIFICATION	9.584356502622875E-5	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999177399844253	WITHOUT_CLASSIFICATION	8.226001557463494E-5	TEST
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9998761532052746	WITHOUT_CLASSIFICATION	1.238467947254118E-4	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999795506396898	WITHOUT_CLASSIFICATION	2.0449360310275102E-5	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999747996542627	WITHOUT_CLASSIFICATION	2.5200345737323817E-5	TEST
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9998340695277926	WITHOUT_CLASSIFICATION	1.6593047220734127E-4	TEST
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999834915992238	WITHOUT_CLASSIFICATION	1.6508400776129875E-5	TEST
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999802615937152	WITHOUT_CLASSIFICATION	1.9738406284837367E-5	TEST
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999960993167903	WITHOUT_CLASSIFICATION	3.900683209728632E-6	TEST
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.99993911142402	WITHOUT_CLASSIFICATION	6.0888575979926166E-5	TEST
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999686116189687	WITHOUT_CLASSIFICATION	3.138838103144417E-5	TEST
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.999990267707235	WITHOUT_CLASSIFICATION	9.732292764989873E-6	TEST
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999891587790325	WITHOUT_CLASSIFICATION	1.084122096757003E-5	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.999978683931302	WITHOUT_CLASSIFICATION	2.1316068698089637E-5	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999951755221406	WITHOUT_CLASSIFICATION	4.82447785941872E-6	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999795506396898	WITHOUT_CLASSIFICATION	2.0449360310275102E-5	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999747996542627	WITHOUT_CLASSIFICATION	2.5200345737323817E-5	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999939819240752	WITHOUT_CLASSIFICATION	6.018075924827799E-6	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999939819240752	WITHOUT_CLASSIFICATION	6.018075924827799E-6	TEST
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999793912886468	WITHOUT_CLASSIFICATION	2.060871135323713E-5	TEST
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999917942164608	WITHOUT_CLASSIFICATION	8.205783539143802E-6	TEST
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.99999254360187	WITHOUT_CLASSIFICATION	7.4563981301191895E-6	TEST
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999985653800093	WITHOUT_CLASSIFICATION	1.4346199907614611E-6	TEST
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9998284797515555	WITHOUT_CLASSIFICATION	1.715202484445675E-4	TEST
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.999998314148797	WITHOUT_CLASSIFICATION	1.6858512029315214E-6	TEST
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9998221090299747	WITHOUT_CLASSIFICATION	1.7789097002527375E-4	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9996939014971159	WITHOUT_CLASSIFICATION	3.060985028841557E-4	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999990911355734	WITHOUT_CLASSIFICATION	9.088644266160483E-7	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.99996521448225	WITHOUT_CLASSIFICATION	3.478551775012303E-5	TEST
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999277600961615	WITHOUT_CLASSIFICATION	7.22399038384834E-5	TEST
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999992774959167	WITHOUT_CLASSIFICATION	7.225040833331457E-7	TEST
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999732387467435	WITHOUT_CLASSIFICATION	2.6761253256496314E-5	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999964346932901	WITHOUT_CLASSIFICATION	3.5653067099148613E-6	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999795506396898	WITHOUT_CLASSIFICATION	2.0449360310275102E-5	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999041564349738	WITHOUT_CLASSIFICATION	9.584356502622875E-5	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999177399844253	WITHOUT_CLASSIFICATION	8.226001557463494E-5	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999177399844253	WITHOUT_CLASSIFICATION	8.226001557463494E-5	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999795506396898	WITHOUT_CLASSIFICATION	2.0449360310275102E-5	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999747996542627	WITHOUT_CLASSIFICATION	2.5200345737323817E-5	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999747996542627	WITHOUT_CLASSIFICATION	2.5200345737323817E-5	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999939819240752	WITHOUT_CLASSIFICATION	6.018075924827799E-6	TEST
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999953482938235	WITHOUT_CLASSIFICATION	4.65170617649154E-6	TEST
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9995758652957527	WITHOUT_CLASSIFICATION	4.241347042473109E-4	TEST
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999986528945031	WITHOUT_CLASSIFICATION	1.3471054970023983E-6	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.999780945998666	WITHOUT_CLASSIFICATION	2.1905400133398335E-4	TEST
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9998690941670715	WITHOUT_CLASSIFICATION	1.3090583292850295E-4	TEST
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9993603548612477	WITHOUT_CLASSIFICATION	6.396451387522988E-4	TEST
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999544559567688	WITHOUT_CLASSIFICATION	4.5544043231119906E-5	TEST
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999939943990761	WITHOUT_CLASSIFICATION	6.005600923966748E-6	TEST
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999796327346014	WITHOUT_CLASSIFICATION	2.0367265398579615E-5	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999041564349738	WITHOUT_CLASSIFICATION	9.584356502622875E-5	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999177399844253	WITHOUT_CLASSIFICATION	8.226001557463494E-5	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999177399844253	WITHOUT_CLASSIFICATION	8.226001557463494E-5	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999795506396898	WITHOUT_CLASSIFICATION	2.0449360310275102E-5	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9996939014971159	WITHOUT_CLASSIFICATION	3.060985028841557E-4	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.99996521448225	WITHOUT_CLASSIFICATION	3.478551775012303E-5	TEST
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9980294021728436	WITHOUT_CLASSIFICATION	0.0019705978271563106	TEST
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999943378638281	WITHOUT_CLASSIFICATION	5.6621361718507425E-6	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999842948491433	WITHOUT_CLASSIFICATION	1.5705150856724505E-5	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999842948491433	WITHOUT_CLASSIFICATION	1.5705150856724505E-5	TEST
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999729176684375	WITHOUT_CLASSIFICATION	2.7082331562449563E-5	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999634673823183	WITHOUT_CLASSIFICATION	3.653261768168387E-5	TEST
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999341509395857	WITHOUT_CLASSIFICATION	6.584906041428994E-5	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999743691137231	WITHOUT_CLASSIFICATION	2.5630886276927065E-5	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.999995693131761	WITHOUT_CLASSIFICATION	4.306868238980073E-6	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.999995693131761	WITHOUT_CLASSIFICATION	4.306868238980073E-6	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999741133365175	WITHOUT_CLASSIFICATION	2.588666348241607E-5	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999741133365175	WITHOUT_CLASSIFICATION	2.588666348241607E-5	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999891804292202	WITHOUT_CLASSIFICATION	1.0819570779892403E-5	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999891804292202	WITHOUT_CLASSIFICATION	1.0819570779892403E-5	TEST
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999747421431501	WITHOUT_CLASSIFICATION	2.5257856849967676E-5	TEST
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999809242770994	WITHOUT_CLASSIFICATION	1.9075722900583063E-5	TEST
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9997580017646683	WITHOUT_CLASSIFICATION	2.4199823533161303E-4	TEST
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999761916126199	WITHOUT_CLASSIFICATION	2.3808387380116103E-5	TEST
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999990928799626	WITHOUT_CLASSIFICATION	9.071200375238532E-7	TEST
// pragmas	WITHOUT_CLASSIFICATION	0.9999673553645454	WITHOUT_CLASSIFICATION	3.2644635454674836E-5	TEST
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999792221509208	WITHOUT_CLASSIFICATION	2.077784907920396E-5	TEST
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999938226122512	WITHOUT_CLASSIFICATION	6.177387748756864E-6	TEST
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9994300263528494	WITHOUT_CLASSIFICATION	5.699736471506407E-4	TEST
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9993259500949528	WITHOUT_CLASSIFICATION	6.740499050472668E-4	TEST
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999954770341223	WITHOUT_CLASSIFICATION	4.522965877621305E-6	TEST
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999789644785114	WITHOUT_CLASSIFICATION	2.1035521488567157E-5	TEST
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9998817903823677	WITHOUT_CLASSIFICATION	1.1820961763227827E-4	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999835482630485	WITHOUT_CLASSIFICATION	1.6451736951505336E-5	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999835482630485	WITHOUT_CLASSIFICATION	1.6451736951505336E-5	TEST
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9998338336617743	WITHOUT_CLASSIFICATION	1.661663382258549E-4	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.999993084024916	WITHOUT_CLASSIFICATION	6.915975084005211E-6	TEST
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9998486314209725	WITHOUT_CLASSIFICATION	1.5136857902751884E-4	TEST
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999940458347754	WITHOUT_CLASSIFICATION	5.954165224588571E-6	TEST
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999870587344667	WITHOUT_CLASSIFICATION	1.2941265533194205E-5	TEST
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999728891029451	WITHOUT_CLASSIFICATION	2.711089705493354E-5	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999848190750144	WITHOUT_CLASSIFICATION	1.5180924985639802E-5	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999851896783741	WITHOUT_CLASSIFICATION	1.481032162591965E-5	TEST
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999992802044494	WITHOUT_CLASSIFICATION	7.197955506118787E-7	TEST
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999713325599835	WITHOUT_CLASSIFICATION	2.8667440016621733E-5	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999806648541721	WITHOUT_CLASSIFICATION	1.933514582781372E-5	TEST
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9996499769574992	WITHOUT_CLASSIFICATION	3.500230425008173E-4	TEST
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9998182222160525	WITHOUT_CLASSIFICATION	1.817777839475316E-4	TEST
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9998092830087002	WITHOUT_CLASSIFICATION	1.907169912997868E-4	TEST
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9997828286261106	WITHOUT_CLASSIFICATION	2.1717137388952638E-4	TEST
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9998001570350904	WITHOUT_CLASSIFICATION	1.9984296490965217E-4	TEST
// can't do it	WITHOUT_CLASSIFICATION	0.9999704239655179	WITHOUT_CLASSIFICATION	2.9576034482115947E-5	TEST
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999795868070459	WITHOUT_CLASSIFICATION	2.041319295399991E-5	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999860481355214	WITHOUT_CLASSIFICATION	1.3951864478535103E-5	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999860481355214	WITHOUT_CLASSIFICATION	1.3951864478535103E-5	TEST
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999404374079275	WITHOUT_CLASSIFICATION	5.9562592072652675E-5	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.999560448769399	WITHOUT_CLASSIFICATION	4.395512306010262E-4	TEST
//[]	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
//[]	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999686116189687	WITHOUT_CLASSIFICATION	3.138838103144417E-5	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.999560448769399	WITHOUT_CLASSIFICATION	4.395512306010262E-4	TEST
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.999560448769399	WITHOUT_CLASSIFICATION	4.395512306010262E-4	TEST
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999895003992672	WITHOUT_CLASSIFICATION	1.0499600732783228E-5	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999936978299424	WITHOUT_CLASSIFICATION	6.302170057507995E-6	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999936978299424	WITHOUT_CLASSIFICATION	6.302170057507995E-6	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999940524624973	WITHOUT_CLASSIFICATION	5.9475375026516115E-6	TEST
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999877631707328	WITHOUT_CLASSIFICATION	1.2236829267226981E-5	TEST
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999405850664417	WITHOUT_CLASSIFICATION	5.941493355840541E-5	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.999560448769399	WITHOUT_CLASSIFICATION	4.395512306010262E-4	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.999560448769399	WITHOUT_CLASSIFICATION	4.395512306010262E-4	TEST
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.999560448769399	WITHOUT_CLASSIFICATION	4.395512306010262E-4	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.999560448769399	WITHOUT_CLASSIFICATION	4.395512306010262E-4	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.999936691237154	WITHOUT_CLASSIFICATION	6.330876284592155E-5	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999941415468541	WITHOUT_CLASSIFICATION	5.858453145932529E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999941415468541	WITHOUT_CLASSIFICATION	5.858453145932529E-6	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.999974155404762	WITHOUT_CLASSIFICATION	2.584459523805884E-5	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.999974155404762	WITHOUT_CLASSIFICATION	2.584459523805884E-5	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.999974155404762	WITHOUT_CLASSIFICATION	2.584459523805884E-5	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999941415468541	WITHOUT_CLASSIFICATION	5.858453145932529E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999941415468541	WITHOUT_CLASSIFICATION	5.858453145932529E-6	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.999936691237154	WITHOUT_CLASSIFICATION	6.330876284592155E-5	TEST
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999633553972482	WITHOUT_CLASSIFICATION	3.664460275184329E-5	TEST
// always false or nil	WITHOUT_CLASSIFICATION	0.9999776095257955	WITHOUT_CLASSIFICATION	2.239047420453388E-5	TEST
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999097310639163	WITHOUT_CLASSIFICATION	9.026893608364412E-5	TEST
// normal	WITHOUT_CLASSIFICATION	0.999967931174697	WITHOUT_CLASSIFICATION	3.206882530311195E-5	TEST
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999988773536647	WITHOUT_CLASSIFICATION	1.122646335349569E-6	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999238350247671	WITHOUT_CLASSIFICATION	7.616497523285909E-5	TEST
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999838045727806	WITHOUT_CLASSIFICATION	1.619542721947126E-5	TEST
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999758079015163	WITHOUT_CLASSIFICATION	2.4192098483726404E-5	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999806648541721	WITHOUT_CLASSIFICATION	1.933514582781372E-5	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999941415468541	WITHOUT_CLASSIFICATION	5.858453145932529E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999941415468541	WITHOUT_CLASSIFICATION	5.858453145932529E-6	TEST
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999829794818144	WITHOUT_CLASSIFICATION	1.702051818564268E-5	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999902763837688	WITHOUT_CLASSIFICATION	9.723616231256154E-6	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.999993553646292	WITHOUT_CLASSIFICATION	6.446353707943347E-6	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999841619922484	WITHOUT_CLASSIFICATION	1.583800775168006E-5	TEST
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999861520634858	WITHOUT_CLASSIFICATION	1.3847936514274075E-5	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999949297213045	WITHOUT_CLASSIFICATION	5.070278695540112E-6	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999901494643907	WITHOUT_CLASSIFICATION	9.850535609350856E-6	TEST
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999988401396297	WITHOUT_CLASSIFICATION	1.159860370366761E-6	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999817752948766	WITHOUT_CLASSIFICATION	1.8224705123401573E-5	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999784724261481	WITHOUT_CLASSIFICATION	2.1527573851836322E-5	TEST
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9997699919160447	WITHOUT_CLASSIFICATION	2.300080839553489E-4	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.9999588840879812	WITHOUT_CLASSIFICATION	4.111591201885068E-5	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999382359575402	WITHOUT_CLASSIFICATION	6.176404245982484E-5	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999793212232007	WITHOUT_CLASSIFICATION	2.067877679935367E-5	TEST
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999982495920148	WITHOUT_CLASSIFICATION	1.7504079851848273E-6	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999673553645454	WITHOUT_CLASSIFICATION	3.2644635454674836E-5	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999673553645454	WITHOUT_CLASSIFICATION	3.2644635454674836E-5	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999673553645454	WITHOUT_CLASSIFICATION	3.2644635454674836E-5	TEST
// compile into array	WITHOUT_CLASSIFICATION	0.9999743279123882	WITHOUT_CLASSIFICATION	2.5672087611858355E-5	TEST
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999982597949421	WITHOUT_CLASSIFICATION	1.7402050579646415E-6	TEST
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.999991130071193	WITHOUT_CLASSIFICATION	8.869928806990338E-6	TEST
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999594771570799	WITHOUT_CLASSIFICATION	4.052284292014559E-5	TEST
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999810989447107	WITHOUT_CLASSIFICATION	1.8901055289230728E-5	TEST
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999779376454907	WITHOUT_CLASSIFICATION	2.206235450933598E-5	TEST
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999978175036522	WITHOUT_CLASSIFICATION	2.182496347759472E-6	TEST
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9998447472861133	WITHOUT_CLASSIFICATION	1.5525271388678837E-4	TEST
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999580996379747	WITHOUT_CLASSIFICATION	4.190036202528739E-5	TEST
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999930573423587	WITHOUT_CLASSIFICATION	6.942657641378138E-6	TEST
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999877061992657	WITHOUT_CLASSIFICATION	1.2293800734321206E-5	TEST
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999263103431019	WITHOUT_CLASSIFICATION	7.368965689812616E-5	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999940524624973	WITHOUT_CLASSIFICATION	5.9475375026516115E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999941415468541	WITHOUT_CLASSIFICATION	5.858453145932529E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999941415468541	WITHOUT_CLASSIFICATION	5.858453145932529E-6	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.999936691237154	WITHOUT_CLASSIFICATION	6.330876284592155E-5	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999238350247671	WITHOUT_CLASSIFICATION	7.616497523285909E-5	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999902763837688	WITHOUT_CLASSIFICATION	9.723616231256154E-6	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999841619922484	WITHOUT_CLASSIFICATION	1.583800775168006E-5	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999949297213045	WITHOUT_CLASSIFICATION	5.070278695540112E-6	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.999993553646292	WITHOUT_CLASSIFICATION	6.446353707943347E-6	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999901494643907	WITHOUT_CLASSIFICATION	9.850535609350856E-6	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999784724261481	WITHOUT_CLASSIFICATION	2.1527573851836322E-5	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999817752948766	WITHOUT_CLASSIFICATION	1.8224705123401573E-5	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.9999588840879812	WITHOUT_CLASSIFICATION	4.111591201885068E-5	TEST
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999904740423774	WITHOUT_CLASSIFICATION	9.52595762273088E-6	TEST
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999917956216403	WITHOUT_CLASSIFICATION	8.204378359683134E-6	TEST
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999839010476048	WITHOUT_CLASSIFICATION	1.6098952395255926E-5	TEST
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999861949975071	WITHOUT_CLASSIFICATION	1.3805002492984061E-5	TEST
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.999954022930148	WITHOUT_CLASSIFICATION	4.597706985200883E-5	TEST
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999885187653511	WITHOUT_CLASSIFICATION	1.1481234649030047E-5	TEST
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999841088579773	WITHOUT_CLASSIFICATION	1.5891142022724165E-5	TEST
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9996599170009491	WITHOUT_CLASSIFICATION	3.4008299905096084E-4	TEST
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999580379745008	WITHOUT_CLASSIFICATION	4.1962025499206265E-5	TEST
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.999998946291308	WITHOUT_CLASSIFICATION	1.0537086919260309E-6	TEST
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999862279754641	WITHOUT_CLASSIFICATION	1.3772024535975361E-5	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999802685069076	WITHOUT_CLASSIFICATION	1.9731493092415313E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999520089188614	WITHOUT_CLASSIFICATION	4.7991081138684843E-5	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999849106917227	WITHOUT_CLASSIFICATION	1.5089308277422535E-5	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999925336879965	WITHOUT_CLASSIFICATION	7.466312003445825E-6	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999792246955617	WITHOUT_CLASSIFICATION	2.077530443838462E-5	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.999971508925008	WITHOUT_CLASSIFICATION	2.849107499197438E-5	TEST
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999872625562651	WITHOUT_CLASSIFICATION	1.273744373473958E-5	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999956765120496	WITHOUT_CLASSIFICATION	4.323487950447291E-6	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.999986317531283	WITHOUT_CLASSIFICATION	1.368246871696731E-5	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999890497520435	WITHOUT_CLASSIFICATION	1.0950247956486352E-5	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999953798988285	WITHOUT_CLASSIFICATION	4.6201011715510595E-6	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999953798988285	WITHOUT_CLASSIFICATION	4.6201011715510595E-6	TEST
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9997751211248781	WITHOUT_CLASSIFICATION	2.2487887512185177E-4	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999885900790245	WITHOUT_CLASSIFICATION	1.1409920975480073E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
/*arg2*/	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999885900790245	WITHOUT_CLASSIFICATION	1.1409920975480073E-5	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999658621036139	WITHOUT_CLASSIFICATION	3.413789638603702E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999970361662532	WITHOUT_CLASSIFICATION	2.9638337467779893E-6	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999970361662532	WITHOUT_CLASSIFICATION	2.9638337467779893E-6	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999920492603909	WITHOUT_CLASSIFICATION	7.950739609152819E-6	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999920492603909	WITHOUT_CLASSIFICATION	7.950739609152819E-6	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9999674080383762	WITHOUT_CLASSIFICATION	3.2591961623703436E-5	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9999674080383762	WITHOUT_CLASSIFICATION	3.2591961623703436E-5	TEST
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.999967963812285	WITHOUT_CLASSIFICATION	3.2036187714960664E-5	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999847007371242	WITHOUT_CLASSIFICATION	1.5299262875831787E-5	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999847007371242	WITHOUT_CLASSIFICATION	1.5299262875831787E-5	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999861207850477	WITHOUT_CLASSIFICATION	1.3879214952246241E-5	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999861207850477	WITHOUT_CLASSIFICATION	1.3879214952246241E-5	TEST
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999738953050492	WITHOUT_CLASSIFICATION	2.610469495079186E-5	TEST
// call site	WITHOUT_CLASSIFICATION	0.999992919755161	WITHOUT_CLASSIFICATION	7.080244838995426E-6	TEST
// call site	WITHOUT_CLASSIFICATION	0.999992919755161	WITHOUT_CLASSIFICATION	7.080244838995426E-6	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999807349497654	WITHOUT_CLASSIFICATION	1.9265050234599472E-5	TEST
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.999946444929144	WITHOUT_CLASSIFICATION	5.3555070855919715E-5	TEST
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999903693831987	WITHOUT_CLASSIFICATION	9.630616801258632E-6	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999807349497654	WITHOUT_CLASSIFICATION	1.9265050234599472E-5	TEST
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999735160328554	WITHOUT_CLASSIFICATION	2.6483967144495824E-5	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999792809585486	WITHOUT_CLASSIFICATION	2.0719041451451046E-5	TEST
// args	WITHOUT_CLASSIFICATION	0.9999677881336295	WITHOUT_CLASSIFICATION	3.2211866370537655E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999684519714471	WITHOUT_CLASSIFICATION	3.1548028552812536E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999684519714471	WITHOUT_CLASSIFICATION	3.1548028552812536E-5	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999942494783488	WITHOUT_CLASSIFICATION	5.7505216512277E-6	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999266873245864	WITHOUT_CLASSIFICATION	7.331267541360004E-5	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.9999266873245864	WITHOUT_CLASSIFICATION	7.33126754136001E-5	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.9998705756141176	WITHOUT_CLASSIFICATION	1.2942438588242104E-4	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.999960343107365	WITHOUT_CLASSIFICATION	3.965689263496092E-5	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.999984671568281	WITHOUT_CLASSIFICATION	1.532843171905346E-5	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.999984671568281	WITHOUT_CLASSIFICATION	1.532843171905346E-5	TEST
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999948266395119	WITHOUT_CLASSIFICATION	5.173360488118086E-6	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// args	WITHOUT_CLASSIFICATION	0.9999677881336295	WITHOUT_CLASSIFICATION	3.2211866370537655E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999684519714471	WITHOUT_CLASSIFICATION	3.1548028552812536E-5	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999942494783488	WITHOUT_CLASSIFICATION	5.7505216512277E-6	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999266873245864	WITHOUT_CLASSIFICATION	7.331267541360004E-5	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.9999266873245864	WITHOUT_CLASSIFICATION	7.33126754136001E-5	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.9998705756141176	WITHOUT_CLASSIFICATION	1.2942438588242104E-4	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999731552661952	WITHOUT_CLASSIFICATION	2.6844733804781874E-5	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.999993361858461	WITHOUT_CLASSIFICATION	6.638141538978185E-6	TEST
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.999981912270082	WITHOUT_CLASSIFICATION	1.8087729917896034E-5	TEST
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999685864025524	WITHOUT_CLASSIFICATION	3.141359744755723E-5	TEST
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999514918025552	WITHOUT_CLASSIFICATION	4.850819744490738E-5	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999135413935103	WITHOUT_CLASSIFICATION	8.64586064897204E-5	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999197311775538	WITHOUT_CLASSIFICATION	8.02688224460969E-5	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999197311775538	WITHOUT_CLASSIFICATION	8.02688224460969E-5	TEST
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999779668877619	WITHOUT_CLASSIFICATION	2.2033112238121894E-5	TEST
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999674756153015	WITHOUT_CLASSIFICATION	3.252438469850674E-5	TEST
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999674756153015	WITHOUT_CLASSIFICATION	3.252438469850674E-5	TEST
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999689164981801	WITHOUT_CLASSIFICATION	3.1083501819906545E-5	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999674756153015	WITHOUT_CLASSIFICATION	3.252438469850674E-5	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999674756153015	WITHOUT_CLASSIFICATION	3.252438469850674E-5	TEST
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999494322728645	WITHOUT_CLASSIFICATION	5.0567727135539625E-5	TEST
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999495081103842	WITHOUT_CLASSIFICATION	5.0491889615937883E-5	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999685692464366	WITHOUT_CLASSIFICATION	3.143075356337475E-5	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999685692464366	WITHOUT_CLASSIFICATION	3.143075356337475E-5	TEST
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999674756153015	WITHOUT_CLASSIFICATION	3.252438469850674E-5	TEST
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999828137745498	WITHOUT_CLASSIFICATION	1.718622545020714E-5	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.999960343107365	WITHOUT_CLASSIFICATION	3.965689263496092E-5	TEST
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999941168471341	WITHOUT_CLASSIFICATION	5.883152865834378E-6	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9998632581859181	WITHOUT_CLASSIFICATION	1.3674181408178534E-4	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999696526407572	WITHOUT_CLASSIFICATION	3.034735924283145E-5	TEST
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.999982298663366	WITHOUT_CLASSIFICATION	1.770133663405773E-5	TEST
// load Object under value	WITHOUT_CLASSIFICATION	0.9999478608336587	WITHOUT_CLASSIFICATION	5.2139166341274634E-5	TEST
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999241576728244	WITHOUT_CLASSIFICATION	7.584232717570632E-5	TEST
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999821801974264	WITHOUT_CLASSIFICATION	1.7819802573584858E-5	TEST
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999168171974775	WITHOUT_CLASSIFICATION	8.318280252242696E-5	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999826197908348	WITHOUT_CLASSIFICATION	1.7380209165155522E-5	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999826197908348	WITHOUT_CLASSIFICATION	1.7380209165155522E-5	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999611447604664	WITHOUT_CLASSIFICATION	3.885523953365631E-5	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999611447604664	WITHOUT_CLASSIFICATION	3.885523953365631E-5	TEST
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999907128079752	WITHOUT_CLASSIFICATION	9.287192024751278E-6	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999921964112176	WITHOUT_CLASSIFICATION	7.803588782348334E-6	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999921964112176	WITHOUT_CLASSIFICATION	7.803588782348334E-6	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999921964112176	WITHOUT_CLASSIFICATION	7.803588782348334E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999679316710027	WITHOUT_CLASSIFICATION	3.2068328997228995E-5	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999285111402259	WITHOUT_CLASSIFICATION	7.1488859774202E-5	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999285111402259	WITHOUT_CLASSIFICATION	7.1488859774202E-5	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999905160071285	WITHOUT_CLASSIFICATION	9.483992871549026E-6	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.9999943100040241	WITHOUT_CLASSIFICATION	5.6899959758868884E-6	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999623080764806	WITHOUT_CLASSIFICATION	3.769192351943156E-5	TEST
// skip catch block	WITHOUT_CLASSIFICATION	0.9999909627468411	WITHOUT_CLASSIFICATION	9.037253158933258E-6	TEST
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999493461174578	WITHOUT_CLASSIFICATION	5.065388254211097E-5	TEST
// next jump	WITHOUT_CLASSIFICATION	0.9999913034809516	WITHOUT_CLASSIFICATION	8.696519048469754E-6	TEST
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9986311608035371	WITHOUT_CLASSIFICATION	0.0013688391964629704	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999520089188614	WITHOUT_CLASSIFICATION	4.7991081138684843E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999520089188614	WITHOUT_CLASSIFICATION	4.7991081138684843E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999679316710027	WITHOUT_CLASSIFICATION	3.2068328997228995E-5	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999905160071285	WITHOUT_CLASSIFICATION	9.483992871549026E-6	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999886962229718	WITHOUT_CLASSIFICATION	1.1303777028185832E-5	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.9999943100040241	WITHOUT_CLASSIFICATION	5.6899959758868884E-6	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999623080764806	WITHOUT_CLASSIFICATION	3.769192351943156E-5	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999891205871551	WITHOUT_CLASSIFICATION	1.0879412845003721E-5	TEST
// break jump	WITHOUT_CLASSIFICATION	0.9999898129026574	WITHOUT_CLASSIFICATION	1.018709734258729E-5	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998066797323154	WITHOUT_CLASSIFICATION	1.933202676844974E-4	TEST
//[reg]	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.999893755904117	WITHOUT_CLASSIFICATION	1.0624409588294996E-4	TEST
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999940255032755	WITHOUT_CLASSIFICATION	5.9744967243686555E-6	TEST
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999911662744473	WITHOUT_CLASSIFICATION	8.833725552714102E-6	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999891205871551	WITHOUT_CLASSIFICATION	1.0879412845003721E-5	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999226431129014	WITHOUT_CLASSIFICATION	7.735688709858297E-5	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999226431129014	WITHOUT_CLASSIFICATION	7.735688709858297E-5	TEST
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999506356022547	WITHOUT_CLASSIFICATION	4.936439774528205E-5	TEST
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999923425141988	WITHOUT_CLASSIFICATION	7.657485801230316E-6	TEST
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999917833453721	WITHOUT_CLASSIFICATION	8.216654627801205E-6	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999684477218245	WITHOUT_CLASSIFICATION	3.155227817544227E-5	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999706308451409	WITHOUT_CLASSIFICATION	2.9369154859088605E-5	TEST
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.999989822399883	WITHOUT_CLASSIFICATION	1.0177600116993553E-5	TEST
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999869518710442	WITHOUT_CLASSIFICATION	1.304812895577504E-5	TEST
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999616932615155	WITHOUT_CLASSIFICATION	3.830673848439463E-5	TEST
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999929625636288	WITHOUT_CLASSIFICATION	7.037436371182262E-6	TEST
// false // zero	WITHOUT_CLASSIFICATION	0.9999919087873551	WITHOUT_CLASSIFICATION	8.091212644856733E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999677636942554	WITHOUT_CLASSIFICATION	3.223630574447426E-5	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999684477218245	WITHOUT_CLASSIFICATION	3.155227817544227E-5	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999706308451409	WITHOUT_CLASSIFICATION	2.9369154859088605E-5	TEST
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999921456540486	WITHOUT_CLASSIFICATION	7.85434595138875E-6	TEST
// push false	WITHOUT_CLASSIFICATION	0.9999900179730736	WITHOUT_CLASSIFICATION	9.982026926355136E-6	TEST
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.999560448769399	WITHOUT_CLASSIFICATION	4.395512306010262E-4	TEST
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9996997853068419	WITHOUT_CLASSIFICATION	3.00214693158024E-4	TEST
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999628328850015	WITHOUT_CLASSIFICATION	3.7167114998496015E-5	TEST
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.999560448769399	WITHOUT_CLASSIFICATION	4.395512306010262E-4	TEST
//[C]	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
// push true	WITHOUT_CLASSIFICATION	0.9999913590859228	WITHOUT_CLASSIFICATION	8.640914077192613E-6	TEST
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999608376512165	WITHOUT_CLASSIFICATION	3.9162348783507015E-5	TEST
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9996997853068419	WITHOUT_CLASSIFICATION	3.00214693158024E-4	TEST
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.999560448769399	WITHOUT_CLASSIFICATION	4.395512306010262E-4	TEST
//[boolean]	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999788764280747	WITHOUT_CLASSIFICATION	2.1123571925202704E-5	TEST
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999228832957608	WITHOUT_CLASSIFICATION	7.711670423918297E-5	TEST
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9998621334368952	WITHOUT_CLASSIFICATION	1.3786656310485774E-4	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999985153832642	WITHOUT_CLASSIFICATION	1.4846167357260413E-6	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999894949145638	WITHOUT_CLASSIFICATION	1.0505085436299068E-5	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999909697617753	WITHOUT_CLASSIFICATION	9.030238224732365E-6	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999902152544482	WITHOUT_CLASSIFICATION	9.784745551798793E-6	TEST
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999642936900257	WITHOUT_CLASSIFICATION	3.5706309974300364E-5	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999894949145638	WITHOUT_CLASSIFICATION	1.0505085436299068E-5	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999909697617753	WITHOUT_CLASSIFICATION	9.030238224732365E-6	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999902152544482	WITHOUT_CLASSIFICATION	9.784745551798793E-6	TEST
// finally with exception	WITHOUT_CLASSIFICATION	0.9998741957358599	WITHOUT_CLASSIFICATION	1.2580426414009739E-4	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999963430338787	WITHOUT_CLASSIFICATION	3.656966121141229E-6	TEST
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999760948930554	WITHOUT_CLASSIFICATION	2.390510694461431E-5	TEST
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9997674940121435	WITHOUT_CLASSIFICATION	2.3250598785656742E-4	TEST
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999263738909645	WITHOUT_CLASSIFICATION	7.36261090355749E-5	TEST
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999689876029336	WITHOUT_CLASSIFICATION	3.101239706639645E-5	TEST
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999963423150393	WITHOUT_CLASSIFICATION	3.6576849607350173E-6	TEST
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999957271499167	WITHOUT_CLASSIFICATION	4.272850083339486E-6	TEST
// script object	WITHOUT_CLASSIFICATION	0.9999837540810025	WITHOUT_CLASSIFICATION	1.6245918997516704E-5	TEST
// arities	WITHOUT_CLASSIFICATION	0.9999673553645454	WITHOUT_CLASSIFICATION	3.2644635454674836E-5	TEST
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9915131834741363	WITHOUT_CLASSIFICATION	0.008486816525863722	TEST
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999694517568308	WITHOUT_CLASSIFICATION	3.054824316914255E-5	TEST
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999777784972097	WITHOUT_CLASSIFICATION	2.2221502790366497E-5	TEST
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999944459882937	WITHOUT_CLASSIFICATION	5.554011706319559E-6	TEST
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9970419734056496	WITHOUT_CLASSIFICATION	0.0029580265943504156	TEST
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999373274393811	WITHOUT_CLASSIFICATION	6.267256061881332E-5	TEST
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999835091923658	WITHOUT_CLASSIFICATION	1.6490807634191234E-5	TEST
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999327672974219	WITHOUT_CLASSIFICATION	6.723270257813567E-5	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999852309299505	WITHOUT_CLASSIFICATION	1.4769070049575566E-5	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.999983981070887	WITHOUT_CLASSIFICATION	1.6018929113059233E-5	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999882730612317	WITHOUT_CLASSIFICATION	1.172693876838336E-5	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999884721247562	WITHOUT_CLASSIFICATION	1.1527875243803001E-5	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999884721247562	WITHOUT_CLASSIFICATION	1.1527875243803001E-5	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999459888369807	WITHOUT_CLASSIFICATION	5.4011163019367484E-5	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999459888369807	WITHOUT_CLASSIFICATION	5.4011163019367484E-5	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999697305435077	WITHOUT_CLASSIFICATION	3.0269456492376663E-5	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999697305435077	WITHOUT_CLASSIFICATION	3.0269456492376663E-5	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.999948756039322	WITHOUT_CLASSIFICATION	5.1243960678071765E-5	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999967843152825	WITHOUT_CLASSIFICATION	3.21568471752566E-6	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999969685643159	WITHOUT_CLASSIFICATION	3.031435684028489E-6	TEST
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999916859309933	WITHOUT_CLASSIFICATION	8.314069006714272E-6	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999951730549302	WITHOUT_CLASSIFICATION	4.826945069782466E-6	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999645043201948	WITHOUT_CLASSIFICATION	3.549567980523918E-5	TEST
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999788748006466	WITHOUT_CLASSIFICATION	2.1125199353361847E-5	TEST
// then optional args	WITHOUT_CLASSIFICATION	0.9999892890222427	WITHOUT_CLASSIFICATION	1.0710977757331845E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999520089188614	WITHOUT_CLASSIFICATION	4.7991081138684843E-5	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.999948756039322	WITHOUT_CLASSIFICATION	5.1243960678071765E-5	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999967843152825	WITHOUT_CLASSIFICATION	3.21568471752566E-6	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999969685643159	WITHOUT_CLASSIFICATION	3.031435684028489E-6	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999951730549302	WITHOUT_CLASSIFICATION	4.826945069782466E-6	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999645043201948	WITHOUT_CLASSIFICATION	3.549567980523918E-5	TEST
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999534538086421	WITHOUT_CLASSIFICATION	4.6546191357905065E-5	TEST
// finally, post args	WITHOUT_CLASSIFICATION	0.9999745814743886	WITHOUT_CLASSIFICATION	2.541852561150301E-5	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9992355590965932	WITHOUT_CLASSIFICATION	7.644409034066891E-4	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9992355590965932	WITHOUT_CLASSIFICATION	7.644409034066891E-4	TEST
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999869417855095	WITHOUT_CLASSIFICATION	1.3058214490490494E-5	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9998572527683985	WITHOUT_CLASSIFICATION	1.4274723160147447E-4	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999929120206226	WITHOUT_CLASSIFICATION	7.087979377374999E-6	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999888748784188	WITHOUT_CLASSIFICATION	1.1125121581165718E-5	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999888748784188	WITHOUT_CLASSIFICATION	1.1125121581165718E-5	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999545438918777	WITHOUT_CLASSIFICATION	4.5456108122283804E-5	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9998159593215266	WITHOUT_CLASSIFICATION	1.840406784733512E-4	TEST
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.999991581940824	WITHOUT_CLASSIFICATION	8.41805917589662E-6	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999833260219537	WITHOUT_CLASSIFICATION	1.6673978046319153E-5	TEST
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999969894107181	WITHOUT_CLASSIFICATION	3.0105892818830797E-6	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999849106917227	WITHOUT_CLASSIFICATION	1.5089308277422535E-5	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999925336879965	WITHOUT_CLASSIFICATION	7.466312003445825E-6	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999792246955617	WITHOUT_CLASSIFICATION	2.077530443838462E-5	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.999971508925008	WITHOUT_CLASSIFICATION	2.849107499197438E-5	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.999986317531283	WITHOUT_CLASSIFICATION	1.368246871696731E-5	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999890497520435	WITHOUT_CLASSIFICATION	1.0950247956486352E-5	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999545438918777	WITHOUT_CLASSIFICATION	4.5456108122283804E-5	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9998159593215266	WITHOUT_CLASSIFICATION	1.840406784733512E-4	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999833260219537	WITHOUT_CLASSIFICATION	1.6673978046319153E-5	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999963247733354	WITHOUT_CLASSIFICATION	3.6752266645138662E-6	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999929120206226	WITHOUT_CLASSIFICATION	7.087979377374999E-6	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999929120206226	WITHOUT_CLASSIFICATION	7.087979377374999E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999677636942554	WITHOUT_CLASSIFICATION	3.223630574447426E-5	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999677636942554	WITHOUT_CLASSIFICATION	3.223630574447426E-5	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999831569380778	WITHOUT_CLASSIFICATION	1.6843061922230487E-5	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999831569380778	WITHOUT_CLASSIFICATION	1.6843061922230487E-5	TEST
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999925327018773	WITHOUT_CLASSIFICATION	7.467298122638244E-6	TEST
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999926240949573	WITHOUT_CLASSIFICATION	7.375905042706195E-6	TEST
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.999935192939063	WITHOUT_CLASSIFICATION	6.480706093703247E-5	TEST
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999463711264995	WITHOUT_CLASSIFICATION	5.362887350054682E-5	TEST
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999906699649428	WITHOUT_CLASSIFICATION	9.330035057222527E-6	TEST
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999816088472495	WITHOUT_CLASSIFICATION	1.8391152750493437E-5	TEST
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999777772942463	WITHOUT_CLASSIFICATION	2.222270575379334E-5	TEST
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999795476673331	WITHOUT_CLASSIFICATION	2.045233266684239E-5	TEST
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999723119860394	WITHOUT_CLASSIFICATION	2.768801396050018E-5	TEST
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999802685069076	WITHOUT_CLASSIFICATION	1.9731493092415313E-5	TEST
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999626901888596	WITHOUT_CLASSIFICATION	3.7309811140422996E-5	TEST
// verify the class	WITHOUT_CLASSIFICATION	0.9999971870200695	WITHOUT_CLASSIFICATION	2.8129799305227297E-6	TEST
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999762124699624	WITHOUT_CLASSIFICATION	2.3787530037557794E-5	TEST
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999934222605692	WITHOUT_CLASSIFICATION	6.5777394306982015E-6	TEST
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999872874418084	WITHOUT_CLASSIFICATION	1.2712558191486883E-5	TEST
// thread context	WITHOUT_CLASSIFICATION	0.9999923122025046	WITHOUT_CLASSIFICATION	7.687797495406975E-6	TEST
// line number	WITHOUT_CLASSIFICATION	0.9999919440573141	WITHOUT_CLASSIFICATION	8.05594268583415E-6	TEST
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999542114226886	WITHOUT_CLASSIFICATION	4.578857731142874E-5	TEST
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999449848866651	WITHOUT_CLASSIFICATION	5.5015113335019884E-5	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999925336879965	WITHOUT_CLASSIFICATION	7.466312003445825E-6	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.999971508925008	WITHOUT_CLASSIFICATION	2.849107499197438E-5	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999953798988285	WITHOUT_CLASSIFICATION	4.6201011715510595E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999684519714471	WITHOUT_CLASSIFICATION	3.1548028552812536E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999684519714471	WITHOUT_CLASSIFICATION	3.1548028552812536E-5	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999963247733354	WITHOUT_CLASSIFICATION	3.6752266645138662E-6	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999929120206226	WITHOUT_CLASSIFICATION	7.087979377374999E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999677636942554	WITHOUT_CLASSIFICATION	3.223630574447426E-5	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999831569380778	WITHOUT_CLASSIFICATION	1.6843061922230487E-5	TEST
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9998022671471481	WITHOUT_CLASSIFICATION	1.9773285285177593E-4	TEST
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9977721021255236	WITHOUT_CLASSIFICATION	0.002227897874476456	TEST
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999824911171398	WITHOUT_CLASSIFICATION	1.750888286013362E-5	TEST
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9997505587084843	WITHOUT_CLASSIFICATION	2.4944129151577516E-4	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999812592270948	WITHOUT_CLASSIFICATION	1.8740772905205952E-5	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999812592270948	WITHOUT_CLASSIFICATION	1.8740772905205952E-5	TEST
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.999971818262798	WITHOUT_CLASSIFICATION	2.8181737201984713E-5	TEST
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999796559164641	WITHOUT_CLASSIFICATION	2.0344083535813253E-5	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999767641099182	WITHOUT_CLASSIFICATION	2.3235890081859698E-5	TEST
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999750647928979	WITHOUT_CLASSIFICATION	2.493520710212886E-5	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999958207830746	WITHOUT_CLASSIFICATION	4.1792169254212964E-6	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999958207830746	WITHOUT_CLASSIFICATION	4.1792169254212964E-6	TEST
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999031556870639	WITHOUT_CLASSIFICATION	9.684431293602243E-5	TEST
// normal closure	WITHOUT_CLASSIFICATION	0.9999896826625266	WITHOUT_CLASSIFICATION	1.0317337473471002E-5	TEST
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999719158481104	WITHOUT_CLASSIFICATION	2.808415188956928E-5	TEST
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9984848524572373	WITHOUT_CLASSIFICATION	0.001515147542762776	TEST
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999842939706713	WITHOUT_CLASSIFICATION	1.5706029328664417E-5	TEST
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999891197819817	WITHOUT_CLASSIFICATION	1.0880218018362389E-5	TEST
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999796445549575	WITHOUT_CLASSIFICATION	2.0355445042480266E-5	TEST
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999824611437915	WITHOUT_CLASSIFICATION	1.7538856208447726E-5	TEST
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9999855515257539	WITHOUT_CLASSIFICATION	1.4448474246129532E-5	TEST
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9910784228275032	WITHOUT_CLASSIFICATION	0.008921577172496772	TEST
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9998563325585191	WITHOUT_CLASSIFICATION	1.4366744148091662E-4	TEST
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.99993695196651	WITHOUT_CLASSIFICATION	6.30480334899723E-5	TEST
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999999333594013	WITHOUT_CLASSIFICATION	6.66405986383117E-8	TEST
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999905856348201	WITHOUT_CLASSIFICATION	9.414365179958777E-6	TEST
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9997633829112802	WITHOUT_CLASSIFICATION	2.3661708871973585E-4	TEST
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.999992311476968	WITHOUT_CLASSIFICATION	7.688523031974373E-6	TEST
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999848671457688	WITHOUT_CLASSIFICATION	1.5132854231263538E-5	TEST
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999911821587084	WITHOUT_CLASSIFICATION	8.817841291675146E-6	TEST
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999996675287947	WITHOUT_CLASSIFICATION	3.3247120535172936E-7	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999934957014168	WITHOUT_CLASSIFICATION	6.504298583138506E-6	TEST
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.999880169169584	WITHOUT_CLASSIFICATION	1.1983083041589929E-4	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999873166083916	WITHOUT_CLASSIFICATION	1.2683391608383911E-5	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999873166083916	WITHOUT_CLASSIFICATION	1.2683391608383911E-5	TEST
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999909804525207	WITHOUT_CLASSIFICATION	9.019547479390608E-6	TEST
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999925970202632	WITHOUT_CLASSIFICATION	7.4029797367271535E-6	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999851896783741	WITHOUT_CLASSIFICATION	1.481032162591965E-5	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999851896783741	WITHOUT_CLASSIFICATION	1.481032162591965E-5	TEST
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9998714378735988	WITHOUT_CLASSIFICATION	1.285621264012733E-4	TEST
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.999988887051782	WITHOUT_CLASSIFICATION	1.1112948217928407E-5	TEST
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999354934829287	WITHOUT_CLASSIFICATION	6.450651707145172E-5	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999717886709666	WITHOUT_CLASSIFICATION	2.821132903338661E-5	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999717886709666	WITHOUT_CLASSIFICATION	2.821132903338661E-5	TEST
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999913598043398	WITHOUT_CLASSIFICATION	8.640195660167559E-6	TEST
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999989894899952	WITHOUT_CLASSIFICATION	1.0105100047934716E-6	TEST
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999964882726097	WITHOUT_CLASSIFICATION	3.511727390373245E-6	TEST
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999958011105933	WITHOUT_CLASSIFICATION	4.198889406746653E-6	TEST
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999708034171283	WITHOUT_CLASSIFICATION	2.9196582871720226E-5	TEST
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999932149784474	WITHOUT_CLASSIFICATION	6.7850215526669636E-6	TEST
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999885177432836	WITHOUT_CLASSIFICATION	1.1482256716436165E-5	TEST
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999955268575397	WITHOUT_CLASSIFICATION	4.473142460256806E-6	TEST
// build each "when"	WITHOUT_CLASSIFICATION	0.999992391233487	WITHOUT_CLASSIFICATION	7.608766512885163E-6	TEST
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999651944619801	WITHOUT_CLASSIFICATION	3.480553802003023E-5	TEST
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.999911465055087	WITHOUT_CLASSIFICATION	8.853494491307437E-5	TEST
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999790978335662	WITHOUT_CLASSIFICATION	2.090216643381289E-5	TEST
// close it out	WITHOUT_CLASSIFICATION	0.9999799243463876	WITHOUT_CLASSIFICATION	2.007565361245E-5	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9998732565755271	WITHOUT_CLASSIFICATION	1.267434244730136E-4	TEST
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9999810831777574	WITHOUT_CLASSIFICATION	1.8916822242678668E-5	TEST
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999965321359708	WITHOUT_CLASSIFICATION	3.4678640292125813E-6	TEST
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999928079781911	WITHOUT_CLASSIFICATION	7.192021808952286E-6	TEST
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999850294904464	WITHOUT_CLASSIFICATION	1.4970509553500433E-5	TEST
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999854051551862	WITHOUT_CLASSIFICATION	1.459484481387513E-5	TEST
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999894403065376	WITHOUT_CLASSIFICATION	1.055969346242486E-5	TEST
// Instance method	WITHOUT_CLASSIFICATION	0.9999942958458408	WITHOUT_CLASSIFICATION	5.7041541593315895E-6	TEST
// Class method	WITHOUT_CLASSIFICATION	0.9999948628973816	WITHOUT_CLASSIFICATION	5.137102618331387E-6	TEST
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999652735356239	WITHOUT_CLASSIFICATION	3.472646437617774E-5	TEST
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999835704117956	WITHOUT_CLASSIFICATION	1.6429588204435013E-5	TEST
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999951938821076	WITHOUT_CLASSIFICATION	4.806117892519751E-6	TEST
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999948833548962	WITHOUT_CLASSIFICATION	5.116645103785478E-6	TEST
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9998055468760364	WITHOUT_CLASSIFICATION	1.9445312396360281E-4	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999387277839978	WITHOUT_CLASSIFICATION	6.127221600216604E-5	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999897090611901	WITHOUT_CLASSIFICATION	1.0290938809808496E-5	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999990977551048	WITHOUT_CLASSIFICATION	9.022448952957284E-7	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999987363889338	WITHOUT_CLASSIFICATION	1.2636110662367656E-6	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9998732565755271	WITHOUT_CLASSIFICATION	1.267434244730136E-4	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999387277839978	WITHOUT_CLASSIFICATION	6.127221600216604E-5	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999897090611901	WITHOUT_CLASSIFICATION	1.0290938809808496E-5	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999987363889338	WITHOUT_CLASSIFICATION	1.2636110662367656E-6	TEST
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9998182773606615	WITHOUT_CLASSIFICATION	1.8172263933847473E-4	TEST
// Build the new module	WITHOUT_CLASSIFICATION	0.9999752340127699	WITHOUT_CLASSIFICATION	2.476598723002292E-5	TEST
// Build the module body	WITHOUT_CLASSIFICATION	0.9999890949673725	WITHOUT_CLASSIFICATION	1.090503262748543E-5	TEST
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9998994654409914	WITHOUT_CLASSIFICATION	1.0053455900868598E-4	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999939910301476	WITHOUT_CLASSIFICATION	6.00896985226683E-6	TEST
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999991761301735	WITHOUT_CLASSIFICATION	8.238698264605697E-7	TEST
// get attr	WITHOUT_CLASSIFICATION	0.9999934957014168	WITHOUT_CLASSIFICATION	6.504298583138506E-6	TEST
// call operator	WITHOUT_CLASSIFICATION	0.9999930269522475	WITHOUT_CLASSIFICATION	6.973047752527599E-6	TEST
// set attr	WITHOUT_CLASSIFICATION	0.9999938128383524	WITHOUT_CLASSIFICATION	6.18716164766568E-6	TEST
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.999966452967811	WITHOUT_CLASSIFICATION	3.3547032189091015E-5	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999836021557217	WITHOUT_CLASSIFICATION	1.63978442783349E-5	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999836021557217	WITHOUT_CLASSIFICATION	1.63978442783349E-5	TEST
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999784191227957	WITHOUT_CLASSIFICATION	2.1580877204258925E-5	TEST
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999969600855129	WITHOUT_CLASSIFICATION	3.039914487086666E-6	TEST
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999982498350782	WITHOUT_CLASSIFICATION	1.7501649217713886E-6	TEST
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999935667281493	WITHOUT_CLASSIFICATION	6.433271850683305E-6	TEST
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9998847562788318	WITHOUT_CLASSIFICATION	1.1524372116820978E-4	TEST
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999776856261398	WITHOUT_CLASSIFICATION	2.231437386018261E-5	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999974997395072	WITHOUT_CLASSIFICATION	2.500260492772463E-6	TEST
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999917224155331	WITHOUT_CLASSIFICATION	8.277584466871609E-6	TEST
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999998609834422	WITHOUT_CLASSIFICATION	1.3901655783504406E-7	TEST
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999920590411785	WITHOUT_CLASSIFICATION	7.940958821408751E-6	TEST
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999997681145796	WITHOUT_CLASSIFICATION	2.318854203152918E-7	TEST
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999350786492855	WITHOUT_CLASSIFICATION	6.492135071441843E-5	TEST
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999968345165888	WITHOUT_CLASSIFICATION	3.1654834111543443E-6	TEST
// alu operations	WITHOUT_CLASSIFICATION	0.9999897270407831	WITHOUT_CLASSIFICATION	1.0272959216947716E-5	TEST
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.999998557171872	WITHOUT_CLASSIFICATION	1.442828127926369E-6	TEST
// closure instructions	WITHOUT_CLASSIFICATION	0.9999729397306143	WITHOUT_CLASSIFICATION	2.7060269385679554E-5	TEST
// eval instructions	WITHOUT_CLASSIFICATION	0.9999895778146102	WITHOUT_CLASSIFICATION	1.0422185389863112E-5	TEST
// def instructions	WITHOUT_CLASSIFICATION	0.9999894932059867	WITHOUT_CLASSIFICATION	1.0506794013244357E-5	TEST
// exception instructions	WITHOUT_CLASSIFICATION	0.9999745249025319	WITHOUT_CLASSIFICATION	2.5475097468064553E-5	TEST
// Loads	WITHOUT_CLASSIFICATION	0.9999673553645454	WITHOUT_CLASSIFICATION	3.2644635454674836E-5	TEST
// Stores	WITHOUT_CLASSIFICATION	0.9999673553645454	WITHOUT_CLASSIFICATION	3.2644635454674836E-5	TEST
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999935578188707	WITHOUT_CLASSIFICATION	6.442181129290617E-6	TEST
// others	WITHOUT_CLASSIFICATION	0.9999685486940634	WITHOUT_CLASSIFICATION	3.145130593660568E-5	TEST
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999769031943476	WITHOUT_CLASSIFICATION	2.3096805652361302E-5	TEST
// optimization guards	WITHOUT_CLASSIFICATION	0.9999731876214604	WITHOUT_CLASSIFICATION	2.6812378539588716E-5	TEST
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9997399636843924	WITHOUT_CLASSIFICATION	2.600363156075294E-4	TEST
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999960553761815	WITHOUT_CLASSIFICATION	3.944623818552764E-6	TEST
// scripts	WITHOUT_CLASSIFICATION	0.99996743878214	WITHOUT_CLASSIFICATION	3.25612178599718E-5	TEST
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999949173313164	WITHOUT_CLASSIFICATION	5.082668683676168E-6	TEST
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999931427826362	WITHOUT_CLASSIFICATION	6.857217363763779E-6	TEST
// methods and closures	WITHOUT_CLASSIFICATION	0.9999949358711224	WITHOUT_CLASSIFICATION	5.064128877518957E-6	TEST
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999548454814082	WITHOUT_CLASSIFICATION	4.515451859175606E-5	TEST
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.999905992390113	WITHOUT_CLASSIFICATION	9.400760988705108E-5	TEST
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999373521756645	WITHOUT_CLASSIFICATION	6.264782433542125E-5	TEST
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9996868878501013	WITHOUT_CLASSIFICATION	3.131121498986972E-4	TEST
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999062750965442	WITHOUT_CLASSIFICATION	9.372490345573244E-5	TEST
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999222771588577	WITHOUT_CLASSIFICATION	7.772284114216202E-5	TEST
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999967629081379	WITHOUT_CLASSIFICATION	3.2370918620792677E-6	TEST
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999716222737857	WITHOUT_CLASSIFICATION	2.837772621434061E-5	TEST
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999559801591624	WITHOUT_CLASSIFICATION	4.40198408375167E-5	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.999915133053832	WITHOUT_CLASSIFICATION	8.486694616800154E-5	TEST
// Readline	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999932725907696	WITHOUT_CLASSIFICATION	6.72740923043203E-6	TEST
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999572761849064	WITHOUT_CLASSIFICATION	4.272381509373632E-5	TEST
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999940006336798	WITHOUT_CLASSIFICATION	5.999366320141165E-6	TEST
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.999997915974661	WITHOUT_CLASSIFICATION	2.0840253389378866E-6	TEST
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999997304318297	WITHOUT_CLASSIFICATION	2.6956817034957354E-7	TEST
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999870825967246	WITHOUT_CLASSIFICATION	1.2917403275301355E-5	TEST
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999106704182111	WITHOUT_CLASSIFICATION	8.932958178880853E-5	TEST
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9998414699661626	WITHOUT_CLASSIFICATION	1.5853003383744613E-4	TEST
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999987454004631	WITHOUT_CLASSIFICATION	1.254599536906767E-6	TEST
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999104495413373	WITHOUT_CLASSIFICATION	8.955045866264409E-5	TEST
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9995244136062138	WITHOUT_CLASSIFICATION	4.7558639378621166E-4	TEST
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9975206435269507	WITHOUT_CLASSIFICATION	0.0024793564730492264	TEST
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999912195484067	WITHOUT_CLASSIFICATION	8.780451593306454E-5	TEST
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999897570300104	WITHOUT_CLASSIFICATION	1.0242969989664986E-5	TEST
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999049425770737	WITHOUT_CLASSIFICATION	9.505742292620611E-5	TEST
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9999386975703201	WITHOUT_CLASSIFICATION	6.130242967992587E-5	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9982311328627066	WITHOUT_CLASSIFICATION	0.0017688671372933249	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9982311328627066	WITHOUT_CLASSIFICATION	0.0017688671372933249	TEST
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999912195484067	WITHOUT_CLASSIFICATION	8.780451593306454E-5	TEST
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.999673569826616	WITHOUT_CLASSIFICATION	3.264301733839073E-4	TEST
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999122971447437	WITHOUT_CLASSIFICATION	8.77028552563411E-5	TEST
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999130051873492	WITHOUT_CLASSIFICATION	8.69948126509168E-5	TEST
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999605991268348	WITHOUT_CLASSIFICATION	3.940087316520833E-5	TEST
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9997539137271375	WITHOUT_CLASSIFICATION	2.460862728624822E-4	TEST
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9998822987796233	WITHOUT_CLASSIFICATION	1.1770122037667098E-4	TEST
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999119186858832	WITHOUT_CLASSIFICATION	8.808131411674035E-5	TEST
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999321627771932	WITHOUT_CLASSIFICATION	6.783722280685167E-5	TEST
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.999987380026853	WITHOUT_CLASSIFICATION	1.2619973146980214E-5	TEST
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9998836836797231	WITHOUT_CLASSIFICATION	1.1631632027695616E-4	TEST
// class or module	WITHOUT_CLASSIFICATION	0.9999929502729461	WITHOUT_CLASSIFICATION	7.049727053972883E-6	TEST
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999858311623161	WITHOUT_CLASSIFICATION	1.4168837683856648E-5	TEST
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999648853242811	WITHOUT_CLASSIFICATION	3.5114675718929896E-5	TEST
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.999970534982486	WITHOUT_CLASSIFICATION	2.9465017513991363E-5	TEST
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999902441652448	WITHOUT_CLASSIFICATION	9.755834755188066E-6	TEST
// IN changed!	WITHOUT_CLASSIFICATION	0.9999895359995763	WITHOUT_CLASSIFICATION	1.0464000423804175E-5	TEST
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999379551635857	WITHOUT_CLASSIFICATION	6.204483641424688E-5	TEST
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999708368806711	WITHOUT_CLASSIFICATION	2.9163119328799024E-5	TEST
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.999659842812405	WITHOUT_CLASSIFICATION	3.40157187595002E-4	TEST
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999119665787197	WITHOUT_CLASSIFICATION	8.80334212802658E-5	TEST
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.999994732173646	WITHOUT_CLASSIFICATION	5.26782635395158E-6	TEST
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.999998122279896	WITHOUT_CLASSIFICATION	1.8777201039462574E-6	TEST
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999970128303958	WITHOUT_CLASSIFICATION	2.987169604131241E-6	TEST
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999102854243351	WITHOUT_CLASSIFICATION	8.971457566478598E-5	TEST
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9996990890870868	WITHOUT_CLASSIFICATION	3.0091091291317484E-4	TEST
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9998296978040103	WITHOUT_CLASSIFICATION	1.7030219598960087E-4	TEST
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999114524342995	WITHOUT_CLASSIFICATION	8.854756570059092E-5	TEST
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999797170342762	WITHOUT_CLASSIFICATION	2.0282965723809328E-5	TEST
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999740965134495	WITHOUT_CLASSIFICATION	2.590348655057582E-5	TEST
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999879604634737	WITHOUT_CLASSIFICATION	1.2039536526328351E-5	TEST
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999937842005922	WITHOUT_CLASSIFICATION	6.215799407744912E-6	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999427661250522	WITHOUT_CLASSIFICATION	5.723387494782521E-5	TEST
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.999816285534517	WITHOUT_CLASSIFICATION	1.8371446548296594E-4	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999427661250522	WITHOUT_CLASSIFICATION	5.723387494782521E-5	TEST
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999841435626445	WITHOUT_CLASSIFICATION	1.58564373554191E-5	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.999943382533203	WITHOUT_CLASSIFICATION	5.6617466797024845E-5	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.999943382533203	WITHOUT_CLASSIFICATION	5.6617466797024845E-5	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.999943382533203	WITHOUT_CLASSIFICATION	5.6617466797024845E-5	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999781924279592	WITHOUT_CLASSIFICATION	2.180757204089003E-5	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999781924279592	WITHOUT_CLASSIFICATION	2.180757204089003E-5	TEST
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9996897878009442	WITHOUT_CLASSIFICATION	3.1021219905573867E-4	TEST
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.99997912893824	WITHOUT_CLASSIFICATION	2.087106175997995E-5	TEST
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999730970273971	WITHOUT_CLASSIFICATION	2.690297260286628E-5	TEST
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9999918445438736	WITHOUT_CLASSIFICATION	8.155456126503766E-6	TEST
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999825680830019	WITHOUT_CLASSIFICATION	1.7431916998177288E-5	TEST
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9998199343831046	WITHOUT_CLASSIFICATION	1.8006561689543602E-4	TEST
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999593064103154	WITHOUT_CLASSIFICATION	4.069358968465603E-5	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999741348189625	WITHOUT_CLASSIFICATION	2.5865181037415315E-5	TEST
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9998590118462921	WITHOUT_CLASSIFICATION	1.4098815370787337E-4	TEST
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999868705515241	WITHOUT_CLASSIFICATION	1.3129448475966339E-5	TEST
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.999967380007835	WITHOUT_CLASSIFICATION	3.261999216505993E-5	TEST
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999805882920973	WITHOUT_CLASSIFICATION	1.941170790264835E-5	TEST
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999771316008694	WITHOUT_CLASSIFICATION	2.2868399130654083E-5	TEST
// root-level logic	WITHOUT_CLASSIFICATION	0.9999901348035991	WITHOUT_CLASSIFICATION	9.865196400822207E-6	TEST
// root-level methods	WITHOUT_CLASSIFICATION	0.9999793427062165	WITHOUT_CLASSIFICATION	2.0657293783595923E-5	TEST
// root-level classes	WITHOUT_CLASSIFICATION	0.9999775496969525	WITHOUT_CLASSIFICATION	2.245030304749717E-5	TEST
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999767244362648	WITHOUT_CLASSIFICATION	2.3275563735190178E-5	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999836983503478	WITHOUT_CLASSIFICATION	1.6301649652155065E-5	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999836983503478	WITHOUT_CLASSIFICATION	1.6301649652155065E-5	TEST
// receiver	WITHOUT_CLASSIFICATION	0.999989495779504	WITHOUT_CLASSIFICATION	1.0504220495914199E-5	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999843838829159	WITHOUT_CLASSIFICATION	1.5616117084087916E-5	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999843838829159	WITHOUT_CLASSIFICATION	1.5616117084087916E-5	TEST
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999550883103452	WITHOUT_CLASSIFICATION	4.491168965474792E-5	TEST
// Object[] args	WITHOUT_CLASSIFICATION	0.9999896327617692	WITHOUT_CLASSIFICATION	1.036723823075664E-5	TEST
// load handle	WITHOUT_CLASSIFICATION	0.9999849597534648	WITHOUT_CLASSIFICATION	1.5040246535186763E-5	TEST
// args array	WITHOUT_CLASSIFICATION	0.9999897970491229	WITHOUT_CLASSIFICATION	1.0202950876983812E-5	TEST
// i'th argument	WITHOUT_CLASSIFICATION	0.9999910957662487	WITHOUT_CLASSIFICATION	8.904233751222735E-6	TEST
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999706858826518	WITHOUT_CLASSIFICATION	2.9314117348186416E-5	TEST
// Object arg0	WITHOUT_CLASSIFICATION	0.9999895441425679	WITHOUT_CLASSIFICATION	1.0455857432186964E-5	TEST
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999753460582999	WITHOUT_CLASSIFICATION	2.4653941700082187E-5	TEST
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999350728723911	WITHOUT_CLASSIFICATION	6.492712760883239E-5	TEST
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999940488319102	WITHOUT_CLASSIFICATION	5.951168089805222E-6	TEST
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999846598454677	WITHOUT_CLASSIFICATION	1.5340154532386486E-5	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999645135183863	WITHOUT_CLASSIFICATION	3.548648161360797E-5	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999960905465564	WITHOUT_CLASSIFICATION	3.909453443689123E-6	TEST
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.999985500782161	WITHOUT_CLASSIFICATION	1.4499217838929564E-5	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999741348189625	WITHOUT_CLASSIFICATION	2.5865181037415315E-5	TEST
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9996997853068419	WITHOUT_CLASSIFICATION	3.00214693158024E-4	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999859684467556	WITHOUT_CLASSIFICATION	1.4031553244426696E-5	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999954140084513	WITHOUT_CLASSIFICATION	4.5859915486915686E-6	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999954140084513	WITHOUT_CLASSIFICATION	4.5859915486915686E-6	TEST
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999174042037794	WITHOUT_CLASSIFICATION	8.259579622060811E-5	TEST
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9998390807290841	WITHOUT_CLASSIFICATION	1.60919270915857E-4	TEST
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999952494675923	WITHOUT_CLASSIFICATION	4.750532407732596E-6	TEST
// restore position	WITHOUT_CLASSIFICATION	0.9999898112064622	WITHOUT_CLASSIFICATION	1.0188793537756238E-5	TEST
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999944912420408	WITHOUT_CLASSIFICATION	5.508757959188802E-6	TEST
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999958814384513	WITHOUT_CLASSIFICATION	4.1185615487962615E-6	TEST
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999959087020465	WITHOUT_CLASSIFICATION	4.091297953510045E-6	TEST
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.999038414851974	WITHOUT_CLASSIFICATION	9.615851480259602E-4	TEST
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9998181908994175	WITHOUT_CLASSIFICATION	1.818091005825237E-4	TEST
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999776724645341	WITHOUT_CLASSIFICATION	2.2327535465988652E-5	TEST
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999653382989347	WITHOUT_CLASSIFICATION	3.466170106523541E-5	TEST
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999330130398537	WITHOUT_CLASSIFICATION	6.698696014628407E-5	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999539748560051	WITHOUT_CLASSIFICATION	4.60251439948479E-5	TEST
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999662484359203	WITHOUT_CLASSIFICATION	3.3751564079670454E-5	TEST
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999180838734023	WITHOUT_CLASSIFICATION	8.191612659768296E-5	TEST
// Timeout module methods	WITHOUT_CLASSIFICATION	0.999979460127566	WITHOUT_CLASSIFICATION	2.0539872434045953E-5	TEST
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999894983612467	WITHOUT_CLASSIFICATION	1.0501638753217823E-5	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999688567400103	WITHOUT_CLASSIFICATION	3.11432599896612E-5	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999435950768703	WITHOUT_CLASSIFICATION	5.640492312975206E-5	TEST
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999852315920673	WITHOUT_CLASSIFICATION	1.4768407932682063E-5	TEST
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999965404149724	WITHOUT_CLASSIFICATION	3.4595850276092614E-6	TEST
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999730218398846	WITHOUT_CLASSIFICATION	2.6978160115513904E-5	TEST
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999994660828472	WITHOUT_CLASSIFICATION	5.339171527106584E-7	TEST
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999926300560863	WITHOUT_CLASSIFICATION	7.369943913678882E-6	TEST
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999729176684375	WITHOUT_CLASSIFICATION	2.7082331562449563E-5	TEST
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9998272271331055	WITHOUT_CLASSIFICATION	1.7277286689457982E-4	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9993172120897822	WITHOUT_CLASSIFICATION	6.827879102178196E-4	TEST
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999923928016538	WITHOUT_CLASSIFICATION	7.607198346207246E-6	TEST
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999841504378177	WITHOUT_CLASSIFICATION	1.584956218215656E-5	TEST
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999809148211599	WITHOUT_CLASSIFICATION	1.908517884009329E-5	TEST
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999841417687448	WITHOUT_CLASSIFICATION	1.5858231255175057E-5	TEST
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999786823525622	WITHOUT_CLASSIFICATION	2.1317647437804174E-5	TEST
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999644605422	WITHOUT_CLASSIFICATION	3.5539457799928296E-5	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999578515533659	WITHOUT_CLASSIFICATION	4.21484466340145E-5	TEST
// $blah	WITHOUT_CLASSIFICATION	0.9999673553645454	WITHOUT_CLASSIFICATION	3.2644635454674836E-5	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9993172120897822	WITHOUT_CLASSIFICATION	6.827879102178196E-4	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999914012715584	WITHOUT_CLASSIFICATION	8.598728441514441E-6	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999578515533659	WITHOUT_CLASSIFICATION	4.21484466340145E-5	TEST
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.99995311090631	WITHOUT_CLASSIFICATION	4.688909368992882E-5	TEST
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999852484130277	WITHOUT_CLASSIFICATION	1.4751586972323621E-5	TEST
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999952054909155	WITHOUT_CLASSIFICATION	4.794509084510061E-6	TEST
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999667090317037	WITHOUT_CLASSIFICATION	3.3290968296249864E-5	TEST
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999693290316976	WITHOUT_CLASSIFICATION	3.0670968302398064E-5	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999964571626723	WITHOUT_CLASSIFICATION	3.5428373276654094E-6	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999964571626723	WITHOUT_CLASSIFICATION	3.5428373276654094E-6	TEST
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.99976251800946	WITHOUT_CLASSIFICATION	2.37481990539947E-4	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999977202371751	WITHOUT_CLASSIFICATION	2.2797628248101743E-6	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999931158508264	WITHOUT_CLASSIFICATION	6.884149173640162E-6	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999931158508264	WITHOUT_CLASSIFICATION	6.884149173640162E-6	TEST
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.999999811803286	WITHOUT_CLASSIFICATION	1.8819671392125608E-7	TEST
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.999560448769399	WITHOUT_CLASSIFICATION	4.395512306010262E-4	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999709638278759	WITHOUT_CLASSIFICATION	2.9036172124105812E-5	TEST
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999882624658692	WITHOUT_CLASSIFICATION	1.1737534130768796E-5	TEST
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999990482490755	WITHOUT_CLASSIFICATION	9.51750924448215E-7	TEST
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999785117612511	WITHOUT_CLASSIFICATION	2.148823874892162E-5	TEST
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9996388399795965	WITHOUT_CLASSIFICATION	3.611600204036333E-4	TEST
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999855860370199	WITHOUT_CLASSIFICATION	1.4413962980043861E-5	TEST
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.999991958626561	WITHOUT_CLASSIFICATION	8.041373439010632E-6	TEST
// host and port given	WITHOUT_CLASSIFICATION	0.9999959479211523	WITHOUT_CLASSIFICATION	4.052078847620265E-6	TEST
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999818609803112	WITHOUT_CLASSIFICATION	1.8139019688773754E-5	TEST
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9994756561509845	WITHOUT_CLASSIFICATION	5.243438490154591E-4	TEST
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9998253028735953	WITHOUT_CLASSIFICATION	1.7469712640464993E-4	TEST
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999639654679764	WITHOUT_CLASSIFICATION	3.603453202363635E-5	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999482759769153	WITHOUT_CLASSIFICATION	5.1724023084649895E-5	TEST
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999915784561149	WITHOUT_CLASSIFICATION	8.421543885018338E-6	TEST
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9999684949055451	WITHOUT_CLASSIFICATION	3.1505094454915505E-5	TEST
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999641068795927	WITHOUT_CLASSIFICATION	3.589312040734767E-5	TEST
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9998747544714308	WITHOUT_CLASSIFICATION	1.2524552856921602E-4	TEST
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999620788885478	WITHOUT_CLASSIFICATION	3.792111145206298E-5	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.9999673553645454	WITHOUT_CLASSIFICATION	3.2644635454674836E-5	TEST
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999673553645454	WITHOUT_CLASSIFICATION	3.2644635454674836E-5	TEST
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9997741909849887	WITHOUT_CLASSIFICATION	2.2580901501144358E-4	TEST
// line 323	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.999987211057481	WITHOUT_CLASSIFICATION	1.278894251890723E-5	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.999987211057481	WITHOUT_CLASSIFICATION	1.278894251890723E-5	TEST
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999980033398321	WITHOUT_CLASSIFICATION	1.9966601679122806E-6	TEST
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999847371336554	WITHOUT_CLASSIFICATION	1.526286634463603E-5	TEST
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9997699919160447	WITHOUT_CLASSIFICATION	2.300080839553489E-4	TEST
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999902210952233	WITHOUT_CLASSIFICATION	9.778904776689885E-6	TEST
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.999942135455586	WITHOUT_CLASSIFICATION	5.786454441390603E-5	TEST
// RubySocket	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999210014334775	WITHOUT_CLASSIFICATION	7.89985665225293E-5	TEST
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999686268866101	WITHOUT_CLASSIFICATION	3.137311338997281E-5	TEST
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999984245993125	WITHOUT_CLASSIFICATION	1.575400687373779E-6	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999955603892163	WITHOUT_CLASSIFICATION	4.43961078361424E-6	TEST
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999898564310498	WITHOUT_CLASSIFICATION	1.0143568950287122E-5	TEST
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999861975365288	WITHOUT_CLASSIFICATION	1.3802463471114929E-5	TEST
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.999560448769399	WITHOUT_CLASSIFICATION	4.395512306010262E-4	TEST
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999791473237505	WITHOUT_CLASSIFICATION	2.0852676249527635E-5	TEST
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999436359160381	WITHOUT_CLASSIFICATION	5.6364083961806804E-5	TEST
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999873331239545	WITHOUT_CLASSIFICATION	1.2666876045539581E-5	TEST
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999628472570377	WITHOUT_CLASSIFICATION	3.7152742962256874E-5	TEST
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999834026442186	WITHOUT_CLASSIFICATION	1.6597355781398233E-5	TEST
// be dead	WITHOUT_CLASSIFICATION	0.999969630989148	WITHOUT_CLASSIFICATION	3.036901085195695E-5	TEST
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999952683706504	WITHOUT_CLASSIFICATION	4.731629349545423E-6	TEST
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999919015095681	WITHOUT_CLASSIFICATION	8.098490431974445E-6	TEST
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.999600031183745	WITHOUT_CLASSIFICATION	3.999688162550785E-4	TEST
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9996848505477052	WITHOUT_CLASSIFICATION	3.1514945229490886E-4	TEST
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999835045062148	WITHOUT_CLASSIFICATION	1.6495493785264847E-5	TEST
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999986869960144	WITHOUT_CLASSIFICATION	1.3130039856808981E-6	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9998605293387903	WITHOUT_CLASSIFICATION	1.394706612096973E-4	TEST
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9997896863103463	WITHOUT_CLASSIFICATION	2.103136896537085E-4	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999857949875582	WITHOUT_CLASSIFICATION	1.4205012441642316E-5	TEST
// main body	WITHOUT_CLASSIFICATION	0.9999909487268025	WITHOUT_CLASSIFICATION	9.051273197590058E-6	TEST
// return jump handling	WITHOUT_CLASSIFICATION	0.9999869936838093	WITHOUT_CLASSIFICATION	1.3006316190761706E-5	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999674180933985	WITHOUT_CLASSIFICATION	3.258190660140483E-5	TEST
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999854267941373	WITHOUT_CLASSIFICATION	1.457320586283283E-5	TEST
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999754608055001	WITHOUT_CLASSIFICATION	2.4539194499814417E-5	TEST
// clear the redo	WITHOUT_CLASSIFICATION	0.999996036424231	WITHOUT_CLASSIFICATION	3.963575769021283E-6	TEST
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999880564073874	WITHOUT_CLASSIFICATION	1.1943592612568844E-5	TEST
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999817877864559	WITHOUT_CLASSIFICATION	1.821221354410015E-5	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999486534302513	WITHOUT_CLASSIFICATION	5.134656974870319E-5	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9997786212992555	WITHOUT_CLASSIFICATION	2.2137870074434137E-4	TEST
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.999947827002601	WITHOUT_CLASSIFICATION	5.217299739900436E-5	TEST
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999488766208087	WITHOUT_CLASSIFICATION	5.112337919132374E-5	TEST
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.999957853286662	WITHOUT_CLASSIFICATION	4.2146713338035396E-5	TEST
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999865905376906	WITHOUT_CLASSIFICATION	1.3409462309442207E-5	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999887966029443	WITHOUT_CLASSIFICATION	1.1203397055803647E-5	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999887966029443	WITHOUT_CLASSIFICATION	1.1203397055803647E-5	TEST
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999854596128093	WITHOUT_CLASSIFICATION	1.4540387190792301E-5	TEST
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999809603885272	WITHOUT_CLASSIFICATION	1.903961147274383E-5	TEST
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999916748114355	WITHOUT_CLASSIFICATION	8.32518856455234E-6	TEST
// return	WITHOUT_CLASSIFICATION	0.9999827080271654	WITHOUT_CLASSIFICATION	1.7291972834615326E-5	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999852309299505	WITHOUT_CLASSIFICATION	1.4769070049575566E-5	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.999983981070887	WITHOUT_CLASSIFICATION	1.6018929113059233E-5	TEST
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999640785893729	WITHOUT_CLASSIFICATION	3.592141062707792E-5	TEST
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999257869075733	WITHOUT_CLASSIFICATION	7.421309242676312E-5	TEST
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9998363673737258	WITHOUT_CLASSIFICATION	1.636326262741538E-4	TEST
// tc	WITHOUT_CLASSIFICATION	0.9999673553645454	WITHOUT_CLASSIFICATION	3.2644635454674836E-5	TEST
// self // name	WITHOUT_CLASSIFICATION	0.9999799656758291	WITHOUT_CLASSIFICATION	2.0034324170857463E-5	TEST
// no args	WITHOUT_CLASSIFICATION	0.999981754299634	WITHOUT_CLASSIFICATION	1.8245700366095287E-5	TEST
// variable args with block	WITHOUT_CLASSIFICATION	0.9998012818256549	WITHOUT_CLASSIFICATION	1.9871817434525136E-4	TEST
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999663752390958	WITHOUT_CLASSIFICATION	3.362476090412627E-5	TEST
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999717608617099	WITHOUT_CLASSIFICATION	2.8239138290110698E-5	TEST
// one arg with block	WITHOUT_CLASSIFICATION	0.999911545375206	WITHOUT_CLASSIFICATION	8.845462479405363E-5	TEST
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999760799390998	WITHOUT_CLASSIFICATION	2.3920060900210945E-5	TEST
// two args with block	WITHOUT_CLASSIFICATION	0.9998565263002017	WITHOUT_CLASSIFICATION	1.434736997982815E-4	TEST
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999608800359966	WITHOUT_CLASSIFICATION	3.911996400340516E-5	TEST
// three args with block	WITHOUT_CLASSIFICATION	0.9998726458996979	WITHOUT_CLASSIFICATION	1.273541003020959E-4	TEST
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999652756609266	WITHOUT_CLASSIFICATION	3.472433907337968E-5	TEST
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.999794342493284	WITHOUT_CLASSIFICATION	2.0565750671597556E-4	TEST
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.999835257261522	WITHOUT_CLASSIFICATION	1.6474273847789E-4	TEST
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999684566785413	WITHOUT_CLASSIFICATION	3.1543321458682575E-5	TEST
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999785346218028	WITHOUT_CLASSIFICATION	2.146537819721282E-5	TEST
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999648944818432	WITHOUT_CLASSIFICATION	3.510551815686324E-5	TEST
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999688390468399	WITHOUT_CLASSIFICATION	3.116095316017831E-5	TEST
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999660238213076	WITHOUT_CLASSIFICATION	3.3976178692505645E-5	TEST
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.999964258882912	WITHOUT_CLASSIFICATION	3.5741117088104195E-5	TEST
// static invocation	WITHOUT_CLASSIFICATION	0.9999909679838788	WITHOUT_CLASSIFICATION	9.032016121228912E-6	TEST
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999729201248644	WITHOUT_CLASSIFICATION	2.7079875135585248E-5	TEST
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.999277152328925	WITHOUT_CLASSIFICATION	7.228476710749068E-4	TEST
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999936014196821	WITHOUT_CLASSIFICATION	6.398580317916343E-6	TEST
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999929499346711	WITHOUT_CLASSIFICATION	7.050065328916629E-6	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9997786212992555	WITHOUT_CLASSIFICATION	2.2137870074434137E-4	TEST
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9998029045461768	WITHOUT_CLASSIFICATION	1.9709545382320902E-4	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999662439870847	WITHOUT_CLASSIFICATION	3.37560129154335E-5	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999662439870847	WITHOUT_CLASSIFICATION	3.37560129154335E-5	TEST
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999788776488191	WITHOUT_CLASSIFICATION	2.1122351180973084E-5	TEST
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999217932554313	WITHOUT_CLASSIFICATION	7.820674456878639E-5	TEST
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999729176684375	WITHOUT_CLASSIFICATION	2.7082331562449563E-5	TEST
// never reached	WITHOUT_CLASSIFICATION	0.9999906687239084	WITHOUT_CLASSIFICATION	9.33127609156232E-6	TEST
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.999950882992068	WITHOUT_CLASSIFICATION	4.911700793201292E-5	TEST
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999601893957218	WITHOUT_CLASSIFICATION	3.981060427813339E-5	TEST
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9999662868039216	WITHOUT_CLASSIFICATION	3.371319607834034E-5	TEST
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9999448502129785	WITHOUT_CLASSIFICATION	5.514978702142908E-5	TEST
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9999603222518028	WITHOUT_CLASSIFICATION	3.967774819725481E-5	TEST
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9999663993123954	WITHOUT_CLASSIFICATION	3.360068760462261E-5	TEST
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9999450342562173	WITHOUT_CLASSIFICATION	5.496574378273784E-5	TEST
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9999510469039896	WITHOUT_CLASSIFICATION	4.895309601035204E-5	TEST
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999929855482632	WITHOUT_CLASSIFICATION	7.014451736787308E-6	TEST
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.999960343107365	WITHOUT_CLASSIFICATION	3.965689263496092E-5	TEST
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999325219389326	WITHOUT_CLASSIFICATION	6.747806106741169E-5	TEST
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999885807988614	WITHOUT_CLASSIFICATION	1.1419201138492708E-5	TEST
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999884669435491	WITHOUT_CLASSIFICATION	1.1533056450827978E-5	TEST
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9999897628606893	WITHOUT_CLASSIFICATION	1.0237139310625505E-5	TEST
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999917025951542	WITHOUT_CLASSIFICATION	8.297404845742125E-6	TEST
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999929734629407	WITHOUT_CLASSIFICATION	7.026537059243294E-6	TEST
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9999885054327883	WITHOUT_CLASSIFICATION	1.1494567211756876E-5	TEST
// promise to implement three	WITHOUT_CLASSIFICATION	0.99999300895768	WITHOUT_CLASSIFICATION	6.991042319961793E-6	TEST
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999833306446189	WITHOUT_CLASSIFICATION	1.6669355381140398E-5	TEST
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999647155126529	WITHOUT_CLASSIFICATION	3.528448734709337E-5	TEST
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999969068143809	WITHOUT_CLASSIFICATION	3.0931856189867553E-6	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999895439490847	WITHOUT_CLASSIFICATION	1.0456050915268664E-5	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999567825838088	WITHOUT_CLASSIFICATION	4.321741619116016E-5	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999717788058909	WITHOUT_CLASSIFICATION	2.8221194109109926E-5	TEST
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999971740285027	WITHOUT_CLASSIFICATION	2.8259714973207692E-6	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999906953287994	WITHOUT_CLASSIFICATION	9.304671200685619E-6	TEST
// start setup method	WITHOUT_CLASSIFICATION	0.9999875390863724	WITHOUT_CLASSIFICATION	1.246091362754181E-5	TEST
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999938128383524	WITHOUT_CLASSIFICATION	6.18716164766568E-6	TEST
// set Ruby	WITHOUT_CLASSIFICATION	0.9999938128383524	WITHOUT_CLASSIFICATION	6.18716164766568E-6	TEST
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999950614199378	WITHOUT_CLASSIFICATION	4.938580062169438E-6	TEST
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999228930280591	WITHOUT_CLASSIFICATION	7.710697194093402E-5	TEST
// get current context	WITHOUT_CLASSIFICATION	0.999989185446578	WITHOUT_CLASSIFICATION	1.0814553421969559E-5	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999806361012227	WITHOUT_CLASSIFICATION	1.9363898777333896E-5	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999895439490847	WITHOUT_CLASSIFICATION	1.0456050915268664E-5	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999567825838088	WITHOUT_CLASSIFICATION	4.321741619116016E-5	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999717788058909	WITHOUT_CLASSIFICATION	2.8221194109109926E-5	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999906953287994	WITHOUT_CLASSIFICATION	9.304671200685619E-6	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999949921543624	WITHOUT_CLASSIFICATION	5.007845637645654E-6	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999167976893555	WITHOUT_CLASSIFICATION	8.320231064448105E-5	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999886609182178	WITHOUT_CLASSIFICATION	1.1339081782143135E-5	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999897199257923	WITHOUT_CLASSIFICATION	1.0280074207791938E-5	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999942645864035	WITHOUT_CLASSIFICATION	5.735413596591974E-6	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.999906062201965	WITHOUT_CLASSIFICATION	9.393779803506628E-5	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.9999957811085066	WITHOUT_CLASSIFICATION	4.218891493384386E-6	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999948501325758	WITHOUT_CLASSIFICATION	5.149867424160741E-6	TEST
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999518276147327	WITHOUT_CLASSIFICATION	4.8172385267421914E-5	TEST
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999968420596376	WITHOUT_CLASSIFICATION	3.157940362379392E-6	TEST
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999740015694469	WITHOUT_CLASSIFICATION	2.5998430553071952E-5	TEST
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999900426839591	WITHOUT_CLASSIFICATION	9.957316040929966E-6	TEST
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.999996773849532	WITHOUT_CLASSIFICATION	3.226150467954963E-6	TEST
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999887592677011	WITHOUT_CLASSIFICATION	1.1240732298908535E-5	TEST
// store it	WITHOUT_CLASSIFICATION	0.9999774420927406	WITHOUT_CLASSIFICATION	2.255790725941193E-5	TEST
// end of try block	WITHOUT_CLASSIFICATION	0.9999950419927448	WITHOUT_CLASSIFICATION	4.958007255191908E-6	TEST
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999791685023841	WITHOUT_CLASSIFICATION	2.0831497615964142E-5	TEST
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.999921902029322	WITHOUT_CLASSIFICATION	7.8097970678029E-5	TEST
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999809362522878	WITHOUT_CLASSIFICATION	1.906374771220735E-5	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999806361012227	WITHOUT_CLASSIFICATION	1.9363898777333896E-5	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999167976893555	WITHOUT_CLASSIFICATION	8.320231064448105E-5	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999886609182178	WITHOUT_CLASSIFICATION	1.1339081782143135E-5	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999942645864035	WITHOUT_CLASSIFICATION	5.735413596591974E-6	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.999906062201965	WITHOUT_CLASSIFICATION	9.393779803506628E-5	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.9999957811085066	WITHOUT_CLASSIFICATION	4.218891493384386E-6	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999948501325758	WITHOUT_CLASSIFICATION	5.149867424160741E-6	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999974280910632	WITHOUT_CLASSIFICATION	2.571908936737249E-6	TEST
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999666988405052	WITHOUT_CLASSIFICATION	3.330115949484857E-5	TEST
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999887098179078	WITHOUT_CLASSIFICATION	1.1290182092299422E-5	TEST
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999914072619114	WITHOUT_CLASSIFICATION	8.5927380886298E-6	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999543130071936	WITHOUT_CLASSIFICATION	4.5686992806328545E-5	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999543130071936	WITHOUT_CLASSIFICATION	4.5686992806328545E-5	TEST
// setup the class	WITHOUT_CLASSIFICATION	0.9999971813146014	WITHOUT_CLASSIFICATION	2.8186853986491567E-6	TEST
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999966820273571	WITHOUT_CLASSIFICATION	3.317972642980526E-6	TEST
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999809656371051	WITHOUT_CLASSIFICATION	1.9034362894774243E-5	TEST
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999878736690878	WITHOUT_CLASSIFICATION	1.2126330912203064E-5	TEST
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999929666056321	WITHOUT_CLASSIFICATION	7.033394367981772E-6	TEST
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.999998189030288	WITHOUT_CLASSIFICATION	1.8109697120120896E-6	TEST
// set the full name	WITHOUT_CLASSIFICATION	0.9999923075347426	WITHOUT_CLASSIFICATION	7.692465257486477E-6	TEST
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999840222043774	WITHOUT_CLASSIFICATION	1.5977795622518887E-5	TEST
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999438781280674	WITHOUT_CLASSIFICATION	5.6121871932665135E-5	TEST
// add array construction methods	WITHOUT_CLASSIFICATION	0.999897957868045	WITHOUT_CLASSIFICATION	1.0204213195505806E-4	TEST
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999325947131322	WITHOUT_CLASSIFICATION	6.740528686780732E-5	TEST
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999889492224331	WITHOUT_CLASSIFICATION	1.105077756694758E-5	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9998867862208415	WITHOUT_CLASSIFICATION	1.1321377915856976E-4	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999632540916243	WITHOUT_CLASSIFICATION	3.674590837562654E-5	TEST
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999653014128194	WITHOUT_CLASSIFICATION	3.469858718058087E-5	TEST
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999443143145718	WITHOUT_CLASSIFICATION	5.568568542830329E-5	TEST
// add all static variables	WITHOUT_CLASSIFICATION	0.9999520736200831	WITHOUT_CLASSIFICATION	4.7926379916934895E-5	TEST
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.999968392179564	WITHOUT_CLASSIFICATION	3.1607820435940875E-5	TEST
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999931614843607	WITHOUT_CLASSIFICATION	6.838515639214683E-6	TEST
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.999997520562134	WITHOUT_CLASSIFICATION	2.479437866034936E-6	TEST
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9960820636947714	WITHOUT_CLASSIFICATION	0.003917936305228704	TEST
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999899384571191	WITHOUT_CLASSIFICATION	1.0061542880865095E-5	TEST
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999944078134851	WITHOUT_CLASSIFICATION	5.592186514782218E-6	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9980044062547431	WITHOUT_CLASSIFICATION	0.0019955937452568804	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999965157809221	WITHOUT_CLASSIFICATION	3.484219077837121E-6	TEST
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999990317977615	WITHOUT_CLASSIFICATION	9.682022384136127E-7	TEST
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9997585219895847	WITHOUT_CLASSIFICATION	2.414780104153021E-4	TEST
// line 326	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999965157809221	WITHOUT_CLASSIFICATION	3.484219077837121E-6	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999632540916243	WITHOUT_CLASSIFICATION	3.674590837562654E-5	TEST
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999209908839474	WITHOUT_CLASSIFICATION	7.900911605268964E-5	TEST
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999895264010079	WITHOUT_CLASSIFICATION	1.0473598992087247E-5	TEST
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.999977651235478	WITHOUT_CLASSIFICATION	2.234876452199412E-5	TEST
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999942818480664	WITHOUT_CLASSIFICATION	5.718151933655253E-6	TEST
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999872030388807	WITHOUT_CLASSIFICATION	1.2796961119399671E-5	TEST
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999708883957877	WITHOUT_CLASSIFICATION	2.9111604212364054E-5	TEST
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9996656932143554	WITHOUT_CLASSIFICATION	3.34306785644532E-4	TEST
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9998954898668087	WITHOUT_CLASSIFICATION	1.0451013319126806E-4	TEST
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9981889666223427	WITHOUT_CLASSIFICATION	0.0018110333776573029	TEST
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9997656883735437	WITHOUT_CLASSIFICATION	2.3431162645627408E-4	TEST
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999955473536922	WITHOUT_CLASSIFICATION	4.452646307873923E-6	TEST
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999842704643295	WITHOUT_CLASSIFICATION	1.5729535670590043E-5	TEST
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9998668477859695	WITHOUT_CLASSIFICATION	1.331522140305325E-4	TEST
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999974469623687	WITHOUT_CLASSIFICATION	2.553037631341146E-6	TEST
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999931944044236	WITHOUT_CLASSIFICATION	6.805595576379499E-6	TEST
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999752363496095	WITHOUT_CLASSIFICATION	2.4763650390533158E-5	TEST
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999974539615556	WITHOUT_CLASSIFICATION	2.546038444344768E-6	TEST
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9999852969878233	WITHOUT_CLASSIFICATION	1.470301217676482E-5	TEST
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999987015672659	WITHOUT_CLASSIFICATION	1.2984327341121271E-6	TEST
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999744399111482	WITHOUT_CLASSIFICATION	2.556008885175669E-5	TEST
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999849094588038	WITHOUT_CLASSIFICATION	1.5090541196138749E-5	TEST
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999420336171823	WITHOUT_CLASSIFICATION	5.7966382817683654E-5	TEST
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999235634151401	WITHOUT_CLASSIFICATION	7.643658485993542E-5	TEST
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999985435035916	WITHOUT_CLASSIFICATION	1.4564964084013048E-6	TEST
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999896858548681	WITHOUT_CLASSIFICATION	1.0314145131856387E-5	TEST
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.999960343107365	WITHOUT_CLASSIFICATION	3.965689263496092E-5	TEST
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9995014012133171	WITHOUT_CLASSIFICATION	4.985987866829027E-4	TEST
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9994795745831099	WITHOUT_CLASSIFICATION	5.204254168900643E-4	TEST
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9998904921265825	WITHOUT_CLASSIFICATION	1.0950787341744367E-4	TEST
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999823639995542	WITHOUT_CLASSIFICATION	1.763600044579193E-5	TEST
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999621764728706	WITHOUT_CLASSIFICATION	3.782352712951168E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999920792054892	WITHOUT_CLASSIFICATION	7.92079451086154E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999920792054892	WITHOUT_CLASSIFICATION	7.92079451086154E-6	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9998867862208415	WITHOUT_CLASSIFICATION	1.1321377915856976E-4	TEST
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999866292644184	WITHOUT_CLASSIFICATION	1.3370735581618602E-5	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999547155206071	WITHOUT_CLASSIFICATION	4.528447939300832E-5	TEST
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999715832214278	WITHOUT_CLASSIFICATION	2.841677857220601E-5	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999855618644816	WITHOUT_CLASSIFICATION	1.4438135518411937E-5	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999855618644816	WITHOUT_CLASSIFICATION	1.4438135518411937E-5	TEST
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999812855250534	WITHOUT_CLASSIFICATION	1.871447494665566E-5	TEST
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999803552988042	WITHOUT_CLASSIFICATION	1.9644701195740655E-5	TEST
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999796050506389	WITHOUT_CLASSIFICATION	2.039494936115038E-5	TEST
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999634376361187	WITHOUT_CLASSIFICATION	3.6562363881317446E-5	TEST
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9998966013786448	WITHOUT_CLASSIFICATION	1.0339862135525616E-4	TEST
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999944972582747	WITHOUT_CLASSIFICATION	5.502741725311794E-6	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999642002344393	WITHOUT_CLASSIFICATION	3.579976556065419E-5	TEST
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999913318005081	WITHOUT_CLASSIFICATION	8.668199491743282E-6	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.999960748847338	WITHOUT_CLASSIFICATION	3.925115266207319E-5	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999104707821401	WITHOUT_CLASSIFICATION	8.952921785992617E-5	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999702278314291	WITHOUT_CLASSIFICATION	2.977216857095774E-5	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999743121647152	WITHOUT_CLASSIFICATION	2.5687835284789642E-5	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999626089036369	WITHOUT_CLASSIFICATION	3.739109636311251E-5	TEST
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999925295390248	WITHOUT_CLASSIFICATION	7.470460975210487E-6	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.999960343107365	WITHOUT_CLASSIFICATION	3.965689263496092E-5	TEST
// something?	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999780357911845	WITHOUT_CLASSIFICATION	2.196420881540734E-5	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999780357911845	WITHOUT_CLASSIFICATION	2.196420881540734E-5	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999839170117867	WITHOUT_CLASSIFICATION	1.608298821332702E-5	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999839170117867	WITHOUT_CLASSIFICATION	1.608298821332702E-5	TEST
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999665753502746	WITHOUT_CLASSIFICATION	3.3424649725365385E-5	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999032984347282	WITHOUT_CLASSIFICATION	9.670156527172484E-5	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999464316790716	WITHOUT_CLASSIFICATION	5.356832092844251E-5	TEST
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999621249791476	WITHOUT_CLASSIFICATION	3.787502085228028E-5	TEST
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999811846261961	WITHOUT_CLASSIFICATION	1.8815373803899074E-5	TEST
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999703483398835	WITHOUT_CLASSIFICATION	2.9651660116515104E-5	TEST
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999528319042733	WITHOUT_CLASSIFICATION	4.716809572665032E-5	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999743121647152	WITHOUT_CLASSIFICATION	2.5687835284789642E-5	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999626089036369	WITHOUT_CLASSIFICATION	3.739109636311251E-5	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.999960343107365	WITHOUT_CLASSIFICATION	3.965689263496092E-5	TEST
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999625050333978	WITHOUT_CLASSIFICATION	3.7494966602266155E-5	TEST
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999095251805968	WITHOUT_CLASSIFICATION	9.047481940316311E-5	TEST
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999969652650591	WITHOUT_CLASSIFICATION	3.034734940938543E-6	TEST
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999650548347372	WITHOUT_CLASSIFICATION	3.494516526279604E-5	TEST
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999649629974573	WITHOUT_CLASSIFICATION	3.503700254274133E-5	TEST
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9998743269229268	WITHOUT_CLASSIFICATION	1.256730770732934E-4	TEST
// one-dimensional array	WITHOUT_CLASSIFICATION	0.99997335857147	WITHOUT_CLASSIFICATION	2.664142853012735E-5	TEST
// n-dimensional array	WITHOUT_CLASSIFICATION	0.99997335857147	WITHOUT_CLASSIFICATION	2.664142853012735E-5	TEST
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999539403751019	WITHOUT_CLASSIFICATION	4.6059624897985646E-5	TEST
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999735850297372	WITHOUT_CLASSIFICATION	2.64149702628129E-5	TEST
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999898536258162	WITHOUT_CLASSIFICATION	1.0146374183906537E-5	TEST
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999535492490949	WITHOUT_CLASSIFICATION	4.645075090517391E-5	TEST
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999623850559851	WITHOUT_CLASSIFICATION	3.7614944014958654E-5	TEST
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9994205801100238	WITHOUT_CLASSIFICATION	5.794198899761635E-4	TEST
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9999926353175981	WITHOUT_CLASSIFICATION	7.364682401896965E-6	TEST
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999941541806247	WITHOUT_CLASSIFICATION	5.845819375397648E-6	TEST
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999907478252624	WITHOUT_CLASSIFICATION	9.252174737549588E-6	TEST
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9997583978645521	WITHOUT_CLASSIFICATION	2.4160213544796827E-4	TEST
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999816979324389	WITHOUT_CLASSIFICATION	1.8302067561248996E-5	TEST
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.999994261897215	WITHOUT_CLASSIFICATION	5.738102785038575E-6	TEST
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999846474454019	WITHOUT_CLASSIFICATION	1.5352554598030015E-5	TEST
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999895800276156	WITHOUT_CLASSIFICATION	1.0419972384386703E-5	TEST
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.999560448769399	WITHOUT_CLASSIFICATION	4.395512306010262E-4	TEST
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.999988542481166	WITHOUT_CLASSIFICATION	1.1457518834024843E-5	TEST
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999584507536483	WITHOUT_CLASSIFICATION	4.154924635174027E-5	TEST
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999916111172935	WITHOUT_CLASSIFICATION	8.388882706364752E-6	TEST
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999122749666433	WITHOUT_CLASSIFICATION	8.772503335684663E-5	TEST
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9979397888197	WITHOUT_CLASSIFICATION	0.002060211180300056	TEST
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999934342206368	WITHOUT_CLASSIFICATION	6.565779363189807E-6	TEST
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9998020016528933	WITHOUT_CLASSIFICATION	1.9799834710654217E-4	TEST
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999640226961269	WITHOUT_CLASSIFICATION	3.597730387319411E-5	TEST
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999620480142353	WITHOUT_CLASSIFICATION	3.795198576474109E-5	TEST
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999473285755528	WITHOUT_CLASSIFICATION	5.267142444724934E-5	TEST
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999938575517565	WITHOUT_CLASSIFICATION	6.142448243508989E-6	TEST
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999933827992594	WITHOUT_CLASSIFICATION	6.6172007406709844E-6	TEST
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9998892633184097	WITHOUT_CLASSIFICATION	1.107366815903325E-4	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999876711907268	WITHOUT_CLASSIFICATION	1.2328809273037815E-5	TEST
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999925796936089	WITHOUT_CLASSIFICATION	7.420306391147018E-6	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999726543581902	WITHOUT_CLASSIFICATION	2.734564180981605E-5	TEST
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999637759358849	WITHOUT_CLASSIFICATION	3.6224064115029025E-5	TEST
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999622408378425	WITHOUT_CLASSIFICATION	3.775916215752659E-5	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999547155206071	WITHOUT_CLASSIFICATION	4.528447939300832E-5	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999876711907268	WITHOUT_CLASSIFICATION	1.2328809273037815E-5	TEST
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9998078496183423	WITHOUT_CLASSIFICATION	1.92150381657653E-4	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999994195480146	WITHOUT_CLASSIFICATION	5.804519853249255E-7	TEST
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999725384667418	WITHOUT_CLASSIFICATION	2.7461533258094095E-5	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9998112805165189	WITHOUT_CLASSIFICATION	1.8871948348103882E-4	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9998112805165189	WITHOUT_CLASSIFICATION	1.8871948348103882E-4	TEST
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999836179982131	WITHOUT_CLASSIFICATION	1.638200178679233E-5	TEST
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999832087708364	WITHOUT_CLASSIFICATION	1.6791229163681818E-5	TEST
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999994952972263	WITHOUT_CLASSIFICATION	5.047027736741918E-7	TEST
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999990345235448	WITHOUT_CLASSIFICATION	9.654764551910817E-7	TEST
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9999447934945024	WITHOUT_CLASSIFICATION	5.5206505497756155E-5	TEST
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9998548656084192	WITHOUT_CLASSIFICATION	1.451343915808549E-4	TEST
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9997790411125924	WITHOUT_CLASSIFICATION	2.2095888740763752E-4	TEST
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9998677934495597	WITHOUT_CLASSIFICATION	1.3220655044027293E-4	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999713275634422	WITHOUT_CLASSIFICATION	2.8672436557851212E-5	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999713275634422	WITHOUT_CLASSIFICATION	2.8672436557851212E-5	TEST
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999869641957997	WITHOUT_CLASSIFICATION	1.3035804200155983E-5	TEST
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9998488674289326	WITHOUT_CLASSIFICATION	1.5113257106744643E-4	TEST
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999985586482487	WITHOUT_CLASSIFICATION	1.4413517512769036E-6	TEST
// must be a public method	WITHOUT_CLASSIFICATION	0.9999938619010617	WITHOUT_CLASSIFICATION	6.1380989382609165E-6	TEST
// must be a public class	WITHOUT_CLASSIFICATION	0.9999927068899273	WITHOUT_CLASSIFICATION	7.293110072711835E-6	TEST
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999950752830505	WITHOUT_CLASSIFICATION	4.924716949508689E-6	TEST
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999805527457567	WITHOUT_CLASSIFICATION	1.944725424331589E-5	TEST
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999971368807529	WITHOUT_CLASSIFICATION	2.863119247182965E-6	TEST
// no matching method found	WITHOUT_CLASSIFICATION	0.9999926383547179	WITHOUT_CLASSIFICATION	7.361645282244568E-6	TEST
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.995768246573349	WITHOUT_CLASSIFICATION	0.00423175342665101	TEST
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999457275494614	WITHOUT_CLASSIFICATION	5.427245053863188E-5	TEST
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999401572176271	WITHOUT_CLASSIFICATION	5.984278237303602E-5	TEST
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999667147894982	WITHOUT_CLASSIFICATION	3.3285210501767544E-5	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9996997853068419	WITHOUT_CLASSIFICATION	3.00214693158024E-4	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9996997853068419	WITHOUT_CLASSIFICATION	3.00214693158024E-4	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999634673823183	WITHOUT_CLASSIFICATION	3.653261768168387E-5	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999948501325758	WITHOUT_CLASSIFICATION	5.149867424160741E-6	TEST
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.995768246573349	WITHOUT_CLASSIFICATION	0.00423175342665101	TEST
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.999992270251205	WITHOUT_CLASSIFICATION	7.729748795061235E-6	TEST
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999991512066989	WITHOUT_CLASSIFICATION	8.48793301138832E-7	TEST
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999941769106637	WITHOUT_CLASSIFICATION	5.8230893362264065E-6	TEST
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999585621821107	WITHOUT_CLASSIFICATION	4.143781788933258E-5	TEST
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999928612179403	WITHOUT_CLASSIFICATION	7.1387820597758335E-6	TEST
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999836290192198	WITHOUT_CLASSIFICATION	1.637098078014795E-5	TEST
/* package scope */	WITHOUT_CLASSIFICATION	0.9999736578046501	WITHOUT_CLASSIFICATION	2.6342195349997927E-5	TEST
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999547155206071	WITHOUT_CLASSIFICATION	4.528447939300832E-5	TEST
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999793427062165	WITHOUT_CLASSIFICATION	2.0657293783595923E-5	TEST
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9995474442164836	WITHOUT_CLASSIFICATION	4.5255578351636837E-4	TEST
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999913603315148	WITHOUT_CLASSIFICATION	8.639668485138372E-6	TEST
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.999484847799842	WITHOUT_CLASSIFICATION	5.151522001580736E-4	TEST
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999845120797803	WITHOUT_CLASSIFICATION	1.548792021959288E-5	TEST
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999941723506627	WITHOUT_CLASSIFICATION	5.827649337369062E-6	TEST
// statically initialized below	WITHOUT_CLASSIFICATION	0.9998482542929401	WITHOUT_CLASSIFICATION	1.5174570705981944E-4	TEST
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999826394256031	WITHOUT_CLASSIFICATION	1.7360574396854848E-5	TEST
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999860699253531	WITHOUT_CLASSIFICATION	1.3930074646868008E-5	TEST
// should not happen!	WITHOUT_CLASSIFICATION	0.9997472709103898	WITHOUT_CLASSIFICATION	2.527290896101356E-4	TEST
// start class	WITHOUT_CLASSIFICATION	0.9999940965199281	WITHOUT_CLASSIFICATION	5.9034800718778325E-6	TEST
// make getter for handler	WITHOUT_CLASSIFICATION	0.9998427854948936	WITHOUT_CLASSIFICATION	1.572145051062957E-4	TEST
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999039257135667	WITHOUT_CLASSIFICATION	9.607428643332689E-5	TEST
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9902453339594134	WITHOUT_CLASSIFICATION	0.009754666040586639	TEST
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999691688231014	WITHOUT_CLASSIFICATION	3.083117689860033E-5	TEST
// create static private method field	WITHOUT_CLASSIFICATION	0.9999856120802316	WITHOUT_CLASSIFICATION	1.4387919768373448E-5	TEST
// load static empty array	WITHOUT_CLASSIFICATION	0.9999763341711946	WITHOUT_CLASSIFICATION	2.3665828805403734E-5	TEST
// box arguments	WITHOUT_CLASSIFICATION	0.999991264838472	WITHOUT_CLASSIFICATION	8.735161527959577E-6	TEST
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9997205443859867	WITHOUT_CLASSIFICATION	2.794556140132668E-4	TEST
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999908765373384	WITHOUT_CLASSIFICATION	9.123462661622976E-6	TEST
// do a void return	WITHOUT_CLASSIFICATION	0.9999939542892554	WITHOUT_CLASSIFICATION	6.0457107445037665E-6	TEST
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999797349930265	WITHOUT_CLASSIFICATION	2.026500697354962E-5	TEST
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999836179982131	WITHOUT_CLASSIFICATION	1.638200178679233E-5	TEST
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999779082447535	WITHOUT_CLASSIFICATION	2.209175524652872E-5	TEST
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999991161909755	WITHOUT_CLASSIFICATION	8.83809024617576E-7	TEST
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999757582883124	WITHOUT_CLASSIFICATION	2.4241711687568694E-5	TEST
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999713209931089	WITHOUT_CLASSIFICATION	2.8679006891133495E-5	TEST
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999853605929373	WITHOUT_CLASSIFICATION	1.4639407062634705E-5	TEST
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999940330854881	WITHOUT_CLASSIFICATION	5.9669145119166965E-6	TEST
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999565595283457	WITHOUT_CLASSIFICATION	4.3440471654312595E-5	TEST
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9998431447611739	WITHOUT_CLASSIFICATION	1.5685523882614494E-4	TEST
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9979938470656228	WITHOUT_CLASSIFICATION	0.0020061529343771956	TEST
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999792176062152	WITHOUT_CLASSIFICATION	2.0782393784758306E-5	TEST
/* NUL */	WITHOUT_CLASSIFICATION	0.9999030942725735	WITHOUT_CLASSIFICATION	9.690572742639396E-5	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.999903125947129	WITHOUT_CLASSIFICATION	9.687405287102404E-5	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999763789839929	WITHOUT_CLASSIFICATION	2.3621016007116493E-5	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999990911355734	WITHOUT_CLASSIFICATION	9.088644266160483E-7	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.999780945998666	WITHOUT_CLASSIFICATION	2.1905400133398335E-4	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999930804862319	WITHOUT_CLASSIFICATION	6.919513768093031E-6	TEST
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999862669726749	WITHOUT_CLASSIFICATION	1.3733027325130047E-5	TEST
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999758664546059	WITHOUT_CLASSIFICATION	2.413354539411197E-5	TEST
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999583749729781	WITHOUT_CLASSIFICATION	4.162502702182789E-5	TEST
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.999931815618202	WITHOUT_CLASSIFICATION	6.818438179796459E-5	TEST
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999449510785604	WITHOUT_CLASSIFICATION	5.504892143949796E-5	TEST
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999556314475607	WITHOUT_CLASSIFICATION	4.436855243914379E-5	TEST
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9996461151640184	WITHOUT_CLASSIFICATION	3.5388483598169186E-4	TEST
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999781967993786	WITHOUT_CLASSIFICATION	2.1803200621418212E-5	TEST
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999762771644851	WITHOUT_CLASSIFICATION	2.3722835514941498E-5	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999777485931087	WITHOUT_CLASSIFICATION	2.2251406891305416E-5	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999777485931087	WITHOUT_CLASSIFICATION	2.2251406891305416E-5	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999777485931087	WITHOUT_CLASSIFICATION	2.2251406891305416E-5	TEST
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999971378927018	WITHOUT_CLASSIFICATION	2.862107298074464E-6	TEST
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999961828367309	WITHOUT_CLASSIFICATION	3.817163269109304E-6	TEST
// Single node in list	WITHOUT_CLASSIFICATION	0.9999904247073571	WITHOUT_CLASSIFICATION	9.57529264282734E-6	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999605052996312	WITHOUT_CLASSIFICATION	3.949470036881915E-5	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999605052996312	WITHOUT_CLASSIFICATION	3.949470036881915E-5	TEST
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.999974227232931	WITHOUT_CLASSIFICATION	2.5772767068995243E-5	TEST
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999435268231289	WITHOUT_CLASSIFICATION	5.647317687104329E-5	TEST
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999233302887951	WITHOUT_CLASSIFICATION	7.666971120481785E-5	TEST
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999922615549222	WITHOUT_CLASSIFICATION	7.738445077845142E-6	TEST
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.999984023374567	WITHOUT_CLASSIFICATION	1.5976625432934156E-5	TEST
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999107624342227	WITHOUT_CLASSIFICATION	8.923756577721062E-5	TEST
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999730943367966	WITHOUT_CLASSIFICATION	2.690566320341327E-5	TEST
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999878014453254	WITHOUT_CLASSIFICATION	1.2198554674585145E-5	TEST
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999939527909146	WITHOUT_CLASSIFICATION	6.047209085335184E-6	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999758749109112	WITHOUT_CLASSIFICATION	2.412508908881922E-5	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999758749109112	WITHOUT_CLASSIFICATION	2.412508908881922E-5	TEST
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999075361721457	WITHOUT_CLASSIFICATION	9.246382785428711E-5	TEST
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999876308870607	WITHOUT_CLASSIFICATION	1.2369112939370688E-5	TEST
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999787503193858	WITHOUT_CLASSIFICATION	2.12496806142865E-5	TEST
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999406212585825	WITHOUT_CLASSIFICATION	5.937874141754346E-5	TEST
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999683733950768	WITHOUT_CLASSIFICATION	3.1626604923094226E-5	TEST
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999898349963928	WITHOUT_CLASSIFICATION	1.0165003607093508E-5	TEST
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999690325999607	WITHOUT_CLASSIFICATION	3.096740003922277E-5	TEST
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999690538554359	WITHOUT_CLASSIFICATION	3.094614456408992E-5	TEST
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999673553645454	WITHOUT_CLASSIFICATION	3.2644635454674836E-5	TEST
// POP	WITHOUT_CLASSIFICATION	0.9999673553645454	WITHOUT_CLASSIFICATION	3.2644635454674836E-5	TEST
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999688093219586	WITHOUT_CLASSIFICATION	3.1190678041398145E-5	TEST
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999673553645454	WITHOUT_CLASSIFICATION	3.2644635454674836E-5	TEST
// SET_P	WITHOUT_CLASSIFICATION	0.9999673553645454	WITHOUT_CLASSIFICATION	3.2644635454674836E-5	TEST
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999617458085819	WITHOUT_CLASSIFICATION	3.825419141809501E-5	TEST
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9998187679413272	WITHOUT_CLASSIFICATION	1.8123205867282284E-4	TEST
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999872582371763	WITHOUT_CLASSIFICATION	1.2741762823654878E-5	TEST
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999627692010477	WITHOUT_CLASSIFICATION	3.723079895246474E-5	TEST
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9997130349512697	WITHOUT_CLASSIFICATION	2.8696504873034764E-4	TEST
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999759662719155	WITHOUT_CLASSIFICATION	2.4033728084417492E-5	TEST
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999853385111441	WITHOUT_CLASSIFICATION	1.4661488855807042E-5	TEST
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9999667975160795	WITHOUT_CLASSIFICATION	3.3202483920534644E-5	TEST
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999817203504903	WITHOUT_CLASSIFICATION	1.827964950977799E-5	TEST
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999563675255708	WITHOUT_CLASSIFICATION	4.363247442925935E-5	TEST
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999781877342874	WITHOUT_CLASSIFICATION	2.1812265712637152E-5	TEST
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999876149315198	WITHOUT_CLASSIFICATION	1.2385068480321747E-5	TEST
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999660881559305	WITHOUT_CLASSIFICATION	3.3911844069572105E-5	TEST
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999768410969477	WITHOUT_CLASSIFICATION	2.315890305225712E-5	TEST
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999541403654747	WITHOUT_CLASSIFICATION	4.585963452531669E-5	TEST
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.999981371566502	WITHOUT_CLASSIFICATION	1.862843349795609E-5	TEST
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999894945604106	WITHOUT_CLASSIFICATION	1.0505439589381443E-5	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999030942725735	WITHOUT_CLASSIFICATION	9.690572742639396E-5	TEST
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999846071677504	WITHOUT_CLASSIFICATION	1.5392832249654766E-5	TEST
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999796406069912	WITHOUT_CLASSIFICATION	2.0359393008841616E-5	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999030942725735	WITHOUT_CLASSIFICATION	9.690572742639396E-5	TEST
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999835568728411	WITHOUT_CLASSIFICATION	1.64431271588061E-5	TEST
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9997294490246696	WITHOUT_CLASSIFICATION	2.7055097533039294E-4	TEST
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999222366265302	WITHOUT_CLASSIFICATION	7.776337346968218E-5	TEST
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999738639493398	WITHOUT_CLASSIFICATION	2.6136050660042498E-5	TEST
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999574693203347	WITHOUT_CLASSIFICATION	4.253067966520524E-5	TEST
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999930451847701	WITHOUT_CLASSIFICATION	6.954815230026166E-6	TEST
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999915057746501	WITHOUT_CLASSIFICATION	8.494225349782619E-6	TEST
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9997946746664204	WITHOUT_CLASSIFICATION	2.053253335796459E-4	TEST
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999687962302853	WITHOUT_CLASSIFICATION	3.120376971456002E-5	TEST
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999687962302853	WITHOUT_CLASSIFICATION	3.120376971456002E-5	TEST
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999687962302853	WITHOUT_CLASSIFICATION	3.120376971456002E-5	TEST
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999386997826452	WITHOUT_CLASSIFICATION	6.13002173548264E-5	TEST
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9998719945849214	WITHOUT_CLASSIFICATION	1.2800541507854233E-4	TEST
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999591901923335	WITHOUT_CLASSIFICATION	4.080980766662504E-5	TEST
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9998914196917641	WITHOUT_CLASSIFICATION	1.0858030823590174E-4	TEST
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999282941878161	WITHOUT_CLASSIFICATION	7.170581218383011E-5	TEST
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999261194396462	WITHOUT_CLASSIFICATION	7.38805603538875E-5	TEST
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.999928374183672	WITHOUT_CLASSIFICATION	7.162581632797884E-5	TEST
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999687962302853	WITHOUT_CLASSIFICATION	3.120376971456002E-5	TEST
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999615878813217	WITHOUT_CLASSIFICATION	3.841211867822911E-5	TEST
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999295823626315	WITHOUT_CLASSIFICATION	7.041763736850253E-5	TEST
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999528087943286	WITHOUT_CLASSIFICATION	4.719120567145187E-5	TEST
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999786711394097	WITHOUT_CLASSIFICATION	2.132886059023212E-5	TEST
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9997417941514346	WITHOUT_CLASSIFICATION	2.582058485653159E-4	TEST
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9997842011684797	WITHOUT_CLASSIFICATION	2.157988315202763E-4	TEST
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999534490310192	WITHOUT_CLASSIFICATION	4.655096898089361E-5	TEST
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9994235082752444	WITHOUT_CLASSIFICATION	5.764917247555556E-4	TEST
// enum lex_state	WITHOUT_CLASSIFICATION	0.999989496178194	WITHOUT_CLASSIFICATION	1.0503821805933672E-5	TEST
// block (primary)	WITHOUT_CLASSIFICATION	0.9999898419441263	WITHOUT_CLASSIFICATION	1.0158055873742187E-5	TEST
// block (expr)	WITHOUT_CLASSIFICATION	0.9999898419441263	WITHOUT_CLASSIFICATION	1.0158055873742187E-5	TEST
// hash	WITHOUT_CLASSIFICATION	0.999967606283707	WITHOUT_CLASSIFICATION	3.2393716293049485E-5	TEST
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9993064334284288	WITHOUT_CLASSIFICATION	6.935665715711297E-4	TEST
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9999445574969898	WITHOUT_CLASSIFICATION	5.5442503010117285E-5	TEST
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999672985831359	WITHOUT_CLASSIFICATION	3.2701416864116953E-5	TEST
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999916804830028	WITHOUT_CLASSIFICATION	8.319516997121908E-6	TEST
// binary	WITHOUT_CLASSIFICATION	0.999969238572842	WITHOUT_CLASSIFICATION	3.076142715796637E-5	TEST
// decimal	WITHOUT_CLASSIFICATION	0.999967437905283	WITHOUT_CLASSIFICATION	3.2562094717109045E-5	TEST
//Octal	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999953904774385	WITHOUT_CLASSIFICATION	4.609522561475805E-6	TEST
// backslash	WITHOUT_CLASSIFICATION	0.9999895716170708	WITHOUT_CLASSIFICATION	1.04283829292647E-5	TEST
// newline	WITHOUT_CLASSIFICATION	0.9999673728951454	WITHOUT_CLASSIFICATION	3.2627104854681454E-5	TEST
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999901852844869	WITHOUT_CLASSIFICATION	9.81471551304959E-6	TEST
// form feed	WITHOUT_CLASSIFICATION	0.9999900846230914	WITHOUT_CLASSIFICATION	9.91537690867119E-6	TEST
// vertical tab	WITHOUT_CLASSIFICATION	0.9999901850407654	WITHOUT_CLASSIFICATION	9.814959234551629E-6	TEST
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// escape	WITHOUT_CLASSIFICATION	0.9999675218793247	WITHOUT_CLASSIFICATION	3.247812067531663E-5	TEST
// hex constant	WITHOUT_CLASSIFICATION	0.9999895756273085	WITHOUT_CLASSIFICATION	1.04243726914738E-5	TEST
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9998429142882774	WITHOUT_CLASSIFICATION	1.5708571172268448E-4	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999975389986087	WITHOUT_CLASSIFICATION	2.4610013913960276E-6	TEST
// space	WITHOUT_CLASSIFICATION	0.9999804023211677	WITHOUT_CLASSIFICATION	1.959767883235544E-5	TEST
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9998563201967962	WITHOUT_CLASSIFICATION	1.4367980320387544E-4	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999886417996715	WITHOUT_CLASSIFICATION	1.1358200328428778E-5	TEST
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999928402313406	WITHOUT_CLASSIFICATION	7.159768659333328E-6	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999975389986087	WITHOUT_CLASSIFICATION	2.4610013913960276E-6	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9999655154452026	WITHOUT_CLASSIFICATION	3.448455479739802E-5	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9999655154452026	WITHOUT_CLASSIFICATION	3.448455479739802E-5	TEST
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999790487235285	WITHOUT_CLASSIFICATION	2.0951276471421182E-5	TEST
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999565273936574	WITHOUT_CLASSIFICATION	4.3472606342677686E-5	TEST
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999911656648363	WITHOUT_CLASSIFICATION	8.834335163647755E-6	TEST
// Character read before previous read	WITHOUT_CLASSIFICATION	0.999950571823097	WITHOUT_CLASSIFICATION	4.942817690300674E-5	TEST
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999920106565915	WITHOUT_CLASSIFICATION	7.989343408519251E-6	TEST
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.999960343107365	WITHOUT_CLASSIFICATION	3.965689263496092E-5	TEST
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9183074571775324	TEST	0.08169254282246759	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999304092554523	WITHOUT_CLASSIFICATION	6.959074454763876E-5	TEST
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999179093085127	WITHOUT_CLASSIFICATION	8.209069148727064E-5	TEST
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999491662548983	WITHOUT_CLASSIFICATION	5.0833745101689474E-5	TEST
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999287209296052	WITHOUT_CLASSIFICATION	7.127907039487968E-5	TEST
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9997500732426117	WITHOUT_CLASSIFICATION	2.4992675738834305E-4	TEST
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999893683658784	WITHOUT_CLASSIFICATION	1.063163412156837E-5	TEST
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999916396448856	WITHOUT_CLASSIFICATION	8.360355114313194E-6	TEST
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999017659796419	WITHOUT_CLASSIFICATION	9.823402035824927E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
// line 329	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9995717537237613	WITHOUT_CLASSIFICATION	4.2824627623869275E-4	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999738426702179	WITHOUT_CLASSIFICATION	2.615732978213474E-5	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9998158389746559	WITHOUT_CLASSIFICATION	1.84161025344077E-4	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999757897032727	WITHOUT_CLASSIFICATION	2.4210296727294425E-5	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999963898419215	WITHOUT_CLASSIFICATION	3.6101580785243294E-6	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999895112778044	WITHOUT_CLASSIFICATION	1.0488722195490932E-5	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999898834775199	WITHOUT_CLASSIFICATION	1.0116522480094164E-5	TEST
// line 271	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 274	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 303	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 311	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 314	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 317	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 332	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 338	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 341	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 344	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 358	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 367	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 378	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 407	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 411	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 414	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 434	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 443	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 446	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 452	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 457	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 464	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 467	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 470	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 479	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 484	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 492	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 498	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 501	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 504	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 507	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 510	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 519	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 525	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 556	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 559	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 563	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 569	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 575	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 578	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 587	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 596	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 604	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 607	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 613	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 616	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 634	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 638	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 643	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 646	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 655	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 660	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 667	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 670	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 701	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 717	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 720	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 726	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 729	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 735	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 738	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 751	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 754	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 757	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 760	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 763	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 769	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 775	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 797	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 803	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 806	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 809	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 815	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 818	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 821	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 824	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 830	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 833	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 836	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 852	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 858	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 861	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 868	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 871	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 876	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 879	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 883	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 899	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 903	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 907	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 915	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 920	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 923	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 926	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 936	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 940	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 944	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 948	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 956	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 964	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 967	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 972	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 978	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 984	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 986	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 996	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1001	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1008	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1014	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1029	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1032	WITHOUT_CLASSIFICATION	0.9999925456436588	WITHOUT_CLASSIFICATION	7.454356341288811E-6	TEST
// line 1034	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1045	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1048	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1051	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1058	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1070	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1073	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1076	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1079	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1082	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1089	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1100	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1103	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1107	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1113	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1115	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1119	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1135	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1137	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1151	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1154	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1164	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1175	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1178	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1187	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1189	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1193	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1214	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1234	WITHOUT_CLASSIFICATION	0.9999925503272976	WITHOUT_CLASSIFICATION	7.449672702410128E-6	TEST
// line 1239	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1243	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1263	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1269	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1280	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1283	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1290	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1296	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1299	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1302	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1309	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1313	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1315	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1328	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1335	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1352	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1358	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1374	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1381	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1415	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1431	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1434	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1440	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1443	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1453	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1465	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1477	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1480	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1485	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1488	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1510	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1516	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1533	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1550	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1553	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1556	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1565	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1568	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1571	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1574	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1577	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1587	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1600	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1609	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1623	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1626	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1638	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1641	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1644	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1649	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1655	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1658	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1661	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1672	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1677	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1687	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1694	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1733	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1745	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1757	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1769	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1775	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1784	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1808	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1814	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999559437255546	WITHOUT_CLASSIFICATION	4.405627444532129E-5	TEST
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999505531159028	WITHOUT_CLASSIFICATION	4.944688409710559E-5	TEST
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999405928407646	WITHOUT_CLASSIFICATION	5.9407159235347505E-5	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9992291667636332	WITHOUT_CLASSIFICATION	7.708332363669336E-4	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999118796327651	WITHOUT_CLASSIFICATION	8.812036723482103E-5	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9997002515577876	WITHOUT_CLASSIFICATION	2.9974844221245255E-4	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9997002515577876	WITHOUT_CLASSIFICATION	2.9974844221245255E-4	TEST
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9998296758091606	WITHOUT_CLASSIFICATION	1.7032419083935906E-4	TEST
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9998642814959555	WITHOUT_CLASSIFICATION	1.357185040445189E-4	TEST
// line 529	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999184549342339	WITHOUT_CLASSIFICATION	8.154506576603448E-5	TEST
/* XXX*/	WITHOUT_CLASSIFICATION	0.9999017079027456	WITHOUT_CLASSIFICATION	9.829209725448557E-5	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999390179710527	WITHOUT_CLASSIFICATION	6.0982028947339724E-5	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998997112082808	WITHOUT_CLASSIFICATION	1.0028879171909713E-4	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999184549342339	WITHOUT_CLASSIFICATION	8.154506576603448E-5	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998805958735493	WITHOUT_CLASSIFICATION	1.194041264507366E-4	TEST
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999718011078236	WITHOUT_CLASSIFICATION	2.8198892176523662E-5	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999852462080174	WITHOUT_CLASSIFICATION	1.4753791982659574E-5	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9990401912483392	WITHOUT_CLASSIFICATION	9.598087516606869E-4	TEST
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999925303601576	WITHOUT_CLASSIFICATION	7.469639842348451E-6	TEST
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999874327184963	WITHOUT_CLASSIFICATION	1.2567281503565199E-5	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999898423493873	WITHOUT_CLASSIFICATION	1.015765061286419E-5	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999898423493873	WITHOUT_CLASSIFICATION	1.015765061286419E-5	TEST
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9998071326986039	WITHOUT_CLASSIFICATION	1.9286730139597106E-4	TEST
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9991906472508804	WITHOUT_CLASSIFICATION	8.093527491196211E-4	TEST
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9998863709680204	WITHOUT_CLASSIFICATION	1.1362903197962781E-4	TEST
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999824101091502	WITHOUT_CLASSIFICATION	1.7589890849719087E-5	TEST
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9998926653465972	WITHOUT_CLASSIFICATION	1.0733465340282935E-4	TEST
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9998673390475985	WITHOUT_CLASSIFICATION	1.3266095240145522E-4	TEST
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.999998187223082	WITHOUT_CLASSIFICATION	1.8127769179741733E-6	TEST
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999630341917629	WITHOUT_CLASSIFICATION	3.696580823710794E-5	TEST
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999857557673242	WITHOUT_CLASSIFICATION	1.4244232675880234E-5	TEST
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999707553598645	WITHOUT_CLASSIFICATION	2.924464013543598E-5	TEST
// Parser states:	WITHOUT_CLASSIFICATION	0.9999895376714026	WITHOUT_CLASSIFICATION	1.0462328597281347E-5	TEST
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999888221044101	WITHOUT_CLASSIFICATION	1.1177895589831191E-5	TEST
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999947900553463	WITHOUT_CLASSIFICATION	5.209944653606152E-6	TEST
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9997294257655418	WITHOUT_CLASSIFICATION	2.7057423445815947E-4	TEST
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999196051130248	WITHOUT_CLASSIFICATION	8.039488697522884E-5	TEST
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999829833753429	WITHOUT_CLASSIFICATION	1.701662465721791E-5	TEST
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999555061705118	WITHOUT_CLASSIFICATION	4.4493829488274924E-5	TEST
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999636759608966	WITHOUT_CLASSIFICATION	3.632403910341217E-5	TEST
// Node	WITHOUT_CLASSIFICATION	0.9999674334429257	WITHOUT_CLASSIFICATION	3.2566557074386816E-5	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9996175657449213	WITHOUT_CLASSIFICATION	3.824342550786488E-4	TEST
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9996520667382166	WITHOUT_CLASSIFICATION	3.4793326178342884E-4	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9996175657449213	WITHOUT_CLASSIFICATION	3.824342550786488E-4	TEST
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9995022317405388	WITHOUT_CLASSIFICATION	4.977682594611943E-4	TEST
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9996520667382166	WITHOUT_CLASSIFICATION	3.4793326178342884E-4	TEST
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9999817719702304	WITHOUT_CLASSIFICATION	1.8228029769553724E-5	TEST
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999687962302853	WITHOUT_CLASSIFICATION	3.120376971456002E-5	TEST
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999891654486498	WITHOUT_CLASSIFICATION	1.0834551350154774E-5	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999673553645454	WITHOUT_CLASSIFICATION	3.2644635454674836E-5	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999673553645454	WITHOUT_CLASSIFICATION	3.2644635454674836E-5	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999673553645454	WITHOUT_CLASSIFICATION	3.2644635454674836E-5	TEST
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9998750822417192	WITHOUT_CLASSIFICATION	1.2491775828086174E-4	TEST
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9921356616059651	WITHOUT_CLASSIFICATION	0.007864338394034895	TEST
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999735125869926	WITHOUT_CLASSIFICATION	2.648741300739211E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999738426702179	WITHOUT_CLASSIFICATION	2.615732978213474E-5	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999757897032727	WITHOUT_CLASSIFICATION	2.4210296727294425E-5	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999963898419215	WITHOUT_CLASSIFICATION	3.6101580785243294E-6	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999895112778044	WITHOUT_CLASSIFICATION	1.0488722195490932E-5	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999898834775199	WITHOUT_CLASSIFICATION	1.0116522480094164E-5	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 280	WITHOUT_CLASSIFICATION	0.9999925260217761	WITHOUT_CLASSIFICATION	7.4739782239375005E-6	TEST
// line 283	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 296	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 324	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 327	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 331	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 333	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 336	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 342	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 345	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 348	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 354	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 368	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 377	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 388	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 392	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 397	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 429	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 432	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 436	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 445	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 448	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 454	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 459	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 466	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 469	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 478	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 481	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 488	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 494	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 497	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 503	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 506	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 509	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 512	WITHOUT_CLASSIFICATION	0.9999925296704	WITHOUT_CLASSIFICATION	7.470329600027869E-6	TEST
// line 521	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 526	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 785	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 534	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 549	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 552	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 558	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 561	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 571	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 574	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 579	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 586	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 589	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 592	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 595	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 598	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 623	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 627	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 630	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 633	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 639	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 648	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 657	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 661	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 666	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 678	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 682	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 688	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 699	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 706	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 708	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 727	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 737	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 753	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 779	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 801	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 808	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 811	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 817	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 899	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 944	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 820	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 826	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 829	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 832	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 851	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 857	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 860	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 863	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 866	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 869	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 875	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 884	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 887	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 890	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 902	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 909	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 912	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 916	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 922	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 928	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 941	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 947	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 951	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 955	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 965	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 969	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 977	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 983	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1013	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1023	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1035	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1041	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1043	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1054	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1057	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1060	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1069	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1075	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1078	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1084	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1087	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1090	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1093	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1114	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1116	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1118	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1124	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1126	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1138	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1144	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1149	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1155	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1162	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1173	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1179	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1182	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1190	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1196	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1213	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1217	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1231	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1236	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1244	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1254	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1258	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1264	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1270	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1273	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1276	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1279	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1282	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1289	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1292	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1295	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1298	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1305	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1308	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1311	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1317	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1323	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1326	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1329	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1337	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1342	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1345	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1354	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1359	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1366	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1369	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1373	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1377	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1383	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1399	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1401	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1406	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1417	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1424	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1427	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1430	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1433	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1436	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1442	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1445	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1458	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1464	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1489	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1493	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1507	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1519	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1532	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1538	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1542	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1557	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1573	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1591	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1607	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1610	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1622	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1625	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1636	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1639	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1647	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1651	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1657	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1660	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1663	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1678	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1702	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1711	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1719	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1722	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1731	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1734	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1738	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1746	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1756	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1758	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1761	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1767	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1776	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1782	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1785	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1788	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1791	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1797	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1800	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1803	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1806	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1809	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1815	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1825	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1828	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1831	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1847	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9997002515577876	WITHOUT_CLASSIFICATION	2.9974844221245255E-4	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9997002515577876	WITHOUT_CLASSIFICATION	2.9974844221245255E-4	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999184549342339	WITHOUT_CLASSIFICATION	8.154506576603448E-5	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999390179710527	WITHOUT_CLASSIFICATION	6.0982028947339724E-5	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998997112082808	WITHOUT_CLASSIFICATION	1.0028879171909713E-4	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999184549342339	WITHOUT_CLASSIFICATION	8.154506576603448E-5	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998805958735493	WITHOUT_CLASSIFICATION	1.194041264507366E-4	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999603986532074	WITHOUT_CLASSIFICATION	3.960134679257468E-5	TEST
// line 1854	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1869	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1872	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1877	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1886	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1898	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1902	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1905	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1911	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1918	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1935	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1938	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1942	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1948	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1960	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1963	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1968	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1972	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1982	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1995	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 2000	WITHOUT_CLASSIFICATION	0.999992526471584	WITHOUT_CLASSIFICATION	7.473528415956972E-6	TEST
// line 2006	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 2010	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9997958355417179	WITHOUT_CLASSIFICATION	2.0416445828206484E-4	TEST
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9998428099392156	WITHOUT_CLASSIFICATION	1.5719006078445614E-4	TEST
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.999926933983321	WITHOUT_CLASSIFICATION	7.306601667900355E-5	TEST
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.999993626956737	WITHOUT_CLASSIFICATION	6.373043263081513E-6	TEST
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9998945793830082	WITHOUT_CLASSIFICATION	1.0542061699175177E-4	TEST
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9998755137928087	WITHOUT_CLASSIFICATION	1.2448620719131243E-4	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999852462080174	WITHOUT_CLASSIFICATION	1.4753791982659574E-5	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9990401912483392	WITHOUT_CLASSIFICATION	9.598087516606869E-4	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999898423493873	WITHOUT_CLASSIFICATION	1.015765061286419E-5	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999898423493873	WITHOUT_CLASSIFICATION	1.015765061286419E-5	TEST
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.999955436921772	WITHOUT_CLASSIFICATION	4.456307822794179E-5	TEST
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999900231102018	WITHOUT_CLASSIFICATION	9.97688979814085E-6	TEST
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999807425917118	WITHOUT_CLASSIFICATION	1.9257408288229545E-5	TEST
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999925303601576	WITHOUT_CLASSIFICATION	7.469639842348451E-6	TEST
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999953953593814	WITHOUT_CLASSIFICATION	4.6046406185836155E-6	TEST
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9997952486660538	WITHOUT_CLASSIFICATION	2.04751333946136E-4	TEST
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.99997030716632	WITHOUT_CLASSIFICATION	2.9692833680085052E-5	TEST
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999913499565287	WITHOUT_CLASSIFICATION	8.65004347127835E-6	TEST
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999839971414205	WITHOUT_CLASSIFICATION	1.6002858579539316E-5	TEST
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999847738770836	WITHOUT_CLASSIFICATION	1.5226122916366634E-5	TEST
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999601122954339	WITHOUT_CLASSIFICATION	3.988770456605214E-5	TEST
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999484677667658	WITHOUT_CLASSIFICATION	5.153223323418789E-5	TEST
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999446393952395	WITHOUT_CLASSIFICATION	5.536060476050534E-5	TEST
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999911580240072	WITHOUT_CLASSIFICATION	8.841975992815298E-6	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999803304524449	WITHOUT_CLASSIFICATION	1.9669547555071834E-5	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999803304524449	WITHOUT_CLASSIFICATION	1.9669547555071834E-5	TEST
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9996649709207791	WITHOUT_CLASSIFICATION	3.3502907922089225E-4	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999902684863933	WITHOUT_CLASSIFICATION	9.731513606815044E-6	TEST
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999925558000197	WITHOUT_CLASSIFICATION	7.4441999803549646E-6	TEST
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9998331347033282	WITHOUT_CLASSIFICATION	1.668652966717298E-4	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999893078598248	WITHOUT_CLASSIFICATION	1.0692140175295654E-5	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999896972808017	WITHOUT_CLASSIFICATION	1.0302719198353575E-5	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999931158205303	WITHOUT_CLASSIFICATION	6.8841794696236204E-6	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999896972808017	WITHOUT_CLASSIFICATION	1.0302719198353575E-5	TEST
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999727203076642	WITHOUT_CLASSIFICATION	2.7279692335772545E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999740732002477	WITHOUT_CLASSIFICATION	2.5926799752324355E-5	TEST
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9998405185298102	WITHOUT_CLASSIFICATION	1.5948147018983108E-4	TEST
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9998226005281594	WITHOUT_CLASSIFICATION	1.7739947184054183E-4	TEST
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.999586183953762	WITHOUT_CLASSIFICATION	4.138160462380259E-4	TEST
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.999586183953762	WITHOUT_CLASSIFICATION	4.138160462380259E-4	TEST
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999870465355343	WITHOUT_CLASSIFICATION	1.2953464465750358E-5	TEST
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999597372398935	WITHOUT_CLASSIFICATION	4.02627601065584E-5	TEST
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999588682439754	WITHOUT_CLASSIFICATION	4.113175602447944E-5	TEST
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999521936484171	WITHOUT_CLASSIFICATION	4.7806351582752314E-5	TEST
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999873288550535	WITHOUT_CLASSIFICATION	1.2671144946437585E-5	TEST
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9995630954134109	WITHOUT_CLASSIFICATION	4.369045865889729E-4	TEST
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9995630954134109	WITHOUT_CLASSIFICATION	4.369045865889729E-4	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9989284627730732	WITHOUT_CLASSIFICATION	0.0010715372269267539	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9998033542511413	WITHOUT_CLASSIFICATION	1.9664574885863264E-4	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9998033542511413	WITHOUT_CLASSIFICATION	1.9664574885863264E-4	TEST
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999735041796572	WITHOUT_CLASSIFICATION	2.649582034265612E-5	TEST
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9998661339594068	WITHOUT_CLASSIFICATION	1.3386604059328916E-4	TEST
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999534021708726	WITHOUT_CLASSIFICATION	4.659782912747883E-5	TEST
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999843535774887	WITHOUT_CLASSIFICATION	1.564642251136014E-5	TEST
// required and optional only	WITHOUT_CLASSIFICATION	0.9999943144666931	WITHOUT_CLASSIFICATION	5.6855333068422925E-6	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999896972808017	WITHOUT_CLASSIFICATION	1.0302719198353575E-5	TEST
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999759194017029	WITHOUT_CLASSIFICATION	2.4080598297106224E-5	TEST
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999998637976657	WITHOUT_CLASSIFICATION	1.3620233424640796E-7	TEST
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999451856163676	WITHOUT_CLASSIFICATION	5.481438363249884E-5	TEST
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999759332063227	WITHOUT_CLASSIFICATION	2.4066793677248485E-5	TEST
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999996836495538	WITHOUT_CLASSIFICATION	3.1635044618540755E-7	TEST
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999956544865525	WITHOUT_CLASSIFICATION	4.345513447591604E-6	TEST
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999818316971076	WITHOUT_CLASSIFICATION	1.8168302892387854E-5	TEST
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9998392198542881	WITHOUT_CLASSIFICATION	1.6078014571182462E-4	TEST
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9997201051706944	WITHOUT_CLASSIFICATION	2.7989482930551276E-4	TEST
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9998297259784544	WITHOUT_CLASSIFICATION	1.7027402154563817E-4	TEST
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999361661580884	WITHOUT_CLASSIFICATION	6.383384191152514E-5	TEST
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999996254065731	WITHOUT_CLASSIFICATION	3.745934268656365E-7	TEST
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9990701395638357	WITHOUT_CLASSIFICATION	9.298604361643605E-4	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999834741076812	WITHOUT_CLASSIFICATION	1.6525892318802546E-5	TEST
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9999008614532933	WITHOUT_CLASSIFICATION	9.913854670671626E-5	TEST
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999731299678507	WITHOUT_CLASSIFICATION	2.687003214920667E-5	TEST
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999769248681385	WITHOUT_CLASSIFICATION	2.307513186151285E-5	TEST
// id must always be even	WITHOUT_CLASSIFICATION	0.9999709252806662	WITHOUT_CLASSIFICATION	2.9074719333796603E-5	TEST
// with block pass	WITHOUT_CLASSIFICATION	0.9999544806232956	WITHOUT_CLASSIFICATION	4.551937670438502E-5	TEST
// no block	WITHOUT_CLASSIFICATION	0.9999942462485908	WITHOUT_CLASSIFICATION	5.753751409140597E-6	TEST
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9998707148465502	WITHOUT_CLASSIFICATION	1.2928515344977487E-4	TEST
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9995784497813095	WITHOUT_CLASSIFICATION	4.2155021869039644E-4	TEST
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.999577529322113	WITHOUT_CLASSIFICATION	4.2247067788711226E-4	TEST
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999427642214423	WITHOUT_CLASSIFICATION	5.72357785576278E-5	TEST
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999833734791682	WITHOUT_CLASSIFICATION	1.6626520831828552E-5	TEST
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999876107482188	WITHOUT_CLASSIFICATION	1.2389251781209925E-5	TEST
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999601358766723	WITHOUT_CLASSIFICATION	3.986412332766259E-5	TEST
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999940938774532	WITHOUT_CLASSIFICATION	5.90612254684335E-6	TEST
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9997740045213608	WITHOUT_CLASSIFICATION	2.2599547863929516E-4	TEST
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999730005181953	WITHOUT_CLASSIFICATION	2.6999481804774734E-5	TEST
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999607756726656	WITHOUT_CLASSIFICATION	3.922432733435048E-5	TEST
// Lastline	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9995961678941818	WITHOUT_CLASSIFICATION	4.038321058182019E-4	TEST
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999971697824509	WITHOUT_CLASSIFICATION	2.8302175491452213E-6	TEST
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999847637711647	WITHOUT_CLASSIFICATION	1.5236228835281473E-5	TEST
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999924744925804	WITHOUT_CLASSIFICATION	7.525507419526613E-6	TEST
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999832410776418	WITHOUT_CLASSIFICATION	1.675892235811546E-5	TEST
// silently ignore	WITHOUT_CLASSIFICATION	0.9999917115526226	WITHOUT_CLASSIFICATION	8.288447377400451E-6	TEST
// used by compiler	WITHOUT_CLASSIFICATION	0.9999909698627967	WITHOUT_CLASSIFICATION	9.030137203335373E-6	TEST
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999970402564293	WITHOUT_CLASSIFICATION	2.9597435707694723E-6	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999603986532074	WITHOUT_CLASSIFICATION	3.960134679257468E-5	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9998473451254927	WITHOUT_CLASSIFICATION	1.5265487450738305E-4	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.999977887383659	WITHOUT_CLASSIFICATION	2.2112616340980122E-5	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.999903125947129	WITHOUT_CLASSIFICATION	9.687405287102404E-5	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999763789839929	WITHOUT_CLASSIFICATION	2.3621016007116493E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999740732002477	WITHOUT_CLASSIFICATION	2.5926799752324355E-5	TEST
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999929926187741	WITHOUT_CLASSIFICATION	7.0073812259317794E-6	TEST
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999928879751943	WITHOUT_CLASSIFICATION	7.112024805765378E-6	TEST
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.999986607300006	WITHOUT_CLASSIFICATION	1.3392699993963851E-5	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999991352321226	WITHOUT_CLASSIFICATION	8.647678773592105E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999991352321226	WITHOUT_CLASSIFICATION	8.647678773592105E-7	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999925014824163	WITHOUT_CLASSIFICATION	7.498517583777565E-6	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999925014824163	WITHOUT_CLASSIFICATION	7.498517583777565E-6	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999925014824163	WITHOUT_CLASSIFICATION	7.498517583777565E-6	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999803195114365	WITHOUT_CLASSIFICATION	1.9680488563481542E-5	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999803195114365	WITHOUT_CLASSIFICATION	1.9680488563481542E-5	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999652551253859	WITHOUT_CLASSIFICATION	3.474487461408972E-5	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999652551253859	WITHOUT_CLASSIFICATION	3.474487461408972E-5	TEST
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9988221429177385	WITHOUT_CLASSIFICATION	0.0011778570822614275	TEST
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9998627007597494	WITHOUT_CLASSIFICATION	1.3729924025063044E-4	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.9999919998850286	WITHOUT_CLASSIFICATION	8.000114971327136E-6	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.9999919998850286	WITHOUT_CLASSIFICATION	8.000114971327136E-6	TEST
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999176523939431	WITHOUT_CLASSIFICATION	8.234760605680189E-5	TEST
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999583168830998	WITHOUT_CLASSIFICATION	4.168311690016095E-5	TEST
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999615525393306	WITHOUT_CLASSIFICATION	3.844746066950135E-5	TEST
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999821261323151	WITHOUT_CLASSIFICATION	1.7873867684949755E-5	TEST
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.999988833101255	WITHOUT_CLASSIFICATION	1.1166898745084554E-5	TEST
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999572883748782	WITHOUT_CLASSIFICATION	4.27116251218329E-5	TEST
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.999954068293291	WITHOUT_CLASSIFICATION	4.593170670898283E-5	TEST
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999729613674423	WITHOUT_CLASSIFICATION	2.7038632557776586E-5	TEST
// caller	WITHOUT_CLASSIFICATION	0.9999680519228622	WITHOUT_CLASSIFICATION	3.194807713784092E-5	TEST
// calltype // block	WITHOUT_CLASSIFICATION	0.9999898419441263	WITHOUT_CLASSIFICATION	1.0158055873742187E-5	TEST
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999946095380658	WITHOUT_CLASSIFICATION	5.390461934087715E-6	TEST
// load arity for check	WITHOUT_CLASSIFICATION	0.9999676211145767	WITHOUT_CLASSIFICATION	3.2378885423354075E-5	TEST
// throw	WITHOUT_CLASSIFICATION	0.9999722120696108	WITHOUT_CLASSIFICATION	2.778793038922992E-5	TEST
// load arity for error	WITHOUT_CLASSIFICATION	0.99996849560342	WITHOUT_CLASSIFICATION	3.1504396580022594E-5	TEST
// arity ok, continue	WITHOUT_CLASSIFICATION	0.99997404599975	WITHOUT_CLASSIFICATION	2.595400024996043E-5	TEST
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9996997853068419	WITHOUT_CLASSIFICATION	3.00214693158024E-4	TEST
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9998133863826795	WITHOUT_CLASSIFICATION	1.866136173205391E-4	TEST
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999729176684375	WITHOUT_CLASSIFICATION	2.7082331562449563E-5	TEST
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999729176684375	WITHOUT_CLASSIFICATION	2.7082331562449563E-5	TEST
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.999560448769399	WITHOUT_CLASSIFICATION	4.395512306010262E-4	TEST
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999699173977383	WITHOUT_CLASSIFICATION	3.008260226170021E-5	TEST
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999458739161523	WITHOUT_CLASSIFICATION	5.412608384765012E-5	TEST
// load the encoding	WITHOUT_CLASSIFICATION	0.9999955376566098	WITHOUT_CLASSIFICATION	4.462343390257325E-6	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999632295568591	WITHOUT_CLASSIFICATION	3.677044314090774E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999632295568591	WITHOUT_CLASSIFICATION	3.677044314090774E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999632295568591	WITHOUT_CLASSIFICATION	3.677044314090774E-5	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999603846243263	WITHOUT_CLASSIFICATION	3.9615375673632745E-5	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999603846243263	WITHOUT_CLASSIFICATION	3.9615375673632745E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999603846243263	WITHOUT_CLASSIFICATION	3.9615375673632745E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999603846243263	WITHOUT_CLASSIFICATION	3.9615375673632745E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999603846243263	WITHOUT_CLASSIFICATION	3.9615375673632745E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99996090980072	WITHOUT_CLASSIFICATION	3.9090199279987226E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99996090980072	WITHOUT_CLASSIFICATION	3.9090199279987226E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99996090980072	WITHOUT_CLASSIFICATION	3.9090199279987226E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99996090980072	WITHOUT_CLASSIFICATION	3.9090199279987226E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99996090980072	WITHOUT_CLASSIFICATION	3.9090199279987226E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99996090980072	WITHOUT_CLASSIFICATION	3.9090199279987226E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99996090980072	WITHOUT_CLASSIFICATION	3.9090199279987226E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99996090980072	WITHOUT_CLASSIFICATION	3.9090199279987226E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99996090980072	WITHOUT_CLASSIFICATION	3.9090199279987226E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99996090980072	WITHOUT_CLASSIFICATION	3.9090199279987226E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99996090980072	WITHOUT_CLASSIFICATION	3.9090199279987226E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99996090980072	WITHOUT_CLASSIFICATION	3.9090199279987226E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99996090980072	WITHOUT_CLASSIFICATION	3.9090199279987226E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99996090980072	WITHOUT_CLASSIFICATION	3.9090199279987226E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99996090980072	WITHOUT_CLASSIFICATION	3.9090199279987226E-5	TEST
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999934480224247	WITHOUT_CLASSIFICATION	6.551977575216523E-6	TEST
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999729176684375	WITHOUT_CLASSIFICATION	2.7082331562449563E-5	TEST
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.999960343107365	WITHOUT_CLASSIFICATION	3.965689263496092E-5	TEST
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999979207081316	WITHOUT_CLASSIFICATION	2.0792918683297464E-6	TEST
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.999960343107365	WITHOUT_CLASSIFICATION	3.965689263496092E-5	TEST
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999919038640502	WITHOUT_CLASSIFICATION	8.096135949734604E-6	TEST
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999728747420172	WITHOUT_CLASSIFICATION	2.7125257982750687E-5	TEST
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999633030161919	WITHOUT_CLASSIFICATION	3.6696983808034105E-5	TEST
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999148341056692	WITHOUT_CLASSIFICATION	8.516589433083987E-5	TEST
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9997387697147543	WITHOUT_CLASSIFICATION	2.612302852457205E-4	TEST
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.999995233999086	WITHOUT_CLASSIFICATION	4.766000914008438E-6	TEST
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999855979988588	WITHOUT_CLASSIFICATION	1.4402001141283584E-5	TEST
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999947624873021	WITHOUT_CLASSIFICATION	5.2375126978569306E-6	TEST
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.999955700497197	WITHOUT_CLASSIFICATION	4.429950280312596E-5	TEST
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9976551623009813	WITHOUT_CLASSIFICATION	0.002344837699018712	TEST
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9996944120987633	WITHOUT_CLASSIFICATION	3.055879012366786E-4	TEST
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999942389392286	WITHOUT_CLASSIFICATION	5.761060771436237E-6	TEST
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999963383565135	WITHOUT_CLASSIFICATION	3.66164348654589E-6	TEST
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999980049136572	WITHOUT_CLASSIFICATION	1.995086342776057E-6	TEST
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9994816653196433	WITHOUT_CLASSIFICATION	5.183346803566361E-4	TEST
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999729995780199	WITHOUT_CLASSIFICATION	2.7000421980058507E-5	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999931158205303	WITHOUT_CLASSIFICATION	6.8841794696236204E-6	TEST
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9971437513166586	WITHOUT_CLASSIFICATION	0.0028562486833413844	TEST
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999631151811029	WITHOUT_CLASSIFICATION	3.688481889709848E-5	TEST
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999988173985166	WITHOUT_CLASSIFICATION	1.1826014833572513E-6	TEST
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999962982081043	WITHOUT_CLASSIFICATION	3.7017918956683774E-6	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999862406298706	WITHOUT_CLASSIFICATION	1.3759370129473953E-5	TEST
// extension extensions	WITHOUT_CLASSIFICATION	0.9999737221881789	WITHOUT_CLASSIFICATION	2.6277811821056254E-5	TEST
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999514672234712	WITHOUT_CLASSIFICATION	4.8532776528935936E-5	TEST
// try all extensions	WITHOUT_CLASSIFICATION	0.9999827193254861	WITHOUT_CLASSIFICATION	1.7280674513975636E-5	TEST
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999602405379027	WITHOUT_CLASSIFICATION	3.975946209737569E-5	TEST
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999879701149327	WITHOUT_CLASSIFICATION	1.2029885067281618E-5	TEST
// try only literal search	WITHOUT_CLASSIFICATION	0.9999746888140959	WITHOUT_CLASSIFICATION	2.531118590417089E-5	TEST
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999921771528861	WITHOUT_CLASSIFICATION	7.82284711378016E-6	TEST
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999826768875446	WITHOUT_CLASSIFICATION	1.7323112455423645E-5	TEST
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999967431812763	WITHOUT_CLASSIFICATION	3.256818723815614E-6	TEST
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999723049655664	WITHOUT_CLASSIFICATION	2.769503443348963E-5	TEST
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999991096429817	WITHOUT_CLASSIFICATION	8.903570182694806E-7	TEST
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999878955253144	WITHOUT_CLASSIFICATION	1.2104474685479552E-5	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999797545096364	WITHOUT_CLASSIFICATION	2.0245490363685075E-5	TEST
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.999980836551576	WITHOUT_CLASSIFICATION	1.916344842407358E-5	TEST
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999851989400316	WITHOUT_CLASSIFICATION	1.4801059968505215E-5	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9998586979626511	WITHOUT_CLASSIFICATION	1.4130203734886117E-4	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9998586979626511	WITHOUT_CLASSIFICATION	1.4130203734886117E-4	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999448757807291	WITHOUT_CLASSIFICATION	5.512421927085416E-5	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999448757807291	WITHOUT_CLASSIFICATION	5.512421927085416E-5	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9998405482197262	WITHOUT_CLASSIFICATION	1.5945178027367452E-4	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9998405482197262	WITHOUT_CLASSIFICATION	1.5945178027367452E-4	TEST
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999641234361304	WITHOUT_CLASSIFICATION	3.587656386964395E-5	TEST
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999476826551651	WITHOUT_CLASSIFICATION	5.231734483492979E-5	TEST
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.999799206198406	WITHOUT_CLASSIFICATION	2.0079380159400631E-4	TEST
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9998901847924886	WITHOUT_CLASSIFICATION	1.098152075114551E-4	TEST
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999856755014123	WITHOUT_CLASSIFICATION	1.4324498587737024E-5	TEST
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9952690140301773	WITHOUT_CLASSIFICATION	0.00473098596982272	TEST
// signed short, native	WITHOUT_CLASSIFICATION	0.9999730165118094	WITHOUT_CLASSIFICATION	2.698348819057608E-5	TEST
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999967539320779	WITHOUT_CLASSIFICATION	3.2460679220657586E-6	TEST
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999397732518308	WITHOUT_CLASSIFICATION	6.022674816922506E-5	TEST
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9992975865127721	WITHOUT_CLASSIFICATION	7.024134872278606E-4	TEST
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9994089166015437	WITHOUT_CLASSIFICATION	5.910833984562627E-4	TEST
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.999978282015523	WITHOUT_CLASSIFICATION	2.1717984477080514E-5	TEST
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999968113366522	WITHOUT_CLASSIFICATION	3.188663347735651E-6	TEST
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999989432038549	WITHOUT_CLASSIFICATION	1.0567961451927162E-6	TEST
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999163567034771	WITHOUT_CLASSIFICATION	8.364329652285427E-5	TEST
//            write('S');	WITHOUT_CLASSIFICATION	0.9999785644245675	WITHOUT_CLASSIFICATION	2.143557543248481E-5	TEST
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999958906180892	WITHOUT_CLASSIFICATION	4.109381910719859E-6	TEST
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999799531831146	WITHOUT_CLASSIFICATION	2.004681688538415E-5	TEST
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9998829195983068	WITHOUT_CLASSIFICATION	1.1708040169320074E-4	TEST
// w_symbol	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// w_unique	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999262507381923	WITHOUT_CLASSIFICATION	7.37492618077179E-5	TEST
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999726571087164	WITHOUT_CLASSIFICATION	2.7342891283641157E-5	TEST
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9998511743790907	WITHOUT_CLASSIFICATION	1.4882562090935708E-4	TEST
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999889887190645	WITHOUT_CLASSIFICATION	1.101128093546522E-5	TEST
// sic	WITHOUT_CLASSIFICATION	0.9999673553645454	WITHOUT_CLASSIFICATION	3.2644635454674836E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999546770396688	WITHOUT_CLASSIFICATION	4.5322960331093026E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999546770396688	WITHOUT_CLASSIFICATION	4.5322960331093026E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999546770396688	WITHOUT_CLASSIFICATION	4.5322960331093026E-5	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999996646298943	WITHOUT_CLASSIFICATION	3.3537010565543846E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999996646298943	WITHOUT_CLASSIFICATION	3.3537010565543846E-7	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999834741076812	WITHOUT_CLASSIFICATION	1.6525892318802546E-5	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999834741076812	WITHOUT_CLASSIFICATION	1.6525892318802546E-5	TEST
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999969078153126	WITHOUT_CLASSIFICATION	3.092184687568325E-6	TEST
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9999590180532184	WITHOUT_CLASSIFICATION	4.098194678152862E-5	TEST
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999729836773839	WITHOUT_CLASSIFICATION	2.701632261606334E-5	TEST
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999733444242174	WITHOUT_CLASSIFICATION	2.6655575782645925E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999546770396688	WITHOUT_CLASSIFICATION	4.5322960331093026E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999546770396688	WITHOUT_CLASSIFICATION	4.5322960331093026E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999546770396688	WITHOUT_CLASSIFICATION	4.5322960331093026E-5	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999996646298943	WITHOUT_CLASSIFICATION	3.3537010565543846E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999996646298943	WITHOUT_CLASSIFICATION	3.3537010565543846E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999996646298943	WITHOUT_CLASSIFICATION	3.3537010565543846E-7	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999834741076812	WITHOUT_CLASSIFICATION	1.6525892318802546E-5	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999834741076812	WITHOUT_CLASSIFICATION	1.6525892318802546E-5	TEST
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999745601811256	WITHOUT_CLASSIFICATION	2.543981887442375E-5	TEST
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999938433135664	WITHOUT_CLASSIFICATION	6.156686433633118E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999730341110684	WITHOUT_CLASSIFICATION	2.6965888931641658E-5	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999730341110684	WITHOUT_CLASSIFICATION	2.6965888931641658E-5	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999730341110684	WITHOUT_CLASSIFICATION	2.6965888931641658E-5	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999730341110684	WITHOUT_CLASSIFICATION	2.6965888931641658E-5	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999730341110684	WITHOUT_CLASSIFICATION	2.6965888931641658E-5	TEST
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999761861905281	WITHOUT_CLASSIFICATION	2.3813809471844386E-5	TEST
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.999921712227833	WITHOUT_CLASSIFICATION	7.828777216703184E-5	TEST
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.999992706336657	WITHOUT_CLASSIFICATION	7.293663342868741E-6	TEST
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999875354810223	WITHOUT_CLASSIFICATION	1.2464518977639663E-5	TEST
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999721293483094	WITHOUT_CLASSIFICATION	2.7870651690695548E-5	TEST
// not enough bytes	WITHOUT_CLASSIFICATION	0.9999458679949857	WITHOUT_CLASSIFICATION	5.4132005014214686E-5	TEST
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999886231299423	WITHOUT_CLASSIFICATION	1.1376870057622905E-5	TEST
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999935651441298	WITHOUT_CLASSIFICATION	6.434855870178376E-6	TEST
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999576304918856	WITHOUT_CLASSIFICATION	4.236950811441234E-5	TEST
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999609057051708	WITHOUT_CLASSIFICATION	3.9094294829184296E-5	TEST
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.999625142751208	WITHOUT_CLASSIFICATION	3.7485724879209774E-4	TEST
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9998991926205192	WITHOUT_CLASSIFICATION	1.0080737948074786E-4	TEST
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.99997423994771	WITHOUT_CLASSIFICATION	2.5760052290090105E-5	TEST
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9998780060003145	WITHOUT_CLASSIFICATION	1.2199399968544762E-4	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999895540917768	WITHOUT_CLASSIFICATION	1.0445908223117107E-5	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999895540917768	WITHOUT_CLASSIFICATION	1.0445908223117107E-5	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999895540917768	WITHOUT_CLASSIFICATION	1.0445908223117107E-5	TEST
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9927766802014363	WITHOUT_CLASSIFICATION	0.00722331979856375	TEST
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9927766802014363	WITHOUT_CLASSIFICATION	0.00722331979856375	TEST
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999791865083238	WITHOUT_CLASSIFICATION	2.0813491676153874E-5	TEST
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999424118922584	WITHOUT_CLASSIFICATION	5.758810774164788E-5	TEST
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999699769607715	WITHOUT_CLASSIFICATION	3.0023039228401442E-5	TEST
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999699769607715	WITHOUT_CLASSIFICATION	3.0023039228401442E-5	TEST
// single precision, native	WITHOUT_CLASSIFICATION	0.9999795097039347	WITHOUT_CLASSIFICATION	2.0490296065321594E-5	TEST
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999699957901917	WITHOUT_CLASSIFICATION	3.00042098082352E-5	TEST
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.999968798210933	WITHOUT_CLASSIFICATION	3.120178906703775E-5	TEST
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.999968798210933	WITHOUT_CLASSIFICATION	3.120178906703775E-5	TEST
// double precision, native	WITHOUT_CLASSIFICATION	0.9999787052160116	WITHOUT_CLASSIFICATION	2.129478398833164E-5	TEST
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999729995780199	WITHOUT_CLASSIFICATION	2.7000421980058507E-5	TEST
// signed char	WITHOUT_CLASSIFICATION	0.9999896751316742	WITHOUT_CLASSIFICATION	1.03248683257775E-5	TEST
// unsigned char	WITHOUT_CLASSIFICATION	0.9999896625678141	WITHOUT_CLASSIFICATION	1.0337432186009207E-5	TEST
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999729268989829	WITHOUT_CLASSIFICATION	2.7073101017161473E-5	TEST
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999894924257222	WITHOUT_CLASSIFICATION	1.050757427788279E-5	TEST
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999733353360231	WITHOUT_CLASSIFICATION	2.666466397694084E-5	TEST
// int, native	WITHOUT_CLASSIFICATION	0.9999896509503241	WITHOUT_CLASSIFICATION	1.034904967597108E-5	TEST
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999604656236841	WITHOUT_CLASSIFICATION	3.953437631586867E-5	TEST
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999485831794748	WITHOUT_CLASSIFICATION	5.141682052527795E-5	TEST
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999804362608333	WITHOUT_CLASSIFICATION	1.9563739166684927E-5	TEST
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.999946086561276	WITHOUT_CLASSIFICATION	5.391343872397828E-5	TEST
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999729176684375	WITHOUT_CLASSIFICATION	2.7082331562449563E-5	TEST
// obtain a	WITHOUT_CLASSIFICATION	0.9999909844033662	WITHOUT_CLASSIFICATION	9.015596633778418E-6	TEST
// obtain b	WITHOUT_CLASSIFICATION	0.9999895946609605	WITHOUT_CLASSIFICATION	1.0405339039493453E-5	TEST
// obtain c	WITHOUT_CLASSIFICATION	0.999990712322729	WITHOUT_CLASSIFICATION	9.287677271093111E-6	TEST
// obtain d	WITHOUT_CLASSIFICATION	0.9999894991037425	WITHOUT_CLASSIFICATION	1.0500896257563055E-5	TEST
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9996648289394844	WITHOUT_CLASSIFICATION	3.3517106051558093E-4	TEST
/* 1 */	WITHOUT_CLASSIFICATION	0.9999088817585212	WITHOUT_CLASSIFICATION	9.111824147880186E-5	TEST
/* 2 */	WITHOUT_CLASSIFICATION	0.9999209898342898	WITHOUT_CLASSIFICATION	7.90101657101494E-5	TEST
/* 3 */	WITHOUT_CLASSIFICATION	0.9997454594776684	WITHOUT_CLASSIFICATION	2.545405223316145E-4	TEST
/* 4 */	WITHOUT_CLASSIFICATION	0.999916173995409	WITHOUT_CLASSIFICATION	8.382600459093979E-5	TEST
/* 5 */	WITHOUT_CLASSIFICATION	0.9999079809095337	WITHOUT_CLASSIFICATION	9.201909046625675E-5	TEST
/* 6 */	WITHOUT_CLASSIFICATION	0.9999091174289336	WITHOUT_CLASSIFICATION	9.088257106640517E-5	TEST
/* 7 */	WITHOUT_CLASSIFICATION	0.9999032625910952	WITHOUT_CLASSIFICATION	9.673740890476281E-5	TEST
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999646054565796	WITHOUT_CLASSIFICATION	3.539454342041233E-5	TEST
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.999947133259186	WITHOUT_CLASSIFICATION	5.286674081382344E-5	TEST
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999976951602323	WITHOUT_CLASSIFICATION	2.304839767769829E-6	TEST
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9333443008501886	TEST	0.06665569914981144	WITHOUT_CLASSIFICATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.999988447070616	WITHOUT_CLASSIFICATION	1.1552929384134346E-5	TEST
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999963891202093	WITHOUT_CLASSIFICATION	3.610879790781175E-6	TEST
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999461540765705	WITHOUT_CLASSIFICATION	5.384592342943064E-5	TEST
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999762888819219	WITHOUT_CLASSIFICATION	2.3711118078114046E-5	TEST
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999317571702397	WITHOUT_CLASSIFICATION	6.824282976027282E-5	TEST
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9995687626365121	WITHOUT_CLASSIFICATION	4.312373634878609E-4	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9993055564992183	WITHOUT_CLASSIFICATION	6.944435007818309E-4	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9993055564992183	WITHOUT_CLASSIFICATION	6.944435007818309E-4	TEST
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9994142673098665	WITHOUT_CLASSIFICATION	5.85732690133493E-4	TEST
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999936972307538	WITHOUT_CLASSIFICATION	6.30276924625752E-6	TEST
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9995687626365121	WITHOUT_CLASSIFICATION	4.312373634878609E-4	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9956592596545589	WITHOUT_CLASSIFICATION	0.0043407403454411575	TEST
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9995041921996631	WITHOUT_CLASSIFICATION	4.958078003367761E-4	TEST
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9998146911904776	WITHOUT_CLASSIFICATION	1.8530880952233775E-4	TEST
// are we recursing?	WITHOUT_CLASSIFICATION	0.9999913488239954	WITHOUT_CLASSIFICATION	8.651176004545188E-6	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999717757439195	WITHOUT_CLASSIFICATION	2.822425608051101E-5	TEST
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999945835599104	WITHOUT_CLASSIFICATION	5.4164400895985046E-6	TEST
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999932864477014	WITHOUT_CLASSIFICATION	6.713552298580599E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999970557177191	WITHOUT_CLASSIFICATION	2.944282280895929E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999970557177191	WITHOUT_CLASSIFICATION	2.944282280895929E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999970557177191	WITHOUT_CLASSIFICATION	2.944282280895929E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999970557177191	WITHOUT_CLASSIFICATION	2.944282280895929E-6	TEST
// try both	WITHOUT_CLASSIFICATION	0.9999912440066198	WITHOUT_CLASSIFICATION	8.75599338030833E-6	TEST
// just unix	WITHOUT_CLASSIFICATION	0.9999933646618795	WITHOUT_CLASSIFICATION	6.635338120531296E-6	TEST
// just windows	WITHOUT_CLASSIFICATION	0.9999959284382384	WITHOUT_CLASSIFICATION	4.071561761574936E-6	TEST
// neither	WITHOUT_CLASSIFICATION	0.9999673580560248	WITHOUT_CLASSIFICATION	3.2641943975184507E-5	TEST
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9997777250432033	WITHOUT_CLASSIFICATION	2.2227495679682326E-4	TEST
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999724701571828	WITHOUT_CLASSIFICATION	2.7529842817156998E-5	TEST
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999897692022145	WITHOUT_CLASSIFICATION	1.023079778549291E-5	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999933322617203	WITHOUT_CLASSIFICATION	6.667738279724097E-6	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999933322617203	WITHOUT_CLASSIFICATION	6.667738279724097E-6	TEST
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999946899337366	WITHOUT_CLASSIFICATION	5.310066263326938E-6	TEST
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999299340916198	WITHOUT_CLASSIFICATION	7.006590838022301E-5	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9993031875116185	WITHOUT_CLASSIFICATION	6.968124883814752E-4	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999916001619551	WITHOUT_CLASSIFICATION	8.399838044908248E-6	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999916001619551	WITHOUT_CLASSIFICATION	8.399838044908248E-6	TEST
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999856715965386	WITHOUT_CLASSIFICATION	1.4328403461326049E-5	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999965506776973	WITHOUT_CLASSIFICATION	3.4493223026979416E-6	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999965506776973	WITHOUT_CLASSIFICATION	3.4493223026979416E-6	TEST
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9989419952487008	WITHOUT_CLASSIFICATION	0.0010580047512993081	TEST
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999906547410864	WITHOUT_CLASSIFICATION	9.345258913494617E-6	TEST
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999972624414201	WITHOUT_CLASSIFICATION	2.737558579865339E-6	TEST
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9998763807856168	WITHOUT_CLASSIFICATION	1.2361921438325103E-4	TEST
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.999951838065377	WITHOUT_CLASSIFICATION	4.8161934623000664E-5	TEST
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999990026688016	WITHOUT_CLASSIFICATION	9.97331198357714E-7	TEST
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.999877697290738	WITHOUT_CLASSIFICATION	1.2230270926185513E-4	TEST
//sequential	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999907944046904	WITHOUT_CLASSIFICATION	9.205595309578957E-6	TEST
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999670865572517	WITHOUT_CLASSIFICATION	3.2913442748161946E-5	TEST
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999417261018005	WITHOUT_CLASSIFICATION	5.827389819947398E-5	TEST
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9399711863386884	WITHOUT_CLASSIFICATION	0.06002881366131167	TEST
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9461846040675577	WITHOUT_CLASSIFICATION	0.05381539593244231	TEST
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999959338493567	WITHOUT_CLASSIFICATION	4.066150643295528E-6	TEST
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999703511471317	WITHOUT_CLASSIFICATION	2.964885286828749E-5	TEST
// Args	WITHOUT_CLASSIFICATION	0.9999673796413479	WITHOUT_CLASSIFICATION	3.262035865205107E-5	TEST
// static methods only	WITHOUT_CLASSIFICATION	0.999979083213715	WITHOUT_CLASSIFICATION	2.091678628493992E-5	TEST
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9996426522062476	WITHOUT_CLASSIFICATION	3.573477937523629E-4	TEST
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999957772934568	WITHOUT_CLASSIFICATION	4.222706543218292E-6	TEST
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999708359617774	WITHOUT_CLASSIFICATION	2.916403822260572E-5	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999942301056824	WITHOUT_CLASSIFICATION	5.769894317652273E-6	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999916677008872	WITHOUT_CLASSIFICATION	8.332299112829761E-6	TEST
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9997772544450315	WITHOUT_CLASSIFICATION	2.2274555496845948E-4	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999917720760744	WITHOUT_CLASSIFICATION	8.227923925737947E-6	TEST
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9997960621141354	WITHOUT_CLASSIFICATION	2.039378858645856E-4	TEST
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999986863610326	WITHOUT_CLASSIFICATION	1.3136389674582844E-6	TEST
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999486264620301	WITHOUT_CLASSIFICATION	5.137353796987297E-5	TEST
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999993335248646	WITHOUT_CLASSIFICATION	6.664751354887329E-7	TEST
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999011140966493	WITHOUT_CLASSIFICATION	9.888590335063507E-5	TEST
// ..	WITHOUT_CLASSIFICATION	0.9999674365506	WITHOUT_CLASSIFICATION	3.256344939992948E-5	TEST
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.999950661531226	WITHOUT_CLASSIFICATION	4.933846877385416E-5	TEST
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9998963542312787	WITHOUT_CLASSIFICATION	1.0364576872135446E-4	TEST
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999729982189122	WITHOUT_CLASSIFICATION	2.7001781087746106E-5	TEST
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999992400574944	WITHOUT_CLASSIFICATION	7.599425056383599E-7	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9992899016615642	WITHOUT_CLASSIFICATION	7.100983384358504E-4	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999837629438653	WITHOUT_CLASSIFICATION	1.6237056134798945E-5	TEST
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9996426522062476	WITHOUT_CLASSIFICATION	3.573477937523629E-4	TEST
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.99964577283846	WITHOUT_CLASSIFICATION	3.542271615399847E-4	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9992899016615642	WITHOUT_CLASSIFICATION	7.100983384358504E-4	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999837629438653	WITHOUT_CLASSIFICATION	1.6237056134798945E-5	TEST
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999438724757201	WITHOUT_CLASSIFICATION	5.6127524279841166E-5	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9997503400437528	WITHOUT_CLASSIFICATION	2.4965995624706856E-4	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9997503400437528	WITHOUT_CLASSIFICATION	2.4965995624706856E-4	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999505967883344	WITHOUT_CLASSIFICATION	4.940321166568619E-5	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999807615197663	WITHOUT_CLASSIFICATION	1.923848023368E-5	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999834194607592	WITHOUT_CLASSIFICATION	1.6580539240819752E-5	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999941378375632	WITHOUT_CLASSIFICATION	5.862162436729295E-6	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9998434212128202	WITHOUT_CLASSIFICATION	1.5657878717973791E-4	TEST
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999340498419331	WITHOUT_CLASSIFICATION	6.595015806689271E-5	TEST
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999770594158995	WITHOUT_CLASSIFICATION	2.2940584100392586E-5	TEST
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999744039702793	WITHOUT_CLASSIFICATION	2.5596029720802124E-5	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999287591468451	WITHOUT_CLASSIFICATION	7.124085315491994E-5	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9999674980362664	WITHOUT_CLASSIFICATION	3.2501963733630056E-5	TEST
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999152858908699	WITHOUT_CLASSIFICATION	8.471410913014027E-5	TEST
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999786207573722	WITHOUT_CLASSIFICATION	2.137924262781062E-5	TEST
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999811041430274	WITHOUT_CLASSIFICATION	1.88958569725692E-5	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999867857636937	WITHOUT_CLASSIFICATION	1.321423630637332E-5	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999867857636937	WITHOUT_CLASSIFICATION	1.321423630637332E-5	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.99981911510231	WITHOUT_CLASSIFICATION	1.8088489768995132E-4	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.99981911510231	WITHOUT_CLASSIFICATION	1.8088489768995132E-4	TEST
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999782669391332	WITHOUT_CLASSIFICATION	2.1733060866844263E-5	TEST
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999902266247389	WITHOUT_CLASSIFICATION	9.773375261031096E-6	TEST
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999454363720929	WITHOUT_CLASSIFICATION	5.456362790717248E-5	TEST
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9996426522062476	WITHOUT_CLASSIFICATION	3.573477937523629E-4	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999834194607592	WITHOUT_CLASSIFICATION	1.6580539240819752E-5	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999941378375632	WITHOUT_CLASSIFICATION	5.862162436729295E-6	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999287591468451	WITHOUT_CLASSIFICATION	7.124085315491994E-5	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9999674980362664	WITHOUT_CLASSIFICATION	3.2501963733630056E-5	TEST
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999824299499958	WITHOUT_CLASSIFICATION	1.7570050004252864E-5	TEST
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999937537354165	WITHOUT_CLASSIFICATION	6.246264583476272E-6	TEST
// \v	WITHOUT_CLASSIFICATION	0.9999673553645454	WITHOUT_CLASSIFICATION	3.2644635454674836E-5	TEST
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999896625678141	WITHOUT_CLASSIFICATION	1.0337432186009207E-5	TEST
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999738425866233	WITHOUT_CLASSIFICATION	2.615741337684247E-5	TEST
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999014174466101	WITHOUT_CLASSIFICATION	9.858255338989313E-5	TEST
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.999560866810674	WITHOUT_CLASSIFICATION	4.391331893259836E-4	TEST
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999894975692097	WITHOUT_CLASSIFICATION	1.0502430790324628E-5	TEST
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999921144587186	WITHOUT_CLASSIFICATION	7.885541281497124E-6	TEST
// negative values	WITHOUT_CLASSIFICATION	0.9999927499511269	WITHOUT_CLASSIFICATION	7.250048873191839E-6	TEST
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999937148617851	WITHOUT_CLASSIFICATION	6.285138214822965E-6	TEST
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9984987046634504	WITHOUT_CLASSIFICATION	0.0015012953365496383	TEST
// no such luck...	WITHOUT_CLASSIFICATION	0.9999940931150282	WITHOUT_CLASSIFICATION	5.906884971814184E-6	TEST
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9997913654206131	WITHOUT_CLASSIFICATION	2.0863457938683852E-4	TEST
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999939191833034	WITHOUT_CLASSIFICATION	6.0808166965944705E-6	TEST
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999722240305141	WITHOUT_CLASSIFICATION	2.777596948588491E-5	TEST
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999319585544332	WITHOUT_CLASSIFICATION	6.804144556682242E-5	TEST
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9998981433801557	WITHOUT_CLASSIFICATION	1.0185661984429108E-4	TEST
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.999931045954587	WITHOUT_CLASSIFICATION	6.895404541294232E-5	TEST
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999729176684375	WITHOUT_CLASSIFICATION	2.7082331562449563E-5	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999729176684375	WITHOUT_CLASSIFICATION	2.7082331562449563E-5	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999729176684375	WITHOUT_CLASSIFICATION	2.7082331562449563E-5	TEST
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9997580754055284	WITHOUT_CLASSIFICATION	2.4192459447162004E-4	TEST
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999687962302853	WITHOUT_CLASSIFICATION	3.120376971456002E-5	TEST
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.999999556576044	WITHOUT_CLASSIFICATION	4.4342395600866344E-7	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9996433276250744	WITHOUT_CLASSIFICATION	3.566723749257372E-4	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9996433276250744	WITHOUT_CLASSIFICATION	3.566723749257372E-4	TEST
// \v	WITHOUT_CLASSIFICATION	0.9999673553645454	WITHOUT_CLASSIFICATION	3.2644635454674836E-5	TEST
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.999560448769399	WITHOUT_CLASSIFICATION	4.395512306010262E-4	TEST
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9996426522062476	WITHOUT_CLASSIFICATION	3.573477937523629E-4	TEST
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9996426522062476	WITHOUT_CLASSIFICATION	3.573477937523629E-4	TEST
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9996426522062476	WITHOUT_CLASSIFICATION	3.573477937523629E-4	TEST
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9996426522062476	WITHOUT_CLASSIFICATION	3.573477937523629E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9996426522062476	WITHOUT_CLASSIFICATION	3.573477937523629E-4	TEST
// no number	WITHOUT_CLASSIFICATION	0.999993582774885	WITHOUT_CLASSIFICATION	6.417225115050523E-6	TEST
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999914810704581	WITHOUT_CLASSIFICATION	8.518929541937604E-6	TEST
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9983637563071246	WITHOUT_CLASSIFICATION	0.0016362436928754054	TEST
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9998638872264172	WITHOUT_CLASSIFICATION	1.3611277358289246E-4	TEST
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999969765002175	WITHOUT_CLASSIFICATION	3.023499782527472E-6	TEST
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999942691616281	WITHOUT_CLASSIFICATION	5.730838371810736E-6	TEST
// goto next bucket	WITHOUT_CLASSIFICATION	0.999991296981787	WITHOUT_CLASSIFICATION	8.703018212871848E-6	TEST
// we reached the end	WITHOUT_CLASSIFICATION	0.9999907598636539	WITHOUT_CLASSIFICATION	9.240136346029291E-6	TEST
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999657444690433	WITHOUT_CLASSIFICATION	3.425553095671657E-5	TEST
// states	WITHOUT_CLASSIFICATION	0.9999690837597977	WITHOUT_CLASSIFICATION	3.091624020238213E-5	TEST
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999178805579434	WITHOUT_CLASSIFICATION	8.21194420566816E-5	TEST
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999944296148678	WITHOUT_CLASSIFICATION	5.570385132066135E-6	TEST
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.999999142038311	WITHOUT_CLASSIFICATION	8.57961689020249E-7	TEST
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999684438630257	WITHOUT_CLASSIFICATION	3.1556136974193605E-5	TEST
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999809152564193	WITHOUT_CLASSIFICATION	1.9084743580650557E-5	TEST
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999537615744002	WITHOUT_CLASSIFICATION	4.623842559969318E-5	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999854342802612	WITHOUT_CLASSIFICATION	1.4565719738778666E-5	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.999969662794186	WITHOUT_CLASSIFICATION	3.03372058141221E-5	TEST
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999884181775905	WITHOUT_CLASSIFICATION	1.1581822409365779E-5	TEST
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999791505518688	WITHOUT_CLASSIFICATION	2.084944813117875E-5	TEST
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999996743769788	WITHOUT_CLASSIFICATION	3.256230212898509E-7	TEST
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999967790090712	WITHOUT_CLASSIFICATION	3.220990928675994E-6	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999052700918992	WITHOUT_CLASSIFICATION	9.472990810068827E-5	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999052700918992	WITHOUT_CLASSIFICATION	9.472990810068827E-5	TEST
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999670901220316	WITHOUT_CLASSIFICATION	3.290987796845894E-5	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999917244038954	WITHOUT_CLASSIFICATION	8.275596104645112E-6	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999917244038954	WITHOUT_CLASSIFICATION	8.275596104645112E-6	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999955272883708	WITHOUT_CLASSIFICATION	4.47271162909018E-6	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999955272883708	WITHOUT_CLASSIFICATION	4.47271162909018E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999848057542634	WITHOUT_CLASSIFICATION	1.5194245736660262E-5	TEST
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999828243664667	WITHOUT_CLASSIFICATION	1.717563353330396E-5	TEST
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999974665617397	WITHOUT_CLASSIFICATION	2.5334382602850343E-6	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999862032037958	WITHOUT_CLASSIFICATION	1.3796796204214755E-5	TEST
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999872982655182	WITHOUT_CLASSIFICATION	1.2701734481808755E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999684519714471	WITHOUT_CLASSIFICATION	3.1548028552812536E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999684519714471	WITHOUT_CLASSIFICATION	3.1548028552812536E-5	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999854342802612	WITHOUT_CLASSIFICATION	1.4565719738778666E-5	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999854342802612	WITHOUT_CLASSIFICATION	1.4565719738778666E-5	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999854342802612	WITHOUT_CLASSIFICATION	1.4565719738778666E-5	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.999969662794186	WITHOUT_CLASSIFICATION	3.03372058141221E-5	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999052700918992	WITHOUT_CLASSIFICATION	9.472990810068827E-5	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999052700918992	WITHOUT_CLASSIFICATION	9.472990810068827E-5	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999052700918992	WITHOUT_CLASSIFICATION	9.472990810068827E-5	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999848057542634	WITHOUT_CLASSIFICATION	1.5194245736660262E-5	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999848057542634	WITHOUT_CLASSIFICATION	1.5194245736660262E-5	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999848057542634	WITHOUT_CLASSIFICATION	1.5194245736660262E-5	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999862032037958	WITHOUT_CLASSIFICATION	1.3796796204214755E-5	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999862032037958	WITHOUT_CLASSIFICATION	1.3796796204214755E-5	TEST
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.999991650854269	WITHOUT_CLASSIFICATION	8.34914573092166E-6	TEST
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999631663152461	WITHOUT_CLASSIFICATION	3.683368475395098E-5	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999732348962321	WITHOUT_CLASSIFICATION	2.6765103767840812E-5	TEST
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9980829447319141	WITHOUT_CLASSIFICATION	0.0019170552680859768	TEST
// no digits, error	WITHOUT_CLASSIFICATION	0.9999969322108452	WITHOUT_CLASSIFICATION	3.067789154801914E-6	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999890519416069	WITHOUT_CLASSIFICATION	1.0948058393042957E-5	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999890519416069	WITHOUT_CLASSIFICATION	1.0948058393042957E-5	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999678906712247	WITHOUT_CLASSIFICATION	3.2109328775299846E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999638669038031	WITHOUT_CLASSIFICATION	3.6133096196898145E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999638669038031	WITHOUT_CLASSIFICATION	3.6133096196898145E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999638669038031	WITHOUT_CLASSIFICATION	3.6133096196898145E-5	TEST
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999882705664692	WITHOUT_CLASSIFICATION	1.1729433530701627E-5	TEST
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999854027724305	WITHOUT_CLASSIFICATION	1.4597227569377404E-5	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.999969662794186	WITHOUT_CLASSIFICATION	3.03372058141221E-5	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999848057542634	WITHOUT_CLASSIFICATION	1.5194245736660262E-5	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999848057542634	WITHOUT_CLASSIFICATION	1.5194245736660262E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999638669038031	WITHOUT_CLASSIFICATION	3.6133096196898145E-5	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999678906712247	WITHOUT_CLASSIFICATION	3.2109328775299846E-5	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.999924650174428	WITHOUT_CLASSIFICATION	7.534982557199766E-5	TEST
// switch //while	WITHOUT_CLASSIFICATION	0.9999895552610609	WITHOUT_CLASSIFICATION	1.044473893918306E-5	TEST
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.999996235663505	WITHOUT_CLASSIFICATION	3.7643364949930065E-6	TEST
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999961828060124	WITHOUT_CLASSIFICATION	3.817193987535341E-6	TEST
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999729176684375	WITHOUT_CLASSIFICATION	2.7082331562449563E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9998176641670219	WITHOUT_CLASSIFICATION	1.823358329780301E-4	TEST
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999806930145677	WITHOUT_CLASSIFICATION	1.930698543228211E-5	TEST
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999729176684375	WITHOUT_CLASSIFICATION	2.7082331562449563E-5	TEST
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.999954858224759	WITHOUT_CLASSIFICATION	4.514177524088768E-5	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999940584765519	WITHOUT_CLASSIFICATION	5.941523448184211E-6	TEST
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999569060760375	WITHOUT_CLASSIFICATION	4.309392396258491E-5	TEST
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999384676173179	WITHOUT_CLASSIFICATION	6.153238268207168E-5	TEST
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999539972591601	WITHOUT_CLASSIFICATION	4.600274083990922E-5	TEST
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999761188568788	WITHOUT_CLASSIFICATION	2.3881143121210826E-5	TEST
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999965116366951	WITHOUT_CLASSIFICATION	3.488363304951405E-6	TEST
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999945040643441	WITHOUT_CLASSIFICATION	5.495935655798894E-6	TEST
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9980408752946112	WITHOUT_CLASSIFICATION	0.001959124705388891	TEST
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9996997853068419	WITHOUT_CLASSIFICATION	3.00214693158024E-4	TEST
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999930028468362	WITHOUT_CLASSIFICATION	6.9971531637916465E-6	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9998375603063773	WITHOUT_CLASSIFICATION	1.6243969362271643E-4	TEST
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9997574799774946	WITHOUT_CLASSIFICATION	2.425200225054E-4	TEST
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999651495639974	WITHOUT_CLASSIFICATION	3.4850436002636244E-5	TEST
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999978607209108	WITHOUT_CLASSIFICATION	2.139279089171831E-6	TEST
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999650007722568	WITHOUT_CLASSIFICATION	3.499922774321786E-5	TEST
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.999273295497719	WITHOUT_CLASSIFICATION	7.267045022809671E-4	TEST
// unread back	WITHOUT_CLASSIFICATION	0.9999898746738134	WITHOUT_CLASSIFICATION	1.012532618662614E-5	TEST
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.999991724325207	WITHOUT_CLASSIFICATION	8.275674793024444E-6	TEST
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999945939506981	WITHOUT_CLASSIFICATION	5.40604930184862E-6	TEST
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999896698956852	WITHOUT_CLASSIFICATION	1.0330104314898875E-5	TEST
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999969244705341	WITHOUT_CLASSIFICATION	3.0755294659538367E-6	TEST
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999990740276379	WITHOUT_CLASSIFICATION	9.259723622263113E-7	TEST
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999791954330799	WITHOUT_CLASSIFICATION	2.080456692008702E-5	TEST
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999957733465484	WITHOUT_CLASSIFICATION	4.2266534515799545E-6	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.999924650174428	WITHOUT_CLASSIFICATION	7.534982557199766E-5	TEST
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999915006265007	WITHOUT_CLASSIFICATION	8.499373499357539E-6	TEST
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999539628170034	WITHOUT_CLASSIFICATION	4.6037182996588945E-5	TEST
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9998659187704356	WITHOUT_CLASSIFICATION	1.3408122956440368E-4	TEST
// silence	WITHOUT_CLASSIFICATION	0.9999673553645454	WITHOUT_CLASSIFICATION	3.2644635454674836E-5	TEST
// silence	WITHOUT_CLASSIFICATION	0.9999673553645454	WITHOUT_CLASSIFICATION	3.2644635454674836E-5	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.9999923785627641	WITHOUT_CLASSIFICATION	7.621437235901961E-6	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.9999923785627641	WITHOUT_CLASSIFICATION	7.621437235901961E-6	TEST
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999505461493016	WITHOUT_CLASSIFICATION	4.94538506984395E-5	TEST
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9998645885356631	WITHOUT_CLASSIFICATION	1.3541146433694253E-4	TEST
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999788093960504	WITHOUT_CLASSIFICATION	2.1190603949537857E-5	TEST
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999107578789399	WITHOUT_CLASSIFICATION	8.924212106009773E-5	TEST
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999648737201543	WITHOUT_CLASSIFICATION	3.5126279845609334E-5	TEST
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.999986500949655	WITHOUT_CLASSIFICATION	1.3499050344998113E-5	TEST
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999899924112066	WITHOUT_CLASSIFICATION	1.0007588793529599E-5	TEST
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999935033877052	WITHOUT_CLASSIFICATION	6.496612294853504E-6	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.999998995272758	WITHOUT_CLASSIFICATION	1.0047272419232336E-6	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999386507212213	WITHOUT_CLASSIFICATION	6.134927877864635E-5	TEST
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999799042251017	WITHOUT_CLASSIFICATION	2.0095774898190346E-5	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999888046628975	WITHOUT_CLASSIFICATION	1.119533710239754E-5	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999888046628975	WITHOUT_CLASSIFICATION	1.119533710239754E-5	TEST
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999579673984398	WITHOUT_CLASSIFICATION	4.2032601560137234E-5	TEST
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999873892341833	WITHOUT_CLASSIFICATION	1.2610765816659608E-5	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999736074021544	WITHOUT_CLASSIFICATION	2.6392597845693182E-5	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999736074021544	WITHOUT_CLASSIFICATION	2.6392597845693182E-5	TEST
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999877512032838	WITHOUT_CLASSIFICATION	1.2248796716208913E-5	TEST
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999934586425658	WITHOUT_CLASSIFICATION	6.541357434236061E-6	TEST
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999719596299338	WITHOUT_CLASSIFICATION	2.8040370066156307E-5	TEST
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.999966309339561	WITHOUT_CLASSIFICATION	3.3690660438941225E-5	TEST
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999804279361161	WITHOUT_CLASSIFICATION	1.9572063883894826E-5	TEST
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9998828544465054	WITHOUT_CLASSIFICATION	1.1714555349465838E-4	TEST
// save the ungot	WITHOUT_CLASSIFICATION	0.9999962907811287	WITHOUT_CLASSIFICATION	3.709218871311486E-6	TEST
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.999989830753111	WITHOUT_CLASSIFICATION	1.0169246889068578E-5	TEST
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999769074564997	WITHOUT_CLASSIFICATION	2.3092543500321752E-5	TEST
// flush first	WITHOUT_CLASSIFICATION	0.9999928439524994	WITHOUT_CLASSIFICATION	7.1560475006089495E-6	TEST
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999527588542884	WITHOUT_CLASSIFICATION	4.724114571174687E-5	TEST
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999171915024511	WITHOUT_CLASSIFICATION	8.280849754888398E-5	TEST
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999802320977282	WITHOUT_CLASSIFICATION	1.9767902271822556E-5	TEST
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999146254757825	WITHOUT_CLASSIFICATION	8.537452421755612E-5	TEST
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999844611666381	WITHOUT_CLASSIFICATION	1.5538833361875766E-5	TEST
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9997511469372915	WITHOUT_CLASSIFICATION	2.48853062708434E-4	TEST
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999867959932855	WITHOUT_CLASSIFICATION	1.3204006714461497E-5	TEST
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999863655121712	WITHOUT_CLASSIFICATION	1.3634487828786608E-5	TEST
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999687629739533	WITHOUT_CLASSIFICATION	3.123702604675037E-5	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999394669771049	WITHOUT_CLASSIFICATION	6.0533022895197556E-5	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9704816328178966	WITHOUT_CLASSIFICATION	0.02951836718210348	TEST
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999696201686135	WITHOUT_CLASSIFICATION	3.0379831386564653E-5	TEST
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999728056520092	WITHOUT_CLASSIFICATION	2.7194347990690725E-5	TEST
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999784537381271	WITHOUT_CLASSIFICATION	2.1546261872854348E-5	TEST
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999889361943235	WITHOUT_CLASSIFICATION	1.1063805676491787E-5	TEST
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999938795968651	WITHOUT_CLASSIFICATION	6.120403134816859E-6	TEST
// else leave it null	WITHOUT_CLASSIFICATION	0.9999596201657956	WITHOUT_CLASSIFICATION	4.0379834204388124E-5	TEST
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999807936530591	WITHOUT_CLASSIFICATION	1.9206346940855983E-5	TEST
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999854271909626	WITHOUT_CLASSIFICATION	1.4572809037344966E-5	TEST
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.999994112094368	WITHOUT_CLASSIFICATION	5.887905632123391E-6	TEST
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.999995712501018	WITHOUT_CLASSIFICATION	4.2874989819677636E-6	TEST
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.999995603628008	WITHOUT_CLASSIFICATION	4.396371992011506E-6	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999974942062378	WITHOUT_CLASSIFICATION	2.50579376213827E-6	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999974942062378	WITHOUT_CLASSIFICATION	2.50579376213827E-6	TEST
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999945700998191	WITHOUT_CLASSIFICATION	5.429900180912518E-6	TEST
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999997300387307	WITHOUT_CLASSIFICATION	2.699612693256077E-7	TEST
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9995746650756747	WITHOUT_CLASSIFICATION	4.253349243252869E-4	TEST
// Init	WITHOUT_CLASSIFICATION	0.9999674286250819	WITHOUT_CLASSIFICATION	3.25713749180568E-5	TEST
// Block	WITHOUT_CLASSIFICATION	0.999967355937657	WITHOUT_CLASSIFICATION	3.264406234306462E-5	TEST
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999877183018409	WITHOUT_CLASSIFICATION	1.2281698159093378E-5	TEST
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9989818828884514	WITHOUT_CLASSIFICATION	0.001018117111548586	TEST
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9989818828884514	WITHOUT_CLASSIFICATION	0.001018117111548586	TEST
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9996045004330313	WITHOUT_CLASSIFICATION	3.9549956696866007E-4	TEST
// ok	WITHOUT_CLASSIFICATION	0.9999721430045602	WITHOUT_CLASSIFICATION	2.785699543986156E-5	TEST
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999831420769686	WITHOUT_CLASSIFICATION	1.6857923031367463E-5	TEST
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9997036686207073	WITHOUT_CLASSIFICATION	2.9633137929280885E-4	TEST
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9998729068484744	WITHOUT_CLASSIFICATION	1.2709315152560868E-4	TEST
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9995772046040008	WITHOUT_CLASSIFICATION	4.227953959992031E-4	TEST
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999971036215376	WITHOUT_CLASSIFICATION	2.8963784623653506E-6	TEST
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999910397312769	WITHOUT_CLASSIFICATION	8.960268723156415E-6	TEST
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9995950224737475	WITHOUT_CLASSIFICATION	4.0497752625248413E-4	TEST
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999768394761608	WITHOUT_CLASSIFICATION	2.3160523839185803E-5	TEST
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9999935652586014	WITHOUT_CLASSIFICATION	6.434741398583888E-6	TEST
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999755847055803	WITHOUT_CLASSIFICATION	2.441529441957894E-5	TEST
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999806851714163	WITHOUT_CLASSIFICATION	1.931482858376889E-5	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999847345219771	WITHOUT_CLASSIFICATION	1.5265478022880384E-5	TEST
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.999958650773499	WITHOUT_CLASSIFICATION	4.134922650096404E-5	TEST
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999456871151244	WITHOUT_CLASSIFICATION	5.431288487555125E-5	TEST
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9998864213200804	WITHOUT_CLASSIFICATION	1.135786799194906E-4	TEST
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.999953131823687	WITHOUT_CLASSIFICATION	4.686817631308486E-5	TEST
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999835783049867	WITHOUT_CLASSIFICATION	1.6421695013219547E-5	TEST
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999686116189687	WITHOUT_CLASSIFICATION	3.138838103144417E-5	TEST
// void methods should work	WITHOUT_CLASSIFICATION	0.9999635733045591	WITHOUT_CLASSIFICATION	3.642669544089438E-5	TEST
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999350814805748	WITHOUT_CLASSIFICATION	6.491851942517062E-5	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9998543237694862	WITHOUT_CLASSIFICATION	1.456762305136893E-4	TEST
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999516473713562	WITHOUT_CLASSIFICATION	4.8352628643724066E-5	TEST
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999838754991299	WITHOUT_CLASSIFICATION	1.6124500870025244E-5	TEST
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.999960343107365	WITHOUT_CLASSIFICATION	3.965689263496092E-5	TEST
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999893370341865	WITHOUT_CLASSIFICATION	1.0662965813502666E-5	TEST
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9991957162509336	WITHOUT_CLASSIFICATION	8.042837490663521E-4	TEST
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9996997853068419	WITHOUT_CLASSIFICATION	3.00214693158024E-4	TEST
// value equality	WITHOUT_CLASSIFICATION	0.9999929883461464	WITHOUT_CLASSIFICATION	7.011653853716298E-6	TEST
// identity equality	WITHOUT_CLASSIFICATION	0.9999898805665421	WITHOUT_CLASSIFICATION	1.0119433457889127E-5	TEST
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.999960343107365	WITHOUT_CLASSIFICATION	3.965689263496092E-5	TEST
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999895079909744	WITHOUT_CLASSIFICATION	1.049200902559427E-5	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999729176684375	WITHOUT_CLASSIFICATION	2.7082331562449563E-5	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999729176684375	WITHOUT_CLASSIFICATION	2.7082331562449563E-5	TEST
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999729176684375	WITHOUT_CLASSIFICATION	2.7082331562449563E-5	TEST
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999438624387126	WITHOUT_CLASSIFICATION	5.613756128738494E-5	TEST
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999894969723206	WITHOUT_CLASSIFICATION	1.0503027679399475E-5	TEST
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999586812008822	WITHOUT_CLASSIFICATION	4.131879911774358E-5	TEST
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.999886934055146	WITHOUT_CLASSIFICATION	1.1306594485412081E-4	TEST
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999847927376463	WITHOUT_CLASSIFICATION	1.5207262353723122E-5	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999953798988285	WITHOUT_CLASSIFICATION	4.6201011715510595E-6	TEST
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999919659790089	WITHOUT_CLASSIFICATION	8.034020991181645E-6	TEST
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999598471652056	WITHOUT_CLASSIFICATION	4.015283479430724E-5	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999990645704097	WITHOUT_CLASSIFICATION	9.354295902714786E-7	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.999560448769399	WITHOUT_CLASSIFICATION	4.395512306010262E-4	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999658621036139	WITHOUT_CLASSIFICATION	3.413789638603702E-5	TEST
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999672566965773	WITHOUT_CLASSIFICATION	3.274330342262886E-5	TEST
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999947741161471	WITHOUT_CLASSIFICATION	5.225883852912579E-6	TEST
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.999994788709727	WITHOUT_CLASSIFICATION	5.211290272933001E-6	TEST
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9999053460981783	WITHOUT_CLASSIFICATION	9.465390182170914E-5	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999994195480146	WITHOUT_CLASSIFICATION	5.804519853249255E-7	TEST
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9996997853068419	WITHOUT_CLASSIFICATION	3.00214693158024E-4	TEST
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999973182978509	WITHOUT_CLASSIFICATION	2.6817021490885778E-6	TEST
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9997826160199352	WITHOUT_CLASSIFICATION	2.173839800647649E-4	TEST
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999833773748784	WITHOUT_CLASSIFICATION	1.6622625121581653E-5	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.99990215980905	WITHOUT_CLASSIFICATION	9.784019095002458E-5	TEST
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999997493123969	WITHOUT_CLASSIFICATION	2.506876030931675E-7	TEST
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999964321183341	WITHOUT_CLASSIFICATION	3.567881665942785E-6	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.999960748847338	WITHOUT_CLASSIFICATION	3.925115266207319E-5	TEST
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999380763921903	WITHOUT_CLASSIFICATION	6.192360780958906E-5	TEST
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9998980579963438	WITHOUT_CLASSIFICATION	1.0194200365623187E-4	TEST
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999914755314245	WITHOUT_CLASSIFICATION	8.524468575381382E-6	TEST
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999730665333718	WITHOUT_CLASSIFICATION	2.693346662820571E-5	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999756716824927	WITHOUT_CLASSIFICATION	2.4328317507355414E-5	TEST
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999730665333718	WITHOUT_CLASSIFICATION	2.693346662820571E-5	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999961025317761	WITHOUT_CLASSIFICATION	3.897468223916743E-6	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999756716824927	WITHOUT_CLASSIFICATION	2.4328317507355414E-5	TEST
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9996589641818083	WITHOUT_CLASSIFICATION	3.410358181917284E-4	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999917720760744	WITHOUT_CLASSIFICATION	8.227923925737947E-6	TEST
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9999468188624041	WITHOUT_CLASSIFICATION	5.318113759592073E-5	TEST
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9312918224874379	WITHOUT_CLASSIFICATION	0.06870817751256213	TEST
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.999988710565712	WITHOUT_CLASSIFICATION	1.12894342879948E-5	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999730341110684	WITHOUT_CLASSIFICATION	2.6965888931641658E-5	TEST
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999609680018148	WITHOUT_CLASSIFICATION	3.903199818522656E-5	TEST
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9976393212289387	WITHOUT_CLASSIFICATION	0.0023606787710613013	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999807615197663	WITHOUT_CLASSIFICATION	1.923848023368E-5	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999394669771049	WITHOUT_CLASSIFICATION	6.0533022895197556E-5	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999732348962321	WITHOUT_CLASSIFICATION	2.6765103767840812E-5	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999939819240752	WITHOUT_CLASSIFICATION	6.018075924827799E-6	TEST
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999915788314744	WITHOUT_CLASSIFICATION	8.421168525640457E-6	TEST
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999819368695934	WITHOUT_CLASSIFICATION	1.8063130406661428E-5	TEST
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999603986532074	WITHOUT_CLASSIFICATION	3.960134679257468E-5	TEST
// switch // while	WITHOUT_CLASSIFICATION	0.9999901530815084	WITHOUT_CLASSIFICATION	9.846918491671246E-6	TEST
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9988993360384107	WITHOUT_CLASSIFICATION	0.0011006639615892015	TEST
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999803752081889	WITHOUT_CLASSIFICATION	1.962479181097476E-5	TEST
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999953351885335	WITHOUT_CLASSIFICATION	4.664811466606862E-6	TEST
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999524596803645	WITHOUT_CLASSIFICATION	4.7540319635517275E-5	TEST
// expected	WITHOUT_CLASSIFICATION	0.9999907884977247	WITHOUT_CLASSIFICATION	9.211502275372314E-6	TEST
// Do nothing	WITHOUT_CLASSIFICATION	0.9999904753304605	WITHOUT_CLASSIFICATION	9.524669539478634E-6	TEST
// constructor	WITHOUT_CLASSIFICATION	0.9999876675491217	WITHOUT_CLASSIFICATION	1.2332450878349655E-5	TEST
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999278139407041	WITHOUT_CLASSIFICATION	7.218605929591081E-5	TEST
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999606431445117	WITHOUT_CLASSIFICATION	3.935685548817102E-5	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9998855467604221	WITHOUT_CLASSIFICATION	1.1445323957802082E-4	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9998948535274976	WITHOUT_CLASSIFICATION	1.051464725023678E-4	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999920858306137	WITHOUT_CLASSIFICATION	7.914169386277978E-6	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999920858306137	WITHOUT_CLASSIFICATION	7.914169386277978E-6	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999860481355214	WITHOUT_CLASSIFICATION	1.3951864478535103E-5	TEST
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.999996429665261	WITHOUT_CLASSIFICATION	3.5703347389996204E-6	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999977202371751	WITHOUT_CLASSIFICATION	2.2797628248101743E-6	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9980044062547431	WITHOUT_CLASSIFICATION	0.0019955937452568804	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9980044062547431	WITHOUT_CLASSIFICATION	0.0019955937452568804	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9980044062547431	WITHOUT_CLASSIFICATION	0.0019955937452568804	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9980044062547431	WITHOUT_CLASSIFICATION	0.0019955937452568804	TEST
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999909224071212	WITHOUT_CLASSIFICATION	9.07759287876437E-6	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999793212232007	WITHOUT_CLASSIFICATION	2.067877679935367E-5	TEST
// "else" body	WITHOUT_CLASSIFICATION	0.9999898884599815	WITHOUT_CLASSIFICATION	1.011154001844692E-5	TEST
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9998301644261104	WITHOUT_CLASSIFICATION	1.6983557388960613E-4	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9997277891588133	WITHOUT_CLASSIFICATION	2.722108411866031E-4	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9997484384601495	WITHOUT_CLASSIFICATION	2.5156153985048335E-4	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9997484384601495	WITHOUT_CLASSIFICATION	2.5156153985048335E-4	TEST
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999725536454791	WITHOUT_CLASSIFICATION	2.7446354520878757E-5	TEST
/* 10! */	WITHOUT_CLASSIFICATION	0.9999030942725735	WITHOUT_CLASSIFICATION	9.690572742639396E-5	TEST
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999613024160208	WITHOUT_CLASSIFICATION	3.8697583979236156E-5	TEST
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9999369306056456	WITHOUT_CLASSIFICATION	6.306939435443617E-5	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999382359575402	WITHOUT_CLASSIFICATION	6.176404245982484E-5	TEST
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999840960758114	WITHOUT_CLASSIFICATION	1.590392418864433E-5	TEST
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999996986186862	WITHOUT_CLASSIFICATION	3.013813137919329E-7	TEST
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9997812019870235	WITHOUT_CLASSIFICATION	2.1879801297644804E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999961025317761	WITHOUT_CLASSIFICATION	3.897468223916743E-6	TEST
// line 449	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 495	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999729176684375	WITHOUT_CLASSIFICATION	2.7082331562449563E-5	TEST
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999992568585406	WITHOUT_CLASSIFICATION	7.431414592921643E-7	TEST
/* 14! */	WITHOUT_CLASSIFICATION	0.9999030942725735	WITHOUT_CLASSIFICATION	9.690572742639396E-5	TEST
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999348481115725	WITHOUT_CLASSIFICATION	6.515188842747373E-5	TEST
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.999991101650808	WITHOUT_CLASSIFICATION	8.898349192087408E-6	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999882730612317	WITHOUT_CLASSIFICATION	1.172693876838336E-5	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999882730612317	WITHOUT_CLASSIFICATION	1.172693876838336E-5	TEST
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999613024160208	WITHOUT_CLASSIFICATION	3.869758397923612E-5	TEST
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999997813418098	WITHOUT_CLASSIFICATION	2.1865819023812518E-7	TEST
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9995683456836437	WITHOUT_CLASSIFICATION	4.316543163562311E-4	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999884721247562	WITHOUT_CLASSIFICATION	1.1527875243803001E-5	TEST
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999922798102908	WITHOUT_CLASSIFICATION	7.720189709156833E-6	TEST
/* 18! */	WITHOUT_CLASSIFICATION	0.9999030942725735	WITHOUT_CLASSIFICATION	9.690572742639396E-5	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999178641050552	WITHOUT_CLASSIFICATION	8.21358949448364E-5	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999802685069076	WITHOUT_CLASSIFICATION	1.9731493092415313E-5	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999802685069076	WITHOUT_CLASSIFICATION	1.9731493092415313E-5	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999802685069076	WITHOUT_CLASSIFICATION	1.9731493092415313E-5	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999802685069076	WITHOUT_CLASSIFICATION	1.9731493092415313E-5	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999717886709666	WITHOUT_CLASSIFICATION	2.821132903338661E-5	TEST
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999967685467493	WITHOUT_CLASSIFICATION	3.2314532507884593E-6	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999482759769153	WITHOUT_CLASSIFICATION	5.1724023084649895E-5	TEST
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999268766149549	WITHOUT_CLASSIFICATION	7.312338504500803E-5	TEST
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999838195414489	WITHOUT_CLASSIFICATION	1.6180458551164044E-5	TEST
/* 22! */	WITHOUT_CLASSIFICATION	0.9999030942725735	WITHOUT_CLASSIFICATION	9.690572742639396E-5	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.999978683931302	WITHOUT_CLASSIFICATION	2.1316068698089637E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999520089188614	WITHOUT_CLASSIFICATION	4.7991081138684843E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999520089188614	WITHOUT_CLASSIFICATION	4.7991081138684843E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999520089188614	WITHOUT_CLASSIFICATION	4.7991081138684843E-5	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9998572527683985	WITHOUT_CLASSIFICATION	1.4274723160147447E-4	TEST
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999902950434197	WITHOUT_CLASSIFICATION	9.704956580221805E-6	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999427661250522	WITHOUT_CLASSIFICATION	5.723387494782521E-5	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999427661250522	WITHOUT_CLASSIFICATION	5.723387494782521E-5	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.9999673553645454	WITHOUT_CLASSIFICATION	3.2644635454674836E-5	TEST
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999952323754	WITHOUT_CLASSIFICATION	4.767624659187764E-9	TEST
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9998370130826262	WITHOUT_CLASSIFICATION	1.6298691737386614E-4	TEST
// BASE64	WITHOUT_CLASSIFICATION	0.9999673553645454	WITHOUT_CLASSIFICATION	3.2644635454674836E-5	TEST
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999986680714156	WITHOUT_CLASSIFICATION	1.3319285844805851E-6	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999964346932901	WITHOUT_CLASSIFICATION	3.5653067099148613E-6	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999849106917227	WITHOUT_CLASSIFICATION	1.5089308277422535E-5	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999849106917227	WITHOUT_CLASSIFICATION	1.5089308277422535E-5	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999888748784188	WITHOUT_CLASSIFICATION	1.1125121581165718E-5	TEST
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999995332276592	WITHOUT_CLASSIFICATION	4.667723408255126E-7	TEST
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.999997726629022	WITHOUT_CLASSIFICATION	2.2733709780323652E-6	TEST
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9997739924439871	WITHOUT_CLASSIFICATION	2.2600755601286871E-4	TEST
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9999510469039896	WITHOUT_CLASSIFICATION	4.895309601035204E-5	TEST
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999986968174037	WITHOUT_CLASSIFICATION	1.3031825963238633E-6	TEST
// carriage return	WITHOUT_CLASSIFICATION	0.9999944322629204	WITHOUT_CLASSIFICATION	5.567737079564056E-6	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9998158389746559	WITHOUT_CLASSIFICATION	1.84161025344077E-4	TEST
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999980297459493	WITHOUT_CLASSIFICATION	1.9702540506430365E-6	TEST
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999947540136579	WITHOUT_CLASSIFICATION	5.245986342128349E-6	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999925336879965	WITHOUT_CLASSIFICATION	7.466312003445825E-6	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999831569380778	WITHOUT_CLASSIFICATION	1.6843061922230487E-5	TEST
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999734462593195	WITHOUT_CLASSIFICATION	2.655374068043162E-5	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999955603892163	WITHOUT_CLASSIFICATION	4.43961078361424E-6	TEST
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999974752009879	WITHOUT_CLASSIFICATION	2.5247990121449004E-6	TEST
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999997221533957	WITHOUT_CLASSIFICATION	2.778466042895364E-7	TEST
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999882837941055	WITHOUT_CLASSIFICATION	1.1716205894605304E-5	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999956765120496	WITHOUT_CLASSIFICATION	4.323487950447291E-6	TEST
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999835004956962	WITHOUT_CLASSIFICATION	1.64995043038298E-5	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999990977551048	WITHOUT_CLASSIFICATION	9.022448952957284E-7	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999949921543624	WITHOUT_CLASSIFICATION	5.007845637645654E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999920792054892	WITHOUT_CLASSIFICATION	7.92079451086154E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999920792054892	WITHOUT_CLASSIFICATION	7.92079451086154E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999920792054892	WITHOUT_CLASSIFICATION	7.92079451086154E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999920792054892	WITHOUT_CLASSIFICATION	7.92079451086154E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999920792054892	WITHOUT_CLASSIFICATION	7.92079451086154E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999920792054892	WITHOUT_CLASSIFICATION	7.92079451086154E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999920792054892	WITHOUT_CLASSIFICATION	7.92079451086154E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999920792054892	WITHOUT_CLASSIFICATION	7.92079451086154E-6	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999464316790716	WITHOUT_CLASSIFICATION	5.356832092844251E-5	TEST
/* fall through */	WITHOUT_CLASSIFICATION	0.9999749568534229	WITHOUT_CLASSIFICATION	2.504314657716931E-5	TEST
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9940379910925863	WITHOUT_CLASSIFICATION	0.00596200890741362	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9996071502177896	WITHOUT_CLASSIFICATION	3.9284978221051963E-4	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999953798988285	WITHOUT_CLASSIFICATION	4.6201011715510595E-6	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999953798988285	WITHOUT_CLASSIFICATION	4.6201011715510595E-6	TEST
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999748745554272	WITHOUT_CLASSIFICATION	2.512544457278813E-5	TEST
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999966986902479	WITHOUT_CLASSIFICATION	3.3013097521260045E-6	TEST
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999624310996892	WITHOUT_CLASSIFICATION	3.756890031078754E-5	TEST
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999841741947623	WITHOUT_CLASSIFICATION	1.58258052376936E-5	TEST
// get current context	WITHOUT_CLASSIFICATION	0.999989185446578	WITHOUT_CLASSIFICATION	1.0814553421969559E-5	TEST
// octal constant	WITHOUT_CLASSIFICATION	0.9999895684671422	WITHOUT_CLASSIFICATION	1.0431532857885988E-5	TEST
// read	WITHOUT_CLASSIFICATION	0.999966539713968	WITHOUT_CLASSIFICATION	3.3460286032100865E-5	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999638085059008	WITHOUT_CLASSIFICATION	3.6191494099283237E-5	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9998328740033846	WITHOUT_CLASSIFICATION	1.671259966153683E-4	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999951755221406	WITHOUT_CLASSIFICATION	4.82447785941872E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999951755221406	WITHOUT_CLASSIFICATION	4.82447785941872E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999951755221406	WITHOUT_CLASSIFICATION	4.82447785941872E-6	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999812592270948	WITHOUT_CLASSIFICATION	1.8740772905205952E-5	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999645135183863	WITHOUT_CLASSIFICATION	3.548648161360797E-5	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999359491249711	WITHOUT_CLASSIFICATION	6.405087502886493E-5	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999818347517082	WITHOUT_CLASSIFICATION	1.816524829174214E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999767641099182	WITHOUT_CLASSIFICATION	2.3235890081859698E-5	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999939910301476	WITHOUT_CLASSIFICATION	6.00896985226683E-6	TEST
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999860294083912	WITHOUT_CLASSIFICATION	1.3970591608873309E-5	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9998605293387903	WITHOUT_CLASSIFICATION	1.394706612096973E-4	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9998605293387903	WITHOUT_CLASSIFICATION	1.394706612096973E-4	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999897199257923	WITHOUT_CLASSIFICATION	1.0280074207791938E-5	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999547155206071	WITHOUT_CLASSIFICATION	4.528447939300832E-5	TEST
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999977303597728	WITHOUT_CLASSIFICATION	2.2696402272755874E-6	TEST
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999879141778636	WITHOUT_CLASSIFICATION	1.2085822136552923E-5	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999927976101286	WITHOUT_CLASSIFICATION	7.202389871396371E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999927976101286	WITHOUT_CLASSIFICATION	7.202389871396371E-6	TEST
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999869446776013	WITHOUT_CLASSIFICATION	1.3055322398715485E-5	TEST
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999551878885177	WITHOUT_CLASSIFICATION	4.481211148241944E-5	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999041564349738	WITHOUT_CLASSIFICATION	9.584356502622875E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999958207830746	WITHOUT_CLASSIFICATION	4.1792169254212964E-6	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999859684467556	WITHOUT_CLASSIFICATION	1.4031553244426696E-5	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999859684467556	WITHOUT_CLASSIFICATION	1.4031553244426696E-5	TEST
// check arity	WITHOUT_CLASSIFICATION	0.9999944335674946	WITHOUT_CLASSIFICATION	5.566432505358285E-6	TEST
// check arity	WITHOUT_CLASSIFICATION	0.9999944335674946	WITHOUT_CLASSIFICATION	5.566432505358285E-6	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999974280910632	WITHOUT_CLASSIFICATION	2.571908936737249E-6	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999855618644816	WITHOUT_CLASSIFICATION	1.4438135518411937E-5	TEST
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999813061075613	WITHOUT_CLASSIFICATION	1.869389243867388E-5	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999673553645454	WITHOUT_CLASSIFICATION	3.2644635454674836E-5	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999196051130248	WITHOUT_CLASSIFICATION	8.039488697522884E-5	TEST
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999902299814583	WITHOUT_CLASSIFICATION	9.770018541630089E-6	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999795506396898	WITHOUT_CLASSIFICATION	2.0449360310275102E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999684519714471	WITHOUT_CLASSIFICATION	3.1548028552812536E-5	TEST
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999943067246264	WITHOUT_CLASSIFICATION	5.69327537359002E-6	TEST
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999993839286672	WITHOUT_CLASSIFICATION	6.160713328714228E-7	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999857949875582	WITHOUT_CLASSIFICATION	1.4205012441642316E-5	TEST
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9996744326797898	WITHOUT_CLASSIFICATION	3.255673202101303E-4	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999642002344393	WITHOUT_CLASSIFICATION	3.579976556065419E-5	TEST
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999961822021883	WITHOUT_CLASSIFICATION	3.817797811589191E-6	TEST
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999779366050403	WITHOUT_CLASSIFICATION	2.20633949596366E-5	TEST
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999232330441201	WITHOUT_CLASSIFICATION	7.676695587991555E-5	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999936023200535	WITHOUT_CLASSIFICATION	6.3976799465322014E-6	TEST
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9983061320895352	WITHOUT_CLASSIFICATION	0.0016938679104647743	TEST
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999320295398997	WITHOUT_CLASSIFICATION	6.797046010033392E-5	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999939819240752	WITHOUT_CLASSIFICATION	6.018075924827799E-6	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999735763903712	WITHOUT_CLASSIFICATION	2.6423609628829827E-5	TEST
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999949711590055	WITHOUT_CLASSIFICATION	5.028840994550472E-6	TEST
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999899375154878	WITHOUT_CLASSIFICATION	1.0062484512255245E-5	TEST
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999260350783596	WITHOUT_CLASSIFICATION	7.396492164034022E-5	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999726543581902	WITHOUT_CLASSIFICATION	2.734564180981605E-5	TEST
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999766595898304	WITHOUT_CLASSIFICATION	2.3340410169601006E-5	TEST
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999517714496646	WITHOUT_CLASSIFICATION	4.822855033544294E-5	TEST
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999990290280119	WITHOUT_CLASSIFICATION	9.70971988179094E-7	TEST
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999869266258313	WITHOUT_CLASSIFICATION	1.3073374168635877E-5	TEST
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999789551313362	WITHOUT_CLASSIFICATION	2.104486866383428E-5	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.999993361858461	WITHOUT_CLASSIFICATION	6.638141538978185E-6	TEST
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999937473753855	WITHOUT_CLASSIFICATION	6.252624614531171E-6	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999500391306322	WITHOUT_CLASSIFICATION	4.996086936786996E-5	TEST
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999207504882797	WITHOUT_CLASSIFICATION	7.924951172043736E-5	TEST
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999819599517772	WITHOUT_CLASSIFICATION	1.804004822281996E-5	TEST
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999792791776361	WITHOUT_CLASSIFICATION	2.0720822363930877E-5	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999135413935103	WITHOUT_CLASSIFICATION	8.64586064897204E-5	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999974997395072	WITHOUT_CLASSIFICATION	2.500260492772463E-6	TEST
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999960474476585	WITHOUT_CLASSIFICATION	3.952552341544905E-6	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999674180933985	WITHOUT_CLASSIFICATION	3.258190660140483E-5	TEST
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9996799124029572	WITHOUT_CLASSIFICATION	3.2008759704282093E-4	TEST
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999836818913455	WITHOUT_CLASSIFICATION	1.6318108654454143E-5	TEST
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999768185142953	WITHOUT_CLASSIFICATION	2.3181485704686764E-5	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.999780945998666	WITHOUT_CLASSIFICATION	2.1905400133398335E-4	TEST
// specific arity	WITHOUT_CLASSIFICATION	0.9999916776847776	WITHOUT_CLASSIFICATION	8.322315222445437E-6	TEST
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999973059567105	WITHOUT_CLASSIFICATION	2.6940432894736013E-6	TEST
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999782250484164	WITHOUT_CLASSIFICATION	2.177495158366401E-5	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999603986532074	WITHOUT_CLASSIFICATION	3.960134679257468E-5	TEST
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999357924175095	WITHOUT_CLASSIFICATION	6.420758249047877E-5	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999743691137231	WITHOUT_CLASSIFICATION	2.5630886276927065E-5	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999743691137231	WITHOUT_CLASSIFICATION	2.5630886276927065E-5	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9998632581859181	WITHOUT_CLASSIFICATION	1.3674181408178534E-4	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9998632581859181	WITHOUT_CLASSIFICATION	1.3674181408178534E-4	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.999915133053832	WITHOUT_CLASSIFICATION	8.486694616800154E-5	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.999915133053832	WITHOUT_CLASSIFICATION	8.486694616800154E-5	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999609268761853	WITHOUT_CLASSIFICATION	3.907312381467306E-5	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999609268761853	WITHOUT_CLASSIFICATION	3.907312381467306E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999696526407572	WITHOUT_CLASSIFICATION	3.034735924283145E-5	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999696526407572	WITHOUT_CLASSIFICATION	3.034735924283145E-5	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999696526407572	WITHOUT_CLASSIFICATION	3.034735924283145E-5	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999104707821401	WITHOUT_CLASSIFICATION	8.952921785992617E-5	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999611976288035	WITHOUT_CLASSIFICATION	3.880237119649121E-5	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999611976288035	WITHOUT_CLASSIFICATION	3.880237119649121E-5	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999611976288035	WITHOUT_CLASSIFICATION	3.880237119649121E-5	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999803353966451	WITHOUT_CLASSIFICATION	1.9664603354990485E-5	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999803353966451	WITHOUT_CLASSIFICATION	1.9664603354990485E-5	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999803353966451	WITHOUT_CLASSIFICATION	1.9664603354990485E-5	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999603986532074	WITHOUT_CLASSIFICATION	3.960134679257468E-5	TEST
// backspace	WITHOUT_CLASSIFICATION	0.9999894952328516	WITHOUT_CLASSIFICATION	1.0504767148392837E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
/* package-private */	WITHOUT_CLASSIFICATION	0.9999203794789001	WITHOUT_CLASSIFICATION	7.962052109990959E-5	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999915641164673	WITHOUT_CLASSIFICATION	8.43588353284502E-6	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999915641164673	WITHOUT_CLASSIFICATION	8.43588353284502E-6	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999766126834586	WITHOUT_CLASSIFICATION	2.338731654137312E-5	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.99967241571127	WITHOUT_CLASSIFICATION	3.275842887300417E-4	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.99967241571127	WITHOUT_CLASSIFICATION	3.275842887300417E-4	TEST
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9669460483035026	WITHOUT_CLASSIFICATION	0.033053951696497455	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9998473451254927	WITHOUT_CLASSIFICATION	1.5265487450738305E-4	TEST
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9998877722200471	WITHOUT_CLASSIFICATION	1.1222777995281621E-4	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999679316710027	WITHOUT_CLASSIFICATION	3.2068328997228995E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999679316710027	WITHOUT_CLASSIFICATION	3.2068328997228995E-5	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999780113737399	WITHOUT_CLASSIFICATION	2.1988626260164133E-5	TEST
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9997786746412537	WITHOUT_CLASSIFICATION	2.213253587462626E-4	TEST
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999479576041179	WITHOUT_CLASSIFICATION	5.2042395881997886E-5	TEST
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.999984560400969	WITHOUT_CLASSIFICATION	1.5439599031059405E-5	TEST
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9979839717693894	WITHOUT_CLASSIFICATION	0.0020160282306106434	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999679316710027	WITHOUT_CLASSIFICATION	3.2068328997228995E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999679316710027	WITHOUT_CLASSIFICATION	3.2068328997228995E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999679316710027	WITHOUT_CLASSIFICATION	3.2068328997228995E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999679316710027	WITHOUT_CLASSIFICATION	3.2068328997228995E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999679316710027	WITHOUT_CLASSIFICATION	3.2068328997228995E-5	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999688567400103	WITHOUT_CLASSIFICATION	3.11432599896612E-5	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999486534302513	WITHOUT_CLASSIFICATION	5.134656974870319E-5	TEST
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999975843702631	WITHOUT_CLASSIFICATION	2.4156297368944038E-6	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999702278314291	WITHOUT_CLASSIFICATION	2.977216857095774E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999740690762844	WITHOUT_CLASSIFICATION	2.593092371560587E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999740690762844	WITHOUT_CLASSIFICATION	2.593092371560587E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999740690762844	WITHOUT_CLASSIFICATION	2.593092371560587E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999740690762844	WITHOUT_CLASSIFICATION	2.593092371560587E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999740690762844	WITHOUT_CLASSIFICATION	2.593092371560587E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999740690762844	WITHOUT_CLASSIFICATION	2.593092371560587E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999740690762844	WITHOUT_CLASSIFICATION	2.593092371560587E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999740690762844	WITHOUT_CLASSIFICATION	2.593092371560587E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999740690762844	WITHOUT_CLASSIFICATION	2.593092371560587E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999740690762844	WITHOUT_CLASSIFICATION	2.593092371560587E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999740690762844	WITHOUT_CLASSIFICATION	2.593092371560587E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999740690762844	WITHOUT_CLASSIFICATION	2.593092371560587E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999740690762844	WITHOUT_CLASSIFICATION	2.593092371560587E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999740690762844	WITHOUT_CLASSIFICATION	2.593092371560587E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999740690762844	WITHOUT_CLASSIFICATION	2.593092371560587E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999740690762844	WITHOUT_CLASSIFICATION	2.593092371560587E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999740690762844	WITHOUT_CLASSIFICATION	2.593092371560587E-5	TEST
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999993618980262	WITHOUT_CLASSIFICATION	6.381019739116666E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999740690762844	WITHOUT_CLASSIFICATION	2.593092371560587E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999740690762844	WITHOUT_CLASSIFICATION	2.593092371560587E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999740690762844	WITHOUT_CLASSIFICATION	2.593092371560587E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999740690762844	WITHOUT_CLASSIFICATION	2.593092371560587E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999740690762844	WITHOUT_CLASSIFICATION	2.593092371560587E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999740690762844	WITHOUT_CLASSIFICATION	2.593092371560587E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999740690762844	WITHOUT_CLASSIFICATION	2.593092371560587E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999740690762844	WITHOUT_CLASSIFICATION	2.593092371560587E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999740690762844	WITHOUT_CLASSIFICATION	2.593092371560587E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999740690762844	WITHOUT_CLASSIFICATION	2.593092371560587E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999740690762844	WITHOUT_CLASSIFICATION	2.593092371560587E-5	TEST
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999001346828357	WITHOUT_CLASSIFICATION	9.986531716426289E-5	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9996701404453104	WITHOUT_CLASSIFICATION	3.2985955468958463E-4	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999886962229718	WITHOUT_CLASSIFICATION	1.1303777028185832E-5	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999934957014168	WITHOUT_CLASSIFICATION	6.504298583138506E-6	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999435950768703	WITHOUT_CLASSIFICATION	5.640492312975206E-5	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.99990215980905	WITHOUT_CLASSIFICATION	9.784019095002458E-5	TEST
// only public methods	WITHOUT_CLASSIFICATION	0.999981888096515	WITHOUT_CLASSIFICATION	1.8111903485014542E-5	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999419734027609	WITHOUT_CLASSIFICATION	5.802659723904649E-5	TEST
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999994490890767	WITHOUT_CLASSIFICATION	5.509109232530301E-7	TEST
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9999922286227129	WITHOUT_CLASSIFICATION	7.771377287196875E-6	TEST
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999654681317093	WITHOUT_CLASSIFICATION	3.453186829075486E-5	TEST
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999996227138004	WITHOUT_CLASSIFICATION	3.772861996081172E-7	TEST
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999931054479192	WITHOUT_CLASSIFICATION	6.894552080815529E-6	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999674013112994	WITHOUT_CLASSIFICATION	3.2598688700704594E-5	TEST
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9998969991762375	WITHOUT_CLASSIFICATION	1.0300082376244616E-4	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999738603833607	WITHOUT_CLASSIFICATION	2.613961663936886E-5	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999990645704097	WITHOUT_CLASSIFICATION	9.354295902714786E-7	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998066797323154	WITHOUT_CLASSIFICATION	1.933202676844974E-4	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998066797323154	WITHOUT_CLASSIFICATION	1.933202676844974E-4	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998066797323154	WITHOUT_CLASSIFICATION	1.933202676844974E-4	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998066797323154	WITHOUT_CLASSIFICATION	1.933202676844974E-4	TEST
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999941616996072	WITHOUT_CLASSIFICATION	5.838300392877188E-6	TEST
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.999360352722823	WITHOUT_CLASSIFICATION	6.396472771769974E-4	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999635390378225	WITHOUT_CLASSIFICATION	3.6460962177533916E-5	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999635390378225	WITHOUT_CLASSIFICATION	3.6460962177533916E-5	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999985153832642	WITHOUT_CLASSIFICATION	1.4846167357260413E-6	TEST
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.999911147209458	WITHOUT_CLASSIFICATION	8.885279054204904E-5	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999914012715584	WITHOUT_CLASSIFICATION	8.598728441514441E-6	TEST
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999746587579955	WITHOUT_CLASSIFICATION	2.5341242004473763E-5	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999032984347282	WITHOUT_CLASSIFICATION	9.670156527172484E-5	TEST
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9997982199775556	WITHOUT_CLASSIFICATION	2.017800224444377E-4	TEST
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999857300024457	WITHOUT_CLASSIFICATION	1.4269997554301018E-5	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999853615812402	WITHOUT_CLASSIFICATION	1.4638418759887295E-5	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999853615812402	WITHOUT_CLASSIFICATION	1.4638418759887295E-5	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999853615812402	WITHOUT_CLASSIFICATION	1.4638418759887295E-5	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999853615812402	WITHOUT_CLASSIFICATION	1.4638418759887295E-5	TEST
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999881609533574	WITHOUT_CLASSIFICATION	1.1839046642552379E-5	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999959289420979	WITHOUT_CLASSIFICATION	4.071057902178317E-6	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999959289420979	WITHOUT_CLASSIFICATION	4.071057902178317E-6	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999959289420979	WITHOUT_CLASSIFICATION	4.071057902178317E-6	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999848190750144	WITHOUT_CLASSIFICATION	1.5180924985639802E-5	TEST
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999287380608973	WITHOUT_CLASSIFICATION	7.126193910265185E-5	TEST
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999802519419438	WITHOUT_CLASSIFICATION	1.9748058056065812E-5	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9980044062547431	WITHOUT_CLASSIFICATION	0.0019955937452568804	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9980044062547431	WITHOUT_CLASSIFICATION	0.0019955937452568804	TEST
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999802315853206	WITHOUT_CLASSIFICATION	1.9768414679370555E-5	TEST
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999938443526183	WITHOUT_CLASSIFICATION	6.155647381691577E-6	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.999957075342315	WITHOUT_CLASSIFICATION	4.2924657684850005E-5	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.999957075342315	WITHOUT_CLASSIFICATION	4.2924657684850005E-5	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999421113502904	WITHOUT_CLASSIFICATION	5.7888649709539416E-5	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999421113502904	WITHOUT_CLASSIFICATION	5.7888649709539416E-5	TEST
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999411686605528	WITHOUT_CLASSIFICATION	5.883133944718386E-5	TEST
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9992562534104504	WITHOUT_CLASSIFICATION	7.437465895494631E-4	TEST
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.999960343107365	WITHOUT_CLASSIFICATION	3.965689263496092E-5	TEST
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999524699724787	WITHOUT_CLASSIFICATION	4.7530027521316715E-5	TEST
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999646839055941	WITHOUT_CLASSIFICATION	3.5316094405815155E-5	TEST
// create the default thread group	WITHOUT_CLASSIFICATION	0.999994439966499	WITHOUT_CLASSIFICATION	5.560033501098061E-6	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999604153933916	WITHOUT_CLASSIFICATION	3.958460660838182E-5	TEST
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999390594091649	WITHOUT_CLASSIFICATION	6.0940590835001864E-5	TEST
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9998583984482167	WITHOUT_CLASSIFICATION	1.4160155178337966E-4	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999906492910257	WITHOUT_CLASSIFICATION	9.350708974275906E-6	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999906492910257	WITHOUT_CLASSIFICATION	9.350708974275906E-6	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999881135487666	WITHOUT_CLASSIFICATION	1.188645123334236E-5	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999881135487666	WITHOUT_CLASSIFICATION	1.188645123334236E-5	TEST
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999876106006288	WITHOUT_CLASSIFICATION	1.2389399371128129E-5	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999892877764187	WITHOUT_CLASSIFICATION	1.0712223581308161E-5	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999687962302853	WITHOUT_CLASSIFICATION	3.120376971456002E-5	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9995717537237613	WITHOUT_CLASSIFICATION	4.2824627623869275E-4	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9995717537237613	WITHOUT_CLASSIFICATION	4.2824627623869275E-4	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9995717537237613	WITHOUT_CLASSIFICATION	4.2824627623869275E-4	TEST
// line 286	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 476	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 513	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 530	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 533	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 551	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// end loop	WITHOUT_CLASSIFICATION	0.9999937978287993	WITHOUT_CLASSIFICATION	6.202171200783447E-6	TEST
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9997956423036073	WITHOUT_CLASSIFICATION	2.043576963927122E-4	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999963430338787	WITHOUT_CLASSIFICATION	3.656966121141229E-6	TEST
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9999893567691184	WITHOUT_CLASSIFICATION	1.0643230881705027E-5	TEST
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9998466937205318	WITHOUT_CLASSIFICATION	1.5330627946816784E-4	TEST
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.999964255762423	WITHOUT_CLASSIFICATION	3.5744237577070107E-5	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9980044062547431	WITHOUT_CLASSIFICATION	0.0019955937452568804	TEST
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999967140873819	WITHOUT_CLASSIFICATION	3.2859126180170423E-6	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9998773254992227	WITHOUT_CLASSIFICATION	1.2267450077736378E-4	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999920858306137	WITHOUT_CLASSIFICATION	7.914169386277978E-6	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998834616136074	WITHOUT_CLASSIFICATION	1.16538386392668E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999593264051307	WITHOUT_CLASSIFICATION	4.0673594869291374E-5	TEST
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.999977658348276	WITHOUT_CLASSIFICATION	2.234165172393349E-5	TEST
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9993295093788721	WITHOUT_CLASSIFICATION	6.704906211279167E-4	TEST
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.999921591235381	WITHOUT_CLASSIFICATION	7.840876461893528E-5	TEST
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9996810632099717	WITHOUT_CLASSIFICATION	3.1893679002825914E-4	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999886417996715	WITHOUT_CLASSIFICATION	1.1358200328428778E-5	TEST
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999602401511627	WITHOUT_CLASSIFICATION	3.975984883729693E-5	TEST
// line 572	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 625	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 649	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 723	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 745	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 766	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 785	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 800	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 812	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 827	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 864	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 886	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 911	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 929	WITHOUT_CLASSIFICATION	0.9999925268489448	WITHOUT_CLASSIFICATION	7.47315105521341E-6	TEST
// line 952	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 970	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 972	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 991	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1011	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1026	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1067	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1085	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1145	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1169	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1201	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1229	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1287	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1293	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1307	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1325	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1363	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1398	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1473	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1492	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1523	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1562	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1582	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1620	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1635	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1652	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1681	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1755	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1789	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999894888431163	WITHOUT_CLASSIFICATION	1.0511156883638625E-5	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999559437255546	WITHOUT_CLASSIFICATION	4.405627444532129E-5	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9992291667636332	WITHOUT_CLASSIFICATION	7.708332363669336E-4	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999118796327651	WITHOUT_CLASSIFICATION	8.812036723482103E-5	TEST
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999854281101682	WITHOUT_CLASSIFICATION	1.4571889831833436E-5	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999852462080174	WITHOUT_CLASSIFICATION	1.4753791982659574E-5	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999852462080174	WITHOUT_CLASSIFICATION	1.4753791982659574E-5	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999852462080174	WITHOUT_CLASSIFICATION	1.4753791982659574E-5	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999852462080174	WITHOUT_CLASSIFICATION	1.4753791982659574E-5	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9996175657449213	WITHOUT_CLASSIFICATION	3.824342550786488E-4	TEST
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999941673918809	WITHOUT_CLASSIFICATION	5.832608119157006E-6	TEST
// line 313	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 339	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 361	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 413	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 451	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 472	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 500	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 515	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 555	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 582	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 619	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 636	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 669	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 703	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 776	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 814	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 823	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 854	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 872	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 905	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 925	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 958	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 992	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1047	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1072	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1081	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1108	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1136	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1168	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1192	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1241	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1267	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1286	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1301	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1314	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1333	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1362	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1395	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1420	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1439	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1476	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1535	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1588	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1618	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1643	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1669	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1728	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1753	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1779	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1794	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1812	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1837	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1895	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1925	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1950	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 1992	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// line 2014	WITHOUT_CLASSIFICATION	0.9999925258772481	WITHOUT_CLASSIFICATION	7.474122751988222E-6	TEST
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999488399786023	WITHOUT_CLASSIFICATION	5.116002139760567E-5	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999902684863933	WITHOUT_CLASSIFICATION	9.731513606815044E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999893078598248	WITHOUT_CLASSIFICATION	1.0692140175295654E-5	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999893078598248	WITHOUT_CLASSIFICATION	1.0692140175295654E-5	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999893078598248	WITHOUT_CLASSIFICATION	1.0692140175295654E-5	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999893078598248	WITHOUT_CLASSIFICATION	1.0692140175295654E-5	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999893078598248	WITHOUT_CLASSIFICATION	1.0692140175295654E-5	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999893078598248	WITHOUT_CLASSIFICATION	1.0692140175295654E-5	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999893078598248	WITHOUT_CLASSIFICATION	1.0692140175295654E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999740732002477	WITHOUT_CLASSIFICATION	2.5926799752324355E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999740732002477	WITHOUT_CLASSIFICATION	2.5926799752324355E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999740732002477	WITHOUT_CLASSIFICATION	2.5926799752324355E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999740732002477	WITHOUT_CLASSIFICATION	2.5926799752324355E-5	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9989284627730732	WITHOUT_CLASSIFICATION	0.0010715372269267539	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9989284627730732	WITHOUT_CLASSIFICATION	0.0010715372269267539	TEST
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9994452847355781	WITHOUT_CLASSIFICATION	5.547152644218157E-4	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999991352321226	WITHOUT_CLASSIFICATION	8.647678773592105E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999991352321226	WITHOUT_CLASSIFICATION	8.647678773592105E-7	TEST
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999239292281105	WITHOUT_CLASSIFICATION	7.60707718896194E-5	TEST
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999867491443594	WITHOUT_CLASSIFICATION	1.3250855640661681E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99996090980072	WITHOUT_CLASSIFICATION	3.9090199279987226E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99996090980072	WITHOUT_CLASSIFICATION	3.9090199279987226E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99996090980072	WITHOUT_CLASSIFICATION	3.9090199279987226E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99996090980072	WITHOUT_CLASSIFICATION	3.9090199279987226E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99996090980072	WITHOUT_CLASSIFICATION	3.9090199279987226E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99996090980072	WITHOUT_CLASSIFICATION	3.9090199279987226E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99996090980072	WITHOUT_CLASSIFICATION	3.9090199279987226E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99996090980072	WITHOUT_CLASSIFICATION	3.9090199279987226E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99996090980072	WITHOUT_CLASSIFICATION	3.9090199279987226E-5	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999862406298706	WITHOUT_CLASSIFICATION	1.3759370129473953E-5	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999862406298706	WITHOUT_CLASSIFICATION	1.3759370129473953E-5	TEST
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999781875953837	WITHOUT_CLASSIFICATION	2.181240461637148E-5	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999797545096364	WITHOUT_CLASSIFICATION	2.0245490363685075E-5	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999797545096364	WITHOUT_CLASSIFICATION	2.0245490363685075E-5	TEST
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999941174276931	WITHOUT_CLASSIFICATION	5.882572306891132E-6	TEST
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.996092884760384	WITHOUT_CLASSIFICATION	0.003907115239616027	TEST
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.99999936796896	WITHOUT_CLASSIFICATION	6.320310399223283E-7	TEST
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999878217474546	WITHOUT_CLASSIFICATION	1.2178252545410885E-5	TEST
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999688177796014	WITHOUT_CLASSIFICATION	3.1182220398466364E-5	TEST
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999604656236841	WITHOUT_CLASSIFICATION	3.953437631586867E-5	TEST
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999911948628585	WITHOUT_CLASSIFICATION	8.805137141396058E-6	TEST
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999879395115298	WITHOUT_CLASSIFICATION	1.206048847021843E-5	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9993031875116185	WITHOUT_CLASSIFICATION	6.968124883814752E-4	TEST
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9995323417992099	WITHOUT_CLASSIFICATION	4.6765820079001957E-4	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9956592596545589	WITHOUT_CLASSIFICATION	0.0043407403454411575	TEST
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999963601800359	WITHOUT_CLASSIFICATION	3.639819964225845E-6	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999717757439195	WITHOUT_CLASSIFICATION	2.822425608051101E-5	TEST
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999896508779001	WITHOUT_CLASSIFICATION	1.0349122099816084E-5	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999505967883344	WITHOUT_CLASSIFICATION	4.940321166568619E-5	TEST
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999895420587845	WITHOUT_CLASSIFICATION	1.0457941215367404E-5	TEST
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999695056510974	WITHOUT_CLASSIFICATION	3.0494348902547878E-5	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9998434212128202	WITHOUT_CLASSIFICATION	1.5657878717973791E-4	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999287591468451	WITHOUT_CLASSIFICATION	7.124085315491994E-5	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999287591468451	WITHOUT_CLASSIFICATION	7.124085315491994E-5	TEST
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999810505530212	WITHOUT_CLASSIFICATION	1.8949446978711853E-5	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999052700918992	WITHOUT_CLASSIFICATION	9.472990810068827E-5	TEST
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999683249453207	WITHOUT_CLASSIFICATION	3.1675054679317874E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9996381460202615	WITHOUT_CLASSIFICATION	3.6185397973853415E-4	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9998176641670219	WITHOUT_CLASSIFICATION	1.823358329780301E-4	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9998176641670219	WITHOUT_CLASSIFICATION	1.823358329780301E-4	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9998176641670219	WITHOUT_CLASSIFICATION	1.823358329780301E-4	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999940584765519	WITHOUT_CLASSIFICATION	5.941523448184211E-6	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9998375603063773	WITHOUT_CLASSIFICATION	1.6243969362271643E-4	TEST
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999974985676042	WITHOUT_CLASSIFICATION	2.5014323957769462E-6	TEST
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999997029958946	WITHOUT_CLASSIFICATION	2.970041053795956E-7	TEST
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999951050920429	WITHOUT_CLASSIFICATION	4.894907956988742E-6	TEST
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.999999569056449	WITHOUT_CLASSIFICATION	4.3094355100469154E-7	TEST
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999832253344705	WITHOUT_CLASSIFICATION	1.6774665529587324E-5	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999386507212213	WITHOUT_CLASSIFICATION	6.134927877864635E-5	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.999998995272758	WITHOUT_CLASSIFICATION	1.0047272419232336E-6	TEST
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999738237239719	WITHOUT_CLASSIFICATION	2.6176276028153945E-5	TEST
// reset buffer	WITHOUT_CLASSIFICATION	0.9999905064823298	WITHOUT_CLASSIFICATION	9.493517670212944E-6	TEST
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.999994139244987	WITHOUT_CLASSIFICATION	5.860755013046719E-6	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9704816328178966	WITHOUT_CLASSIFICATION	0.02951836718210348	TEST
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999841426815269	WITHOUT_CLASSIFICATION	1.5857318473124795E-5	TEST
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999948741586762	WITHOUT_CLASSIFICATION	5.1258413237725485E-6	TEST
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999862062600512	WITHOUT_CLASSIFICATION	1.3793739948776217E-5	TEST
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999560426253112	WITHOUT_CLASSIFICATION	4.3957374688676976E-5	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9998543237694862	WITHOUT_CLASSIFICATION	1.456762305136893E-4	TEST
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999973648034254	WITHOUT_CLASSIFICATION	2.6351965746091266E-6	TEST
