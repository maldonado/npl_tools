// ?R  | boolean | True if file is readable by the real uid/gid of the caller // FIXME: Need to implement an readable_real_p in FileTest	TEST	0.9999945203598495	WITHOUT_CLASSIFICATION	5.479640150415744E-6	TEST
// TODO make an assert here	TEST	0.9356752653567263	WITHOUT_CLASSIFICATION	0.06432473464327382	TEST
// TODO add test methods here. The name must begin with 'test'. For example:	TEST	0.9366359709108205	TEST	0.06336402908917954	WITHOUT_CLASSIFICATION
// TODO: Make into an assert once I get things like blockbodynodes to be implicit nil	TEST	0.9983531321371346	WITHOUT_CLASSIFICATION	0.001646867862865373	TEST
// if the method is extending something, then we have // to test if the handler is initialized...	TEST	0.999932124205651	WITHOUT_CLASSIFICATION	6.787579434888902E-5	TEST
// ?W  | boolean | True if file1 exists and is writable by the real uid/gid // FIXME: Need to implement an writable_real_p in FileTest	TEST	0.9999961042967731	WITHOUT_CLASSIFICATION	3.895703226966195E-6	TEST
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999070208602355	WITHOUT_CLASSIFICATION	9.297913976444658E-5	TEST
// line 335	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999961171836487	WITHOUT_CLASSIFICATION	3.8828163513198244E-6	TEST
// line 362	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
// line 391	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
/* ^D */	WITHOUT_CLASSIFICATION	0.9998171762689924	WITHOUT_CLASSIFICATION	1.8282373100765519E-4	TEST
/* ^Z */	WITHOUT_CLASSIFICATION	0.9998173907634927	WITHOUT_CLASSIFICATION	1.8260923650735518E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9999199381512307	WITHOUT_CLASSIFICATION	8.006184876918324E-5	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9999199381512307	WITHOUT_CLASSIFICATION	8.006184876918324E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999191229606842	WITHOUT_CLASSIFICATION	8.087703931575828E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999191229606842	WITHOUT_CLASSIFICATION	8.087703931575828E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999191229606842	WITHOUT_CLASSIFICATION	8.087703931575828E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999191229606842	WITHOUT_CLASSIFICATION	8.087703931575828E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999191229606842	WITHOUT_CLASSIFICATION	8.087703931575828E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999191229606842	WITHOUT_CLASSIFICATION	8.087703931575828E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999191229606842	WITHOUT_CLASSIFICATION	8.087703931575828E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999191229606842	WITHOUT_CLASSIFICATION	8.087703931575828E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999191229606842	WITHOUT_CLASSIFICATION	8.087703931575828E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999191229606842	WITHOUT_CLASSIFICATION	8.087703931575828E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999191229606842	WITHOUT_CLASSIFICATION	8.087703931575828E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999191229606842	WITHOUT_CLASSIFICATION	8.087703931575828E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999191229606842	WITHOUT_CLASSIFICATION	8.087703931575828E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999191229606842	WITHOUT_CLASSIFICATION	8.087703931575828E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999191229606842	WITHOUT_CLASSIFICATION	8.087703931575828E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999191229606842	WITHOUT_CLASSIFICATION	8.087703931575828E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999191229606842	WITHOUT_CLASSIFICATION	8.087703931575828E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999191229606842	WITHOUT_CLASSIFICATION	8.087703931575828E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999191229606842	WITHOUT_CLASSIFICATION	8.087703931575828E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999191229606842	WITHOUT_CLASSIFICATION	8.087703931575828E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999191229606842	WITHOUT_CLASSIFICATION	8.087703931575828E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999191229606842	WITHOUT_CLASSIFICATION	8.087703931575828E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999191229606842	WITHOUT_CLASSIFICATION	8.087703931575828E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999191229606842	WITHOUT_CLASSIFICATION	8.087703931575828E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999191229606842	WITHOUT_CLASSIFICATION	8.087703931575828E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999191229606842	WITHOUT_CLASSIFICATION	8.087703931575828E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999191229606842	WITHOUT_CLASSIFICATION	8.087703931575828E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999191229606842	WITHOUT_CLASSIFICATION	8.087703931575828E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999191229606842	WITHOUT_CLASSIFICATION	8.087703931575828E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999191229606842	WITHOUT_CLASSIFICATION	8.087703931575828E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999191229606842	WITHOUT_CLASSIFICATION	8.087703931575828E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999191229606842	WITHOUT_CLASSIFICATION	8.087703931575828E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999191229606842	WITHOUT_CLASSIFICATION	8.087703931575828E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999191229606842	WITHOUT_CLASSIFICATION	8.087703931575828E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999191229606842	WITHOUT_CLASSIFICATION	8.087703931575828E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999191229606842	WITHOUT_CLASSIFICATION	8.087703931575828E-5	TEST
// return result	WITHOUT_CLASSIFICATION	0.9999970710656101	WITHOUT_CLASSIFICATION	2.928934389796458E-6	TEST
// name	WITHOUT_CLASSIFICATION	0.9998062721382835	WITHOUT_CLASSIFICATION	1.9372786171651052E-4	TEST
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999810125352332	WITHOUT_CLASSIFICATION	1.898746476679423E-5	TEST
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999917834131721	WITHOUT_CLASSIFICATION	8.216586827845222E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999917985317892	WITHOUT_CLASSIFICATION	8.201468210774117E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999917985317892	WITHOUT_CLASSIFICATION	8.201468210774117E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999917985317892	WITHOUT_CLASSIFICATION	8.201468210774117E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999917985317892	WITHOUT_CLASSIFICATION	8.201468210774117E-6	TEST
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999924803421969	WITHOUT_CLASSIFICATION	7.5196578032095395E-6	TEST
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999465874431619	WITHOUT_CLASSIFICATION	5.341255683803822E-5	TEST
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999848713319639	WITHOUT_CLASSIFICATION	1.5128668036207129E-5	TEST
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999814088198654	WITHOUT_CLASSIFICATION	1.8591180134523026E-5	TEST
// Version information:	WITHOUT_CLASSIFICATION	0.9999836019985978	WITHOUT_CLASSIFICATION	1.6398001402166233E-5	TEST
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999991061299452	WITHOUT_CLASSIFICATION	8.938700548753093E-7	TEST
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999897833818314	WITHOUT_CLASSIFICATION	1.021661816860797E-5	TEST
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999963679484724	WITHOUT_CLASSIFICATION	3.6320515275135615E-6	TEST
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999997201156572	WITHOUT_CLASSIFICATION	2.7988434277008113E-7	TEST
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9975726263615872	WITHOUT_CLASSIFICATION	0.002427373638412745	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999823842297024	WITHOUT_CLASSIFICATION	1.7615770297543148E-5	TEST
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.999990412951969	WITHOUT_CLASSIFICATION	9.58704803101618E-6	TEST
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9998348007198634	WITHOUT_CLASSIFICATION	1.6519928013659878E-4	TEST
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999988798497812	WITHOUT_CLASSIFICATION	1.1201502187279998E-6	TEST
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999716594580849	WITHOUT_CLASSIFICATION	2.8340541915139505E-5	TEST
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.999989474761956	WITHOUT_CLASSIFICATION	1.0525238043871871E-5	TEST
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9999996966377891	WITHOUT_CLASSIFICATION	3.033622108904877E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999917985317892	WITHOUT_CLASSIFICATION	8.201468210774117E-6	TEST
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.999965861296086	WITHOUT_CLASSIFICATION	3.413870391400703E-5	TEST
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999705601571868	WITHOUT_CLASSIFICATION	2.9439842813230733E-5	TEST
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999646235002083	WITHOUT_CLASSIFICATION	3.537649979175927E-5	TEST
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9999855269542705	WITHOUT_CLASSIFICATION	1.4473045729663512E-5	TEST
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9999635165551697	WITHOUT_CLASSIFICATION	3.648344483044685E-5	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.9999952225832804	WITHOUT_CLASSIFICATION	4.7774167195642395E-6	TEST
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999849024294881	WITHOUT_CLASSIFICATION	1.509757051179841E-5	TEST
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999048173856094	WITHOUT_CLASSIFICATION	9.518261439051925E-5	TEST
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999777864368693	WITHOUT_CLASSIFICATION	2.2213563130668384E-5	TEST
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999732111456671	WITHOUT_CLASSIFICATION	2.678885433294994E-5	TEST
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9991610742627638	WITHOUT_CLASSIFICATION	8.389257372362264E-4	TEST
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999235206837702	WITHOUT_CLASSIFICATION	7.64793162297493E-5	TEST
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9996126367327413	WITHOUT_CLASSIFICATION	3.873632672586792E-4	TEST
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999863962754715	WITHOUT_CLASSIFICATION	1.3603724528412265E-5	TEST
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999849957888195	WITHOUT_CLASSIFICATION	1.5004211180510523E-5	TEST
// RubySignal	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999641210852241	WITHOUT_CLASSIFICATION	3.5878914775913755E-5	TEST
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9913777062659289	WITHOUT_CLASSIFICATION	0.008622293734071054	TEST
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999920285296493	WITHOUT_CLASSIFICATION	7.971470350695404E-6	TEST
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999969617355096	WITHOUT_CLASSIFICATION	3.038264490512241E-6	TEST
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999841423703333	WITHOUT_CLASSIFICATION	1.585762966667473E-5	TEST
//io.finish();	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.999849988990144	WITHOUT_CLASSIFICATION	1.5001100985604572E-4	TEST
// hmm...	WITHOUT_CLASSIFICATION	0.9999184955562991	WITHOUT_CLASSIFICATION	8.150444370085729E-5	TEST
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999141590348488	WITHOUT_CLASSIFICATION	8.584096515120451E-5	TEST
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999782689320659	WITHOUT_CLASSIFICATION	2.1731067934151274E-5	TEST
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999898252049375	WITHOUT_CLASSIFICATION	1.0174795062411504E-5	TEST
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999885908703586	WITHOUT_CLASSIFICATION	1.1409129641365704E-5	TEST
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999871381235003	WITHOUT_CLASSIFICATION	1.2861876499703518E-5	TEST
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999587998896071	WITHOUT_CLASSIFICATION	4.1200110392906166E-5	TEST
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999817197210501	WITHOUT_CLASSIFICATION	1.828027894983753E-5	TEST
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999109665237634	WITHOUT_CLASSIFICATION	8.903347623659275E-5	TEST
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999970042385831	WITHOUT_CLASSIFICATION	2.9957614168839437E-6	TEST
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999972217850404	WITHOUT_CLASSIFICATION	2.7782149597103677E-6	TEST
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.999982854766685	WITHOUT_CLASSIFICATION	1.7145233314958E-5	TEST
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999993596355264	WITHOUT_CLASSIFICATION	6.403644735693332E-7	TEST
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9996212528063825	WITHOUT_CLASSIFICATION	3.787471936175859E-4	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999884967348356	WITHOUT_CLASSIFICATION	1.1503265164418829E-5	TEST
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999989405945808	WITHOUT_CLASSIFICATION	1.059405419107714E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999889936141	WITHOUT_CLASSIFICATION	1.1006385900114104E-5	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999896588314545	WITHOUT_CLASSIFICATION	1.0341168545566402E-5	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999720204069625	WITHOUT_CLASSIFICATION	2.797959303750736E-5	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999720204069625	WITHOUT_CLASSIFICATION	2.797959303750736E-5	TEST
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9999461131039349	WITHOUT_CLASSIFICATION	5.3886896065094966E-5	TEST
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999949767557932	WITHOUT_CLASSIFICATION	5.023244206819878E-6	TEST
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999753235500889	WITHOUT_CLASSIFICATION	2.4676449911121277E-5	TEST
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999919050261092	WITHOUT_CLASSIFICATION	8.094973890872837E-6	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.999994695563903	WITHOUT_CLASSIFICATION	5.30443609702571E-6	TEST
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9998207934171627	WITHOUT_CLASSIFICATION	1.7920658283744465E-4	TEST
// ???	WITHOUT_CLASSIFICATION	0.9999237158540889	WITHOUT_CLASSIFICATION	7.628414591099873E-5	TEST
// PID	WITHOUT_CLASSIFICATION	0.9999184955562991	WITHOUT_CLASSIFICATION	8.150444370085729E-5	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999889936141	WITHOUT_CLASSIFICATION	1.1006385900114104E-5	TEST
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999984071274293	WITHOUT_CLASSIFICATION	1.5928725707285403E-6	TEST
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999518488434753	WITHOUT_CLASSIFICATION	4.8151156524598255E-5	TEST
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999994932846452	WITHOUT_CLASSIFICATION	5.067153547799445E-7	TEST
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999989333789482	WITHOUT_CLASSIFICATION	1.0666210518800208E-6	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.999990260304884	WITHOUT_CLASSIFICATION	9.739695115936217E-6	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.999990260304884	WITHOUT_CLASSIFICATION	9.739695115936217E-6	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.999990260304884	WITHOUT_CLASSIFICATION	9.739695115936217E-6	TEST
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999991799963834	WITHOUT_CLASSIFICATION	8.20003616552845E-7	TEST
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999978793348602	WITHOUT_CLASSIFICATION	2.120665139847191E-6	TEST
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999958203861997	WITHOUT_CLASSIFICATION	4.179613800305619E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999809960733047	WITHOUT_CLASSIFICATION	1.9003926695248113E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999809960733047	WITHOUT_CLASSIFICATION	1.9003926695248113E-5	TEST
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9992831819536172	WITHOUT_CLASSIFICATION	7.1681804638284E-4	TEST
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999984585104115	WITHOUT_CLASSIFICATION	1.5414895885711144E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999809960733047	WITHOUT_CLASSIFICATION	1.9003926695248113E-5	TEST
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999920294469222	WITHOUT_CLASSIFICATION	7.97055307766913E-6	TEST
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.999902355312419	WITHOUT_CLASSIFICATION	9.76446875810504E-5	TEST
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999810594316361	WITHOUT_CLASSIFICATION	1.894056836389318E-5	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.999995885061753	WITHOUT_CLASSIFICATION	4.114938247023162E-6	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999514082644911	WITHOUT_CLASSIFICATION	4.8591735509000326E-5	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999828092747738	WITHOUT_CLASSIFICATION	1.7190725226218586E-5	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999828092747738	WITHOUT_CLASSIFICATION	1.7190725226218586E-5	TEST
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999725546638641	WITHOUT_CLASSIFICATION	2.744533613593141E-5	TEST
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999901615758942	WITHOUT_CLASSIFICATION	9.838424105857036E-6	TEST
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999834976514023	WITHOUT_CLASSIFICATION	1.6502348597786852E-5	TEST
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999787355966538	WITHOUT_CLASSIFICATION	2.1264403346063728E-5	TEST
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999515944000409	WITHOUT_CLASSIFICATION	4.840559995921211E-5	TEST
// extras flag	WITHOUT_CLASSIFICATION	0.9999928361350696	WITHOUT_CLASSIFICATION	7.16386493039277E-6	TEST
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// ...nothing	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// utility method	WITHOUT_CLASSIFICATION	0.9999975827218947	WITHOUT_CLASSIFICATION	2.4172781052415554E-6	TEST
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.99999329350983	WITHOUT_CLASSIFICATION	6.706490170028162E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999889936141	WITHOUT_CLASSIFICATION	1.1006385900114104E-5	TEST
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999338763033726	WITHOUT_CLASSIFICATION	6.612369662732846E-5	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999613185094406	WITHOUT_CLASSIFICATION	3.868149055948695E-5	TEST
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.999981808784192	WITHOUT_CLASSIFICATION	1.8191215808058133E-5	TEST
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999754560144856	WITHOUT_CLASSIFICATION	2.4543985514378433E-5	TEST
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999777588725486	WITHOUT_CLASSIFICATION	2.2241127451454578E-5	TEST
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999853153312402	WITHOUT_CLASSIFICATION	1.4684668759849866E-5	TEST
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999622153108421	WITHOUT_CLASSIFICATION	3.778468915785824E-5	TEST
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999820337929397	WITHOUT_CLASSIFICATION	1.7966207060251652E-5	TEST
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9999149404190619	WITHOUT_CLASSIFICATION	8.505958093807346E-5	TEST
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9998443156027476	WITHOUT_CLASSIFICATION	1.5568439725250382E-4	TEST
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999791635795631	WITHOUT_CLASSIFICATION	2.0836420436922282E-5	TEST
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999959590196844	WITHOUT_CLASSIFICATION	4.04098031563091E-6	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999954399464644	WITHOUT_CLASSIFICATION	4.560053535459462E-6	TEST
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9998500635212867	WITHOUT_CLASSIFICATION	1.4993647871331303E-4	TEST
// recheck condition	WITHOUT_CLASSIFICATION	0.9999921468915516	WITHOUT_CLASSIFICATION	7.853108448492143E-6	TEST
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999860336999872	WITHOUT_CLASSIFICATION	1.3966300012856228E-5	TEST
// Construct key services	WITHOUT_CLASSIFICATION	0.9999595760045678	WITHOUT_CLASSIFICATION	4.042399543224347E-5	TEST
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.999996645698741	WITHOUT_CLASSIFICATION	3.3543012590348175E-6	TEST
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999977063505494	WITHOUT_CLASSIFICATION	2.293649450678989E-6	TEST
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999932925593081	WITHOUT_CLASSIFICATION	6.707440691855633E-6	TEST
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999990066851145	WITHOUT_CLASSIFICATION	9.93314885542528E-7	TEST
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999944422474623	WITHOUT_CLASSIFICATION	5.557752537785055E-6	TEST
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999342421649781	WITHOUT_CLASSIFICATION	6.575783502185219E-5	TEST
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999944785374967	WITHOUT_CLASSIFICATION	5.5214625033620376E-6	TEST
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999764255138177	WITHOUT_CLASSIFICATION	2.357448618239442E-5	TEST
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999790127324827	WITHOUT_CLASSIFICATION	2.0987267517306786E-5	TEST
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999682987933307	WITHOUT_CLASSIFICATION	3.170120666922226E-5	TEST
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.999991538334822	WITHOUT_CLASSIFICATION	8.461665178055905E-6	TEST
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999934716841479	WITHOUT_CLASSIFICATION	6.528315852178435E-6	TEST
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999954166349494	WITHOUT_CLASSIFICATION	4.583365050643954E-6	TEST
// determine spacing	WITHOUT_CLASSIFICATION	0.9999924126221336	WITHOUT_CLASSIFICATION	7.587377866391684E-6	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998282252860548	WITHOUT_CLASSIFICATION	1.7177471394524602E-4	TEST
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999543922951853	WITHOUT_CLASSIFICATION	4.560770481454683E-5	TEST
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999143286782016	WITHOUT_CLASSIFICATION	8.567132179829622E-5	TEST
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9998805270716281	WITHOUT_CLASSIFICATION	1.194729283719396E-4	TEST
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999016739968724	WITHOUT_CLASSIFICATION	9.832600312772821E-5	TEST
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9989700480989524	WITHOUT_CLASSIFICATION	0.0010299519010476058	TEST
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.999976026165309	WITHOUT_CLASSIFICATION	2.3973834691004017E-5	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999810588534034	WITHOUT_CLASSIFICATION	1.894114659658713E-5	TEST
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999853248835618	WITHOUT_CLASSIFICATION	1.467511643818881E-5	TEST
// Default objects	WITHOUT_CLASSIFICATION	0.9999921246895928	WITHOUT_CLASSIFICATION	7.875310407309008E-6	TEST
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999839601352403	WITHOUT_CLASSIFICATION	1.6039864759671748E-5	TEST
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9998844131127	WITHOUT_CLASSIFICATION	1.15586887300024E-4	TEST
// Java support	WITHOUT_CLASSIFICATION	0.9999951348762238	WITHOUT_CLASSIFICATION	4.86512377616196E-6	TEST
// Parser stats	WITHOUT_CLASSIFICATION	0.999991750428339	WITHOUT_CLASSIFICATION	8.249571660918367E-6	TEST
// Compilation	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999755747301721	WITHOUT_CLASSIFICATION	2.4425269827820393E-5	TEST
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999714891461127	WITHOUT_CLASSIFICATION	2.8510853887375304E-5	TEST
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999529735285538	WITHOUT_CLASSIFICATION	4.7026471446227516E-5	TEST
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999583974074645	WITHOUT_CLASSIFICATION	4.160259253543295E-5	TEST
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999858269616387	WITHOUT_CLASSIFICATION	1.417303836131944E-5	TEST
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999771986387501	WITHOUT_CLASSIFICATION	2.2801361249899587E-5	TEST
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999622013125051	WITHOUT_CLASSIFICATION	3.779868749484151E-5	TEST
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9998385728322211	WITHOUT_CLASSIFICATION	1.6142716777891162E-4	TEST
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999830207750428	WITHOUT_CLASSIFICATION	1.6979224957269648E-5	TEST
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999986436000134	WITHOUT_CLASSIFICATION	1.3563999865187187E-6	TEST
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999962669305253	WITHOUT_CLASSIFICATION	3.7330694745735416E-6	TEST
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// default options	WITHOUT_CLASSIFICATION	0.9999968102965465	WITHOUT_CLASSIFICATION	3.1897034534389637E-6	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999184955562991	WITHOUT_CLASSIFICATION	8.150444370085729E-5	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999184955562991	WITHOUT_CLASSIFICATION	8.150444370085729E-5	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9999255301636024	WITHOUT_CLASSIFICATION	7.446983639754842E-5	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9999255301636024	WITHOUT_CLASSIFICATION	7.446983639754842E-5	TEST
// long name option	WITHOUT_CLASSIFICATION	0.9999534358066798	WITHOUT_CLASSIFICATION	4.65641933201824E-5	TEST
// conversion	WITHOUT_CLASSIFICATION	0.9999917931775736	WITHOUT_CLASSIFICATION	8.206822426465637E-6	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999884706035739	WITHOUT_CLASSIFICATION	1.152939642617366E-5	TEST
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9996485898961404	WITHOUT_CLASSIFICATION	3.51410103859624E-4	TEST
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999626761474257	WITHOUT_CLASSIFICATION	3.7323852574234635E-5	TEST
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9998131460806583	WITHOUT_CLASSIFICATION	1.868539193416495E-4	TEST
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999820337929397	WITHOUT_CLASSIFICATION	1.7966207060251652E-5	TEST
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999820337929397	WITHOUT_CLASSIFICATION	1.7966207060251652E-5	TEST
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999820337929397	WITHOUT_CLASSIFICATION	1.7966207060251652E-5	TEST
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999648183264099	WITHOUT_CLASSIFICATION	3.518167359006808E-5	TEST
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999985728213182	WITHOUT_CLASSIFICATION	1.427178681812438E-6	TEST
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999814330968428	WITHOUT_CLASSIFICATION	1.8566903157097376E-5	TEST
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999743676244264	WITHOUT_CLASSIFICATION	2.5632375573666024E-5	TEST
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999876984588391	WITHOUT_CLASSIFICATION	1.2301541161015969E-5	TEST
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999814330968428	WITHOUT_CLASSIFICATION	1.8566903157097376E-5	TEST
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999961370281593	WITHOUT_CLASSIFICATION	3.862971840698113E-6	TEST
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999820337929397	WITHOUT_CLASSIFICATION	1.7966207060251652E-5	TEST
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999909300582212	WITHOUT_CLASSIFICATION	9.069941778872287E-6	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999652284767172	WITHOUT_CLASSIFICATION	3.4771523282749844E-5	TEST
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999687541086032	WITHOUT_CLASSIFICATION	3.124589139676513E-5	TEST
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999820337929397	WITHOUT_CLASSIFICATION	1.7966207060251652E-5	TEST
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999957648859463	WITHOUT_CLASSIFICATION	4.2351140536903636E-6	TEST
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999131364212077	WITHOUT_CLASSIFICATION	8.686357879223107E-5	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9998722145281981	WITHOUT_CLASSIFICATION	1.27785471801965E-4	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999943144524716	WITHOUT_CLASSIFICATION	5.685547528497675E-6	TEST
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999858004206781	WITHOUT_CLASSIFICATION	1.4199579321976821E-5	TEST
// block given	WITHOUT_CLASSIFICATION	0.999995067935872	WITHOUT_CLASSIFICATION	4.932064127961255E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.999995067935872	WITHOUT_CLASSIFICATION	4.932064127961255E-6	TEST
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999759025673398	WITHOUT_CLASSIFICATION	2.409743266020202E-5	TEST
// string given	WITHOUT_CLASSIFICATION	0.9999836225370268	WITHOUT_CLASSIFICATION	1.637746297321835E-5	TEST
// hash given	WITHOUT_CLASSIFICATION	0.999994985939347	WITHOUT_CLASSIFICATION	5.0140606529327645E-6	TEST
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999990144003189	WITHOUT_CLASSIFICATION	9.855996810581936E-7	TEST
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9997604977876814	WITHOUT_CLASSIFICATION	2.3950221231874776E-4	TEST
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999814330968428	WITHOUT_CLASSIFICATION	1.8566903157097376E-5	TEST
// nothing	WITHOUT_CLASSIFICATION	0.9999126423053202	WITHOUT_CLASSIFICATION	8.735769467990832E-5	TEST
// nothing	WITHOUT_CLASSIFICATION	0.9999126423053202	WITHOUT_CLASSIFICATION	8.735769467990832E-5	TEST
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999814330968428	WITHOUT_CLASSIFICATION	1.8566903157097376E-5	TEST
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9936162931728333	WITHOUT_CLASSIFICATION	0.006383706827166648	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.999995132570521	WITHOUT_CLASSIFICATION	4.8674294791067195E-6	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.999995132570521	WITHOUT_CLASSIFICATION	4.8674294791067195E-6	TEST
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999899764424482	WITHOUT_CLASSIFICATION	1.0023557551719656E-5	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9998309028509361	WITHOUT_CLASSIFICATION	1.6909714906386067E-4	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9998309028509361	WITHOUT_CLASSIFICATION	1.6909714906386067E-4	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999926195284259	WITHOUT_CLASSIFICATION	7.380471574070047E-6	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999926195284259	WITHOUT_CLASSIFICATION	7.380471574070047E-6	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999184955562991	WITHOUT_CLASSIFICATION	8.150444370085729E-5	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999184955562991	WITHOUT_CLASSIFICATION	8.150444370085729E-5	TEST
// QTRUE	WITHOUT_CLASSIFICATION	0.9999184955562991	WITHOUT_CLASSIFICATION	8.150444370085729E-5	TEST
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.999966396137095	WITHOUT_CLASSIFICATION	3.360386290500001E-5	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999951856646987	WITHOUT_CLASSIFICATION	4.814335301276466E-6	TEST
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999987703078792	WITHOUT_CLASSIFICATION	1.229692120765833E-6	TEST
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999951867662855	WITHOUT_CLASSIFICATION	4.813233714499343E-6	TEST
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.999993740146362	WITHOUT_CLASSIFICATION	6.259853638040607E-6	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999901081922242	WITHOUT_CLASSIFICATION	9.89180777564823E-6	TEST
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999990347219129	WITHOUT_CLASSIFICATION	9.652780870500598E-7	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999901081922242	WITHOUT_CLASSIFICATION	9.89180777564823E-6	TEST
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.975075322763599	WITHOUT_CLASSIFICATION	0.024924677236401002	TEST
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999893642543245	WITHOUT_CLASSIFICATION	1.0635745675517956E-5	TEST
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999609207244715	WITHOUT_CLASSIFICATION	3.907927552848588E-5	TEST
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999878339205065	WITHOUT_CLASSIFICATION	1.2166079493582813E-5	TEST
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.999978060845703	WITHOUT_CLASSIFICATION	2.1939154297108915E-5	TEST
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9997450938841708	WITHOUT_CLASSIFICATION	2.5490611582918343E-4	TEST
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.999846175710227	WITHOUT_CLASSIFICATION	1.538242897728691E-4	TEST
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999820830335515	WITHOUT_CLASSIFICATION	1.7916966448432993E-5	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.999996473077098	WITHOUT_CLASSIFICATION	3.5269229019122575E-6	TEST
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999873150505237	WITHOUT_CLASSIFICATION	1.2684949476315266E-5	TEST
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999820337929397	WITHOUT_CLASSIFICATION	1.7966207060251652E-5	TEST
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9997701878841092	WITHOUT_CLASSIFICATION	2.2981211589085442E-4	TEST
// file not given	WITHOUT_CLASSIFICATION	0.9999947226478074	WITHOUT_CLASSIFICATION	5.277352192604477E-6	TEST
// string to eval	WITHOUT_CLASSIFICATION	0.9999932845148188	WITHOUT_CLASSIFICATION	6.715485181159892E-6	TEST
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.999991023173732	WITHOUT_CLASSIFICATION	8.976826268111516E-6	TEST
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999849996612701	WITHOUT_CLASSIFICATION	1.5000338729847511E-5	TEST
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999616444476734	WITHOUT_CLASSIFICATION	3.835555232648286E-5	TEST
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999873395257814	WITHOUT_CLASSIFICATION	1.266047421858258E-5	TEST
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9999044155362186	WITHOUT_CLASSIFICATION	9.558446378140823E-5	TEST
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9997069619291461	WITHOUT_CLASSIFICATION	2.930380708538514E-4	TEST
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9995265594712536	WITHOUT_CLASSIFICATION	4.734405287463925E-4	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999757223015714	WITHOUT_CLASSIFICATION	2.4277698428608664E-5	TEST
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999744441718255	WITHOUT_CLASSIFICATION	2.5555828174606013E-5	TEST
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999599308505986	WITHOUT_CLASSIFICATION	4.0069149401303854E-5	TEST
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999155411127891	WITHOUT_CLASSIFICATION	8.445888721088368E-5	TEST
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999283961560153	WITHOUT_CLASSIFICATION	7.16038439847118E-5	TEST
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999383068922411	WITHOUT_CLASSIFICATION	6.16931077588987E-5	TEST
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9998838448948688	WITHOUT_CLASSIFICATION	1.1615510513111925E-4	TEST
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999941828170904	WITHOUT_CLASSIFICATION	5.817182909627299E-6	TEST
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.99995831904243	WITHOUT_CLASSIFICATION	4.1680957569865666E-5	TEST
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999937275952366	WITHOUT_CLASSIFICATION	6.272404763280986E-6	TEST
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999994759207309	WITHOUT_CLASSIFICATION	5.240792690343001E-7	TEST
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999981615697946	WITHOUT_CLASSIFICATION	1.838430205366256E-6	TEST
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.999893476649734	WITHOUT_CLASSIFICATION	1.065233502659919E-4	TEST
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999892251852467	WITHOUT_CLASSIFICATION	1.077481475338365E-5	TEST
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999911931774248	WITHOUT_CLASSIFICATION	8.806822575092083E-6	TEST
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999860567270146	WITHOUT_CLASSIFICATION	1.3943272985339425E-5	TEST
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999660169975056	WITHOUT_CLASSIFICATION	3.3983002494403796E-5	TEST
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999948033635856	WITHOUT_CLASSIFICATION	5.196636414302967E-6	TEST
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.999986066872991	WITHOUT_CLASSIFICATION	1.3933127009053972E-5	TEST
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999902996254248	WITHOUT_CLASSIFICATION	9.700374575241042E-6	TEST
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999892053178997	WITHOUT_CLASSIFICATION	1.079468210020236E-5	TEST
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999911769387659	WITHOUT_CLASSIFICATION	8.823061234173416E-6	TEST
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999944178429008	WITHOUT_CLASSIFICATION	5.582157099110995E-6	TEST
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999988827794457	WITHOUT_CLASSIFICATION	1.1172205542636181E-6	TEST
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999810718085489	WITHOUT_CLASSIFICATION	1.8928191451122014E-5	TEST
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999409244469577	WITHOUT_CLASSIFICATION	5.907555304223054E-5	TEST
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.999993410811527	WITHOUT_CLASSIFICATION	6.589188472919869E-6	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999547582726677	WITHOUT_CLASSIFICATION	4.524172733223494E-5	TEST
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999545362132719	WITHOUT_CLASSIFICATION	4.546378672820652E-5	TEST
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999955258908276	WITHOUT_CLASSIFICATION	4.474109172361618E-6	TEST
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999934221802894	WITHOUT_CLASSIFICATION	6.5778197105951496E-6	TEST
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9996307547044664	WITHOUT_CLASSIFICATION	3.6924529553367433E-4	TEST
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999819467414427	WITHOUT_CLASSIFICATION	1.8053258557251586E-5	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999988577265474	WITHOUT_CLASSIFICATION	1.14227345253565E-6	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999988577265474	WITHOUT_CLASSIFICATION	1.14227345253565E-6	TEST
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9998657912850027	WITHOUT_CLASSIFICATION	1.3420871499713588E-4	TEST
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9998803499234918	WITHOUT_CLASSIFICATION	1.1965007650817886E-4	TEST
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999356404261817	WITHOUT_CLASSIFICATION	6.43595738184131E-5	TEST
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.999989213135582	WITHOUT_CLASSIFICATION	1.0786864417980971E-5	TEST
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999977977577631	WITHOUT_CLASSIFICATION	2.2022422369431316E-6	TEST
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999821266859574	WITHOUT_CLASSIFICATION	1.7873314042584323E-5	TEST
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.99997308874078	WITHOUT_CLASSIFICATION	2.6911259220046043E-5	TEST
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999987066117128	WITHOUT_CLASSIFICATION	1.293388287268487E-6	TEST
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999686749167049	WITHOUT_CLASSIFICATION	3.132508329496959E-5	TEST
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999989653319348	WITHOUT_CLASSIFICATION	1.0346680652506094E-6	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999981497539691	WITHOUT_CLASSIFICATION	1.8502460309460898E-6	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999981497539691	WITHOUT_CLASSIFICATION	1.8502460309460898E-6	TEST
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9999817301872551	WITHOUT_CLASSIFICATION	1.8269812744940112E-5	TEST
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999993003531654	WITHOUT_CLASSIFICATION	6.996468345868309E-7	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9998309099248297	WITHOUT_CLASSIFICATION	1.6909007517022708E-4	TEST
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999907761181315	WITHOUT_CLASSIFICATION	9.223881868497663E-6	TEST
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999617322716436	WITHOUT_CLASSIFICATION	3.826772835639278E-5	TEST
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999965270208031	WITHOUT_CLASSIFICATION	3.472979196848614E-6	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999789445415663	WITHOUT_CLASSIFICATION	2.1055458433729415E-5	TEST
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.999953564113121	WITHOUT_CLASSIFICATION	4.643588687906978E-5	TEST
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999965380274567	WITHOUT_CLASSIFICATION	3.461972543305508E-6	TEST
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999822763027101	WITHOUT_CLASSIFICATION	1.7723697289817506E-5	TEST
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999906610279838	WITHOUT_CLASSIFICATION	9.338972016197836E-6	TEST
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9998744589577596	WITHOUT_CLASSIFICATION	1.255410422404806E-4	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999857177134261	WITHOUT_CLASSIFICATION	1.4282286573834597E-5	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999857177134261	WITHOUT_CLASSIFICATION	1.4282286573834597E-5	TEST
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999431184979312	WITHOUT_CLASSIFICATION	5.6881502068906855E-5	TEST
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999857613749917	WITHOUT_CLASSIFICATION	1.423862500821672E-5	TEST
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999821502683471	WITHOUT_CLASSIFICATION	1.7849731652791915E-5	TEST
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999613601738957	WITHOUT_CLASSIFICATION	3.8639826104318863E-5	TEST
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999560946589394	WITHOUT_CLASSIFICATION	4.3905341060491E-5	TEST
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999624980265195	WITHOUT_CLASSIFICATION	3.750197348040442E-5	TEST
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9998901162844707	WITHOUT_CLASSIFICATION	1.0988371552933192E-4	TEST
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999836647049459	WITHOUT_CLASSIFICATION	1.6335295054070652E-5	TEST
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999706622254427	WITHOUT_CLASSIFICATION	2.93377745572877E-5	TEST
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999837142302913	WITHOUT_CLASSIFICATION	1.6285769708640528E-5	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9998309099248297	WITHOUT_CLASSIFICATION	1.6909007517022708E-4	TEST
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9998120181153054	WITHOUT_CLASSIFICATION	1.8798188469465558E-4	TEST
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999962266129107	WITHOUT_CLASSIFICATION	3.773387089305225E-6	TEST
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9997348880161463	WITHOUT_CLASSIFICATION	2.6511198385374576E-4	TEST
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999986990797971	WITHOUT_CLASSIFICATION	1.3009202028368674E-6	TEST
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999824686333167	WITHOUT_CLASSIFICATION	1.7531366683305036E-5	TEST
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999994435149028	WITHOUT_CLASSIFICATION	5.56485097229065E-7	TEST
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999806927153491	WITHOUT_CLASSIFICATION	1.9307284650981016E-5	TEST
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999982172651648	WITHOUT_CLASSIFICATION	1.782734835190681E-6	TEST
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999963972527296	WITHOUT_CLASSIFICATION	3.6027472703226797E-6	TEST
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999981928687859	WITHOUT_CLASSIFICATION	1.8071312141052696E-6	TEST
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999991615558183	WITHOUT_CLASSIFICATION	8.384441817242808E-7	TEST
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9997985295621359	WITHOUT_CLASSIFICATION	2.0147043786410493E-4	TEST
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999827359138665	WITHOUT_CLASSIFICATION	1.7264086133423327E-5	TEST
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999875569505199	WITHOUT_CLASSIFICATION	1.2443049480120531E-5	TEST
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9998635075909409	WITHOUT_CLASSIFICATION	1.3649240905914446E-4	TEST
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999955417975855	WITHOUT_CLASSIFICATION	4.458202414434027E-6	TEST
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9998771360834983	WITHOUT_CLASSIFICATION	1.2286391650169067E-4	TEST
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999596965718909	WITHOUT_CLASSIFICATION	4.030342810920004E-5	TEST
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999818420516384	WITHOUT_CLASSIFICATION	1.815794836155306E-5	TEST
// rename is successful	WITHOUT_CLASSIFICATION	0.9999538603335829	WITHOUT_CLASSIFICATION	4.613966641720265E-5	TEST
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999886659938306	WITHOUT_CLASSIFICATION	1.1334006169455057E-5	TEST
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999788457655736	WITHOUT_CLASSIFICATION	2.115423442635909E-5	TEST
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999688398163871	WITHOUT_CLASSIFICATION	3.116018361293775E-5	TEST
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999452230440127	WITHOUT_CLASSIFICATION	5.477695598733447E-5	TEST
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999883634887384	WITHOUT_CLASSIFICATION	1.1636511261551773E-5	TEST
// 16 ?	WITHOUT_CLASSIFICATION	0.9999370776861009	WITHOUT_CLASSIFICATION	6.292231389906504E-5	TEST
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999498682940248	WITHOUT_CLASSIFICATION	5.0131705975170845E-5	TEST
// size + 1;	WITHOUT_CLASSIFICATION	0.9999946491254357	WITHOUT_CLASSIFICATION	5.35087456427827E-6	TEST
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999909096340247	WITHOUT_CLASSIFICATION	9.090365975293066E-6	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.999961277504427	WITHOUT_CLASSIFICATION	3.8722495573075245E-5	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.999961277504427	WITHOUT_CLASSIFICATION	3.8722495573075245E-5	TEST
// put implementation	WITHOUT_CLASSIFICATION	0.99998441175025	WITHOUT_CLASSIFICATION	1.5588249750000836E-5	TEST
// get implementation	WITHOUT_CLASSIFICATION	0.9999900237968132	WITHOUT_CLASSIFICATION	9.976203186866862E-6	TEST
// specialized for value	WITHOUT_CLASSIFICATION	0.9999675063145766	WITHOUT_CLASSIFICATION	3.249368542340468E-5	TEST
// delete implementation	WITHOUT_CLASSIFICATION	0.9999855054726966	WITHOUT_CLASSIFICATION	1.4494527303490457E-5	TEST
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999682517059842	WITHOUT_CLASSIFICATION	3.1748294015759406E-5	TEST
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999927011399222	WITHOUT_CLASSIFICATION	7.298860077746042E-6	TEST
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999889936141	WITHOUT_CLASSIFICATION	1.1006385900114104E-5	TEST
// update the hash value	WITHOUT_CLASSIFICATION	0.9999932075153836	WITHOUT_CLASSIFICATION	6.792484616363921E-6	TEST
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9991756583014427	WITHOUT_CLASSIFICATION	8.2434169855724E-4	TEST
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999656439502514	WITHOUT_CLASSIFICATION	3.43560497486239E-5	TEST
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999725546638641	WITHOUT_CLASSIFICATION	2.744533613593141E-5	TEST
// remain where we are	WITHOUT_CLASSIFICATION	0.9999713597125502	WITHOUT_CLASSIFICATION	2.8640287449741934E-5	TEST
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.999294599269295	WITHOUT_CLASSIFICATION	7.054007307050181E-4	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999810588534034	WITHOUT_CLASSIFICATION	1.894114659658713E-5	TEST
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999941066742276	WITHOUT_CLASSIFICATION	5.893325772313006E-6	TEST
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9973931946787009	WITHOUT_CLASSIFICATION	0.002606805321299036	TEST
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999999475239864	WITHOUT_CLASSIFICATION	5.247601360694399E-8	TEST
// first try as directory	WITHOUT_CLASSIFICATION	0.999998615105067	WITHOUT_CLASSIFICATION	1.384894932919696E-6	TEST
// next as regular file	WITHOUT_CLASSIFICATION	0.9999980862347628	WITHOUT_CLASSIFICATION	1.9137652372156624E-6	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999167372936806	WITHOUT_CLASSIFICATION	8.326270631935617E-5	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// Stream-based	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999088690892228	WITHOUT_CLASSIFICATION	9.113091077722819E-5	TEST
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.999998530082482	WITHOUT_CLASSIFICATION	1.4699175179892695E-6	TEST
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999759411147113	WITHOUT_CLASSIFICATION	2.4058885288646155E-5	TEST
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999216427128947	WITHOUT_CLASSIFICATION	7.835728710528762E-5	TEST
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999961992969483	WITHOUT_CLASSIFICATION	3.8007030518123114E-6	TEST
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999919592616252	WITHOUT_CLASSIFICATION	8.040738374853328E-6	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999260664461581	WITHOUT_CLASSIFICATION	7.3933553841845E-5	TEST
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999941649037188	WITHOUT_CLASSIFICATION	5.835096281175377E-6	TEST
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999909382685135	WITHOUT_CLASSIFICATION	9.061731486596398E-6	TEST
// re-register	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999415330774344	WITHOUT_CLASSIFICATION	5.846692256559173E-5	TEST
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999872829051892	WITHOUT_CLASSIFICATION	1.2717094810843894E-5	TEST
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999946954295084	WITHOUT_CLASSIFICATION	5.3045704916838984E-6	TEST
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999444024228485	WITHOUT_CLASSIFICATION	5.559757715134664E-5	TEST
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999744752262366	WITHOUT_CLASSIFICATION	2.5524773763363134E-5	TEST
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999952573317008	WITHOUT_CLASSIFICATION	4.742668299107664E-6	TEST
// use original modes	WITHOUT_CLASSIFICATION	0.9999823525777938	WITHOUT_CLASSIFICATION	1.7647422206178766E-5	TEST
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999936167919327	WITHOUT_CLASSIFICATION	6.38320806731784E-6	TEST
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9998871238897772	WITHOUT_CLASSIFICATION	1.128761102227654E-4	TEST
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999618181160586	WITHOUT_CLASSIFICATION	3.818188394146757E-5	TEST
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999830468733196	WITHOUT_CLASSIFICATION	1.6953126680380282E-5	TEST
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999550090923849	WITHOUT_CLASSIFICATION	4.499090761512122E-5	TEST
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999574462566758	WITHOUT_CLASSIFICATION	4.255374332412554E-5	TEST
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999834020470921	WITHOUT_CLASSIFICATION	1.6597952907890812E-5	TEST
//Everything written	WITHOUT_CLASSIFICATION	0.9999265784886552	WITHOUT_CLASSIFICATION	7.342151134472405E-5	TEST
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999861632373546	WITHOUT_CLASSIFICATION	1.3836762645375418E-5	TEST
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9998453974812338	WITHOUT_CLASSIFICATION	1.5460251876628733E-4	TEST
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9997846363174155	WITHOUT_CLASSIFICATION	2.1536368258440647E-4	TEST
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999862947155371	WITHOUT_CLASSIFICATION	1.370528446292692E-5	TEST
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.999987486939624	WITHOUT_CLASSIFICATION	1.2513060375980759E-5	TEST
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999419101790948	WITHOUT_CLASSIFICATION	5.808982090517327E-5	TEST
// hmmmm	WITHOUT_CLASSIFICATION	0.9999184955562991	WITHOUT_CLASSIFICATION	8.150444370085729E-5	TEST
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999523874554059	WITHOUT_CLASSIFICATION	4.761254459393988E-5	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999969914739291	WITHOUT_CLASSIFICATION	3.008526070887627E-6	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.999997144376642	WITHOUT_CLASSIFICATION	2.8556233581401306E-6	TEST
// Length to read	WITHOUT_CLASSIFICATION	0.999997928467198	WITHOUT_CLASSIFICATION	2.0715328019797807E-6	TEST
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999806430026641	WITHOUT_CLASSIFICATION	1.9356997335849668E-5	TEST
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999825627282597	WITHOUT_CLASSIFICATION	1.7437271740289365E-5	TEST
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999765511250266	WITHOUT_CLASSIFICATION	2.3448874973381346E-5	TEST
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999787364728159	WITHOUT_CLASSIFICATION	2.126352718411605E-5	TEST
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999785511383229	WITHOUT_CLASSIFICATION	2.1448861677051423E-5	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999910674966914	WITHOUT_CLASSIFICATION	8.932503308595905E-6	TEST
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999814330968428	WITHOUT_CLASSIFICATION	1.8566903157097376E-5	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999910674966914	WITHOUT_CLASSIFICATION	8.932503308595905E-6	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9998102764118071	WITHOUT_CLASSIFICATION	1.8972358819292504E-4	TEST
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9994699584820584	WITHOUT_CLASSIFICATION	5.300415179416108E-4	TEST
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999706433622271	WITHOUT_CLASSIFICATION	2.935663777291536E-5	TEST
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.9980509485428152	WITHOUT_CLASSIFICATION	0.001949051457184771	TEST
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999752796280174	WITHOUT_CLASSIFICATION	2.472037198260323E-5	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999875115027187	WITHOUT_CLASSIFICATION	1.2488497281251674E-5	TEST
// write	WITHOUT_CLASSIFICATION	0.9998470193897002	WITHOUT_CLASSIFICATION	1.5298061029974893E-4	TEST
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9997634043887488	WITHOUT_CLASSIFICATION	2.3659561125123076E-4	TEST
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999868028838248	WITHOUT_CLASSIFICATION	1.319711617524591E-5	TEST
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9999883420733432	WITHOUT_CLASSIFICATION	1.1657926656702476E-5	TEST
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.99999721916858	WITHOUT_CLASSIFICATION	2.780831420042751E-6	TEST
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999921137784669	WITHOUT_CLASSIFICATION	7.886221533191374E-6	TEST
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9999910608495188	WITHOUT_CLASSIFICATION	8.939150481103217E-6	TEST
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999976672827569	WITHOUT_CLASSIFICATION	2.3327172431283425E-6	TEST
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9998133580728021	WITHOUT_CLASSIFICATION	1.8664192719783438E-4	TEST
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9960874921822376	WITHOUT_CLASSIFICATION	0.003912507817762405	TEST
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999998050023711	WITHOUT_CLASSIFICATION	1.9499762888308038E-7	TEST
// The class of this object	WITHOUT_CLASSIFICATION	0.999969847018974	WITHOUT_CLASSIFICATION	3.0152981025973742E-5	TEST
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999873464736049	WITHOUT_CLASSIFICATION	1.265352639510301E-5	TEST
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9996126367327413	WITHOUT_CLASSIFICATION	3.873632672586792E-4	TEST
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9998121565897404	WITHOUT_CLASSIFICATION	1.8784341025950682E-4	TEST
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999596965718909	WITHOUT_CLASSIFICATION	4.030342810920004E-5	TEST
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999820337929397	WITHOUT_CLASSIFICATION	1.7966207060251652E-5	TEST
// for interface impls	WITHOUT_CLASSIFICATION	0.9999791284143931	WITHOUT_CLASSIFICATION	2.087158560697124E-5	TEST
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.999969572590757	WITHOUT_CLASSIFICATION	3.0427409243010646E-5	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999957163424691	WITHOUT_CLASSIFICATION	4.28365753095282E-6	TEST
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999984047725234	WITHOUT_CLASSIFICATION	1.5952274766090878E-6	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999823842297024	WITHOUT_CLASSIFICATION	1.7615770297543148E-5	TEST
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999982427084995	WITHOUT_CLASSIFICATION	1.7572915005874887E-6	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.999961331240566	WITHOUT_CLASSIFICATION	3.866875943404162E-5	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.999961331240566	WITHOUT_CLASSIFICATION	3.866875943404162E-5	TEST
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999649034927227	WITHOUT_CLASSIFICATION	3.509650727736936E-5	TEST
// Struct methods	WITHOUT_CLASSIFICATION	0.9999934842007829	WITHOUT_CLASSIFICATION	6.515799217101354E-6	TEST
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9997363588565137	WITHOUT_CLASSIFICATION	2.6364114348623283E-4	TEST
// define access methods.	WITHOUT_CLASSIFICATION	0.9999911875401554	WITHOUT_CLASSIFICATION	8.812459844701086E-6	TEST
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999775779732305	WITHOUT_CLASSIFICATION	2.2422026769586086E-5	TEST
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999782744780941	WITHOUT_CLASSIFICATION	2.172552190591529E-5	TEST
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999818458467901	WITHOUT_CLASSIFICATION	1.8154153210001936E-5	TEST
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999820337929397	WITHOUT_CLASSIFICATION	1.7966207060251652E-5	TEST
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999877525793631	WITHOUT_CLASSIFICATION	1.224742063685582E-5	TEST
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999625177150929	WITHOUT_CLASSIFICATION	3.7482284907142906E-5	TEST
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999994716195599	WITHOUT_CLASSIFICATION	5.283804400930681E-7	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999935861551312	WITHOUT_CLASSIFICATION	6.413844868715844E-6	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999935861551312	WITHOUT_CLASSIFICATION	6.413844868715844E-6	TEST
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999818023583776	WITHOUT_CLASSIFICATION	1.81976416223284E-5	TEST
// superClass may be null.	WITHOUT_CLASSIFICATION	0.999986641095177	WITHOUT_CLASSIFICATION	1.3358904823065958E-5	TEST
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999590942144723	WITHOUT_CLASSIFICATION	4.090578552775713E-5	TEST
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999344876345856	WITHOUT_CLASSIFICATION	6.551236541438861E-5	TEST
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999943487978182	WITHOUT_CLASSIFICATION	5.6512021817409365E-6	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999863438344871	WITHOUT_CLASSIFICATION	1.365616551272126E-5	TEST
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999245704125235	WITHOUT_CLASSIFICATION	7.542958747659558E-5	TEST
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999908004868729	WITHOUT_CLASSIFICATION	9.199513127058033E-6	TEST
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.999532013639829	WITHOUT_CLASSIFICATION	4.679863601708905E-4	TEST
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999913404098287	WITHOUT_CLASSIFICATION	8.659590171242786E-6	TEST
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.999911434934963	WITHOUT_CLASSIFICATION	8.856506503694247E-5	TEST
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999908352541138	WITHOUT_CLASSIFICATION	9.164745886092529E-6	TEST
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9998843586354269	WITHOUT_CLASSIFICATION	1.1564136457311738E-4	TEST
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999523421651361	WITHOUT_CLASSIFICATION	4.765783486392149E-5	TEST
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999980710303018	WITHOUT_CLASSIFICATION	1.9289696981893767E-6	TEST
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999273174082957	WITHOUT_CLASSIFICATION	7.268259170429947E-5	TEST
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999922698059869	WITHOUT_CLASSIFICATION	7.730194013040461E-6	TEST
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999949479305507	WITHOUT_CLASSIFICATION	5.052069449327406E-6	TEST
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999818513094243	WITHOUT_CLASSIFICATION	1.8148690575670368E-5	TEST
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999912815332275	WITHOUT_CLASSIFICATION	8.718466772427676E-6	TEST
//FIXME warning	WITHOUT_CLASSIFICATION	0.9999233959801398	WITHOUT_CLASSIFICATION	7.660401986018979E-5	TEST
// FIXME warning	WITHOUT_CLASSIFICATION	0.9999670117260553	WITHOUT_CLASSIFICATION	3.2988273944595486E-5	TEST
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9998644005948855	WITHOUT_CLASSIFICATION	1.355994051145335E-4	TEST
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999993725504799	WITHOUT_CLASSIFICATION	6.274495200530173E-7	TEST
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999636059902921	WITHOUT_CLASSIFICATION	3.6394009707991136E-5	TEST
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.99999897301274	WITHOUT_CLASSIFICATION	1.026987259957948E-6	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999969901323382	WITHOUT_CLASSIFICATION	3.0098676617627067E-6	TEST
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999251448859878	WITHOUT_CLASSIFICATION	7.485511401221586E-5	TEST
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999703463466253	WITHOUT_CLASSIFICATION	2.9653653374613008E-5	TEST
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999816847536164	WITHOUT_CLASSIFICATION	1.8315246383733145E-5	TEST
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999960218050682	WITHOUT_CLASSIFICATION	3.978194931812706E-6	TEST
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999625344267858	WITHOUT_CLASSIFICATION	3.7465573214128874E-5	TEST
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.999998313746878	WITHOUT_CLASSIFICATION	1.6862531221040724E-6	TEST
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999986759348667	WITHOUT_CLASSIFICATION	1.3240651333074615E-6	TEST
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999862729024652	WITHOUT_CLASSIFICATION	1.3727097534747471E-5	TEST
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999979150222116	WITHOUT_CLASSIFICATION	2.084977788354443E-6	TEST
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999620359555099	WITHOUT_CLASSIFICATION	3.796404449004498E-5	TEST
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999620359555099	WITHOUT_CLASSIFICATION	3.796404449004498E-5	TEST
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.999858345688226	WITHOUT_CLASSIFICATION	1.4165431177401438E-4	TEST
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999655431077573	WITHOUT_CLASSIFICATION	3.445689224269407E-5	TEST
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.99999360137534	WITHOUT_CLASSIFICATION	6.398624659955986E-6	TEST
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9999912232508268	WITHOUT_CLASSIFICATION	8.776749173197535E-6	TEST
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.999962378034602	WITHOUT_CLASSIFICATION	3.7621965397955395E-5	TEST
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999911167668805	WITHOUT_CLASSIFICATION	8.88323311961623E-6	TEST
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999170820461111	WITHOUT_CLASSIFICATION	8.29179538890143E-5	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999838658472704	WITHOUT_CLASSIFICATION	1.6134152729600124E-5	TEST
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999968188183647	WITHOUT_CLASSIFICATION	3.18118163545689E-6	TEST
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999966264667185	WITHOUT_CLASSIFICATION	3.3735332814750227E-6	TEST
//reopen	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999934842007829	WITHOUT_CLASSIFICATION	6.515799217101354E-6	TEST
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999494108715201	WITHOUT_CLASSIFICATION	5.0589128479948787E-5	TEST
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999788240847789	WITHOUT_CLASSIFICATION	2.1175915221072542E-5	TEST
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999978309365479	WITHOUT_CLASSIFICATION	2.169063452113933E-6	TEST
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999994518304344	WITHOUT_CLASSIFICATION	5.481695657242853E-7	TEST
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999892098012307	WITHOUT_CLASSIFICATION	1.0790198769221763E-5	TEST
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999976429198775	WITHOUT_CLASSIFICATION	2.3570801225597274E-6	TEST
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.999996282547143	WITHOUT_CLASSIFICATION	3.717452856917207E-6	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999980061705256	WITHOUT_CLASSIFICATION	1.9938294743647627E-6	TEST
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.999993260780203	WITHOUT_CLASSIFICATION	6.739219797025175E-6	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.999990065422338	WITHOUT_CLASSIFICATION	9.93457766195077E-6	TEST
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999878935644856	WITHOUT_CLASSIFICATION	1.2106435514388364E-5	TEST
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999818973287574	WITHOUT_CLASSIFICATION	1.8102671242619536E-5	TEST
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999566535464732	WITHOUT_CLASSIFICATION	4.334645352663572E-5	TEST
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999577079681858	WITHOUT_CLASSIFICATION	4.229203181413701E-5	TEST
// ignore error	WITHOUT_CLASSIFICATION	0.99999683769243	WITHOUT_CLASSIFICATION	3.162307570031014E-6	TEST
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999707860568802	WITHOUT_CLASSIFICATION	2.9213943119960695E-5	TEST
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999655431077573	WITHOUT_CLASSIFICATION	3.445689224269407E-5	TEST
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9998417611808387	WITHOUT_CLASSIFICATION	1.5823881916121572E-4	TEST
// odd	WITHOUT_CLASSIFICATION	0.9999185485374813	WITHOUT_CLASSIFICATION	8.14514625187042E-5	TEST
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999989182143565	WITHOUT_CLASSIFICATION	1.0817856434952308E-6	TEST
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999678637090823	WITHOUT_CLASSIFICATION	3.213629091771128E-5	TEST
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999868228245865	WITHOUT_CLASSIFICATION	1.3177175413512293E-5	TEST
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999981124218822	WITHOUT_CLASSIFICATION	1.8875781178568863E-6	TEST
/*  0! */	WITHOUT_CLASSIFICATION	0.9997611598981752	WITHOUT_CLASSIFICATION	2.3884010182483964E-4	TEST
/*  1! */	WITHOUT_CLASSIFICATION	0.9997611598981752	WITHOUT_CLASSIFICATION	2.3884010182483964E-4	TEST
/*  2! */	WITHOUT_CLASSIFICATION	0.9997611598981752	WITHOUT_CLASSIFICATION	2.3884010182483964E-4	TEST
/*  3! */	WITHOUT_CLASSIFICATION	0.9997611598981752	WITHOUT_CLASSIFICATION	2.3884010182483964E-4	TEST
/*  4! */	WITHOUT_CLASSIFICATION	0.9997611598981752	WITHOUT_CLASSIFICATION	2.3884010182483964E-4	TEST
/*  5! */	WITHOUT_CLASSIFICATION	0.9997611598981752	WITHOUT_CLASSIFICATION	2.3884010182483964E-4	TEST
/*  6! */	WITHOUT_CLASSIFICATION	0.9997611598981752	WITHOUT_CLASSIFICATION	2.3884010182483964E-4	TEST
/*  7! */	WITHOUT_CLASSIFICATION	0.9997611598981752	WITHOUT_CLASSIFICATION	2.3884010182483964E-4	TEST
/*  8! */	WITHOUT_CLASSIFICATION	0.9997611598981752	WITHOUT_CLASSIFICATION	2.3884010182483964E-4	TEST
/*  9! */	WITHOUT_CLASSIFICATION	0.9997611598981752	WITHOUT_CLASSIFICATION	2.3884010182483964E-4	TEST
/* 11! */	WITHOUT_CLASSIFICATION	0.9998171762689924	WITHOUT_CLASSIFICATION	1.8282373100765519E-4	TEST
/* 12! */	WITHOUT_CLASSIFICATION	0.9998171762689924	WITHOUT_CLASSIFICATION	1.8282373100765519E-4	TEST
/* 13! */	WITHOUT_CLASSIFICATION	0.9998171762689924	WITHOUT_CLASSIFICATION	1.8282373100765519E-4	TEST
/* 15! */	WITHOUT_CLASSIFICATION	0.9998171762689924	WITHOUT_CLASSIFICATION	1.8282373100765519E-4	TEST
/* 16! */	WITHOUT_CLASSIFICATION	0.9998171762689924	WITHOUT_CLASSIFICATION	1.8282373100765519E-4	TEST
/* 17! */	WITHOUT_CLASSIFICATION	0.9998171762689924	WITHOUT_CLASSIFICATION	1.8282373100765519E-4	TEST
/* 19! */	WITHOUT_CLASSIFICATION	0.9998171762689924	WITHOUT_CLASSIFICATION	1.8282373100765519E-4	TEST
/* 20! */	WITHOUT_CLASSIFICATION	0.9998171762689924	WITHOUT_CLASSIFICATION	1.8282373100765519E-4	TEST
/* 21! */	WITHOUT_CLASSIFICATION	0.9998171762689924	WITHOUT_CLASSIFICATION	1.8282373100765519E-4	TEST
// Static constants	WITHOUT_CLASSIFICATION	0.9999920874411942	WITHOUT_CLASSIFICATION	7.912558805890881E-6	TEST
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9999548885928656	WITHOUT_CLASSIFICATION	4.511140713441486E-5	TEST
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999643878666459	WITHOUT_CLASSIFICATION	3.561213335414355E-5	TEST
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999881502085898	WITHOUT_CLASSIFICATION	1.184979141030213E-5	TEST
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999949026022639	WITHOUT_CLASSIFICATION	5.09739773614814E-6	TEST
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999969713252561	WITHOUT_CLASSIFICATION	3.0286747439191128E-6	TEST
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999991463258385	WITHOUT_CLASSIFICATION	8.536741614790033E-7	TEST
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9999887791964013	WITHOUT_CLASSIFICATION	1.1220803598722863E-5	TEST
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999984381777774	WITHOUT_CLASSIFICATION	1.5618222224928086E-6	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9998256466159688	WITHOUT_CLASSIFICATION	1.743533840310762E-4	TEST
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.973664728893215	WITHOUT_CLASSIFICATION	0.026335271106784908	TEST
// integer division	WITHOUT_CLASSIFICATION	0.9999917442785451	WITHOUT_CLASSIFICATION	8.255721454960063E-6	TEST
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999969885313928	WITHOUT_CLASSIFICATION	3.011468607234302E-6	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999820344554705	WITHOUT_CLASSIFICATION	1.7965544529495752E-5	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999820344554705	WITHOUT_CLASSIFICATION	1.7965544529495752E-5	TEST
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999969713252561	WITHOUT_CLASSIFICATION	3.0286747439191128E-6	TEST
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9999056917665105	WITHOUT_CLASSIFICATION	9.430823348960527E-5	TEST
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999997368209949	WITHOUT_CLASSIFICATION	2.63179005113351E-7	TEST
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999910327712748	WITHOUT_CLASSIFICATION	8.967228725274161E-6	TEST
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999968121542846	WITHOUT_CLASSIFICATION	3.1878457154981186E-6	TEST
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999304170940779	WITHOUT_CLASSIFICATION	6.958290592213901E-5	TEST
// sign	WITHOUT_CLASSIFICATION	0.9999185339025167	WITHOUT_CLASSIFICATION	8.146609748327695E-5	TEST
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999923649872727	WITHOUT_CLASSIFICATION	7.635012727267611E-6	TEST
// normalize the value	WITHOUT_CLASSIFICATION	0.9999919685213557	WITHOUT_CLASSIFICATION	8.03147864433869E-6	TEST
// base	WITHOUT_CLASSIFICATION	0.9999262167634342	WITHOUT_CLASSIFICATION	7.378323656580803E-5	TEST
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9993375748962139	WITHOUT_CLASSIFICATION	6.624251037861678E-4	TEST
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999956584712538	WITHOUT_CLASSIFICATION	4.341528746196257E-6	TEST
// eh?!	WITHOUT_CLASSIFICATION	0.9999184955562991	WITHOUT_CLASSIFICATION	8.150444370085729E-5	TEST
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9998775008419617	WITHOUT_CLASSIFICATION	1.224991580382502E-4	TEST
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999921775417697	WITHOUT_CLASSIFICATION	7.822458230353024E-6	TEST
// the requested precision	WITHOUT_CLASSIFICATION	0.9999942583165801	WITHOUT_CLASSIFICATION	5.741683419867318E-6	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.9999952225832804	WITHOUT_CLASSIFICATION	4.7774167195642395E-6	TEST
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999872407847012	WITHOUT_CLASSIFICATION	1.2759215298726024E-5	TEST
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999854939019646	WITHOUT_CLASSIFICATION	1.4506098035373266E-5	TEST
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9998805349042766	WITHOUT_CLASSIFICATION	1.1946509572338242E-4	TEST
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999923523220801	WITHOUT_CLASSIFICATION	7.647677919860227E-6	TEST
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999913160088517	WITHOUT_CLASSIFICATION	8.683991148182264E-6	TEST
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999917466244037	WITHOUT_CLASSIFICATION	8.253375596346257E-6	TEST
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999900615910605	WITHOUT_CLASSIFICATION	9.938408939492966E-6	TEST
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999936356500525	WITHOUT_CLASSIFICATION	6.364349947529314E-6	TEST
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999614354140042	WITHOUT_CLASSIFICATION	3.856458599591288E-5	TEST
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999931861671149	WITHOUT_CLASSIFICATION	6.813832885154738E-6	TEST
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999690826820405	WITHOUT_CLASSIFICATION	3.091731795946816E-5	TEST
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999551865543467	WITHOUT_CLASSIFICATION	4.48134456533334E-5	TEST
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999758002911505	WITHOUT_CLASSIFICATION	2.419970884941181E-5	TEST
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999801995902068	WITHOUT_CLASSIFICATION	1.980040979330276E-5	TEST
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999814472521666	WITHOUT_CLASSIFICATION	1.855274783332282E-5	TEST
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999779263716211	WITHOUT_CLASSIFICATION	2.207362837888684E-5	TEST
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999796338364294	WITHOUT_CLASSIFICATION	2.036616357055576E-5	TEST
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999884685828561	WITHOUT_CLASSIFICATION	1.1531417143959847E-5	TEST
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999910674966914	WITHOUT_CLASSIFICATION	8.932503308595905E-6	TEST
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999979983669747	WITHOUT_CLASSIFICATION	2.001633025376137E-6	TEST
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999969380973853	WITHOUT_CLASSIFICATION	3.0619026145531204E-6	TEST
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9999487044936075	WITHOUT_CLASSIFICATION	5.129550639243205E-5	TEST
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999985514107635	WITHOUT_CLASSIFICATION	1.4485892364638337E-6	TEST
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999893956029844	WITHOUT_CLASSIFICATION	1.0604397015526036E-5	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999660513760531	WITHOUT_CLASSIFICATION	3.394862394683509E-5	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999660513760531	WITHOUT_CLASSIFICATION	3.394862394683509E-5	TEST
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999798847525083	WITHOUT_CLASSIFICATION	2.0115247491666754E-5	TEST
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999667029204664	WITHOUT_CLASSIFICATION	3.329707953361709E-5	TEST
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.999997906275965	WITHOUT_CLASSIFICATION	2.0937240349874317E-6	TEST
//consume the file name	WITHOUT_CLASSIFICATION	0.9999354293400109	WITHOUT_CLASSIFICATION	6.457065998910232E-5	TEST
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9994714954718499	WITHOUT_CLASSIFICATION	5.285045281501738E-4	TEST
// try cwd first	WITHOUT_CLASSIFICATION	0.9999945594067735	WITHOUT_CLASSIFICATION	5.4405932264981255E-6	TEST
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999617485873169	WITHOUT_CLASSIFICATION	3.8251412683077385E-5	TEST
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.99930666671579	WITHOUT_CLASSIFICATION	6.93333284209924E-4	TEST
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999831937264825	WITHOUT_CLASSIFICATION	1.6806273517445436E-5	TEST
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999831937264825	WITHOUT_CLASSIFICATION	1.6806273517445436E-5	TEST
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999831937264825	WITHOUT_CLASSIFICATION	1.6806273517445436E-5	TEST
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999137784784587	WITHOUT_CLASSIFICATION	8.622152154122382E-5	TEST
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9989700480989524	WITHOUT_CLASSIFICATION	0.0010299519010476058	TEST
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999929367567313	WITHOUT_CLASSIFICATION	7.063243268732513E-6	TEST
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9960874921822376	WITHOUT_CLASSIFICATION	0.003912507817762405	TEST
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9999677026372984	WITHOUT_CLASSIFICATION	3.229736270160634E-5	TEST
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9998133127513126	WITHOUT_CLASSIFICATION	1.8668724868741644E-4	TEST
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999923306951773	WITHOUT_CLASSIFICATION	7.669304822718552E-6	TEST
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999972877428169	WITHOUT_CLASSIFICATION	2.712257183043753E-6	TEST
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9989700480989524	WITHOUT_CLASSIFICATION	0.0010299519010476058	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999735072072058	WITHOUT_CLASSIFICATION	2.649279279417118E-5	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999735072072058	WITHOUT_CLASSIFICATION	2.649279279417118E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9998125839558892	WITHOUT_CLASSIFICATION	1.8741604411084267E-4	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999863142001741	WITHOUT_CLASSIFICATION	1.368579982582845E-5	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999022355880299	WITHOUT_CLASSIFICATION	9.776441197009398E-5	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999870832307545	WITHOUT_CLASSIFICATION	1.291676924560255E-5	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999951856646987	WITHOUT_CLASSIFICATION	4.814335301276466E-6	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999941870410404	WITHOUT_CLASSIFICATION	5.812958959574982E-6	TEST
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9995882606463388	WITHOUT_CLASSIFICATION	4.1173935366128125E-4	TEST
// Profile	WITHOUT_CLASSIFICATION	0.9999185160716649	WITHOUT_CLASSIFICATION	8.148392833509714E-5	TEST
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9998682762662366	WITHOUT_CLASSIFICATION	1.317237337634251E-4	TEST
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999986473215365	WITHOUT_CLASSIFICATION	1.3526784634559397E-6	TEST
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999399062019803	WITHOUT_CLASSIFICATION	6.00937980197966E-5	TEST
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.999994074361242	WITHOUT_CLASSIFICATION	5.9256387580464215E-6	TEST
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9998308460438486	WITHOUT_CLASSIFICATION	1.6915395615144026E-4	TEST
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9989262160741156	WITHOUT_CLASSIFICATION	0.0010737839258843686	TEST
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9997034554927373	WITHOUT_CLASSIFICATION	2.9654450726271343E-4	TEST
// reset the state	WITHOUT_CLASSIFICATION	0.999997777167704	WITHOUT_CLASSIFICATION	2.222832296017361E-6	TEST
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9987561577522972	WITHOUT_CLASSIFICATION	0.0012438422477028248	TEST
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
//str is frozen	WITHOUT_CLASSIFICATION	0.9997850564996018	WITHOUT_CLASSIFICATION	2.149435003981742E-4	TEST
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9998847799423657	WITHOUT_CLASSIFICATION	1.1522005763423659E-4	TEST
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.999313236858503	WITHOUT_CLASSIFICATION	6.86763141497058E-4	TEST
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999965667156551	WITHOUT_CLASSIFICATION	3.433284345051605E-6	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999957163424691	WITHOUT_CLASSIFICATION	4.28365753095282E-6	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999863438344871	WITHOUT_CLASSIFICATION	1.365616551272126E-5	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999971849525472	WITHOUT_CLASSIFICATION	2.815047452739872E-6	TEST
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999938202407406	WITHOUT_CLASSIFICATION	6.179759259358245E-6	TEST
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999981913761956	WITHOUT_CLASSIFICATION	1.8086238044198398E-6	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9996760114874316	WITHOUT_CLASSIFICATION	3.2398851256850716E-4	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999907868217806	WITHOUT_CLASSIFICATION	9.213178219455147E-6	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999907868217806	WITHOUT_CLASSIFICATION	9.213178219455147E-6	TEST
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.999997650162056	WITHOUT_CLASSIFICATION	2.34983794406671E-6	TEST
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.999986200612038	WITHOUT_CLASSIFICATION	1.3799387962034461E-5	TEST
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999588430027433	WITHOUT_CLASSIFICATION	4.115699725659912E-5	TEST
// update all subclasses	WITHOUT_CLASSIFICATION	0.999991121530553	WITHOUT_CLASSIFICATION	8.878469447029722E-6	TEST
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999981138348285	WITHOUT_CLASSIFICATION	1.88616517150107E-6	TEST
// static initializing method	WITHOUT_CLASSIFICATION	0.9999953649519929	WITHOUT_CLASSIFICATION	4.6350480069964804E-6	TEST
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999433521441067	WITHOUT_CLASSIFICATION	5.664785589329884E-5	TEST
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999988589701226	WITHOUT_CLASSIFICATION	1.141029877360054E-6	TEST
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999491258624683	WITHOUT_CLASSIFICATION	5.0874137531652334E-5	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999841996356982	WITHOUT_CLASSIFICATION	1.580036430188522E-5	TEST
// self // method name	WITHOUT_CLASSIFICATION	0.9999878470761568	WITHOUT_CLASSIFICATION	1.2152923843163838E-5	TEST
// the default allocator	WITHOUT_CLASSIFICATION	0.999996916695381	WITHOUT_CLASSIFICATION	3.083304618885203E-6	TEST
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999888768668836	WITHOUT_CLASSIFICATION	1.1123133116398584E-5	TEST
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999848007930776	WITHOUT_CLASSIFICATION	1.5199206922355652E-5	TEST
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999902922173394	WITHOUT_CLASSIFICATION	9.70778266064006E-6	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999884706035739	WITHOUT_CLASSIFICATION	1.152939642617366E-5	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999603600301442	WITHOUT_CLASSIFICATION	3.96399698557793E-5	TEST
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999955468214399	WITHOUT_CLASSIFICATION	4.453178560114574E-6	TEST
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.999998609572657	WITHOUT_CLASSIFICATION	1.39042734304202E-6	TEST
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9998832412210199	WITHOUT_CLASSIFICATION	1.1675877898009837E-4	TEST
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999436198659648	WITHOUT_CLASSIFICATION	5.6380134035265714E-5	TEST
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999744773736394	WITHOUT_CLASSIFICATION	2.55226263605462E-5	TEST
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999820337929397	WITHOUT_CLASSIFICATION	1.7966207060251652E-5	TEST
// a gotcha	WITHOUT_CLASSIFICATION	0.9999946184548723	WITHOUT_CLASSIFICATION	5.381545127738228E-6	TEST
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999994764778724	WITHOUT_CLASSIFICATION	5.235221275314802E-7	TEST
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999725466088166	WITHOUT_CLASSIFICATION	2.7453391183404096E-5	TEST
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999888768668836	WITHOUT_CLASSIFICATION	1.1123133116398584E-5	TEST
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.999981718834185	WITHOUT_CLASSIFICATION	1.828116581498573E-5	TEST
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999902922173394	WITHOUT_CLASSIFICATION	9.70778266064006E-6	TEST
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999640295012504	WITHOUT_CLASSIFICATION	3.5970498749627836E-5	TEST
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999904598355976	WITHOUT_CLASSIFICATION	9.540164402325214E-6	TEST
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999820337929397	WITHOUT_CLASSIFICATION	1.7966207060251652E-5	TEST
// provider is not available	WITHOUT_CLASSIFICATION	0.9999056980626527	WITHOUT_CLASSIFICATION	9.430193734720551E-5	TEST
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999192955552032	WITHOUT_CLASSIFICATION	8.070444479682969E-5	TEST
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.999991140776152	WITHOUT_CLASSIFICATION	8.859223847965777E-6	TEST
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999613295271639	WITHOUT_CLASSIFICATION	3.867047283614344E-5	TEST
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999800738264554	WITHOUT_CLASSIFICATION	1.9926173544593154E-5	TEST
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999239275112621	WITHOUT_CLASSIFICATION	7.607248873782507E-5	TEST
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999992804467918	WITHOUT_CLASSIFICATION	7.195532082049203E-7	TEST
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999992206547291	WITHOUT_CLASSIFICATION	7.793452708890623E-7	TEST
// JRubyService	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// while	WITHOUT_CLASSIFICATION	0.9999229451623837	WITHOUT_CLASSIFICATION	7.705483761624642E-5	TEST
/* \OOO */	WITHOUT_CLASSIFICATION	0.9998171762689924	WITHOUT_CLASSIFICATION	1.8282373100765519E-4	TEST
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999995231646308	WITHOUT_CLASSIFICATION	4.7683536914503746E-7	TEST
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999848028201872	WITHOUT_CLASSIFICATION	1.5197179812810673E-5	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999850432617755	WITHOUT_CLASSIFICATION	1.4956738224511796E-5	TEST
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999661459916864	WITHOUT_CLASSIFICATION	3.385400831362778E-5	TEST
// silent ?	WITHOUT_CLASSIFICATION	0.999993588152437	WITHOUT_CLASSIFICATION	6.41184756306396E-6	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9998171762689924	WITHOUT_CLASSIFICATION	1.8282373100765519E-4	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999596965718909	WITHOUT_CLASSIFICATION	4.030342810920004E-5	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999814330968428	WITHOUT_CLASSIFICATION	1.8566903157097376E-5	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999814330968428	WITHOUT_CLASSIFICATION	1.8566903157097376E-5	TEST
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999566870691274	WITHOUT_CLASSIFICATION	4.331293087250044E-5	TEST
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999663614608673	WITHOUT_CLASSIFICATION	3.36385391327446E-5	TEST
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999814330968428	WITHOUT_CLASSIFICATION	1.8566903157097376E-5	TEST
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.999980703387972	WITHOUT_CLASSIFICATION	1.9296612028103537E-5	TEST
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999814330968428	WITHOUT_CLASSIFICATION	1.8566903157097376E-5	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9998171762689924	WITHOUT_CLASSIFICATION	1.8282373100765519E-4	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999814330968428	WITHOUT_CLASSIFICATION	1.8566903157097376E-5	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999596965718909	WITHOUT_CLASSIFICATION	4.030342810920004E-5	TEST
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999131364212077	WITHOUT_CLASSIFICATION	8.686357879223107E-5	TEST
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999814330968428	WITHOUT_CLASSIFICATION	1.8566903157097376E-5	TEST
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999814330968428	WITHOUT_CLASSIFICATION	1.8566903157097376E-5	TEST
// inner switch	WITHOUT_CLASSIFICATION	0.9999950833281593	WITHOUT_CLASSIFICATION	4.916671840648276E-6	TEST
// newInstance here	WITHOUT_CLASSIFICATION	0.9999811124260413	WITHOUT_CLASSIFICATION	1.8887573958728957E-5	TEST
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999820337929397	WITHOUT_CLASSIFICATION	1.7966207060251652E-5	TEST
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999820337929397	WITHOUT_CLASSIFICATION	1.7966207060251652E-5	TEST
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999819278589535	WITHOUT_CLASSIFICATION	1.8072141046613305E-5	TEST
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// option_to_str	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999944573569732	WITHOUT_CLASSIFICATION	5.542643026839754E-6	TEST
// args should be before block	WITHOUT_CLASSIFICATION	0.9999589675888689	WITHOUT_CLASSIFICATION	4.1032411131159685E-5	TEST
// args should be at end	WITHOUT_CLASSIFICATION	0.999958880040297	WITHOUT_CLASSIFICATION	4.111995970295212E-5	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9998570567412737	WITHOUT_CLASSIFICATION	1.4294325872633482E-4	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9998570567412737	WITHOUT_CLASSIFICATION	1.4294325872633482E-4	TEST
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999871032963062	WITHOUT_CLASSIFICATION	1.289670369373316E-5	TEST
// start a new populator	WITHOUT_CLASSIFICATION	0.9999789883544459	WITHOUT_CLASSIFICATION	2.101164555415196E-5	TEST
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999771773393947	WITHOUT_CLASSIFICATION	2.2822660605257704E-5	TEST
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9996811539649306	WITHOUT_CLASSIFICATION	3.188460350694041E-4	TEST
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999857677999711	WITHOUT_CLASSIFICATION	1.4232200028864224E-5	TEST
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9998981165859974	WITHOUT_CLASSIFICATION	1.0188341400258134E-4	TEST
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999792748038537	WITHOUT_CLASSIFICATION	2.0725196146317696E-5	TEST
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999620037041684	WITHOUT_CLASSIFICATION	3.79962958316146E-5	TEST
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999863096698294	WITHOUT_CLASSIFICATION	1.3690330170634554E-5	TEST
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999971120045335	WITHOUT_CLASSIFICATION	2.887995466686032E-6	TEST
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.999978043242611	WITHOUT_CLASSIFICATION	2.1956757389058718E-5	TEST
//                }	WITHOUT_CLASSIFICATION	0.9999899228629013	WITHOUT_CLASSIFICATION	1.0077137098586578E-5	TEST
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999551510435083	WITHOUT_CLASSIFICATION	4.484895649168644E-5	TEST
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9996817484456425	WITHOUT_CLASSIFICATION	3.182515543575126E-4	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999302116324355	WITHOUT_CLASSIFICATION	6.978836756461446E-5	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999843673822238	WITHOUT_CLASSIFICATION	1.563261777609223E-5	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999970708829089	WITHOUT_CLASSIFICATION	2.9291170911283E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999962536431053	WITHOUT_CLASSIFICATION	3.7463568946350354E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999962536431053	WITHOUT_CLASSIFICATION	3.7463568946350354E-6	TEST
// colon3	WITHOUT_CLASSIFICATION	0.9999184955562991	WITHOUT_CLASSIFICATION	8.150444370085729E-5	TEST
// Colon3	WITHOUT_CLASSIFICATION	0.9999184955562991	WITHOUT_CLASSIFICATION	8.150444370085729E-5	TEST
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999010123827765	WITHOUT_CLASSIFICATION	9.898761722355478E-5	TEST
// For b.foo	WITHOUT_CLASSIFICATION	0.9999873269111317	WITHOUT_CLASSIFICATION	1.2673088868336078E-5	TEST
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999818478102767	WITHOUT_CLASSIFICATION	1.815218972332605E-5	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999962536431053	WITHOUT_CLASSIFICATION	3.7463568946350354E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999962536431053	WITHOUT_CLASSIFICATION	3.7463568946350354E-6	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999689877745583	WITHOUT_CLASSIFICATION	3.101222544163404E-5	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999689877745583	WITHOUT_CLASSIFICATION	3.101222544163404E-5	TEST
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.999832494965536	WITHOUT_CLASSIFICATION	1.6750503446406455E-4	TEST
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999873269111317	WITHOUT_CLASSIFICATION	1.2673088868336078E-5	TEST
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.999996249547487	WITHOUT_CLASSIFICATION	3.750452513083489E-6	TEST
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999868465578357	WITHOUT_CLASSIFICATION	1.315344216429831E-5	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999875729438789	WITHOUT_CLASSIFICATION	1.2427056121104168E-5	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999875729438789	WITHOUT_CLASSIFICATION	1.2427056121104168E-5	TEST
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999938441571455	WITHOUT_CLASSIFICATION	6.155842854416794E-6	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999917174616356	WITHOUT_CLASSIFICATION	8.282538364393705E-5	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999642405361492	WITHOUT_CLASSIFICATION	3.575946385077923E-5	TEST
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9999240411385877	WITHOUT_CLASSIFICATION	7.595886141232524E-5	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999689877745583	WITHOUT_CLASSIFICATION	3.101222544163404E-5	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999873583938728	WITHOUT_CLASSIFICATION	1.2641606127320805E-5	TEST
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.999794351326969	WITHOUT_CLASSIFICATION	2.0564867303087472E-4	TEST
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999878283372596	WITHOUT_CLASSIFICATION	1.2171662740290204E-5	TEST
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999923307182241	WITHOUT_CLASSIFICATION	7.669281775794306E-6	TEST
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999978806986936	WITHOUT_CLASSIFICATION	2.1193013064437026E-6	TEST
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999186294641395	WITHOUT_CLASSIFICATION	8.13705358605502E-5	TEST
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999494108715201	WITHOUT_CLASSIFICATION	5.0589128479948787E-5	TEST
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999937161882656	WITHOUT_CLASSIFICATION	6.283811734449503E-6	TEST
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999943146912973	WITHOUT_CLASSIFICATION	5.685308702714597E-6	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999843673822238	WITHOUT_CLASSIFICATION	1.563261777609223E-5	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999962536431053	WITHOUT_CLASSIFICATION	3.7463568946350354E-6	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999689877745583	WITHOUT_CLASSIFICATION	3.101222544163404E-5	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999873583938728	WITHOUT_CLASSIFICATION	1.2641606127320805E-5	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999985718386135	WITHOUT_CLASSIFICATION	1.4281613865825777E-6	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999985718386135	WITHOUT_CLASSIFICATION	1.4281613865825777E-6	TEST
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999900709134509	WITHOUT_CLASSIFICATION	9.929086549089999E-6	TEST
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999961513656509	WITHOUT_CLASSIFICATION	3.8486343490530775E-6	TEST
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999958024689156	WITHOUT_CLASSIFICATION	4.197531084449727E-6	TEST
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999992745325701	WITHOUT_CLASSIFICATION	7.254674300317249E-7	TEST
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9998733174827609	WITHOUT_CLASSIFICATION	1.2668251723917524E-4	TEST
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999993361233118	WITHOUT_CLASSIFICATION	6.638766882290555E-7	TEST
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999456404191713	WITHOUT_CLASSIFICATION	5.43595808286501E-5	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9997814499338997	WITHOUT_CLASSIFICATION	2.1855006610036257E-4	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999995177231099	WITHOUT_CLASSIFICATION	4.822768900768563E-7	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999625977140628	WITHOUT_CLASSIFICATION	3.7402285937301755E-5	TEST
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999687771072425	WITHOUT_CLASSIFICATION	3.1222892757515246E-5	TEST
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999995421329883	WITHOUT_CLASSIFICATION	4.5786701175934303E-7	TEST
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999848411527156	WITHOUT_CLASSIFICATION	1.515884728443093E-5	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999970708829089	WITHOUT_CLASSIFICATION	2.9291170911283E-6	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999689877745583	WITHOUT_CLASSIFICATION	3.101222544163404E-5	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999917174616356	WITHOUT_CLASSIFICATION	8.282538364393705E-5	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999642405361492	WITHOUT_CLASSIFICATION	3.575946385077923E-5	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999642405361492	WITHOUT_CLASSIFICATION	3.575946385077923E-5	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999689877745583	WITHOUT_CLASSIFICATION	3.101222544163404E-5	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999873583938728	WITHOUT_CLASSIFICATION	1.2641606127320805E-5	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999873583938728	WITHOUT_CLASSIFICATION	1.2641606127320805E-5	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999985718386135	WITHOUT_CLASSIFICATION	1.4281613865825777E-6	TEST
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999919880832036	WITHOUT_CLASSIFICATION	8.011916796456723E-6	TEST
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9993199770465632	WITHOUT_CLASSIFICATION	6.80022953436814E-4	TEST
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999988715745224	WITHOUT_CLASSIFICATION	1.1284254775792997E-6	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9998823574996891	WITHOUT_CLASSIFICATION	1.1764250031088144E-4	TEST
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999409482025358	WITHOUT_CLASSIFICATION	5.905179746410822E-5	TEST
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9988974375285685	WITHOUT_CLASSIFICATION	0.0011025624714314428	TEST
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999692901744394	WITHOUT_CLASSIFICATION	3.070982556060795E-5	TEST
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999917634226705	WITHOUT_CLASSIFICATION	8.236577329436575E-6	TEST
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999861546787414	WITHOUT_CLASSIFICATION	1.384532125857456E-5	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999917174616356	WITHOUT_CLASSIFICATION	8.282538364393705E-5	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999642405361492	WITHOUT_CLASSIFICATION	3.575946385077923E-5	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999642405361492	WITHOUT_CLASSIFICATION	3.575946385077923E-5	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999689877745583	WITHOUT_CLASSIFICATION	3.101222544163404E-5	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9997814499338997	WITHOUT_CLASSIFICATION	2.1855006610036257E-4	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999625977140628	WITHOUT_CLASSIFICATION	3.7402285937301755E-5	TEST
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9986357827209145	WITHOUT_CLASSIFICATION	0.0013642172790855301	TEST
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.999997831235689	WITHOUT_CLASSIFICATION	2.1687643109754747E-6	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999873269111317	WITHOUT_CLASSIFICATION	1.2673088868336078E-5	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999873269111317	WITHOUT_CLASSIFICATION	1.2673088868336078E-5	TEST
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999820337929397	WITHOUT_CLASSIFICATION	1.7966207060251652E-5	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999792586465565	WITHOUT_CLASSIFICATION	2.0741353443582734E-5	TEST
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999500769275833	WITHOUT_CLASSIFICATION	4.992307241663761E-5	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999828679587855	WITHOUT_CLASSIFICATION	1.7132041214442362E-5	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.999997896193869	WITHOUT_CLASSIFICATION	2.1038061309354993E-6	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.999997896193869	WITHOUT_CLASSIFICATION	2.1038061309354993E-6	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999741263258746	WITHOUT_CLASSIFICATION	2.587367412550791E-5	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999741263258746	WITHOUT_CLASSIFICATION	2.587367412550791E-5	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999935369378455	WITHOUT_CLASSIFICATION	6.4630621544794475E-6	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999935369378455	WITHOUT_CLASSIFICATION	6.4630621544794475E-6	TEST
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999830308655767	WITHOUT_CLASSIFICATION	1.6969134423290502E-5	TEST
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999792246779312	WITHOUT_CLASSIFICATION	2.0775322068735207E-5	TEST
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9998801546049997	WITHOUT_CLASSIFICATION	1.198453950003321E-4	TEST
// only a marker interface	WITHOUT_CLASSIFICATION	0.999988654698663	WITHOUT_CLASSIFICATION	1.1345301336928904E-5	TEST
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999997309686119	WITHOUT_CLASSIFICATION	2.690313880786051E-7	TEST
// pragmas	WITHOUT_CLASSIFICATION	0.9999184955562991	WITHOUT_CLASSIFICATION	8.150444370085729E-5	TEST
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999940894414492	WITHOUT_CLASSIFICATION	5.910558550908972E-6	TEST
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999980409779735	WITHOUT_CLASSIFICATION	1.959022026495653E-6	TEST
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9997744677094651	WITHOUT_CLASSIFICATION	2.2553229053494644E-4	TEST
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9997127249862564	WITHOUT_CLASSIFICATION	2.872750137435477E-4	TEST
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999982091757598	WITHOUT_CLASSIFICATION	1.7908242402159652E-6	TEST
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999894595707647	WITHOUT_CLASSIFICATION	1.0540429235279968E-5	TEST
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.99987199446686	WITHOUT_CLASSIFICATION	1.280055331399492E-4	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.999986115495718	WITHOUT_CLASSIFICATION	1.388450428202381E-5	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.999986115495718	WITHOUT_CLASSIFICATION	1.388450428202381E-5	TEST
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9998605556146937	WITHOUT_CLASSIFICATION	1.3944438530639973E-4	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999941870410404	WITHOUT_CLASSIFICATION	5.812958959574982E-6	TEST
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9998995518961133	WITHOUT_CLASSIFICATION	1.0044810388665608E-4	TEST
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999971578782332	WITHOUT_CLASSIFICATION	2.842121766754331E-6	TEST
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999894806998016	WITHOUT_CLASSIFICATION	1.0519300198373554E-5	TEST
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999729178693761	WITHOUT_CLASSIFICATION	2.7082130623874492E-5	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999860954137728	WITHOUT_CLASSIFICATION	1.3904586227209943E-5	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999915223113045	WITHOUT_CLASSIFICATION	8.477688695548486E-6	TEST
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999995506488343	WITHOUT_CLASSIFICATION	4.4935116574821975E-7	TEST
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999708504960402	WITHOUT_CLASSIFICATION	2.914950395989123E-5	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999893428984431	WITHOUT_CLASSIFICATION	1.0657101556943361E-5	TEST
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9996962492890248	WITHOUT_CLASSIFICATION	3.0375071097526074E-4	TEST
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9998618181587222	WITHOUT_CLASSIFICATION	1.381818412777711E-4	TEST
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999807686985551	WITHOUT_CLASSIFICATION	1.9231301444951418E-5	TEST
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9998938046616181	WITHOUT_CLASSIFICATION	1.0619533838184541E-4	TEST
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9998247767541786	WITHOUT_CLASSIFICATION	1.7522324582139182E-4	TEST
// can't do it	WITHOUT_CLASSIFICATION	0.9999771791534489	WITHOUT_CLASSIFICATION	2.2820846551160096E-5	TEST
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999812767948567	WITHOUT_CLASSIFICATION	1.8723205143380978E-5	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999913234018705	WITHOUT_CLASSIFICATION	8.676598129541474E-6	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999913234018705	WITHOUT_CLASSIFICATION	8.676598129541474E-6	TEST
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999680324766833	WITHOUT_CLASSIFICATION	3.196752331668043E-5	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9996126367327413	WITHOUT_CLASSIFICATION	3.873632672586792E-4	TEST
//[]	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
//[]	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999494108715201	WITHOUT_CLASSIFICATION	5.0589128479948787E-5	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9996126367327413	WITHOUT_CLASSIFICATION	3.873632672586792E-4	TEST
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9996126367327413	WITHOUT_CLASSIFICATION	3.873632672586792E-4	TEST
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999971643558744	WITHOUT_CLASSIFICATION	2.8356441257165377E-6	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999966321175385	WITHOUT_CLASSIFICATION	3.3678824614276587E-6	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999966321175385	WITHOUT_CLASSIFICATION	3.3678824614276587E-6	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999970211070284	WITHOUT_CLASSIFICATION	2.9788929716542262E-6	TEST
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999956389206662	WITHOUT_CLASSIFICATION	4.361079333755385E-6	TEST
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999475842218609	WITHOUT_CLASSIFICATION	5.241577813901118E-5	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9996126367327413	WITHOUT_CLASSIFICATION	3.873632672586792E-4	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9996126367327413	WITHOUT_CLASSIFICATION	3.873632672586792E-4	TEST
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9996126367327413	WITHOUT_CLASSIFICATION	3.873632672586792E-4	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9996126367327413	WITHOUT_CLASSIFICATION	3.873632672586792E-4	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999462103826724	WITHOUT_CLASSIFICATION	5.3789617327619344E-5	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999970286420644	WITHOUT_CLASSIFICATION	2.9713579356905195E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999970286420644	WITHOUT_CLASSIFICATION	2.9713579356905195E-6	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999775464449413	WITHOUT_CLASSIFICATION	2.2453555058693063E-5	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999775464449413	WITHOUT_CLASSIFICATION	2.2453555058693063E-5	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999775464449413	WITHOUT_CLASSIFICATION	2.2453555058693063E-5	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999970286420644	WITHOUT_CLASSIFICATION	2.9713579356905195E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999970286420644	WITHOUT_CLASSIFICATION	2.9713579356905195E-6	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999462103826724	WITHOUT_CLASSIFICATION	5.3789617327619344E-5	TEST
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999738469837673	WITHOUT_CLASSIFICATION	2.6153016232576215E-5	TEST
// always false or nil	WITHOUT_CLASSIFICATION	0.9999839736441871	WITHOUT_CLASSIFICATION	1.6026355812969195E-5	TEST
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.99994880022737	WITHOUT_CLASSIFICATION	5.119977263003565E-5	TEST
// normal	WITHOUT_CLASSIFICATION	0.9999200636912633	WITHOUT_CLASSIFICATION	7.993630873670686E-5	TEST
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999995046957484	WITHOUT_CLASSIFICATION	4.953042515909937E-7	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999483676180508	WITHOUT_CLASSIFICATION	5.163238194914449E-5	TEST
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999938650964413	WITHOUT_CLASSIFICATION	6.134903558674759E-6	TEST
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999654616183101	WITHOUT_CLASSIFICATION	3.4538381689887643E-5	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999893428984431	WITHOUT_CLASSIFICATION	1.0657101556943361E-5	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999970286420644	WITHOUT_CLASSIFICATION	2.9713579356905195E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999970286420644	WITHOUT_CLASSIFICATION	2.9713579356905195E-6	TEST
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999921982806195	WITHOUT_CLASSIFICATION	7.801719380638159E-6	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999919757414008	WITHOUT_CLASSIFICATION	8.024258599280039E-6	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999945680827593	WITHOUT_CLASSIFICATION	5.431917240662261E-6	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999838504727385	WITHOUT_CLASSIFICATION	1.6149527261474828E-5	TEST
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999901746612913	WITHOUT_CLASSIFICATION	9.825338708603064E-6	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999965640443307	WITHOUT_CLASSIFICATION	3.435955669242886E-6	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999886135362023	WITHOUT_CLASSIFICATION	1.1386463797682425E-5	TEST
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999994461201618	WITHOUT_CLASSIFICATION	5.538798381949814E-7	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999880115758369	WITHOUT_CLASSIFICATION	1.1988424163039329E-5	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999850022106301	WITHOUT_CLASSIFICATION	1.4997789369813782E-5	TEST
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9998318440525487	WITHOUT_CLASSIFICATION	1.6815594745138335E-4	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.9999462572379867	WITHOUT_CLASSIFICATION	5.3742762013409717E-5	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999522699439976	WITHOUT_CLASSIFICATION	4.773005600241242E-5	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.999988359143283	WITHOUT_CLASSIFICATION	1.1640856716950776E-5	TEST
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999996333838124	WITHOUT_CLASSIFICATION	3.6661618760250414E-7	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999184955562991	WITHOUT_CLASSIFICATION	8.150444370085729E-5	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999184955562991	WITHOUT_CLASSIFICATION	8.150444370085729E-5	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999184955562991	WITHOUT_CLASSIFICATION	8.150444370085729E-5	TEST
// compile into array	WITHOUT_CLASSIFICATION	0.999987549536953	WITHOUT_CLASSIFICATION	1.2450463047016687E-5	TEST
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.999998947222606	WITHOUT_CLASSIFICATION	1.0527773940939566E-6	TEST
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999956493700385	WITHOUT_CLASSIFICATION	4.350629961526507E-6	TEST
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.999935058596271	WITHOUT_CLASSIFICATION	6.494140372905412E-5	TEST
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999899808268186	WITHOUT_CLASSIFICATION	1.001917318137642E-5	TEST
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999903138316794	WITHOUT_CLASSIFICATION	9.686168320632158E-6	TEST
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999989537565765	WITHOUT_CLASSIFICATION	1.046243423435914E-6	TEST
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999163647527387	WITHOUT_CLASSIFICATION	8.363524726126285E-5	TEST
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999749341367024	WITHOUT_CLASSIFICATION	2.5065863297730633E-5	TEST
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999971454606457	WITHOUT_CLASSIFICATION	2.8545393542738692E-6	TEST
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999956745267679	WITHOUT_CLASSIFICATION	4.325473232154463E-6	TEST
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999727288874939	WITHOUT_CLASSIFICATION	2.7271112506138063E-5	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999970211070284	WITHOUT_CLASSIFICATION	2.9788929716542262E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999970286420644	WITHOUT_CLASSIFICATION	2.9713579356905195E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999970286420644	WITHOUT_CLASSIFICATION	2.9713579356905195E-6	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999462103826724	WITHOUT_CLASSIFICATION	5.3789617327619344E-5	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999483676180508	WITHOUT_CLASSIFICATION	5.163238194914449E-5	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999919757414008	WITHOUT_CLASSIFICATION	8.024258599280039E-6	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999838504727385	WITHOUT_CLASSIFICATION	1.6149527261474828E-5	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999965640443307	WITHOUT_CLASSIFICATION	3.435955669242886E-6	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999945680827593	WITHOUT_CLASSIFICATION	5.431917240662261E-6	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999886135362023	WITHOUT_CLASSIFICATION	1.1386463797682425E-5	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999850022106301	WITHOUT_CLASSIFICATION	1.4997789369813782E-5	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999880115758369	WITHOUT_CLASSIFICATION	1.1988424163039329E-5	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.9999462572379867	WITHOUT_CLASSIFICATION	5.3742762013409717E-5	TEST
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999970373307404	WITHOUT_CLASSIFICATION	2.962669259680227E-6	TEST
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999980889329455	WITHOUT_CLASSIFICATION	1.91106705447848E-6	TEST
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999932502241895	WITHOUT_CLASSIFICATION	6.749775810509219E-6	TEST
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999929340723448	WITHOUT_CLASSIFICATION	7.065927655212869E-6	TEST
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.999968975302169	WITHOUT_CLASSIFICATION	3.1024697831032684E-5	TEST
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999940174191608	WITHOUT_CLASSIFICATION	5.982580839204821E-6	TEST
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.999992305139268	WITHOUT_CLASSIFICATION	7.694860731945599E-6	TEST
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999141244461216	WITHOUT_CLASSIFICATION	8.587555387842744E-5	TEST
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999861138408007	WITHOUT_CLASSIFICATION	1.3886159199397499E-5	TEST
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999994774793324	WITHOUT_CLASSIFICATION	5.225206675725633E-7	TEST
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.999989795936164	WITHOUT_CLASSIFICATION	1.0204063835910048E-5	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.999989070176731	WITHOUT_CLASSIFICATION	1.0929823269036276E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999960833111171	WITHOUT_CLASSIFICATION	3.916688882902203E-5	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999974405731153	WITHOUT_CLASSIFICATION	2.5594268845814743E-6	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999888937991624	WITHOUT_CLASSIFICATION	1.110620083744479E-5	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999904010554924	WITHOUT_CLASSIFICATION	9.598944507666494E-6	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999839736832723	WITHOUT_CLASSIFICATION	1.602631672774419E-5	TEST
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999951421842178	WITHOUT_CLASSIFICATION	4.857815782219718E-6	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999970774328643	WITHOUT_CLASSIFICATION	2.9225671358649507E-6	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999957817636606	WITHOUT_CLASSIFICATION	4.218236339457869E-6	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999960930079753	WITHOUT_CLASSIFICATION	3.906992024637453E-6	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.999998591235719	WITHOUT_CLASSIFICATION	1.4087642810683518E-6	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.999998591235719	WITHOUT_CLASSIFICATION	1.4087642810683518E-6	TEST
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.999688242610603	WITHOUT_CLASSIFICATION	3.117573893970675E-4	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999920083705959	WITHOUT_CLASSIFICATION	7.991629404123264E-6	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
/*arg2*/	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999920083705959	WITHOUT_CLASSIFICATION	7.991629404123264E-6	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.99998087758457	WITHOUT_CLASSIFICATION	1.912241542998305E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999980153211335	WITHOUT_CLASSIFICATION	1.9846788664499045E-6	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999980153211335	WITHOUT_CLASSIFICATION	1.9846788664499045E-6	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999940283310097	WITHOUT_CLASSIFICATION	5.971668990336678E-6	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999940283310097	WITHOUT_CLASSIFICATION	5.971668990336678E-6	TEST
// invoke	WITHOUT_CLASSIFICATION	0.999918778753518	WITHOUT_CLASSIFICATION	8.122124648206578E-5	TEST
// invoke	WITHOUT_CLASSIFICATION	0.999918778753518	WITHOUT_CLASSIFICATION	8.122124648206578E-5	TEST
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999394597938281	WITHOUT_CLASSIFICATION	6.054020617186589E-5	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999367888844294	WITHOUT_CLASSIFICATION	6.321111557064694E-5	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999367888844294	WITHOUT_CLASSIFICATION	6.321111557064694E-5	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999885954901226	WITHOUT_CLASSIFICATION	1.140450987744826E-5	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999885954901226	WITHOUT_CLASSIFICATION	1.140450987744826E-5	TEST
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999682297561647	WITHOUT_CLASSIFICATION	3.1770243835304706E-5	TEST
// call site	WITHOUT_CLASSIFICATION	0.999995474532301	WITHOUT_CLASSIFICATION	4.525467699046075E-6	TEST
// call site	WITHOUT_CLASSIFICATION	0.999995474532301	WITHOUT_CLASSIFICATION	4.525467699046075E-6	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999932551113873	WITHOUT_CLASSIFICATION	6.744888612686255E-6	TEST
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999081368612402	WITHOUT_CLASSIFICATION	9.186313875983351E-5	TEST
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999904678750764	WITHOUT_CLASSIFICATION	9.53212492358668E-6	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999932551113873	WITHOUT_CLASSIFICATION	6.744888612686255E-6	TEST
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999481921617246	WITHOUT_CLASSIFICATION	5.180783827540416E-5	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999898158257552	WITHOUT_CLASSIFICATION	1.0184174244844838E-5	TEST
// args	WITHOUT_CLASSIFICATION	0.9999197811993872	WITHOUT_CLASSIFICATION	8.021880061287405E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999206746941464	WITHOUT_CLASSIFICATION	7.932530585364482E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999206746941464	WITHOUT_CLASSIFICATION	7.932530585364482E-5	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999956832390615	WITHOUT_CLASSIFICATION	4.316760938584766E-6	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999491812475945	WITHOUT_CLASSIFICATION	5.0818752405517394E-5	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.9999491812475945	WITHOUT_CLASSIFICATION	5.0818752405517394E-5	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.999905294786538	WITHOUT_CLASSIFICATION	9.470521346204761E-5	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.999961277504427	WITHOUT_CLASSIFICATION	3.8722495573075245E-5	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999796167146605	WITHOUT_CLASSIFICATION	2.0383285339531487E-5	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999796167146605	WITHOUT_CLASSIFICATION	2.0383285339531487E-5	TEST
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999977351194453	WITHOUT_CLASSIFICATION	2.2648805545870295E-6	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// args	WITHOUT_CLASSIFICATION	0.9999197811993872	WITHOUT_CLASSIFICATION	8.021880061287405E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999206746941464	WITHOUT_CLASSIFICATION	7.932530585364482E-5	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999956832390615	WITHOUT_CLASSIFICATION	4.316760938584766E-6	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999491812475945	WITHOUT_CLASSIFICATION	5.0818752405517394E-5	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.9999491812475945	WITHOUT_CLASSIFICATION	5.0818752405517394E-5	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.999905294786538	WITHOUT_CLASSIFICATION	9.470521346204761E-5	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999827897051471	WITHOUT_CLASSIFICATION	1.721029485288694E-5	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999978257448017	WITHOUT_CLASSIFICATION	2.1742551983121215E-6	TEST
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999905686358417	WITHOUT_CLASSIFICATION	9.431364158238224E-6	TEST
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999880381158238	WITHOUT_CLASSIFICATION	1.1961884176083279E-5	TEST
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999722240852935	WITHOUT_CLASSIFICATION	2.7775914706461956E-5	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999405301883125	WITHOUT_CLASSIFICATION	5.946981168758256E-5	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999432835137543	WITHOUT_CLASSIFICATION	5.671648624563317E-5	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999432835137543	WITHOUT_CLASSIFICATION	5.671648624563317E-5	TEST
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999852696136151	WITHOUT_CLASSIFICATION	1.4730386384843908E-5	TEST
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.999973136342801	WITHOUT_CLASSIFICATION	2.6863657198981447E-5	TEST
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.999973136342801	WITHOUT_CLASSIFICATION	2.6863657198981447E-5	TEST
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999739806417169	WITHOUT_CLASSIFICATION	2.6019358283007594E-5	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999732191722642	WITHOUT_CLASSIFICATION	2.6780827735677134E-5	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999732191722642	WITHOUT_CLASSIFICATION	2.6780827735677134E-5	TEST
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999676576768186	WITHOUT_CLASSIFICATION	3.234232318146068E-5	TEST
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.999967700124016	WITHOUT_CLASSIFICATION	3.22998759840036E-5	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999738541817891	WITHOUT_CLASSIFICATION	2.6145818210927703E-5	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999738541817891	WITHOUT_CLASSIFICATION	2.6145818210927703E-5	TEST
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.999973136342801	WITHOUT_CLASSIFICATION	2.6863657198981447E-5	TEST
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999927008271671	WITHOUT_CLASSIFICATION	7.299172833047439E-6	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.999961277504427	WITHOUT_CLASSIFICATION	3.8722495573075245E-5	TEST
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999957557625381	WITHOUT_CLASSIFICATION	4.244237461896489E-6	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9998894467449837	WITHOUT_CLASSIFICATION	1.105532550163511E-4	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.999978249506287	WITHOUT_CLASSIFICATION	2.1750493712963033E-5	TEST
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999858352566802	WITHOUT_CLASSIFICATION	1.4164743319823975E-5	TEST
// load Object under value	WITHOUT_CLASSIFICATION	0.9999472265900771	WITHOUT_CLASSIFICATION	5.277340992308031E-5	TEST
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999455734233557	WITHOUT_CLASSIFICATION	5.4426576644366E-5	TEST
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999826852985811	WITHOUT_CLASSIFICATION	1.731470141881713E-5	TEST
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.999978297550308	WITHOUT_CLASSIFICATION	2.170244969207467E-5	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999913069936535	WITHOUT_CLASSIFICATION	8.693006346573172E-6	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999913069936535	WITHOUT_CLASSIFICATION	8.693006346573172E-6	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999616079755481	WITHOUT_CLASSIFICATION	3.839202445198729E-5	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999616079755481	WITHOUT_CLASSIFICATION	3.839202445198729E-5	TEST
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999943596535855	WITHOUT_CLASSIFICATION	5.640346414500882E-6	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999973180679773	WITHOUT_CLASSIFICATION	2.6819320226743776E-6	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999973180679773	WITHOUT_CLASSIFICATION	2.6819320226743776E-6	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999973180679773	WITHOUT_CLASSIFICATION	2.6819320226743776E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999789899065631	WITHOUT_CLASSIFICATION	2.1010093436927937E-5	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999725059929674	WITHOUT_CLASSIFICATION	2.749400703261518E-5	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999725059929674	WITHOUT_CLASSIFICATION	2.749400703261518E-5	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999917416509504	WITHOUT_CLASSIFICATION	8.258349049576705E-6	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.9999972287711386	WITHOUT_CLASSIFICATION	2.771228861407735E-6	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999751949316391	WITHOUT_CLASSIFICATION	2.4805068360904638E-5	TEST
// skip catch block	WITHOUT_CLASSIFICATION	0.9999931422046742	WITHOUT_CLASSIFICATION	6.857795325719089E-6	TEST
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999526234314567	WITHOUT_CLASSIFICATION	4.737656854320842E-5	TEST
// next jump	WITHOUT_CLASSIFICATION	0.9999930342920288	WITHOUT_CLASSIFICATION	6.965707971226848E-6	TEST
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9991622634421801	WITHOUT_CLASSIFICATION	8.377365578199403E-4	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999960833111171	WITHOUT_CLASSIFICATION	3.916688882902203E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999960833111171	WITHOUT_CLASSIFICATION	3.916688882902203E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999789899065631	WITHOUT_CLASSIFICATION	2.1010093436927937E-5	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999917416509504	WITHOUT_CLASSIFICATION	8.258349049576705E-6	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999916588265401	WITHOUT_CLASSIFICATION	8.341173459914286E-6	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.9999972287711386	WITHOUT_CLASSIFICATION	2.771228861407735E-6	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999751949316391	WITHOUT_CLASSIFICATION	2.4805068360904638E-5	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999863673675617	WITHOUT_CLASSIFICATION	1.3632632438172391E-5	TEST
// break jump	WITHOUT_CLASSIFICATION	0.9999919541590205	WITHOUT_CLASSIFICATION	8.045840979504493E-6	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9997935565779981	WITHOUT_CLASSIFICATION	2.0644342200206884E-4	TEST
//[reg]	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999156977163625	WITHOUT_CLASSIFICATION	8.430228363752928E-5	TEST
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999979182633448	WITHOUT_CLASSIFICATION	2.0817366551216424E-6	TEST
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999954918726812	WITHOUT_CLASSIFICATION	4.50812731866964E-6	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999863673675617	WITHOUT_CLASSIFICATION	1.3632632438172391E-5	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999489360499774	WITHOUT_CLASSIFICATION	5.106395002261891E-5	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999489360499774	WITHOUT_CLASSIFICATION	5.106395002261891E-5	TEST
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999550193464328	WITHOUT_CLASSIFICATION	4.4980653567073684E-5	TEST
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999946244133455	WITHOUT_CLASSIFICATION	5.375586654502949E-6	TEST
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999951429368962	WITHOUT_CLASSIFICATION	4.857063103870406E-6	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.999979066407309	WITHOUT_CLASSIFICATION	2.0933592691031674E-5	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999773678936045	WITHOUT_CLASSIFICATION	2.263210639541895E-5	TEST
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.999993996648509	WITHOUT_CLASSIFICATION	6.003351491112248E-6	TEST
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999904205065862	WITHOUT_CLASSIFICATION	9.579493413820545E-6	TEST
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999625404601811	WITHOUT_CLASSIFICATION	3.745953981902056E-5	TEST
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999969430518332	WITHOUT_CLASSIFICATION	3.056948166776681E-6	TEST
// false // zero	WITHOUT_CLASSIFICATION	0.9999936780002354	WITHOUT_CLASSIFICATION	6.321999764594132E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999756103143094	WITHOUT_CLASSIFICATION	2.4389685690624384E-5	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.999979066407309	WITHOUT_CLASSIFICATION	2.0933592691031674E-5	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999773678936045	WITHOUT_CLASSIFICATION	2.263210639541895E-5	TEST
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999945092234687	WITHOUT_CLASSIFICATION	5.490776531402724E-6	TEST
// push false	WITHOUT_CLASSIFICATION	0.9999921593126758	WITHOUT_CLASSIFICATION	7.840687324186452E-6	TEST
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9996126367327413	WITHOUT_CLASSIFICATION	3.873632672586792E-4	TEST
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.999820240161579	WITHOUT_CLASSIFICATION	1.7975983842094772E-4	TEST
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.99994084024313	WITHOUT_CLASSIFICATION	5.915975686994063E-5	TEST
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9996126367327413	WITHOUT_CLASSIFICATION	3.873632672586792E-4	TEST
//[C]	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
// push true	WITHOUT_CLASSIFICATION	0.999993527257847	WITHOUT_CLASSIFICATION	6.472742152939547E-6	TEST
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999753624366368	WITHOUT_CLASSIFICATION	2.463756336327866E-5	TEST
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.999820240161579	WITHOUT_CLASSIFICATION	1.7975983842094772E-4	TEST
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9996126367327413	WITHOUT_CLASSIFICATION	3.873632672586792E-4	TEST
//[boolean]	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999838582112803	WITHOUT_CLASSIFICATION	1.614178871969752E-5	TEST
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999384286578432	WITHOUT_CLASSIFICATION	6.157134215678763E-5	TEST
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999612203521647	WITHOUT_CLASSIFICATION	3.8779647835257034E-5	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999994520413815	WITHOUT_CLASSIFICATION	5.479586183930257E-7	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.999991727880782	WITHOUT_CLASSIFICATION	8.272119217911013E-6	TEST
// static scope	WITHOUT_CLASSIFICATION	0.999992846123039	WITHOUT_CLASSIFICATION	7.153876960997801E-6	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.99999324678809	WITHOUT_CLASSIFICATION	6.753211909942919E-6	TEST
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999716581467686	WITHOUT_CLASSIFICATION	2.8341853231387153E-5	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.999991727880782	WITHOUT_CLASSIFICATION	8.272119217911013E-6	TEST
// static scope	WITHOUT_CLASSIFICATION	0.999992846123039	WITHOUT_CLASSIFICATION	7.153876960997801E-6	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.99999324678809	WITHOUT_CLASSIFICATION	6.753211909942919E-6	TEST
// finally with exception	WITHOUT_CLASSIFICATION	0.9999096261562136	WITHOUT_CLASSIFICATION	9.037384378644674E-5	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999989850868465	WITHOUT_CLASSIFICATION	1.014913153608785E-6	TEST
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999830519370126	WITHOUT_CLASSIFICATION	1.6948062987321245E-5	TEST
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9997881761364699	WITHOUT_CLASSIFICATION	2.118238635301019E-4	TEST
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999594483057369	WITHOUT_CLASSIFICATION	4.0551694263127184E-5	TEST
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999731345332278	WITHOUT_CLASSIFICATION	2.686546677223637E-5	TEST
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.999998637165446	WITHOUT_CLASSIFICATION	1.3628345540541814E-6	TEST
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999985860198555	WITHOUT_CLASSIFICATION	1.413980144562177E-6	TEST
// script object	WITHOUT_CLASSIFICATION	0.9999878563723269	WITHOUT_CLASSIFICATION	1.2143627673203556E-5	TEST
// arities	WITHOUT_CLASSIFICATION	0.9999184955562991	WITHOUT_CLASSIFICATION	8.150444370085729E-5	TEST
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9926714195604712	WITHOUT_CLASSIFICATION	0.00732858043952872	TEST
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999572113287357	WITHOUT_CLASSIFICATION	4.278867126420645E-5	TEST
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999789231947196	WITHOUT_CLASSIFICATION	2.1076805280410343E-5	TEST
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999976231223529	WITHOUT_CLASSIFICATION	2.376877647085593E-6	TEST
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9954999873057152	WITHOUT_CLASSIFICATION	0.004500012694284769	TEST
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.999958037591882	WITHOUT_CLASSIFICATION	4.196240811796463E-5	TEST
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999840311480334	WITHOUT_CLASSIFICATION	1.5968851966575203E-5	TEST
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9998864214496795	WITHOUT_CLASSIFICATION	1.135785503204405E-4	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999911836057044	WITHOUT_CLASSIFICATION	8.816394295701116E-6	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999903677314933	WITHOUT_CLASSIFICATION	9.632268506695787E-6	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999946845251935	WITHOUT_CLASSIFICATION	5.315474806508193E-6	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999944861667183	WITHOUT_CLASSIFICATION	5.5138332816297135E-6	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999944861667183	WITHOUT_CLASSIFICATION	5.5138332816297135E-6	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999495925834707	WITHOUT_CLASSIFICATION	5.040741652942597E-5	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999495925834707	WITHOUT_CLASSIFICATION	5.040741652942597E-5	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999753623732034	WITHOUT_CLASSIFICATION	2.4637626796595954E-5	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999753623732034	WITHOUT_CLASSIFICATION	2.4637626796595954E-5	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9998956094369306	WITHOUT_CLASSIFICATION	1.0439056306941555E-4	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999983223551673	WITHOUT_CLASSIFICATION	1.6776448327406128E-6	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999939498589121	WITHOUT_CLASSIFICATION	6.050141087942001E-6	TEST
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.999996062853449	WITHOUT_CLASSIFICATION	3.937146550972124E-6	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.999995467165915	WITHOUT_CLASSIFICATION	4.532834084935684E-6	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999804655307657	WITHOUT_CLASSIFICATION	1.953446923435916E-5	TEST
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999813116073933	WITHOUT_CLASSIFICATION	1.8688392606632332E-5	TEST
// then optional args	WITHOUT_CLASSIFICATION	0.9999927332352969	WITHOUT_CLASSIFICATION	7.266764703096299E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999960833111171	WITHOUT_CLASSIFICATION	3.916688882902203E-5	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9998956094369306	WITHOUT_CLASSIFICATION	1.0439056306941555E-4	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999983223551673	WITHOUT_CLASSIFICATION	1.6776448327406128E-6	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999939498589121	WITHOUT_CLASSIFICATION	6.050141087942001E-6	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.999995467165915	WITHOUT_CLASSIFICATION	4.532834084935684E-6	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999804655307657	WITHOUT_CLASSIFICATION	1.953446923435916E-5	TEST
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999670613916328	WITHOUT_CLASSIFICATION	3.293860836721966E-5	TEST
// finally, post args	WITHOUT_CLASSIFICATION	0.9999829062647372	WITHOUT_CLASSIFICATION	1.709373526281271E-5	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9993184823343907	WITHOUT_CLASSIFICATION	6.815176656093608E-4	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9993184823343907	WITHOUT_CLASSIFICATION	6.815176656093608E-4	TEST
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999903578830753	WITHOUT_CLASSIFICATION	9.642116924702363E-6	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9998366522404885	WITHOUT_CLASSIFICATION	1.6334775951164487E-4	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.99999845515586	WITHOUT_CLASSIFICATION	1.544844139958263E-6	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999898103938235	WITHOUT_CLASSIFICATION	1.0189606176593684E-5	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999898103938235	WITHOUT_CLASSIFICATION	1.0189606176593684E-5	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.999963727381791	WITHOUT_CLASSIFICATION	3.627261820910663E-5	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9998621648040866	WITHOUT_CLASSIFICATION	1.3783519591341749E-4	TEST
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.999996438681017	WITHOUT_CLASSIFICATION	3.561318983127773E-6	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999906539831765	WITHOUT_CLASSIFICATION	9.346016823571761E-6	TEST
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999982777665235	WITHOUT_CLASSIFICATION	1.7222334764066045E-6	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999974405731153	WITHOUT_CLASSIFICATION	2.5594268845814743E-6	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999888937991624	WITHOUT_CLASSIFICATION	1.110620083744479E-5	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999904010554924	WITHOUT_CLASSIFICATION	9.598944507666494E-6	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999839736832723	WITHOUT_CLASSIFICATION	1.602631672774419E-5	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999957817636606	WITHOUT_CLASSIFICATION	4.218236339457869E-6	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999960930079753	WITHOUT_CLASSIFICATION	3.906992024637453E-6	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.999963727381791	WITHOUT_CLASSIFICATION	3.627261820910663E-5	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9998621648040866	WITHOUT_CLASSIFICATION	1.3783519591341749E-4	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999906539831765	WITHOUT_CLASSIFICATION	9.346016823571761E-6	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999976853174469	WITHOUT_CLASSIFICATION	2.3146825530731766E-6	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.99999845515586	WITHOUT_CLASSIFICATION	1.544844139958263E-6	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.99999845515586	WITHOUT_CLASSIFICATION	1.544844139958263E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999756103143094	WITHOUT_CLASSIFICATION	2.4389685690624384E-5	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999756103143094	WITHOUT_CLASSIFICATION	2.4389685690624384E-5	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999937598932745	WITHOUT_CLASSIFICATION	6.240106725379542E-6	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999937598932745	WITHOUT_CLASSIFICATION	6.240106725379542E-6	TEST
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999973244683533	WITHOUT_CLASSIFICATION	2.6755316467412392E-6	TEST
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999957126408917	WITHOUT_CLASSIFICATION	4.287359108321605E-6	TEST
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999531971782553	WITHOUT_CLASSIFICATION	4.680282174463399E-5	TEST
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999404336707337	WITHOUT_CLASSIFICATION	5.956632926637697E-5	TEST
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999967304778619	WITHOUT_CLASSIFICATION	3.2695221381516416E-6	TEST
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999922298997029	WITHOUT_CLASSIFICATION	7.770100297004409E-6	TEST
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999930267293742	WITHOUT_CLASSIFICATION	6.973270625888551E-6	TEST
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999848709022889	WITHOUT_CLASSIFICATION	1.5129097711009243E-5	TEST
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.999976020153059	WITHOUT_CLASSIFICATION	2.3979846941071185E-5	TEST
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.999989070176731	WITHOUT_CLASSIFICATION	1.0929823269036276E-5	TEST
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999806115130027	WITHOUT_CLASSIFICATION	1.938848699729193E-5	TEST
// verify the class	WITHOUT_CLASSIFICATION	0.9999985520333514	WITHOUT_CLASSIFICATION	1.4479666486197936E-6	TEST
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999890256016215	WITHOUT_CLASSIFICATION	1.097439837849891E-5	TEST
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999959222654331	WITHOUT_CLASSIFICATION	4.077734566858155E-6	TEST
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.999990504394878	WITHOUT_CLASSIFICATION	9.495605122070897E-6	TEST
// thread context	WITHOUT_CLASSIFICATION	0.9999937650784236	WITHOUT_CLASSIFICATION	6.234921576294853E-6	TEST
// line number	WITHOUT_CLASSIFICATION	0.9999939040067443	WITHOUT_CLASSIFICATION	6.095993255729512E-6	TEST
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999603318180128	WITHOUT_CLASSIFICATION	3.966818198719302E-5	TEST
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9998846510469765	WITHOUT_CLASSIFICATION	1.1534895302347643E-4	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999888937991624	WITHOUT_CLASSIFICATION	1.110620083744479E-5	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999839736832723	WITHOUT_CLASSIFICATION	1.602631672774419E-5	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.999998591235719	WITHOUT_CLASSIFICATION	1.4087642810683518E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999206746941464	WITHOUT_CLASSIFICATION	7.932530585364482E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999206746941464	WITHOUT_CLASSIFICATION	7.932530585364482E-5	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999976853174469	WITHOUT_CLASSIFICATION	2.3146825530731766E-6	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.99999845515586	WITHOUT_CLASSIFICATION	1.544844139958263E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999756103143094	WITHOUT_CLASSIFICATION	2.4389685690624384E-5	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999937598932745	WITHOUT_CLASSIFICATION	6.240106725379542E-6	TEST
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999593735135308	WITHOUT_CLASSIFICATION	4.0626486469200325E-5	TEST
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.999414124038208	WITHOUT_CLASSIFICATION	5.858759617921811E-4	TEST
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999874895743392	WITHOUT_CLASSIFICATION	1.251042566067062E-5	TEST
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9995391675341588	WITHOUT_CLASSIFICATION	4.608324658410737E-4	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999811682528266	WITHOUT_CLASSIFICATION	1.8831747173463928E-5	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999811682528266	WITHOUT_CLASSIFICATION	1.8831747173463928E-5	TEST
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999839669012313	WITHOUT_CLASSIFICATION	1.603309876875524E-5	TEST
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999893317208355	WITHOUT_CLASSIFICATION	1.0668279164448311E-5	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999844901474064	WITHOUT_CLASSIFICATION	1.5509852593553355E-5	TEST
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999870569270369	WITHOUT_CLASSIFICATION	1.294307296311464E-5	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999974621123243	WITHOUT_CLASSIFICATION	2.5378876756120713E-6	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999974621123243	WITHOUT_CLASSIFICATION	2.5378876756120713E-6	TEST
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999511584433727	WITHOUT_CLASSIFICATION	4.8841556627303754E-5	TEST
// normal closure	WITHOUT_CLASSIFICATION	0.9999918896739075	WITHOUT_CLASSIFICATION	8.110326092516917E-6	TEST
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.999977004845377	WITHOUT_CLASSIFICATION	2.29951546230657E-5	TEST
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9988510970928399	WITHOUT_CLASSIFICATION	0.0011489029071601352	TEST
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999823031446845	WITHOUT_CLASSIFICATION	1.769685531547893E-5	TEST
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999955815075363	WITHOUT_CLASSIFICATION	4.4184924636884536E-6	TEST
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999803255208037	WITHOUT_CLASSIFICATION	1.9674479196249913E-5	TEST
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999907567502642	WITHOUT_CLASSIFICATION	9.243249735772014E-6	TEST
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9999883845346732	WITHOUT_CLASSIFICATION	1.1615465326706153E-5	TEST
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9842839995899333	WITHOUT_CLASSIFICATION	0.015716000410066776	TEST
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.999932441015572	WITHOUT_CLASSIFICATION	6.755898442805184E-5	TEST
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999750521722894	WITHOUT_CLASSIFICATION	2.4947827710533004E-5	TEST
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999998834417612	WITHOUT_CLASSIFICATION	1.1655823892145396E-7	TEST
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.999996230642065	WITHOUT_CLASSIFICATION	3.769357935083801E-6	TEST
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9998355628248083	WITHOUT_CLASSIFICATION	1.6443717519175268E-4	TEST
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999896670520689	WITHOUT_CLASSIFICATION	1.033294793107827E-5	TEST
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999933349496684	WITHOUT_CLASSIFICATION	6.665050331722398E-6	TEST
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999935172238236	WITHOUT_CLASSIFICATION	6.482776176487186E-6	TEST
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999999163277568	WITHOUT_CLASSIFICATION	8.367224328869451E-8	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999948058772318	WITHOUT_CLASSIFICATION	5.194122768229525E-6	TEST
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9998943153196789	WITHOUT_CLASSIFICATION	1.0568468032104558E-4	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999901700921654	WITHOUT_CLASSIFICATION	9.829907834528135E-6	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999901700921654	WITHOUT_CLASSIFICATION	9.829907834528135E-6	TEST
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999973512681397	WITHOUT_CLASSIFICATION	2.6487318603169747E-6	TEST
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999965716497266	WITHOUT_CLASSIFICATION	3.428350273554519E-6	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999915223113045	WITHOUT_CLASSIFICATION	8.477688695548486E-6	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999915223113045	WITHOUT_CLASSIFICATION	8.477688695548486E-6	TEST
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9999342894993102	WITHOUT_CLASSIFICATION	6.571050068974777E-5	TEST
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999937139324628	WITHOUT_CLASSIFICATION	6.286067537149366E-6	TEST
// done // done // done // done	WITHOUT_CLASSIFICATION	0.999873789228413	WITHOUT_CLASSIFICATION	1.2621077158695207E-4	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999943145157344	WITHOUT_CLASSIFICATION	5.685484265615859E-6	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999943145157344	WITHOUT_CLASSIFICATION	5.685484265615859E-6	TEST
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999975032865379	WITHOUT_CLASSIFICATION	2.4967134621044752E-6	TEST
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999992366686314	WITHOUT_CLASSIFICATION	7.633313685980771E-7	TEST
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999977172117106	WITHOUT_CLASSIFICATION	2.282788289331066E-6	TEST
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999968405846893	WITHOUT_CLASSIFICATION	3.1594153107319856E-6	TEST
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999911246002982	WITHOUT_CLASSIFICATION	8.875399701837138E-6	TEST
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999938546155346	WITHOUT_CLASSIFICATION	6.145384465436756E-6	TEST
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999940252446904	WITHOUT_CLASSIFICATION	5.974755309573437E-6	TEST
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.999997616776783	WITHOUT_CLASSIFICATION	2.3832232171079346E-6	TEST
// build each "when"	WITHOUT_CLASSIFICATION	0.9999940024641129	WITHOUT_CLASSIFICATION	5.99753588710032E-6	TEST
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999673786687368	WITHOUT_CLASSIFICATION	3.262133126318163E-5	TEST
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999575560370665	WITHOUT_CLASSIFICATION	4.244396293359854E-5	TEST
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999816949043687	WITHOUT_CLASSIFICATION	1.8305095631302212E-5	TEST
// close it out	WITHOUT_CLASSIFICATION	0.9999906300498295	WITHOUT_CLASSIFICATION	9.36995017053128E-6	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999279854850883	WITHOUT_CLASSIFICATION	7.201451491175999E-5	TEST
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9999839209092736	WITHOUT_CLASSIFICATION	1.6079090726426016E-5	TEST
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999988633820689	WITHOUT_CLASSIFICATION	1.1366179310694203E-6	TEST
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999970961569138	WITHOUT_CLASSIFICATION	2.9038430862399812E-6	TEST
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999891048865766	WITHOUT_CLASSIFICATION	1.0895113423517833E-5	TEST
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999893663263206	WITHOUT_CLASSIFICATION	1.0633673679439905E-5	TEST
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999971246257363	WITHOUT_CLASSIFICATION	2.8753742636313944E-6	TEST
// Instance method	WITHOUT_CLASSIFICATION	0.9999976467088476	WITHOUT_CLASSIFICATION	2.35329115235305E-6	TEST
// Class method	WITHOUT_CLASSIFICATION	0.9999980464054331	WITHOUT_CLASSIFICATION	1.953594566915259E-6	TEST
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999798768456963	WITHOUT_CLASSIFICATION	2.0123154303621452E-5	TEST
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999903869139117	WITHOUT_CLASSIFICATION	9.613086088376775E-6	TEST
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999970846619937	WITHOUT_CLASSIFICATION	2.915338006309756E-6	TEST
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999972298892755	WITHOUT_CLASSIFICATION	2.7701107245785793E-6	TEST
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9997821118192272	WITHOUT_CLASSIFICATION	2.1788818077283137E-4	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999528803065014	WITHOUT_CLASSIFICATION	4.7119693498482274E-5	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999919281179892	WITHOUT_CLASSIFICATION	8.071882010848898E-6	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999994662803263	WITHOUT_CLASSIFICATION	5.337196737336372E-7	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999995773757522	WITHOUT_CLASSIFICATION	4.226242477891051E-7	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999279854850883	WITHOUT_CLASSIFICATION	7.201451491175999E-5	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999528803065014	WITHOUT_CLASSIFICATION	4.7119693498482274E-5	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999919281179892	WITHOUT_CLASSIFICATION	8.071882010848898E-6	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999995773757522	WITHOUT_CLASSIFICATION	4.226242477891051E-7	TEST
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9998930073403003	WITHOUT_CLASSIFICATION	1.0699265969960408E-4	TEST
// Build the new module	WITHOUT_CLASSIFICATION	0.9999870916407093	WITHOUT_CLASSIFICATION	1.290835929074348E-5	TEST
// Build the module body	WITHOUT_CLASSIFICATION	0.9999943166764271	WITHOUT_CLASSIFICATION	5.68332357289224E-6	TEST
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999539706187938	WITHOUT_CLASSIFICATION	4.602938120625575E-5	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999970328758129	WITHOUT_CLASSIFICATION	2.967124187221641E-6	TEST
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999997190458109	WITHOUT_CLASSIFICATION	2.8095418906417623E-7	TEST
// get attr	WITHOUT_CLASSIFICATION	0.9999948058772318	WITHOUT_CLASSIFICATION	5.194122768229525E-6	TEST
// call operator	WITHOUT_CLASSIFICATION	0.999995540759722	WITHOUT_CLASSIFICATION	4.459240278014918E-6	TEST
// set attr	WITHOUT_CLASSIFICATION	0.999994647766405	WITHOUT_CLASSIFICATION	5.352233595062014E-6	TEST
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999720289520941	WITHOUT_CLASSIFICATION	2.7971047905930525E-5	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999906013371975	WITHOUT_CLASSIFICATION	9.398662802533461E-6	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999906013371975	WITHOUT_CLASSIFICATION	9.398662802533461E-6	TEST
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999622251045265	WITHOUT_CLASSIFICATION	3.777489547356694E-5	TEST
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999981154859201	WITHOUT_CLASSIFICATION	1.8845140799230244E-6	TEST
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999989324721419	WITHOUT_CLASSIFICATION	1.0675278581238606E-6	TEST
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999971163665516	WITHOUT_CLASSIFICATION	2.883633448335239E-6	TEST
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999232243133539	WITHOUT_CLASSIFICATION	7.677568664615994E-5	TEST
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999860418475859	WITHOUT_CLASSIFICATION	1.395815241410599E-5	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999993881272664	WITHOUT_CLASSIFICATION	6.118727336816134E-7	TEST
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.999996279434579	WITHOUT_CLASSIFICATION	3.720565421078826E-6	TEST
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999790863604	WITHOUT_CLASSIFICATION	2.0913639609450673E-8	TEST
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999973666443566	WITHOUT_CLASSIFICATION	2.6333556434583653E-6	TEST
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999679512744	WITHOUT_CLASSIFICATION	3.2048725505796E-8	TEST
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999499753788542	WITHOUT_CLASSIFICATION	5.002462114578952E-5	TEST
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999959763326389	WITHOUT_CLASSIFICATION	4.0236673611086495E-6	TEST
// alu operations	WITHOUT_CLASSIFICATION	0.9999919171786975	WITHOUT_CLASSIFICATION	8.08282130256544E-6	TEST
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999991870032355	WITHOUT_CLASSIFICATION	8.129967643371221E-7	TEST
// closure instructions	WITHOUT_CLASSIFICATION	0.9999820591655711	WITHOUT_CLASSIFICATION	1.794083442894373E-5	TEST
// eval instructions	WITHOUT_CLASSIFICATION	0.999991900188493	WITHOUT_CLASSIFICATION	8.099811506990156E-6	TEST
// def instructions	WITHOUT_CLASSIFICATION	0.9999917328417872	WITHOUT_CLASSIFICATION	8.267158212806416E-6	TEST
// exception instructions	WITHOUT_CLASSIFICATION	0.9999833035188079	WITHOUT_CLASSIFICATION	1.6696481191974867E-5	TEST
// Loads	WITHOUT_CLASSIFICATION	0.9999184955562991	WITHOUT_CLASSIFICATION	8.150444370085729E-5	TEST
// Stores	WITHOUT_CLASSIFICATION	0.9999185550986425	WITHOUT_CLASSIFICATION	8.144490135757665E-5	TEST
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999965399711712	WITHOUT_CLASSIFICATION	3.4600288287768536E-6	TEST
// others	WITHOUT_CLASSIFICATION	0.9999200969100145	WITHOUT_CLASSIFICATION	7.990308998553963E-5	TEST
// a case/when branch	WITHOUT_CLASSIFICATION	0.999988345013007	WITHOUT_CLASSIFICATION	1.1654986992950858E-5	TEST
// optimization guards	WITHOUT_CLASSIFICATION	0.9999821210916946	WITHOUT_CLASSIFICATION	1.787890830536988E-5	TEST
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999293097080069	WITHOUT_CLASSIFICATION	7.069029199320232E-5	TEST
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999969094610109	WITHOUT_CLASSIFICATION	3.0905389890306878E-6	TEST
// scripts	WITHOUT_CLASSIFICATION	0.9999190408487051	WITHOUT_CLASSIFICATION	8.095915129499244E-5	TEST
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999974894795085	WITHOUT_CLASSIFICATION	2.5105204914902553E-6	TEST
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999948082016009	WITHOUT_CLASSIFICATION	5.1917983990229205E-6	TEST
// methods and closures	WITHOUT_CLASSIFICATION	0.9999971956297568	WITHOUT_CLASSIFICATION	2.8043702432749765E-6	TEST
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.999984593136242	WITHOUT_CLASSIFICATION	1.5406863757991945E-5	TEST
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999492049963443	WITHOUT_CLASSIFICATION	5.079500365560962E-5	TEST
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999626240629019	WITHOUT_CLASSIFICATION	3.737593709804101E-5	TEST
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9998046593802332	WITHOUT_CLASSIFICATION	1.9534061976692784E-4	TEST
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999604341815526	WITHOUT_CLASSIFICATION	3.956581844737867E-5	TEST
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.999950230195234	WITHOUT_CLASSIFICATION	4.9769804766046E-5	TEST
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999981920870034	WITHOUT_CLASSIFICATION	1.8079129966542228E-6	TEST
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999522720153012	WITHOUT_CLASSIFICATION	4.772798469876839E-5	TEST
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999803491644879	WITHOUT_CLASSIFICATION	1.9650835512074775E-5	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999609759252313	WITHOUT_CLASSIFICATION	3.9024074768692544E-5	TEST
// Readline	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999967929014933	WITHOUT_CLASSIFICATION	3.2070985066836602E-6	TEST
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999833813200967	WITHOUT_CLASSIFICATION	1.6618679903377216E-5	TEST
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999961795586463	WITHOUT_CLASSIFICATION	3.820441353790722E-6	TEST
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9999996876703571	WITHOUT_CLASSIFICATION	3.123296429082047E-7	TEST
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999999127524937	WITHOUT_CLASSIFICATION	8.724750637567985E-8	TEST
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999951431308606	WITHOUT_CLASSIFICATION	4.856869139411344E-6	TEST
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.999934272456592	WITHOUT_CLASSIFICATION	6.572754340799601E-5	TEST
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9998905771322811	WITHOUT_CLASSIFICATION	1.0942286771880035E-4	TEST
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.999999435555454	WITHOUT_CLASSIFICATION	5.644445460042777E-7	TEST
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.999922686132059	WITHOUT_CLASSIFICATION	7.731386794105949E-5	TEST
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.999646413545839	WITHOUT_CLASSIFICATION	3.535864541610094E-4	TEST
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9982185591245027	WITHOUT_CLASSIFICATION	0.0017814408754972136	TEST
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999451580220032	WITHOUT_CLASSIFICATION	5.484197799676645E-5	TEST
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.999991345633671	WITHOUT_CLASSIFICATION	8.6543663290928E-6	TEST
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9998936808084196	WITHOUT_CLASSIFICATION	1.0631919158047721E-4	TEST
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.999994679528353	WITHOUT_CLASSIFICATION	5.3204716471211065E-6	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.999141016360072	WITHOUT_CLASSIFICATION	8.589836399280203E-4	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.999141016360072	WITHOUT_CLASSIFICATION	8.589836399280203E-4	TEST
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999451580220032	WITHOUT_CLASSIFICATION	5.484197799676645E-5	TEST
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9996203025736969	WITHOUT_CLASSIFICATION	3.796974263030545E-4	TEST
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999454981198119	WITHOUT_CLASSIFICATION	5.4501880188082256E-5	TEST
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999951097040736	WITHOUT_CLASSIFICATION	4.890295926398924E-5	TEST
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999659682113502	WITHOUT_CLASSIFICATION	3.4031788649845536E-5	TEST
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9998963050443785	WITHOUT_CLASSIFICATION	1.036949556214795E-4	TEST
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.999913135211176	WITHOUT_CLASSIFICATION	8.686478882405042E-5	TEST
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999619773404508	WITHOUT_CLASSIFICATION	3.80226595491358E-5	TEST
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999688533955028	WITHOUT_CLASSIFICATION	3.114660449718262E-5	TEST
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999957761956072	WITHOUT_CLASSIFICATION	4.223804392840429E-6	TEST
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999139005833634	WITHOUT_CLASSIFICATION	8.609941663652684E-5	TEST
// class or module	WITHOUT_CLASSIFICATION	0.9999948857115383	WITHOUT_CLASSIFICATION	5.11428846175081E-6	TEST
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999922024281181	WITHOUT_CLASSIFICATION	7.797571881892045E-6	TEST
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999808703193597	WITHOUT_CLASSIFICATION	1.912968064030043E-5	TEST
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999736256777408	WITHOUT_CLASSIFICATION	2.637432225914278E-5	TEST
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999928425452367	WITHOUT_CLASSIFICATION	7.1574547632898055E-6	TEST
// IN changed!	WITHOUT_CLASSIFICATION	0.9999917480328242	WITHOUT_CLASSIFICATION	8.251967175769648E-6	TEST
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999569146613756	WITHOUT_CLASSIFICATION	4.3085338624372085E-5	TEST
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999816344062372	WITHOUT_CLASSIFICATION	1.8365593762754724E-5	TEST
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9998424801224045	WITHOUT_CLASSIFICATION	1.5751987759541453E-4	TEST
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999394555734732	WITHOUT_CLASSIFICATION	6.054442652683931E-5	TEST
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999977859360217	WITHOUT_CLASSIFICATION	2.2140639781805375E-6	TEST
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999990056007761	WITHOUT_CLASSIFICATION	9.943992239482934E-7	TEST
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999992108039094	WITHOUT_CLASSIFICATION	7.891960907311874E-7	TEST
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999316840772534	WITHOUT_CLASSIFICATION	6.8315922746586E-5	TEST
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9998625746950298	WITHOUT_CLASSIFICATION	1.3742530497008287E-4	TEST
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9998957936600174	WITHOUT_CLASSIFICATION	1.0420633998269096E-4	TEST
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999937980046922	WITHOUT_CLASSIFICATION	6.201995307782407E-6	TEST
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999816606391085	WITHOUT_CLASSIFICATION	1.8339360891464345E-5	TEST
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999945571200569	WITHOUT_CLASSIFICATION	5.442879943042284E-6	TEST
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999911226591692	WITHOUT_CLASSIFICATION	8.877340830774131E-6	TEST
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999885178039108	WITHOUT_CLASSIFICATION	1.1482196089198704E-5	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.999946977335285	WITHOUT_CLASSIFICATION	5.302266471496947E-5	TEST
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9998044657389761	WITHOUT_CLASSIFICATION	1.9553426102398734E-4	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.999946977335285	WITHOUT_CLASSIFICATION	5.302266471496947E-5	TEST
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.99998557888954	WITHOUT_CLASSIFICATION	1.442111046001316E-5	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999426163855957	WITHOUT_CLASSIFICATION	5.738361440438439E-5	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999426163855957	WITHOUT_CLASSIFICATION	5.738361440438439E-5	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999426163855957	WITHOUT_CLASSIFICATION	5.738361440438439E-5	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999902602162551	WITHOUT_CLASSIFICATION	9.739783744825444E-6	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999902602162551	WITHOUT_CLASSIFICATION	9.739783744825444E-6	TEST
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.999131939416475	WITHOUT_CLASSIFICATION	8.680605835248284E-4	TEST
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999798746416175	WITHOUT_CLASSIFICATION	2.0125358382496264E-5	TEST
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999913786753382	WITHOUT_CLASSIFICATION	8.621324661873726E-6	TEST
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9999852117796272	WITHOUT_CLASSIFICATION	1.4788220372729154E-5	TEST
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999908777664608	WITHOUT_CLASSIFICATION	9.122233539212366E-6	TEST
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9998382478025694	WITHOUT_CLASSIFICATION	1.617521974306961E-4	TEST
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999595082841501	WITHOUT_CLASSIFICATION	4.04917158498506E-5	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999357739919152	WITHOUT_CLASSIFICATION	6.42260080846873E-5	TEST
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999010853961685	WITHOUT_CLASSIFICATION	9.891460383150676E-5	TEST
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.999988064164115	WITHOUT_CLASSIFICATION	1.1935835885031175E-5	TEST
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999826197230348	WITHOUT_CLASSIFICATION	1.7380276965275848E-5	TEST
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999898051682466	WITHOUT_CLASSIFICATION	1.0194831753352273E-5	TEST
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999907284150173	WITHOUT_CLASSIFICATION	9.27158498269464E-6	TEST
// root-level logic	WITHOUT_CLASSIFICATION	0.9999919772225678	WITHOUT_CLASSIFICATION	8.022777432130681E-6	TEST
// root-level methods	WITHOUT_CLASSIFICATION	0.9999858558668504	WITHOUT_CLASSIFICATION	1.4144133149748541E-5	TEST
// root-level classes	WITHOUT_CLASSIFICATION	0.9999839895393001	WITHOUT_CLASSIFICATION	1.60104606998436E-5	TEST
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999745160993571	WITHOUT_CLASSIFICATION	2.5483900642982536E-5	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999893141543584	WITHOUT_CLASSIFICATION	1.0685845641671659E-5	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999893141543584	WITHOUT_CLASSIFICATION	1.0685845641671659E-5	TEST
// receiver	WITHOUT_CLASSIFICATION	0.999991729104869	WITHOUT_CLASSIFICATION	8.270895130979593E-6	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999899527618582	WITHOUT_CLASSIFICATION	1.0047238141885796E-5	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999899527618582	WITHOUT_CLASSIFICATION	1.0047238141885796E-5	TEST
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999382243183038	WITHOUT_CLASSIFICATION	6.177568169612014E-5	TEST
// Object[] args	WITHOUT_CLASSIFICATION	0.9999918573606749	WITHOUT_CLASSIFICATION	8.142639325103221E-6	TEST
// load handle	WITHOUT_CLASSIFICATION	0.999990155958694	WITHOUT_CLASSIFICATION	9.844041306062745E-6	TEST
// args array	WITHOUT_CLASSIFICATION	0.9999926477400393	WITHOUT_CLASSIFICATION	7.352259960757379E-6	TEST
// i'th argument	WITHOUT_CLASSIFICATION	0.999992893303448	WITHOUT_CLASSIFICATION	7.106696552047353E-6	TEST
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.999972874189411	WITHOUT_CLASSIFICATION	2.7125810589038466E-5	TEST
// Object arg0	WITHOUT_CLASSIFICATION	0.9999917869396617	WITHOUT_CLASSIFICATION	8.213060338315174E-6	TEST
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999855925224922	WITHOUT_CLASSIFICATION	1.4407477507735309E-5	TEST
// No editing before startPos	WITHOUT_CLASSIFICATION	0.99996561423549	WITHOUT_CLASSIFICATION	3.4385764510009874E-5	TEST
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999955600627661	WITHOUT_CLASSIFICATION	4.439937233795279E-6	TEST
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999903596884994	WITHOUT_CLASSIFICATION	9.640311500675757E-6	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999155016746338	WITHOUT_CLASSIFICATION	8.449832536608313E-5	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999971849525472	WITHOUT_CLASSIFICATION	2.815047452739872E-6	TEST
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999916881296343	WITHOUT_CLASSIFICATION	8.311870365609732E-6	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999357739919152	WITHOUT_CLASSIFICATION	6.42260080846873E-5	TEST
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.999820240161579	WITHOUT_CLASSIFICATION	1.7975983842094772E-4	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999927465814	WITHOUT_CLASSIFICATION	7.253418600077848E-6	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999970827087914	WITHOUT_CLASSIFICATION	2.9172912086448926E-6	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999970827087914	WITHOUT_CLASSIFICATION	2.9172912086448926E-6	TEST
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999325206795195	WITHOUT_CLASSIFICATION	6.747932048046313E-5	TEST
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9998364588957818	WITHOUT_CLASSIFICATION	1.6354110421818433E-4	TEST
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999975073877173	WITHOUT_CLASSIFICATION	2.4926122826642927E-6	TEST
// restore position	WITHOUT_CLASSIFICATION	0.9999926190809323	WITHOUT_CLASSIFICATION	7.3809190677866934E-6	TEST
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999996139373296	WITHOUT_CLASSIFICATION	3.860626703542081E-7	TEST
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999972424854626	WITHOUT_CLASSIFICATION	2.7575145373623073E-6	TEST
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999987381219273	WITHOUT_CLASSIFICATION	1.2618780727015421E-6	TEST
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9987854892546927	WITHOUT_CLASSIFICATION	0.0012145107453074278	TEST
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9998930587046528	WITHOUT_CLASSIFICATION	1.0694129534715853E-4	TEST
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999800089207649	WITHOUT_CLASSIFICATION	1.9991079235136192E-5	TEST
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999741079764032	WITHOUT_CLASSIFICATION	2.5892023596801215E-5	TEST
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999616433794104	WITHOUT_CLASSIFICATION	3.8356620589655284E-5	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999737956714608	WITHOUT_CLASSIFICATION	2.620432853919933E-5	TEST
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999655709355353	WITHOUT_CLASSIFICATION	3.442906446475166E-5	TEST
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9998880098070795	WITHOUT_CLASSIFICATION	1.119901929205292E-4	TEST
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999859108624686	WITHOUT_CLASSIFICATION	1.4089137531477057E-5	TEST
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999917301808202	WITHOUT_CLASSIFICATION	8.269819179871406E-6	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.999988914686373	WITHOUT_CLASSIFICATION	1.1085313626937696E-5	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999547415370386	WITHOUT_CLASSIFICATION	4.525846296144939E-5	TEST
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999918540126576	WITHOUT_CLASSIFICATION	8.14598734241489E-6	TEST
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.999998220054	WITHOUT_CLASSIFICATION	1.7799460001287517E-6	TEST
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999820882921456	WITHOUT_CLASSIFICATION	1.791170785437015E-5	TEST
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.999999779824832	WITHOUT_CLASSIFICATION	2.2017516806607458E-7	TEST
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999946996851238	WITHOUT_CLASSIFICATION	5.300314876211444E-6	TEST
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999820337929397	WITHOUT_CLASSIFICATION	1.7966207060251652E-5	TEST
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9998926457739267	WITHOUT_CLASSIFICATION	1.0735422607332086E-4	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9992954679758798	WITHOUT_CLASSIFICATION	7.045320241202173E-4	TEST
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999950273680808	WITHOUT_CLASSIFICATION	4.972631919198475E-6	TEST
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999905378409387	WITHOUT_CLASSIFICATION	9.462159061228932E-6	TEST
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999961282418548	WITHOUT_CLASSIFICATION	3.871758145230597E-6	TEST
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999923664097774	WITHOUT_CLASSIFICATION	7.633590222575807E-6	TEST
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999799708012904	WITHOUT_CLASSIFICATION	2.0029198709537168E-5	TEST
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999749561735722	WITHOUT_CLASSIFICATION	2.5043826427729206E-5	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999622020932898	WITHOUT_CLASSIFICATION	3.779790671029053E-5	TEST
// $blah	WITHOUT_CLASSIFICATION	0.9999184955562991	WITHOUT_CLASSIFICATION	8.150444370085729E-5	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9992954679758798	WITHOUT_CLASSIFICATION	7.045320241202173E-4	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999941997568407	WITHOUT_CLASSIFICATION	5.800243159332825E-6	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999622020932898	WITHOUT_CLASSIFICATION	3.779790671029053E-5	TEST
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999620390149451	WITHOUT_CLASSIFICATION	3.7960985054927176E-5	TEST
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999920038215535	WITHOUT_CLASSIFICATION	7.996178446491534E-6	TEST
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999980258449842	WITHOUT_CLASSIFICATION	1.9741550158433255E-6	TEST
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999775327166049	WITHOUT_CLASSIFICATION	2.2467283395030625E-5	TEST
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999713373741084	WITHOUT_CLASSIFICATION	2.866262589153427E-5	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999985153433734	WITHOUT_CLASSIFICATION	1.484656626685788E-6	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999985153433734	WITHOUT_CLASSIFICATION	1.484656626685788E-6	TEST
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9998947862804353	WITHOUT_CLASSIFICATION	1.0521371956480052E-4	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999988621549376	WITHOUT_CLASSIFICATION	1.137845062388262E-6	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999957110813241	WITHOUT_CLASSIFICATION	4.288918675831202E-6	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999957110813241	WITHOUT_CLASSIFICATION	4.288918675831202E-6	TEST
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999999831405457	WITHOUT_CLASSIFICATION	1.685945417573871E-8	TEST
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9996126367327413	WITHOUT_CLASSIFICATION	3.873632672586792E-4	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999763909570848	WITHOUT_CLASSIFICATION	2.36090429152955E-5	TEST
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999945350630243	WITHOUT_CLASSIFICATION	5.464936975825448E-6	TEST
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999996329508215	WITHOUT_CLASSIFICATION	3.670491785134151E-7	TEST
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.999989257335374	WITHOUT_CLASSIFICATION	1.074266462596996E-5	TEST
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.999740994256509	WITHOUT_CLASSIFICATION	2.5900574349106074E-4	TEST
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999921433526381	WITHOUT_CLASSIFICATION	7.856647361918526E-6	TEST
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999938321567389	WITHOUT_CLASSIFICATION	6.167843261104342E-6	TEST
// host and port given	WITHOUT_CLASSIFICATION	0.9999980650365858	WITHOUT_CLASSIFICATION	1.934963414170815E-6	TEST
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.999980440301253	WITHOUT_CLASSIFICATION	1.9559698747021297E-5	TEST
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9994822429007935	WITHOUT_CLASSIFICATION	5.177570992064958E-4	TEST
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9998062080653543	WITHOUT_CLASSIFICATION	1.937919346456345E-4	TEST
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999813886554891	WITHOUT_CLASSIFICATION	1.8611344510816967E-5	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999620878379993	WITHOUT_CLASSIFICATION	3.791216200060251E-5	TEST
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999916445936485	WITHOUT_CLASSIFICATION	8.355406351455484E-6	TEST
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9999637250945443	WITHOUT_CLASSIFICATION	3.627490545559476E-5	TEST
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999639816253614	WITHOUT_CLASSIFICATION	3.601837463858938E-5	TEST
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9998598828217224	WITHOUT_CLASSIFICATION	1.4011717827765708E-4	TEST
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999688628296564	WITHOUT_CLASSIFICATION	3.113717034370344E-5	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.9999184955562991	WITHOUT_CLASSIFICATION	8.150444370085729E-5	TEST
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999184955562991	WITHOUT_CLASSIFICATION	8.150444370085729E-5	TEST
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9998355665317139	WITHOUT_CLASSIFICATION	1.6443346828603442E-4	TEST
// line 323	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.999990065422338	WITHOUT_CLASSIFICATION	9.93457766195077E-6	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.999990065422338	WITHOUT_CLASSIFICATION	9.93457766195077E-6	TEST
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999995633789855	WITHOUT_CLASSIFICATION	4.366210144428583E-7	TEST
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999854197634271	WITHOUT_CLASSIFICATION	1.4580236572840354E-5	TEST
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9998318440525487	WITHOUT_CLASSIFICATION	1.6815594745138335E-4	TEST
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999910865983115	WITHOUT_CLASSIFICATION	8.913401688614428E-6	TEST
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9998813018470744	WITHOUT_CLASSIFICATION	1.1869815292566632E-4	TEST
// RubySocket	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999354527922795	WITHOUT_CLASSIFICATION	6.454720772054052E-5	TEST
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999494448426888	WITHOUT_CLASSIFICATION	5.055515731135422E-5	TEST
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999989330374995	WITHOUT_CLASSIFICATION	1.0669625005013142E-6	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999933975649867	WITHOUT_CLASSIFICATION	6.60243501337578E-6	TEST
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999905304991153	WITHOUT_CLASSIFICATION	9.469500884675105E-6	TEST
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999946871430727	WITHOUT_CLASSIFICATION	5.3128569272661425E-6	TEST
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9996126367327413	WITHOUT_CLASSIFICATION	3.873632672586792E-4	TEST
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999771920482337	WITHOUT_CLASSIFICATION	2.280795176638945E-5	TEST
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999783514340647	WITHOUT_CLASSIFICATION	2.1648565935322782E-5	TEST
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999942252374883	WITHOUT_CLASSIFICATION	5.774762511753433E-6	TEST
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999759547137366	WITHOUT_CLASSIFICATION	2.4045286263391285E-5	TEST
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999921641153694	WITHOUT_CLASSIFICATION	7.835884630587383E-6	TEST
// be dead	WITHOUT_CLASSIFICATION	0.9999438114474135	WITHOUT_CLASSIFICATION	5.61885525865663E-5	TEST
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999969910106568	WITHOUT_CLASSIFICATION	3.0089893431854565E-6	TEST
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999928711713599	WITHOUT_CLASSIFICATION	7.128828639967479E-6	TEST
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9995848367429416	WITHOUT_CLASSIFICATION	4.1516325705838854E-4	TEST
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9992907794071928	WITHOUT_CLASSIFICATION	7.09220592807271E-4	TEST
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999919197828042	WITHOUT_CLASSIFICATION	8.080217195793293E-6	TEST
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999993535647569	WITHOUT_CLASSIFICATION	6.464352431454611E-7	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999131686404515	WITHOUT_CLASSIFICATION	8.68313595484024E-5	TEST
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9997878453817255	WITHOUT_CLASSIFICATION	2.1215461827451333E-4	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999949560609203	WITHOUT_CLASSIFICATION	5.043939079705083E-6	TEST
// main body	WITHOUT_CLASSIFICATION	0.999992958526519	WITHOUT_CLASSIFICATION	7.041473480931533E-6	TEST
// return jump handling	WITHOUT_CLASSIFICATION	0.9999919119385153	WITHOUT_CLASSIFICATION	8.088061484559363E-6	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999186952926866	WITHOUT_CLASSIFICATION	8.130470731340234E-5	TEST
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999898872891868	WITHOUT_CLASSIFICATION	1.011271081321647E-5	TEST
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999844517705198	WITHOUT_CLASSIFICATION	1.5548229480246716E-5	TEST
// clear the redo	WITHOUT_CLASSIFICATION	0.9999975164763598	WITHOUT_CLASSIFICATION	2.483523640171685E-6	TEST
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999915559963486	WITHOUT_CLASSIFICATION	8.444003651421778E-6	TEST
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999888516024374	WITHOUT_CLASSIFICATION	1.1148397562657624E-5	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999565155129694	WITHOUT_CLASSIFICATION	4.348448703062331E-5	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9998938225655619	WITHOUT_CLASSIFICATION	1.0617743443812486E-4	TEST
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999618495820185	WITHOUT_CLASSIFICATION	3.815041798145699E-5	TEST
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.999924216028763	WITHOUT_CLASSIFICATION	7.578397123699495E-5	TEST
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999508175503964	WITHOUT_CLASSIFICATION	4.918244960360124E-5	TEST
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999915611107665	WITHOUT_CLASSIFICATION	8.438889233539362E-6	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999919909890902	WITHOUT_CLASSIFICATION	8.009010909932994E-6	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999919909890902	WITHOUT_CLASSIFICATION	8.009010909932994E-6	TEST
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999947508781247	WITHOUT_CLASSIFICATION	5.249121875218003E-6	TEST
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.99998579587229	WITHOUT_CLASSIFICATION	1.4204127710052882E-5	TEST
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999792611434114	WITHOUT_CLASSIFICATION	2.0738856588682025E-5	TEST
// return	WITHOUT_CLASSIFICATION	0.9999577502566471	WITHOUT_CLASSIFICATION	4.22497433529157E-5	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999911836057044	WITHOUT_CLASSIFICATION	8.816394295701116E-6	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999903677314933	WITHOUT_CLASSIFICATION	9.632268506695787E-6	TEST
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999653800659263	WITHOUT_CLASSIFICATION	3.461993407382673E-5	TEST
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999121346714451	WITHOUT_CLASSIFICATION	8.786532855486314E-5	TEST
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9998525258862158	WITHOUT_CLASSIFICATION	1.474741137842315E-4	TEST
// tc	WITHOUT_CLASSIFICATION	0.9999184955562991	WITHOUT_CLASSIFICATION	8.150444370085729E-5	TEST
// self // name	WITHOUT_CLASSIFICATION	0.9999812066879531	WITHOUT_CLASSIFICATION	1.879331204682385E-5	TEST
// no args	WITHOUT_CLASSIFICATION	0.999956954935755	WITHOUT_CLASSIFICATION	4.3045064244927404E-5	TEST
// variable args with block	WITHOUT_CLASSIFICATION	0.9998876280457799	WITHOUT_CLASSIFICATION	1.1237195422004314E-4	TEST
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999792351885185	WITHOUT_CLASSIFICATION	2.0764811481516982E-5	TEST
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999978525310312	WITHOUT_CLASSIFICATION	2.1474689687937225E-5	TEST
// one arg with block	WITHOUT_CLASSIFICATION	0.999931678473633	WITHOUT_CLASSIFICATION	6.832152636698629E-5	TEST
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999805846995757	WITHOUT_CLASSIFICATION	1.9415300424293146E-5	TEST
// two args with block	WITHOUT_CLASSIFICATION	0.9999007461887723	WITHOUT_CLASSIFICATION	9.925381122759402E-5	TEST
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999971487760923	WITHOUT_CLASSIFICATION	2.8512239076868868E-5	TEST
// three args with block	WITHOUT_CLASSIFICATION	0.9999070326491736	WITHOUT_CLASSIFICATION	9.296735082647721E-5	TEST
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999732937665314	WITHOUT_CLASSIFICATION	2.67062334685788E-5	TEST
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9998806094468626	WITHOUT_CLASSIFICATION	1.1939055313731859E-4	TEST
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9998106295744162	WITHOUT_CLASSIFICATION	1.893704255836614E-4	TEST
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999664677442813	WITHOUT_CLASSIFICATION	3.353225571872335E-5	TEST
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.999980307069805	WITHOUT_CLASSIFICATION	1.969293019499091E-5	TEST
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999710800529205	WITHOUT_CLASSIFICATION	2.8919947079470758E-5	TEST
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999729118826316	WITHOUT_CLASSIFICATION	2.7088117368377406E-5	TEST
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999854746449736	WITHOUT_CLASSIFICATION	1.4525355026395048E-5	TEST
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999758435632686	WITHOUT_CLASSIFICATION	2.4156436731320074E-5	TEST
// static invocation	WITHOUT_CLASSIFICATION	0.9999928469778595	WITHOUT_CLASSIFICATION	7.153022140533049E-6	TEST
// virtual invocation	WITHOUT_CLASSIFICATION	0.999982326425816	WITHOUT_CLASSIFICATION	1.76735741840243E-5	TEST
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9996910243776552	WITHOUT_CLASSIFICATION	3.0897562234480635E-4	TEST
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999966648252383	WITHOUT_CLASSIFICATION	3.3351747617791213E-6	TEST
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999812713620728	WITHOUT_CLASSIFICATION	1.872863792715008E-5	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9998938225655619	WITHOUT_CLASSIFICATION	1.0617743443812486E-4	TEST
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999290431345665	WITHOUT_CLASSIFICATION	7.095686543337465E-5	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999767453710419	WITHOUT_CLASSIFICATION	2.3254628958091783E-5	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999767453710419	WITHOUT_CLASSIFICATION	2.3254628958091783E-5	TEST
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999844746745867	WITHOUT_CLASSIFICATION	1.5525325413220402E-5	TEST
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999593073603775	WITHOUT_CLASSIFICATION	4.0692639622462596E-5	TEST
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999820337929397	WITHOUT_CLASSIFICATION	1.7966207060251652E-5	TEST
// never reached	WITHOUT_CLASSIFICATION	0.9999927675502976	WITHOUT_CLASSIFICATION	7.232449702291912E-6	TEST
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9998633474645606	WITHOUT_CLASSIFICATION	1.3665253543931576E-4	TEST
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9998905413625463	WITHOUT_CLASSIFICATION	1.0945863745367874E-4	TEST
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9999011503450094	WITHOUT_CLASSIFICATION	9.884965499061498E-5	TEST
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9998546744609954	WITHOUT_CLASSIFICATION	1.4532553900452729E-4	TEST
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.999890966796785	WITHOUT_CLASSIFICATION	1.0903320321492825E-4	TEST
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9999015345492455	WITHOUT_CLASSIFICATION	9.846545075452173E-5	TEST
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9998552392793812	WITHOUT_CLASSIFICATION	1.4476072061879905E-4	TEST
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9998638785792698	WITHOUT_CLASSIFICATION	1.3612142073014417E-4	TEST
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999879869824055	WITHOUT_CLASSIFICATION	1.2013017594485209E-5	TEST
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.999961277504427	WITHOUT_CLASSIFICATION	3.8722495573075245E-5	TEST
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999937639930232	WITHOUT_CLASSIFICATION	6.236006976801716E-6	TEST
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999906492910817	WITHOUT_CLASSIFICATION	9.350708918298857E-6	TEST
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999724647299485	WITHOUT_CLASSIFICATION	2.7535270051560117E-5	TEST
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9999742088545509	WITHOUT_CLASSIFICATION	2.5791145449057923E-5	TEST
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999793417565058	WITHOUT_CLASSIFICATION	2.065824349418659E-5	TEST
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999813441614808	WITHOUT_CLASSIFICATION	1.8655838519151063E-5	TEST
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9999725717603573	WITHOUT_CLASSIFICATION	2.7428239642750463E-5	TEST
// promise to implement three	WITHOUT_CLASSIFICATION	0.999988033678082	WITHOUT_CLASSIFICATION	1.1966321917900232E-5	TEST
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999874577713939	WITHOUT_CLASSIFICATION	1.254222860606444E-5	TEST
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999834910746758	WITHOUT_CLASSIFICATION	1.6508925324193142E-5	TEST
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999986737940554	WITHOUT_CLASSIFICATION	1.3262059447142411E-6	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999926228589711	WITHOUT_CLASSIFICATION	7.37714102904915E-6	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999751452762415	WITHOUT_CLASSIFICATION	2.4854723758539367E-5	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999877167138742	WITHOUT_CLASSIFICATION	1.2283286125734108E-5	TEST
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999982401246026	WITHOUT_CLASSIFICATION	1.7598753973888115E-6	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999951997037081	WITHOUT_CLASSIFICATION	4.800296291869278E-6	TEST
// start setup method	WITHOUT_CLASSIFICATION	0.9999956724464332	WITHOUT_CLASSIFICATION	4.3275535668268306E-6	TEST
// set RubyClass	WITHOUT_CLASSIFICATION	0.999994647766405	WITHOUT_CLASSIFICATION	5.352233595062014E-6	TEST
// set Ruby	WITHOUT_CLASSIFICATION	0.999994647766405	WITHOUT_CLASSIFICATION	5.352233595062014E-6	TEST
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999947831341357	WITHOUT_CLASSIFICATION	5.216865864257069E-6	TEST
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.999928044805563	WITHOUT_CLASSIFICATION	7.195519443698039E-5	TEST
// get current context	WITHOUT_CLASSIFICATION	0.999994276465305	WITHOUT_CLASSIFICATION	5.723534694932288E-6	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999893879329933	WITHOUT_CLASSIFICATION	1.0612067006596646E-5	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999926228589711	WITHOUT_CLASSIFICATION	7.37714102904915E-6	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999751452762415	WITHOUT_CLASSIFICATION	2.4854723758539367E-5	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999877167138742	WITHOUT_CLASSIFICATION	1.2283286125734108E-5	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999951997037081	WITHOUT_CLASSIFICATION	4.800296291869278E-6	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999935280533371	WITHOUT_CLASSIFICATION	6.471946663007676E-6	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999511637364409	WITHOUT_CLASSIFICATION	4.883626355901841E-5	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999944740290196	WITHOUT_CLASSIFICATION	5.525970980426742E-6	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999930127679774	WITHOUT_CLASSIFICATION	6.987232022695694E-6	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.999997543017678	WITHOUT_CLASSIFICATION	2.456982322045579E-6	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999466115342981	WITHOUT_CLASSIFICATION	5.338846570178917E-5	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.9999982629106633	WITHOUT_CLASSIFICATION	1.7370893367134323E-6	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999965682584233	WITHOUT_CLASSIFICATION	3.4317415766417475E-6	TEST
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999692813043554	WITHOUT_CLASSIFICATION	3.071869564467774E-5	TEST
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999979279597975	WITHOUT_CLASSIFICATION	2.0720402024882914E-6	TEST
// prepare temp locals	WITHOUT_CLASSIFICATION	0.999983078516147	WITHOUT_CLASSIFICATION	1.6921483853044866E-5	TEST
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999939735723836	WITHOUT_CLASSIFICATION	6.02642761628583E-6	TEST
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999978945531067	WITHOUT_CLASSIFICATION	2.1054468933437043E-6	TEST
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999921961365139	WITHOUT_CLASSIFICATION	7.80386348619073E-6	TEST
// store it	WITHOUT_CLASSIFICATION	0.9999814394194417	WITHOUT_CLASSIFICATION	1.8560580558258126E-5	TEST
// end of try block	WITHOUT_CLASSIFICATION	0.9999963321841299	WITHOUT_CLASSIFICATION	3.6678158701070006E-6	TEST
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999856509518683	WITHOUT_CLASSIFICATION	1.434904813158302E-5	TEST
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999369765455257	WITHOUT_CLASSIFICATION	6.30234544743185E-5	TEST
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999901068127356	WITHOUT_CLASSIFICATION	9.893187264480264E-6	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999893879329933	WITHOUT_CLASSIFICATION	1.0612067006596646E-5	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999511637364409	WITHOUT_CLASSIFICATION	4.883626355901841E-5	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999944740290196	WITHOUT_CLASSIFICATION	5.525970980426742E-6	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.999997543017678	WITHOUT_CLASSIFICATION	2.456982322045579E-6	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999466115342981	WITHOUT_CLASSIFICATION	5.338846570178917E-5	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.9999982629106633	WITHOUT_CLASSIFICATION	1.7370893367134323E-6	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999965682584233	WITHOUT_CLASSIFICATION	3.4317415766417475E-6	TEST
// create the class	WITHOUT_CLASSIFICATION	0.999998650412416	WITHOUT_CLASSIFICATION	1.3495875839804965E-6	TEST
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999871641349961	WITHOUT_CLASSIFICATION	1.2835865003961556E-5	TEST
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999940811745772	WITHOUT_CLASSIFICATION	5.918825422832889E-6	TEST
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999968355189536	WITHOUT_CLASSIFICATION	3.1644810463810585E-6	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999627354355171	WITHOUT_CLASSIFICATION	3.7264564482969856E-5	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999627354355171	WITHOUT_CLASSIFICATION	3.7264564482969856E-5	TEST
// setup the class	WITHOUT_CLASSIFICATION	0.9999984367462491	WITHOUT_CLASSIFICATION	1.5632537509712377E-6	TEST
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999982773442624	WITHOUT_CLASSIFICATION	1.7226557377087329E-6	TEST
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999926746698496	WITHOUT_CLASSIFICATION	7.325330150237237E-6	TEST
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999937370299615	WITHOUT_CLASSIFICATION	6.262970038463261E-6	TEST
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999945721163982	WITHOUT_CLASSIFICATION	5.427883601782489E-6	TEST
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999989027764188	WITHOUT_CLASSIFICATION	1.0972235811932276E-6	TEST
// set the full name	WITHOUT_CLASSIFICATION	0.9999796623737153	WITHOUT_CLASSIFICATION	2.0337626284727107E-5	TEST
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999898458767142	WITHOUT_CLASSIFICATION	1.0154123285709173E-5	TEST
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999690296859934	WITHOUT_CLASSIFICATION	3.0970314006490816E-5	TEST
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999078245465752	WITHOUT_CLASSIFICATION	9.217545342483661E-5	TEST
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999418371250083	WITHOUT_CLASSIFICATION	5.816287499181337E-5	TEST
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999921644637997	WITHOUT_CLASSIFICATION	7.835536200428305E-6	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9998713500209053	WITHOUT_CLASSIFICATION	1.286499790946975E-4	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999778201782471	WITHOUT_CLASSIFICATION	2.2179821752985214E-5	TEST
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999743950014002	WITHOUT_CLASSIFICATION	2.5604998599829215E-5	TEST
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999570030363477	WITHOUT_CLASSIFICATION	4.299696365224691E-5	TEST
// add all static variables	WITHOUT_CLASSIFICATION	0.9999719299435286	WITHOUT_CLASSIFICATION	2.8070056471315224E-5	TEST
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999727610961473	WITHOUT_CLASSIFICATION	2.723890385277045E-5	TEST
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999964310065637	WITHOUT_CLASSIFICATION	3.5689934362792726E-6	TEST
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999990543091748	WITHOUT_CLASSIFICATION	9.456908252489325E-7	TEST
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9991170285879566	WITHOUT_CLASSIFICATION	8.829714120433989E-4	TEST
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999947498177596	WITHOUT_CLASSIFICATION	5.250182240410571E-6	TEST
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999974028141204	WITHOUT_CLASSIFICATION	2.5971858796605663E-6	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9981938215629355	WITHOUT_CLASSIFICATION	0.0018061784370645502	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999988551998951	WITHOUT_CLASSIFICATION	1.1448001050079696E-6	TEST
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999993665994936	WITHOUT_CLASSIFICATION	6.334005063078232E-7	TEST
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9998195626882426	WITHOUT_CLASSIFICATION	1.8043731175750567E-4	TEST
// line 326	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999988551998951	WITHOUT_CLASSIFICATION	1.1448001050079696E-6	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999778201782471	WITHOUT_CLASSIFICATION	2.2179821752985214E-5	TEST
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999274301851464	WITHOUT_CLASSIFICATION	7.25698148536306E-5	TEST
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999920783548157	WITHOUT_CLASSIFICATION	7.921645184331127E-6	TEST
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999909232156751	WITHOUT_CLASSIFICATION	9.076784324912056E-6	TEST
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999973508254295	WITHOUT_CLASSIFICATION	2.649174570519821E-6	TEST
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999919035040058	WITHOUT_CLASSIFICATION	8.09649599420807E-6	TEST
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999737963948493	WITHOUT_CLASSIFICATION	2.6203605150741783E-5	TEST
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9998504335919984	WITHOUT_CLASSIFICATION	1.4956640800164097E-4	TEST
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999531033113113	WITHOUT_CLASSIFICATION	4.6896688688624865E-5	TEST
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9993249793863657	WITHOUT_CLASSIFICATION	6.750206136344247E-4	TEST
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.999843636195512	WITHOUT_CLASSIFICATION	1.5636380448800613E-4	TEST
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.999998720626701	WITHOUT_CLASSIFICATION	1.279373298986939E-6	TEST
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999567987845789	WITHOUT_CLASSIFICATION	4.320121542117073E-5	TEST
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999087492670423	WITHOUT_CLASSIFICATION	9.125073295770199E-5	TEST
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999982750295616	WITHOUT_CLASSIFICATION	1.7249704383973873E-6	TEST
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999975211126385	WITHOUT_CLASSIFICATION	2.478887361383412E-6	TEST
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999759662763295	WITHOUT_CLASSIFICATION	2.4033723670596194E-5	TEST
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999986415325869	WITHOUT_CLASSIFICATION	1.3584674130329515E-6	TEST
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9999757031498393	WITHOUT_CLASSIFICATION	2.42968501606389E-5	TEST
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999980487898127	WITHOUT_CLASSIFICATION	1.9512101872916612E-6	TEST
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999770095499595	WITHOUT_CLASSIFICATION	2.29904500405623E-5	TEST
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.999992428058241	WITHOUT_CLASSIFICATION	7.571941759086997E-6	TEST
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999771672450297	WITHOUT_CLASSIFICATION	2.2832754970220093E-5	TEST
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999480618780282	WITHOUT_CLASSIFICATION	5.193812197176341E-5	TEST
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999999053609506	WITHOUT_CLASSIFICATION	9.463904937761484E-8	TEST
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999965374882661	WITHOUT_CLASSIFICATION	3.4625117339206155E-6	TEST
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.999961277504427	WITHOUT_CLASSIFICATION	3.8722495573075245E-5	TEST
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9996696959738648	WITHOUT_CLASSIFICATION	3.303040261352525E-4	TEST
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9997846663679674	WITHOUT_CLASSIFICATION	2.15333632032561E-4	TEST
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999367648521306	WITHOUT_CLASSIFICATION	6.323514786944667E-5	TEST
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.999987715304124	WITHOUT_CLASSIFICATION	1.2284695875976218E-5	TEST
// add reference to interface module	WITHOUT_CLASSIFICATION	0.999973390943572	WITHOUT_CLASSIFICATION	2.660905642805689E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.99999640889525	WITHOUT_CLASSIFICATION	3.591104749988133E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.99999640889525	WITHOUT_CLASSIFICATION	3.591104749988133E-6	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9998713500209053	WITHOUT_CLASSIFICATION	1.286499790946975E-4	TEST
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.999982961898327	WITHOUT_CLASSIFICATION	1.7038101672892553E-5	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999543951246441	WITHOUT_CLASSIFICATION	4.560487535577382E-5	TEST
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999816196878922	WITHOUT_CLASSIFICATION	1.838031210772806E-5	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999798726154672	WITHOUT_CLASSIFICATION	2.0127384532768334E-5	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999798726154672	WITHOUT_CLASSIFICATION	2.0127384532768334E-5	TEST
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999753361117191	WITHOUT_CLASSIFICATION	2.466388828088383E-5	TEST
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999839004300448	WITHOUT_CLASSIFICATION	1.6099569955233467E-5	TEST
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999847002139969	WITHOUT_CLASSIFICATION	1.5299786003146043E-5	TEST
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999767933456819	WITHOUT_CLASSIFICATION	2.3206654318009206E-5	TEST
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9998558757513515	WITHOUT_CLASSIFICATION	1.4412424864856203E-4	TEST
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999983260712272	WITHOUT_CLASSIFICATION	1.6739287728338139E-6	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999860886022317	WITHOUT_CLASSIFICATION	1.3911397768291928E-5	TEST
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999945229071124	WITHOUT_CLASSIFICATION	5.477092887544141E-6	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999190967022792	WITHOUT_CLASSIFICATION	8.090329772085988E-5	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999352431368962	WITHOUT_CLASSIFICATION	6.475686310378345E-5	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999515077932493	WITHOUT_CLASSIFICATION	4.8492206750835605E-5	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999827676974272	WITHOUT_CLASSIFICATION	1.7232302572696936E-5	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999628730512927	WITHOUT_CLASSIFICATION	3.712694870729336E-5	TEST
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999962473197646	WITHOUT_CLASSIFICATION	3.7526802354153164E-6	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.999961277504427	WITHOUT_CLASSIFICATION	3.8722495573075245E-5	TEST
// something?	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999796050875343	WITHOUT_CLASSIFICATION	2.0394912465810146E-5	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999796050875343	WITHOUT_CLASSIFICATION	2.0394912465810146E-5	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999856081365036	WITHOUT_CLASSIFICATION	1.4391863496388516E-5	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999856081365036	WITHOUT_CLASSIFICATION	1.4391863496388516E-5	TEST
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999761111751851	WITHOUT_CLASSIFICATION	2.3888824814870483E-5	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999651025098744	WITHOUT_CLASSIFICATION	3.489749012561885E-5	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999556346743743	WITHOUT_CLASSIFICATION	4.436532562564411E-5	TEST
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999810291642934	WITHOUT_CLASSIFICATION	1.8970835706572357E-5	TEST
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999850977176459	WITHOUT_CLASSIFICATION	1.4902282354103877E-5	TEST
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999828628476436	WITHOUT_CLASSIFICATION	1.7137152356372966E-5	TEST
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999557225337835	WITHOUT_CLASSIFICATION	4.427746621653209E-5	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999827676974272	WITHOUT_CLASSIFICATION	1.7232302572696936E-5	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999628730512927	WITHOUT_CLASSIFICATION	3.712694870729336E-5	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.999961277504427	WITHOUT_CLASSIFICATION	3.8722495573075245E-5	TEST
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999597010296634	WITHOUT_CLASSIFICATION	4.029897033670387E-5	TEST
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9997862784199032	WITHOUT_CLASSIFICATION	2.1372158009685773E-4	TEST
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999988073672188	WITHOUT_CLASSIFICATION	1.1926327811546227E-6	TEST
// see note above re: return type	WITHOUT_CLASSIFICATION	0.999963769567963	WITHOUT_CLASSIFICATION	3.623043203709188E-5	TEST
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999612781241491	WITHOUT_CLASSIFICATION	3.872187585093532E-5	TEST
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999178859120001	WITHOUT_CLASSIFICATION	8.211408799973865E-5	TEST
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999837843395256	WITHOUT_CLASSIFICATION	1.6215660474470552E-5	TEST
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999837843395256	WITHOUT_CLASSIFICATION	1.6215660474470552E-5	TEST
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999743270800284	WITHOUT_CLASSIFICATION	2.567291997159004E-5	TEST
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999658122941384	WITHOUT_CLASSIFICATION	3.418770586166647E-5	TEST
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999963410113579	WITHOUT_CLASSIFICATION	3.6589886421355694E-6	TEST
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999698413255343	WITHOUT_CLASSIFICATION	3.0158674465624947E-5	TEST
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999628592543975	WITHOUT_CLASSIFICATION	3.7140745602421905E-5	TEST
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9994506690858869	WITHOUT_CLASSIFICATION	5.493309141132423E-4	TEST
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9999962625975026	WITHOUT_CLASSIFICATION	3.737402497422197E-6	TEST
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999960056501438	WITHOUT_CLASSIFICATION	3.994349856185754E-6	TEST
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999935208002514	WITHOUT_CLASSIFICATION	6.479199748645851E-6	TEST
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999442476497333	WITHOUT_CLASSIFICATION	5.575235026652566E-5	TEST
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999947579375097	WITHOUT_CLASSIFICATION	5.242062490326893E-6	TEST
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.999997386610711	WITHOUT_CLASSIFICATION	2.613389289031059E-6	TEST
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999846268024947	WITHOUT_CLASSIFICATION	1.537319750531108E-5	TEST
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999916275257684	WITHOUT_CLASSIFICATION	8.372474231665533E-6	TEST
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9996126367327413	WITHOUT_CLASSIFICATION	3.873632672586792E-4	TEST
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999931709382843	WITHOUT_CLASSIFICATION	6.8290617156594004E-6	TEST
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999644968660972	WITHOUT_CLASSIFICATION	3.550313390282231E-5	TEST
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999929017663862	WITHOUT_CLASSIFICATION	7.098233613737544E-6	TEST
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999229221481037	WITHOUT_CLASSIFICATION	7.707785189619066E-5	TEST
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9984365104250923	WITHOUT_CLASSIFICATION	0.0015634895749077555	TEST
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999949665268856	WITHOUT_CLASSIFICATION	5.033473114446399E-6	TEST
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9998458799461349	WITHOUT_CLASSIFICATION	1.5412005386511495E-4	TEST
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999598768366024	WITHOUT_CLASSIFICATION	4.012316339771186E-5	TEST
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999604570511167	WITHOUT_CLASSIFICATION	3.954294888335421E-5	TEST
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999595517625818	WITHOUT_CLASSIFICATION	4.0448237418131646E-5	TEST
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999967696160716	WITHOUT_CLASSIFICATION	3.230383928506119E-6	TEST
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999961696958076	WITHOUT_CLASSIFICATION	3.830304192381547E-6	TEST
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999101844286422	WITHOUT_CLASSIFICATION	8.981557135770948E-5	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999929685966624	WITHOUT_CLASSIFICATION	7.031403337537215E-6	TEST
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999957766689541	WITHOUT_CLASSIFICATION	4.223331045898573E-6	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999836540256225	WITHOUT_CLASSIFICATION	1.634597437750677E-5	TEST
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999840779194479	WITHOUT_CLASSIFICATION	1.592208055210813E-5	TEST
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999782690002011	WITHOUT_CLASSIFICATION	2.173099979888917E-5	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999543951246441	WITHOUT_CLASSIFICATION	4.560487535577382E-5	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999929685966624	WITHOUT_CLASSIFICATION	7.031403337537215E-6	TEST
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9998553085885284	WITHOUT_CLASSIFICATION	1.4469141147152036E-4	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999998279987303	WITHOUT_CLASSIFICATION	1.7200126965916697E-7	TEST
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999856042225315	WITHOUT_CLASSIFICATION	1.4395777468442497E-5	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9998808632247588	WITHOUT_CLASSIFICATION	1.1913677524132108E-4	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9998808632247588	WITHOUT_CLASSIFICATION	1.1913677524132108E-4	TEST
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999180072210719	WITHOUT_CLASSIFICATION	8.199277892800765E-5	TEST
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999920851707834	WITHOUT_CLASSIFICATION	7.914829216629884E-6	TEST
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999995302224567	WITHOUT_CLASSIFICATION	4.697775433657451E-7	TEST
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999997811928923	WITHOUT_CLASSIFICATION	2.1880710775016965E-7	TEST
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9999522183016659	WITHOUT_CLASSIFICATION	4.7781698334124145E-5	TEST
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999619185327799	WITHOUT_CLASSIFICATION	3.8081467220143146E-5	TEST
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9997853276631147	WITHOUT_CLASSIFICATION	2.146723368853838E-4	TEST
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9998867373557071	WITHOUT_CLASSIFICATION	1.1326264429292577E-4	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999786569351121	WITHOUT_CLASSIFICATION	2.1343064887903423E-5	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999786569351121	WITHOUT_CLASSIFICATION	2.1343064887903423E-5	TEST
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999926202797089	WITHOUT_CLASSIFICATION	7.379720291142207E-6	TEST
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9998533150948807	WITHOUT_CLASSIFICATION	1.466849051192385E-4	TEST
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999997703003424	WITHOUT_CLASSIFICATION	2.2969965759262E-7	TEST
// must be a public method	WITHOUT_CLASSIFICATION	0.999998602661832	WITHOUT_CLASSIFICATION	1.3973381679146893E-6	TEST
// must be a public class	WITHOUT_CLASSIFICATION	0.9999972924200238	WITHOUT_CLASSIFICATION	2.7075799761802028E-6	TEST
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999961773802535	WITHOUT_CLASSIFICATION	3.822619746526572E-6	TEST
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999119595547287	WITHOUT_CLASSIFICATION	8.804044527131092E-5	TEST
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.999998683252138	WITHOUT_CLASSIFICATION	1.3167478619375957E-6	TEST
// no matching method found	WITHOUT_CLASSIFICATION	0.9999976842811034	WITHOUT_CLASSIFICATION	2.315718896602882E-6	TEST
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9938251303509946	WITHOUT_CLASSIFICATION	0.006174869649005481	TEST
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999908610209514	WITHOUT_CLASSIFICATION	9.138979048721065E-6	TEST
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.999985558198732	WITHOUT_CLASSIFICATION	1.4441801267990063E-5	TEST
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999928285795057	WITHOUT_CLASSIFICATION	7.171420494302089E-6	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998209142679434	WITHOUT_CLASSIFICATION	1.7908573205654263E-4	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998209142679434	WITHOUT_CLASSIFICATION	1.7908573205654263E-4	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999792586465565	WITHOUT_CLASSIFICATION	2.0741353443582734E-5	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999965682584233	WITHOUT_CLASSIFICATION	3.4317415766417475E-6	TEST
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9938251303509946	WITHOUT_CLASSIFICATION	0.006174869649005481	TEST
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999951619190299	WITHOUT_CLASSIFICATION	4.838080969974757E-6	TEST
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999999103054389	WITHOUT_CLASSIFICATION	8.969456099476657E-8	TEST
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999992766618863	WITHOUT_CLASSIFICATION	7.233381137439812E-7	TEST
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999880270718811	WITHOUT_CLASSIFICATION	1.1972928118963885E-5	TEST
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999990716223803	WITHOUT_CLASSIFICATION	9.283776196684746E-7	TEST
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.99998827961053	WITHOUT_CLASSIFICATION	1.172038946987319E-5	TEST
/* package scope */	WITHOUT_CLASSIFICATION	0.9999846281443	WITHOUT_CLASSIFICATION	1.5371855700028978E-5	TEST
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999543951246441	WITHOUT_CLASSIFICATION	4.560487535577382E-5	TEST
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999858558668504	WITHOUT_CLASSIFICATION	1.4144133149748541E-5	TEST
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.999085712935178	WITHOUT_CLASSIFICATION	9.142870648220205E-4	TEST
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999890368359432	WITHOUT_CLASSIFICATION	1.0963164056769458E-5	TEST
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.999813955514151	WITHOUT_CLASSIFICATION	1.8604448584897152E-4	TEST
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999896373959596	WITHOUT_CLASSIFICATION	1.0362604040401907E-5	TEST
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.999997358781016	WITHOUT_CLASSIFICATION	2.6412189839979693E-6	TEST
// statically initialized below	WITHOUT_CLASSIFICATION	0.999860235978142	WITHOUT_CLASSIFICATION	1.3976402185793464E-4	TEST
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999897747842108	WITHOUT_CLASSIFICATION	1.0225215789225589E-5	TEST
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999908334468163	WITHOUT_CLASSIFICATION	9.166553183723514E-6	TEST
// should not happen!	WITHOUT_CLASSIFICATION	0.9998656233234319	WITHOUT_CLASSIFICATION	1.343766765680411E-4	TEST
// start class	WITHOUT_CLASSIFICATION	0.9999960615637197	WITHOUT_CLASSIFICATION	3.938436280348651E-6	TEST
// make getter for handler	WITHOUT_CLASSIFICATION	0.9999108591511832	WITHOUT_CLASSIFICATION	8.914084881690773E-5	TEST
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999488843941174	WITHOUT_CLASSIFICATION	5.11156058824246E-5	TEST
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.993445657081899	WITHOUT_CLASSIFICATION	0.0065543429181010365	TEST
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999729558697985	WITHOUT_CLASSIFICATION	2.7044130201507057E-5	TEST
// create static private method field	WITHOUT_CLASSIFICATION	0.9999929696453866	WITHOUT_CLASSIFICATION	7.030354613450507E-6	TEST
// load static empty array	WITHOUT_CLASSIFICATION	0.9999871386522831	WITHOUT_CLASSIFICATION	1.2861347716861968E-5	TEST
// box arguments	WITHOUT_CLASSIFICATION	0.999994273107146	WITHOUT_CLASSIFICATION	5.726892854076689E-6	TEST
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9998174988069389	WITHOUT_CLASSIFICATION	1.8250119306107912E-4	TEST
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999961904566042	WITHOUT_CLASSIFICATION	3.809543395901354E-6	TEST
// do a void return	WITHOUT_CLASSIFICATION	0.9999966472058714	WITHOUT_CLASSIFICATION	3.352794128573359E-6	TEST
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999861327844767	WITHOUT_CLASSIFICATION	1.3867215523359026E-5	TEST
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999180072210719	WITHOUT_CLASSIFICATION	8.199277892800765E-5	TEST
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999833222775856	WITHOUT_CLASSIFICATION	1.6677722414434767E-5	TEST
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999994287186378	WITHOUT_CLASSIFICATION	5.712813621267758E-7	TEST
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999777923383123	WITHOUT_CLASSIFICATION	2.220766168769667E-5	TEST
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999771913935946	WITHOUT_CLASSIFICATION	2.280860640529915E-5	TEST
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999855494751203	WITHOUT_CLASSIFICATION	1.4450524879568134E-5	TEST
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999960231158248	WITHOUT_CLASSIFICATION	3.9768841752233125E-6	TEST
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999862581342885	WITHOUT_CLASSIFICATION	1.374186571156493E-5	TEST
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9999258452961676	WITHOUT_CLASSIFICATION	7.415470383248246E-5	TEST
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9985221941488568	WITHOUT_CLASSIFICATION	0.0014778058511431347	TEST
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999908642490926	WITHOUT_CLASSIFICATION	9.135750907523483E-6	TEST
/* NUL */	WITHOUT_CLASSIFICATION	0.9998171762689924	WITHOUT_CLASSIFICATION	1.8282373100765519E-4	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999022355880299	WITHOUT_CLASSIFICATION	9.776441197009398E-5	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999870832307545	WITHOUT_CLASSIFICATION	1.291676924560255E-5	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999995177231099	WITHOUT_CLASSIFICATION	4.822768900768563E-7	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9998823574996891	WITHOUT_CLASSIFICATION	1.1764250031088144E-4	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999937942554832	WITHOUT_CLASSIFICATION	6.2057445167875076E-6	TEST
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999899707153554	WITHOUT_CLASSIFICATION	1.0029284644481378E-5	TEST
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999797431730006	WITHOUT_CLASSIFICATION	2.0256826999433243E-5	TEST
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999650957969117	WITHOUT_CLASSIFICATION	3.4904203088322035E-5	TEST
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9998921684918635	WITHOUT_CLASSIFICATION	1.0783150813653852E-4	TEST
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999238065499031	WITHOUT_CLASSIFICATION	7.619345009693866E-5	TEST
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999005682311086	WITHOUT_CLASSIFICATION	9.943176889139876E-5	TEST
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9993773389673668	WITHOUT_CLASSIFICATION	6.226610326332408E-4	TEST
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.999997460897497	WITHOUT_CLASSIFICATION	2.539102503015056E-6	TEST
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999805928146598	WITHOUT_CLASSIFICATION	1.9407185340176487E-5	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999885670013403	WITHOUT_CLASSIFICATION	1.1432998659680914E-5	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999885670013403	WITHOUT_CLASSIFICATION	1.1432998659680914E-5	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999885670013403	WITHOUT_CLASSIFICATION	1.1432998659680914E-5	TEST
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999988801069151	WITHOUT_CLASSIFICATION	1.1198930849409394E-6	TEST
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999978333025931	WITHOUT_CLASSIFICATION	2.1666974069212953E-6	TEST
// Single node in list	WITHOUT_CLASSIFICATION	0.9999956984504106	WITHOUT_CLASSIFICATION	4.30154958948638E-6	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999613455921539	WITHOUT_CLASSIFICATION	3.86544078461613E-5	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999613455921539	WITHOUT_CLASSIFICATION	3.86544078461613E-5	TEST
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.999975867256315	WITHOUT_CLASSIFICATION	2.4132743685036664E-5	TEST
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999388852221457	WITHOUT_CLASSIFICATION	6.111477785429006E-5	TEST
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999250229741241	WITHOUT_CLASSIFICATION	7.49770258758028E-5	TEST
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999961486265061	WITHOUT_CLASSIFICATION	3.851373493869961E-6	TEST
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999920323861571	WITHOUT_CLASSIFICATION	7.967613842915266E-6	TEST
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.999955525435117	WITHOUT_CLASSIFICATION	4.4474564883114E-5	TEST
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999425538534129	WITHOUT_CLASSIFICATION	5.744614658716858E-5	TEST
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999933022793912	WITHOUT_CLASSIFICATION	6.697720608757748E-6	TEST
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999949673554853	WITHOUT_CLASSIFICATION	5.0326445146553056E-6	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999774601651478	WITHOUT_CLASSIFICATION	2.2539834852273422E-5	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999774601651478	WITHOUT_CLASSIFICATION	2.2539834852273422E-5	TEST
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999112516488806	WITHOUT_CLASSIFICATION	8.874835111939839E-5	TEST
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999927733045617	WITHOUT_CLASSIFICATION	7.22669543821083E-6	TEST
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999879279341422	WITHOUT_CLASSIFICATION	1.2072065857896323E-5	TEST
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.999960775478941	WITHOUT_CLASSIFICATION	3.9224521058938193E-5	TEST
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999778468947427	WITHOUT_CLASSIFICATION	2.215310525730467E-5	TEST
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999962741821667	WITHOUT_CLASSIFICATION	3.7258178332305816E-6	TEST
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999824227052768	WITHOUT_CLASSIFICATION	1.7577294723163966E-5	TEST
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999824294291401	WITHOUT_CLASSIFICATION	1.757057086001389E-5	TEST
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999184955562991	WITHOUT_CLASSIFICATION	8.150444370085729E-5	TEST
// POP	WITHOUT_CLASSIFICATION	0.9999184955562991	WITHOUT_CLASSIFICATION	8.150444370085729E-5	TEST
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.999943918003504	WITHOUT_CLASSIFICATION	5.608199649602887E-5	TEST
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999184955562991	WITHOUT_CLASSIFICATION	8.150444370085729E-5	TEST
// SET_P	WITHOUT_CLASSIFICATION	0.9999184955562991	WITHOUT_CLASSIFICATION	8.150444370085729E-5	TEST
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999629054532656	WITHOUT_CLASSIFICATION	3.709454673442419E-5	TEST
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9998822664714958	WITHOUT_CLASSIFICATION	1.1773352850425156E-4	TEST
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999882353564563	WITHOUT_CLASSIFICATION	1.176464354359755E-5	TEST
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999649514336317	WITHOUT_CLASSIFICATION	3.5048566368317006E-5	TEST
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.999270723588931	WITHOUT_CLASSIFICATION	7.292764110690241E-4	TEST
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.999977133512077	WITHOUT_CLASSIFICATION	2.286648792293902E-5	TEST
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.999990853070843	WITHOUT_CLASSIFICATION	9.146929156951505E-6	TEST
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9999823782855828	WITHOUT_CLASSIFICATION	1.7621714417180734E-5	TEST
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999833437710617	WITHOUT_CLASSIFICATION	1.66562289382974E-5	TEST
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999521274209768	WITHOUT_CLASSIFICATION	4.787257902308404E-5	TEST
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999806357962073	WITHOUT_CLASSIFICATION	1.9364203792692475E-5	TEST
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999905883398571	WITHOUT_CLASSIFICATION	9.411660142873064E-6	TEST
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999670253590738	WITHOUT_CLASSIFICATION	3.2974640926285684E-5	TEST
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999847006916132	WITHOUT_CLASSIFICATION	1.5299308386768288E-5	TEST
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999534099817261	WITHOUT_CLASSIFICATION	4.659001827384127E-5	TEST
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999932791994678	WITHOUT_CLASSIFICATION	6.720800532217882E-6	TEST
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999917265071498	WITHOUT_CLASSIFICATION	8.273492850142366E-6	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.9998171762689924	WITHOUT_CLASSIFICATION	1.8282373100765519E-4	TEST
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999917437403956	WITHOUT_CLASSIFICATION	8.256259604364593E-6	TEST
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999893290047925	WITHOUT_CLASSIFICATION	1.0670995207486404E-5	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.9998171762689924	WITHOUT_CLASSIFICATION	1.8282373100765519E-4	TEST
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999928871470304	WITHOUT_CLASSIFICATION	7.112852969582716E-6	TEST
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9996625879364954	WITHOUT_CLASSIFICATION	3.3741206350456287E-4	TEST
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999538480575457	WITHOUT_CLASSIFICATION	4.6151942454289685E-5	TEST
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999835508101101	WITHOUT_CLASSIFICATION	1.6449189889861686E-5	TEST
// documentation nodes	WITHOUT_CLASSIFICATION	0.99997281122656	WITHOUT_CLASSIFICATION	2.718877343993912E-5	TEST
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999939472697575	WITHOUT_CLASSIFICATION	6.05273024248898E-6	TEST
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999947589438674	WITHOUT_CLASSIFICATION	5.241056132631901E-6	TEST
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9998360717907087	WITHOUT_CLASSIFICATION	1.6392820929133896E-4	TEST
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999814330968428	WITHOUT_CLASSIFICATION	1.8566903157097376E-5	TEST
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999814330968428	WITHOUT_CLASSIFICATION	1.8566903157097376E-5	TEST
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999814330968428	WITHOUT_CLASSIFICATION	1.8566903157097376E-5	TEST
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999687860690062	WITHOUT_CLASSIFICATION	3.121393099371694E-5	TEST
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999368438624594	WITHOUT_CLASSIFICATION	6.31561375405906E-5	TEST
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999822403419488	WITHOUT_CLASSIFICATION	1.7759658051145974E-5	TEST
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999198120470774	WITHOUT_CLASSIFICATION	8.01879529226573E-5	TEST
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999648385485876	WITHOUT_CLASSIFICATION	3.516145141235732E-5	TEST
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999570929044336	WITHOUT_CLASSIFICATION	4.290709556649519E-5	TEST
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999475203798546	WITHOUT_CLASSIFICATION	5.2479620145400564E-5	TEST
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999814330968428	WITHOUT_CLASSIFICATION	1.8566903157097376E-5	TEST
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999837580468295	WITHOUT_CLASSIFICATION	1.6241953170456476E-5	TEST
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999638790869402	WITHOUT_CLASSIFICATION	3.6120913059764765E-5	TEST
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999791518926638	WITHOUT_CLASSIFICATION	2.0848107336151707E-5	TEST
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999862489116541	WITHOUT_CLASSIFICATION	1.375108834578349E-5	TEST
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9997790264509822	WITHOUT_CLASSIFICATION	2.209735490178271E-4	TEST
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9998373021749549	WITHOUT_CLASSIFICATION	1.6269782504510293E-4	TEST
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999505393045504	WITHOUT_CLASSIFICATION	4.9460695449613625E-5	TEST
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9995487821967617	WITHOUT_CLASSIFICATION	4.5121780323838007E-4	TEST
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999917309848545	WITHOUT_CLASSIFICATION	8.269015145532977E-6	TEST
// block (primary)	WITHOUT_CLASSIFICATION	0.9999919447639707	WITHOUT_CLASSIFICATION	8.055236029369535E-6	TEST
// block (expr)	WITHOUT_CLASSIFICATION	0.9999919447639707	WITHOUT_CLASSIFICATION	8.055236029369535E-6	TEST
// hash	WITHOUT_CLASSIFICATION	0.999919355995256	WITHOUT_CLASSIFICATION	8.064400474395268E-5	TEST
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9992974174981788	WITHOUT_CLASSIFICATION	7.025825018212796E-4	TEST
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.999950539467009	WITHOUT_CLASSIFICATION	4.9460532991067294E-5	TEST
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999791645159499	WITHOUT_CLASSIFICATION	2.0835484050061528E-5	TEST
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999891869910081	WITHOUT_CLASSIFICATION	1.0813008991912222E-5	TEST
// binary	WITHOUT_CLASSIFICATION	0.999920979869565	WITHOUT_CLASSIFICATION	7.902013043500199E-5	TEST
// decimal	WITHOUT_CLASSIFICATION	0.999918666001664	WITHOUT_CLASSIFICATION	8.133399833601226E-5	TEST
//Octal	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999974024540321	WITHOUT_CLASSIFICATION	2.5975459677967714E-6	TEST
// backslash	WITHOUT_CLASSIFICATION	0.9999918148803738	WITHOUT_CLASSIFICATION	8.18511962614963E-6	TEST
// newline	WITHOUT_CLASSIFICATION	0.9999196170480041	WITHOUT_CLASSIFICATION	8.038295199577707E-5	TEST
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999924407316109	WITHOUT_CLASSIFICATION	7.559268389125535E-6	TEST
// form feed	WITHOUT_CLASSIFICATION	0.9999919407650425	WITHOUT_CLASSIFICATION	8.059234957582773E-6	TEST
// vertical tab	WITHOUT_CLASSIFICATION	0.9999924548426345	WITHOUT_CLASSIFICATION	7.545157365484996E-6	TEST
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// escape	WITHOUT_CLASSIFICATION	0.9999195601328255	WITHOUT_CLASSIFICATION	8.043986717456616E-5	TEST
// hex constant	WITHOUT_CLASSIFICATION	0.9999921676008299	WITHOUT_CLASSIFICATION	7.832399170045978E-6	TEST
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999219747035097	WITHOUT_CLASSIFICATION	7.80252964902512E-5	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999973241747008	WITHOUT_CLASSIFICATION	2.6758252992286416E-6	TEST
// space	WITHOUT_CLASSIFICATION	0.9999543935537433	WITHOUT_CLASSIFICATION	4.5606446256856456E-5	TEST
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9998817071947187	WITHOUT_CLASSIFICATION	1.1829280528126062E-4	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999534563867958	WITHOUT_CLASSIFICATION	4.6543613204182254E-5	TEST
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999891096421047	WITHOUT_CLASSIFICATION	1.0890357895259765E-5	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999973241747008	WITHOUT_CLASSIFICATION	2.6758252992286416E-6	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9999037599206061	WITHOUT_CLASSIFICATION	9.624007939388101E-5	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9999037599206061	WITHOUT_CLASSIFICATION	9.624007939388101E-5	TEST
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999786436938451	WITHOUT_CLASSIFICATION	2.1356306154899155E-5	TEST
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999695598488596	WITHOUT_CLASSIFICATION	3.0440151140308724E-5	TEST
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999921776827937	WITHOUT_CLASSIFICATION	7.822317206368986E-6	TEST
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999527337466069	WITHOUT_CLASSIFICATION	4.7266253393204705E-5	TEST
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999858093889433	WITHOUT_CLASSIFICATION	1.4190611056601463E-5	TEST
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.999961277504427	WITHOUT_CLASSIFICATION	3.8722495573075245E-5	TEST
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9732057479792867	TEST	0.026794252020713272	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999390527657108	WITHOUT_CLASSIFICATION	6.094723428910725E-5	TEST
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.999944135909393	WITHOUT_CLASSIFICATION	5.586409060705631E-5	TEST
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999542457921021	WITHOUT_CLASSIFICATION	4.5754207897930705E-5	TEST
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999682828941445	WITHOUT_CLASSIFICATION	3.171710585538372E-5	TEST
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9998520532955065	WITHOUT_CLASSIFICATION	1.4794670449347848E-4	TEST
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999953515844898	WITHOUT_CLASSIFICATION	4.648415510188559E-6	TEST
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999956615772165	WITHOUT_CLASSIFICATION	4.338422783441405E-6	TEST
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999078215668462	WITHOUT_CLASSIFICATION	9.217843315382114E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
// line 329	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9996218000722802	WITHOUT_CLASSIFICATION	3.781999277199282E-4	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999825894895931	WITHOUT_CLASSIFICATION	1.741051040689083E-5	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9998267509722848	WITHOUT_CLASSIFICATION	1.7324902771521973E-4	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.999984292878991	WITHOUT_CLASSIFICATION	1.570712100889601E-5	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999978815144897	WITHOUT_CLASSIFICATION	2.1184855103013246E-6	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999917272576272	WITHOUT_CLASSIFICATION	8.272742372816686E-6	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999919807195199	WITHOUT_CLASSIFICATION	8.019280480179418E-6	TEST
// line 271	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 274	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 303	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 311	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 314	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 317	WITHOUT_CLASSIFICATION	0.9999941074741139	WITHOUT_CLASSIFICATION	5.892525886117296E-6	TEST
// line 332	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 338	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 341	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 344	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 358	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 367	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 378	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 407	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 411	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 414	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 434	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 443	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 446	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 452	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 457	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 464	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 467	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 470	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 479	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 484	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 492	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 498	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 501	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 504	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 507	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 510	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 519	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 525	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 556	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 559	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 563	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 569	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 575	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 578	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 587	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 596	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 604	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 607	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 613	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 616	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 634	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 638	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 643	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 646	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 655	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 660	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 667	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 670	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 701	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 717	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 720	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 726	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 729	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 735	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 738	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 751	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 754	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 757	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 760	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 763	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 769	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 775	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 797	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 803	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 806	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 809	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 815	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 818	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 821	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 824	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 830	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 833	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 836	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 852	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 858	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 861	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 868	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 871	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 876	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 879	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 883	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 899	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 903	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 907	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 915	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 920	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 923	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 926	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 936	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 940	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 944	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 948	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 956	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 964	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 967	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 972	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 978	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 984	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 986	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 996	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1001	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1008	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1014	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1029	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1032	WITHOUT_CLASSIFICATION	0.9999941343173224	WITHOUT_CLASSIFICATION	5.865682677479428E-6	TEST
// line 1034	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1045	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1048	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1051	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1058	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1070	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1073	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1076	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1079	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1082	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1089	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1100	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1103	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1107	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1113	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1115	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1119	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1135	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1137	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1151	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1154	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1164	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1175	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1178	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1187	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1189	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1193	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1214	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1234	WITHOUT_CLASSIFICATION	0.9999941272533491	WITHOUT_CLASSIFICATION	5.872746650926047E-6	TEST
// line 1239	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1243	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1263	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1269	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1280	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1283	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1290	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1296	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1299	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1302	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1309	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1313	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1315	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1328	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1335	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1352	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1358	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1374	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1381	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1415	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1431	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1434	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1440	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1443	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1453	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1465	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1477	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1480	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1485	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1488	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1510	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1516	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1533	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1550	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1553	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1556	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1565	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1568	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1571	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1574	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1577	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1587	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1600	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1609	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1623	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1626	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1638	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1641	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1644	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1649	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1655	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1658	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1661	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1672	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1677	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1687	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1694	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1733	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1745	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1757	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1769	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1775	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1784	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1808	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1814	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999755188835616	WITHOUT_CLASSIFICATION	2.4481116438432946E-5	TEST
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.999890214616271	WITHOUT_CLASSIFICATION	1.0978538372902187E-4	TEST
/*                  }*/	WITHOUT_CLASSIFICATION	0.9998969209481585	WITHOUT_CLASSIFICATION	1.0307905184135957E-4	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9996355175823176	WITHOUT_CLASSIFICATION	3.64482417682328E-4	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9998691252619366	WITHOUT_CLASSIFICATION	1.3087473806332187E-4	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9997251124639863	WITHOUT_CLASSIFICATION	2.748875360137117E-4	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9997251124639863	WITHOUT_CLASSIFICATION	2.748875360137117E-4	TEST
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9998829505186381	WITHOUT_CLASSIFICATION	1.170494813620383E-4	TEST
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9998220895764706	WITHOUT_CLASSIFICATION	1.7791042352942912E-4	TEST
// line 529	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999101662241215	WITHOUT_CLASSIFICATION	8.983377587848504E-5	TEST
/* XXX*/	WITHOUT_CLASSIFICATION	0.9995925689043763	WITHOUT_CLASSIFICATION	4.074310956237099E-4	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.999972922011158	WITHOUT_CLASSIFICATION	2.7077988842044602E-5	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998505513467172	WITHOUT_CLASSIFICATION	1.494486532828488E-4	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999101662241215	WITHOUT_CLASSIFICATION	8.983377587848504E-5	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998063976901427	WITHOUT_CLASSIFICATION	1.9360230985733602E-4	TEST
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999724309325543	WITHOUT_CLASSIFICATION	2.75690674456367E-5	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999905881008909	WITHOUT_CLASSIFICATION	9.411899108976495E-6	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9991552324119835	WITHOUT_CLASSIFICATION	8.447675880164268E-4	TEST
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999941127749183	WITHOUT_CLASSIFICATION	5.8872250816703884E-6	TEST
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999832880471824	WITHOUT_CLASSIFICATION	1.6711952817658675E-5	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999957297943816	WITHOUT_CLASSIFICATION	4.270205618374139E-6	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999957297943816	WITHOUT_CLASSIFICATION	4.270205618374139E-6	TEST
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9998478361382352	WITHOUT_CLASSIFICATION	1.5216386176465708E-4	TEST
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9983709744866391	WITHOUT_CLASSIFICATION	0.0016290255133608828	TEST
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9998768289812681	WITHOUT_CLASSIFICATION	1.2317101873184343E-4	TEST
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999887811369825	WITHOUT_CLASSIFICATION	1.121886301754412E-5	TEST
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9996950774938373	WITHOUT_CLASSIFICATION	3.04922506162636E-4	TEST
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9998590396179045	WITHOUT_CLASSIFICATION	1.409603820956223E-4	TEST
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999987851965645	WITHOUT_CLASSIFICATION	1.214803435503185E-6	TEST
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999641739936843	WITHOUT_CLASSIFICATION	3.582600631573471E-5	TEST
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999856631272254	WITHOUT_CLASSIFICATION	1.4336872774602088E-5	TEST
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999681360678214	WITHOUT_CLASSIFICATION	3.186393217856926E-5	TEST
// Parser states:	WITHOUT_CLASSIFICATION	0.9999917476982028	WITHOUT_CLASSIFICATION	8.252301797161018E-6	TEST
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.999975051848881	WITHOUT_CLASSIFICATION	2.4948151119026766E-5	TEST
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999931759186399	WITHOUT_CLASSIFICATION	6.824081360047898E-6	TEST
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9998350793584827	WITHOUT_CLASSIFICATION	1.6492064151720835E-4	TEST
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999596965718909	WITHOUT_CLASSIFICATION	4.030342810920004E-5	TEST
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999655948207317	WITHOUT_CLASSIFICATION	3.440517926832803E-5	TEST
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999723827377792	WITHOUT_CLASSIFICATION	2.7617262220769048E-5	TEST
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999427866158239	WITHOUT_CLASSIFICATION	5.721338417609616E-5	TEST
// Node	WITHOUT_CLASSIFICATION	0.9999186234393851	WITHOUT_CLASSIFICATION	8.13765606149544E-5	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.999693304704586	WITHOUT_CLASSIFICATION	3.066952954140187E-4	TEST
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9994939820837628	WITHOUT_CLASSIFICATION	5.060179162371914E-4	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.999693304704586	WITHOUT_CLASSIFICATION	3.066952954140187E-4	TEST
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9993821507750217	WITHOUT_CLASSIFICATION	6.178492249784273E-4	TEST
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9994939820837628	WITHOUT_CLASSIFICATION	5.060179162371914E-4	TEST
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9999739395572467	WITHOUT_CLASSIFICATION	2.606044275328004E-5	TEST
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999814330968428	WITHOUT_CLASSIFICATION	1.8566903157097376E-5	TEST
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999919247529006	WITHOUT_CLASSIFICATION	8.075247099439168E-6	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999184955562991	WITHOUT_CLASSIFICATION	8.150444370085729E-5	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999184955562991	WITHOUT_CLASSIFICATION	8.150444370085729E-5	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999184955562991	WITHOUT_CLASSIFICATION	8.150444370085729E-5	TEST
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999195666957155	WITHOUT_CLASSIFICATION	8.043330428462498E-5	TEST
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9930044761668195	WITHOUT_CLASSIFICATION	0.006995523833180361	TEST
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999831695454953	WITHOUT_CLASSIFICATION	1.6830454504693E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999825894895931	WITHOUT_CLASSIFICATION	1.741051040689083E-5	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.999984292878991	WITHOUT_CLASSIFICATION	1.570712100889601E-5	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999978815144897	WITHOUT_CLASSIFICATION	2.1184855103013246E-6	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999917272576272	WITHOUT_CLASSIFICATION	8.272742372816686E-6	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999919807195199	WITHOUT_CLASSIFICATION	8.019280480179418E-6	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 280	WITHOUT_CLASSIFICATION	0.9999941073872742	WITHOUT_CLASSIFICATION	5.892612725755525E-6	TEST
// line 283	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 296	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 324	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 327	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 331	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 333	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 336	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 342	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 345	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 348	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 354	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 368	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 377	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 388	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 392	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 397	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 429	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 432	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 436	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 445	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 448	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 454	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 459	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 466	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 469	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 478	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 481	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 488	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 494	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 497	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 503	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 506	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 509	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 512	WITHOUT_CLASSIFICATION	0.999994112079631	WITHOUT_CLASSIFICATION	5.887920369008717E-6	TEST
// line 521	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 526	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 785	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 534	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 549	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 552	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 558	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 561	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 571	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 574	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 579	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 586	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 589	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 592	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 595	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 598	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 623	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 627	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 630	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 633	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 639	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 648	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 657	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 661	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 666	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 678	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 682	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 688	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 699	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 706	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 708	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 727	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 737	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 753	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 779	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 801	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 808	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 811	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 817	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 899	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 944	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 820	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 826	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 829	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 832	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 851	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 857	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 860	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 863	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 866	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 869	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 875	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 884	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 887	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 890	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 902	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 909	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 912	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 916	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 922	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 928	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 941	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 947	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 951	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 955	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 965	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 969	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 977	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 983	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1013	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1023	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1035	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1041	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1043	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1054	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1057	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1060	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1069	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1075	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1078	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1084	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1087	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1090	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1093	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1114	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1116	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1118	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1124	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1126	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1138	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1144	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1149	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1155	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1162	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1173	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1179	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1182	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1190	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1196	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1213	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1217	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1231	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1236	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1244	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1254	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1258	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1264	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1270	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1273	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1276	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1279	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1282	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1289	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1292	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1295	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1298	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1305	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1308	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1311	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1317	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1323	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1326	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1329	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1337	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1342	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1345	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1354	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1359	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1366	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1369	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1373	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1377	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1383	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1399	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1401	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1406	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1417	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1424	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1427	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1430	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1433	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1436	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1442	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1445	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1458	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1464	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1489	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1493	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1507	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1519	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1532	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1538	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1542	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1557	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1573	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1591	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1607	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1610	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1622	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1625	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1636	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1639	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1647	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1651	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1657	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1660	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1663	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1678	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1702	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1711	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1719	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1722	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1731	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1734	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1738	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1746	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1756	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1758	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1761	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1767	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1776	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1782	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1785	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1788	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1791	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1797	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1800	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1803	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1806	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1809	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1815	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1825	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1828	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1831	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1847	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9997251124639863	WITHOUT_CLASSIFICATION	2.748875360137117E-4	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9997251124639863	WITHOUT_CLASSIFICATION	2.748875360137117E-4	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999101662241215	WITHOUT_CLASSIFICATION	8.983377587848504E-5	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.999972922011158	WITHOUT_CLASSIFICATION	2.7077988842044602E-5	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998505513467172	WITHOUT_CLASSIFICATION	1.494486532828488E-4	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999101662241215	WITHOUT_CLASSIFICATION	8.983377587848504E-5	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998063976901427	WITHOUT_CLASSIFICATION	1.9360230985733602E-4	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.999961331240566	WITHOUT_CLASSIFICATION	3.866875943404162E-5	TEST
// line 1854	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1869	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1872	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1877	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1886	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1898	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1902	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1905	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1911	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1918	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1935	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1938	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1942	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1948	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1960	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1963	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1968	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1972	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1982	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1995	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 2000	WITHOUT_CLASSIFICATION	0.9999941075750397	WITHOUT_CLASSIFICATION	5.892424960325168E-6	TEST
// line 2006	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 2010	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.999851942592444	WITHOUT_CLASSIFICATION	1.4805740755591992E-4	TEST
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9997025746117938	WITHOUT_CLASSIFICATION	2.974253882062341E-4	TEST
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.999767364836424	WITHOUT_CLASSIFICATION	2.3263516357604734E-4	TEST
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999950027196488	WITHOUT_CLASSIFICATION	4.997280351184153E-6	TEST
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9998938492225024	WITHOUT_CLASSIFICATION	1.0615077749766207E-4	TEST
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9997052029676311	WITHOUT_CLASSIFICATION	2.9479703236890645E-4	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999905881008909	WITHOUT_CLASSIFICATION	9.411899108976495E-6	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9991552324119835	WITHOUT_CLASSIFICATION	8.447675880164268E-4	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999957297943816	WITHOUT_CLASSIFICATION	4.270205618374139E-6	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999957297943816	WITHOUT_CLASSIFICATION	4.270205618374139E-6	TEST
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9999331410191667	WITHOUT_CLASSIFICATION	6.685898083329818E-5	TEST
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999879180351569	WITHOUT_CLASSIFICATION	1.20819648432203E-5	TEST
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999872087631356	WITHOUT_CLASSIFICATION	1.2791236864302183E-5	TEST
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999941127749183	WITHOUT_CLASSIFICATION	5.8872250816703884E-6	TEST
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999981220361494	WITHOUT_CLASSIFICATION	1.8779638506011257E-6	TEST
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999301232835647	WITHOUT_CLASSIFICATION	6.987671643528496E-5	TEST
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999823135628019	WITHOUT_CLASSIFICATION	1.7686437198153057E-5	TEST
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999957196621524	WITHOUT_CLASSIFICATION	4.280337847584772E-6	TEST
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.999988180211492	WITHOUT_CLASSIFICATION	1.1819788508004761E-5	TEST
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.999989503376442	WITHOUT_CLASSIFICATION	1.049662355799681E-5	TEST
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999749367617409	WITHOUT_CLASSIFICATION	2.506323825911175E-5	TEST
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999685851327229	WITHOUT_CLASSIFICATION	3.141486727715334E-5	TEST
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999656524280683	WITHOUT_CLASSIFICATION	3.434757193163825E-5	TEST
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999957862926838	WITHOUT_CLASSIFICATION	4.213707316139497E-6	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999905273926428	WITHOUT_CLASSIFICATION	9.472607357184979E-6	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999905273926428	WITHOUT_CLASSIFICATION	9.472607357184979E-6	TEST
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.999669202963819	WITHOUT_CLASSIFICATION	3.307970361809941E-4	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.999993493721644	WITHOUT_CLASSIFICATION	6.506278356050708E-6	TEST
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999974467954138	WITHOUT_CLASSIFICATION	2.5532045861561762E-6	TEST
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.999829348066218	WITHOUT_CLASSIFICATION	1.7065193378199605E-4	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999965925570025	WITHOUT_CLASSIFICATION	3.407442997584548E-6	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999938652461454	WITHOUT_CLASSIFICATION	6.134753854579102E-6	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999955679538756	WITHOUT_CLASSIFICATION	4.432046124493697E-6	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999938652461454	WITHOUT_CLASSIFICATION	6.134753854579102E-6	TEST
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999828690645958	WITHOUT_CLASSIFICATION	1.7130935404123252E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999931358122953	WITHOUT_CLASSIFICATION	6.864187704686843E-6	TEST
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9996672054273711	WITHOUT_CLASSIFICATION	3.327945726288061E-4	TEST
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9994566656257277	WITHOUT_CLASSIFICATION	5.433343742722696E-4	TEST
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9996452504893847	WITHOUT_CLASSIFICATION	3.547495106153929E-4	TEST
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9996452504893847	WITHOUT_CLASSIFICATION	3.547495106153929E-4	TEST
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999240893440198	WITHOUT_CLASSIFICATION	7.591065598024084E-5	TEST
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999719088272394	WITHOUT_CLASSIFICATION	2.8091172760625557E-5	TEST
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999715448146154	WITHOUT_CLASSIFICATION	2.8455185384558336E-5	TEST
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999903735339736	WITHOUT_CLASSIFICATION	9.626466026524027E-6	TEST
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999932586441775	WITHOUT_CLASSIFICATION	6.741355822507144E-6	TEST
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9996147414198209	WITHOUT_CLASSIFICATION	3.852585801792067E-4	TEST
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9996147414198209	WITHOUT_CLASSIFICATION	3.852585801792067E-4	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9994876237233233	WITHOUT_CLASSIFICATION	5.123762766766816E-4	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9998674182231143	WITHOUT_CLASSIFICATION	1.3258177688566986E-4	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9998674182231143	WITHOUT_CLASSIFICATION	1.3258177688566986E-4	TEST
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999844103255915	WITHOUT_CLASSIFICATION	1.5589674408551753E-5	TEST
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999307430619185	WITHOUT_CLASSIFICATION	6.925693808140765E-5	TEST
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999714448023926	WITHOUT_CLASSIFICATION	2.8555197607373387E-5	TEST
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.999992456532305	WITHOUT_CLASSIFICATION	7.543467695139619E-6	TEST
// required and optional only	WITHOUT_CLASSIFICATION	0.9999970042359295	WITHOUT_CLASSIFICATION	2.9957640705436275E-6	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999938652461454	WITHOUT_CLASSIFICATION	6.134753854579102E-6	TEST
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.999976177414273	WITHOUT_CLASSIFICATION	2.382258572695821E-5	TEST
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999999241665697	WITHOUT_CLASSIFICATION	7.583343024264811E-8	TEST
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999349813019247	WITHOUT_CLASSIFICATION	6.501869807525309E-5	TEST
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999761987067743	WITHOUT_CLASSIFICATION	2.380129322562814E-5	TEST
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999998372740239	WITHOUT_CLASSIFICATION	1.6272597621441005E-7	TEST
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999991863397244	WITHOUT_CLASSIFICATION	8.136602756352165E-7	TEST
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.999984657864457	WITHOUT_CLASSIFICATION	1.5342135543043166E-5	TEST
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9998301356586741	WITHOUT_CLASSIFICATION	1.6986434132591202E-4	TEST
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999951089693225	WITHOUT_CLASSIFICATION	4.891030677551615E-6	TEST
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999281545454998	WITHOUT_CLASSIFICATION	7.184545450027047E-5	TEST
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999627197778875	WITHOUT_CLASSIFICATION	3.7280222112400326E-5	TEST
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999998413890465	WITHOUT_CLASSIFICATION	1.5861095349291143E-7	TEST
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9991305660152108	WITHOUT_CLASSIFICATION	8.694339847892254E-4	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999913094863657	WITHOUT_CLASSIFICATION	8.690513634239765E-6	TEST
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9999564749222454	WITHOUT_CLASSIFICATION	4.352507775458614E-5	TEST
// Highest reserved id	WITHOUT_CLASSIFICATION	0.999982438275009	WITHOUT_CLASSIFICATION	1.756172499104131E-5	TEST
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999842671284188	WITHOUT_CLASSIFICATION	1.573287158112571E-5	TEST
// id must always be even	WITHOUT_CLASSIFICATION	0.999985329416944	WITHOUT_CLASSIFICATION	1.4670583056066744E-5	TEST
// with block pass	WITHOUT_CLASSIFICATION	0.9999590676464951	WITHOUT_CLASSIFICATION	4.0932353504934506E-5	TEST
// no block	WITHOUT_CLASSIFICATION	0.9999956777394581	WITHOUT_CLASSIFICATION	4.3222605419561765E-6	TEST
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9998594328476684	WITHOUT_CLASSIFICATION	1.4056715233157568E-4	TEST
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9994853264316794	WITHOUT_CLASSIFICATION	5.146735683205512E-4	TEST
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9997918344330682	WITHOUT_CLASSIFICATION	2.0816556693185144E-4	TEST
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.999949551143675	WITHOUT_CLASSIFICATION	5.0448856325055125E-5	TEST
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999737763271451	WITHOUT_CLASSIFICATION	2.6223672854891205E-5	TEST
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999936654844855	WITHOUT_CLASSIFICATION	6.33451551443078E-6	TEST
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999640741389209	WITHOUT_CLASSIFICATION	3.592586107908539E-5	TEST
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999961011178763	WITHOUT_CLASSIFICATION	3.89888212372736E-6	TEST
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9998438032809839	WITHOUT_CLASSIFICATION	1.5619671901614173E-4	TEST
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999821006156258	WITHOUT_CLASSIFICATION	1.789938437434789E-5	TEST
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999759275474572	WITHOUT_CLASSIFICATION	2.4072452542739755E-5	TEST
// Lastline	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.999671284268029	WITHOUT_CLASSIFICATION	3.287157319709767E-4	TEST
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999984230881419	WITHOUT_CLASSIFICATION	1.576911858121147E-6	TEST
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999944269739722	WITHOUT_CLASSIFICATION	5.57302602784212E-6	TEST
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999949442535498	WITHOUT_CLASSIFICATION	5.0557464500841E-6	TEST
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999897939237249	WITHOUT_CLASSIFICATION	1.020607627517163E-5	TEST
// silently ignore	WITHOUT_CLASSIFICATION	0.9999935050969544	WITHOUT_CLASSIFICATION	6.494903045550419E-6	TEST
// used by compiler	WITHOUT_CLASSIFICATION	0.999990790016273	WITHOUT_CLASSIFICATION	9.209983726971556E-6	TEST
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999986740074736	WITHOUT_CLASSIFICATION	1.325992526503139E-6	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.999961331240566	WITHOUT_CLASSIFICATION	3.866875943404162E-5	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9998634790859686	WITHOUT_CLASSIFICATION	1.365209140313202E-4	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999863142001741	WITHOUT_CLASSIFICATION	1.368579982582845E-5	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999022355880299	WITHOUT_CLASSIFICATION	9.776441197009398E-5	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999870832307545	WITHOUT_CLASSIFICATION	1.291676924560255E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999931358122953	WITHOUT_CLASSIFICATION	6.864187704686843E-6	TEST
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999973088911427	WITHOUT_CLASSIFICATION	2.6911088573964015E-6	TEST
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999923461537049	WITHOUT_CLASSIFICATION	7.653846295099332E-6	TEST
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999973551966591	WITHOUT_CLASSIFICATION	2.6448033407951E-6	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999995788002025	WITHOUT_CLASSIFICATION	4.2119979746608485E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999995788002025	WITHOUT_CLASSIFICATION	4.2119979746608485E-7	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999923857776043	WITHOUT_CLASSIFICATION	7.6142223957277876E-6	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999923857776043	WITHOUT_CLASSIFICATION	7.6142223957277876E-6	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999923857776043	WITHOUT_CLASSIFICATION	7.6142223957277876E-6	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999891807844169	WITHOUT_CLASSIFICATION	1.081921558318028E-5	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999891807844169	WITHOUT_CLASSIFICATION	1.081921558318028E-5	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999798367439195	WITHOUT_CLASSIFICATION	2.0163256080502235E-5	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999798367439195	WITHOUT_CLASSIFICATION	2.0163256080502235E-5	TEST
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.999675305862627	WITHOUT_CLASSIFICATION	3.2469413737303975E-4	TEST
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999719621358314	WITHOUT_CLASSIFICATION	2.803786416854105E-5	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.9999935861551312	WITHOUT_CLASSIFICATION	6.413844868715844E-6	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.9999935861551312	WITHOUT_CLASSIFICATION	6.413844868715844E-6	TEST
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999454519692111	WITHOUT_CLASSIFICATION	5.454803078876834E-5	TEST
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999728855495528	WITHOUT_CLASSIFICATION	2.711445044721343E-5	TEST
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999764055676064	WITHOUT_CLASSIFICATION	2.3594432393649624E-5	TEST
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999905205444521	WITHOUT_CLASSIFICATION	9.479455547912706E-6	TEST
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999970779495316	WITHOUT_CLASSIFICATION	2.922050468348378E-6	TEST
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999775488828021	WITHOUT_CLASSIFICATION	2.245111719786216E-5	TEST
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999805187523937	WITHOUT_CLASSIFICATION	1.948124760637276E-5	TEST
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999820962226899	WITHOUT_CLASSIFICATION	1.790377731010763E-5	TEST
// caller	WITHOUT_CLASSIFICATION	0.9999207618284698	WITHOUT_CLASSIFICATION	7.923817153025054E-5	TEST
// calltype // block	WITHOUT_CLASSIFICATION	0.9999919447639707	WITHOUT_CLASSIFICATION	8.055236029369535E-6	TEST
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999981159489124	WITHOUT_CLASSIFICATION	1.8840510875713856E-6	TEST
// load arity for check	WITHOUT_CLASSIFICATION	0.9999847495165597	WITHOUT_CLASSIFICATION	1.5250483440421926E-5	TEST
// throw	WITHOUT_CLASSIFICATION	0.9999341894517573	WITHOUT_CLASSIFICATION	6.581054824271755E-5	TEST
// load arity for error	WITHOUT_CLASSIFICATION	0.9999848083722715	WITHOUT_CLASSIFICATION	1.5191627728356646E-5	TEST
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999825669048166	WITHOUT_CLASSIFICATION	1.7433095183420682E-5	TEST
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.999820240161579	WITHOUT_CLASSIFICATION	1.7975983842094772E-4	TEST
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9997723484718105	WITHOUT_CLASSIFICATION	2.2765152818946828E-4	TEST
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999820337929397	WITHOUT_CLASSIFICATION	1.7966207060251652E-5	TEST
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999820337929397	WITHOUT_CLASSIFICATION	1.7966207060251652E-5	TEST
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9996126367327413	WITHOUT_CLASSIFICATION	3.873632672586792E-4	TEST
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.999972349295198	WITHOUT_CLASSIFICATION	2.765070480204907E-5	TEST
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999502508559078	WITHOUT_CLASSIFICATION	4.97491440921096E-5	TEST
// load the encoding	WITHOUT_CLASSIFICATION	0.9999977956810417	WITHOUT_CLASSIFICATION	2.2043189582155713E-6	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999646846936429	WITHOUT_CLASSIFICATION	3.53153063571262E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999646846936429	WITHOUT_CLASSIFICATION	3.53153063571262E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999646846936429	WITHOUT_CLASSIFICATION	3.53153063571262E-5	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999613114560236	WITHOUT_CLASSIFICATION	3.86885439763766E-5	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999613114560236	WITHOUT_CLASSIFICATION	3.86885439763766E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999613114560236	WITHOUT_CLASSIFICATION	3.86885439763766E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999613114560236	WITHOUT_CLASSIFICATION	3.86885439763766E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999613114560236	WITHOUT_CLASSIFICATION	3.86885439763766E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999619217510347	WITHOUT_CLASSIFICATION	3.807824896528786E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999619217510347	WITHOUT_CLASSIFICATION	3.807824896528786E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999619217510347	WITHOUT_CLASSIFICATION	3.807824896528786E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999619217510347	WITHOUT_CLASSIFICATION	3.807824896528786E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999619217510347	WITHOUT_CLASSIFICATION	3.807824896528786E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999619217510347	WITHOUT_CLASSIFICATION	3.807824896528786E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999619217510347	WITHOUT_CLASSIFICATION	3.807824896528786E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999619217510347	WITHOUT_CLASSIFICATION	3.807824896528786E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999619217510347	WITHOUT_CLASSIFICATION	3.807824896528786E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999619217510347	WITHOUT_CLASSIFICATION	3.807824896528786E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999619217510347	WITHOUT_CLASSIFICATION	3.807824896528786E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999619217510347	WITHOUT_CLASSIFICATION	3.807824896528786E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999619217510347	WITHOUT_CLASSIFICATION	3.807824896528786E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999619217510347	WITHOUT_CLASSIFICATION	3.807824896528786E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999619217510347	WITHOUT_CLASSIFICATION	3.807824896528786E-5	TEST
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999960590818257	WITHOUT_CLASSIFICATION	3.940918174399194E-6	TEST
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999820337929397	WITHOUT_CLASSIFICATION	1.7966207060251652E-5	TEST
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.999961277504427	WITHOUT_CLASSIFICATION	3.8722495573075245E-5	TEST
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999990480929905	WITHOUT_CLASSIFICATION	9.51907009590506E-7	TEST
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.999961277504427	WITHOUT_CLASSIFICATION	3.8722495573075245E-5	TEST
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999972164631236	WITHOUT_CLASSIFICATION	2.7835368764665394E-6	TEST
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.999988491913157	WITHOUT_CLASSIFICATION	1.1508086843053852E-5	TEST
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999661238653976	WITHOUT_CLASSIFICATION	3.387613460230195E-5	TEST
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999440592701405	WITHOUT_CLASSIFICATION	5.594072985949998E-5	TEST
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9998871066642974	WITHOUT_CLASSIFICATION	1.1289333570260905E-4	TEST
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.999998536210185	WITHOUT_CLASSIFICATION	1.4637898150265332E-6	TEST
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999901046050557	WITHOUT_CLASSIFICATION	9.89539494428929E-6	TEST
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999961437955348	WITHOUT_CLASSIFICATION	3.85620446524187E-6	TEST
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.999982921764747	WITHOUT_CLASSIFICATION	1.7078235252894898E-5	TEST
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9976791560107301	WITHOUT_CLASSIFICATION	0.00232084398926985	TEST
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9998723609818092	WITHOUT_CLASSIFICATION	1.2763901819070177E-4	TEST
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.99999747085242	WITHOUT_CLASSIFICATION	2.5291475799972284E-6	TEST
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.999996598917088	WITHOUT_CLASSIFICATION	3.4010829120815864E-6	TEST
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999992896072851	WITHOUT_CLASSIFICATION	7.103927148910615E-7	TEST
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9995139283536604	WITHOUT_CLASSIFICATION	4.8607164633964893E-4	TEST
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999821938919987	WITHOUT_CLASSIFICATION	1.7806108001183038E-5	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999955679538756	WITHOUT_CLASSIFICATION	4.432046124493697E-6	TEST
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.99762030070162	WITHOUT_CLASSIFICATION	0.002379699298380048	TEST
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999857853806503	WITHOUT_CLASSIFICATION	1.421461934979988E-5	TEST
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999989451465043	WITHOUT_CLASSIFICATION	1.054853495722448E-6	TEST
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999982173437625	WITHOUT_CLASSIFICATION	1.7826562375574399E-6	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999886239986778	WITHOUT_CLASSIFICATION	1.1376001322180513E-5	TEST
// extension extensions	WITHOUT_CLASSIFICATION	0.9999830509915391	WITHOUT_CLASSIFICATION	1.6949008460985727E-5	TEST
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999680752199056	WITHOUT_CLASSIFICATION	3.19247800944999E-5	TEST
// try all extensions	WITHOUT_CLASSIFICATION	0.999989080135625	WITHOUT_CLASSIFICATION	1.0919864374951782E-5	TEST
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999808602891785	WITHOUT_CLASSIFICATION	1.9139710821399426E-5	TEST
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999928438991365	WITHOUT_CLASSIFICATION	7.156100863608934E-6	TEST
// try only literal search	WITHOUT_CLASSIFICATION	0.9999801949975645	WITHOUT_CLASSIFICATION	1.980500243542189E-5	TEST
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999966101463686	WITHOUT_CLASSIFICATION	3.3898536313588777E-6	TEST
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999896384085378	WITHOUT_CLASSIFICATION	1.0361591462143595E-5	TEST
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999989790604097	WITHOUT_CLASSIFICATION	1.020939590317352E-6	TEST
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999732624292653	WITHOUT_CLASSIFICATION	2.673757073462355E-5	TEST
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999996210096774	WITHOUT_CLASSIFICATION	3.789903225040677E-7	TEST
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999944791205847	WITHOUT_CLASSIFICATION	5.520879415298233E-6	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999871753674655	WITHOUT_CLASSIFICATION	1.2824632534450205E-5	TEST
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999903572738432	WITHOUT_CLASSIFICATION	9.642726156765718E-6	TEST
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999966328482279	WITHOUT_CLASSIFICATION	3.3671517721492947E-6	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9998810784502167	WITHOUT_CLASSIFICATION	1.18921549783372E-4	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9998810784502167	WITHOUT_CLASSIFICATION	1.18921549783372E-4	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.999946962663723	WITHOUT_CLASSIFICATION	5.303733627698913E-5	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.999946962663723	WITHOUT_CLASSIFICATION	5.303733627698913E-5	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999471619346212	WITHOUT_CLASSIFICATION	5.2838065378824395E-5	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999471619346212	WITHOUT_CLASSIFICATION	5.2838065378824395E-5	TEST
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999520956985207	WITHOUT_CLASSIFICATION	4.790430147934324E-5	TEST
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999564694171498	WITHOUT_CLASSIFICATION	4.353058285013171E-5	TEST
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9998054796004419	WITHOUT_CLASSIFICATION	1.9452039955807166E-4	TEST
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999588218129207	WITHOUT_CLASSIFICATION	4.117818707926353E-5	TEST
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.999994262045888	WITHOUT_CLASSIFICATION	5.737954111943973E-6	TEST
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9985079095032863	WITHOUT_CLASSIFICATION	0.001492090496713728	TEST
// signed short, native	WITHOUT_CLASSIFICATION	0.9999821185025782	WITHOUT_CLASSIFICATION	1.7881497421758914E-5	TEST
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999976665064303	WITHOUT_CLASSIFICATION	2.333493569745842E-6	TEST
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999725141280493	WITHOUT_CLASSIFICATION	2.7485871950667636E-5	TEST
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9991165468446198	WITHOUT_CLASSIFICATION	8.834531553801563E-4	TEST
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9995739540207582	WITHOUT_CLASSIFICATION	4.260459792418358E-4	TEST
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999943444612032	WITHOUT_CLASSIFICATION	5.655538796921102E-6	TEST
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999988433306539	WITHOUT_CLASSIFICATION	1.1566693460047987E-6	TEST
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999995307473101	WITHOUT_CLASSIFICATION	4.692526899381993E-7	TEST
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999035349873928	WITHOUT_CLASSIFICATION	9.646501260726951E-5	TEST
//            write('S');	WITHOUT_CLASSIFICATION	0.999976527841881	WITHOUT_CLASSIFICATION	2.3472158119043312E-5	TEST
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.999998368856316	WITHOUT_CLASSIFICATION	1.6311436840687812E-6	TEST
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999825713440438	WITHOUT_CLASSIFICATION	1.7428655956298007E-5	TEST
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999042335425791	WITHOUT_CLASSIFICATION	9.576645742092434E-5	TEST
// w_symbol	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// w_unique	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.999951879697892	WITHOUT_CLASSIFICATION	4.812030210808449E-5	TEST
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999917318007714	WITHOUT_CLASSIFICATION	8.268199228710809E-6	TEST
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999770618359091	WITHOUT_CLASSIFICATION	2.29381640910091E-5	TEST
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9998797718673285	WITHOUT_CLASSIFICATION	1.2022813267141226E-4	TEST
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999902672979485	WITHOUT_CLASSIFICATION	9.732702051531155E-6	TEST
// sic	WITHOUT_CLASSIFICATION	0.9999184955562991	WITHOUT_CLASSIFICATION	8.150444370085729E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999778882908033	WITHOUT_CLASSIFICATION	2.2111709196808436E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999778882908033	WITHOUT_CLASSIFICATION	2.2111709196808436E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999778882908033	WITHOUT_CLASSIFICATION	2.2111709196808436E-5	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999534757583	WITHOUT_CLASSIFICATION	4.652424181303461E-8	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999534757583	WITHOUT_CLASSIFICATION	4.652424181303461E-8	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999913094863657	WITHOUT_CLASSIFICATION	8.690513634239765E-6	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999913094863657	WITHOUT_CLASSIFICATION	8.690513634239765E-6	TEST
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999988203184059	WITHOUT_CLASSIFICATION	1.1796815940781374E-6	TEST
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9999785498027283	WITHOUT_CLASSIFICATION	2.145019727167169E-5	TEST
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999820879324155	WITHOUT_CLASSIFICATION	1.7912067584459355E-5	TEST
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999821792470202	WITHOUT_CLASSIFICATION	1.7820752979794295E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999778882908033	WITHOUT_CLASSIFICATION	2.2111709196808436E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999778882908033	WITHOUT_CLASSIFICATION	2.2111709196808436E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999778882908033	WITHOUT_CLASSIFICATION	2.2111709196808436E-5	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999534757583	WITHOUT_CLASSIFICATION	4.652424181303461E-8	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999534757583	WITHOUT_CLASSIFICATION	4.652424181303461E-8	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999534757583	WITHOUT_CLASSIFICATION	4.652424181303461E-8	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999913094863657	WITHOUT_CLASSIFICATION	8.690513634239765E-6	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999913094863657	WITHOUT_CLASSIFICATION	8.690513634239765E-6	TEST
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999833304987502	WITHOUT_CLASSIFICATION	1.6669501249793834E-5	TEST
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999964457328503	WITHOUT_CLASSIFICATION	3.55426714976477E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999926644605417	WITHOUT_CLASSIFICATION	7.335539458373926E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999926644605417	WITHOUT_CLASSIFICATION	7.335539458373926E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999926644605417	WITHOUT_CLASSIFICATION	7.335539458373926E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999926644605417	WITHOUT_CLASSIFICATION	7.335539458373926E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999926644605417	WITHOUT_CLASSIFICATION	7.335539458373926E-6	TEST
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999827461109356	WITHOUT_CLASSIFICATION	1.725388906445838E-5	TEST
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9999440291078684	WITHOUT_CLASSIFICATION	5.597089213150938E-5	TEST
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999945280772472	WITHOUT_CLASSIFICATION	5.471922752814923E-6	TEST
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999893509707413	WITHOUT_CLASSIFICATION	1.0649029258803487E-5	TEST
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999543496074319	WITHOUT_CLASSIFICATION	4.565039256816869E-5	TEST
// not enough bytes	WITHOUT_CLASSIFICATION	0.9999591957200273	WITHOUT_CLASSIFICATION	4.0804279972559063E-5	TEST
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999924547856195	WITHOUT_CLASSIFICATION	7.545214380483543E-6	TEST
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999956012102127	WITHOUT_CLASSIFICATION	4.398789787296717E-6	TEST
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999878994766214	WITHOUT_CLASSIFICATION	1.2100523378641632E-5	TEST
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999783636545376	WITHOUT_CLASSIFICATION	2.163634546241723E-5	TEST
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9997592782524596	WITHOUT_CLASSIFICATION	2.4072174754034283E-4	TEST
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999100332667058	WITHOUT_CLASSIFICATION	8.996673329423254E-5	TEST
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.999976836860889	WITHOUT_CLASSIFICATION	2.3163139111053895E-5	TEST
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9998921847812882	WITHOUT_CLASSIFICATION	1.0781521871189618E-4	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999920501586174	WITHOUT_CLASSIFICATION	7.94984138257044E-6	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999920501586174	WITHOUT_CLASSIFICATION	7.94984138257044E-6	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999920501586174	WITHOUT_CLASSIFICATION	7.94984138257044E-6	TEST
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.986968036828671	WITHOUT_CLASSIFICATION	0.013031963171328988	TEST
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.986968036828671	WITHOUT_CLASSIFICATION	0.013031963171328988	TEST
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999978786845177	WITHOUT_CLASSIFICATION	2.1213154822078843E-6	TEST
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999478949604155	WITHOUT_CLASSIFICATION	5.210503958442993E-5	TEST
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999570057478128	WITHOUT_CLASSIFICATION	4.299425218719275E-5	TEST
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999570076770192	WITHOUT_CLASSIFICATION	4.299232298078196E-5	TEST
// single precision, native	WITHOUT_CLASSIFICATION	0.9999799682060261	WITHOUT_CLASSIFICATION	2.00317939740022E-5	TEST
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999568256560892	WITHOUT_CLASSIFICATION	4.317434391083189E-5	TEST
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999686494385795	WITHOUT_CLASSIFICATION	3.135056142041244E-5	TEST
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999686508453353	WITHOUT_CLASSIFICATION	3.134915466473641E-5	TEST
// double precision, native	WITHOUT_CLASSIFICATION	0.9999853933014329	WITHOUT_CLASSIFICATION	1.4606698567066705E-5	TEST
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999821930929603	WITHOUT_CLASSIFICATION	1.7806907039722687E-5	TEST
// signed char	WITHOUT_CLASSIFICATION	0.9999918463158877	WITHOUT_CLASSIFICATION	8.153684112256156E-6	TEST
// unsigned char	WITHOUT_CLASSIFICATION	0.9999918323762342	WITHOUT_CLASSIFICATION	8.167623765797394E-6	TEST
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999821247689715	WITHOUT_CLASSIFICATION	1.787523102843636E-5	TEST
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999917657432185	WITHOUT_CLASSIFICATION	8.234256781486829E-6	TEST
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999821768411971	WITHOUT_CLASSIFICATION	1.7823158802951673E-5	TEST
// int, native	WITHOUT_CLASSIFICATION	0.9999917896830848	WITHOUT_CLASSIFICATION	8.210316915189054E-6	TEST
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999613415147751	WITHOUT_CLASSIFICATION	3.8658485224894554E-5	TEST
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999480497141456	WITHOUT_CLASSIFICATION	5.1950285854400964E-5	TEST
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999912404132639	WITHOUT_CLASSIFICATION	8.759586735989027E-6	TEST
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.999973611490939	WITHOUT_CLASSIFICATION	2.63885090610041E-5	TEST
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999820623474323	WITHOUT_CLASSIFICATION	1.7937652567741354E-5	TEST
// obtain a	WITHOUT_CLASSIFICATION	0.9999946198249295	WITHOUT_CLASSIFICATION	5.380175070439304E-6	TEST
// obtain b	WITHOUT_CLASSIFICATION	0.9999919220352799	WITHOUT_CLASSIFICATION	8.077964720261632E-6	TEST
// obtain c	WITHOUT_CLASSIFICATION	0.9999929363817018	WITHOUT_CLASSIFICATION	7.0636182982402775E-6	TEST
// obtain d	WITHOUT_CLASSIFICATION	0.9999917293753222	WITHOUT_CLASSIFICATION	8.270624677798777E-6	TEST
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999082801624791	WITHOUT_CLASSIFICATION	9.171983752088222E-5	TEST
/* 1 */	WITHOUT_CLASSIFICATION	0.9998379841786081	WITHOUT_CLASSIFICATION	1.620158213917795E-4	TEST
/* 2 */	WITHOUT_CLASSIFICATION	0.9998533417363764	WITHOUT_CLASSIFICATION	1.46658263623673E-4	TEST
/* 3 */	WITHOUT_CLASSIFICATION	0.9995458749652857	WITHOUT_CLASSIFICATION	4.5412503471435037E-4	TEST
/* 4 */	WITHOUT_CLASSIFICATION	0.9998426826165956	WITHOUT_CLASSIFICATION	1.5731738340448134E-4	TEST
/* 5 */	WITHOUT_CLASSIFICATION	0.99982796662951	WITHOUT_CLASSIFICATION	1.720333704900399E-4	TEST
/* 6 */	WITHOUT_CLASSIFICATION	0.9998347421903622	WITHOUT_CLASSIFICATION	1.6525780963775542E-4	TEST
/* 7 */	WITHOUT_CLASSIFICATION	0.9998193244804068	WITHOUT_CLASSIFICATION	1.8067551959325478E-4	TEST
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999680885618614	WITHOUT_CLASSIFICATION	3.1911438138630804E-5	TEST
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999482671237401	WITHOUT_CLASSIFICATION	5.173287625982809E-5	TEST
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999987089619647	WITHOUT_CLASSIFICATION	1.2910380352250264E-6	TEST
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9319667472067732	TEST	0.06803325279322678	WITHOUT_CLASSIFICATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999913706529486	WITHOUT_CLASSIFICATION	8.62934705147965E-6	TEST
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999980895120928	WITHOUT_CLASSIFICATION	1.9104879071419454E-6	TEST
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999617781346634	WITHOUT_CLASSIFICATION	3.822186533661347E-5	TEST
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999770007442685	WITHOUT_CLASSIFICATION	2.2999255731507566E-5	TEST
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999414232299304	WITHOUT_CLASSIFICATION	5.8576770069703516E-5	TEST
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9997992216849574	WITHOUT_CLASSIFICATION	2.0077831504271322E-4	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.999697398637282	WITHOUT_CLASSIFICATION	3.0260136271801345E-4	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.999697398637282	WITHOUT_CLASSIFICATION	3.0260136271801345E-4	TEST
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9996669490089681	WITHOUT_CLASSIFICATION	3.330509910318247E-4	TEST
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999959336904831	WITHOUT_CLASSIFICATION	4.066309516867293E-6	TEST
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9997992216849574	WITHOUT_CLASSIFICATION	2.0077831504271322E-4	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9917216908811172	WITHOUT_CLASSIFICATION	0.008278309118882816	TEST
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9994780229249757	WITHOUT_CLASSIFICATION	5.219770750242908E-4	TEST
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9998039079220337	WITHOUT_CLASSIFICATION	1.960920779663525E-4	TEST
// are we recursing?	WITHOUT_CLASSIFICATION	0.9999926215660698	WITHOUT_CLASSIFICATION	7.378433930258066E-6	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999904912103957	WITHOUT_CLASSIFICATION	9.508789604129136E-6	TEST
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999957424849475	WITHOUT_CLASSIFICATION	4.257515052452622E-6	TEST
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999945926930099	WITHOUT_CLASSIFICATION	5.407306990143503E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999985903605297	WITHOUT_CLASSIFICATION	1.4096394702675017E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999985903605297	WITHOUT_CLASSIFICATION	1.4096394702675017E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999985903605297	WITHOUT_CLASSIFICATION	1.4096394702675017E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999985903605297	WITHOUT_CLASSIFICATION	1.4096394702675017E-6	TEST
// try both	WITHOUT_CLASSIFICATION	0.9999929196690094	WITHOUT_CLASSIFICATION	7.08033099057567E-6	TEST
// just unix	WITHOUT_CLASSIFICATION	0.9999967662596019	WITHOUT_CLASSIFICATION	3.2337403982196757E-6	TEST
// just windows	WITHOUT_CLASSIFICATION	0.9999980569865652	WITHOUT_CLASSIFICATION	1.9430134347611448E-6	TEST
// neither	WITHOUT_CLASSIFICATION	0.999918493896735	WITHOUT_CLASSIFICATION	8.150610326491176E-5	TEST
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9998929655000358	WITHOUT_CLASSIFICATION	1.0703449996420635E-4	TEST
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999680923207362	WITHOUT_CLASSIFICATION	3.190767926378408E-5	TEST
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999925189605768	WITHOUT_CLASSIFICATION	7.481039423113321E-6	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999972992192733	WITHOUT_CLASSIFICATION	2.700780726750034E-6	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999972992192733	WITHOUT_CLASSIFICATION	2.700780726750034E-6	TEST
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999976963125075	WITHOUT_CLASSIFICATION	2.303687492517986E-6	TEST
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999731128641393	WITHOUT_CLASSIFICATION	2.6887135860859447E-5	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9992743132596589	WITHOUT_CLASSIFICATION	7.256867403411788E-4	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999959200952324	WITHOUT_CLASSIFICATION	4.079904767521224E-6	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999959200952324	WITHOUT_CLASSIFICATION	4.079904767521224E-6	TEST
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999956492994473	WITHOUT_CLASSIFICATION	4.350700552740931E-6	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999983312659276	WITHOUT_CLASSIFICATION	1.6687340724279858E-6	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999983312659276	WITHOUT_CLASSIFICATION	1.6687340724279858E-6	TEST
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9989446524190277	WITHOUT_CLASSIFICATION	0.0010553475809722934	TEST
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999986940066085	WITHOUT_CLASSIFICATION	1.3059933916306276E-6	TEST
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999996235326155	WITHOUT_CLASSIFICATION	3.764673845773805E-7	TEST
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9996510844603474	WITHOUT_CLASSIFICATION	3.4891553965252074E-4	TEST
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999888469140141	WITHOUT_CLASSIFICATION	1.1153085985947608E-5	TEST
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999995746619541	WITHOUT_CLASSIFICATION	4.2533804584890836E-7	TEST
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9999548023471792	WITHOUT_CLASSIFICATION	4.5197652820776706E-5	TEST
//sequential	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999958324257585	WITHOUT_CLASSIFICATION	4.167574241483736E-6	TEST
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999829794679957	WITHOUT_CLASSIFICATION	1.7020532004284874E-5	TEST
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999552685318642	WITHOUT_CLASSIFICATION	4.473146813587982E-5	TEST
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9077817757188708	WITHOUT_CLASSIFICATION	0.09221822428112923	TEST
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9128061530590095	WITHOUT_CLASSIFICATION	0.08719384694099043	TEST
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999967083624989	WITHOUT_CLASSIFICATION	3.291637501144554E-6	TEST
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999882424663555	WITHOUT_CLASSIFICATION	1.1757533644342385E-5	TEST
// Args	WITHOUT_CLASSIFICATION	0.999918570351192	WITHOUT_CLASSIFICATION	8.142964880793513E-5	TEST
// static methods only	WITHOUT_CLASSIFICATION	0.9999860666204664	WITHOUT_CLASSIFICATION	1.3933379533594047E-5	TEST
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9996922337590076	WITHOUT_CLASSIFICATION	3.0776624099247956E-4	TEST
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999972162916467	WITHOUT_CLASSIFICATION	2.7837083532327425E-6	TEST
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999554568420636	WITHOUT_CLASSIFICATION	4.454315793658607E-5	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.999996097852418	WITHOUT_CLASSIFICATION	3.90214758193875E-6	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999951927654532	WITHOUT_CLASSIFICATION	4.8072345467071845E-6	TEST
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9998652011878362	WITHOUT_CLASSIFICATION	1.347988121638836E-4	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999943412662302	WITHOUT_CLASSIFICATION	5.658733769804076E-6	TEST
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9997573127709576	WITHOUT_CLASSIFICATION	2.42687229042508E-4	TEST
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999994100054977	WITHOUT_CLASSIFICATION	5.899945023127419E-7	TEST
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.999941090104747	WITHOUT_CLASSIFICATION	5.8909895253017635E-5	TEST
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999993050480774	WITHOUT_CLASSIFICATION	6.949519226359486E-7	TEST
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999170574836198	WITHOUT_CLASSIFICATION	8.294251638020772E-5	TEST
// ..	WITHOUT_CLASSIFICATION	0.9999188416320031	WITHOUT_CLASSIFICATION	8.115836799691862E-5	TEST
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999605418604163	WITHOUT_CLASSIFICATION	3.9458139583709365E-5	TEST
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9998952350317399	WITHOUT_CLASSIFICATION	1.0476496826008856E-4	TEST
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999763906629932	WITHOUT_CLASSIFICATION	2.3609337006873844E-5	TEST
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999992408010889	WITHOUT_CLASSIFICATION	7.591989110301543E-7	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9996206062422307	WITHOUT_CLASSIFICATION	3.7939375776930456E-4	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999920433895855	WITHOUT_CLASSIFICATION	7.956610414515747E-6	TEST
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9996922337590076	WITHOUT_CLASSIFICATION	3.0776624099247956E-4	TEST
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9996964579693951	WITHOUT_CLASSIFICATION	3.035420306049082E-4	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9996206062422307	WITHOUT_CLASSIFICATION	3.7939375776930456E-4	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999920433895855	WITHOUT_CLASSIFICATION	7.956610414515747E-6	TEST
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999489013777183	WITHOUT_CLASSIFICATION	5.109862228179235E-5	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9998076880249989	WITHOUT_CLASSIFICATION	1.9231197500122648E-4	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9998076880249989	WITHOUT_CLASSIFICATION	1.9231197500122648E-4	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.999944361606276	WITHOUT_CLASSIFICATION	5.563839372400697E-5	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999938515192711	WITHOUT_CLASSIFICATION	6.148480728793104E-6	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999911444592127	WITHOUT_CLASSIFICATION	8.855540787351544E-6	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999962695348968	WITHOUT_CLASSIFICATION	3.7304651031843574E-6	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9998632301195591	WITHOUT_CLASSIFICATION	1.367698804408503E-4	TEST
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999564969642329	WITHOUT_CLASSIFICATION	4.350303576699367E-5	TEST
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999785737162227	WITHOUT_CLASSIFICATION	2.142628377736822E-5	TEST
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999769666438537	WITHOUT_CLASSIFICATION	2.30333561463061E-5	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999426481139259	WITHOUT_CLASSIFICATION	5.735188607419995E-5	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9999187120062415	WITHOUT_CLASSIFICATION	8.128799375849814E-5	TEST
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999236133211544	WITHOUT_CLASSIFICATION	7.638667884563351E-5	TEST
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999822615947933	WITHOUT_CLASSIFICATION	1.7738405206725133E-5	TEST
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999887928381027	WITHOUT_CLASSIFICATION	1.1207161897382347E-5	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999735507820728	WITHOUT_CLASSIFICATION	2.6449217927186327E-5	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999735507820728	WITHOUT_CLASSIFICATION	2.6449217927186327E-5	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999082625507584	WITHOUT_CLASSIFICATION	9.173744924165595E-5	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999082625507584	WITHOUT_CLASSIFICATION	9.173744924165595E-5	TEST
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999803466649432	WITHOUT_CLASSIFICATION	1.96533350568686E-5	TEST
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999945599781866	WITHOUT_CLASSIFICATION	5.440021813371854E-6	TEST
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999572530509093	WITHOUT_CLASSIFICATION	4.274694909065697E-5	TEST
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9996922337590076	WITHOUT_CLASSIFICATION	3.0776624099247956E-4	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999911444592127	WITHOUT_CLASSIFICATION	8.855540787351544E-6	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999962695348968	WITHOUT_CLASSIFICATION	3.7304651031843574E-6	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999426481139259	WITHOUT_CLASSIFICATION	5.735188607419995E-5	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9999187120062415	WITHOUT_CLASSIFICATION	8.128799375849814E-5	TEST
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999892431053785	WITHOUT_CLASSIFICATION	1.0756894621458721E-5	TEST
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999954532253911	WITHOUT_CLASSIFICATION	4.5467746089834735E-6	TEST
// \v	WITHOUT_CLASSIFICATION	0.9999184955562991	WITHOUT_CLASSIFICATION	8.150444370085729E-5	TEST
// dangling '%' char	WITHOUT_CLASSIFICATION	0.999991832943835	WITHOUT_CLASSIFICATION	8.16705616507257E-6	TEST
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.99997710718041	WITHOUT_CLASSIFICATION	2.289281959010441E-5	TEST
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999009764212731	WITHOUT_CLASSIFICATION	9.902357872683985E-5	TEST
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9997282150204132	WITHOUT_CLASSIFICATION	2.717849795867665E-4	TEST
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999917452036368	WITHOUT_CLASSIFICATION	8.254796363238482E-6	TEST
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999964139035744	WITHOUT_CLASSIFICATION	3.5860964255659174E-6	TEST
// negative values	WITHOUT_CLASSIFICATION	0.9999943160654917	WITHOUT_CLASSIFICATION	5.683934508268058E-6	TEST
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999979849916596	WITHOUT_CLASSIFICATION	2.015008340376838E-6	TEST
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9970741438185607	WITHOUT_CLASSIFICATION	0.0029258561814392947	TEST
// no such luck...	WITHOUT_CLASSIFICATION	0.9999955639003961	WITHOUT_CLASSIFICATION	4.43609960388601E-6	TEST
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9997892919147469	WITHOUT_CLASSIFICATION	2.1070808525318037E-4	TEST
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999928313388934	WITHOUT_CLASSIFICATION	7.168661106598304E-6	TEST
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999918350152492	WITHOUT_CLASSIFICATION	8.164984750796098E-6	TEST
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999754041505521	WITHOUT_CLASSIFICATION	2.459584944799629E-5	TEST
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999204454167857	WITHOUT_CLASSIFICATION	7.955458321432983E-5	TEST
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999641235124479	WITHOUT_CLASSIFICATION	3.5876487552002595E-5	TEST
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999820337929397	WITHOUT_CLASSIFICATION	1.7966207060251652E-5	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999820337929397	WITHOUT_CLASSIFICATION	1.7966207060251652E-5	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999820337929397	WITHOUT_CLASSIFICATION	1.7966207060251652E-5	TEST
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9998133324469135	WITHOUT_CLASSIFICATION	1.866675530865457E-4	TEST
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999814330968428	WITHOUT_CLASSIFICATION	1.8566903157097376E-5	TEST
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999995513210862	WITHOUT_CLASSIFICATION	4.486789138735253E-7	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9996938976752016	WITHOUT_CLASSIFICATION	3.0610232479851446E-4	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9996938976752016	WITHOUT_CLASSIFICATION	3.0610232479851446E-4	TEST
// \v	WITHOUT_CLASSIFICATION	0.9999184955562991	WITHOUT_CLASSIFICATION	8.150444370085729E-5	TEST
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9996126367327413	WITHOUT_CLASSIFICATION	3.873632672586792E-4	TEST
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9996922337590076	WITHOUT_CLASSIFICATION	3.0776624099247956E-4	TEST
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9996922337590076	WITHOUT_CLASSIFICATION	3.0776624099247956E-4	TEST
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9996922337590076	WITHOUT_CLASSIFICATION	3.0776624099247956E-4	TEST
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9996922337590076	WITHOUT_CLASSIFICATION	3.0776624099247956E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9996922337590076	WITHOUT_CLASSIFICATION	3.0776624099247956E-4	TEST
// no number	WITHOUT_CLASSIFICATION	0.9999954056689285	WITHOUT_CLASSIFICATION	4.59433107137844E-6	TEST
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999935676154611	WITHOUT_CLASSIFICATION	6.43238453896489E-6	TEST
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.998456833639998	WITHOUT_CLASSIFICATION	0.0015431663600020467	TEST
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999151292618661	WITHOUT_CLASSIFICATION	8.487073813389112E-5	TEST
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999983811647557	WITHOUT_CLASSIFICATION	1.618835244280645E-6	TEST
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.999997420322851	WITHOUT_CLASSIFICATION	2.579677148940813E-6	TEST
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999930214964156	WITHOUT_CLASSIFICATION	6.978503584402152E-6	TEST
// we reached the end	WITHOUT_CLASSIFICATION	0.9999950126833675	WITHOUT_CLASSIFICATION	4.987316632481609E-6	TEST
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999790082777659	WITHOUT_CLASSIFICATION	2.099172223410216E-5	TEST
// states	WITHOUT_CLASSIFICATION	0.9999260801389606	WITHOUT_CLASSIFICATION	7.391986103939549E-5	TEST
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999529241755127	WITHOUT_CLASSIFICATION	4.7075824487302154E-5	TEST
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999936090057084	WITHOUT_CLASSIFICATION	6.390994291569956E-6	TEST
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999996228920695	WITHOUT_CLASSIFICATION	3.771079305624392E-7	TEST
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999801413713276	WITHOUT_CLASSIFICATION	1.985862867233763E-5	TEST
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999926073754897	WITHOUT_CLASSIFICATION	7.392624510265361E-6	TEST
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999572536811365	WITHOUT_CLASSIFICATION	4.274631886350997E-5	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999881295080226	WITHOUT_CLASSIFICATION	1.1870491977318083E-5	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999708089838685	WITHOUT_CLASSIFICATION	2.9191016131473997E-5	TEST
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999900673970534	WITHOUT_CLASSIFICATION	9.932602946477183E-6	TEST
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999863511416801	WITHOUT_CLASSIFICATION	1.3648858319822376E-5	TEST
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999619024387	WITHOUT_CLASSIFICATION	3.809756132374006E-8	TEST
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999980949546382	WITHOUT_CLASSIFICATION	1.9050453618878204E-6	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999381992628159	WITHOUT_CLASSIFICATION	6.180073718408122E-5	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999381992628159	WITHOUT_CLASSIFICATION	6.180073718408122E-5	TEST
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999732182748124	WITHOUT_CLASSIFICATION	2.6781725187631686E-5	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999935283464646	WITHOUT_CLASSIFICATION	6.471653535445709E-6	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999935283464646	WITHOUT_CLASSIFICATION	6.471653535445709E-6	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999970169333824	WITHOUT_CLASSIFICATION	2.983066617707877E-6	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999970169333824	WITHOUT_CLASSIFICATION	2.983066617707877E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999889146529408	WITHOUT_CLASSIFICATION	1.1085347059109236E-5	TEST
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999873255260153	WITHOUT_CLASSIFICATION	1.2674473984647785E-5	TEST
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999984004144366	WITHOUT_CLASSIFICATION	1.5995855633615996E-6	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.999992138401428	WITHOUT_CLASSIFICATION	7.861598571970484E-6	TEST
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999906310640195	WITHOUT_CLASSIFICATION	9.36893598057509E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999206746941464	WITHOUT_CLASSIFICATION	7.932530585364482E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999206746941464	WITHOUT_CLASSIFICATION	7.932530585364482E-5	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999881295080226	WITHOUT_CLASSIFICATION	1.1870491977318083E-5	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999881295080226	WITHOUT_CLASSIFICATION	1.1870491977318083E-5	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999881295080226	WITHOUT_CLASSIFICATION	1.1870491977318083E-5	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999708089838685	WITHOUT_CLASSIFICATION	2.9191016131473997E-5	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999381992628159	WITHOUT_CLASSIFICATION	6.180073718408122E-5	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999381992628159	WITHOUT_CLASSIFICATION	6.180073718408122E-5	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999381992628159	WITHOUT_CLASSIFICATION	6.180073718408122E-5	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999889146529408	WITHOUT_CLASSIFICATION	1.1085347059109236E-5	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999889146529408	WITHOUT_CLASSIFICATION	1.1085347059109236E-5	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999889146529408	WITHOUT_CLASSIFICATION	1.1085347059109236E-5	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.999992138401428	WITHOUT_CLASSIFICATION	7.861598571970484E-6	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.999992138401428	WITHOUT_CLASSIFICATION	7.861598571970484E-6	TEST
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999931069325805	WITHOUT_CLASSIFICATION	6.893067419509666E-6	TEST
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.999966324921903	WITHOUT_CLASSIFICATION	3.367507809695496E-5	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.999982676605062	WITHOUT_CLASSIFICATION	1.7323394937971666E-5	TEST
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9991707474958939	WITHOUT_CLASSIFICATION	8.292525041062002E-4	TEST
// no digits, error	WITHOUT_CLASSIFICATION	0.9999978480789602	WITHOUT_CLASSIFICATION	2.1519210398829593E-6	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999919854537547	WITHOUT_CLASSIFICATION	8.014546245281844E-6	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999919854537547	WITHOUT_CLASSIFICATION	8.014546245281844E-6	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999747838344503	WITHOUT_CLASSIFICATION	2.521616554969508E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999451337285248	WITHOUT_CLASSIFICATION	5.486627147527085E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999451337285248	WITHOUT_CLASSIFICATION	5.486627147527085E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999451337285248	WITHOUT_CLASSIFICATION	5.486627147527085E-5	TEST
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999941194636058	WITHOUT_CLASSIFICATION	5.8805363942215715E-6	TEST
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999893814797995	WITHOUT_CLASSIFICATION	1.0618520200515097E-5	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999708089838685	WITHOUT_CLASSIFICATION	2.9191016131473997E-5	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999889146529408	WITHOUT_CLASSIFICATION	1.1085347059109236E-5	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999889146529408	WITHOUT_CLASSIFICATION	1.1085347059109236E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999451337285248	WITHOUT_CLASSIFICATION	5.486627147527085E-5	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999747838344503	WITHOUT_CLASSIFICATION	2.521616554969508E-5	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999557973679722	WITHOUT_CLASSIFICATION	4.4202632027644184E-5	TEST
// switch //while	WITHOUT_CLASSIFICATION	0.9999917871788532	WITHOUT_CLASSIFICATION	8.212821146793211E-6	TEST
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999993566731917	WITHOUT_CLASSIFICATION	6.433268083589409E-7	TEST
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999968463999628	WITHOUT_CLASSIFICATION	3.1536000373598672E-6	TEST
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999820337929397	WITHOUT_CLASSIFICATION	1.7966207060251652E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9998760297627521	WITHOUT_CLASSIFICATION	1.2397023724783438E-4	TEST
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999898808176588	WITHOUT_CLASSIFICATION	1.0119182341178407E-5	TEST
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999820337929397	WITHOUT_CLASSIFICATION	1.7966207060251652E-5	TEST
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.999951670001485	WITHOUT_CLASSIFICATION	4.832999851505401E-5	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999975845037706	WITHOUT_CLASSIFICATION	2.4154962293843075E-6	TEST
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999603707626114	WITHOUT_CLASSIFICATION	3.9629237388510646E-5	TEST
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999028498501779	WITHOUT_CLASSIFICATION	9.7150149822114E-5	TEST
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999702889754282	WITHOUT_CLASSIFICATION	2.971102457182385E-5	TEST
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999872931262851	WITHOUT_CLASSIFICATION	1.2706873714849095E-5	TEST
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999979286101521	WITHOUT_CLASSIFICATION	2.0713898479328114E-6	TEST
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999973342460976	WITHOUT_CLASSIFICATION	2.6657539024644708E-6	TEST
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9993864411963181	WITHOUT_CLASSIFICATION	6.135588036817979E-4	TEST
/*package-protected*/	WITHOUT_CLASSIFICATION	0.999820240161579	WITHOUT_CLASSIFICATION	1.7975983842094772E-4	TEST
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999962806128003	WITHOUT_CLASSIFICATION	3.7193871997298283E-6	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999000953728294	WITHOUT_CLASSIFICATION	9.990462717055132E-5	TEST
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9998467192499659	WITHOUT_CLASSIFICATION	1.53280750034076E-4	TEST
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999814385758494	WITHOUT_CLASSIFICATION	1.856142415060009E-5	TEST
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999985079689084	WITHOUT_CLASSIFICATION	1.4920310915463846E-6	TEST
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999638274191459	WITHOUT_CLASSIFICATION	3.617258085408836E-5	TEST
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9994892691833529	WITHOUT_CLASSIFICATION	5.107308166470818E-4	TEST
// unread back	WITHOUT_CLASSIFICATION	0.9999919551907318	WITHOUT_CLASSIFICATION	8.044809268183155E-6	TEST
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999931433673577	WITHOUT_CLASSIFICATION	6.856632642339378E-6	TEST
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999953180301595	WITHOUT_CLASSIFICATION	4.681969840467482E-6	TEST
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999911673352593	WITHOUT_CLASSIFICATION	8.832664740775172E-6	TEST
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999986975912649	WITHOUT_CLASSIFICATION	1.3024087349715656E-6	TEST
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999995363074248	WITHOUT_CLASSIFICATION	4.636925751414989E-7	TEST
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999818951270326	WITHOUT_CLASSIFICATION	1.81048729673178E-5	TEST
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999976233378893	WITHOUT_CLASSIFICATION	2.3766621106987645E-6	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999557973679722	WITHOUT_CLASSIFICATION	4.4202632027644184E-5	TEST
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999951769844008	WITHOUT_CLASSIFICATION	4.823015599164369E-6	TEST
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999796023195325	WITHOUT_CLASSIFICATION	2.0397680467488364E-5	TEST
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9998810810334171	WITHOUT_CLASSIFICATION	1.1891896658297916E-4	TEST
// silence	WITHOUT_CLASSIFICATION	0.9999184955562991	WITHOUT_CLASSIFICATION	8.150444370085729E-5	TEST
// silence	WITHOUT_CLASSIFICATION	0.9999184955562991	WITHOUT_CLASSIFICATION	8.150444370085729E-5	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.9999938402926529	WITHOUT_CLASSIFICATION	6.159707347003775E-6	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.9999938402926529	WITHOUT_CLASSIFICATION	6.159707347003775E-6	TEST
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999635346848387	WITHOUT_CLASSIFICATION	3.6465315161391034E-5	TEST
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9998747642722778	WITHOUT_CLASSIFICATION	1.25235727722181E-4	TEST
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999882915142301	WITHOUT_CLASSIFICATION	1.1708485769971134E-5	TEST
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999473248735262	WITHOUT_CLASSIFICATION	5.267512647380423E-5	TEST
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999603327594714	WITHOUT_CLASSIFICATION	3.9667240528655775E-5	TEST
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999913138911325	WITHOUT_CLASSIFICATION	8.68610886744348E-6	TEST
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999913713900982	WITHOUT_CLASSIFICATION	8.628609901893234E-6	TEST
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999967321137996	WITHOUT_CLASSIFICATION	3.2678862005104216E-6	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999997300328937	WITHOUT_CLASSIFICATION	2.6996710638973745E-7	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999675070954128	WITHOUT_CLASSIFICATION	3.249290458720321E-5	TEST
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999796626540329	WITHOUT_CLASSIFICATION	2.033734596703962E-5	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999886814029146	WITHOUT_CLASSIFICATION	1.131859708531861E-5	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999886814029146	WITHOUT_CLASSIFICATION	1.131859708531861E-5	TEST
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999583826282826	WITHOUT_CLASSIFICATION	4.161737171733178E-5	TEST
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999938709458582	WITHOUT_CLASSIFICATION	6.12905414175457E-6	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999725584662286	WITHOUT_CLASSIFICATION	2.7441533771372974E-5	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999725584662286	WITHOUT_CLASSIFICATION	2.7441533771372974E-5	TEST
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999924927254075	WITHOUT_CLASSIFICATION	7.5072745924781165E-6	TEST
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999939321322757	WITHOUT_CLASSIFICATION	6.067867724299608E-6	TEST
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999700568636171	WITHOUT_CLASSIFICATION	2.994313638295789E-5	TEST
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999800377331567	WITHOUT_CLASSIFICATION	1.9962266843252016E-5	TEST
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999855020631192	WITHOUT_CLASSIFICATION	1.4497936880742776E-5	TEST
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999202845368612	WITHOUT_CLASSIFICATION	7.971546313874971E-5	TEST
// save the ungot	WITHOUT_CLASSIFICATION	0.9999978114585125	WITHOUT_CLASSIFICATION	2.1885414875214404E-6	TEST
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999910904845648	WITHOUT_CLASSIFICATION	8.909515435314946E-6	TEST
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999797969173791	WITHOUT_CLASSIFICATION	2.0203082620866708E-5	TEST
// flush first	WITHOUT_CLASSIFICATION	0.9999947037801338	WITHOUT_CLASSIFICATION	5.296219866178589E-6	TEST
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999502428184742	WITHOUT_CLASSIFICATION	4.9757181525803454E-5	TEST
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.999921264123571	WITHOUT_CLASSIFICATION	7.873587642899425E-5	TEST
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999877936116731	WITHOUT_CLASSIFICATION	1.2206388326823032E-5	TEST
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999398667646945	WITHOUT_CLASSIFICATION	6.0133235305454465E-5	TEST
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.999992374787623	WITHOUT_CLASSIFICATION	7.625212377053172E-6	TEST
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9998358978482752	WITHOUT_CLASSIFICATION	1.641021517247408E-4	TEST
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999904911289595	WITHOUT_CLASSIFICATION	9.508871040389159E-6	TEST
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999906018342188	WITHOUT_CLASSIFICATION	9.398165781171675E-6	TEST
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9998887340451641	WITHOUT_CLASSIFICATION	1.1126595483598601E-4	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999383484600687	WITHOUT_CLASSIFICATION	6.165153993127219E-5	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.959293439848642	WITHOUT_CLASSIFICATION	0.04070656015135802	TEST
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999804309506816	WITHOUT_CLASSIFICATION	1.956904931838136E-5	TEST
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999826683751376	WITHOUT_CLASSIFICATION	1.7331624862370882E-5	TEST
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999806503225591	WITHOUT_CLASSIFICATION	1.9349677440926598E-5	TEST
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999921577775718	WITHOUT_CLASSIFICATION	7.842222428224677E-6	TEST
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.999996997613051	WITHOUT_CLASSIFICATION	3.00238694891728E-6	TEST
// else leave it null	WITHOUT_CLASSIFICATION	0.9999732916728309	WITHOUT_CLASSIFICATION	2.6708327169112642E-5	TEST
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999800080514689	WITHOUT_CLASSIFICATION	1.9991948531050138E-5	TEST
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999890846789546	WITHOUT_CLASSIFICATION	1.0915321045311515E-5	TEST
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999829563961595	WITHOUT_CLASSIFICATION	1.7043603840417686E-5	TEST
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999948943727791	WITHOUT_CLASSIFICATION	5.105627220873575E-6	TEST
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999953478160232	WITHOUT_CLASSIFICATION	4.652183976857642E-6	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999982249765889	WITHOUT_CLASSIFICATION	1.7750234110972797E-6	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999982249765889	WITHOUT_CLASSIFICATION	1.7750234110972797E-6	TEST
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999969663266388	WITHOUT_CLASSIFICATION	3.0336733610618454E-6	TEST
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.999999814863064	WITHOUT_CLASSIFICATION	1.8513693600954755E-7	TEST
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9996602984002741	WITHOUT_CLASSIFICATION	3.3970159972589495E-4	TEST
// Init	WITHOUT_CLASSIFICATION	0.999919278711045	WITHOUT_CLASSIFICATION	8.072128895488965E-5	TEST
// Block	WITHOUT_CLASSIFICATION	0.9999187152027724	WITHOUT_CLASSIFICATION	8.128479722763709E-5	TEST
// Copy constructor	WITHOUT_CLASSIFICATION	0.999993346585378	WITHOUT_CLASSIFICATION	6.653414621998004E-6	TEST
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.99930841317101	WITHOUT_CLASSIFICATION	6.915868289898895E-4	TEST
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.99930841317101	WITHOUT_CLASSIFICATION	6.915868289898895E-4	TEST
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9996133354767782	WITHOUT_CLASSIFICATION	3.866645232218162E-4	TEST
// ok	WITHOUT_CLASSIFICATION	0.9999278402289881	WITHOUT_CLASSIFICATION	7.21597710118961E-5	TEST
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999934580178573	WITHOUT_CLASSIFICATION	6.541982142741637E-6	TEST
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9998211428863829	WITHOUT_CLASSIFICATION	1.7885711361712356E-4	TEST
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999402137155008	WITHOUT_CLASSIFICATION	5.9786284499166E-5	TEST
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9996243695503587	WITHOUT_CLASSIFICATION	3.7563044964124867E-4	TEST
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999978454803959	WITHOUT_CLASSIFICATION	2.1545196040923196E-6	TEST
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999951560977484	WITHOUT_CLASSIFICATION	4.843902251528664E-6	TEST
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9996988596453591	WITHOUT_CLASSIFICATION	3.011403546408249E-4	TEST
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999774718256752	WITHOUT_CLASSIFICATION	2.2528174324810997E-5	TEST
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9999967998930674	WITHOUT_CLASSIFICATION	3.2001069324972776E-6	TEST
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999744865282526	WITHOUT_CLASSIFICATION	2.5513471747418013E-5	TEST
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999929239091496	WITHOUT_CLASSIFICATION	7.076090850459281E-6	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999943144524716	WITHOUT_CLASSIFICATION	5.685547528497675E-6	TEST
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999649511893267	WITHOUT_CLASSIFICATION	3.504881067323304E-5	TEST
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999536493560217	WITHOUT_CLASSIFICATION	4.635064397828545E-5	TEST
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9998759903624161	WITHOUT_CLASSIFICATION	1.2400963758379794E-4	TEST
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.999972244231027	WITHOUT_CLASSIFICATION	2.775576897300869E-5	TEST
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.999978043242611	WITHOUT_CLASSIFICATION	2.1956757389058718E-5	TEST
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999494108715201	WITHOUT_CLASSIFICATION	5.0589128479948787E-5	TEST
// void methods should work	WITHOUT_CLASSIFICATION	0.9999771149606139	WITHOUT_CLASSIFICATION	2.2885039386092663E-5	TEST
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.999979274636497	WITHOUT_CLASSIFICATION	2.0725363502908257E-5	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9998643836234847	WITHOUT_CLASSIFICATION	1.3561637651528707E-4	TEST
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9998875062738373	WITHOUT_CLASSIFICATION	1.1249372616263382E-4	TEST
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999928130083262	WITHOUT_CLASSIFICATION	7.186991673798589E-6	TEST
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.999961277504427	WITHOUT_CLASSIFICATION	3.8722495573075245E-5	TEST
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999906543556062	WITHOUT_CLASSIFICATION	9.345644393831929E-6	TEST
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9982237567958536	WITHOUT_CLASSIFICATION	0.0017762432041463186	TEST
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.999820240161579	WITHOUT_CLASSIFICATION	1.7975983842094772E-4	TEST
// value equality	WITHOUT_CLASSIFICATION	0.9999889346791971	WITHOUT_CLASSIFICATION	1.1065320802801077E-5	TEST
// identity equality	WITHOUT_CLASSIFICATION	0.9999922964554679	WITHOUT_CLASSIFICATION	7.703544532009448E-6	TEST
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999613748880962	WITHOUT_CLASSIFICATION	3.8625111903753845E-5	TEST
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999917349143331	WITHOUT_CLASSIFICATION	8.265085666779351E-6	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999820337929397	WITHOUT_CLASSIFICATION	1.7966207060251652E-5	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999820337929397	WITHOUT_CLASSIFICATION	1.7966207060251652E-5	TEST
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999820337929397	WITHOUT_CLASSIFICATION	1.7966207060251652E-5	TEST
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999363207837489	WITHOUT_CLASSIFICATION	6.367921625107885E-5	TEST
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999917265395176	WITHOUT_CLASSIFICATION	8.273460482324006E-6	TEST
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999735135220119	WITHOUT_CLASSIFICATION	2.648647798809005E-5	TEST
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999103987193178	WITHOUT_CLASSIFICATION	8.960128068222595E-5	TEST
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999844331971853	WITHOUT_CLASSIFICATION	1.5566802814705844E-5	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.999998591235719	WITHOUT_CLASSIFICATION	1.4087642810683518E-6	TEST
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999976799757122	WITHOUT_CLASSIFICATION	2.320024287888819E-6	TEST
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999714939519072	WITHOUT_CLASSIFICATION	2.850604809285751E-5	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999999128792386	WITHOUT_CLASSIFICATION	8.712076140639686E-8	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9996126367327413	WITHOUT_CLASSIFICATION	3.873632672586792E-4	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.99998087758457	WITHOUT_CLASSIFICATION	1.912241542998305E-5	TEST
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.999923422672775	WITHOUT_CLASSIFICATION	7.657732722498381E-5	TEST
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999977703333466	WITHOUT_CLASSIFICATION	2.2296666534924366E-6	TEST
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999964103823181	WITHOUT_CLASSIFICATION	3.5896176819078736E-6	TEST
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9998775592568339	WITHOUT_CLASSIFICATION	1.2244074316616514E-4	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999998279987303	WITHOUT_CLASSIFICATION	1.7200126965916697E-7	TEST
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.999820240161579	WITHOUT_CLASSIFICATION	1.7975983842094772E-4	TEST
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999957449581671	WITHOUT_CLASSIFICATION	4.255041832875635E-6	TEST
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9989860040935846	WITHOUT_CLASSIFICATION	0.0010139959064153707	TEST
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999753748492815	WITHOUT_CLASSIFICATION	2.4625150718556385E-5	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999075276721693	WITHOUT_CLASSIFICATION	9.247232783075467E-5	TEST
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999999343764807	WITHOUT_CLASSIFICATION	6.562351936487883E-8	TEST
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999983537474452	WITHOUT_CLASSIFICATION	1.6462525549500826E-6	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999190967022792	WITHOUT_CLASSIFICATION	8.090329772085988E-5	TEST
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999864604610905	WITHOUT_CLASSIFICATION	1.3539538909558638E-5	TEST
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.999746382150601	WITHOUT_CLASSIFICATION	2.5361784939903264E-4	TEST
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.999996337300662	WITHOUT_CLASSIFICATION	3.662699337915888E-6	TEST
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999733215498076	WITHOUT_CLASSIFICATION	2.6678450192486054E-5	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999833669443677	WITHOUT_CLASSIFICATION	1.6633055632286445E-5	TEST
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999733215498076	WITHOUT_CLASSIFICATION	2.6678450192486054E-5	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999954043135934	WITHOUT_CLASSIFICATION	4.595686406590058E-6	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999833669443677	WITHOUT_CLASSIFICATION	1.6633055632286445E-5	TEST
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9996611001951933	WITHOUT_CLASSIFICATION	3.388998048066897E-4	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999943412662302	WITHOUT_CLASSIFICATION	5.658733769804076E-6	TEST
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9999248786338347	WITHOUT_CLASSIFICATION	7.512136616531324E-5	TEST
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9432231612984805	WITHOUT_CLASSIFICATION	0.05677683870151942	TEST
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999944759137188	WITHOUT_CLASSIFICATION	5.524086281070406E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999926644605417	WITHOUT_CLASSIFICATION	7.335539458373926E-6	TEST
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999615894933769	WITHOUT_CLASSIFICATION	3.841050662319017E-5	TEST
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9986320880559757	WITHOUT_CLASSIFICATION	0.0013679119440242525	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999938515192711	WITHOUT_CLASSIFICATION	6.148480728793104E-6	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999383484600687	WITHOUT_CLASSIFICATION	6.165153993127219E-5	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.999982676605062	WITHOUT_CLASSIFICATION	1.7323394937971666E-5	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999985718386135	WITHOUT_CLASSIFICATION	1.4281613865825777E-6	TEST
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999962212858764	WITHOUT_CLASSIFICATION	3.778714123718111E-6	TEST
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.999992240473604	WITHOUT_CLASSIFICATION	7.759526395988769E-6	TEST
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.999961331240566	WITHOUT_CLASSIFICATION	3.866875943404162E-5	TEST
// switch // while	WITHOUT_CLASSIFICATION	0.9999922355758929	WITHOUT_CLASSIFICATION	7.764424107090923E-6	TEST
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9992480640650666	WITHOUT_CLASSIFICATION	7.519359349333981E-4	TEST
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999905390293105	WITHOUT_CLASSIFICATION	9.460970689599363E-6	TEST
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999994559233981	WITHOUT_CLASSIFICATION	5.440766018283718E-7	TEST
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999718496374842	WITHOUT_CLASSIFICATION	2.8150362515752988E-5	TEST
// expected	WITHOUT_CLASSIFICATION	0.9999927134917658	WITHOUT_CLASSIFICATION	7.286508234276453E-6	TEST
// Do nothing	WITHOUT_CLASSIFICATION	0.9999932348035485	WITHOUT_CLASSIFICATION	6.765196451449205E-6	TEST
// constructor	WITHOUT_CLASSIFICATION	0.9999933173862471	WITHOUT_CLASSIFICATION	6.682613752966739E-6	TEST
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.999907599536628	WITHOUT_CLASSIFICATION	9.240046337198877E-5	TEST
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999767089599579	WITHOUT_CLASSIFICATION	2.3291040042085493E-5	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.999924706218199	WITHOUT_CLASSIFICATION	7.529378180105811E-5	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999260664461581	WITHOUT_CLASSIFICATION	7.3933553841845E-5	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999980061705256	WITHOUT_CLASSIFICATION	1.9938294743647627E-6	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999980061705256	WITHOUT_CLASSIFICATION	1.9938294743647627E-6	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999913234018705	WITHOUT_CLASSIFICATION	8.676598129541474E-6	TEST
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999985199101001	WITHOUT_CLASSIFICATION	1.4800898999674153E-6	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999988621549376	WITHOUT_CLASSIFICATION	1.137845062388262E-6	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9981938215629355	WITHOUT_CLASSIFICATION	0.0018061784370645502	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9981938215629355	WITHOUT_CLASSIFICATION	0.0018061784370645502	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9981938215629355	WITHOUT_CLASSIFICATION	0.0018061784370645502	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9981938215629355	WITHOUT_CLASSIFICATION	0.0018061784370645502	TEST
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999867787937081	WITHOUT_CLASSIFICATION	1.322120629192318E-5	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.999988359143283	WITHOUT_CLASSIFICATION	1.1640856716950776E-5	TEST
// "else" body	WITHOUT_CLASSIFICATION	0.999992049497611	WITHOUT_CLASSIFICATION	7.950502388997148E-6	TEST
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9998070355065983	WITHOUT_CLASSIFICATION	1.929644934017437E-4	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9997758727168788	WITHOUT_CLASSIFICATION	2.2412728312118396E-4	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998282252860548	WITHOUT_CLASSIFICATION	1.7177471394524602E-4	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998282252860548	WITHOUT_CLASSIFICATION	1.7177471394524602E-4	TEST
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999930396712288	WITHOUT_CLASSIFICATION	6.9603287711521554E-6	TEST
/* 10! */	WITHOUT_CLASSIFICATION	0.9998171762689924	WITHOUT_CLASSIFICATION	1.8282373100765519E-4	TEST
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9998956251499141	WITHOUT_CLASSIFICATION	1.0437485008589946E-4	TEST
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9998041274250605	WITHOUT_CLASSIFICATION	1.9587257493942917E-4	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999522699439976	WITHOUT_CLASSIFICATION	4.773005600241242E-5	TEST
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999856161790737	WITHOUT_CLASSIFICATION	1.4383820926235797E-5	TEST
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999999697574856	WITHOUT_CLASSIFICATION	3.0242514372116005E-8	TEST
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9998427523625344	WITHOUT_CLASSIFICATION	1.5724763746567503E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999954043135934	WITHOUT_CLASSIFICATION	4.595686406590058E-6	TEST
// line 449	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 495	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999820337929397	WITHOUT_CLASSIFICATION	1.7966207060251652E-5	TEST
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999994512271432	WITHOUT_CLASSIFICATION	5.487728568961645E-7	TEST
/* 14! */	WITHOUT_CLASSIFICATION	0.9998171762689924	WITHOUT_CLASSIFICATION	1.8282373100765519E-4	TEST
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999504481423855	WITHOUT_CLASSIFICATION	4.955185761440083E-5	TEST
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999943488066539	WITHOUT_CLASSIFICATION	5.651193345974906E-6	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999946845251935	WITHOUT_CLASSIFICATION	5.315474806508193E-6	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999946845251935	WITHOUT_CLASSIFICATION	5.315474806508193E-6	TEST
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9998956251499141	WITHOUT_CLASSIFICATION	1.0437485008589943E-4	TEST
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.999999954996021	WITHOUT_CLASSIFICATION	4.500397906556246E-8	TEST
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999136514251383	WITHOUT_CLASSIFICATION	8.634857486167051E-5	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999944861667183	WITHOUT_CLASSIFICATION	5.5138332816297135E-6	TEST
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.999996917182348	WITHOUT_CLASSIFICATION	3.082817652040471E-6	TEST
/* 18! */	WITHOUT_CLASSIFICATION	0.9998171762689924	WITHOUT_CLASSIFICATION	1.8282373100765519E-4	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999302116324355	WITHOUT_CLASSIFICATION	6.978836756461446E-5	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.999989070176731	WITHOUT_CLASSIFICATION	1.0929823269036276E-5	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.999989070176731	WITHOUT_CLASSIFICATION	1.0929823269036276E-5	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.999989070176731	WITHOUT_CLASSIFICATION	1.0929823269036276E-5	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.999989070176731	WITHOUT_CLASSIFICATION	1.0929823269036276E-5	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999943145157344	WITHOUT_CLASSIFICATION	5.685484265615859E-6	TEST
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999999603051576	WITHOUT_CLASSIFICATION	3.969484244102401E-8	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999620878379993	WITHOUT_CLASSIFICATION	3.791216200060251E-5	TEST
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999107602312635	WITHOUT_CLASSIFICATION	8.923976873653813E-5	TEST
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999934012978067	WITHOUT_CLASSIFICATION	6.598702193309455E-6	TEST
/* 22! */	WITHOUT_CLASSIFICATION	0.9998171762689924	WITHOUT_CLASSIFICATION	1.8282373100765519E-4	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999843673822238	WITHOUT_CLASSIFICATION	1.563261777609223E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999960833111171	WITHOUT_CLASSIFICATION	3.916688882902203E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999960833111171	WITHOUT_CLASSIFICATION	3.916688882902203E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999960833111171	WITHOUT_CLASSIFICATION	3.916688882902203E-5	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9998366522404885	WITHOUT_CLASSIFICATION	1.6334775951164487E-4	TEST
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999984828973422	WITHOUT_CLASSIFICATION	1.5171026578719834E-6	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.999946977335285	WITHOUT_CLASSIFICATION	5.302266471496947E-5	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.999946977335285	WITHOUT_CLASSIFICATION	5.302266471496947E-5	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.9999184955562991	WITHOUT_CLASSIFICATION	8.150444370085729E-5	TEST
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999995660215	WITHOUT_CLASSIFICATION	4.339784660323261E-10	TEST
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9995952590896964	WITHOUT_CLASSIFICATION	4.04740910303618E-4	TEST
// BASE64	WITHOUT_CLASSIFICATION	0.9999184955562991	WITHOUT_CLASSIFICATION	8.150444370085729E-5	TEST
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999993307899098	WITHOUT_CLASSIFICATION	6.692100901731823E-7	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999970708829089	WITHOUT_CLASSIFICATION	2.9291170911283E-6	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999974405731153	WITHOUT_CLASSIFICATION	2.5594268845814743E-6	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999974405731153	WITHOUT_CLASSIFICATION	2.5594268845814743E-6	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999898103938235	WITHOUT_CLASSIFICATION	1.0189606176593684E-5	TEST
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999996151057854	WITHOUT_CLASSIFICATION	3.8489421456551624E-7	TEST
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999994609786059	WITHOUT_CLASSIFICATION	5.390213941118488E-7	TEST
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9998349616368463	WITHOUT_CLASSIFICATION	1.6503836315366206E-4	TEST
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9998638785792698	WITHOUT_CLASSIFICATION	1.3612142073014417E-4	TEST
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999995946886584	WITHOUT_CLASSIFICATION	4.053113415730138E-7	TEST
// carriage return	WITHOUT_CLASSIFICATION	0.9999957105134686	WITHOUT_CLASSIFICATION	4.289486531396152E-6	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9998267509722848	WITHOUT_CLASSIFICATION	1.7324902771521973E-4	TEST
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999985728213182	WITHOUT_CLASSIFICATION	1.427178681812438E-6	TEST
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999966899194954	WITHOUT_CLASSIFICATION	3.3100805045538468E-6	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999888937991624	WITHOUT_CLASSIFICATION	1.110620083744479E-5	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999937598932745	WITHOUT_CLASSIFICATION	6.240106725379542E-6	TEST
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999854011884508	WITHOUT_CLASSIFICATION	1.4598811549048352E-5	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999933975649867	WITHOUT_CLASSIFICATION	6.60243501337578E-6	TEST
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999992898704207	WITHOUT_CLASSIFICATION	7.10129579154492E-7	TEST
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999998446537735	WITHOUT_CLASSIFICATION	1.5534622647630105E-7	TEST
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999873471821644	WITHOUT_CLASSIFICATION	1.2652817835681061E-5	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999970774328643	WITHOUT_CLASSIFICATION	2.9225671358649507E-6	TEST
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999892916513125	WITHOUT_CLASSIFICATION	1.0708348687582819E-5	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999994662803263	WITHOUT_CLASSIFICATION	5.337196737336372E-7	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999935280533371	WITHOUT_CLASSIFICATION	6.471946663007676E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.99999640889525	WITHOUT_CLASSIFICATION	3.591104749988133E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.99999640889525	WITHOUT_CLASSIFICATION	3.591104749988133E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.99999640889525	WITHOUT_CLASSIFICATION	3.591104749988133E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.99999640889525	WITHOUT_CLASSIFICATION	3.591104749988133E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.99999640889525	WITHOUT_CLASSIFICATION	3.591104749988133E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.99999640889525	WITHOUT_CLASSIFICATION	3.591104749988133E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.99999640889525	WITHOUT_CLASSIFICATION	3.591104749988133E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.99999640889525	WITHOUT_CLASSIFICATION	3.591104749988133E-6	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999556346743743	WITHOUT_CLASSIFICATION	4.436532562564411E-5	TEST
/* fall through */	WITHOUT_CLASSIFICATION	0.9999841050939203	WITHOUT_CLASSIFICATION	1.5894906079637647E-5	TEST
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.994895985540142	WITHOUT_CLASSIFICATION	0.005104014459857909	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9998102764118071	WITHOUT_CLASSIFICATION	1.8972358819292504E-4	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.999998591235719	WITHOUT_CLASSIFICATION	1.4087642810683518E-6	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.999998591235719	WITHOUT_CLASSIFICATION	1.4087642810683518E-6	TEST
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999794455347678	WITHOUT_CLASSIFICATION	2.0554465232178618E-5	TEST
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999995695684064	WITHOUT_CLASSIFICATION	4.304315935647414E-7	TEST
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999690693170638	WITHOUT_CLASSIFICATION	3.093068293624695E-5	TEST
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999764058967604	WITHOUT_CLASSIFICATION	2.359410323958432E-5	TEST
// get current context	WITHOUT_CLASSIFICATION	0.999994276465305	WITHOUT_CLASSIFICATION	5.723534694932288E-6	TEST
// octal constant	WITHOUT_CLASSIFICATION	0.9999921646035174	WITHOUT_CLASSIFICATION	7.83539648263371E-6	TEST
// read	WITHOUT_CLASSIFICATION	0.9999204087627861	WITHOUT_CLASSIFICATION	7.959123721393287E-5	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999652284767172	WITHOUT_CLASSIFICATION	3.4771523282749844E-5	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9998256466159688	WITHOUT_CLASSIFICATION	1.743533840310762E-4	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999962536431053	WITHOUT_CLASSIFICATION	3.7463568946350354E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999962536431053	WITHOUT_CLASSIFICATION	3.7463568946350354E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999962536431053	WITHOUT_CLASSIFICATION	3.7463568946350354E-6	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999811682528266	WITHOUT_CLASSIFICATION	1.8831747173463928E-5	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999155016746338	WITHOUT_CLASSIFICATION	8.449832536608313E-5	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9998722145281981	WITHOUT_CLASSIFICATION	1.27785471801965E-4	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999875115027187	WITHOUT_CLASSIFICATION	1.2488497281251674E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999844901474064	WITHOUT_CLASSIFICATION	1.5509852593553355E-5	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999970328758129	WITHOUT_CLASSIFICATION	2.967124187221641E-6	TEST
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999882152797678	WITHOUT_CLASSIFICATION	1.1784720232269169E-5	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999131686404515	WITHOUT_CLASSIFICATION	8.68313595484024E-5	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999131686404515	WITHOUT_CLASSIFICATION	8.68313595484024E-5	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999930127679774	WITHOUT_CLASSIFICATION	6.987232022695694E-6	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999543951246441	WITHOUT_CLASSIFICATION	4.560487535577382E-5	TEST
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999983336192058	WITHOUT_CLASSIFICATION	1.6663807941216886E-6	TEST
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999742514571139	WITHOUT_CLASSIFICATION	2.5748542886017568E-5	TEST
// block given	WITHOUT_CLASSIFICATION	0.999995067935872	WITHOUT_CLASSIFICATION	4.932064127961255E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.999995067935872	WITHOUT_CLASSIFICATION	4.932064127961255E-6	TEST
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999814902734356	WITHOUT_CLASSIFICATION	1.8509726564305236E-5	TEST
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.999953532982736	WITHOUT_CLASSIFICATION	4.646701726394094E-5	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999917174616356	WITHOUT_CLASSIFICATION	8.282538364393705E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999974621123243	WITHOUT_CLASSIFICATION	2.5378876756120713E-6	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999927465814	WITHOUT_CLASSIFICATION	7.253418600077848E-6	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999927465814	WITHOUT_CLASSIFICATION	7.253418600077848E-6	TEST
// check arity	WITHOUT_CLASSIFICATION	0.9999959713371759	WITHOUT_CLASSIFICATION	4.028662824090594E-6	TEST
// check arity	WITHOUT_CLASSIFICATION	0.9999959713371759	WITHOUT_CLASSIFICATION	4.028662824090594E-6	TEST
// create the class	WITHOUT_CLASSIFICATION	0.999998650412416	WITHOUT_CLASSIFICATION	1.3495875839804965E-6	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999798726154672	WITHOUT_CLASSIFICATION	2.0127384532768334E-5	TEST
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999847266841271	WITHOUT_CLASSIFICATION	1.527331587291574E-5	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999184955562991	WITHOUT_CLASSIFICATION	8.150444370085729E-5	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999596965718909	WITHOUT_CLASSIFICATION	4.030342810920004E-5	TEST
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999947996819861	WITHOUT_CLASSIFICATION	5.200318013906994E-6	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999689877745583	WITHOUT_CLASSIFICATION	3.101222544163404E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999206746941464	WITHOUT_CLASSIFICATION	7.932530585364482E-5	TEST
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999981002087525	WITHOUT_CLASSIFICATION	1.8997912474993047E-6	TEST
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999998610505956	WITHOUT_CLASSIFICATION	1.3894940435477058E-7	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999949560609203	WITHOUT_CLASSIFICATION	5.043939079705083E-6	TEST
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9993949278441785	WITHOUT_CLASSIFICATION	6.050721558214352E-4	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999860886022317	WITHOUT_CLASSIFICATION	1.3911397768291928E-5	TEST
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999992065497013	WITHOUT_CLASSIFICATION	7.934502987156675E-7	TEST
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999856747555688	WITHOUT_CLASSIFICATION	1.432524443124152E-5	TEST
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999537874214401	WITHOUT_CLASSIFICATION	4.621257855995968E-5	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.999996473077098	WITHOUT_CLASSIFICATION	3.5269229019122575E-6	TEST
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9988843914273603	WITHOUT_CLASSIFICATION	0.001115608572639722	TEST
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999326064043255	WITHOUT_CLASSIFICATION	6.739359567452697E-5	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999985718386135	WITHOUT_CLASSIFICATION	1.4281613865825777E-6	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999875912127664	WITHOUT_CLASSIFICATION	1.2408787233650667E-5	TEST
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.999996124145151	WITHOUT_CLASSIFICATION	3.87585484898465E-6	TEST
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999922233912204	WITHOUT_CLASSIFICATION	7.776608779579822E-6	TEST
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999119909080683	WITHOUT_CLASSIFICATION	8.800909193168383E-5	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999836540256225	WITHOUT_CLASSIFICATION	1.634597437750677E-5	TEST
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999956303807638	WITHOUT_CLASSIFICATION	4.369619236297612E-6	TEST
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999667921659315	WITHOUT_CLASSIFICATION	3.3207834068376406E-5	TEST
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999997957166847	WITHOUT_CLASSIFICATION	2.0428331524651892E-7	TEST
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999898585084062	WITHOUT_CLASSIFICATION	1.014149159374499E-5	TEST
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999777662440665	WITHOUT_CLASSIFICATION	2.223375593337135E-5	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999978257448017	WITHOUT_CLASSIFICATION	2.1742551983121215E-6	TEST
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999942582258813	WITHOUT_CLASSIFICATION	5.741774118743056E-6	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999757223015714	WITHOUT_CLASSIFICATION	2.4277698428608664E-5	TEST
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999799907811704	WITHOUT_CLASSIFICATION	2.0009218829604435E-5	TEST
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999866219150473	WITHOUT_CLASSIFICATION	1.3378084952781163E-5	TEST
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999808384049793	WITHOUT_CLASSIFICATION	1.9161595020732977E-5	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999405301883125	WITHOUT_CLASSIFICATION	5.946981168758256E-5	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999993881272664	WITHOUT_CLASSIFICATION	6.118727336816134E-7	TEST
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999980426619829	WITHOUT_CLASSIFICATION	1.957338017178132E-6	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999186952926866	WITHOUT_CLASSIFICATION	8.130470731340234E-5	TEST
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9996290552955047	WITHOUT_CLASSIFICATION	3.709447044953636E-4	TEST
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999875039155576	WITHOUT_CLASSIFICATION	1.2496084442475858E-5	TEST
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999907357164872	WITHOUT_CLASSIFICATION	9.264283512780952E-6	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9998823574996891	WITHOUT_CLASSIFICATION	1.1764250031088144E-4	TEST
// specific arity	WITHOUT_CLASSIFICATION	0.9999938559002802	WITHOUT_CLASSIFICATION	6.1440997196985156E-6	TEST
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999980571656638	WITHOUT_CLASSIFICATION	1.9428343361755072E-6	TEST
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.999967203097295	WITHOUT_CLASSIFICATION	3.279690270505003E-5	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.999961331240566	WITHOUT_CLASSIFICATION	3.866875943404162E-5	TEST
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999252116448765	WITHOUT_CLASSIFICATION	7.478835512352813E-5	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999828679587855	WITHOUT_CLASSIFICATION	1.7132041214442362E-5	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999828679587855	WITHOUT_CLASSIFICATION	1.7132041214442362E-5	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9998894467449837	WITHOUT_CLASSIFICATION	1.105532550163511E-4	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9998894467449837	WITHOUT_CLASSIFICATION	1.105532550163511E-4	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999609759252313	WITHOUT_CLASSIFICATION	3.9024074768692544E-5	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999609759252313	WITHOUT_CLASSIFICATION	3.9024074768692544E-5	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999884967348356	WITHOUT_CLASSIFICATION	1.1503265164418829E-5	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999884967348356	WITHOUT_CLASSIFICATION	1.1503265164418829E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.999978249506287	WITHOUT_CLASSIFICATION	2.1750493712963033E-5	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.999978249506287	WITHOUT_CLASSIFICATION	2.1750493712963033E-5	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.999978249506287	WITHOUT_CLASSIFICATION	2.1750493712963033E-5	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999352431368962	WITHOUT_CLASSIFICATION	6.475686310378345E-5	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999889936141	WITHOUT_CLASSIFICATION	1.1006385900114104E-5	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999889936141	WITHOUT_CLASSIFICATION	1.1006385900114104E-5	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999889936141	WITHOUT_CLASSIFICATION	1.1006385900114104E-5	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999547582726677	WITHOUT_CLASSIFICATION	4.524172733223494E-5	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999547582726677	WITHOUT_CLASSIFICATION	4.524172733223494E-5	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999547582726677	WITHOUT_CLASSIFICATION	4.524172733223494E-5	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.999961331240566	WITHOUT_CLASSIFICATION	3.866875943404162E-5	TEST
// backspace	WITHOUT_CLASSIFICATION	0.9999917341248715	WITHOUT_CLASSIFICATION	8.265875128437052E-6	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
/* package-private */	WITHOUT_CLASSIFICATION	0.9999601122204508	WITHOUT_CLASSIFICATION	3.9887779549205874E-5	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999929145652378	WITHOUT_CLASSIFICATION	7.085434762276511E-6	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999929145652378	WITHOUT_CLASSIFICATION	7.085434762276511E-6	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999896588314545	WITHOUT_CLASSIFICATION	1.0341168545566402E-5	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999368815816662	WITHOUT_CLASSIFICATION	6.311841833393599E-5	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999368815816662	WITHOUT_CLASSIFICATION	6.311841833393599E-5	TEST
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.8095364734032297	WITHOUT_CLASSIFICATION	0.19046352659677032	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9998634790859686	WITHOUT_CLASSIFICATION	1.365209140313202E-4	TEST
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999355857675027	WITHOUT_CLASSIFICATION	6.441423249725196E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999789899065631	WITHOUT_CLASSIFICATION	2.1010093436927937E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999789899065631	WITHOUT_CLASSIFICATION	2.1010093436927937E-5	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.999994695563903	WITHOUT_CLASSIFICATION	5.30443609702571E-6	TEST
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9996678004605853	WITHOUT_CLASSIFICATION	3.3219953941471194E-4	TEST
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9998799254127557	WITHOUT_CLASSIFICATION	1.2007458724421506E-4	TEST
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.999981727492411	WITHOUT_CLASSIFICATION	1.827250758903127E-5	TEST
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9982647839878891	WITHOUT_CLASSIFICATION	0.0017352160121108697	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999789899065631	WITHOUT_CLASSIFICATION	2.1010093436927937E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999789899065631	WITHOUT_CLASSIFICATION	2.1010093436927937E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999789899065631	WITHOUT_CLASSIFICATION	2.1010093436927937E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999789899065631	WITHOUT_CLASSIFICATION	2.1010093436927937E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999789899065631	WITHOUT_CLASSIFICATION	2.1010093436927937E-5	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.999988914686373	WITHOUT_CLASSIFICATION	1.1085313626937696E-5	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999565155129694	WITHOUT_CLASSIFICATION	4.348448703062331E-5	TEST
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999986843139348	WITHOUT_CLASSIFICATION	1.3156860651576376E-6	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999515077932493	WITHOUT_CLASSIFICATION	4.8492206750835605E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999809960733047	WITHOUT_CLASSIFICATION	1.9003926695248113E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999809960733047	WITHOUT_CLASSIFICATION	1.9003926695248113E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999809960733047	WITHOUT_CLASSIFICATION	1.9003926695248113E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999809960733047	WITHOUT_CLASSIFICATION	1.9003926695248113E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999809960733047	WITHOUT_CLASSIFICATION	1.9003926695248113E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999809960733047	WITHOUT_CLASSIFICATION	1.9003926695248113E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999809960733047	WITHOUT_CLASSIFICATION	1.9003926695248113E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999809960733047	WITHOUT_CLASSIFICATION	1.9003926695248113E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999809960733047	WITHOUT_CLASSIFICATION	1.9003926695248113E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999809960733047	WITHOUT_CLASSIFICATION	1.9003926695248113E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999809960733047	WITHOUT_CLASSIFICATION	1.9003926695248113E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999809960733047	WITHOUT_CLASSIFICATION	1.9003926695248113E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999809960733047	WITHOUT_CLASSIFICATION	1.9003926695248113E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999809960733047	WITHOUT_CLASSIFICATION	1.9003926695248113E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999809960733047	WITHOUT_CLASSIFICATION	1.9003926695248113E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999809960733047	WITHOUT_CLASSIFICATION	1.9003926695248113E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999809960733047	WITHOUT_CLASSIFICATION	1.9003926695248113E-5	TEST
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999999159188154	WITHOUT_CLASSIFICATION	8.408118464218486E-8	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999809960733047	WITHOUT_CLASSIFICATION	1.9003926695248113E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999809960733047	WITHOUT_CLASSIFICATION	1.9003926695248113E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999809960733047	WITHOUT_CLASSIFICATION	1.9003926695248113E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999809960733047	WITHOUT_CLASSIFICATION	1.9003926695248113E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999809960733047	WITHOUT_CLASSIFICATION	1.9003926695248113E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999809960733047	WITHOUT_CLASSIFICATION	1.9003926695248113E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999809960733047	WITHOUT_CLASSIFICATION	1.9003926695248113E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999809960733047	WITHOUT_CLASSIFICATION	1.9003926695248113E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999809960733047	WITHOUT_CLASSIFICATION	1.9003926695248113E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999809960733047	WITHOUT_CLASSIFICATION	1.9003926695248113E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999809960733047	WITHOUT_CLASSIFICATION	1.9003926695248113E-5	TEST
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999591045891486	WITHOUT_CLASSIFICATION	4.089541085133466E-5	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9996760114874316	WITHOUT_CLASSIFICATION	3.2398851256850716E-4	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999916588265401	WITHOUT_CLASSIFICATION	8.341173459914286E-6	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999948058772318	WITHOUT_CLASSIFICATION	5.194122768229525E-6	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999547415370386	WITHOUT_CLASSIFICATION	4.525846296144939E-5	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999075276721693	WITHOUT_CLASSIFICATION	9.247232783075467E-5	TEST
// only public methods	WITHOUT_CLASSIFICATION	0.9999876164465843	WITHOUT_CLASSIFICATION	1.2383553415721776E-5	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999514082644911	WITHOUT_CLASSIFICATION	4.8591735509000326E-5	TEST
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999997666504314	WITHOUT_CLASSIFICATION	2.3334956851197054E-7	TEST
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9999992309147309	WITHOUT_CLASSIFICATION	7.690852690997973E-7	TEST
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999895873411626	WITHOUT_CLASSIFICATION	1.0412658837361513E-5	TEST
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999999398571251	WITHOUT_CLASSIFICATION	6.014287489190708E-8	TEST
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999955027778731	WITHOUT_CLASSIFICATION	4.4972221270036476E-6	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999789445415663	WITHOUT_CLASSIFICATION	2.1055458433729415E-5	TEST
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999174564045504	WITHOUT_CLASSIFICATION	8.25435954496005E-5	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999841996356982	WITHOUT_CLASSIFICATION	1.580036430188522E-5	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999999128792386	WITHOUT_CLASSIFICATION	8.712076140639686E-8	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9997935565779981	WITHOUT_CLASSIFICATION	2.0644342200206884E-4	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9997935565779981	WITHOUT_CLASSIFICATION	2.0644342200206884E-4	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9997935565779981	WITHOUT_CLASSIFICATION	2.0644342200206884E-4	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9997935565779981	WITHOUT_CLASSIFICATION	2.0644342200206884E-4	TEST
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999978800105589	WITHOUT_CLASSIFICATION	2.119989441087697E-6	TEST
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9998388568084373	WITHOUT_CLASSIFICATION	1.6114319156276423E-4	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999653887973293	WITHOUT_CLASSIFICATION	3.4611202670662484E-5	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999653887973293	WITHOUT_CLASSIFICATION	3.4611202670662484E-5	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999994520413815	WITHOUT_CLASSIFICATION	5.479586183930257E-7	TEST
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999321028530211	WITHOUT_CLASSIFICATION	6.789714697886777E-5	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999941997568407	WITHOUT_CLASSIFICATION	5.800243159332825E-6	TEST
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999782182328736	WITHOUT_CLASSIFICATION	2.1781767126331632E-5	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999651025098744	WITHOUT_CLASSIFICATION	3.489749012561885E-5	TEST
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999368636022276	WITHOUT_CLASSIFICATION	6.313639777250481E-5	TEST
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.999988624407407	WITHOUT_CLASSIFICATION	1.1375592593005718E-5	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.999989153957172	WITHOUT_CLASSIFICATION	1.0846042827980978E-5	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.999989153957172	WITHOUT_CLASSIFICATION	1.0846042827980978E-5	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.999989153957172	WITHOUT_CLASSIFICATION	1.0846042827980978E-5	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.999989153957172	WITHOUT_CLASSIFICATION	1.0846042827980978E-5	TEST
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.999989400427306	WITHOUT_CLASSIFICATION	1.0599572694014286E-5	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999969901323382	WITHOUT_CLASSIFICATION	3.0098676617627067E-6	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999969901323382	WITHOUT_CLASSIFICATION	3.0098676617627067E-6	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999969901323382	WITHOUT_CLASSIFICATION	3.0098676617627067E-6	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999860954137728	WITHOUT_CLASSIFICATION	1.3904586227209943E-5	TEST
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999515055549286	WITHOUT_CLASSIFICATION	4.849444507139045E-5	TEST
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999796646099796	WITHOUT_CLASSIFICATION	2.033539002050396E-5	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9981938215629355	WITHOUT_CLASSIFICATION	0.0018061784370645502	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9981938215629355	WITHOUT_CLASSIFICATION	0.0018061784370645502	TEST
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999908750434235	WITHOUT_CLASSIFICATION	9.124956576422585E-6	TEST
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999986944260905	WITHOUT_CLASSIFICATION	1.305573909539704E-6	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.9999839759447516	WITHOUT_CLASSIFICATION	1.6024055248374626E-5	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.9999839759447516	WITHOUT_CLASSIFICATION	1.6024055248374626E-5	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999603600301442	WITHOUT_CLASSIFICATION	3.96399698557793E-5	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999603600301442	WITHOUT_CLASSIFICATION	3.96399698557793E-5	TEST
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999663195737577	WITHOUT_CLASSIFICATION	3.368042624226251E-5	TEST
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9997456499849366	WITHOUT_CLASSIFICATION	2.5435001506339224E-4	TEST
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.999961277504427	WITHOUT_CLASSIFICATION	3.8722495573075245E-5	TEST
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999596283412701	WITHOUT_CLASSIFICATION	4.037165872996635E-5	TEST
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999655431077573	WITHOUT_CLASSIFICATION	3.445689224269407E-5	TEST
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999958053300033	WITHOUT_CLASSIFICATION	4.194669996747356E-6	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999613185094406	WITHOUT_CLASSIFICATION	3.868149055948695E-5	TEST
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999905070130282	WITHOUT_CLASSIFICATION	9.492986971925955E-6	TEST
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999146711730984	WITHOUT_CLASSIFICATION	8.532882690158568E-5	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999850432617755	WITHOUT_CLASSIFICATION	1.4956738224511796E-5	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999850432617755	WITHOUT_CLASSIFICATION	1.4956738224511796E-5	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999954399464644	WITHOUT_CLASSIFICATION	4.560053535459462E-6	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999954399464644	WITHOUT_CLASSIFICATION	4.560053535459462E-6	TEST
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999936144983039	WITHOUT_CLASSIFICATION	6.385501696077694E-6	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999838658472704	WITHOUT_CLASSIFICATION	1.6134152729600124E-5	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999814330968428	WITHOUT_CLASSIFICATION	1.8566903157097376E-5	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9996218000722802	WITHOUT_CLASSIFICATION	3.781999277199282E-4	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9996218000722802	WITHOUT_CLASSIFICATION	3.781999277199282E-4	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9996218000722802	WITHOUT_CLASSIFICATION	3.781999277199282E-4	TEST
// line 286	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 476	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 513	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 530	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 533	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 551	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// end loop	WITHOUT_CLASSIFICATION	0.9999957839952881	WITHOUT_CLASSIFICATION	4.216004711836465E-6	TEST
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9998198055589219	WITHOUT_CLASSIFICATION	1.8019444107822313E-4	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999989850868465	WITHOUT_CLASSIFICATION	1.014913153608785E-6	TEST
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9999954947015343	WITHOUT_CLASSIFICATION	4.505298465664039E-6	TEST
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9998981363546227	WITHOUT_CLASSIFICATION	1.0186364537737866E-4	TEST
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999780013946349	WITHOUT_CLASSIFICATION	2.1998605365133298E-5	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9981938215629355	WITHOUT_CLASSIFICATION	0.0018061784370645502	TEST
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999991158922045	WITHOUT_CLASSIFICATION	8.841077954493113E-7	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999167372936806	WITHOUT_CLASSIFICATION	8.326270631935617E-5	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999980061705256	WITHOUT_CLASSIFICATION	1.9938294743647627E-6	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.999208098776967	WITHOUT_CLASSIFICATION	7.919012230329437E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.999208098776967	WITHOUT_CLASSIFICATION	7.919012230329437E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.999208098776967	WITHOUT_CLASSIFICATION	7.919012230329437E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.999208098776967	WITHOUT_CLASSIFICATION	7.919012230329437E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.999208098776967	WITHOUT_CLASSIFICATION	7.919012230329437E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999171823657907	WITHOUT_CLASSIFICATION	8.281763420916727E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.999208098776967	WITHOUT_CLASSIFICATION	7.919012230329437E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.999208098776967	WITHOUT_CLASSIFICATION	7.919012230329437E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.999208098776967	WITHOUT_CLASSIFICATION	7.919012230329437E-4	TEST
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.999976909768733	WITHOUT_CLASSIFICATION	2.30902312669991E-5	TEST
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999851290161038	WITHOUT_CLASSIFICATION	1.4870983896051597E-5	TEST
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9997515545387481	WITHOUT_CLASSIFICATION	2.484454612519303E-4	TEST
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999247779257806	WITHOUT_CLASSIFICATION	7.522207421937669E-5	TEST
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9998289474604678	WITHOUT_CLASSIFICATION	1.7105253953220736E-4	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999534563867958	WITHOUT_CLASSIFICATION	4.6543613204182254E-5	TEST
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999610177571161	WITHOUT_CLASSIFICATION	3.898224288383237E-5	TEST
// line 572	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 625	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 649	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 723	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 745	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 766	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 785	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 800	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 812	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 827	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 864	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 886	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 911	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 929	WITHOUT_CLASSIFICATION	0.9999941079853976	WITHOUT_CLASSIFICATION	5.892014602349799E-6	TEST
// line 952	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 970	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 972	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 991	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1011	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1026	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1067	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1085	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1145	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1169	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1201	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1229	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1287	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1293	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1307	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1325	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1363	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1398	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1473	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1492	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1523	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1562	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1582	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1620	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1635	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1652	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1681	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1755	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1789	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999917234631509	WITHOUT_CLASSIFICATION	8.276536849070576E-6	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999755188835616	WITHOUT_CLASSIFICATION	2.4481116438432946E-5	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9996355175823176	WITHOUT_CLASSIFICATION	3.64482417682328E-4	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9998691252619366	WITHOUT_CLASSIFICATION	1.3087473806332187E-4	TEST
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999772543845679	WITHOUT_CLASSIFICATION	2.2745615432070692E-5	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999905881008909	WITHOUT_CLASSIFICATION	9.411899108976495E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999905881008909	WITHOUT_CLASSIFICATION	9.411899108976495E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999905881008909	WITHOUT_CLASSIFICATION	9.411899108976495E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999905881008909	WITHOUT_CLASSIFICATION	9.411899108976495E-6	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.999693304704586	WITHOUT_CLASSIFICATION	3.066952954140187E-4	TEST
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999997018439716	WITHOUT_CLASSIFICATION	2.981560284002689E-7	TEST
// line 313	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 339	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 361	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 413	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 451	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 472	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 500	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 515	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 555	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 582	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 619	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 636	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 669	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 703	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 776	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 814	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 823	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 854	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 872	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 905	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 925	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 958	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 992	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1047	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1072	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1081	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1108	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1136	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1168	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1192	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1241	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1267	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1286	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1301	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1314	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1333	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1362	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1395	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1420	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1439	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1476	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1535	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1588	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1618	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1643	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1669	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1728	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1753	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1779	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1794	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1812	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1837	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1895	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1925	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1950	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 1992	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// line 2014	WITHOUT_CLASSIFICATION	0.9999941074458611	WITHOUT_CLASSIFICATION	5.892554138859347E-6	TEST
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999759116739328	WITHOUT_CLASSIFICATION	2.4088326067108535E-5	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.999993493721644	WITHOUT_CLASSIFICATION	6.506278356050708E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999965925570025	WITHOUT_CLASSIFICATION	3.407442997584548E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999965925570025	WITHOUT_CLASSIFICATION	3.407442997584548E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999965925570025	WITHOUT_CLASSIFICATION	3.407442997584548E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999965925570025	WITHOUT_CLASSIFICATION	3.407442997584548E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999965925570025	WITHOUT_CLASSIFICATION	3.407442997584548E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999965925570025	WITHOUT_CLASSIFICATION	3.407442997584548E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999965925570025	WITHOUT_CLASSIFICATION	3.407442997584548E-6	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999931358122953	WITHOUT_CLASSIFICATION	6.864187704686843E-6	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999931358122953	WITHOUT_CLASSIFICATION	6.864187704686843E-6	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999931358122953	WITHOUT_CLASSIFICATION	6.864187704686843E-6	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999931358122953	WITHOUT_CLASSIFICATION	6.864187704686843E-6	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9994876237233233	WITHOUT_CLASSIFICATION	5.123762766766816E-4	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9994876237233233	WITHOUT_CLASSIFICATION	5.123762766766816E-4	TEST
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9997763641873416	WITHOUT_CLASSIFICATION	2.2363581265843615E-4	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999995788002025	WITHOUT_CLASSIFICATION	4.2119979746608485E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999995788002025	WITHOUT_CLASSIFICATION	4.2119979746608485E-7	TEST
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999559194923789	WITHOUT_CLASSIFICATION	4.4080507621082584E-5	TEST
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.999994273538382	WITHOUT_CLASSIFICATION	5.726461618000052E-6	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999619217510347	WITHOUT_CLASSIFICATION	3.807824896528786E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999619217510347	WITHOUT_CLASSIFICATION	3.807824896528786E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999619217510347	WITHOUT_CLASSIFICATION	3.807824896528786E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999619217510347	WITHOUT_CLASSIFICATION	3.807824896528786E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999619217510347	WITHOUT_CLASSIFICATION	3.807824896528786E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999619217510347	WITHOUT_CLASSIFICATION	3.807824896528786E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999619217510347	WITHOUT_CLASSIFICATION	3.807824896528786E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999619217510347	WITHOUT_CLASSIFICATION	3.807824896528786E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999619217510347	WITHOUT_CLASSIFICATION	3.807824896528786E-5	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999886239986778	WITHOUT_CLASSIFICATION	1.1376001322180513E-5	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999886239986778	WITHOUT_CLASSIFICATION	1.1376001322180513E-5	TEST
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999874758326422	WITHOUT_CLASSIFICATION	1.2524167357727448E-5	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999871753674655	WITHOUT_CLASSIFICATION	1.2824632534450205E-5	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999871753674655	WITHOUT_CLASSIFICATION	1.2824632534450205E-5	TEST
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999988046923113	WITHOUT_CLASSIFICATION	1.1953076886927899E-6	TEST
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.7188390285097003	WITHOUT_CLASSIFICATION	0.2811609714902996	TEST
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999998936640275	WITHOUT_CLASSIFICATION	1.0633597244522705E-7	TEST
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999915080190974	WITHOUT_CLASSIFICATION	8.49198090246252E-6	TEST
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999685181177081	WITHOUT_CLASSIFICATION	3.148188229179054E-5	TEST
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999613415147751	WITHOUT_CLASSIFICATION	3.8658485224894554E-5	TEST
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999954170337729	WITHOUT_CLASSIFICATION	4.582966227037889E-6	TEST
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999926931012525	WITHOUT_CLASSIFICATION	7.306898747539346E-6	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9992743132596589	WITHOUT_CLASSIFICATION	7.256867403411788E-4	TEST
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9994050531479741	WITHOUT_CLASSIFICATION	5.949468520259265E-4	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9917216908811172	WITHOUT_CLASSIFICATION	0.008278309118882816	TEST
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999988519174953	WITHOUT_CLASSIFICATION	1.1480825046541152E-6	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999904912103957	WITHOUT_CLASSIFICATION	9.508789604129136E-6	TEST
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999986047710896	WITHOUT_CLASSIFICATION	1.3952289104658752E-6	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.999944361606276	WITHOUT_CLASSIFICATION	5.563839372400697E-5	TEST
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999920159482246	WITHOUT_CLASSIFICATION	7.984051775317739E-6	TEST
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999568016309222	WITHOUT_CLASSIFICATION	4.319836907784886E-5	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9998632301195591	WITHOUT_CLASSIFICATION	1.367698804408503E-4	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999426481139259	WITHOUT_CLASSIFICATION	5.735188607419995E-5	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999426481139259	WITHOUT_CLASSIFICATION	5.735188607419995E-5	TEST
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999862135483769	WITHOUT_CLASSIFICATION	1.3786451623164752E-5	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999381992628159	WITHOUT_CLASSIFICATION	6.180073718408122E-5	TEST
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999779606273217	WITHOUT_CLASSIFICATION	2.2039372678342888E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9991849783907303	WITHOUT_CLASSIFICATION	8.150216092696621E-4	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9998760297627521	WITHOUT_CLASSIFICATION	1.2397023724783438E-4	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9998760297627521	WITHOUT_CLASSIFICATION	1.2397023724783438E-4	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9998760297627521	WITHOUT_CLASSIFICATION	1.2397023724783438E-4	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999975845037706	WITHOUT_CLASSIFICATION	2.4154962293843075E-6	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999000953728294	WITHOUT_CLASSIFICATION	9.990462717055132E-5	TEST
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999988327212559	WITHOUT_CLASSIFICATION	1.1672787440454054E-6	TEST
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999999333588868	WITHOUT_CLASSIFICATION	6.664111323518818E-8	TEST
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999958795514862	WITHOUT_CLASSIFICATION	4.120448513901111E-6	TEST
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999998426700453	WITHOUT_CLASSIFICATION	1.5732995470130195E-7	TEST
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999898497156828	WITHOUT_CLASSIFICATION	1.0150284317212539E-5	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999675070954128	WITHOUT_CLASSIFICATION	3.249290458720321E-5	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999997300328937	WITHOUT_CLASSIFICATION	2.6996710638973745E-7	TEST
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999853805042376	WITHOUT_CLASSIFICATION	1.461949576254829E-5	TEST
// reset buffer	WITHOUT_CLASSIFICATION	0.9999925812048264	WITHOUT_CLASSIFICATION	7.418795173651336E-6	TEST
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999961134340661	WITHOUT_CLASSIFICATION	3.886565933847544E-6	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.959293439848642	WITHOUT_CLASSIFICATION	0.04070656015135802	TEST
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999583881348055	WITHOUT_CLASSIFICATION	4.161186519447993E-5	TEST
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.999996748183127	WITHOUT_CLASSIFICATION	3.2518168729798813E-6	TEST
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999155657843574	WITHOUT_CLASSIFICATION	8.443421564253914E-5	TEST
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999793288966313	WITHOUT_CLASSIFICATION	2.0671103368582546E-5	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9998643836234847	WITHOUT_CLASSIFICATION	1.3561637651528707E-4	TEST
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999985077520739	WITHOUT_CLASSIFICATION	1.4922479261388474E-6	TEST
