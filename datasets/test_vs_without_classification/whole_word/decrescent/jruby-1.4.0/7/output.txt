// ?R  | boolean | True if file is readable by the real uid/gid of the caller // FIXME: Need to implement an readable_real_p in FileTest	TEST	0.9999965134147547	WITHOUT_CLASSIFICATION	3.4865852453564577E-6	TEST
// TODO make an assert here	TEST	0.9388429591026067	WITHOUT_CLASSIFICATION	0.06115704089739318	TEST
// TODO add test methods here. The name must begin with 'test'. For example:	TEST	0.9064576225001811	TEST	0.09354237749981886	WITHOUT_CLASSIFICATION
// TODO: Make into an assert once I get things like blockbodynodes to be implicit nil	TEST	0.9989955005346934	WITHOUT_CLASSIFICATION	0.0010044994653066093	TEST
// if the method is extending something, then we have // to test if the handler is initialized...	TEST	0.9998142572140924	WITHOUT_CLASSIFICATION	1.8574278590750452E-4	TEST
// ?W  | boolean | True if file1 exists and is writable by the real uid/gid // FIXME: Need to implement an writable_real_p in FileTest	TEST	0.9999956006799829	WITHOUT_CLASSIFICATION	4.399320017059592E-6	TEST
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999770205705569	WITHOUT_CLASSIFICATION	2.2979429443126982E-5	TEST
// line 335	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999957805198838	WITHOUT_CLASSIFICATION	4.219480116299996E-6	TEST
// line 362	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
// line 391	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
/* ^D */	WITHOUT_CLASSIFICATION	0.999867702029106	WITHOUT_CLASSIFICATION	1.3229797089397573E-4	TEST
/* ^Z */	WITHOUT_CLASSIFICATION	0.9998678272350715	WITHOUT_CLASSIFICATION	1.3217276492842554E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9999459670235871	WITHOUT_CLASSIFICATION	5.4032976412871137E-5	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9999459670235871	WITHOUT_CLASSIFICATION	5.4032976412871137E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999405538639167	WITHOUT_CLASSIFICATION	5.944613608338875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999405538639167	WITHOUT_CLASSIFICATION	5.944613608338875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999405538639167	WITHOUT_CLASSIFICATION	5.944613608338875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999405538639167	WITHOUT_CLASSIFICATION	5.944613608338875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999405538639167	WITHOUT_CLASSIFICATION	5.944613608338875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999405538639167	WITHOUT_CLASSIFICATION	5.944613608338875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999405538639167	WITHOUT_CLASSIFICATION	5.944613608338875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999405538639167	WITHOUT_CLASSIFICATION	5.944613608338875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999405538639167	WITHOUT_CLASSIFICATION	5.944613608338875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999405538639167	WITHOUT_CLASSIFICATION	5.944613608338875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999405538639167	WITHOUT_CLASSIFICATION	5.944613608338875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999405538639167	WITHOUT_CLASSIFICATION	5.944613608338875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999405538639167	WITHOUT_CLASSIFICATION	5.944613608338875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999405538639167	WITHOUT_CLASSIFICATION	5.944613608338875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999405538639167	WITHOUT_CLASSIFICATION	5.944613608338875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999405538639167	WITHOUT_CLASSIFICATION	5.944613608338875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999405538639167	WITHOUT_CLASSIFICATION	5.944613608338875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999405538639167	WITHOUT_CLASSIFICATION	5.944613608338875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999405538639167	WITHOUT_CLASSIFICATION	5.944613608338875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999405538639167	WITHOUT_CLASSIFICATION	5.944613608338875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999405538639167	WITHOUT_CLASSIFICATION	5.944613608338875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999405538639167	WITHOUT_CLASSIFICATION	5.944613608338875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999405538639167	WITHOUT_CLASSIFICATION	5.944613608338875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999405538639167	WITHOUT_CLASSIFICATION	5.944613608338875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999405538639167	WITHOUT_CLASSIFICATION	5.944613608338875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999405538639167	WITHOUT_CLASSIFICATION	5.944613608338875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999405538639167	WITHOUT_CLASSIFICATION	5.944613608338875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999405538639167	WITHOUT_CLASSIFICATION	5.944613608338875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999405538639167	WITHOUT_CLASSIFICATION	5.944613608338875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999405538639167	WITHOUT_CLASSIFICATION	5.944613608338875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999405538639167	WITHOUT_CLASSIFICATION	5.944613608338875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999405538639167	WITHOUT_CLASSIFICATION	5.944613608338875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999405538639167	WITHOUT_CLASSIFICATION	5.944613608338875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999405538639167	WITHOUT_CLASSIFICATION	5.944613608338875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999405538639167	WITHOUT_CLASSIFICATION	5.944613608338875E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999405538639167	WITHOUT_CLASSIFICATION	5.944613608338875E-5	TEST
// return result	WITHOUT_CLASSIFICATION	0.9999979470794991	WITHOUT_CLASSIFICATION	2.05292050083892E-6	TEST
// name	WITHOUT_CLASSIFICATION	0.9998409670235702	WITHOUT_CLASSIFICATION	1.5903297642975943E-4	TEST
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999881057968526	WITHOUT_CLASSIFICATION	1.1894203147427743E-5	TEST
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999974398200806	WITHOUT_CLASSIFICATION	2.5601799193378863E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999944630575013	WITHOUT_CLASSIFICATION	5.536942498685913E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999944630575013	WITHOUT_CLASSIFICATION	5.536942498685913E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999944630575013	WITHOUT_CLASSIFICATION	5.536942498685913E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999944630575013	WITHOUT_CLASSIFICATION	5.536942498685913E-6	TEST
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999949375115993	WITHOUT_CLASSIFICATION	5.062488400797616E-6	TEST
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999623213764446	WITHOUT_CLASSIFICATION	3.7678623555408474E-5	TEST
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.999987724856969	WITHOUT_CLASSIFICATION	1.227514303116559E-5	TEST
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999760542024518	WITHOUT_CLASSIFICATION	2.3945797548171906E-5	TEST
// Version information:	WITHOUT_CLASSIFICATION	0.9999868760206991	WITHOUT_CLASSIFICATION	1.3123979300828899E-5	TEST
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999981288716276	WITHOUT_CLASSIFICATION	1.8711283723705521E-6	TEST
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999935812551158	WITHOUT_CLASSIFICATION	6.418744884061771E-6	TEST
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999977765409457	WITHOUT_CLASSIFICATION	2.2234590543817043E-6	TEST
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999998529568002	WITHOUT_CLASSIFICATION	1.4704319990739885E-7	TEST
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9976061513120288	WITHOUT_CLASSIFICATION	0.002393848687971233	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999915704867008	WITHOUT_CLASSIFICATION	8.42951329918985E-6	TEST
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999930446772094	WITHOUT_CLASSIFICATION	6.955322790604865E-6	TEST
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9998465019672642	WITHOUT_CLASSIFICATION	1.5349803273567337E-4	TEST
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999989026903433	WITHOUT_CLASSIFICATION	1.0973096567223958E-6	TEST
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999752969613943	WITHOUT_CLASSIFICATION	2.470303860560371E-5	TEST
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999831091322857	WITHOUT_CLASSIFICATION	1.6890867714318433E-5	TEST
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9999997109003592	WITHOUT_CLASSIFICATION	2.8909964077184774E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999944630575013	WITHOUT_CLASSIFICATION	5.536942498685913E-6	TEST
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999709112849968	WITHOUT_CLASSIFICATION	2.908871500312574E-5	TEST
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999447963256934	WITHOUT_CLASSIFICATION	5.520367430655175E-5	TEST
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999695840406408	WITHOUT_CLASSIFICATION	3.0415959359180916E-5	TEST
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9999836082330236	WITHOUT_CLASSIFICATION	1.6391766976431008E-5	TEST
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9999050033887038	WITHOUT_CLASSIFICATION	9.49966112962623E-5	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.99999694949074	WITHOUT_CLASSIFICATION	3.0505092600025983E-6	TEST
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999927078462697	WITHOUT_CLASSIFICATION	7.292153730248782E-6	TEST
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.999928638133693	WITHOUT_CLASSIFICATION	7.136186630691697E-5	TEST
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999855874062012	WITHOUT_CLASSIFICATION	1.4412593798696428E-5	TEST
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999820290594433	WITHOUT_CLASSIFICATION	1.7970940556607854E-5	TEST
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9991596931613898	WITHOUT_CLASSIFICATION	8.403068386101822E-4	TEST
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999370788797847	WITHOUT_CLASSIFICATION	6.292112021529706E-5	TEST
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9996134510398554	WITHOUT_CLASSIFICATION	3.865489601444822E-4	TEST
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999837081318936	WITHOUT_CLASSIFICATION	1.629186810640452E-5	TEST
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999820330056554	WITHOUT_CLASSIFICATION	1.7966994344623062E-5	TEST
// RubySignal	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999690543064096	WITHOUT_CLASSIFICATION	3.094569359039978E-5	TEST
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9905186662353804	WITHOUT_CLASSIFICATION	0.009481333764619487	TEST
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999897193548405	WITHOUT_CLASSIFICATION	1.0280645159510423E-5	TEST
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999981257926254	WITHOUT_CLASSIFICATION	1.8742073745589302E-6	TEST
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999868337656045	WITHOUT_CLASSIFICATION	1.3166234395499157E-5	TEST
//io.finish();	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9998754975513363	WITHOUT_CLASSIFICATION	1.2450244866374181E-4	TEST
// hmm...	WITHOUT_CLASSIFICATION	0.999935982211484	WITHOUT_CLASSIFICATION	6.401778851591967E-5	TEST
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9997903508965149	WITHOUT_CLASSIFICATION	2.09649103485105E-4	TEST
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999824725730823	WITHOUT_CLASSIFICATION	1.7527426917715118E-5	TEST
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999863330731397	WITHOUT_CLASSIFICATION	1.366692686030122E-5	TEST
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999930071578972	WITHOUT_CLASSIFICATION	6.9928421029081555E-6	TEST
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.999984859849888	WITHOUT_CLASSIFICATION	1.5140150111900683E-5	TEST
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999686267313178	WITHOUT_CLASSIFICATION	3.137326868206836E-5	TEST
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999884722369011	WITHOUT_CLASSIFICATION	1.152776309892995E-5	TEST
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999281245654762	WITHOUT_CLASSIFICATION	7.187543452373232E-5	TEST
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999975936554472	WITHOUT_CLASSIFICATION	2.406344552783868E-6	TEST
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999957987134974	WITHOUT_CLASSIFICATION	4.20128650257988E-6	TEST
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999649398811569	WITHOUT_CLASSIFICATION	3.506011884313529E-5	TEST
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999988578216252	WITHOUT_CLASSIFICATION	1.1421783747141576E-6	TEST
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9998125119179985	WITHOUT_CLASSIFICATION	1.874880820015578E-4	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999902369859132	WITHOUT_CLASSIFICATION	9.76301408689433E-6	TEST
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999996749696423	WITHOUT_CLASSIFICATION	3.2503035770153954E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999907017786165	WITHOUT_CLASSIFICATION	9.298221383415799E-6	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999902646750292	WITHOUT_CLASSIFICATION	9.735324970803911E-6	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999602150134804	WITHOUT_CLASSIFICATION	3.9784986519592244E-5	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999602150134804	WITHOUT_CLASSIFICATION	3.9784986519592244E-5	TEST
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9999679392583473	WITHOUT_CLASSIFICATION	3.2060741652708066E-5	TEST
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999944793518998	WITHOUT_CLASSIFICATION	5.520648100174655E-6	TEST
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999886137334989	WITHOUT_CLASSIFICATION	1.1386266501088349E-5	TEST
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999960217825385	WITHOUT_CLASSIFICATION	3.9782174614935585E-6	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999941508548708	WITHOUT_CLASSIFICATION	5.849145129235561E-6	TEST
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9998870264750223	WITHOUT_CLASSIFICATION	1.1297352497765941E-4	TEST
// ???	WITHOUT_CLASSIFICATION	0.999940263369739	WITHOUT_CLASSIFICATION	5.9736630261180314E-5	TEST
// PID	WITHOUT_CLASSIFICATION	0.999935982211484	WITHOUT_CLASSIFICATION	6.401778851591967E-5	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999907017786165	WITHOUT_CLASSIFICATION	9.298221383415799E-6	TEST
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999982042767019	WITHOUT_CLASSIFICATION	1.7957232981509976E-6	TEST
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999531882658993	WITHOUT_CLASSIFICATION	4.6811734100629944E-5	TEST
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999998253664365	WITHOUT_CLASSIFICATION	1.7463356345388483E-7	TEST
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.999998629040107	WITHOUT_CLASSIFICATION	1.370959893018455E-6	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999917138096027	WITHOUT_CLASSIFICATION	8.286190397185195E-6	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999917138096027	WITHOUT_CLASSIFICATION	8.286190397185195E-6	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999917138096027	WITHOUT_CLASSIFICATION	8.286190397185195E-6	TEST
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.999998932717371	WITHOUT_CLASSIFICATION	1.0672826290761823E-6	TEST
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999976121354857	WITHOUT_CLASSIFICATION	2.387864514266042E-6	TEST
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.999997622757039	WITHOUT_CLASSIFICATION	2.377242961028914E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999987713848151	WITHOUT_CLASSIFICATION	1.2286151849083452E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999987713848151	WITHOUT_CLASSIFICATION	1.2286151849083452E-5	TEST
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9996211236555586	WITHOUT_CLASSIFICATION	3.7887634444146515E-4	TEST
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999974789682269	WITHOUT_CLASSIFICATION	2.521031773109055E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999987713848151	WITHOUT_CLASSIFICATION	1.2286151849083452E-5	TEST
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999957534729516	WITHOUT_CLASSIFICATION	4.246527048397086E-6	TEST
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999462871215115	WITHOUT_CLASSIFICATION	5.371287848859025E-5	TEST
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999920622985929	WITHOUT_CLASSIFICATION	7.937701407009776E-6	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999971175533393	WITHOUT_CLASSIFICATION	2.8824466607512915E-6	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999685988257674	WITHOUT_CLASSIFICATION	3.140117423265466E-5	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.999986346750384	WITHOUT_CLASSIFICATION	1.3653249616011617E-5	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.999986346750384	WITHOUT_CLASSIFICATION	1.3653249616011617E-5	TEST
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999777064098281	WITHOUT_CLASSIFICATION	2.2293590171926376E-5	TEST
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999916838149678	WITHOUT_CLASSIFICATION	8.316185032223438E-6	TEST
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999899054478988	WITHOUT_CLASSIFICATION	1.0094552101280606E-5	TEST
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999844902330147	WITHOUT_CLASSIFICATION	1.5509766985238176E-5	TEST
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999624154406729	WITHOUT_CLASSIFICATION	3.758455932705911E-5	TEST
// extras flag	WITHOUT_CLASSIFICATION	0.999995364668952	WITHOUT_CLASSIFICATION	4.635331048055197E-6	TEST
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// ...nothing	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// utility method	WITHOUT_CLASSIFICATION	0.9999984537420903	WITHOUT_CLASSIFICATION	1.5462579097952509E-6	TEST
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999922749353537	WITHOUT_CLASSIFICATION	7.72506464623887E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999907017786165	WITHOUT_CLASSIFICATION	9.298221383415799E-6	TEST
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999623485198352	WITHOUT_CLASSIFICATION	3.765148016482425E-5	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999674044487643	WITHOUT_CLASSIFICATION	3.259555123570562E-5	TEST
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9999600284250452	WITHOUT_CLASSIFICATION	3.9971574954891484E-5	TEST
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999600888038541	WITHOUT_CLASSIFICATION	3.9911196145850414E-5	TEST
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999829578074049	WITHOUT_CLASSIFICATION	1.704219259509839E-5	TEST
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999882433950956	WITHOUT_CLASSIFICATION	1.1756604904385595E-5	TEST
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999716089598231	WITHOUT_CLASSIFICATION	2.839104017692406E-5	TEST
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999857220183849	WITHOUT_CLASSIFICATION	1.4277981615236383E-5	TEST
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9999347525521454	WITHOUT_CLASSIFICATION	6.524744785467322E-5	TEST
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9998351695912047	WITHOUT_CLASSIFICATION	1.6483040879533635E-4	TEST
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999892548300667	WITHOUT_CLASSIFICATION	1.0745169933248503E-5	TEST
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999957402059935	WITHOUT_CLASSIFICATION	4.259794006547861E-6	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999955397542198	WITHOUT_CLASSIFICATION	4.460245780211821E-6	TEST
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.99987681759955	WITHOUT_CLASSIFICATION	1.2318240044997063E-4	TEST
// recheck condition	WITHOUT_CLASSIFICATION	0.9999947757884586	WITHOUT_CLASSIFICATION	5.224211541362521E-6	TEST
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999848693946596	WITHOUT_CLASSIFICATION	1.5130605340341563E-5	TEST
// Construct key services	WITHOUT_CLASSIFICATION	0.9999692275111991	WITHOUT_CLASSIFICATION	3.077248880096331E-5	TEST
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999969469651173	WITHOUT_CLASSIFICATION	3.0530348827301546E-6	TEST
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999963801533674	WITHOUT_CLASSIFICATION	3.619846632569442E-6	TEST
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999921378639174	WITHOUT_CLASSIFICATION	7.86213608272637E-6	TEST
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999990904037832	WITHOUT_CLASSIFICATION	9.095962167945866E-7	TEST
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999941161116215	WITHOUT_CLASSIFICATION	5.883888378505738E-6	TEST
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999081406500885	WITHOUT_CLASSIFICATION	9.185934991158067E-5	TEST
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999932186428215	WITHOUT_CLASSIFICATION	6.781357178521233E-6	TEST
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999806419248773	WITHOUT_CLASSIFICATION	1.9358075122653425E-5	TEST
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999839948314863	WITHOUT_CLASSIFICATION	1.6005168513726414E-5	TEST
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999718250048439	WITHOUT_CLASSIFICATION	2.8174995156076158E-5	TEST
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999953501518071	WITHOUT_CLASSIFICATION	4.649848192979472E-6	TEST
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999936851347475	WITHOUT_CLASSIFICATION	6.3148652524542714E-6	TEST
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999968995624445	WITHOUT_CLASSIFICATION	3.1004375554484412E-6	TEST
// determine spacing	WITHOUT_CLASSIFICATION	0.9999949626150827	WITHOUT_CLASSIFICATION	5.037384917252246E-6	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998665449646041	WITHOUT_CLASSIFICATION	1.334550353958456E-4	TEST
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999628356660546	WITHOUT_CLASSIFICATION	3.7164333945460096E-5	TEST
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999039884462453	WITHOUT_CLASSIFICATION	9.601155375470436E-5	TEST
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9998035925563344	WITHOUT_CLASSIFICATION	1.9640744366557355E-4	TEST
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999372941834362	WITHOUT_CLASSIFICATION	6.270581656381235E-5	TEST
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9987498047583492	WITHOUT_CLASSIFICATION	0.0012501952416508776	TEST
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999844234792556	WITHOUT_CLASSIFICATION	1.5576520744352944E-5	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999833750687972	WITHOUT_CLASSIFICATION	1.6624931202831108E-5	TEST
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999897480283342	WITHOUT_CLASSIFICATION	1.0251971665887596E-5	TEST
// Default objects	WITHOUT_CLASSIFICATION	0.9999949221351264	WITHOUT_CLASSIFICATION	5.077864873542348E-6	TEST
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.999988922069027	WITHOUT_CLASSIFICATION	1.1077930972873283E-5	TEST
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999245233435641	WITHOUT_CLASSIFICATION	7.547665643595985E-5	TEST
// Java support	WITHOUT_CLASSIFICATION	0.9999965128631114	WITHOUT_CLASSIFICATION	3.487136888506545E-6	TEST
// Parser stats	WITHOUT_CLASSIFICATION	0.9999944177658444	WITHOUT_CLASSIFICATION	5.582234155578719E-6	TEST
// Compilation	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999785134467365	WITHOUT_CLASSIFICATION	2.14865532635232E-5	TEST
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999783197511538	WITHOUT_CLASSIFICATION	2.1680248846226925E-5	TEST
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999775939140979	WITHOUT_CLASSIFICATION	2.2406085902147285E-5	TEST
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999794624213857	WITHOUT_CLASSIFICATION	2.0537578614291635E-5	TEST
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999808783590972	WITHOUT_CLASSIFICATION	1.912164090284461E-5	TEST
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999837932505226	WITHOUT_CLASSIFICATION	1.6206749477438885E-5	TEST
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999704026453715	WITHOUT_CLASSIFICATION	2.9597354628509936E-5	TEST
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9998619225725953	WITHOUT_CLASSIFICATION	1.3807742740472843E-4	TEST
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999796378833499	WITHOUT_CLASSIFICATION	2.036211665012792E-5	TEST
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999846850075697	WITHOUT_CLASSIFICATION	1.5314992430333618E-5	TEST
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999976045465483	WITHOUT_CLASSIFICATION	2.395453451712294E-6	TEST
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// default options	WITHOUT_CLASSIFICATION	0.9999979566078404	WITHOUT_CLASSIFICATION	2.043392159629923E-6	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.999935982211484	WITHOUT_CLASSIFICATION	6.401778851591967E-5	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.999935982211484	WITHOUT_CLASSIFICATION	6.401778851591967E-5	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9999406830974773	WITHOUT_CLASSIFICATION	5.931690252271273E-5	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9999406830974773	WITHOUT_CLASSIFICATION	5.931690252271273E-5	TEST
// long name option	WITHOUT_CLASSIFICATION	0.9999687041594465	WITHOUT_CLASSIFICATION	3.129584055352375E-5	TEST
// conversion	WITHOUT_CLASSIFICATION	0.9999944585049153	WITHOUT_CLASSIFICATION	5.541495084601624E-6	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999902188974962	WITHOUT_CLASSIFICATION	9.781102503884456E-6	TEST
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9997346206383992	WITHOUT_CLASSIFICATION	2.6537936160079883E-4	TEST
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999840762133027	WITHOUT_CLASSIFICATION	1.5923786697309357E-5	TEST
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9998368661607503	WITHOUT_CLASSIFICATION	1.6313383924971393E-4	TEST
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999857220183849	WITHOUT_CLASSIFICATION	1.4277981615236383E-5	TEST
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999857220183849	WITHOUT_CLASSIFICATION	1.4277981615236383E-5	TEST
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999857220183849	WITHOUT_CLASSIFICATION	1.4277981615236383E-5	TEST
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.999971719114173	WITHOUT_CLASSIFICATION	2.828088582699657E-5	TEST
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999691026391455	WITHOUT_CLASSIFICATION	3.089736085451307E-5	TEST
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999884330985582	WITHOUT_CLASSIFICATION	1.1566901441793626E-5	TEST
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999858840587742	WITHOUT_CLASSIFICATION	1.4115941225822398E-5	TEST
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999862641069358	WITHOUT_CLASSIFICATION	1.3735893064338047E-5	TEST
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999884330985582	WITHOUT_CLASSIFICATION	1.1566901441793626E-5	TEST
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999970725430504	WITHOUT_CLASSIFICATION	2.9274569496252695E-6	TEST
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999857220183849	WITHOUT_CLASSIFICATION	1.4277981615236383E-5	TEST
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.999991093282397	WITHOUT_CLASSIFICATION	8.906717603010145E-6	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999549701124575	WITHOUT_CLASSIFICATION	4.502988754243634E-5	TEST
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999770535251936	WITHOUT_CLASSIFICATION	2.294647480635051E-5	TEST
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999857220183849	WITHOUT_CLASSIFICATION	1.4277981615236383E-5	TEST
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999969163897259	WITHOUT_CLASSIFICATION	3.0836102741367194E-6	TEST
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999325360969142	WITHOUT_CLASSIFICATION	6.746390308570966E-5	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999326356551984	WITHOUT_CLASSIFICATION	6.736434480155877E-5	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.999998403565028	WITHOUT_CLASSIFICATION	1.5964349719243844E-6	TEST
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999912301326668	WITHOUT_CLASSIFICATION	8.76986733316911E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999968959788378	WITHOUT_CLASSIFICATION	3.104021162290149E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999968959788378	WITHOUT_CLASSIFICATION	3.104021162290149E-6	TEST
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999824902271971	WITHOUT_CLASSIFICATION	1.7509772802932702E-5	TEST
// string given	WITHOUT_CLASSIFICATION	0.9999916855699762	WITHOUT_CLASSIFICATION	8.314430023796477E-6	TEST
// hash given	WITHOUT_CLASSIFICATION	0.9999968387438638	WITHOUT_CLASSIFICATION	3.161256136129358E-6	TEST
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999996426762381	WITHOUT_CLASSIFICATION	3.573237618803398E-7	TEST
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999151433194169	WITHOUT_CLASSIFICATION	8.485668058306408E-5	TEST
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999884330985582	WITHOUT_CLASSIFICATION	1.1566901441793626E-5	TEST
// nothing	WITHOUT_CLASSIFICATION	0.9999407181870746	WITHOUT_CLASSIFICATION	5.928181292543919E-5	TEST
// nothing	WITHOUT_CLASSIFICATION	0.9999407181870746	WITHOUT_CLASSIFICATION	5.928181292543919E-5	TEST
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999884330985582	WITHOUT_CLASSIFICATION	1.1566901441793626E-5	TEST
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.993957308466418	WITHOUT_CLASSIFICATION	0.006042691533582028	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999968301016061	WITHOUT_CLASSIFICATION	3.1698983938076395E-6	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999968301016061	WITHOUT_CLASSIFICATION	3.1698983938076395E-6	TEST
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999923758292674	WITHOUT_CLASSIFICATION	7.624170732680839E-6	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9998170165444062	WITHOUT_CLASSIFICATION	1.8298345559379037E-4	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9998170165444062	WITHOUT_CLASSIFICATION	1.8298345559379037E-4	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999952288243501	WITHOUT_CLASSIFICATION	4.77117564999964E-6	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999952288243501	WITHOUT_CLASSIFICATION	4.77117564999964E-6	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.999935982211484	WITHOUT_CLASSIFICATION	6.401778851591967E-5	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.999935982211484	WITHOUT_CLASSIFICATION	6.401778851591967E-5	TEST
// QTRUE	WITHOUT_CLASSIFICATION	0.999935982211484	WITHOUT_CLASSIFICATION	6.401778851591967E-5	TEST
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.999977444492164	WITHOUT_CLASSIFICATION	2.2555507836116458E-5	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999923399908496	WITHOUT_CLASSIFICATION	7.660009150301679E-6	TEST
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999991980905563	WITHOUT_CLASSIFICATION	8.01909443694735E-7	TEST
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.999995401517873	WITHOUT_CLASSIFICATION	4.5984821269676545E-6	TEST
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999941586194844	WITHOUT_CLASSIFICATION	5.841380515551931E-6	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999942506650265	WITHOUT_CLASSIFICATION	5.7493349735448276E-6	TEST
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999987186097657	WITHOUT_CLASSIFICATION	1.2813902341990708E-6	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999942506650265	WITHOUT_CLASSIFICATION	5.7493349735448276E-6	TEST
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9690742750739182	WITHOUT_CLASSIFICATION	0.030925724926081786	TEST
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999930168542401	WITHOUT_CLASSIFICATION	6.9831457598571226E-6	TEST
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999732408736335	WITHOUT_CLASSIFICATION	2.6759126366423987E-5	TEST
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999829015535314	WITHOUT_CLASSIFICATION	1.7098446468553125E-5	TEST
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999829792133644	WITHOUT_CLASSIFICATION	1.7020786635627652E-5	TEST
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9998393920200708	WITHOUT_CLASSIFICATION	1.6060797992924162E-4	TEST
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9998977643334491	WITHOUT_CLASSIFICATION	1.022356665508056E-4	TEST
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999857415431082	WITHOUT_CLASSIFICATION	1.4258456891929382E-5	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999961063281667	WITHOUT_CLASSIFICATION	3.893671833282916E-6	TEST
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999926388679978	WITHOUT_CLASSIFICATION	7.361132002142998E-6	TEST
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999857220183849	WITHOUT_CLASSIFICATION	1.4277981615236383E-5	TEST
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9998194888252555	WITHOUT_CLASSIFICATION	1.8051117474459467E-4	TEST
// file not given	WITHOUT_CLASSIFICATION	0.9999967991064791	WITHOUT_CLASSIFICATION	3.2008935208776468E-6	TEST
// string to eval	WITHOUT_CLASSIFICATION	0.9999959669933584	WITHOUT_CLASSIFICATION	4.033006641634464E-6	TEST
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999918105255733	WITHOUT_CLASSIFICATION	8.189474426721056E-6	TEST
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999880120401089	WITHOUT_CLASSIFICATION	1.198795989119516E-5	TEST
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999720742760728	WITHOUT_CLASSIFICATION	2.792572392718702E-5	TEST
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999920402480855	WITHOUT_CLASSIFICATION	7.959751914399902E-6	TEST
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9999158659136651	WITHOUT_CLASSIFICATION	8.4134086334968E-5	TEST
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9997111350436675	WITHOUT_CLASSIFICATION	2.888649563324265E-4	TEST
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.999594630417743	WITHOUT_CLASSIFICATION	4.0536958225698E-4	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999874270766592	WITHOUT_CLASSIFICATION	1.2572923340731748E-5	TEST
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999928145187267	WITHOUT_CLASSIFICATION	7.185481273321511E-6	TEST
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999722877443608	WITHOUT_CLASSIFICATION	2.7712255639245163E-5	TEST
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999423776351064	WITHOUT_CLASSIFICATION	5.7622364893517716E-5	TEST
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999442687814775	WITHOUT_CLASSIFICATION	5.57312185224343E-5	TEST
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999528517509724	WITHOUT_CLASSIFICATION	4.7148249027581674E-5	TEST
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999246572879833	WITHOUT_CLASSIFICATION	7.534271201667678E-5	TEST
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.999994008168194	WITHOUT_CLASSIFICATION	5.991831805966966E-6	TEST
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999769651961512	WITHOUT_CLASSIFICATION	2.3034803848740054E-5	TEST
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999932339005938	WITHOUT_CLASSIFICATION	6.766099406190607E-6	TEST
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999995453960642	WITHOUT_CLASSIFICATION	4.5460393592619293E-7	TEST
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999980315818999	WITHOUT_CLASSIFICATION	1.96841810014091E-6	TEST
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999295085219723	WITHOUT_CLASSIFICATION	7.049147802763785E-5	TEST
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999807713995305	WITHOUT_CLASSIFICATION	1.9228600469501585E-5	TEST
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999844140917946	WITHOUT_CLASSIFICATION	1.5585908205448442E-5	TEST
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999849000317846	WITHOUT_CLASSIFICATION	1.5099968215379464E-5	TEST
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999660421501958	WITHOUT_CLASSIFICATION	3.3957849804267734E-5	TEST
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999946135152495	WITHOUT_CLASSIFICATION	5.386484750439297E-6	TEST
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.999984908283004	WITHOUT_CLASSIFICATION	1.5091716995983512E-5	TEST
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999925087238198	WITHOUT_CLASSIFICATION	7.491276180261956E-6	TEST
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999809581187834	WITHOUT_CLASSIFICATION	1.904188121665915E-5	TEST
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999845654392437	WITHOUT_CLASSIFICATION	1.5434560756226028E-5	TEST
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.999996808546915	WITHOUT_CLASSIFICATION	3.1914530850249284E-6	TEST
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999992185528459	WITHOUT_CLASSIFICATION	7.814471540341516E-7	TEST
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999844254140968	WITHOUT_CLASSIFICATION	1.557458590323231E-5	TEST
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999078509463124	WITHOUT_CLASSIFICATION	9.21490536875789E-5	TEST
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999954837355026	WITHOUT_CLASSIFICATION	4.5162644973976495E-6	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999701816383467	WITHOUT_CLASSIFICATION	2.981836165332985E-5	TEST
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999383007371296	WITHOUT_CLASSIFICATION	6.169926287039137E-5	TEST
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999960963761813	WITHOUT_CLASSIFICATION	3.9036238187801055E-6	TEST
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999974118866444	WITHOUT_CLASSIFICATION	2.5881133556948564E-6	TEST
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9993060375692214	WITHOUT_CLASSIFICATION	6.939624307785455E-4	TEST
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999890155925262	WITHOUT_CLASSIFICATION	1.098440747388178E-5	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.999999087721212	WITHOUT_CLASSIFICATION	9.122787880983972E-7	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.999999087721212	WITHOUT_CLASSIFICATION	9.122787880983972E-7	TEST
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999354650662068	WITHOUT_CLASSIFICATION	6.453493379325083E-5	TEST
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999382394917621	WITHOUT_CLASSIFICATION	6.176050823792126E-5	TEST
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.999927975048313	WITHOUT_CLASSIFICATION	7.202495168695659E-5	TEST
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999900911152761	WITHOUT_CLASSIFICATION	9.908884723792634E-6	TEST
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999990831162021	WITHOUT_CLASSIFICATION	9.168837978195681E-7	TEST
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999649394389195	WITHOUT_CLASSIFICATION	3.506056108046103E-5	TEST
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.999976369926855	WITHOUT_CLASSIFICATION	2.363007314500694E-5	TEST
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999987017293198	WITHOUT_CLASSIFICATION	1.298270680167301E-6	TEST
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999791337038638	WITHOUT_CLASSIFICATION	2.086629613624222E-5	TEST
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999977013192161	WITHOUT_CLASSIFICATION	2.298680783870744E-6	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999988267201797	WITHOUT_CLASSIFICATION	1.1732798203025514E-6	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999988267201797	WITHOUT_CLASSIFICATION	1.1732798203025514E-6	TEST
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9999921918428729	WITHOUT_CLASSIFICATION	7.808157127133077E-6	TEST
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999995475746597	WITHOUT_CLASSIFICATION	4.524253402045579E-7	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9997406156095743	WITHOUT_CLASSIFICATION	2.5938439042574244E-4	TEST
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999932834069433	WITHOUT_CLASSIFICATION	6.716593056722288E-6	TEST
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999855459748868	WITHOUT_CLASSIFICATION	1.4454025113214572E-5	TEST
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999952753816203	WITHOUT_CLASSIFICATION	4.724618379854067E-6	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999927374487322	WITHOUT_CLASSIFICATION	7.2625512677331435E-6	TEST
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999522064959576	WITHOUT_CLASSIFICATION	4.779350404243229E-5	TEST
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999928250022453	WITHOUT_CLASSIFICATION	7.174997754628873E-6	TEST
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999874246747142	WITHOUT_CLASSIFICATION	1.2575325285876052E-5	TEST
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.999994452953952	WITHOUT_CLASSIFICATION	5.547046048105858E-6	TEST
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999179204134947	WITHOUT_CLASSIFICATION	8.207958650537341E-5	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.99998962013075	WITHOUT_CLASSIFICATION	1.037986925001476E-5	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.99998962013075	WITHOUT_CLASSIFICATION	1.037986925001476E-5	TEST
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999743053447785	WITHOUT_CLASSIFICATION	2.5694655221433437E-5	TEST
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999926998311689	WITHOUT_CLASSIFICATION	7.30016883114802E-6	TEST
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999887253042846	WITHOUT_CLASSIFICATION	1.127469571531509E-5	TEST
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999695554852382	WITHOUT_CLASSIFICATION	3.0444514761813943E-5	TEST
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999593380115017	WITHOUT_CLASSIFICATION	4.066198849820895E-5	TEST
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999510533085225	WITHOUT_CLASSIFICATION	4.894669147760594E-5	TEST
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9998981185425165	WITHOUT_CLASSIFICATION	1.0188145748347615E-4	TEST
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999870061197387	WITHOUT_CLASSIFICATION	1.2993880261240802E-5	TEST
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999527274300073	WITHOUT_CLASSIFICATION	4.727256999276393E-5	TEST
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.99998677172283	WITHOUT_CLASSIFICATION	1.3228277170009477E-5	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9997406156095743	WITHOUT_CLASSIFICATION	2.5938439042574244E-4	TEST
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9998618192785199	WITHOUT_CLASSIFICATION	1.381807214800448E-4	TEST
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999936556594929	WITHOUT_CLASSIFICATION	6.344340507032939E-6	TEST
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.999786946178873	WITHOUT_CLASSIFICATION	2.13053821127059E-4	TEST
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999981738660179	WITHOUT_CLASSIFICATION	1.8261339820829995E-6	TEST
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.999986040258487	WITHOUT_CLASSIFICATION	1.3959741512928972E-5	TEST
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999996831825066	WITHOUT_CLASSIFICATION	3.16817493454486E-7	TEST
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999868664945709	WITHOUT_CLASSIFICATION	1.3133505429081413E-5	TEST
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999983972098658	WITHOUT_CLASSIFICATION	1.6027901341566068E-6	TEST
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999975831749672	WITHOUT_CLASSIFICATION	2.4168250328079153E-6	TEST
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999983011345622	WITHOUT_CLASSIFICATION	1.6988654378635757E-6	TEST
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999992569572101	WITHOUT_CLASSIFICATION	7.430427897859256E-7	TEST
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.999946960458489	WITHOUT_CLASSIFICATION	5.303954151097351E-5	TEST
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.999985246323418	WITHOUT_CLASSIFICATION	1.4753676581858389E-5	TEST
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999875468028175	WITHOUT_CLASSIFICATION	1.2453197182507915E-5	TEST
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.999826325791779	WITHOUT_CLASSIFICATION	1.736742082210667E-4	TEST
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999966879257179	WITHOUT_CLASSIFICATION	3.3120742820614524E-6	TEST
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999145366174983	WITHOUT_CLASSIFICATION	8.546338250180583E-5	TEST
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999704918232368	WITHOUT_CLASSIFICATION	2.950817676316502E-5	TEST
/* rb: readable */	WITHOUT_CLASSIFICATION	0.999988619896749	WITHOUT_CLASSIFICATION	1.138010325090805E-5	TEST
// rename is successful	WITHOUT_CLASSIFICATION	0.9999357266924341	WITHOUT_CLASSIFICATION	6.427330756586344E-5	TEST
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999889568053222	WITHOUT_CLASSIFICATION	1.104319467784251E-5	TEST
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999852585490926	WITHOUT_CLASSIFICATION	1.4741450907427766E-5	TEST
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999838250733558	WITHOUT_CLASSIFICATION	1.6174926644205264E-5	TEST
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9998983363050915	WITHOUT_CLASSIFICATION	1.016636949083874E-4	TEST
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999093893716706	WITHOUT_CLASSIFICATION	9.06106283294145E-5	TEST
// 16 ?	WITHOUT_CLASSIFICATION	0.9999532853928855	WITHOUT_CLASSIFICATION	4.671460711457829E-5	TEST
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999621536322978	WITHOUT_CLASSIFICATION	3.784636770214055E-5	TEST
// size + 1;	WITHOUT_CLASSIFICATION	0.9999963698068179	WITHOUT_CLASSIFICATION	3.6301931820122786E-6	TEST
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.99999370343319	WITHOUT_CLASSIFICATION	6.296566809870284E-6	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999673559214823	WITHOUT_CLASSIFICATION	3.264407851770205E-5	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999673559214823	WITHOUT_CLASSIFICATION	3.264407851770205E-5	TEST
// put implementation	WITHOUT_CLASSIFICATION	0.9999880564864925	WITHOUT_CLASSIFICATION	1.194351350753814E-5	TEST
// get implementation	WITHOUT_CLASSIFICATION	0.9999931648222434	WITHOUT_CLASSIFICATION	6.83517775658544E-6	TEST
// specialized for value	WITHOUT_CLASSIFICATION	0.9999826450686846	WITHOUT_CLASSIFICATION	1.735493131546253E-5	TEST
// delete implementation	WITHOUT_CLASSIFICATION	0.9999890283828855	WITHOUT_CLASSIFICATION	1.0971617114580539E-5	TEST
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.999980508836257	WITHOUT_CLASSIFICATION	1.949116374304047E-5	TEST
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999953179816059	WITHOUT_CLASSIFICATION	4.682018394142969E-6	TEST
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999907017786165	WITHOUT_CLASSIFICATION	9.298221383415799E-6	TEST
// update the hash value	WITHOUT_CLASSIFICATION	0.9999873759714184	WITHOUT_CLASSIFICATION	1.2624028581593763E-5	TEST
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9993425884704431	WITHOUT_CLASSIFICATION	6.574115295569008E-4	TEST
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999705026547834	WITHOUT_CLASSIFICATION	2.9497345216565592E-5	TEST
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999777064098281	WITHOUT_CLASSIFICATION	2.2293590171926376E-5	TEST
// remain where we are	WITHOUT_CLASSIFICATION	0.9999859667516806	WITHOUT_CLASSIFICATION	1.4033248319448558E-5	TEST
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9995945468513223	WITHOUT_CLASSIFICATION	4.054531486776704E-4	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999833750687972	WITHOUT_CLASSIFICATION	1.6624931202831108E-5	TEST
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999959662581361	WITHOUT_CLASSIFICATION	4.033741863863659E-6	TEST
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9988385480796547	WITHOUT_CLASSIFICATION	0.001161451920345414	TEST
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999999691318396	WITHOUT_CLASSIFICATION	3.086816042919017E-8	TEST
// first try as directory	WITHOUT_CLASSIFICATION	0.999998945859829	WITHOUT_CLASSIFICATION	1.054140171093278E-6	TEST
// next as regular file	WITHOUT_CLASSIFICATION	0.9999983539447178	WITHOUT_CLASSIFICATION	1.6460552821210253E-6	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999437483031355	WITHOUT_CLASSIFICATION	5.6251696864497016E-5	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// Stream-based	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.999945879704635	WITHOUT_CLASSIFICATION	5.412029536494152E-5	TEST
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999990930010537	WITHOUT_CLASSIFICATION	9.069989461979849E-7	TEST
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999828019633352	WITHOUT_CLASSIFICATION	1.7198036664745384E-5	TEST
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999381837023492	WITHOUT_CLASSIFICATION	6.18162976508428E-5	TEST
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999978207450112	WITHOUT_CLASSIFICATION	2.1792549887347132E-6	TEST
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999922087038322	WITHOUT_CLASSIFICATION	7.791296167741255E-6	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999526129264744	WITHOUT_CLASSIFICATION	4.7387073525550346E-5	TEST
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999933399504572	WITHOUT_CLASSIFICATION	6.660049542792277E-6	TEST
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999934990990222	WITHOUT_CLASSIFICATION	6.50090097773384E-6	TEST
// re-register	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999169824764367	WITHOUT_CLASSIFICATION	8.301752356328558E-5	TEST
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999818462660676	WITHOUT_CLASSIFICATION	1.8153733932413603E-5	TEST
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999951046826451	WITHOUT_CLASSIFICATION	4.895317354943731E-6	TEST
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999397443936742	WITHOUT_CLASSIFICATION	6.0255606325671255E-5	TEST
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999571132272126	WITHOUT_CLASSIFICATION	4.288677278750862E-5	TEST
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999986047459738	WITHOUT_CLASSIFICATION	1.3952540262148166E-6	TEST
// use original modes	WITHOUT_CLASSIFICATION	0.999986602568421	WITHOUT_CLASSIFICATION	1.3397431579055017E-5	TEST
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999913425712262	WITHOUT_CLASSIFICATION	8.65742877383263E-6	TEST
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999312774187721	WITHOUT_CLASSIFICATION	6.872258122785054E-5	TEST
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999677542217191	WITHOUT_CLASSIFICATION	3.224577828095541E-5	TEST
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999860478969161	WITHOUT_CLASSIFICATION	1.3952103083904227E-5	TEST
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999238456843742	WITHOUT_CLASSIFICATION	7.61543156258469E-5	TEST
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999760713040474	WITHOUT_CLASSIFICATION	2.3928695952582326E-5	TEST
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999800444293351	WITHOUT_CLASSIFICATION	1.9955570664873037E-5	TEST
//Everything written	WITHOUT_CLASSIFICATION	0.9999405266448488	WITHOUT_CLASSIFICATION	5.9473355151257346E-5	TEST
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999924219949157	WITHOUT_CLASSIFICATION	7.578005084389239E-6	TEST
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9998369695784483	WITHOUT_CLASSIFICATION	1.6303042155172136E-4	TEST
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9997496989993955	WITHOUT_CLASSIFICATION	2.5030100060448307E-4	TEST
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999898802387724	WITHOUT_CLASSIFICATION	1.011976122762752E-5	TEST
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999876464037689	WITHOUT_CLASSIFICATION	1.235359623106578E-5	TEST
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999612139818095	WITHOUT_CLASSIFICATION	3.878601819045752E-5	TEST
// hmmmm	WITHOUT_CLASSIFICATION	0.999935982211484	WITHOUT_CLASSIFICATION	6.401778851591967E-5	TEST
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999755968104693	WITHOUT_CLASSIFICATION	2.4403189530664895E-5	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999955792081129	WITHOUT_CLASSIFICATION	4.420791887103957E-6	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999989498939145	WITHOUT_CLASSIFICATION	1.0501060855110887E-6	TEST
// Length to read	WITHOUT_CLASSIFICATION	0.9999985153830117	WITHOUT_CLASSIFICATION	1.4846169884107603E-6	TEST
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999849044336815	WITHOUT_CLASSIFICATION	1.5095566318480995E-5	TEST
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999809168241347	WITHOUT_CLASSIFICATION	1.9083175865362353E-5	TEST
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999708507496707	WITHOUT_CLASSIFICATION	2.9149250329304897E-5	TEST
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999854760557694	WITHOUT_CLASSIFICATION	1.4523944230557547E-5	TEST
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999853181335031	WITHOUT_CLASSIFICATION	1.46818664969515E-5	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999926465275283	WITHOUT_CLASSIFICATION	7.353472471697786E-6	TEST
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999884330985582	WITHOUT_CLASSIFICATION	1.1566901441793626E-5	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999926465275283	WITHOUT_CLASSIFICATION	7.353472471697786E-6	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.999942610404311	WITHOUT_CLASSIFICATION	5.738959568897758E-5	TEST
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9995426763415949	WITHOUT_CLASSIFICATION	4.5732365840524096E-4	TEST
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999836131187944	WITHOUT_CLASSIFICATION	1.6386881205565303E-5	TEST
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.9982259611631659	WITHOUT_CLASSIFICATION	0.0017740388368341431	TEST
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999859986337962	WITHOUT_CLASSIFICATION	1.4001366203846139E-5	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999904228885135	WITHOUT_CLASSIFICATION	9.577111486564572E-6	TEST
// write	WITHOUT_CLASSIFICATION	0.9998737745528297	WITHOUT_CLASSIFICATION	1.2622544717027536E-4	TEST
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9998976489288982	WITHOUT_CLASSIFICATION	1.0235107110179861E-4	TEST
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999906605241777	WITHOUT_CLASSIFICATION	9.339475822284893E-6	TEST
// FIXME: process options	WITHOUT_CLASSIFICATION	0.99999138922331	WITHOUT_CLASSIFICATION	8.610776689947516E-6	TEST
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9999983008191511	WITHOUT_CLASSIFICATION	1.6991808489870964E-6	TEST
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999949376296436	WITHOUT_CLASSIFICATION	5.062370356388681E-6	TEST
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9999892731080534	WITHOUT_CLASSIFICATION	1.0726891946667005E-5	TEST
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999971078827199	WITHOUT_CLASSIFICATION	2.8921172800623863E-6	TEST
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9998717662551826	WITHOUT_CLASSIFICATION	1.282337448174189E-4	TEST
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.996561131556255	WITHOUT_CLASSIFICATION	0.0034388684437450883	TEST
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999997866875507	WITHOUT_CLASSIFICATION	2.1331244927389209E-7	TEST
// The class of this object	WITHOUT_CLASSIFICATION	0.9999800109121798	WITHOUT_CLASSIFICATION	1.9989087820219915E-5	TEST
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999921409820498	WITHOUT_CLASSIFICATION	7.859017950159724E-6	TEST
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9996134510398554	WITHOUT_CLASSIFICATION	3.865489601444822E-4	TEST
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9998583863665336	WITHOUT_CLASSIFICATION	1.4161363346643213E-4	TEST
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999704918232368	WITHOUT_CLASSIFICATION	2.950817676316502E-5	TEST
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999857220183849	WITHOUT_CLASSIFICATION	1.4277981615236383E-5	TEST
// for interface impls	WITHOUT_CLASSIFICATION	0.9999857072158957	WITHOUT_CLASSIFICATION	1.4292784104121999E-5	TEST
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999789632833341	WITHOUT_CLASSIFICATION	2.1036716665934645E-5	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999961582556226	WITHOUT_CLASSIFICATION	3.841744377386342E-6	TEST
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999980928938307	WITHOUT_CLASSIFICATION	1.90710616933768E-6	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999915704867008	WITHOUT_CLASSIFICATION	8.42951329918985E-6	TEST
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999989264843646	WITHOUT_CLASSIFICATION	1.0735156353100133E-6	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999674208485669	WITHOUT_CLASSIFICATION	3.257915143311714E-5	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999674208485669	WITHOUT_CLASSIFICATION	3.257915143311714E-5	TEST
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999703346092106	WITHOUT_CLASSIFICATION	2.9665390789373244E-5	TEST
// Struct methods	WITHOUT_CLASSIFICATION	0.9999959838023373	WITHOUT_CLASSIFICATION	4.016197662679794E-6	TEST
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.999747919058669	WITHOUT_CLASSIFICATION	2.5208094133104454E-4	TEST
// define access methods.	WITHOUT_CLASSIFICATION	0.9999971638785198	WITHOUT_CLASSIFICATION	2.8361214801317325E-6	TEST
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.999988641602933	WITHOUT_CLASSIFICATION	1.1358397067042109E-5	TEST
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999854724438074	WITHOUT_CLASSIFICATION	1.45275561926505E-5	TEST
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999787818287974	WITHOUT_CLASSIFICATION	2.121817120260121E-5	TEST
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999857220183849	WITHOUT_CLASSIFICATION	1.4277981615236383E-5	TEST
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999951891630479	WITHOUT_CLASSIFICATION	4.8108369520670706E-6	TEST
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.999968529757232	WITHOUT_CLASSIFICATION	3.147024276806924E-5	TEST
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999996012986923	WITHOUT_CLASSIFICATION	3.987013076939409E-7	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999958862354871	WITHOUT_CLASSIFICATION	4.113764512893624E-6	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999958862354871	WITHOUT_CLASSIFICATION	4.113764512893624E-6	TEST
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9997905511937908	WITHOUT_CLASSIFICATION	2.0944880620925272E-4	TEST
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999897234948611	WITHOUT_CLASSIFICATION	1.0276505138742094E-5	TEST
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999690041685212	WITHOUT_CLASSIFICATION	3.09958314787419E-5	TEST
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9998652426336001	WITHOUT_CLASSIFICATION	1.3475736639986292E-4	TEST
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999887603333965	WITHOUT_CLASSIFICATION	1.1239666603496393E-5	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999769991510795	WITHOUT_CLASSIFICATION	2.3000848920494925E-5	TEST
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999169134237674	WITHOUT_CLASSIFICATION	8.308657623246928E-5	TEST
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999925932528042	WITHOUT_CLASSIFICATION	7.406747195847365E-6	TEST
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9997035366538481	WITHOUT_CLASSIFICATION	2.964633461518905E-4	TEST
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999939538862427	WITHOUT_CLASSIFICATION	6.04611375729518E-6	TEST
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999420183331048	WITHOUT_CLASSIFICATION	5.798166689514176E-5	TEST
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999981921683446	WITHOUT_CLASSIFICATION	1.807831655426271E-6	TEST
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9998438057376953	WITHOUT_CLASSIFICATION	1.5619426230468735E-4	TEST
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999025201274584	WITHOUT_CLASSIFICATION	9.747987254152248E-5	TEST
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999903102831057	WITHOUT_CLASSIFICATION	9.689716894352074E-6	TEST
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999454464802495	WITHOUT_CLASSIFICATION	5.4553519750536336E-5	TEST
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999945464316663	WITHOUT_CLASSIFICATION	5.4535683337225775E-6	TEST
// reopen a java class	WITHOUT_CLASSIFICATION	0.999996881070466	WITHOUT_CLASSIFICATION	3.118929533947529E-6	TEST
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999865760108189	WITHOUT_CLASSIFICATION	1.3423989181049356E-5	TEST
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999942910400442	WITHOUT_CLASSIFICATION	5.70895995569809E-6	TEST
//FIXME warning	WITHOUT_CLASSIFICATION	0.9999379935372833	WITHOUT_CLASSIFICATION	6.200646271671517E-5	TEST
// FIXME warning	WITHOUT_CLASSIFICATION	0.9999782226840873	WITHOUT_CLASSIFICATION	2.1777315912649557E-5	TEST
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9999298478353033	WITHOUT_CLASSIFICATION	7.015216469679814E-5	TEST
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999994805073475	WITHOUT_CLASSIFICATION	5.194926525025586E-7	TEST
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999687699318982	WITHOUT_CLASSIFICATION	3.123006810177928E-5	TEST
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999986652078756	WITHOUT_CLASSIFICATION	1.3347921243412528E-6	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999976967545791	WITHOUT_CLASSIFICATION	2.303245420934793E-6	TEST
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999139913151593	WITHOUT_CLASSIFICATION	8.600868484061211E-5	TEST
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999788348501644	WITHOUT_CLASSIFICATION	2.1165149835641163E-5	TEST
/* Module class methods */	WITHOUT_CLASSIFICATION	0.999988458535956	WITHOUT_CLASSIFICATION	1.1541464044117214E-5	TEST
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999973060868905	WITHOUT_CLASSIFICATION	2.6939131094465238E-6	TEST
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999792430891755	WITHOUT_CLASSIFICATION	2.0756910824452206E-5	TEST
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999990288150018	WITHOUT_CLASSIFICATION	9.711849981665001E-7	TEST
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999992501416669	WITHOUT_CLASSIFICATION	7.498583331639977E-7	TEST
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999639300572776	WITHOUT_CLASSIFICATION	3.6069942722411775E-5	TEST
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999978747780531	WITHOUT_CLASSIFICATION	2.125221946935391E-6	TEST
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999678879549534	WITHOUT_CLASSIFICATION	3.2112045046641696E-5	TEST
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999678879549534	WITHOUT_CLASSIFICATION	3.2112045046641696E-5	TEST
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999248533936473	WITHOUT_CLASSIFICATION	7.514660635261665E-5	TEST
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999707599405248	WITHOUT_CLASSIFICATION	2.924005947521887E-5	TEST
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999958934411862	WITHOUT_CLASSIFICATION	4.106558813784747E-6	TEST
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9999888545743298	WITHOUT_CLASSIFICATION	1.1145425670143874E-5	TEST
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9998929029731414	WITHOUT_CLASSIFICATION	1.0709702685856809E-4	TEST
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999949074725466	WITHOUT_CLASSIFICATION	5.09252745339411E-6	TEST
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999684995264757	WITHOUT_CLASSIFICATION	3.150047352424889E-5	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999857661134774	WITHOUT_CLASSIFICATION	1.4233886522453335E-5	TEST
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999961022612374	WITHOUT_CLASSIFICATION	3.897738762573365E-6	TEST
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999984560830142	WITHOUT_CLASSIFICATION	1.5439169858818992E-6	TEST
//reopen	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999959838023373	WITHOUT_CLASSIFICATION	4.016197662679794E-6	TEST
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999606957263254	WITHOUT_CLASSIFICATION	3.930427367463706E-5	TEST
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999843268811943	WITHOUT_CLASSIFICATION	1.567311880578931E-5	TEST
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999983876378756	WITHOUT_CLASSIFICATION	1.6123621243244511E-6	TEST
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999996653030135	WITHOUT_CLASSIFICATION	3.346969864036831E-7	TEST
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999953867720819	WITHOUT_CLASSIFICATION	4.613227918104233E-6	TEST
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999972040003485	WITHOUT_CLASSIFICATION	2.79599965150995E-6	TEST
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999972101335503	WITHOUT_CLASSIFICATION	2.7898664498387E-6	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999980887811175	WITHOUT_CLASSIFICATION	1.911218882453388E-6	TEST
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.999992450992835	WITHOUT_CLASSIFICATION	7.549007165026376E-6	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.999992301100208	WITHOUT_CLASSIFICATION	7.698899791936606E-6	TEST
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999916709666166	WITHOUT_CLASSIFICATION	8.329033383491907E-6	TEST
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999884861060595	WITHOUT_CLASSIFICATION	1.151389394039029E-5	TEST
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999622862234816	WITHOUT_CLASSIFICATION	3.7713776518411695E-5	TEST
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999631080070651	WITHOUT_CLASSIFICATION	3.689199293480672E-5	TEST
// ignore error	WITHOUT_CLASSIFICATION	0.9999977573133314	WITHOUT_CLASSIFICATION	2.2426866686663473E-6	TEST
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999765754238334	WITHOUT_CLASSIFICATION	2.3424576166431356E-5	TEST
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999707599405248	WITHOUT_CLASSIFICATION	2.924005947521887E-5	TEST
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999175288715471	WITHOUT_CLASSIFICATION	8.247112845296885E-5	TEST
// odd	WITHOUT_CLASSIFICATION	0.9999360033572972	WITHOUT_CLASSIFICATION	6.399664270290946E-5	TEST
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999989410048602	WITHOUT_CLASSIFICATION	1.0589951397387419E-6	TEST
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999820353212949	WITHOUT_CLASSIFICATION	1.796467870497361E-5	TEST
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999916554962792	WITHOUT_CLASSIFICATION	8.344503720764185E-6	TEST
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999987036771889	WITHOUT_CLASSIFICATION	1.296322811054604E-6	TEST
/*  0! */	WITHOUT_CLASSIFICATION	0.9998407132268284	WITHOUT_CLASSIFICATION	1.5928677317157176E-4	TEST
/*  1! */	WITHOUT_CLASSIFICATION	0.9998407132268284	WITHOUT_CLASSIFICATION	1.5928677317157176E-4	TEST
/*  2! */	WITHOUT_CLASSIFICATION	0.9998407132268284	WITHOUT_CLASSIFICATION	1.5928677317157176E-4	TEST
/*  3! */	WITHOUT_CLASSIFICATION	0.9998407132268284	WITHOUT_CLASSIFICATION	1.5928677317157176E-4	TEST
/*  4! */	WITHOUT_CLASSIFICATION	0.9998407132268284	WITHOUT_CLASSIFICATION	1.5928677317157176E-4	TEST
/*  5! */	WITHOUT_CLASSIFICATION	0.9998407132268284	WITHOUT_CLASSIFICATION	1.5928677317157176E-4	TEST
/*  6! */	WITHOUT_CLASSIFICATION	0.9998407132268284	WITHOUT_CLASSIFICATION	1.5928677317157176E-4	TEST
/*  7! */	WITHOUT_CLASSIFICATION	0.9998407132268284	WITHOUT_CLASSIFICATION	1.5928677317157176E-4	TEST
/*  8! */	WITHOUT_CLASSIFICATION	0.9998407132268284	WITHOUT_CLASSIFICATION	1.5928677317157176E-4	TEST
/*  9! */	WITHOUT_CLASSIFICATION	0.9998407132268284	WITHOUT_CLASSIFICATION	1.5928677317157176E-4	TEST
/* 11! */	WITHOUT_CLASSIFICATION	0.999867702029106	WITHOUT_CLASSIFICATION	1.3229797089397573E-4	TEST
/* 12! */	WITHOUT_CLASSIFICATION	0.999867702029106	WITHOUT_CLASSIFICATION	1.3229797089397573E-4	TEST
/* 13! */	WITHOUT_CLASSIFICATION	0.999867702029106	WITHOUT_CLASSIFICATION	1.3229797089397573E-4	TEST
/* 15! */	WITHOUT_CLASSIFICATION	0.999867702029106	WITHOUT_CLASSIFICATION	1.3229797089397573E-4	TEST
/* 16! */	WITHOUT_CLASSIFICATION	0.999867702029106	WITHOUT_CLASSIFICATION	1.3229797089397573E-4	TEST
/* 17! */	WITHOUT_CLASSIFICATION	0.999867702029106	WITHOUT_CLASSIFICATION	1.3229797089397573E-4	TEST
/* 19! */	WITHOUT_CLASSIFICATION	0.999867702029106	WITHOUT_CLASSIFICATION	1.3229797089397573E-4	TEST
/* 20! */	WITHOUT_CLASSIFICATION	0.999867702029106	WITHOUT_CLASSIFICATION	1.3229797089397573E-4	TEST
/* 21! */	WITHOUT_CLASSIFICATION	0.999867702029106	WITHOUT_CLASSIFICATION	1.3229797089397573E-4	TEST
// Static constants	WITHOUT_CLASSIFICATION	0.9999973347797783	WITHOUT_CLASSIFICATION	2.6652202216864612E-6	TEST
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9999779460239694	WITHOUT_CLASSIFICATION	2.2053976030647275E-5	TEST
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999700172821028	WITHOUT_CLASSIFICATION	2.998271789726606E-5	TEST
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999856331740342	WITHOUT_CLASSIFICATION	1.436682596584072E-5	TEST
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999952075716576	WITHOUT_CLASSIFICATION	4.792428342409434E-6	TEST
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999975306223732	WITHOUT_CLASSIFICATION	2.469377626803273E-6	TEST
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999989910211746	WITHOUT_CLASSIFICATION	1.0089788254452233E-6	TEST
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9999937416700815	WITHOUT_CLASSIFICATION	6.258329918485162E-6	TEST
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999981218467976	WITHOUT_CLASSIFICATION	1.8781532024996342E-6	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9998623371952404	WITHOUT_CLASSIFICATION	1.3766280475966574E-4	TEST
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9777395007721236	WITHOUT_CLASSIFICATION	0.022260499227876488	TEST
// integer division	WITHOUT_CLASSIFICATION	0.9999944234365004	WITHOUT_CLASSIFICATION	5.576563499612245E-6	TEST
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999932905035561	WITHOUT_CLASSIFICATION	6.709496443833253E-6	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999857545729751	WITHOUT_CLASSIFICATION	1.4245427024930966E-5	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999857545729751	WITHOUT_CLASSIFICATION	1.4245427024930966E-5	TEST
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999975306223732	WITHOUT_CLASSIFICATION	2.469377626803273E-6	TEST
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.999946560738897	WITHOUT_CLASSIFICATION	5.343926110314891E-5	TEST
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999997873120999	WITHOUT_CLASSIFICATION	2.126878999759715E-7	TEST
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999942753147241	WITHOUT_CLASSIFICATION	5.724685275961573E-6	TEST
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999962911660454	WITHOUT_CLASSIFICATION	3.708833954704447E-6	TEST
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999162015647567	WITHOUT_CLASSIFICATION	8.379843524329025E-5	TEST
// sign	WITHOUT_CLASSIFICATION	0.99993609701925	WITHOUT_CLASSIFICATION	6.390298074991781E-5	TEST
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999910924088946	WITHOUT_CLASSIFICATION	8.90759110528079E-6	TEST
// normalize the value	WITHOUT_CLASSIFICATION	0.999993107793976	WITHOUT_CLASSIFICATION	6.892206023898447E-6	TEST
// base	WITHOUT_CLASSIFICATION	0.9999436645101372	WITHOUT_CLASSIFICATION	5.6335489862871934E-5	TEST
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9995776499151372	WITHOUT_CLASSIFICATION	4.2235008486278883E-4	TEST
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999985258258103	WITHOUT_CLASSIFICATION	1.4741741897945972E-6	TEST
// eh?!	WITHOUT_CLASSIFICATION	0.999935982211484	WITHOUT_CLASSIFICATION	6.401778851591967E-5	TEST
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.999932843830262	WITHOUT_CLASSIFICATION	6.715616973801271E-5	TEST
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999908554271665	WITHOUT_CLASSIFICATION	9.144572833560316E-6	TEST
// the requested precision	WITHOUT_CLASSIFICATION	0.9999934126020052	WITHOUT_CLASSIFICATION	6.587397994776043E-6	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.99999694949074	WITHOUT_CLASSIFICATION	3.0505092600025983E-6	TEST
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999849590224875	WITHOUT_CLASSIFICATION	1.504097751250548E-5	TEST
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999881191475615	WITHOUT_CLASSIFICATION	1.1880852438452767E-5	TEST
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999327612065354	WITHOUT_CLASSIFICATION	6.72387934645178E-5	TEST
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.999990946976918	WITHOUT_CLASSIFICATION	9.05302308200444E-6	TEST
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999953100036872	WITHOUT_CLASSIFICATION	4.689996312822407E-6	TEST
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999944259647596	WITHOUT_CLASSIFICATION	5.574035240411299E-6	TEST
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.999992772718347	WITHOUT_CLASSIFICATION	7.227281653142664E-6	TEST
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999950138886364	WITHOUT_CLASSIFICATION	4.986111363467202E-6	TEST
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999675459296851	WITHOUT_CLASSIFICATION	3.245407031500073E-5	TEST
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999954328368394	WITHOUT_CLASSIFICATION	4.567163160584376E-6	TEST
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.999983568836795	WITHOUT_CLASSIFICATION	1.643116320504731E-5	TEST
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999724468057591	WITHOUT_CLASSIFICATION	2.7553194240869044E-5	TEST
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999879685001024	WITHOUT_CLASSIFICATION	1.2031499897532E-5	TEST
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999861680652092	WITHOUT_CLASSIFICATION	1.3831934790841724E-5	TEST
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999785751474843	WITHOUT_CLASSIFICATION	2.1424852515711454E-5	TEST
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999895143310311	WITHOUT_CLASSIFICATION	1.0485668968815197E-5	TEST
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999857922194682	WITHOUT_CLASSIFICATION	1.4207780531856523E-5	TEST
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999902176823326	WITHOUT_CLASSIFICATION	9.782317667301478E-6	TEST
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999926465275283	WITHOUT_CLASSIFICATION	7.353472471697786E-6	TEST
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999968471631963	WITHOUT_CLASSIFICATION	3.1528368037287654E-6	TEST
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999982670917448	WITHOUT_CLASSIFICATION	1.7329082551560196E-6	TEST
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9999748373973018	WITHOUT_CLASSIFICATION	2.516260269819239E-5	TEST
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999982102606226	WITHOUT_CLASSIFICATION	1.7897393773515244E-6	TEST
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999876199804986	WITHOUT_CLASSIFICATION	1.2380019501353332E-5	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999854338530108	WITHOUT_CLASSIFICATION	1.4566146989353192E-5	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999854338530108	WITHOUT_CLASSIFICATION	1.4566146989353192E-5	TEST
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999822313070778	WITHOUT_CLASSIFICATION	1.7768692922280464E-5	TEST
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999723078495717	WITHOUT_CLASSIFICATION	2.7692150428294785E-5	TEST
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999979085014311	WITHOUT_CLASSIFICATION	2.0914985689242977E-6	TEST
//consume the file name	WITHOUT_CLASSIFICATION	0.9999078518331844	WITHOUT_CLASSIFICATION	9.21481668154953E-5	TEST
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9997709320171068	WITHOUT_CLASSIFICATION	2.2906798289319094E-4	TEST
// try cwd first	WITHOUT_CLASSIFICATION	0.9999965912964953	WITHOUT_CLASSIFICATION	3.408703504684618E-6	TEST
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999676837892844	WITHOUT_CLASSIFICATION	3.2316210715607066E-5	TEST
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9994744960165246	WITHOUT_CLASSIFICATION	5.255039834753446E-4	TEST
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999873956634101	WITHOUT_CLASSIFICATION	1.2604336589904264E-5	TEST
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999873956634101	WITHOUT_CLASSIFICATION	1.2604336589904264E-5	TEST
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999873956634101	WITHOUT_CLASSIFICATION	1.2604336589904264E-5	TEST
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999438638101996	WITHOUT_CLASSIFICATION	5.6136189800394754E-5	TEST
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9987498047583492	WITHOUT_CLASSIFICATION	0.0012501952416508776	TEST
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999974242578088	WITHOUT_CLASSIFICATION	2.5757421911869626E-6	TEST
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.996561131556255	WITHOUT_CLASSIFICATION	0.0034388684437450883	TEST
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9999498361933162	WITHOUT_CLASSIFICATION	5.0163806683870636E-5	TEST
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999390101792291	WITHOUT_CLASSIFICATION	6.09898207708762E-5	TEST
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999955350757198	WITHOUT_CLASSIFICATION	4.464924280133536E-6	TEST
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999994672177842	WITHOUT_CLASSIFICATION	5.327822157830994E-7	TEST
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9987498047583492	WITHOUT_CLASSIFICATION	0.0012501952416508776	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999800453662867	WITHOUT_CLASSIFICATION	1.9954633713302312E-5	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999800453662867	WITHOUT_CLASSIFICATION	1.9954633713302312E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999038752677044	WITHOUT_CLASSIFICATION	9.61247322956481E-5	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.999990675243181	WITHOUT_CLASSIFICATION	9.324756819030335E-6	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999449223013351	WITHOUT_CLASSIFICATION	5.5077698664971995E-5	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999897226114225	WITHOUT_CLASSIFICATION	1.0277388577488486E-5	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999923399908496	WITHOUT_CLASSIFICATION	7.660009150301679E-6	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999952808450708	WITHOUT_CLASSIFICATION	4.719154929138303E-6	TEST
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.999776659623533	WITHOUT_CLASSIFICATION	2.2334037646694723E-4	TEST
// Profile	WITHOUT_CLASSIFICATION	0.9999360142256035	WITHOUT_CLASSIFICATION	6.39857743964335E-5	TEST
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9998951072797274	WITHOUT_CLASSIFICATION	1.0489272027263624E-4	TEST
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999985860234417	WITHOUT_CLASSIFICATION	1.413976558267254E-6	TEST
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999781386483905	WITHOUT_CLASSIFICATION	2.1861351609545363E-5	TEST
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999942654220135	WITHOUT_CLASSIFICATION	5.734577986357503E-6	TEST
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9997615272891562	WITHOUT_CLASSIFICATION	2.3847271084367027E-4	TEST
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9991909563236815	WITHOUT_CLASSIFICATION	8.09043676318528E-4	TEST
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9998645844317443	WITHOUT_CLASSIFICATION	1.3541556825567025E-4	TEST
// reset the state	WITHOUT_CLASSIFICATION	0.9999979113390067	WITHOUT_CLASSIFICATION	2.088660993219704E-6	TEST
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9992970260336498	WITHOUT_CLASSIFICATION	7.029739663501599E-4	TEST
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
//str is frozen	WITHOUT_CLASSIFICATION	0.9996990075952847	WITHOUT_CLASSIFICATION	3.00992404715347E-4	TEST
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999066323616044	WITHOUT_CLASSIFICATION	9.336763839556544E-5	TEST
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9991617634147779	WITHOUT_CLASSIFICATION	8.38236585222121E-4	TEST
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999962798722273	WITHOUT_CLASSIFICATION	3.720127772635378E-6	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999961582556226	WITHOUT_CLASSIFICATION	3.841744377386342E-6	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999769991510795	WITHOUT_CLASSIFICATION	2.3000848920494925E-5	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999981762560163	WITHOUT_CLASSIFICATION	1.8237439837429624E-6	TEST
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999919314850273	WITHOUT_CLASSIFICATION	8.068514972704887E-6	TEST
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999969398837782	WITHOUT_CLASSIFICATION	3.0601162216986637E-6	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.99924331581999	WITHOUT_CLASSIFICATION	7.566841800099915E-4	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.999992118759417	WITHOUT_CLASSIFICATION	7.881240583080592E-6	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.999992118759417	WITHOUT_CLASSIFICATION	7.881240583080592E-6	TEST
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999983752233512	WITHOUT_CLASSIFICATION	1.6247766487744705E-6	TEST
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999776012929363	WITHOUT_CLASSIFICATION	2.2398707063730073E-5	TEST
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999732122660197	WITHOUT_CLASSIFICATION	2.6787733980347478E-5	TEST
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999849928991112	WITHOUT_CLASSIFICATION	1.5007100888630909E-5	TEST
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999977089680535	WITHOUT_CLASSIFICATION	2.291031946516049E-6	TEST
// static initializing method	WITHOUT_CLASSIFICATION	0.999996453768297	WITHOUT_CLASSIFICATION	3.546231702889663E-6	TEST
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999642859765254	WITHOUT_CLASSIFICATION	3.5714023474597426E-5	TEST
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999986182800994	WITHOUT_CLASSIFICATION	1.381719900543149E-6	TEST
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999627153341888	WITHOUT_CLASSIFICATION	3.728466581130851E-5	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.999990010447961	WITHOUT_CLASSIFICATION	9.98955203897039E-6	TEST
// self // method name	WITHOUT_CLASSIFICATION	0.9999904677045841	WITHOUT_CLASSIFICATION	9.532295415957909E-6	TEST
// the default allocator	WITHOUT_CLASSIFICATION	0.9999966308859712	WITHOUT_CLASSIFICATION	3.3691140286754073E-6	TEST
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999931871521188	WITHOUT_CLASSIFICATION	6.812847881170616E-6	TEST
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999916499816807	WITHOUT_CLASSIFICATION	8.350018319345662E-6	TEST
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999916858579886	WITHOUT_CLASSIFICATION	8.314142011354733E-6	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999902188974962	WITHOUT_CLASSIFICATION	9.781102503884456E-6	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999796422960522	WITHOUT_CLASSIFICATION	2.0357703947778126E-5	TEST
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999952970626312	WITHOUT_CLASSIFICATION	4.7029373686966096E-6	TEST
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999991367267154	WITHOUT_CLASSIFICATION	8.632732846465721E-7	TEST
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999366636547707	WITHOUT_CLASSIFICATION	6.333634522925766E-5	TEST
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999535050187326	WITHOUT_CLASSIFICATION	4.649498126748201E-5	TEST
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999851992958544	WITHOUT_CLASSIFICATION	1.4800704145623994E-5	TEST
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999857220183849	WITHOUT_CLASSIFICATION	1.4277981615236383E-5	TEST
// a gotcha	WITHOUT_CLASSIFICATION	0.999997067195265	WITHOUT_CLASSIFICATION	2.9328047348918263E-6	TEST
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.999999203808041	WITHOUT_CLASSIFICATION	7.961919589077102E-7	TEST
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999853281932367	WITHOUT_CLASSIFICATION	1.4671806763256138E-5	TEST
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999931871521188	WITHOUT_CLASSIFICATION	6.812847881170616E-6	TEST
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999859723103266	WITHOUT_CLASSIFICATION	1.402768967348278E-5	TEST
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999916858579886	WITHOUT_CLASSIFICATION	8.314142011354733E-6	TEST
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999672971724667	WITHOUT_CLASSIFICATION	3.2702827533273304E-5	TEST
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999821364140674	WITHOUT_CLASSIFICATION	1.786358593266755E-5	TEST
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999944033179655	WITHOUT_CLASSIFICATION	5.596682034542688E-6	TEST
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999857220183849	WITHOUT_CLASSIFICATION	1.4277981615236383E-5	TEST
// provider is not available	WITHOUT_CLASSIFICATION	0.9998738665504558	WITHOUT_CLASSIFICATION	1.261334495440748E-4	TEST
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999251942468932	WITHOUT_CLASSIFICATION	7.48057531067827E-5	TEST
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999917915581027	WITHOUT_CLASSIFICATION	8.208441897291359E-6	TEST
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999666572843979	WITHOUT_CLASSIFICATION	3.334271560211045E-5	TEST
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999814589821433	WITHOUT_CLASSIFICATION	1.8541017856693948E-5	TEST
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999570040498454	WITHOUT_CLASSIFICATION	4.2995950154610126E-5	TEST
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999996119447904	WITHOUT_CLASSIFICATION	3.8805520966094895E-7	TEST
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999976787053515	WITHOUT_CLASSIFICATION	2.3212946485156785E-6	TEST
// JRubyService	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// while	WITHOUT_CLASSIFICATION	0.999940007210848	WITHOUT_CLASSIFICATION	5.9992789151919705E-5	TEST
/* \OOO */	WITHOUT_CLASSIFICATION	0.999867702029106	WITHOUT_CLASSIFICATION	1.3229797089397573E-4	TEST
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999994341603246	WITHOUT_CLASSIFICATION	5.658396755156276E-7	TEST
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999887284985877	WITHOUT_CLASSIFICATION	1.127150141226616E-5	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.999985501882394	WITHOUT_CLASSIFICATION	1.4498117606055044E-5	TEST
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999704110544793	WITHOUT_CLASSIFICATION	2.9588945520814213E-5	TEST
// silent ?	WITHOUT_CLASSIFICATION	0.9999958889760896	WITHOUT_CLASSIFICATION	4.1110239103552005E-6	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.999867702029106	WITHOUT_CLASSIFICATION	1.3229797089397573E-4	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999704918232368	WITHOUT_CLASSIFICATION	2.950817676316502E-5	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999884330985582	WITHOUT_CLASSIFICATION	1.1566901441793626E-5	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999884330985582	WITHOUT_CLASSIFICATION	1.1566901441793626E-5	TEST
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999663503316669	WITHOUT_CLASSIFICATION	3.3649668333076025E-5	TEST
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.999957819847644	WITHOUT_CLASSIFICATION	4.218015235600441E-5	TEST
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999884330985582	WITHOUT_CLASSIFICATION	1.1566901441793626E-5	TEST
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999891602531861	WITHOUT_CLASSIFICATION	1.0839746813912122E-5	TEST
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999884330985582	WITHOUT_CLASSIFICATION	1.1566901441793626E-5	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.999867702029106	WITHOUT_CLASSIFICATION	1.3229797089397573E-4	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999884330985582	WITHOUT_CLASSIFICATION	1.1566901441793626E-5	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999704918232368	WITHOUT_CLASSIFICATION	2.950817676316502E-5	TEST
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999325360969142	WITHOUT_CLASSIFICATION	6.746390308570966E-5	TEST
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999884330985582	WITHOUT_CLASSIFICATION	1.1566901441793626E-5	TEST
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999884330985582	WITHOUT_CLASSIFICATION	1.1566901441793626E-5	TEST
// inner switch	WITHOUT_CLASSIFICATION	0.9999968489255796	WITHOUT_CLASSIFICATION	3.1510744205118253E-6	TEST
// newInstance here	WITHOUT_CLASSIFICATION	0.9999865945849125	WITHOUT_CLASSIFICATION	1.3405415087546632E-5	TEST
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999857220183849	WITHOUT_CLASSIFICATION	1.4277981615236383E-5	TEST
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999857220183849	WITHOUT_CLASSIFICATION	1.4277981615236383E-5	TEST
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999656041429205	WITHOUT_CLASSIFICATION	3.439585707956861E-5	TEST
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// option_to_str	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999957541483893	WITHOUT_CLASSIFICATION	4.245851610716862E-6	TEST
// args should be before block	WITHOUT_CLASSIFICATION	0.9999685065674485	WITHOUT_CLASSIFICATION	3.149343255156061E-5	TEST
// args should be at end	WITHOUT_CLASSIFICATION	0.9999648888032161	WITHOUT_CLASSIFICATION	3.511119678385775E-5	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.99990363718665	WITHOUT_CLASSIFICATION	9.636281334992915E-5	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.99990363718665	WITHOUT_CLASSIFICATION	9.636281334992915E-5	TEST
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999884959561931	WITHOUT_CLASSIFICATION	1.1504043806861496E-5	TEST
// start a new populator	WITHOUT_CLASSIFICATION	0.9999883516960216	WITHOUT_CLASSIFICATION	1.1648303978313801E-5	TEST
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9998775244507738	WITHOUT_CLASSIFICATION	1.2247554922611772E-4	TEST
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9997156978703602	WITHOUT_CLASSIFICATION	2.843021296398424E-4	TEST
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.999992399385222	WITHOUT_CLASSIFICATION	7.6006147779897625E-6	TEST
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999505318729057	WITHOUT_CLASSIFICATION	4.946812709429301E-5	TEST
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999810141294971	WITHOUT_CLASSIFICATION	1.8985870502853437E-5	TEST
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999742443656322	WITHOUT_CLASSIFICATION	2.5755634367702756E-5	TEST
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999848378416663	WITHOUT_CLASSIFICATION	1.5162158333747395E-5	TEST
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999971181209686	WITHOUT_CLASSIFICATION	2.8818790313324665E-6	TEST
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999848240065917	WITHOUT_CLASSIFICATION	1.5175993408200826E-5	TEST
//                }	WITHOUT_CLASSIFICATION	0.9999936390798464	WITHOUT_CLASSIFICATION	6.360920153620171E-6	TEST
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999641170769481	WITHOUT_CLASSIFICATION	3.588292305194484E-5	TEST
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.999538342455165	WITHOUT_CLASSIFICATION	4.616575448349329E-4	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.999879180856254	WITHOUT_CLASSIFICATION	1.2081914374599404E-4	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999889598395798	WITHOUT_CLASSIFICATION	1.1040160420318486E-5	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999981245494198	WITHOUT_CLASSIFICATION	1.8754505801315086E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999895418382755	WITHOUT_CLASSIFICATION	1.0458161724576844E-5	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999895418382755	WITHOUT_CLASSIFICATION	1.0458161724576844E-5	TEST
// colon3	WITHOUT_CLASSIFICATION	0.999935982211484	WITHOUT_CLASSIFICATION	6.401778851591967E-5	TEST
// Colon3	WITHOUT_CLASSIFICATION	0.999935982211484	WITHOUT_CLASSIFICATION	6.401778851591967E-5	TEST
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999496522756017	WITHOUT_CLASSIFICATION	5.0347724398189556E-5	TEST
// For b.foo	WITHOUT_CLASSIFICATION	0.999991680304832	WITHOUT_CLASSIFICATION	8.319695167961996E-6	TEST
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999796890547199	WITHOUT_CLASSIFICATION	2.031094528011109E-5	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999895418382755	WITHOUT_CLASSIFICATION	1.0458161724576844E-5	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999895418382755	WITHOUT_CLASSIFICATION	1.0458161724576844E-5	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999858805110591	WITHOUT_CLASSIFICATION	1.4119488940929964E-5	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999858805110591	WITHOUT_CLASSIFICATION	1.4119488940929964E-5	TEST
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9998510635661119	WITHOUT_CLASSIFICATION	1.4893643388815507E-4	TEST
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.999991680304832	WITHOUT_CLASSIFICATION	8.319695167961996E-6	TEST
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999987115533242	WITHOUT_CLASSIFICATION	1.2884466757346031E-6	TEST
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999828656179898	WITHOUT_CLASSIFICATION	1.7134382010267E-5	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999917083171357	WITHOUT_CLASSIFICATION	8.291682864352863E-6	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999917083171357	WITHOUT_CLASSIFICATION	8.291682864352863E-6	TEST
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999961841760427	WITHOUT_CLASSIFICATION	3.815823957260008E-6	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999600041036342	WITHOUT_CLASSIFICATION	3.999589636590987E-5	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999742562099382	WITHOUT_CLASSIFICATION	2.57437900618062E-5	TEST
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9999420599311836	WITHOUT_CLASSIFICATION	5.7940068816421255E-5	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999858805110591	WITHOUT_CLASSIFICATION	1.4119488940929964E-5	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999896436917076	WITHOUT_CLASSIFICATION	1.0356308292510441E-5	TEST
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9993739401565543	WITHOUT_CLASSIFICATION	6.260598434457598E-4	TEST
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999932712415758	WITHOUT_CLASSIFICATION	6.728758424158786E-6	TEST
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999891988795565	WITHOUT_CLASSIFICATION	1.0801120443518552E-5	TEST
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999986926497461	WITHOUT_CLASSIFICATION	1.30735025394161E-6	TEST
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999133736849836	WITHOUT_CLASSIFICATION	8.662631501642766E-5	TEST
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999606957263254	WITHOUT_CLASSIFICATION	3.930427367463706E-5	TEST
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999972891049985	WITHOUT_CLASSIFICATION	2.7108950014871318E-6	TEST
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999954702652747	WITHOUT_CLASSIFICATION	4.529734725310412E-6	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999889598395798	WITHOUT_CLASSIFICATION	1.1040160420318486E-5	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999895418382755	WITHOUT_CLASSIFICATION	1.0458161724576844E-5	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999858805110591	WITHOUT_CLASSIFICATION	1.4119488940929964E-5	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999896436917076	WITHOUT_CLASSIFICATION	1.0356308292510441E-5	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999968333496749	WITHOUT_CLASSIFICATION	3.1666503249941332E-6	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999968333496749	WITHOUT_CLASSIFICATION	3.1666503249941332E-6	TEST
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999866786401765	WITHOUT_CLASSIFICATION	1.3321359823577215E-5	TEST
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999968573617486	WITHOUT_CLASSIFICATION	3.142638251365618E-6	TEST
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.999995397066207	WITHOUT_CLASSIFICATION	4.602933793080722E-6	TEST
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999992644797971	WITHOUT_CLASSIFICATION	7.355202028392308E-7	TEST
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.999855611918021	WITHOUT_CLASSIFICATION	1.443880819790521E-4	TEST
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999986326703705	WITHOUT_CLASSIFICATION	1.3673296295661151E-6	TEST
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999714479498933	WITHOUT_CLASSIFICATION	2.8552050106644793E-5	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9998903469802453	WITHOUT_CLASSIFICATION	1.096530197547028E-4	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999992851735406	WITHOUT_CLASSIFICATION	7.148264593827115E-7	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999787812253428	WITHOUT_CLASSIFICATION	2.1218774657276415E-5	TEST
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999778119710376	WITHOUT_CLASSIFICATION	2.2188028962447985E-5	TEST
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999993011188415	WITHOUT_CLASSIFICATION	6.988811584440537E-7	TEST
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999893558914899	WITHOUT_CLASSIFICATION	1.064410851018677E-5	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999981245494198	WITHOUT_CLASSIFICATION	1.8754505801315086E-6	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999858805110591	WITHOUT_CLASSIFICATION	1.4119488940929964E-5	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999600041036342	WITHOUT_CLASSIFICATION	3.999589636590987E-5	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999742562099382	WITHOUT_CLASSIFICATION	2.57437900618062E-5	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999742562099382	WITHOUT_CLASSIFICATION	2.57437900618062E-5	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999858805110591	WITHOUT_CLASSIFICATION	1.4119488940929964E-5	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999896436917076	WITHOUT_CLASSIFICATION	1.0356308292510441E-5	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999896436917076	WITHOUT_CLASSIFICATION	1.0356308292510441E-5	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999968333496749	WITHOUT_CLASSIFICATION	3.1666503249941332E-6	TEST
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999896638307171	WITHOUT_CLASSIFICATION	1.0336169282979316E-5	TEST
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9995195527187728	WITHOUT_CLASSIFICATION	4.8044728122716916E-4	TEST
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.999999249611	WITHOUT_CLASSIFICATION	7.503890001343318E-7	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999582088835666	WITHOUT_CLASSIFICATION	4.1791116433443426E-5	TEST
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999531899693966	WITHOUT_CLASSIFICATION	4.681003060332124E-5	TEST
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9987027395428201	WITHOUT_CLASSIFICATION	0.0012972604571800013	TEST
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999843359074648	WITHOUT_CLASSIFICATION	1.566409253522435E-5	TEST
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999973393479645	WITHOUT_CLASSIFICATION	2.66065203551572E-6	TEST
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999888835702303	WITHOUT_CLASSIFICATION	1.1116429769711565E-5	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999600041036342	WITHOUT_CLASSIFICATION	3.999589636590987E-5	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999742562099382	WITHOUT_CLASSIFICATION	2.57437900618062E-5	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999742562099382	WITHOUT_CLASSIFICATION	2.57437900618062E-5	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999858805110591	WITHOUT_CLASSIFICATION	1.4119488940929964E-5	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9998903469802453	WITHOUT_CLASSIFICATION	1.096530197547028E-4	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999787812253428	WITHOUT_CLASSIFICATION	2.1218774657276415E-5	TEST
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9990737119947197	WITHOUT_CLASSIFICATION	9.262880052803684E-4	TEST
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999983717904738	WITHOUT_CLASSIFICATION	1.6282095262926446E-6	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.999991680304832	WITHOUT_CLASSIFICATION	8.319695167961996E-6	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.999991680304832	WITHOUT_CLASSIFICATION	8.319695167961996E-6	TEST
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999857220183849	WITHOUT_CLASSIFICATION	1.4277981615236383E-5	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999840494107959	WITHOUT_CLASSIFICATION	1.5950589204189248E-5	TEST
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999603138998899	WITHOUT_CLASSIFICATION	3.968610011015615E-5	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999864592991533	WITHOUT_CLASSIFICATION	1.3540700846741492E-5	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.9999985432526375	WITHOUT_CLASSIFICATION	1.4567473625031963E-6	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.9999985432526375	WITHOUT_CLASSIFICATION	1.4567473625031963E-6	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999766754958052	WITHOUT_CLASSIFICATION	2.3324504194822756E-5	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999766754958052	WITHOUT_CLASSIFICATION	2.3324504194822756E-5	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999962683930225	WITHOUT_CLASSIFICATION	3.731606977507841E-6	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999962683930225	WITHOUT_CLASSIFICATION	3.731606977507841E-6	TEST
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999865250915734	WITHOUT_CLASSIFICATION	1.3474908426689939E-5	TEST
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999796194008063	WITHOUT_CLASSIFICATION	2.038059919372107E-5	TEST
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999103164084089	WITHOUT_CLASSIFICATION	8.968359159113138E-5	TEST
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999933152784033	WITHOUT_CLASSIFICATION	6.684721596765375E-6	TEST
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999995955838873	WITHOUT_CLASSIFICATION	4.0441611276097365E-7	TEST
// pragmas	WITHOUT_CLASSIFICATION	0.999935982211484	WITHOUT_CLASSIFICATION	6.401778851591967E-5	TEST
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999976749435453	WITHOUT_CLASSIFICATION	2.3250564545828453E-6	TEST
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999982375692141	WITHOUT_CLASSIFICATION	1.7624307859179987E-6	TEST
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9998814253061231	WITHOUT_CLASSIFICATION	1.1857469387684844E-4	TEST
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9998885290909886	WITHOUT_CLASSIFICATION	1.114709090114431E-4	TEST
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999980859636912	WITHOUT_CLASSIFICATION	1.9140363087860663E-6	TEST
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999943030307903	WITHOUT_CLASSIFICATION	5.696969209792879E-6	TEST
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9998832379487593	WITHOUT_CLASSIFICATION	1.1676205124056781E-4	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999889344618992	WITHOUT_CLASSIFICATION	1.1065538100823284E-5	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999889344618992	WITHOUT_CLASSIFICATION	1.1065538100823284E-5	TEST
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9998864704790867	WITHOUT_CLASSIFICATION	1.1352952091326946E-4	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999952808450708	WITHOUT_CLASSIFICATION	4.719154929138303E-6	TEST
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.999875607891903	WITHOUT_CLASSIFICATION	1.2439210809706328E-4	TEST
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999979878124912	WITHOUT_CLASSIFICATION	2.012187508769152E-6	TEST
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999950968445658	WITHOUT_CLASSIFICATION	4.903155434267324E-6	TEST
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999812514342631	WITHOUT_CLASSIFICATION	1.8748565736930502E-5	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999896227076842	WITHOUT_CLASSIFICATION	1.037729231579614E-5	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999933573080098	WITHOUT_CLASSIFICATION	6.642691990274401E-6	TEST
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999989356311264	WITHOUT_CLASSIFICATION	1.064368873617899E-6	TEST
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.999939630096925	WITHOUT_CLASSIFICATION	6.036990307488313E-5	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999923599265523	WITHOUT_CLASSIFICATION	7.640073447668338E-6	TEST
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9998337401956469	WITHOUT_CLASSIFICATION	1.662598043530344E-4	TEST
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999343371196537	WITHOUT_CLASSIFICATION	6.566288034630556E-5	TEST
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999751019848643	WITHOUT_CLASSIFICATION	2.4898015135691357E-5	TEST
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9998773011993228	WITHOUT_CLASSIFICATION	1.2269880067719698E-4	TEST
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999401477586934	WITHOUT_CLASSIFICATION	5.9852241306510576E-5	TEST
// can't do it	WITHOUT_CLASSIFICATION	0.9999894553588968	WITHOUT_CLASSIFICATION	1.0544641103075586E-5	TEST
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999830549735567	WITHOUT_CLASSIFICATION	1.6945026443292042E-5	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999948827444252	WITHOUT_CLASSIFICATION	5.117255574890272E-6	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999948827444252	WITHOUT_CLASSIFICATION	5.117255574890272E-6	TEST
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999699780924933	WITHOUT_CLASSIFICATION	3.0021907506655804E-5	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9996134510398554	WITHOUT_CLASSIFICATION	3.865489601444822E-4	TEST
//[]	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
//[]	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999606957263254	WITHOUT_CLASSIFICATION	3.930427367463706E-5	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9996134510398554	WITHOUT_CLASSIFICATION	3.865489601444822E-4	TEST
//[RubyClass]	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9996134510398554	WITHOUT_CLASSIFICATION	3.865489601444822E-4	TEST
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.999998024535634	WITHOUT_CLASSIFICATION	1.975464365957848E-6	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999962490017915	WITHOUT_CLASSIFICATION	3.750998208467386E-6	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999962490017915	WITHOUT_CLASSIFICATION	3.750998208467386E-6	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999975751994059	WITHOUT_CLASSIFICATION	2.4248005941778645E-6	TEST
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999962301516124	WITHOUT_CLASSIFICATION	3.769848387515106E-6	TEST
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999413676291241	WITHOUT_CLASSIFICATION	5.8632370875923746E-5	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9996134510398554	WITHOUT_CLASSIFICATION	3.865489601444822E-4	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9996134510398554	WITHOUT_CLASSIFICATION	3.865489601444822E-4	TEST
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9996134510398554	WITHOUT_CLASSIFICATION	3.865489601444822E-4	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9996134510398554	WITHOUT_CLASSIFICATION	3.865489601444822E-4	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999449982499989	WITHOUT_CLASSIFICATION	5.5001750001109406E-5	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999958691041905	WITHOUT_CLASSIFICATION	4.1308958095150994E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999958691041905	WITHOUT_CLASSIFICATION	4.1308958095150994E-6	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.999979621965991	WITHOUT_CLASSIFICATION	2.037803400896061E-5	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.999979621965991	WITHOUT_CLASSIFICATION	2.037803400896061E-5	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.999979621965991	WITHOUT_CLASSIFICATION	2.037803400896061E-5	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999958691041905	WITHOUT_CLASSIFICATION	4.1308958095150994E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999958691041905	WITHOUT_CLASSIFICATION	4.1308958095150994E-6	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999449982499989	WITHOUT_CLASSIFICATION	5.5001750001109406E-5	TEST
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999781192570381	WITHOUT_CLASSIFICATION	2.188074296196871E-5	TEST
// always false or nil	WITHOUT_CLASSIFICATION	0.9999869895287978	WITHOUT_CLASSIFICATION	1.3010471202122611E-5	TEST
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999802450315054	WITHOUT_CLASSIFICATION	1.9754968494513036E-5	TEST
// normal	WITHOUT_CLASSIFICATION	0.9999374951125077	WITHOUT_CLASSIFICATION	6.250488749218308E-5	TEST
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999993575070888	WITHOUT_CLASSIFICATION	6.424929112532843E-7	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999434007697678	WITHOUT_CLASSIFICATION	5.659923023217947E-5	TEST
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.99999549555928	WITHOUT_CLASSIFICATION	4.5044407199186975E-6	TEST
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999481535100225	WITHOUT_CLASSIFICATION	5.184648997746781E-5	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999923599265523	WITHOUT_CLASSIFICATION	7.640073447668338E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999958691041905	WITHOUT_CLASSIFICATION	4.1308958095150994E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999958691041905	WITHOUT_CLASSIFICATION	4.1308958095150994E-6	TEST
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999843941641721	WITHOUT_CLASSIFICATION	1.560583582797055E-5	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999948356818592	WITHOUT_CLASSIFICATION	5.1643181408451635E-6	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999963786329185	WITHOUT_CLASSIFICATION	3.621367081480702E-6	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999933056917454	WITHOUT_CLASSIFICATION	6.694308254619069E-6	TEST
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999916396984944	WITHOUT_CLASSIFICATION	8.360301505632982E-6	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.999998140663934	WITHOUT_CLASSIFICATION	1.8593360660930083E-6	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999921656698522	WITHOUT_CLASSIFICATION	7.834330147835182E-6	TEST
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999995353059803	WITHOUT_CLASSIFICATION	4.64694019737173E-7	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999874199970549	WITHOUT_CLASSIFICATION	1.2580002945079368E-5	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999948744068758	WITHOUT_CLASSIFICATION	5.125593124123068E-6	TEST
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9998507155904753	WITHOUT_CLASSIFICATION	1.4928440952466192E-4	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.9999582956548957	WITHOUT_CLASSIFICATION	4.170434510440406E-5	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999635316193669	WITHOUT_CLASSIFICATION	3.6468380632979255E-5	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.999989458344806	WITHOUT_CLASSIFICATION	1.0541655193946589E-5	TEST
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999996716030641	WITHOUT_CLASSIFICATION	3.2839693579869214E-7	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.999935982211484	WITHOUT_CLASSIFICATION	6.401778851591967E-5	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.999935982211484	WITHOUT_CLASSIFICATION	6.401778851591967E-5	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.999935982211484	WITHOUT_CLASSIFICATION	6.401778851591967E-5	TEST
// compile into array	WITHOUT_CLASSIFICATION	0.9999909667912853	WITHOUT_CLASSIFICATION	9.033208714686787E-6	TEST
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999987407328573	WITHOUT_CLASSIFICATION	1.2592671426694952E-6	TEST
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999968160138208	WITHOUT_CLASSIFICATION	3.183986179209136E-6	TEST
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9998881171707478	WITHOUT_CLASSIFICATION	1.1188282925218971E-4	TEST
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.999992385643224	WITHOUT_CLASSIFICATION	7.614356775933203E-6	TEST
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999951289781788	WITHOUT_CLASSIFICATION	4.871021821308408E-6	TEST
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999995796608027	WITHOUT_CLASSIFICATION	4.203391972953649E-7	TEST
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999216650615876	WITHOUT_CLASSIFICATION	7.833493841245823E-5	TEST
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999796028164705	WITHOUT_CLASSIFICATION	2.0397183529592522E-5	TEST
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999980714994512	WITHOUT_CLASSIFICATION	1.9285005488246168E-6	TEST
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999962599148662	WITHOUT_CLASSIFICATION	3.7400851338372664E-6	TEST
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999416506282145	WITHOUT_CLASSIFICATION	5.834937178538248E-5	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999975751994059	WITHOUT_CLASSIFICATION	2.4248005941778645E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999958691041905	WITHOUT_CLASSIFICATION	4.1308958095150994E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999958691041905	WITHOUT_CLASSIFICATION	4.1308958095150994E-6	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999449982499989	WITHOUT_CLASSIFICATION	5.5001750001109406E-5	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999434007697678	WITHOUT_CLASSIFICATION	5.659923023217947E-5	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999948356818592	WITHOUT_CLASSIFICATION	5.1643181408451635E-6	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999933056917454	WITHOUT_CLASSIFICATION	6.694308254619069E-6	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.999998140663934	WITHOUT_CLASSIFICATION	1.8593360660930083E-6	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999963786329185	WITHOUT_CLASSIFICATION	3.621367081480702E-6	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999921656698522	WITHOUT_CLASSIFICATION	7.834330147835182E-6	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999948744068758	WITHOUT_CLASSIFICATION	5.125593124123068E-6	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999874199970549	WITHOUT_CLASSIFICATION	1.2580002945079368E-5	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.9999582956548957	WITHOUT_CLASSIFICATION	4.170434510440406E-5	TEST
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999975707871717	WITHOUT_CLASSIFICATION	2.429212828368523E-6	TEST
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999978435835805	WITHOUT_CLASSIFICATION	2.1564164195787143E-6	TEST
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999955672381174	WITHOUT_CLASSIFICATION	4.432761882545627E-6	TEST
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999917847820945	WITHOUT_CLASSIFICATION	8.215217905484596E-6	TEST
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999782054754317	WITHOUT_CLASSIFICATION	2.1794524568317578E-5	TEST
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999931552572815	WITHOUT_CLASSIFICATION	6.844742718451853E-6	TEST
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999964901653701	WITHOUT_CLASSIFICATION	3.5098346299490293E-6	TEST
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999583443193714	WITHOUT_CLASSIFICATION	4.1655680628683066E-5	TEST
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999942681151668	WITHOUT_CLASSIFICATION	5.73188483322602E-6	TEST
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999995625664977	WITHOUT_CLASSIFICATION	4.3743350229280756E-7	TEST
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999908593826463	WITHOUT_CLASSIFICATION	9.140617353607284E-6	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999928442053753	WITHOUT_CLASSIFICATION	7.15579462466234E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999703824115476	WITHOUT_CLASSIFICATION	2.961758845238613E-5	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999984702382299	WITHOUT_CLASSIFICATION	1.529761770050803E-6	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999931240353207	WITHOUT_CLASSIFICATION	6.875964679273987E-6	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.999993949166059	WITHOUT_CLASSIFICATION	6.0508339410024385E-6	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999780023080043	WITHOUT_CLASSIFICATION	2.199769199568459E-5	TEST
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999950283794654	WITHOUT_CLASSIFICATION	4.971620534504997E-6	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999974988144912	WITHOUT_CLASSIFICATION	2.5011855086833856E-6	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999973405111711	WITHOUT_CLASSIFICATION	2.6594888289414236E-6	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999978091184449	WITHOUT_CLASSIFICATION	2.1908815550813107E-6	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999991884605258	WITHOUT_CLASSIFICATION	8.11539474086177E-7	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999991884605258	WITHOUT_CLASSIFICATION	8.11539474086177E-7	TEST
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9997273803438188	WITHOUT_CLASSIFICATION	2.726196561812004E-4	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999954038750009	WITHOUT_CLASSIFICATION	4.5961249991131565E-6	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
/*arg2*/	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999954038750009	WITHOUT_CLASSIFICATION	4.5961249991131565E-6	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999845434289021	WITHOUT_CLASSIFICATION	1.5456571097904972E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999979484918963	WITHOUT_CLASSIFICATION	2.0515081038482396E-6	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999979484918963	WITHOUT_CLASSIFICATION	2.0515081038482396E-6	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999934475585734	WITHOUT_CLASSIFICATION	6.5524414265017724E-6	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999934475585734	WITHOUT_CLASSIFICATION	6.5524414265017724E-6	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9999365884749364	WITHOUT_CLASSIFICATION	6.341152506366538E-5	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9999365884749364	WITHOUT_CLASSIFICATION	6.341152506366538E-5	TEST
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999714291292224	WITHOUT_CLASSIFICATION	2.8570870777589143E-5	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999496960204869	WITHOUT_CLASSIFICATION	5.030397951323165E-5	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999496960204869	WITHOUT_CLASSIFICATION	5.030397951323165E-5	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999886179812236	WITHOUT_CLASSIFICATION	1.1382018776416252E-5	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999886179812236	WITHOUT_CLASSIFICATION	1.1382018776416252E-5	TEST
// eval value for assignment	WITHOUT_CLASSIFICATION	0.999982850893265	WITHOUT_CLASSIFICATION	1.7149106735087E-5	TEST
// call site	WITHOUT_CLASSIFICATION	0.9999969597122934	WITHOUT_CLASSIFICATION	3.040287706661827E-6	TEST
// call site	WITHOUT_CLASSIFICATION	0.9999969597122934	WITHOUT_CLASSIFICATION	3.040287706661827E-6	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999964516614511	WITHOUT_CLASSIFICATION	3.548338548968951E-6	TEST
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.999948594927344	WITHOUT_CLASSIFICATION	5.140507265599745E-5	TEST
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999924353435092	WITHOUT_CLASSIFICATION	7.564656490711471E-6	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999964516614511	WITHOUT_CLASSIFICATION	3.548338548968951E-6	TEST
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999673581849433	WITHOUT_CLASSIFICATION	3.264181505674345E-5	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999934784911574	WITHOUT_CLASSIFICATION	6.521508842668352E-6	TEST
// args	WITHOUT_CLASSIFICATION	0.9999368938680832	WITHOUT_CLASSIFICATION	6.310613191679569E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999377769259606	WITHOUT_CLASSIFICATION	6.222307403927364E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999377769259606	WITHOUT_CLASSIFICATION	6.222307403927364E-5	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999978905136955	WITHOUT_CLASSIFICATION	2.1094863045046184E-6	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999739072720227	WITHOUT_CLASSIFICATION	2.609272797728039E-5	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.9999739072720227	WITHOUT_CLASSIFICATION	2.6092727977280366E-5	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.9999327777167445	WITHOUT_CLASSIFICATION	6.722228325552625E-5	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999673559214823	WITHOUT_CLASSIFICATION	3.264407851770205E-5	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999882150752221	WITHOUT_CLASSIFICATION	1.1784924777886836E-5	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999882150752221	WITHOUT_CLASSIFICATION	1.1784924777886836E-5	TEST
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.999996623513485	WITHOUT_CLASSIFICATION	3.376486515184238E-6	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// args	WITHOUT_CLASSIFICATION	0.9999368938680832	WITHOUT_CLASSIFICATION	6.310613191679569E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999377769259606	WITHOUT_CLASSIFICATION	6.222307403927364E-5	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999978905136955	WITHOUT_CLASSIFICATION	2.1094863045046184E-6	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999739072720227	WITHOUT_CLASSIFICATION	2.609272797728039E-5	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.9999739072720227	WITHOUT_CLASSIFICATION	2.6092727977280366E-5	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.9999327777167445	WITHOUT_CLASSIFICATION	6.722228325552625E-5	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999853124137359	WITHOUT_CLASSIFICATION	1.4687586264043725E-5	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999982046473125	WITHOUT_CLASSIFICATION	1.7953526876099584E-6	TEST
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999919950215845	WITHOUT_CLASSIFICATION	8.00497841548192E-6	TEST
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999904986932208	WITHOUT_CLASSIFICATION	9.501306779314582E-6	TEST
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999705578873329	WITHOUT_CLASSIFICATION	2.9442112667064528E-5	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999597070443071	WITHOUT_CLASSIFICATION	4.029295569291483E-5	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999610882923562	WITHOUT_CLASSIFICATION	3.891170764383722E-5	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999610882923562	WITHOUT_CLASSIFICATION	3.891170764383722E-5	TEST
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.999987981362279	WITHOUT_CLASSIFICATION	1.2018637720974151E-5	TEST
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999779896762346	WITHOUT_CLASSIFICATION	2.201032376544769E-5	TEST
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999779872003349	WITHOUT_CLASSIFICATION	2.2012799665142957E-5	TEST
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999893837770382	WITHOUT_CLASSIFICATION	1.0616222961909324E-5	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999780208927295	WITHOUT_CLASSIFICATION	2.1979107270613993E-5	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999780208927295	WITHOUT_CLASSIFICATION	2.1979107270613993E-5	TEST
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999738578468659	WITHOUT_CLASSIFICATION	2.6142153134138682E-5	TEST
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999738623604261	WITHOUT_CLASSIFICATION	2.613763957394639E-5	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999786043008321	WITHOUT_CLASSIFICATION	2.139569916796885E-5	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999786043008321	WITHOUT_CLASSIFICATION	2.139569916796885E-5	TEST
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999779872003349	WITHOUT_CLASSIFICATION	2.2012799665142957E-5	TEST
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999943804432843	WITHOUT_CLASSIFICATION	5.619556715713348E-6	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999673559214823	WITHOUT_CLASSIFICATION	3.264407851770205E-5	TEST
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999969099171436	WITHOUT_CLASSIFICATION	3.090082856374989E-6	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.999942741176573	WITHOUT_CLASSIFICATION	5.72588234270284E-5	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999843064334205	WITHOUT_CLASSIFICATION	1.5693566579503803E-5	TEST
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999938597736227	WITHOUT_CLASSIFICATION	6.140226377442179E-6	TEST
// load Object under value	WITHOUT_CLASSIFICATION	0.9999685299530163	WITHOUT_CLASSIFICATION	3.1470046983615974E-5	TEST
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999595820539978	WITHOUT_CLASSIFICATION	4.041794600228806E-5	TEST
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999824165201291	WITHOUT_CLASSIFICATION	1.75834798710094E-5	TEST
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999908244182588	WITHOUT_CLASSIFICATION	9.175581741186364E-6	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999973266003928	WITHOUT_CLASSIFICATION	2.6733996072920845E-6	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999973266003928	WITHOUT_CLASSIFICATION	2.6733996072920845E-6	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999686410245474	WITHOUT_CLASSIFICATION	3.13589754525767E-5	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999686410245474	WITHOUT_CLASSIFICATION	3.13589754525767E-5	TEST
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999946360457675	WITHOUT_CLASSIFICATION	5.363954232536299E-6	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999970376606493	WITHOUT_CLASSIFICATION	2.962339350705548E-6	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999970376606493	WITHOUT_CLASSIFICATION	2.962339350705548E-6	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999970376606493	WITHOUT_CLASSIFICATION	2.962339350705548E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999984642294639	WITHOUT_CLASSIFICATION	1.5357705360914624E-5	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999868756290774	WITHOUT_CLASSIFICATION	1.3124370922637445E-5	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999868756290774	WITHOUT_CLASSIFICATION	1.3124370922637445E-5	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999855981416755	WITHOUT_CLASSIFICATION	1.4401858324321455E-5	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.9999970176814035	WITHOUT_CLASSIFICATION	2.9823185965423183E-6	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999808332291303	WITHOUT_CLASSIFICATION	1.9166770869688384E-5	TEST
// skip catch block	WITHOUT_CLASSIFICATION	0.9999954373602356	WITHOUT_CLASSIFICATION	4.562639764417295E-6	TEST
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999658905757157	WITHOUT_CLASSIFICATION	3.410942428424706E-5	TEST
// next jump	WITHOUT_CLASSIFICATION	0.999995291411632	WITHOUT_CLASSIFICATION	4.708588367930781E-6	TEST
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9993067040183459	WITHOUT_CLASSIFICATION	6.932959816541683E-4	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999703824115476	WITHOUT_CLASSIFICATION	2.961758845238613E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999703824115476	WITHOUT_CLASSIFICATION	2.961758845238613E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999984642294639	WITHOUT_CLASSIFICATION	1.5357705360914624E-5	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999855981416755	WITHOUT_CLASSIFICATION	1.4401858324321455E-5	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.999992671918093	WITHOUT_CLASSIFICATION	7.328081907005148E-6	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.9999970176814035	WITHOUT_CLASSIFICATION	2.9823185965423183E-6	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999808332291303	WITHOUT_CLASSIFICATION	1.9166770869688384E-5	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999885297613738	WITHOUT_CLASSIFICATION	1.147023862612079E-5	TEST
// break jump	WITHOUT_CLASSIFICATION	0.9999948236998387	WITHOUT_CLASSIFICATION	5.176300161218674E-6	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998443715157842	WITHOUT_CLASSIFICATION	1.5562848421575448E-4	TEST
//[reg]	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999225864374881	WITHOUT_CLASSIFICATION	7.741356251190809E-5	TEST
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999985499540801	WITHOUT_CLASSIFICATION	1.4500459199659853E-6	TEST
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999966875237274	WITHOUT_CLASSIFICATION	3.3124762726146164E-6	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999885297613738	WITHOUT_CLASSIFICATION	1.147023862612079E-5	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999723910201797	WITHOUT_CLASSIFICATION	2.760897982038558E-5	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999723910201797	WITHOUT_CLASSIFICATION	2.760897982038558E-5	TEST
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999804312814009	WITHOUT_CLASSIFICATION	1.9568718599074552E-5	TEST
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999950868591576	WITHOUT_CLASSIFICATION	4.913140842365006E-6	TEST
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999956174301337	WITHOUT_CLASSIFICATION	4.382569866313734E-6	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999741710235301	WITHOUT_CLASSIFICATION	2.582897646987714E-5	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999757178446719	WITHOUT_CLASSIFICATION	2.428215532815563E-5	TEST
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999944848823941	WITHOUT_CLASSIFICATION	5.515117605975838E-6	TEST
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999912367977916	WITHOUT_CLASSIFICATION	8.763202208389832E-6	TEST
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999683895498509	WITHOUT_CLASSIFICATION	3.161045014899628E-5	TEST
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999987950526402	WITHOUT_CLASSIFICATION	1.20494735973446E-6	TEST
// false // zero	WITHOUT_CLASSIFICATION	0.9999960133662982	WITHOUT_CLASSIFICATION	3.98663370186226E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999799091418161	WITHOUT_CLASSIFICATION	2.009085818386994E-5	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999741710235301	WITHOUT_CLASSIFICATION	2.582897646987714E-5	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999757178446719	WITHOUT_CLASSIFICATION	2.428215532815563E-5	TEST
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999949723305032	WITHOUT_CLASSIFICATION	5.027669496830611E-6	TEST
// push false	WITHOUT_CLASSIFICATION	0.9999947804007548	WITHOUT_CLASSIFICATION	5.219599245191032E-6	TEST
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9996134510398554	WITHOUT_CLASSIFICATION	3.865489601444822E-4	TEST
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9998308961875316	WITHOUT_CLASSIFICATION	1.6910381246828193E-4	TEST
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999577235544632	WITHOUT_CLASSIFICATION	4.227644553675389E-5	TEST
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9996134510398554	WITHOUT_CLASSIFICATION	3.865489601444822E-4	TEST
//[C]	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
// push true	WITHOUT_CLASSIFICATION	0.9999952504618352	WITHOUT_CLASSIFICATION	4.749538164740782E-6	TEST
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999817845399916	WITHOUT_CLASSIFICATION	1.8215460008311066E-5	TEST
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9998308961875316	WITHOUT_CLASSIFICATION	1.6910381246828193E-4	TEST
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9996134510398554	WITHOUT_CLASSIFICATION	3.865489601444822E-4	TEST
//[boolean]	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999921468380528	WITHOUT_CLASSIFICATION	7.853161947198643E-6	TEST
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999703849924912	WITHOUT_CLASSIFICATION	2.9615007508755218E-5	TEST
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999149276737124	WITHOUT_CLASSIFICATION	8.507232628764282E-5	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999993705577497	WITHOUT_CLASSIFICATION	6.294422503519613E-7	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999944055854948	WITHOUT_CLASSIFICATION	5.594414505314325E-6	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999950479209185	WITHOUT_CLASSIFICATION	4.952079081471685E-6	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999927268703539	WITHOUT_CLASSIFICATION	7.273129646025159E-6	TEST
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999772820310557	WITHOUT_CLASSIFICATION	2.2717968944308875E-5	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999944055854948	WITHOUT_CLASSIFICATION	5.594414505314325E-6	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999950479209185	WITHOUT_CLASSIFICATION	4.952079081471685E-6	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999927268703539	WITHOUT_CLASSIFICATION	7.273129646025159E-6	TEST
// finally with exception	WITHOUT_CLASSIFICATION	0.9999364102553636	WITHOUT_CLASSIFICATION	6.358974463643735E-5	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999991514373116	WITHOUT_CLASSIFICATION	8.48562688498159E-7	TEST
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.999986884648069	WITHOUT_CLASSIFICATION	1.3115351931057619E-5	TEST
// original exception is on stack	WITHOUT_CLASSIFICATION	0.999738790811312	WITHOUT_CLASSIFICATION	2.6120918868800173E-4	TEST
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999491845985268	WITHOUT_CLASSIFICATION	5.0815401473205924E-5	TEST
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999797974198477	WITHOUT_CLASSIFICATION	2.020258015238636E-5	TEST
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999991207996699	WITHOUT_CLASSIFICATION	8.792003300040781E-7	TEST
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999988356097833	WITHOUT_CLASSIFICATION	1.1643902166463993E-6	TEST
// script object	WITHOUT_CLASSIFICATION	0.9999922886849574	WITHOUT_CLASSIFICATION	7.711315042643235E-6	TEST
// arities	WITHOUT_CLASSIFICATION	0.999935982211484	WITHOUT_CLASSIFICATION	6.401778851591967E-5	TEST
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9879171831311077	WITHOUT_CLASSIFICATION	0.012082816868892473	TEST
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999724118603026	WITHOUT_CLASSIFICATION	2.758813969731807E-5	TEST
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999858384011947	WITHOUT_CLASSIFICATION	1.4161598805274765E-5	TEST
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.999997646198145	WITHOUT_CLASSIFICATION	2.3538018550431596E-6	TEST
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9945859086877754	WITHOUT_CLASSIFICATION	0.005414091312224575	TEST
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999796246699592	WITHOUT_CLASSIFICATION	2.0375330040773032E-5	TEST
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999866707724058	WITHOUT_CLASSIFICATION	1.3329227594245466E-5	TEST
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9998919868730687	WITHOUT_CLASSIFICATION	1.0801312693120064E-4	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999923860487051	WITHOUT_CLASSIFICATION	7.613951294814183E-6	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999921917480928	WITHOUT_CLASSIFICATION	7.808251907142295E-6	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999962829665874	WITHOUT_CLASSIFICATION	3.7170334125126093E-6	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999953084102664	WITHOUT_CLASSIFICATION	4.691589733516208E-6	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999953084102664	WITHOUT_CLASSIFICATION	4.691589733516208E-6	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999622572407825	WITHOUT_CLASSIFICATION	3.774275921752293E-5	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999622572407825	WITHOUT_CLASSIFICATION	3.774275921752293E-5	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999873491628822	WITHOUT_CLASSIFICATION	1.2650837117821177E-5	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999873491628822	WITHOUT_CLASSIFICATION	1.2650837117821177E-5	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.999953340005671	WITHOUT_CLASSIFICATION	4.665999432890736E-5	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999989211035746	WITHOUT_CLASSIFICATION	1.0788964254765983E-6	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999946308514435	WITHOUT_CLASSIFICATION	5.3691485564787485E-6	TEST
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.999996879002565	WITHOUT_CLASSIFICATION	3.120997435171755E-6	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999969268688819	WITHOUT_CLASSIFICATION	3.073131118215484E-6	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999899440416475	WITHOUT_CLASSIFICATION	1.0055958352437172E-5	TEST
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999852343584684	WITHOUT_CLASSIFICATION	1.4765641531666816E-5	TEST
// then optional args	WITHOUT_CLASSIFICATION	0.9999885581167585	WITHOUT_CLASSIFICATION	1.1441883241461443E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999703824115476	WITHOUT_CLASSIFICATION	2.961758845238613E-5	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.999953340005671	WITHOUT_CLASSIFICATION	4.665999432890736E-5	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999989211035746	WITHOUT_CLASSIFICATION	1.0788964254765983E-6	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999946308514435	WITHOUT_CLASSIFICATION	5.3691485564787485E-6	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999969268688819	WITHOUT_CLASSIFICATION	3.073131118215484E-6	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999899440416475	WITHOUT_CLASSIFICATION	1.0055958352437172E-5	TEST
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999786134840644	WITHOUT_CLASSIFICATION	2.1386515935659018E-5	TEST
// finally, post args	WITHOUT_CLASSIFICATION	0.9999862647667324	WITHOUT_CLASSIFICATION	1.3735233267742014E-5	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9995468058405199	WITHOUT_CLASSIFICATION	4.531941594801222E-4	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9995468058405199	WITHOUT_CLASSIFICATION	4.531941594801222E-4	TEST
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999912453376554	WITHOUT_CLASSIFICATION	8.754662344601132E-6	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9998778412275158	WITHOUT_CLASSIFICATION	1.2215877248422064E-4	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999981610913021	WITHOUT_CLASSIFICATION	1.838908697862317E-6	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999837291118315	WITHOUT_CLASSIFICATION	1.6270888168515888E-5	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999837291118315	WITHOUT_CLASSIFICATION	1.6270888168515888E-5	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999712053739407	WITHOUT_CLASSIFICATION	2.8794626059210176E-5	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.999956287927098	WITHOUT_CLASSIFICATION	4.3712072901954795E-5	TEST
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999972454119882	WITHOUT_CLASSIFICATION	2.7545880118815628E-6	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999902834246409	WITHOUT_CLASSIFICATION	9.716575359038628E-6	TEST
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999991175995149	WITHOUT_CLASSIFICATION	8.824004850333271E-7	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999984702382299	WITHOUT_CLASSIFICATION	1.529761770050803E-6	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999931240353207	WITHOUT_CLASSIFICATION	6.875964679273987E-6	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.999993949166059	WITHOUT_CLASSIFICATION	6.0508339410024385E-6	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999780023080043	WITHOUT_CLASSIFICATION	2.199769199568459E-5	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999973405111711	WITHOUT_CLASSIFICATION	2.6594888289414236E-6	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999978091184449	WITHOUT_CLASSIFICATION	2.1908815550813107E-6	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999712053739407	WITHOUT_CLASSIFICATION	2.8794626059210176E-5	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.999956287927098	WITHOUT_CLASSIFICATION	4.3712072901954795E-5	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999902834246409	WITHOUT_CLASSIFICATION	9.716575359038628E-6	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999980104853624	WITHOUT_CLASSIFICATION	1.98951463756936E-6	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999981610913021	WITHOUT_CLASSIFICATION	1.838908697862317E-6	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999981610913021	WITHOUT_CLASSIFICATION	1.838908697862317E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999799091418161	WITHOUT_CLASSIFICATION	2.009085818386994E-5	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999799091418161	WITHOUT_CLASSIFICATION	2.009085818386994E-5	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.999997526205951	WITHOUT_CLASSIFICATION	2.4737940490380553E-6	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.999997526205951	WITHOUT_CLASSIFICATION	2.4737940490380553E-6	TEST
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999989234747151	WITHOUT_CLASSIFICATION	1.076525284868777E-6	TEST
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999957018457655	WITHOUT_CLASSIFICATION	4.298154234562065E-6	TEST
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.999963063522806	WITHOUT_CLASSIFICATION	3.6936477194044066E-5	TEST
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999273512108197	WITHOUT_CLASSIFICATION	7.264878918036174E-5	TEST
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999978246755862	WITHOUT_CLASSIFICATION	2.1753244138273023E-6	TEST
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999948278527273	WITHOUT_CLASSIFICATION	5.17214727270295E-6	TEST
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999949310398283	WITHOUT_CLASSIFICATION	5.06896017180513E-6	TEST
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999913885699292	WITHOUT_CLASSIFICATION	8.611430070810156E-6	TEST
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999841620324603	WITHOUT_CLASSIFICATION	1.5837967539633533E-5	TEST
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999928442053753	WITHOUT_CLASSIFICATION	7.15579462466234E-6	TEST
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999861465597634	WITHOUT_CLASSIFICATION	1.385344023666035E-5	TEST
// verify the class	WITHOUT_CLASSIFICATION	0.9999986569624855	WITHOUT_CLASSIFICATION	1.3430375146113873E-6	TEST
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999941134642347	WITHOUT_CLASSIFICATION	5.886535765248238E-6	TEST
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999943207912219	WITHOUT_CLASSIFICATION	5.679208778142419E-6	TEST
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999930647270313	WITHOUT_CLASSIFICATION	6.935272968665723E-6	TEST
// thread context	WITHOUT_CLASSIFICATION	0.999995738388684	WITHOUT_CLASSIFICATION	4.261611316025557E-6	TEST
// line number	WITHOUT_CLASSIFICATION	0.9999959753292859	WITHOUT_CLASSIFICATION	4.024670714142693E-6	TEST
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999586835555782	WITHOUT_CLASSIFICATION	4.131644442192983E-5	TEST
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999147627397141	WITHOUT_CLASSIFICATION	8.523726028593255E-5	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999931240353207	WITHOUT_CLASSIFICATION	6.875964679273987E-6	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999780023080043	WITHOUT_CLASSIFICATION	2.199769199568459E-5	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999991884605258	WITHOUT_CLASSIFICATION	8.11539474086177E-7	TEST
// block	WITHOUT_CLASSIFICATION	0.9999377769259606	WITHOUT_CLASSIFICATION	6.222307403927364E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999377769259606	WITHOUT_CLASSIFICATION	6.222307403927364E-5	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999980104853624	WITHOUT_CLASSIFICATION	1.98951463756936E-6	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999981610913021	WITHOUT_CLASSIFICATION	1.838908697862317E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999799091418161	WITHOUT_CLASSIFICATION	2.009085818386994E-5	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.999997526205951	WITHOUT_CLASSIFICATION	2.4737940490380553E-6	TEST
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999680679597928	WITHOUT_CLASSIFICATION	3.1932040207240435E-5	TEST
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9996856651025658	WITHOUT_CLASSIFICATION	3.143348974341446E-4	TEST
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999917439607111	WITHOUT_CLASSIFICATION	8.256039288984016E-6	TEST
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9998121266815079	WITHOUT_CLASSIFICATION	1.8787331849225305E-4	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999854905825101	WITHOUT_CLASSIFICATION	1.4509417489794947E-5	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999854905825101	WITHOUT_CLASSIFICATION	1.4509417489794947E-5	TEST
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999917176768437	WITHOUT_CLASSIFICATION	8.282323156254141E-6	TEST
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.999991464038969	WITHOUT_CLASSIFICATION	8.535961031066749E-6	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999874450385048	WITHOUT_CLASSIFICATION	1.2554961495222098E-5	TEST
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999895645708157	WITHOUT_CLASSIFICATION	1.04354291842166E-5	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999828108367415	WITHOUT_CLASSIFICATION	1.7189163258556574E-5	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999828108367415	WITHOUT_CLASSIFICATION	1.7189163258556574E-5	TEST
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.999979455773672	WITHOUT_CLASSIFICATION	2.0544226328082474E-5	TEST
// normal closure	WITHOUT_CLASSIFICATION	0.9999945374400472	WITHOUT_CLASSIFICATION	5.462559952816672E-6	TEST
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999859529891957	WITHOUT_CLASSIFICATION	1.4047010804261953E-5	TEST
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9996853591134247	WITHOUT_CLASSIFICATION	3.146408865752824E-4	TEST
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999810567136455	WITHOUT_CLASSIFICATION	1.8943286354479145E-5	TEST
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999934447832722	WITHOUT_CLASSIFICATION	6.555216727698974E-6	TEST
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999860952995824	WITHOUT_CLASSIFICATION	1.3904700417584618E-5	TEST
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999927540934884	WITHOUT_CLASSIFICATION	7.245906511693745E-6	TEST
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9999916358508842	WITHOUT_CLASSIFICATION	8.36414911574449E-6	TEST
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9876475394266949	WITHOUT_CLASSIFICATION	0.012352460573305033	TEST
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999136587330771	WITHOUT_CLASSIFICATION	8.634126692282837E-5	TEST
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999925021204384	WITHOUT_CLASSIFICATION	7.497879561607816E-6	TEST
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999999396405285	WITHOUT_CLASSIFICATION	6.035947155183423E-8	TEST
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999975192263643	WITHOUT_CLASSIFICATION	2.480773635729665E-6	TEST
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9998334357496296	WITHOUT_CLASSIFICATION	1.6656425037053286E-4	TEST
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999941156081966	WITHOUT_CLASSIFICATION	5.884391803355044E-6	TEST
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999946366843431	WITHOUT_CLASSIFICATION	5.363315656978147E-6	TEST
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999921072317538	WITHOUT_CLASSIFICATION	7.8927682462214E-6	TEST
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999999528005535	WITHOUT_CLASSIFICATION	4.719944642750421E-8	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999969142962625	WITHOUT_CLASSIFICATION	3.085703737507345E-6	TEST
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.999861457547403	WITHOUT_CLASSIFICATION	1.3854245259710242E-4	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999932826563662	WITHOUT_CLASSIFICATION	6.717343633838661E-6	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999932826563662	WITHOUT_CLASSIFICATION	6.717343633838661E-6	TEST
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999968465595186	WITHOUT_CLASSIFICATION	3.1534404815413302E-6	TEST
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999962829882747	WITHOUT_CLASSIFICATION	3.7170117254259354E-6	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999933573080098	WITHOUT_CLASSIFICATION	6.642691990274401E-6	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999933573080098	WITHOUT_CLASSIFICATION	6.642691990274401E-6	TEST
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9999224168270344	WITHOUT_CLASSIFICATION	7.758317296560201E-5	TEST
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999868474454182	WITHOUT_CLASSIFICATION	1.3152554581675315E-5	TEST
// done // done // done // done	WITHOUT_CLASSIFICATION	0.999895025283748	WITHOUT_CLASSIFICATION	1.0497471625199583E-4	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999939926297761	WITHOUT_CLASSIFICATION	6.0073702240064525E-6	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999939926297761	WITHOUT_CLASSIFICATION	6.0073702240064525E-6	TEST
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999970532138212	WITHOUT_CLASSIFICATION	2.9467861788153005E-6	TEST
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999981092805714	WITHOUT_CLASSIFICATION	1.8907194286747572E-6	TEST
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999973673783122	WITHOUT_CLASSIFICATION	2.63262168783703E-6	TEST
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999979771185035	WITHOUT_CLASSIFICATION	2.0228814965940305E-6	TEST
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999815420134023	WITHOUT_CLASSIFICATION	1.8457986597667352E-5	TEST
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999954762259853	WITHOUT_CLASSIFICATION	4.523774014719639E-6	TEST
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999932131947443	WITHOUT_CLASSIFICATION	6.786805255613872E-6	TEST
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999972860172808	WITHOUT_CLASSIFICATION	2.7139827192680367E-6	TEST
// build each "when"	WITHOUT_CLASSIFICATION	0.9999959603254341	WITHOUT_CLASSIFICATION	4.03967456587586E-6	TEST
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999721133109187	WITHOUT_CLASSIFICATION	2.7886689081295815E-5	TEST
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999742128283046	WITHOUT_CLASSIFICATION	2.5787171695481856E-5	TEST
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999893321695514	WITHOUT_CLASSIFICATION	1.066783044856649E-5	TEST
// close it out	WITHOUT_CLASSIFICATION	0.9999937603129836	WITHOUT_CLASSIFICATION	6.2396870164027405E-6	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9998150850120562	WITHOUT_CLASSIFICATION	1.8491498794383977E-4	TEST
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9999897385564935	WITHOUT_CLASSIFICATION	1.0261443506435364E-5	TEST
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999989985895512	WITHOUT_CLASSIFICATION	1.0014104487741691E-6	TEST
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999972254105396	WITHOUT_CLASSIFICATION	2.774589460385448E-6	TEST
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999933644023915	WITHOUT_CLASSIFICATION	6.635597608572831E-6	TEST
// Build IR for body	WITHOUT_CLASSIFICATION	0.999993489915419	WITHOUT_CLASSIFICATION	6.510084581017519E-6	TEST
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999978400129385	WITHOUT_CLASSIFICATION	2.159987061587126E-6	TEST
// Instance method	WITHOUT_CLASSIFICATION	0.9999985108807978	WITHOUT_CLASSIFICATION	1.489119202141355E-6	TEST
// Class method	WITHOUT_CLASSIFICATION	0.9999987353986222	WITHOUT_CLASSIFICATION	1.2646013778225551E-6	TEST
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999849949153627	WITHOUT_CLASSIFICATION	1.5005084637239758E-5	TEST
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999910910010263	WITHOUT_CLASSIFICATION	8.90899897360209E-6	TEST
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999973878557724	WITHOUT_CLASSIFICATION	2.612144227512007E-6	TEST
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999925285934521	WITHOUT_CLASSIFICATION	7.471406547859837E-6	TEST
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9998136884797266	WITHOUT_CLASSIFICATION	1.863115202732793E-4	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999735261969808	WITHOUT_CLASSIFICATION	2.647380301926997E-5	TEST
// Build args	WITHOUT_CLASSIFICATION	0.99999453086714	WITHOUT_CLASSIFICATION	5.469132860054784E-6	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999992729742349	WITHOUT_CLASSIFICATION	7.270257651387939E-7	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.999999444460661	WITHOUT_CLASSIFICATION	5.555393389347907E-7	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9998150850120562	WITHOUT_CLASSIFICATION	1.8491498794383977E-4	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999735261969808	WITHOUT_CLASSIFICATION	2.647380301926997E-5	TEST
// Build args	WITHOUT_CLASSIFICATION	0.99999453086714	WITHOUT_CLASSIFICATION	5.469132860054784E-6	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.999999444460661	WITHOUT_CLASSIFICATION	5.555393389347907E-7	TEST
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9998663617508702	WITHOUT_CLASSIFICATION	1.3363824912978182E-4	TEST
// Build the new module	WITHOUT_CLASSIFICATION	0.9999872250904045	WITHOUT_CLASSIFICATION	1.27749095955843E-5	TEST
// Build the module body	WITHOUT_CLASSIFICATION	0.9999934200547698	WITHOUT_CLASSIFICATION	6.5799452302490856E-6	TEST
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999819701796318	WITHOUT_CLASSIFICATION	1.8029820368219587E-5	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999973592425698	WITHOUT_CLASSIFICATION	2.640757430133651E-6	TEST
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999995949213559	WITHOUT_CLASSIFICATION	4.050786441042556E-7	TEST
// get attr	WITHOUT_CLASSIFICATION	0.9999969142962625	WITHOUT_CLASSIFICATION	3.085703737507345E-6	TEST
// call operator	WITHOUT_CLASSIFICATION	0.9999969934691936	WITHOUT_CLASSIFICATION	3.006530806483298E-6	TEST
// set attr	WITHOUT_CLASSIFICATION	0.9999965025868267	WITHOUT_CLASSIFICATION	3.497413173315296E-6	TEST
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999867539606777	WITHOUT_CLASSIFICATION	1.3246039322296922E-5	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999878559377474	WITHOUT_CLASSIFICATION	1.2144062252602893E-5	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999878559377474	WITHOUT_CLASSIFICATION	1.2144062252602893E-5	TEST
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.999959054905047	WITHOUT_CLASSIFICATION	4.0945094953126574E-5	TEST
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999976044646955	WITHOUT_CLASSIFICATION	2.395535304391508E-6	TEST
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999986231080833	WITHOUT_CLASSIFICATION	1.3768919166972976E-6	TEST
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999967570382151	WITHOUT_CLASSIFICATION	3.2429617849104503E-6	TEST
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.999939914457595	WITHOUT_CLASSIFICATION	6.00855424050556E-5	TEST
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999887042554894	WITHOUT_CLASSIFICATION	1.1295744510609307E-5	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999995813198927	WITHOUT_CLASSIFICATION	4.1868010723709766E-7	TEST
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999948211853577	WITHOUT_CLASSIFICATION	5.1788146422900205E-6	TEST
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999868980327	WITHOUT_CLASSIFICATION	1.3101967375413643E-8	TEST
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999973948191718	WITHOUT_CLASSIFICATION	2.6051808280578676E-6	TEST
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999734220699	WITHOUT_CLASSIFICATION	2.6577930096625183E-8	TEST
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999417275587672	WITHOUT_CLASSIFICATION	5.8272441232927217E-5	TEST
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999965459528534	WITHOUT_CLASSIFICATION	3.4540471466252916E-6	TEST
// alu operations	WITHOUT_CLASSIFICATION	0.9999945415272722	WITHOUT_CLASSIFICATION	5.4584727279046475E-6	TEST
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999991567299268	WITHOUT_CLASSIFICATION	8.432700731844536E-7	TEST
// closure instructions	WITHOUT_CLASSIFICATION	0.9999857359477216	WITHOUT_CLASSIFICATION	1.4264052278402904E-5	TEST
// eval instructions	WITHOUT_CLASSIFICATION	0.9999944677188021	WITHOUT_CLASSIFICATION	5.5322811979814E-6	TEST
// def instructions	WITHOUT_CLASSIFICATION	0.9999944085142337	WITHOUT_CLASSIFICATION	5.591485766199592E-6	TEST
// exception instructions	WITHOUT_CLASSIFICATION	0.9999868602539207	WITHOUT_CLASSIFICATION	1.3139746079268794E-5	TEST
// Loads	WITHOUT_CLASSIFICATION	0.999935982211484	WITHOUT_CLASSIFICATION	6.401778851591967E-5	TEST
// Stores	WITHOUT_CLASSIFICATION	0.9999360135252364	WITHOUT_CLASSIFICATION	6.39864747636249E-5	TEST
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999961821491626	WITHOUT_CLASSIFICATION	3.817850837380425E-6	TEST
// others	WITHOUT_CLASSIFICATION	0.9999370092009925	WITHOUT_CLASSIFICATION	6.299079900750239E-5	TEST
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999925354675866	WITHOUT_CLASSIFICATION	7.464532413344791E-6	TEST
// optimization guards	WITHOUT_CLASSIFICATION	0.9999857972336944	WITHOUT_CLASSIFICATION	1.4202766305649905E-5	TEST
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999627725674148	WITHOUT_CLASSIFICATION	3.7227432585286807E-5	TEST
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999975339347059	WITHOUT_CLASSIFICATION	2.466065294133517E-6	TEST
// scripts	WITHOUT_CLASSIFICATION	0.9999362058405585	WITHOUT_CLASSIFICATION	6.379415944151817E-5	TEST
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999971304256373	WITHOUT_CLASSIFICATION	2.8695743625971646E-6	TEST
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999937211273906	WITHOUT_CLASSIFICATION	6.278872609470614E-6	TEST
// methods and closures	WITHOUT_CLASSIFICATION	0.9999971765723272	WITHOUT_CLASSIFICATION	2.8234276728157803E-6	TEST
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999896985381683	WITHOUT_CLASSIFICATION	1.0301461831696221E-5	TEST
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999743044631747	WITHOUT_CLASSIFICATION	2.569553682536014E-5	TEST
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.999982723448843	WITHOUT_CLASSIFICATION	1.727655115697727E-5	TEST
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9997437483450216	WITHOUT_CLASSIFICATION	2.562516549784112E-4	TEST
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999735837469564	WITHOUT_CLASSIFICATION	2.6416253043545155E-5	TEST
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999546926115195	WITHOUT_CLASSIFICATION	4.5307388480563526E-5	TEST
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999982722695868	WITHOUT_CLASSIFICATION	1.7277304132745163E-6	TEST
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999690135055339	WITHOUT_CLASSIFICATION	3.0986494466086265E-5	TEST
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999434488700416	WITHOUT_CLASSIFICATION	5.6551129958476205E-5	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998654750457848	WITHOUT_CLASSIFICATION	1.345249542152604E-4	TEST
// Readline	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999954641020506	WITHOUT_CLASSIFICATION	4.535897949254536E-6	TEST
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999892925406265	WITHOUT_CLASSIFICATION	1.070745937337758E-5	TEST
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999975552577202	WITHOUT_CLASSIFICATION	2.4447422797967503E-6	TEST
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.999999613624977	WITHOUT_CLASSIFICATION	3.8637502294956395E-7	TEST
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.999999929363531	WITHOUT_CLASSIFICATION	7.063646905145466E-8	TEST
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999977372587641	WITHOUT_CLASSIFICATION	2.2627412359215915E-6	TEST
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999529512482189	WITHOUT_CLASSIFICATION	4.704875178094997E-5	TEST
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999479464065179	WITHOUT_CLASSIFICATION	5.205359348227809E-5	TEST
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999990769627074	WITHOUT_CLASSIFICATION	9.230372925729725E-7	TEST
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9998755931847902	WITHOUT_CLASSIFICATION	1.2440681520973126E-4	TEST
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9997389058105532	WITHOUT_CLASSIFICATION	2.6109418944679063E-4	TEST
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9974729225009381	WITHOUT_CLASSIFICATION	0.0025270774990619567	TEST
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999514439990006	WITHOUT_CLASSIFICATION	4.85560009994585E-5	TEST
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999950799875907	WITHOUT_CLASSIFICATION	4.920012409212361E-6	TEST
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999238898846843	WITHOUT_CLASSIFICATION	7.611011531579253E-5	TEST
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9999943252056955	WITHOUT_CLASSIFICATION	5.674794304430334E-6	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9990654644146075	WITHOUT_CLASSIFICATION	9.345355853923936E-4	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9990654644146075	WITHOUT_CLASSIFICATION	9.345355853923936E-4	TEST
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999513313820846	WITHOUT_CLASSIFICATION	4.866861791554682E-5	TEST
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9997650850758845	WITHOUT_CLASSIFICATION	2.3491492411559475E-4	TEST
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999516173520845	WITHOUT_CLASSIFICATION	4.838264791557598E-5	TEST
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999563468296746	WITHOUT_CLASSIFICATION	4.3653170325374475E-5	TEST
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999728659607237	WITHOUT_CLASSIFICATION	2.7134039276376132E-5	TEST
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999293835057311	WITHOUT_CLASSIFICATION	7.061649426890033E-5	TEST
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.999932534401659	WITHOUT_CLASSIFICATION	6.746559834107065E-5	TEST
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999526098017902	WITHOUT_CLASSIFICATION	4.739019820963298E-5	TEST
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.999981679219557	WITHOUT_CLASSIFICATION	1.8320780442962976E-5	TEST
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999979118425796	WITHOUT_CLASSIFICATION	2.088157420350122E-6	TEST
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999331661766919	WITHOUT_CLASSIFICATION	6.683382330803503E-5	TEST
// class or module	WITHOUT_CLASSIFICATION	0.9999965294466834	WITHOUT_CLASSIFICATION	3.4705533166010054E-6	TEST
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999944871331896	WITHOUT_CLASSIFICATION	5.512866810386223E-6	TEST
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999761664002469	WITHOUT_CLASSIFICATION	2.3833599753175424E-5	TEST
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999843902596837	WITHOUT_CLASSIFICATION	1.5609740316355815E-5	TEST
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999878135547416	WITHOUT_CLASSIFICATION	1.2186445258246355E-5	TEST
// IN changed!	WITHOUT_CLASSIFICATION	0.9999944412144083	WITHOUT_CLASSIFICATION	5.55878559182447E-6	TEST
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999696682957939	WITHOUT_CLASSIFICATION	3.033170420614818E-5	TEST
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999669928591813	WITHOUT_CLASSIFICATION	3.3007140818601894E-5	TEST
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9997034500285119	WITHOUT_CLASSIFICATION	2.965499714880272E-4	TEST
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999567959960363	WITHOUT_CLASSIFICATION	4.320400396372504E-5	TEST
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999963260519206	WITHOUT_CLASSIFICATION	3.6739480793892876E-6	TEST
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999989237880464	WITHOUT_CLASSIFICATION	1.0762119534991381E-6	TEST
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999988854960239	WITHOUT_CLASSIFICATION	1.1145039761258626E-6	TEST
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999516154603665	WITHOUT_CLASSIFICATION	4.8384539633508813E-5	TEST
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9998988753640398	WITHOUT_CLASSIFICATION	1.0112463596023853E-4	TEST
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999284125991121	WITHOUT_CLASSIFICATION	7.158740088791503E-5	TEST
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999971604398767	WITHOUT_CLASSIFICATION	2.839560123215054E-6	TEST
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999883158758757	WITHOUT_CLASSIFICATION	1.1684124124222331E-5	TEST
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999971059341055	WITHOUT_CLASSIFICATION	2.894065894574443E-6	TEST
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999913049078172	WITHOUT_CLASSIFICATION	8.695092182829269E-6	TEST
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999914137018272	WITHOUT_CLASSIFICATION	8.58629817285279E-6	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999829822553629	WITHOUT_CLASSIFICATION	1.7017744637147455E-5	TEST
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.999921998327999	WITHOUT_CLASSIFICATION	7.800167200101362E-5	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999829822553629	WITHOUT_CLASSIFICATION	1.7017744637147455E-5	TEST
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999891968275096	WITHOUT_CLASSIFICATION	1.0803172490353372E-5	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999149757167137	WITHOUT_CLASSIFICATION	8.502428328632116E-5	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999149757167137	WITHOUT_CLASSIFICATION	8.502428328632116E-5	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999149757167137	WITHOUT_CLASSIFICATION	8.502428328632116E-5	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999936807920881	WITHOUT_CLASSIFICATION	6.31920791191563E-6	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999936807920881	WITHOUT_CLASSIFICATION	6.31920791191563E-6	TEST
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9995156969342722	WITHOUT_CLASSIFICATION	4.843030657278342E-4	TEST
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999868738548521	WITHOUT_CLASSIFICATION	1.3126145148040632E-5	TEST
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999933241979003	WITHOUT_CLASSIFICATION	6.675802099745444E-6	TEST
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9999937328931694	WITHOUT_CLASSIFICATION	6.267106830668563E-6	TEST
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.999995288037089	WITHOUT_CLASSIFICATION	4.711962910938144E-6	TEST
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999623890316177	WITHOUT_CLASSIFICATION	3.761096838233022E-5	TEST
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999672903137011	WITHOUT_CLASSIFICATION	3.270968629884408E-5	TEST
// ignore	WITHOUT_CLASSIFICATION	0.999949101330447	WITHOUT_CLASSIFICATION	5.0898669552947034E-5	TEST
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9998938021314859	WITHOUT_CLASSIFICATION	1.0619786851404481E-4	TEST
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999902889024257	WITHOUT_CLASSIFICATION	9.711097574282873E-6	TEST
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999858238790581	WITHOUT_CLASSIFICATION	1.4176120941878172E-5	TEST
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999915133677398	WITHOUT_CLASSIFICATION	8.486632260078392E-6	TEST
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.999993669259974	WITHOUT_CLASSIFICATION	6.330740025956006E-6	TEST
// root-level logic	WITHOUT_CLASSIFICATION	0.9999946230909683	WITHOUT_CLASSIFICATION	5.376909031675212E-6	TEST
// root-level methods	WITHOUT_CLASSIFICATION	0.9999897542086662	WITHOUT_CLASSIFICATION	1.0245791333860106E-5	TEST
// root-level classes	WITHOUT_CLASSIFICATION	0.9999875117942855	WITHOUT_CLASSIFICATION	1.2488205714603793E-5	TEST
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999838455844314	WITHOUT_CLASSIFICATION	1.6154415568544787E-5	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999931724269063	WITHOUT_CLASSIFICATION	6.827573093632457E-6	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999931724269063	WITHOUT_CLASSIFICATION	6.827573093632457E-6	TEST
// receiver	WITHOUT_CLASSIFICATION	0.999994745797692	WITHOUT_CLASSIFICATION	5.254202308006328E-6	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999932334370534	WITHOUT_CLASSIFICATION	6.766562946592723E-6	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999932334370534	WITHOUT_CLASSIFICATION	6.766562946592723E-6	TEST
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999531569513188	WITHOUT_CLASSIFICATION	4.6843048681193556E-5	TEST
// Object[] args	WITHOUT_CLASSIFICATION	0.9999944845033725	WITHOUT_CLASSIFICATION	5.515496627487836E-6	TEST
// load handle	WITHOUT_CLASSIFICATION	0.9999935823960822	WITHOUT_CLASSIFICATION	6.4176039178749544E-6	TEST
// args array	WITHOUT_CLASSIFICATION	0.9999951092756041	WITHOUT_CLASSIFICATION	4.890724395879737E-6	TEST
// i'th argument	WITHOUT_CLASSIFICATION	0.9999951899359779	WITHOUT_CLASSIFICATION	4.810064022116743E-6	TEST
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999770623538174	WITHOUT_CLASSIFICATION	2.2937646182616263E-5	TEST
// Object arg0	WITHOUT_CLASSIFICATION	0.9999944472021071	WITHOUT_CLASSIFICATION	5.552797892888597E-6	TEST
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999857491567338	WITHOUT_CLASSIFICATION	1.4250843266139734E-5	TEST
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999741031197847	WITHOUT_CLASSIFICATION	2.5896880215325023E-5	TEST
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999978279133187	WITHOUT_CLASSIFICATION	2.1720866813342894E-6	TEST
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999944580962803	WITHOUT_CLASSIFICATION	5.541903719773574E-6	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999293113835089	WITHOUT_CLASSIFICATION	7.068861649113117E-5	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999981762560163	WITHOUT_CLASSIFICATION	1.8237439837429624E-6	TEST
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999910205183812	WITHOUT_CLASSIFICATION	8.979481618821679E-6	TEST
// ignore	WITHOUT_CLASSIFICATION	0.999949101330447	WITHOUT_CLASSIFICATION	5.0898669552947034E-5	TEST
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9998308961875316	WITHOUT_CLASSIFICATION	1.6910381246828193E-4	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999916196811183	WITHOUT_CLASSIFICATION	8.380318881611068E-6	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999987773066137	WITHOUT_CLASSIFICATION	1.222693386393926E-6	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999987773066137	WITHOUT_CLASSIFICATION	1.222693386393926E-6	TEST
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999481122874863	WITHOUT_CLASSIFICATION	5.1887712513798437E-5	TEST
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9995611714850792	WITHOUT_CLASSIFICATION	4.388285149208732E-4	TEST
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999988308821852	WITHOUT_CLASSIFICATION	1.1691178147113552E-6	TEST
// restore position	WITHOUT_CLASSIFICATION	0.9999949428386562	WITHOUT_CLASSIFICATION	5.057161343724343E-6	TEST
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999996936348365	WITHOUT_CLASSIFICATION	3.063651634323385E-7	TEST
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.999996675334454	WITHOUT_CLASSIFICATION	3.324665545983431E-6	TEST
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999988381727066	WITHOUT_CLASSIFICATION	1.1618272932791537E-6	TEST
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9990600336614609	WITHOUT_CLASSIFICATION	9.399663385390766E-4	TEST
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999203554933322	WITHOUT_CLASSIFICATION	7.964450666781474E-5	TEST
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.999977807484169	WITHOUT_CLASSIFICATION	2.219251583093936E-5	TEST
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999789637745155	WITHOUT_CLASSIFICATION	2.10362254845275E-5	TEST
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999701560244356	WITHOUT_CLASSIFICATION	2.9843975564354325E-5	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999946196915696	WITHOUT_CLASSIFICATION	5.380308430362715E-6	TEST
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999852798163898	WITHOUT_CLASSIFICATION	1.4720183610169618E-5	TEST
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999743394999239	WITHOUT_CLASSIFICATION	2.566050007608196E-5	TEST
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999796654743411	WITHOUT_CLASSIFICATION	2.0334525658750068E-5	TEST
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999897784404554	WITHOUT_CLASSIFICATION	1.0221559544619503E-5	TEST
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999944878434943	WITHOUT_CLASSIFICATION	5.512156505647822E-6	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999908981097035	WITHOUT_CLASSIFICATION	9.101890296371549E-6	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.99997209587138	WITHOUT_CLASSIFICATION	2.7904128619867018E-5	TEST
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999925322961181	WITHOUT_CLASSIFICATION	7.467703881936311E-6	TEST
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999985969269747	WITHOUT_CLASSIFICATION	1.403073025241789E-6	TEST
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999858502657731	WITHOUT_CLASSIFICATION	1.4149734226886204E-5	TEST
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999996855827246	WITHOUT_CLASSIFICATION	3.1441727540654563E-7	TEST
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999936151594954	WITHOUT_CLASSIFICATION	6.384840504591312E-6	TEST
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999857220183849	WITHOUT_CLASSIFICATION	1.4277981615236383E-5	TEST
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9998895676734101	WITHOUT_CLASSIFICATION	1.1043232658995948E-4	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9997201560787737	WITHOUT_CLASSIFICATION	2.7984392122626313E-4	TEST
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999954238573973	WITHOUT_CLASSIFICATION	4.5761426027025514E-6	TEST
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999841741518698	WITHOUT_CLASSIFICATION	1.5825848130203084E-5	TEST
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999954246322392	WITHOUT_CLASSIFICATION	4.5753677607989945E-6	TEST
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999936251882845	WITHOUT_CLASSIFICATION	6.374811715534312E-6	TEST
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999759240251356	WITHOUT_CLASSIFICATION	2.4075974864327873E-5	TEST
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999768286956034	WITHOUT_CLASSIFICATION	2.3171304396562822E-5	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999731640243756	WITHOUT_CLASSIFICATION	2.6835975624325167E-5	TEST
// $blah	WITHOUT_CLASSIFICATION	0.999935982211484	WITHOUT_CLASSIFICATION	6.401778851591967E-5	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9997201560787737	WITHOUT_CLASSIFICATION	2.7984392122626313E-4	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999927939425312	WITHOUT_CLASSIFICATION	7.206057468805601E-6	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999731640243756	WITHOUT_CLASSIFICATION	2.6835975624325167E-5	TEST
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999696169453851	WITHOUT_CLASSIFICATION	3.038305461485004E-5	TEST
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999939857408319	WITHOUT_CLASSIFICATION	6.014259168108649E-6	TEST
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999873580847536	WITHOUT_CLASSIFICATION	1.2641915246465667E-5	TEST
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999850583546178	WITHOUT_CLASSIFICATION	1.4941645382214038E-5	TEST
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999795064888038	WITHOUT_CLASSIFICATION	2.0493511196111983E-5	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999985741112678	WITHOUT_CLASSIFICATION	1.425888732157153E-6	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999985741112678	WITHOUT_CLASSIFICATION	1.425888732157153E-6	TEST
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9999174994221373	WITHOUT_CLASSIFICATION	8.250057786270654E-5	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999983650519556	WITHOUT_CLASSIFICATION	1.6349480443473746E-6	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.999994752194226	WITHOUT_CLASSIFICATION	5.247805774060675E-6	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.999994752194226	WITHOUT_CLASSIFICATION	5.247805774060675E-6	TEST
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999999506318141	WITHOUT_CLASSIFICATION	4.936818596760497E-8	TEST
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9996134510398554	WITHOUT_CLASSIFICATION	3.865489601444822E-4	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999821850391463	WITHOUT_CLASSIFICATION	1.7814960853834156E-5	TEST
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999965206870886	WITHOUT_CLASSIFICATION	3.4793129115325955E-6	TEST
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999994932109156	WITHOUT_CLASSIFICATION	5.067890843694827E-7	TEST
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999939915537567	WITHOUT_CLASSIFICATION	6.008446243306705E-6	TEST
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9998162992185041	WITHOUT_CLASSIFICATION	1.8370078149588904E-4	TEST
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999865477150391	WITHOUT_CLASSIFICATION	1.3452284960834922E-5	TEST
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999849523853334	WITHOUT_CLASSIFICATION	1.5047614666560855E-5	TEST
// host and port given	WITHOUT_CLASSIFICATION	0.9999979824659703	WITHOUT_CLASSIFICATION	2.017534029825712E-6	TEST
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999869200857945	WITHOUT_CLASSIFICATION	1.3079914205490115E-5	TEST
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9992412316093736	WITHOUT_CLASSIFICATION	7.587683906263645E-4	TEST
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.999852756117228	WITHOUT_CLASSIFICATION	1.4724388277210658E-4	TEST
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999859329710666	WITHOUT_CLASSIFICATION	1.4067028933381345E-5	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999559488065849	WITHOUT_CLASSIFICATION	4.405119341502905E-5	TEST
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999945173942764	WITHOUT_CLASSIFICATION	5.482605723609814E-6	TEST
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9999870040913859	WITHOUT_CLASSIFICATION	1.2995908614194477E-5	TEST
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999851580389485	WITHOUT_CLASSIFICATION	1.4841961051372419E-5	TEST
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999471852902778	WITHOUT_CLASSIFICATION	5.281470972222674E-5	TEST
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999738434084137	WITHOUT_CLASSIFICATION	2.6156591586289164E-5	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.999935982211484	WITHOUT_CLASSIFICATION	6.401778851591967E-5	TEST
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.999935982211484	WITHOUT_CLASSIFICATION	6.401778851591967E-5	TEST
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9998530299787961	WITHOUT_CLASSIFICATION	1.4697002120378041E-4	TEST
// line 323	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.999992301100208	WITHOUT_CLASSIFICATION	7.698899791936606E-6	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.999992301100208	WITHOUT_CLASSIFICATION	7.698899791936606E-6	TEST
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999997877305912	WITHOUT_CLASSIFICATION	2.122694089037216E-7	TEST
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999885842246365	WITHOUT_CLASSIFICATION	1.1415775363415976E-5	TEST
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9998507155904753	WITHOUT_CLASSIFICATION	1.4928440952466192E-4	TEST
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999809433051756	WITHOUT_CLASSIFICATION	1.9056694824376822E-5	TEST
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999226028770273	WITHOUT_CLASSIFICATION	7.73971229728038E-5	TEST
// RubySocket	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999506507599735	WITHOUT_CLASSIFICATION	4.9349240026612096E-5	TEST
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999607158383756	WITHOUT_CLASSIFICATION	3.928416162439859E-5	TEST
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.999998919251182	WITHOUT_CLASSIFICATION	1.0807488180394175E-6	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999946917832806	WITHOUT_CLASSIFICATION	5.308216719475227E-6	TEST
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999943153042501	WITHOUT_CLASSIFICATION	5.684695750021824E-6	TEST
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999968925479661	WITHOUT_CLASSIFICATION	3.107452034050034E-6	TEST
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9996134510398554	WITHOUT_CLASSIFICATION	3.865489601444822E-4	TEST
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999825721778074	WITHOUT_CLASSIFICATION	1.742782219268772E-5	TEST
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999822283341865	WITHOUT_CLASSIFICATION	1.7771665813482943E-5	TEST
// Call the thread's code	WITHOUT_CLASSIFICATION	0.999993834044483	WITHOUT_CLASSIFICATION	6.165955516960409E-6	TEST
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.999981263261221	WITHOUT_CLASSIFICATION	1.873673877888318E-5	TEST
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999965285577235	WITHOUT_CLASSIFICATION	3.4714422765578673E-6	TEST
// be dead	WITHOUT_CLASSIFICATION	0.9999570229406262	WITHOUT_CLASSIFICATION	4.297705937390827E-5	TEST
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999973379450815	WITHOUT_CLASSIFICATION	2.662054918562924E-6	TEST
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999954649147721	WITHOUT_CLASSIFICATION	4.535085227887961E-6	TEST
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9994513107671624	WITHOUT_CLASSIFICATION	5.486892328375963E-4	TEST
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.999045481414188	WITHOUT_CLASSIFICATION	9.545185858119319E-4	TEST
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999930333236488	WITHOUT_CLASSIFICATION	6.966676351232123E-6	TEST
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999983080807737	WITHOUT_CLASSIFICATION	1.6919192263386447E-6	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999264972578534	WITHOUT_CLASSIFICATION	7.350274214658146E-5	TEST
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999284053270908	WITHOUT_CLASSIFICATION	7.159467290908664E-5	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.999996361280202	WITHOUT_CLASSIFICATION	3.63871979807435E-6	TEST
// main body	WITHOUT_CLASSIFICATION	0.9999951339232186	WITHOUT_CLASSIFICATION	4.866076781419825E-6	TEST
// return jump handling	WITHOUT_CLASSIFICATION	0.9999933215242677	WITHOUT_CLASSIFICATION	6.678475732223636E-6	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999361394369087	WITHOUT_CLASSIFICATION	6.386056309120496E-5	TEST
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999935979708623	WITHOUT_CLASSIFICATION	6.402029137678479E-6	TEST
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999874986178172	WITHOUT_CLASSIFICATION	1.2501382182823188E-5	TEST
// clear the redo	WITHOUT_CLASSIFICATION	0.9999975689399485	WITHOUT_CLASSIFICATION	2.431060051405364E-6	TEST
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999931141022036	WITHOUT_CLASSIFICATION	6.885897796409892E-6	TEST
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999934160990374	WITHOUT_CLASSIFICATION	6.583900962610694E-6	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999664566231726	WITHOUT_CLASSIFICATION	3.3543376827447596E-5	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999023318723056	WITHOUT_CLASSIFICATION	9.766812769441814E-5	TEST
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999764952550975	WITHOUT_CLASSIFICATION	2.3504744902624674E-5	TEST
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.999924894038658	WITHOUT_CLASSIFICATION	7.51059613419065E-5	TEST
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999307581527309	WITHOUT_CLASSIFICATION	6.924184726909598E-5	TEST
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999952272505037	WITHOUT_CLASSIFICATION	4.7727494963306665E-6	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999952551439801	WITHOUT_CLASSIFICATION	4.744856019875165E-6	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999952551439801	WITHOUT_CLASSIFICATION	4.744856019875165E-6	TEST
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999960977391912	WITHOUT_CLASSIFICATION	3.902260808742801E-6	TEST
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999894946136153	WITHOUT_CLASSIFICATION	1.0505386384683875E-5	TEST
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999812208289589	WITHOUT_CLASSIFICATION	1.8779171041013425E-5	TEST
// return	WITHOUT_CLASSIFICATION	0.9999659216038007	WITHOUT_CLASSIFICATION	3.40783961994112E-5	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999923860487051	WITHOUT_CLASSIFICATION	7.613951294814183E-6	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999921917480928	WITHOUT_CLASSIFICATION	7.808251907142295E-6	TEST
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999709385027382	WITHOUT_CLASSIFICATION	2.9061497261778563E-5	TEST
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999373608954395	WITHOUT_CLASSIFICATION	6.263910456052081E-5	TEST
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999157302962767	WITHOUT_CLASSIFICATION	8.426970372332938E-5	TEST
// tc	WITHOUT_CLASSIFICATION	0.999935982211484	WITHOUT_CLASSIFICATION	6.401778851591967E-5	TEST
// self // name	WITHOUT_CLASSIFICATION	0.9999866515638582	WITHOUT_CLASSIFICATION	1.3348436141690378E-5	TEST
// no args	WITHOUT_CLASSIFICATION	0.9999755050422733	WITHOUT_CLASSIFICATION	2.4494957726740043E-5	TEST
// variable args with block	WITHOUT_CLASSIFICATION	0.9999212082270795	WITHOUT_CLASSIFICATION	7.879177292046758E-5	TEST
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999879241441731	WITHOUT_CLASSIFICATION	1.207585582686395E-5	TEST
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999875301394	WITHOUT_CLASSIFICATION	1.2469860599904024E-5	TEST
// one arg with block	WITHOUT_CLASSIFICATION	0.9999564468753064	WITHOUT_CLASSIFICATION	4.3553124693666845E-5	TEST
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999893070460942	WITHOUT_CLASSIFICATION	1.0692953905746361E-5	TEST
// two args with block	WITHOUT_CLASSIFICATION	0.9999358289433761	WITHOUT_CLASSIFICATION	6.417105662401062E-5	TEST
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999840847625632	WITHOUT_CLASSIFICATION	1.5915237436842878E-5	TEST
// three args with block	WITHOUT_CLASSIFICATION	0.9999342486072141	WITHOUT_CLASSIFICATION	6.575139278587453E-5	TEST
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999836927997338	WITHOUT_CLASSIFICATION	1.6307200266240455E-5	TEST
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.999927930732989	WITHOUT_CLASSIFICATION	7.206926701096811E-5	TEST
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9998657505848584	WITHOUT_CLASSIFICATION	1.3424941514167328E-4	TEST
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.999973892973217	WITHOUT_CLASSIFICATION	2.6107026783012087E-5	TEST
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999932461295384	WITHOUT_CLASSIFICATION	6.753870461669903E-6	TEST
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999899476178656	WITHOUT_CLASSIFICATION	1.0052382134300805E-5	TEST
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999897000448196	WITHOUT_CLASSIFICATION	1.0299955180513648E-5	TEST
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999896427337888	WITHOUT_CLASSIFICATION	1.0357266211307914E-5	TEST
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999834171513673	WITHOUT_CLASSIFICATION	1.6582848632706094E-5	TEST
// static invocation	WITHOUT_CLASSIFICATION	0.9999950391793734	WITHOUT_CLASSIFICATION	4.9608206265301995E-6	TEST
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999858969251245	WITHOUT_CLASSIFICATION	1.410307487541921E-5	TEST
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9998842191972419	WITHOUT_CLASSIFICATION	1.1578080275809981E-4	TEST
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999963091210561	WITHOUT_CLASSIFICATION	3.690878943977767E-6	TEST
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999839103837186	WITHOUT_CLASSIFICATION	1.608961628148675E-5	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999023318723056	WITHOUT_CLASSIFICATION	9.766812769441814E-5	TEST
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999671520409824	WITHOUT_CLASSIFICATION	3.284795901755658E-5	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999825016460197	WITHOUT_CLASSIFICATION	1.7498353980353317E-5	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999825016460197	WITHOUT_CLASSIFICATION	1.7498353980353317E-5	TEST
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999889064895877	WITHOUT_CLASSIFICATION	1.1093510412263875E-5	TEST
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999744391993436	WITHOUT_CLASSIFICATION	2.556080065642264E-5	TEST
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999857220183849	WITHOUT_CLASSIFICATION	1.4277981615236383E-5	TEST
// never reached	WITHOUT_CLASSIFICATION	0.999995604760371	WITHOUT_CLASSIFICATION	4.395239629080972E-6	TEST
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9998832643516306	WITHOUT_CLASSIFICATION	1.1673564836940379E-4	TEST
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999115055133598	WITHOUT_CLASSIFICATION	8.849448664010874E-5	TEST
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9999241789455503	WITHOUT_CLASSIFICATION	7.58210544496892E-5	TEST
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9998870571830719	WITHOUT_CLASSIFICATION	1.1294281692812763E-4	TEST
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9999121705411098	WITHOUT_CLASSIFICATION	8.782945889022003E-5	TEST
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9999247487408159	WITHOUT_CLASSIFICATION	7.52512591840528E-5	TEST
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9998879059171295	WITHOUT_CLASSIFICATION	1.1209408287043819E-4	TEST
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9998841415844658	WITHOUT_CLASSIFICATION	1.1585841553415354E-4	TEST
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999891648769552	WITHOUT_CLASSIFICATION	1.0835123044780855E-5	TEST
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999673559214823	WITHOUT_CLASSIFICATION	3.264407851770205E-5	TEST
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999946214710237	WITHOUT_CLASSIFICATION	5.378528976300029E-6	TEST
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999939714387982	WITHOUT_CLASSIFICATION	6.0285612018895095E-6	TEST
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999760322545249	WITHOUT_CLASSIFICATION	2.3967745475110918E-5	TEST
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.999975441978203	WITHOUT_CLASSIFICATION	2.4558021797073743E-5	TEST
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999813619624298	WITHOUT_CLASSIFICATION	1.863803757020534E-5	TEST
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999840313043623	WITHOUT_CLASSIFICATION	1.596869563773589E-5	TEST
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9999762123814155	WITHOUT_CLASSIFICATION	2.3787618584557605E-5	TEST
// promise to implement three	WITHOUT_CLASSIFICATION	0.9999892463081631	WITHOUT_CLASSIFICATION	1.0753691837005104E-5	TEST
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999896492344249	WITHOUT_CLASSIFICATION	1.0350765575094389E-5	TEST
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999885559708134	WITHOUT_CLASSIFICATION	1.1444029186602744E-5	TEST
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999980168786469	WITHOUT_CLASSIFICATION	1.98312135309361E-6	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999910354662838	WITHOUT_CLASSIFICATION	8.964533716135026E-6	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999753919024793	WITHOUT_CLASSIFICATION	2.4608097520715386E-5	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999908355223065	WITHOUT_CLASSIFICATION	9.164477693503476E-6	TEST
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999968654953614	WITHOUT_CLASSIFICATION	3.1345046386056293E-6	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.999996493370242	WITHOUT_CLASSIFICATION	3.5066297581422907E-6	TEST
// start setup method	WITHOUT_CLASSIFICATION	0.9999967726046742	WITHOUT_CLASSIFICATION	3.2273953258478636E-6	TEST
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999965025868267	WITHOUT_CLASSIFICATION	3.497413173315296E-6	TEST
// set Ruby	WITHOUT_CLASSIFICATION	0.9999965025868267	WITHOUT_CLASSIFICATION	3.497413173315296E-6	TEST
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999903109423304	WITHOUT_CLASSIFICATION	9.689057669712459E-6	TEST
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.999943090726151	WITHOUT_CLASSIFICATION	5.690927384904126E-5	TEST
// get current context	WITHOUT_CLASSIFICATION	0.9999959774894525	WITHOUT_CLASSIFICATION	4.022510547516425E-6	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999877142385595	WITHOUT_CLASSIFICATION	1.2285761440410917E-5	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999910354662838	WITHOUT_CLASSIFICATION	8.964533716135026E-6	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999753919024793	WITHOUT_CLASSIFICATION	2.4608097520715386E-5	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999908355223065	WITHOUT_CLASSIFICATION	9.164477693503476E-6	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.999996493370242	WITHOUT_CLASSIFICATION	3.5066297581422907E-6	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999938867729109	WITHOUT_CLASSIFICATION	6.113227089083347E-6	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999655644488258	WITHOUT_CLASSIFICATION	3.4435551174151545E-5	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999951773326623	WITHOUT_CLASSIFICATION	4.8226673376849515E-6	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999954377173018	WITHOUT_CLASSIFICATION	4.562282698136834E-6	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999984481891144	WITHOUT_CLASSIFICATION	1.5518108855220687E-6	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999768083488347	WITHOUT_CLASSIFICATION	2.3191651165176615E-5	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.9999988555404612	WITHOUT_CLASSIFICATION	1.1444595387657057E-6	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999977118309646	WITHOUT_CLASSIFICATION	2.288169035368706E-6	TEST
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999837872492542	WITHOUT_CLASSIFICATION	1.6212750745858072E-5	TEST
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999979012242323	WITHOUT_CLASSIFICATION	2.0987757676983384E-6	TEST
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999862978282534	WITHOUT_CLASSIFICATION	1.3702171746576181E-5	TEST
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.999975568717227	WITHOUT_CLASSIFICATION	2.4431282772929445E-5	TEST
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999706659491935	WITHOUT_CLASSIFICATION	2.9334050806491993E-5	TEST
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.999993572209447	WITHOUT_CLASSIFICATION	6.427790553025301E-6	TEST
// store it	WITHOUT_CLASSIFICATION	0.9999874423868697	WITHOUT_CLASSIFICATION	1.2557613130254096E-5	TEST
// end of try block	WITHOUT_CLASSIFICATION	0.9999981056642746	WITHOUT_CLASSIFICATION	1.8943357254694232E-6	TEST
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999867993086534	WITHOUT_CLASSIFICATION	1.3200691346636022E-5	TEST
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999521037741818	WITHOUT_CLASSIFICATION	4.789622581821516E-5	TEST
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.999993396425394	WITHOUT_CLASSIFICATION	6.603574605962944E-6	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999877142385595	WITHOUT_CLASSIFICATION	1.2285761440410917E-5	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999655644488258	WITHOUT_CLASSIFICATION	3.4435551174151545E-5	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999951773326623	WITHOUT_CLASSIFICATION	4.8226673376849515E-6	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999984481891144	WITHOUT_CLASSIFICATION	1.5518108855220687E-6	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999768083488347	WITHOUT_CLASSIFICATION	2.3191651165176615E-5	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.9999988555404612	WITHOUT_CLASSIFICATION	1.1444595387657057E-6	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999977118309646	WITHOUT_CLASSIFICATION	2.288169035368706E-6	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999988705838065	WITHOUT_CLASSIFICATION	1.1294161935041999E-6	TEST
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999903999734644	WITHOUT_CLASSIFICATION	9.60002653570544E-6	TEST
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999932204721368	WITHOUT_CLASSIFICATION	6.779527863197458E-6	TEST
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999982767129819	WITHOUT_CLASSIFICATION	1.7232870180506977E-6	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999741976618807	WITHOUT_CLASSIFICATION	2.5802338119294456E-5	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999741976618807	WITHOUT_CLASSIFICATION	2.5802338119294456E-5	TEST
// setup the class	WITHOUT_CLASSIFICATION	0.9999985685880467	WITHOUT_CLASSIFICATION	1.4314119533175012E-6	TEST
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999988958621655	WITHOUT_CLASSIFICATION	1.1041378344635629E-6	TEST
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.999996594104755	WITHOUT_CLASSIFICATION	3.4058952449132154E-6	TEST
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999957481973364	WITHOUT_CLASSIFICATION	4.251802663591042E-6	TEST
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999956669637401	WITHOUT_CLASSIFICATION	4.333036259913908E-6	TEST
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999982590070245	WITHOUT_CLASSIFICATION	1.7409929754809211E-6	TEST
// set the full name	WITHOUT_CLASSIFICATION	0.9999791018429405	WITHOUT_CLASSIFICATION	2.0898157059514305E-5	TEST
// include all interfaces	WITHOUT_CLASSIFICATION	0.999992042768285	WITHOUT_CLASSIFICATION	7.957231714911778E-6	TEST
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999847707539542	WITHOUT_CLASSIFICATION	1.5229246045861656E-5	TEST
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999407541336665	WITHOUT_CLASSIFICATION	5.924586633368431E-5	TEST
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999576231936583	WITHOUT_CLASSIFICATION	4.2376806341717994E-5	TEST
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999928820483566	WITHOUT_CLASSIFICATION	7.117951643449171E-6	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.999814607519531	WITHOUT_CLASSIFICATION	1.853924804689651E-4	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.99998295703123	WITHOUT_CLASSIFICATION	1.7042968770020476E-5	TEST
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999856066831785	WITHOUT_CLASSIFICATION	1.4393316821501802E-5	TEST
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999775488368124	WITHOUT_CLASSIFICATION	2.2451163187535908E-5	TEST
// add all static variables	WITHOUT_CLASSIFICATION	0.9999801962887738	WITHOUT_CLASSIFICATION	1.9803711226253317E-5	TEST
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.999992660521385	WITHOUT_CLASSIFICATION	7.339478614928986E-6	TEST
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999974876243555	WITHOUT_CLASSIFICATION	2.512375644483662E-6	TEST
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999994262037343	WITHOUT_CLASSIFICATION	5.737962656560472E-7	TEST
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9993386649178795	WITHOUT_CLASSIFICATION	6.61335082120503E-4	TEST
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999956546490395	WITHOUT_CLASSIFICATION	4.345350960487471E-6	TEST
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999977259158747	WITHOUT_CLASSIFICATION	2.2740841253238744E-6	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9986491987867224	WITHOUT_CLASSIFICATION	0.0013508012132775267	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999991973141076	WITHOUT_CLASSIFICATION	8.026858925106019E-7	TEST
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.999999486740147	WITHOUT_CLASSIFICATION	5.13259852892444E-7	TEST
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999165147428694	WITHOUT_CLASSIFICATION	8.348525713066696E-5	TEST
// line 326	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999991973141076	WITHOUT_CLASSIFICATION	8.026858925106019E-7	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.99998295703123	WITHOUT_CLASSIFICATION	1.7042968770020476E-5	TEST
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999472754819704	WITHOUT_CLASSIFICATION	5.2724518029683317E-5	TEST
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999955727751332	WITHOUT_CLASSIFICATION	4.427224866884174E-6	TEST
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999471067650494	WITHOUT_CLASSIFICATION	5.289323495068456E-5	TEST
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999985815792042	WITHOUT_CLASSIFICATION	1.4184207958466206E-6	TEST
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999958353743676	WITHOUT_CLASSIFICATION	4.164625632395909E-6	TEST
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999812025153013	WITHOUT_CLASSIFICATION	1.8797484698675384E-5	TEST
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9998659707439717	WITHOUT_CLASSIFICATION	1.340292560284184E-4	TEST
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999612532224128	WITHOUT_CLASSIFICATION	3.8746777587135975E-5	TEST
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.999637749410985	WITHOUT_CLASSIFICATION	3.622505890149575E-4	TEST
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9997394814065188	WITHOUT_CLASSIFICATION	2.605185934812588E-4	TEST
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999989044956228	WITHOUT_CLASSIFICATION	1.0955043772302126E-6	TEST
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999752272434619	WITHOUT_CLASSIFICATION	2.4772756538030094E-5	TEST
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999008026379067	WITHOUT_CLASSIFICATION	9.919736209325538E-5	TEST
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999981183714151	WITHOUT_CLASSIFICATION	1.8816285848381195E-6	TEST
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999984234025318	WITHOUT_CLASSIFICATION	1.5765974682219466E-6	TEST
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999233798106507	WITHOUT_CLASSIFICATION	7.662018934931588E-5	TEST
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999987112808022	WITHOUT_CLASSIFICATION	1.288719197838775E-6	TEST
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9999827257007746	WITHOUT_CLASSIFICATION	1.7274299225452766E-5	TEST
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999991162489908	WITHOUT_CLASSIFICATION	8.837510090315405E-7	TEST
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999806481738263	WITHOUT_CLASSIFICATION	1.9351826173764765E-5	TEST
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999916904110099	WITHOUT_CLASSIFICATION	8.3095889901425E-6	TEST
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999889518058385	WITHOUT_CLASSIFICATION	1.1048194161428722E-5	TEST
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999687338868578	WITHOUT_CLASSIFICATION	3.126611314221529E-5	TEST
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999999364057479	WITHOUT_CLASSIFICATION	6.359425214142259E-8	TEST
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999977466025619	WITHOUT_CLASSIFICATION	2.25339743813114E-6	TEST
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999673559214823	WITHOUT_CLASSIFICATION	3.264407851770205E-5	TEST
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9996496311117803	WITHOUT_CLASSIFICATION	3.50368888219665E-4	TEST
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9997176639805935	WITHOUT_CLASSIFICATION	2.823360194065129E-4	TEST
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.999926994944313	WITHOUT_CLASSIFICATION	7.300505568694827E-5	TEST
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999913937881482	WITHOUT_CLASSIFICATION	8.606211851849047E-6	TEST
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999798182137463	WITHOUT_CLASSIFICATION	2.018178625371087E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999967526357527	WITHOUT_CLASSIFICATION	3.2473642473222313E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999967526357527	WITHOUT_CLASSIFICATION	3.2473642473222313E-6	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.999814607519531	WITHOUT_CLASSIFICATION	1.853924804689651E-4	TEST
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999912684590808	WITHOUT_CLASSIFICATION	8.731540919179635E-6	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999718941738526	WITHOUT_CLASSIFICATION	2.8105826147424423E-5	TEST
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999856494905313	WITHOUT_CLASSIFICATION	1.4350509468649375E-5	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999893982136404	WITHOUT_CLASSIFICATION	1.0601786359637071E-5	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999893982136404	WITHOUT_CLASSIFICATION	1.0601786359637071E-5	TEST
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999876109454444	WITHOUT_CLASSIFICATION	1.2389054555497557E-5	TEST
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999941868329332	WITHOUT_CLASSIFICATION	5.813167066827969E-6	TEST
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999911165605269	WITHOUT_CLASSIFICATION	8.883439473156535E-6	TEST
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999831262089652	WITHOUT_CLASSIFICATION	1.687379103476598E-5	TEST
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.999886485752896	WITHOUT_CLASSIFICATION	1.1351424710395517E-4	TEST
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999990062073318	WITHOUT_CLASSIFICATION	9.93792668223432E-7	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999786557208007	WITHOUT_CLASSIFICATION	2.134427919931367E-5	TEST
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999945959942319	WITHOUT_CLASSIFICATION	5.404005768080637E-6	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999045536073469	WITHOUT_CLASSIFICATION	9.544639265315208E-5	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999436183167885	WITHOUT_CLASSIFICATION	5.638168321155189E-5	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999624046332055	WITHOUT_CLASSIFICATION	3.759536679447473E-5	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999863365230519	WITHOUT_CLASSIFICATION	1.3663476948048662E-5	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999687726296612	WITHOUT_CLASSIFICATION	3.1227370338726E-5	TEST
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999961597631692	WITHOUT_CLASSIFICATION	3.840236830770734E-6	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999673559214823	WITHOUT_CLASSIFICATION	3.264407851770205E-5	TEST
// something?	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999921543588358	WITHOUT_CLASSIFICATION	7.84564116409489E-6	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999921543588358	WITHOUT_CLASSIFICATION	7.84564116409489E-6	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999883013443219	WITHOUT_CLASSIFICATION	1.1698655678051623E-5	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999883013443219	WITHOUT_CLASSIFICATION	1.1698655678051623E-5	TEST
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999943461741585	WITHOUT_CLASSIFICATION	5.6538258415376745E-6	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999828094969964	WITHOUT_CLASSIFICATION	1.7190503003570256E-5	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999708714318642	WITHOUT_CLASSIFICATION	2.912856813572244E-5	TEST
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999766453837893	WITHOUT_CLASSIFICATION	2.3354616210699163E-5	TEST
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999765625815642	WITHOUT_CLASSIFICATION	2.343741843575131E-5	TEST
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999872500994165	WITHOUT_CLASSIFICATION	1.274990058368661E-5	TEST
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999673816698122	WITHOUT_CLASSIFICATION	3.261833018775972E-5	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999863365230519	WITHOUT_CLASSIFICATION	1.3663476948048662E-5	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999687726296612	WITHOUT_CLASSIFICATION	3.1227370338726E-5	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999673559214823	WITHOUT_CLASSIFICATION	3.264407851770205E-5	TEST
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999818466019037	WITHOUT_CLASSIFICATION	1.8153398096284433E-5	TEST
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9998353048114148	WITHOUT_CLASSIFICATION	1.646951885851379E-4	TEST
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999993853599582	WITHOUT_CLASSIFICATION	6.146400416955639E-7	TEST
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999775952050892	WITHOUT_CLASSIFICATION	2.240479491084871E-5	TEST
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999801566748993	WITHOUT_CLASSIFICATION	1.9843325100655E-5	TEST
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999637754506625	WITHOUT_CLASSIFICATION	3.622454933754316E-5	TEST
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999873429512538	WITHOUT_CLASSIFICATION	1.265704874615142E-5	TEST
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999873429512538	WITHOUT_CLASSIFICATION	1.265704874615142E-5	TEST
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999867989720297	WITHOUT_CLASSIFICATION	1.3201027970262853E-5	TEST
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999845065985722	WITHOUT_CLASSIFICATION	1.5493401427858147E-5	TEST
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999983605767825	WITHOUT_CLASSIFICATION	1.6394232174783832E-6	TEST
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999747407415308	WITHOUT_CLASSIFICATION	2.5259258469214103E-5	TEST
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999687608529756	WITHOUT_CLASSIFICATION	3.123914702429796E-5	TEST
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9996679268104968	WITHOUT_CLASSIFICATION	3.32073189503152E-4	TEST
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9999983792850249	WITHOUT_CLASSIFICATION	1.6207149751576767E-6	TEST
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999969694485585	WITHOUT_CLASSIFICATION	3.0305514415104756E-6	TEST
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999899651887187	WITHOUT_CLASSIFICATION	1.0034811281247997E-5	TEST
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999823688484566	WITHOUT_CLASSIFICATION	1.7631151543409536E-5	TEST
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999935308704648	WITHOUT_CLASSIFICATION	6.469129535102408E-6	TEST
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999974694303578	WITHOUT_CLASSIFICATION	2.5305696420776168E-6	TEST
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999922757915225	WITHOUT_CLASSIFICATION	7.724208477498967E-6	TEST
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.999989809729025	WITHOUT_CLASSIFICATION	1.0190270975075639E-5	TEST
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9996134510398554	WITHOUT_CLASSIFICATION	3.865489601444822E-4	TEST
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999924784402205	WITHOUT_CLASSIFICATION	7.521559779481612E-6	TEST
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999760907854386	WITHOUT_CLASSIFICATION	2.3909214561427173E-5	TEST
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999934430093518	WITHOUT_CLASSIFICATION	6.55699064814517E-6	TEST
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999431969289448	WITHOUT_CLASSIFICATION	5.6803071055285053E-5	TEST
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9990284127159963	WITHOUT_CLASSIFICATION	9.715872840036508E-4	TEST
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999951383799071	WITHOUT_CLASSIFICATION	4.861620092936714E-6	TEST
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999091588157302	WITHOUT_CLASSIFICATION	9.084118426987225E-5	TEST
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999701749266292	WITHOUT_CLASSIFICATION	2.9825073370869357E-5	TEST
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.999957256381556	WITHOUT_CLASSIFICATION	4.274361844402587E-5	TEST
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999708924362465	WITHOUT_CLASSIFICATION	2.910756375357116E-5	TEST
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999965707808007	WITHOUT_CLASSIFICATION	3.429219199198781E-6	TEST
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999956242687482	WITHOUT_CLASSIFICATION	4.375731251717121E-6	TEST
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999357690462733	WITHOUT_CLASSIFICATION	6.423095372665534E-5	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999954458497051	WITHOUT_CLASSIFICATION	4.55415029488864E-6	TEST
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999963986114561	WITHOUT_CLASSIFICATION	3.6013885438683E-6	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999895904502795	WITHOUT_CLASSIFICATION	1.0409549720545385E-5	TEST
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999901873373338	WITHOUT_CLASSIFICATION	9.812662666127392E-6	TEST
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999903027266797	WITHOUT_CLASSIFICATION	9.697273320304292E-6	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999718941738526	WITHOUT_CLASSIFICATION	2.8105826147424423E-5	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999954458497051	WITHOUT_CLASSIFICATION	4.55415029488864E-6	TEST
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9998055050769917	WITHOUT_CLASSIFICATION	1.9449492300825836E-4	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.999999854121478	WITHOUT_CLASSIFICATION	1.458785220217866E-7	TEST
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999785483887377	WITHOUT_CLASSIFICATION	2.1451611262344047E-5	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999105989819297	WITHOUT_CLASSIFICATION	8.94010180703163E-5	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999105989819297	WITHOUT_CLASSIFICATION	8.94010180703163E-5	TEST
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999691435146683	WITHOUT_CLASSIFICATION	3.0856485331803484E-5	TEST
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.999994479082232	WITHOUT_CLASSIFICATION	5.520917767970957E-6	TEST
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999991452876219	WITHOUT_CLASSIFICATION	8.547123779553962E-7	TEST
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999996835839171	WITHOUT_CLASSIFICATION	3.164160828414364E-7	TEST
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9999674218500471	WITHOUT_CLASSIFICATION	3.2578149952904964E-5	TEST
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999657768944701	WITHOUT_CLASSIFICATION	3.4223105529830474E-5	TEST
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999709716508595	WITHOUT_CLASSIFICATION	2.902834914051534E-5	TEST
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999127103708024	WITHOUT_CLASSIFICATION	8.728962919754882E-5	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.999986027354653	WITHOUT_CLASSIFICATION	1.3972645347057138E-5	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.999986027354653	WITHOUT_CLASSIFICATION	1.3972645347057138E-5	TEST
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999958104904352	WITHOUT_CLASSIFICATION	4.1895095647536415E-6	TEST
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999310419263523	WITHOUT_CLASSIFICATION	6.895807364771918E-5	TEST
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999998076153574	WITHOUT_CLASSIFICATION	1.9238464249846085E-7	TEST
// must be a public method	WITHOUT_CLASSIFICATION	0.9999991836982578	WITHOUT_CLASSIFICATION	8.163017422188582E-7	TEST
// must be a public class	WITHOUT_CLASSIFICATION	0.9999984105317411	WITHOUT_CLASSIFICATION	1.58946825884986E-6	TEST
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999959037111029	WITHOUT_CLASSIFICATION	4.096288897095702E-6	TEST
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999630630055117	WITHOUT_CLASSIFICATION	3.6936994488229634E-5	TEST
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999991924287288	WITHOUT_CLASSIFICATION	8.075712712305487E-7	TEST
// no matching method found	WITHOUT_CLASSIFICATION	0.999998760216515	WITHOUT_CLASSIFICATION	1.2397834850466487E-6	TEST
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9951992746515838	WITHOUT_CLASSIFICATION	0.0048007253484163145	TEST
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.999991716199363	WITHOUT_CLASSIFICATION	8.283800636918547E-6	TEST
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999934830716197	WITHOUT_CLASSIFICATION	6.516928380253894E-6	TEST
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999952918078765	WITHOUT_CLASSIFICATION	4.7081921234547995E-6	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.999831483180066	WITHOUT_CLASSIFICATION	1.685168199339958E-4	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.999831483180066	WITHOUT_CLASSIFICATION	1.685168199339958E-4	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999840494107959	WITHOUT_CLASSIFICATION	1.5950589204189248E-5	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999977118309646	WITHOUT_CLASSIFICATION	2.288169035368706E-6	TEST
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9951992746515838	WITHOUT_CLASSIFICATION	0.0048007253484163145	TEST
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999964261207048	WITHOUT_CLASSIFICATION	3.5738792951352286E-6	TEST
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999999306100131	WITHOUT_CLASSIFICATION	6.938998681976757E-8	TEST
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.999999241075159	WITHOUT_CLASSIFICATION	7.589248408567992E-7	TEST
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999899620584127	WITHOUT_CLASSIFICATION	1.0037941587181226E-5	TEST
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999987867461201	WITHOUT_CLASSIFICATION	1.213253879877011E-6	TEST
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999892293633748	WITHOUT_CLASSIFICATION	1.0770636625268019E-5	TEST
/* package scope */	WITHOUT_CLASSIFICATION	0.9999899889802362	WITHOUT_CLASSIFICATION	1.0011019763832573E-5	TEST
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999718941738526	WITHOUT_CLASSIFICATION	2.8105826147424423E-5	TEST
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999897542086662	WITHOUT_CLASSIFICATION	1.0245791333860106E-5	TEST
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9994736340652149	WITHOUT_CLASSIFICATION	5.263659347850575E-4	TEST
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999918308928715	WITHOUT_CLASSIFICATION	8.169107128511768E-6	TEST
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9997565383658583	WITHOUT_CLASSIFICATION	2.4346163414182045E-4	TEST
// get any included interfaces	WITHOUT_CLASSIFICATION	0.999992876001547	WITHOUT_CLASSIFICATION	7.123998452927356E-6	TEST
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999975189721002	WITHOUT_CLASSIFICATION	2.4810278997831486E-6	TEST
// statically initialized below	WITHOUT_CLASSIFICATION	0.9998842467287399	WITHOUT_CLASSIFICATION	1.1575327126014076E-4	TEST
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999924360777841	WITHOUT_CLASSIFICATION	7.5639222159441244E-6	TEST
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999902640945809	WITHOUT_CLASSIFICATION	9.735905419035872E-6	TEST
// should not happen!	WITHOUT_CLASSIFICATION	0.9998942303897385	WITHOUT_CLASSIFICATION	1.0576961026158509E-4	TEST
// start class	WITHOUT_CLASSIFICATION	0.9999974706583625	WITHOUT_CLASSIFICATION	2.5293416374468965E-6	TEST
// make getter for handler	WITHOUT_CLASSIFICATION	0.9999350805663246	WITHOUT_CLASSIFICATION	6.491943367529578E-5	TEST
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999642830325063	WITHOUT_CLASSIFICATION	3.571696749373165E-5	TEST
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9940749631337336	WITHOUT_CLASSIFICATION	0.005925036866266401	TEST
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.999972245118601	WITHOUT_CLASSIFICATION	2.7754881398933415E-5	TEST
// create static private method field	WITHOUT_CLASSIFICATION	0.9999670989483709	WITHOUT_CLASSIFICATION	3.29010516291612E-5	TEST
// load static empty array	WITHOUT_CLASSIFICATION	0.9999898576651961	WITHOUT_CLASSIFICATION	1.0142334803879921E-5	TEST
// box arguments	WITHOUT_CLASSIFICATION	0.9999961802083395	WITHOUT_CLASSIFICATION	3.819791660522344E-6	TEST
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9997068098599758	WITHOUT_CLASSIFICATION	2.93190140024255E-4	TEST
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999956287078954	WITHOUT_CLASSIFICATION	4.371292104634681E-6	TEST
// do a void return	WITHOUT_CLASSIFICATION	0.9999986375436155	WITHOUT_CLASSIFICATION	1.362456384464954E-6	TEST
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999898875597171	WITHOUT_CLASSIFICATION	1.011244028302736E-5	TEST
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999691435146683	WITHOUT_CLASSIFICATION	3.0856485331803484E-5	TEST
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999884874136612	WITHOUT_CLASSIFICATION	1.1512586338723025E-5	TEST
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999993950612315	WITHOUT_CLASSIFICATION	6.049387686114113E-7	TEST
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999860885292662	WITHOUT_CLASSIFICATION	1.3911470733863787E-5	TEST
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999827531646016	WITHOUT_CLASSIFICATION	1.7246835398487458E-5	TEST
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999924120196143	WITHOUT_CLASSIFICATION	7.587980385686243E-6	TEST
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999956433520591	WITHOUT_CLASSIFICATION	4.3566479408329084E-6	TEST
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999908692134281	WITHOUT_CLASSIFICATION	9.13078657186677E-6	TEST
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9999072277065473	WITHOUT_CLASSIFICATION	9.277229345269416E-5	TEST
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9991600437851211	WITHOUT_CLASSIFICATION	8.399562148788134E-4	TEST
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999889917693905	WITHOUT_CLASSIFICATION	1.1008230609591292E-5	TEST
/* NUL */	WITHOUT_CLASSIFICATION	0.999867702029106	WITHOUT_CLASSIFICATION	1.3229797089397573E-4	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999449223013351	WITHOUT_CLASSIFICATION	5.5077698664971995E-5	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999897226114225	WITHOUT_CLASSIFICATION	1.0277388577488486E-5	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999992851735406	WITHOUT_CLASSIFICATION	7.148264593827115E-7	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999582088835666	WITHOUT_CLASSIFICATION	4.1791116433443426E-5	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999958344143046	WITHOUT_CLASSIFICATION	4.165585695408123E-6	TEST
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999940391669072	WITHOUT_CLASSIFICATION	5.9608330927690576E-6	TEST
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.999983853462724	WITHOUT_CLASSIFICATION	1.61465372759976E-5	TEST
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999737380782544	WITHOUT_CLASSIFICATION	2.6261921745539316E-5	TEST
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999249329637044	WITHOUT_CLASSIFICATION	7.50670362956039E-5	TEST
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999479411573898	WITHOUT_CLASSIFICATION	5.205884261011563E-5	TEST
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9997233345176736	WITHOUT_CLASSIFICATION	2.766654823263728E-4	TEST
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9994553835538774	WITHOUT_CLASSIFICATION	5.44616446122607E-4	TEST
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999974280316201	WITHOUT_CLASSIFICATION	2.5719683799691906E-6	TEST
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.999986963887626	WITHOUT_CLASSIFICATION	1.3036112374023058E-5	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999914625854202	WITHOUT_CLASSIFICATION	8.53741457976203E-6	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999914625854202	WITHOUT_CLASSIFICATION	8.53741457976203E-6	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999914625854202	WITHOUT_CLASSIFICATION	8.53741457976203E-6	TEST
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999993127502955	WITHOUT_CLASSIFICATION	6.872497044417883E-7	TEST
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.999998651365766	WITHOUT_CLASSIFICATION	1.3486342339491134E-6	TEST
// Single node in list	WITHOUT_CLASSIFICATION	0.9999975319281726	WITHOUT_CLASSIFICATION	2.4680718274032263E-6	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999674300658937	WITHOUT_CLASSIFICATION	3.256993410627914E-5	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999674300658937	WITHOUT_CLASSIFICATION	3.256993410627914E-5	TEST
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999799887411334	WITHOUT_CLASSIFICATION	2.0011258866667884E-5	TEST
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999672432298814	WITHOUT_CLASSIFICATION	3.27567701186672E-5	TEST
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999608912371415	WITHOUT_CLASSIFICATION	3.910876285854546E-5	TEST
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999963687357354	WITHOUT_CLASSIFICATION	3.6312642645793996E-6	TEST
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999925083550978	WITHOUT_CLASSIFICATION	7.4916449021793804E-6	TEST
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999392008758804	WITHOUT_CLASSIFICATION	6.0799124119571885E-5	TEST
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999526518532176	WITHOUT_CLASSIFICATION	4.734814678250393E-5	TEST
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999949844825613	WITHOUT_CLASSIFICATION	5.015517438721654E-6	TEST
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999963664700865	WITHOUT_CLASSIFICATION	3.6335299134231603E-6	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999855607200562	WITHOUT_CLASSIFICATION	1.4439279943740078E-5	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999855607200562	WITHOUT_CLASSIFICATION	1.4439279943740078E-5	TEST
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.999953711058315	WITHOUT_CLASSIFICATION	4.628894168506344E-5	TEST
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999953476806229	WITHOUT_CLASSIFICATION	4.652319377103064E-6	TEST
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999905907378797	WITHOUT_CLASSIFICATION	9.409262120416744E-6	TEST
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999697373163222	WITHOUT_CLASSIFICATION	3.0262683677731733E-5	TEST
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999898769004728	WITHOUT_CLASSIFICATION	1.0123099527188174E-5	TEST
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999975906279314	WITHOUT_CLASSIFICATION	2.409372068590013E-6	TEST
/* octal constant */	WITHOUT_CLASSIFICATION	0.999988950283	WITHOUT_CLASSIFICATION	1.1049716999927641E-5	TEST
/* hex constant */	WITHOUT_CLASSIFICATION	0.999990322661656	WITHOUT_CLASSIFICATION	9.6773383440775E-6	TEST
// PUSH(1)	WITHOUT_CLASSIFICATION	0.999935982211484	WITHOUT_CLASSIFICATION	6.401778851591967E-5	TEST
// POP	WITHOUT_CLASSIFICATION	0.999935982211484	WITHOUT_CLASSIFICATION	6.401778851591967E-5	TEST
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999663812298405	WITHOUT_CLASSIFICATION	3.3618770159512745E-5	TEST
// LEXPOP	WITHOUT_CLASSIFICATION	0.999935982211484	WITHOUT_CLASSIFICATION	6.401778851591967E-5	TEST
// SET_P	WITHOUT_CLASSIFICATION	0.999935982211484	WITHOUT_CLASSIFICATION	6.401778851591967E-5	TEST
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999684313716762	WITHOUT_CLASSIFICATION	3.1568628323836564E-5	TEST
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9998745184879078	WITHOUT_CLASSIFICATION	1.2548151209227534E-4	TEST
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999925672696058	WITHOUT_CLASSIFICATION	7.432730394125384E-6	TEST
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999718724863277	WITHOUT_CLASSIFICATION	2.8127513672309407E-5	TEST
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9997984129465303	WITHOUT_CLASSIFICATION	2.0158705346970808E-4	TEST
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.999989136141477	WITHOUT_CLASSIFICATION	1.0863858522950106E-5	TEST
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.999995997288497	WITHOUT_CLASSIFICATION	4.002711502945337E-6	TEST
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9999882813260706	WITHOUT_CLASSIFICATION	1.171867392930765E-5	TEST
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999882404204118	WITHOUT_CLASSIFICATION	1.1759579588118846E-5	TEST
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999639755875129	WITHOUT_CLASSIFICATION	3.602441248706103E-5	TEST
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999867377713789	WITHOUT_CLASSIFICATION	1.326222862111837E-5	TEST
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999938944088144	WITHOUT_CLASSIFICATION	6.105591185662526E-6	TEST
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999708430449735	WITHOUT_CLASSIFICATION	2.91569550265931E-5	TEST
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999872472537148	WITHOUT_CLASSIFICATION	1.2752746285237027E-5	TEST
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999645383088185	WITHOUT_CLASSIFICATION	3.546169118150273E-5	TEST
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999927831105558	WITHOUT_CLASSIFICATION	7.216889444135778E-6	TEST
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999944048119613	WITHOUT_CLASSIFICATION	5.595188038697914E-6	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.999867702029106	WITHOUT_CLASSIFICATION	1.3229797089397573E-4	TEST
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999958606769562	WITHOUT_CLASSIFICATION	4.139323043780619E-6	TEST
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999938267287855	WITHOUT_CLASSIFICATION	6.173271214568863E-6	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.999867702029106	WITHOUT_CLASSIFICATION	1.3229797089397573E-4	TEST
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999961569328784	WITHOUT_CLASSIFICATION	3.843067121561781E-6	TEST
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9998778818110613	WITHOUT_CLASSIFICATION	1.2211818893880254E-4	TEST
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999622598430893	WITHOUT_CLASSIFICATION	3.774015691072467E-5	TEST
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999869883585276	WITHOUT_CLASSIFICATION	1.3011641472409634E-5	TEST
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999787107478959	WITHOUT_CLASSIFICATION	2.1289252104130404E-5	TEST
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999929628321429	WITHOUT_CLASSIFICATION	7.037167857125374E-6	TEST
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999971849228373	WITHOUT_CLASSIFICATION	2.8150771627054792E-6	TEST
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999109860569302	WITHOUT_CLASSIFICATION	8.901394306981711E-5	TEST
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999884330985582	WITHOUT_CLASSIFICATION	1.1566901441793626E-5	TEST
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999884330985582	WITHOUT_CLASSIFICATION	1.1566901441793626E-5	TEST
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999884330985582	WITHOUT_CLASSIFICATION	1.1566901441793626E-5	TEST
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999786965588058	WITHOUT_CLASSIFICATION	2.1303441194271898E-5	TEST
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999612806473154	WITHOUT_CLASSIFICATION	3.8719352684664174E-5	TEST
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999863486740382	WITHOUT_CLASSIFICATION	1.3651325961877378E-5	TEST
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999384733384478	WITHOUT_CLASSIFICATION	6.152666155218796E-5	TEST
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9998197849644157	WITHOUT_CLASSIFICATION	1.8021503558431136E-4	TEST
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9997548139344352	WITHOUT_CLASSIFICATION	2.4518606556475143E-4	TEST
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999644371016398	WITHOUT_CLASSIFICATION	3.5562898360048545E-5	TEST
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999884330985582	WITHOUT_CLASSIFICATION	1.1566901441793626E-5	TEST
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999900291718569	WITHOUT_CLASSIFICATION	9.970828143088238E-6	TEST
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999729417502964	WITHOUT_CLASSIFICATION	2.705824970365323E-5	TEST
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999837963403919	WITHOUT_CLASSIFICATION	1.6203659607988113E-5	TEST
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999919627466295	WITHOUT_CLASSIFICATION	8.037253370518259E-6	TEST
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9998756429469785	WITHOUT_CLASSIFICATION	1.2435705302145711E-4	TEST
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9998008771253162	WITHOUT_CLASSIFICATION	1.9912287468374696E-4	TEST
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999586765433792	WITHOUT_CLASSIFICATION	4.13234566207726E-5	TEST
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9996765363831733	WITHOUT_CLASSIFICATION	3.234636168265808E-4	TEST
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999944515284838	WITHOUT_CLASSIFICATION	5.548471516189994E-6	TEST
// block (primary)	WITHOUT_CLASSIFICATION	0.9999945601422948	WITHOUT_CLASSIFICATION	5.4398577052028606E-6	TEST
// block (expr)	WITHOUT_CLASSIFICATION	0.9999945601422948	WITHOUT_CLASSIFICATION	5.4398577052028606E-6	TEST
// hash	WITHOUT_CLASSIFICATION	0.9999366296652292	WITHOUT_CLASSIFICATION	6.337033477082342E-5	TEST
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9995176389837821	WITHOUT_CLASSIFICATION	4.8236101621781724E-4	TEST
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9999649533466167	WITHOUT_CLASSIFICATION	3.504665338321277E-5	TEST
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999837670254175	WITHOUT_CLASSIFICATION	1.6232974582488262E-5	TEST
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999932614958277	WITHOUT_CLASSIFICATION	6.738504172222086E-6	TEST
// binary	WITHOUT_CLASSIFICATION	0.9999393090882109	WITHOUT_CLASSIFICATION	6.069091178895896E-5	TEST
// decimal	WITHOUT_CLASSIFICATION	0.9999360750048388	WITHOUT_CLASSIFICATION	6.39249951612698E-5	TEST
//Octal	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999985055627937	WITHOUT_CLASSIFICATION	1.4944372063280293E-6	TEST
// backslash	WITHOUT_CLASSIFICATION	0.9999944595088246	WITHOUT_CLASSIFICATION	5.540491175435187E-6	TEST
// newline	WITHOUT_CLASSIFICATION	0.9999367955419192	WITHOUT_CLASSIFICATION	6.320445808077925E-5	TEST
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999948984704138	WITHOUT_CLASSIFICATION	5.10152958619573E-6	TEST
// form feed	WITHOUT_CLASSIFICATION	0.9999951882400514	WITHOUT_CLASSIFICATION	4.811759948604435E-6	TEST
// vertical tab	WITHOUT_CLASSIFICATION	0.999994919040708	WITHOUT_CLASSIFICATION	5.080959291949083E-6	TEST
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// escape	WITHOUT_CLASSIFICATION	0.9999447880296568	WITHOUT_CLASSIFICATION	5.521197034322643E-5	TEST
// hex constant	WITHOUT_CLASSIFICATION	0.9999953175200965	WITHOUT_CLASSIFICATION	4.6824799034695156E-6	TEST
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999347011758046	WITHOUT_CLASSIFICATION	6.529882419533021E-5	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999907855492024	WITHOUT_CLASSIFICATION	9.214450797581855E-6	TEST
// space	WITHOUT_CLASSIFICATION	0.9999657143189665	WITHOUT_CLASSIFICATION	3.4285681033497304E-5	TEST
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9998807234290203	WITHOUT_CLASSIFICATION	1.1927657097960474E-4	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9996761523555351	WITHOUT_CLASSIFICATION	3.2384764446491036E-4	TEST
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999934718577026	WITHOUT_CLASSIFICATION	6.528142297307276E-6	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999907855492024	WITHOUT_CLASSIFICATION	9.214450797581855E-6	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9999223199238197	WITHOUT_CLASSIFICATION	7.768007618018151E-5	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9999223199238197	WITHOUT_CLASSIFICATION	7.768007618018151E-5	TEST
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999863606544298	WITHOUT_CLASSIFICATION	1.3639345570301584E-5	TEST
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999729852004181	WITHOUT_CLASSIFICATION	2.7014799581887574E-5	TEST
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999968100811967	WITHOUT_CLASSIFICATION	3.189918803317455E-6	TEST
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999624805692057	WITHOUT_CLASSIFICATION	3.751943079443756E-5	TEST
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999897801612969	WITHOUT_CLASSIFICATION	1.021983870306504E-5	TEST
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999673559214823	WITHOUT_CLASSIFICATION	3.264407851770205E-5	TEST
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9750125973182268	TEST	0.02498740268177319	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999621153877514	WITHOUT_CLASSIFICATION	3.7884612248543407E-5	TEST
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999541407960064	WITHOUT_CLASSIFICATION	4.585920399355383E-5	TEST
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999581333654358	WITHOUT_CLASSIFICATION	4.1866634564196506E-5	TEST
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999818870413538	WITHOUT_CLASSIFICATION	1.8112958646186046E-5	TEST
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9997645615403713	WITHOUT_CLASSIFICATION	2.3543845962877144E-4	TEST
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999960667708652	WITHOUT_CLASSIFICATION	3.933229134842651E-6	TEST
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999965292554449	WITHOUT_CLASSIFICATION	3.470744555120739E-6	TEST
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999463355916823	WITHOUT_CLASSIFICATION	5.366440831757096E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
// line 329	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9996223186498032	WITHOUT_CLASSIFICATION	3.7768135019680774E-4	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999860235622116	WITHOUT_CLASSIFICATION	1.3976437788489942E-5	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9998772571915577	WITHOUT_CLASSIFICATION	1.227428084423648E-4	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999874470001514	WITHOUT_CLASSIFICATION	1.2552999848629906E-5	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999984353566496	WITHOUT_CLASSIFICATION	1.5646433503821484E-6	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999944070915157	WITHOUT_CLASSIFICATION	5.592908484346452E-6	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999946485153383	WITHOUT_CLASSIFICATION	5.351484661748962E-6	TEST
// line 271	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 274	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 303	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 311	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 314	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 317	WITHOUT_CLASSIFICATION	0.9999961305196401	WITHOUT_CLASSIFICATION	3.869480359800901E-6	TEST
// line 332	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 338	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 341	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 344	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 358	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 367	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 378	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 407	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 411	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 414	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 434	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 443	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 446	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 452	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 457	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 464	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 467	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 470	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 479	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 484	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 492	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 498	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 501	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 504	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 507	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 510	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 519	WITHOUT_CLASSIFICATION	0.9999961332013643	WITHOUT_CLASSIFICATION	3.8667986357350884E-6	TEST
// line 525	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 556	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 559	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 563	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 569	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 575	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 578	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 587	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 596	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 604	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 607	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 613	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 616	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 634	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 638	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 643	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 646	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 655	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 660	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 667	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 670	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 701	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 717	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 720	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 726	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 729	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 735	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 738	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 751	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 754	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 757	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 760	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 763	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 769	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 775	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 797	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 803	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 806	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 809	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 815	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 818	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 821	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 824	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 830	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 833	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 836	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 852	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 858	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 861	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 868	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 871	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 876	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 879	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 883	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 899	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 903	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 907	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 915	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 920	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 923	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 926	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 936	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 940	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 944	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 948	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 956	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 964	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 967	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 972	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 978	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 984	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 986	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 996	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1001	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1008	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1014	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1029	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1032	WITHOUT_CLASSIFICATION	0.9999961429923284	WITHOUT_CLASSIFICATION	3.857007671632618E-6	TEST
// line 1034	WITHOUT_CLASSIFICATION	0.9999961305208354	WITHOUT_CLASSIFICATION	3.869479164620599E-6	TEST
// line 1045	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1048	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1051	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1058	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1070	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1073	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1076	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1079	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1082	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1089	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1100	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1103	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1107	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.999996156273978	WITHOUT_CLASSIFICATION	3.843726021963051E-6	TEST
// line 1113	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1115	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1119	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1135	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1137	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1151	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1154	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1164	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1175	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1178	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1187	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1189	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1193	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1214	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1234	WITHOUT_CLASSIFICATION	0.9999961368702696	WITHOUT_CLASSIFICATION	3.863129730468402E-6	TEST
// line 1239	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1243	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1263	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1269	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1280	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1283	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1290	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1296	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1299	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1302	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1309	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1313	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1315	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1328	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1335	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1352	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1358	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1374	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1381	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1415	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1431	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1434	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1440	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1443	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1453	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1465	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1477	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1480	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1485	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1488	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1510	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1516	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1533	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1550	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1553	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1556	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1565	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1568	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1571	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1574	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1577	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1587	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1600	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1609	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1623	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1626	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1638	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1641	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1644	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1649	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1655	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1658	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1661	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1672	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1677	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1687	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1694	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1733	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1745	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1757	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1769	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1775	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1784	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1808	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1814	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999863050463706	WITHOUT_CLASSIFICATION	1.3694953629366529E-5	TEST
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9992423207087908	WITHOUT_CLASSIFICATION	7.57679291209266E-4	TEST
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9998955013142904	WITHOUT_CLASSIFICATION	1.0449868570959172E-4	TEST
/*                  }*/	WITHOUT_CLASSIFICATION	0.999900996393922	WITHOUT_CLASSIFICATION	9.900360607794053E-5	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9997485969518165	WITHOUT_CLASSIFICATION	2.514030481835535E-4	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9998600882037241	WITHOUT_CLASSIFICATION	1.399117962759736E-4	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9997627216379149	WITHOUT_CLASSIFICATION	2.3727836208501283E-4	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9997627216379149	WITHOUT_CLASSIFICATION	2.3727836208501283E-4	TEST
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999183612185862	WITHOUT_CLASSIFICATION	8.163878141380952E-5	TEST
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9997907367490637	WITHOUT_CLASSIFICATION	2.0926325093643426E-4	TEST
// line 529	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999016843141965	WITHOUT_CLASSIFICATION	9.831568580352884E-5	TEST
/* XXX*/	WITHOUT_CLASSIFICATION	0.9995593137148021	WITHOUT_CLASSIFICATION	4.406862851979025E-4	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999818331343587	WITHOUT_CLASSIFICATION	1.81668656413208E-5	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998369612795283	WITHOUT_CLASSIFICATION	1.630387204717961E-4	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999016843141965	WITHOUT_CLASSIFICATION	9.831568580352884E-5	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9997752428775827	WITHOUT_CLASSIFICATION	2.2475712241732009E-4	TEST
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999774303397025	WITHOUT_CLASSIFICATION	2.256966029741743E-5	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999946329301779	WITHOUT_CLASSIFICATION	5.36706982217359E-6	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9992744414289373	WITHOUT_CLASSIFICATION	7.255585710627341E-4	TEST
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999961359401454	WITHOUT_CLASSIFICATION	3.864059854652227E-6	TEST
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999889924133077	WITHOUT_CLASSIFICATION	1.1007586692301715E-5	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999969553924328	WITHOUT_CLASSIFICATION	3.04460756713476E-6	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999969553924328	WITHOUT_CLASSIFICATION	3.04460756713476E-6	TEST
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9998092430364672	WITHOUT_CLASSIFICATION	1.9075696353267586E-4	TEST
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9992365711241018	WITHOUT_CLASSIFICATION	7.634288758982793E-4	TEST
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9998768489967187	WITHOUT_CLASSIFICATION	1.2315100328124875E-4	TEST
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999886973590909	WITHOUT_CLASSIFICATION	1.1302640909177888E-5	TEST
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9996344596040141	WITHOUT_CLASSIFICATION	3.655403959859153E-4	TEST
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999553462857433	WITHOUT_CLASSIFICATION	4.465371425664863E-5	TEST
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999991303400103	WITHOUT_CLASSIFICATION	8.696599897511355E-7	TEST
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999698208995268	WITHOUT_CLASSIFICATION	3.017910047317376E-5	TEST
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999906239385346	WITHOUT_CLASSIFICATION	9.376061465432409E-6	TEST
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999731460143352	WITHOUT_CLASSIFICATION	2.6853985664787103E-5	TEST
// Parser states:	WITHOUT_CLASSIFICATION	0.9999944157944888	WITHOUT_CLASSIFICATION	5.584205511185437E-6	TEST
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999651089693542	WITHOUT_CLASSIFICATION	3.489103064575133E-5	TEST
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999930070178878	WITHOUT_CLASSIFICATION	6.99298211219655E-6	TEST
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9996703083616718	WITHOUT_CLASSIFICATION	3.2969163832818985E-4	TEST
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999704918232368	WITHOUT_CLASSIFICATION	2.950817676316502E-5	TEST
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999848874339617	WITHOUT_CLASSIFICATION	1.5112566038305802E-5	TEST
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999714917315023	WITHOUT_CLASSIFICATION	2.8508268497661156E-5	TEST
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999607155623801	WITHOUT_CLASSIFICATION	3.928443761988131E-5	TEST
// Node	WITHOUT_CLASSIFICATION	0.9999361124827013	WITHOUT_CLASSIFICATION	6.388751729864407E-5	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9996408054037693	WITHOUT_CLASSIFICATION	3.591945962307435E-4	TEST
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9995346191458193	WITHOUT_CLASSIFICATION	4.6538085418067687E-4	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9996408054037693	WITHOUT_CLASSIFICATION	3.591945962307435E-4	TEST
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9994452674009955	WITHOUT_CLASSIFICATION	5.547325990044737E-4	TEST
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9995346191458193	WITHOUT_CLASSIFICATION	4.6538085418067687E-4	TEST
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9999839082138697	WITHOUT_CLASSIFICATION	1.609178613025004E-5	TEST
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999884330985582	WITHOUT_CLASSIFICATION	1.1566901441793626E-5	TEST
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999815709160105	WITHOUT_CLASSIFICATION	1.8429083989511885E-5	TEST
// foo()	WITHOUT_CLASSIFICATION	0.999935982211484	WITHOUT_CLASSIFICATION	6.401778851591967E-5	TEST
// foo()	WITHOUT_CLASSIFICATION	0.999935982211484	WITHOUT_CLASSIFICATION	6.401778851591967E-5	TEST
// foo()	WITHOUT_CLASSIFICATION	0.999935982211484	WITHOUT_CLASSIFICATION	6.401778851591967E-5	TEST
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999182726507058	WITHOUT_CLASSIFICATION	8.172734929422148E-5	TEST
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9965187851903844	WITHOUT_CLASSIFICATION	0.0034812148096155173	TEST
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999870601070417	WITHOUT_CLASSIFICATION	1.2939892958128272E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999860235622116	WITHOUT_CLASSIFICATION	1.3976437788489942E-5	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999874470001514	WITHOUT_CLASSIFICATION	1.2552999848629906E-5	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999984353566496	WITHOUT_CLASSIFICATION	1.5646433503821484E-6	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999944070915157	WITHOUT_CLASSIFICATION	5.592908484346452E-6	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999946485153383	WITHOUT_CLASSIFICATION	5.351484661748962E-6	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 280	WITHOUT_CLASSIFICATION	0.9999961304883718	WITHOUT_CLASSIFICATION	3.86951162827393E-6	TEST
// line 283	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 296	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 324	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 327	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 331	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 333	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 336	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 342	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 345	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 348	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 354	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 368	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 377	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 388	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 392	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 397	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 429	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 432	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 436	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 445	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 448	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 454	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 459	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 466	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 469	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 478	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 481	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 488	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 494	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 497	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 503	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 506	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 509	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 512	WITHOUT_CLASSIFICATION	0.9999961328663991	WITHOUT_CLASSIFICATION	3.8671336009214225E-6	TEST
// line 521	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 526	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 785	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 534	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 549	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 552	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 558	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 561	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 571	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 574	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 579	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 586	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 589	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 592	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 595	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 598	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 623	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 627	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 630	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 633	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 639	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 648	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 657	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 661	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 666	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 678	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 682	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 688	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 699	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 706	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 708	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 727	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 737	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 753	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 779	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 801	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 808	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 811	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 817	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 899	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 944	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 820	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 826	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 829	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 832	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 851	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 857	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 860	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 863	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 866	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 869	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 875	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 884	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 887	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 890	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 902	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 909	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 912	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 916	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 922	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 928	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 941	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 947	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 951	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 955	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 965	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 969	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 977	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 983	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1013	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1023	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1035	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1041	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1043	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1054	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1057	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1060	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1069	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1075	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.999996156273978	WITHOUT_CLASSIFICATION	3.843726021963051E-6	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1078	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1084	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1087	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1090	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1093	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1114	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1116	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1118	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1124	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1126	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1138	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1144	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1149	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1155	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1162	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1173	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1179	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1182	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1190	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1196	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1213	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1217	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1231	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1236	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1244	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1254	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1258	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1264	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1270	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1273	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1276	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1279	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1282	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1289	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1292	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1295	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1298	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1305	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1308	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1311	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1317	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1323	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1326	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1329	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1337	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1342	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1345	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1354	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1359	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1366	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1369	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1373	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1377	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1383	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1399	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1401	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1406	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1417	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1424	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1427	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1430	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1433	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1436	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1442	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1445	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1458	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1464	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1489	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1493	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1507	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1519	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1532	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1538	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1542	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1557	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1573	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1591	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1607	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1610	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1622	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1625	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1636	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1639	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1647	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1651	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1657	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1660	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1663	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1678	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1702	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1711	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1719	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1722	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1731	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1734	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1738	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1746	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1756	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1758	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1761	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1767	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1776	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1782	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1785	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1788	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1791	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1797	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1800	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1803	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1806	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1809	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1815	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1825	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1828	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1831	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1847	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9997627216379149	WITHOUT_CLASSIFICATION	2.3727836208501283E-4	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9997627216379149	WITHOUT_CLASSIFICATION	2.3727836208501283E-4	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999016843141965	WITHOUT_CLASSIFICATION	9.831568580352884E-5	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999818331343587	WITHOUT_CLASSIFICATION	1.81668656413208E-5	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998369612795283	WITHOUT_CLASSIFICATION	1.630387204717961E-4	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999016843141965	WITHOUT_CLASSIFICATION	9.831568580352884E-5	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9997752428775827	WITHOUT_CLASSIFICATION	2.2475712241732009E-4	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999674208485669	WITHOUT_CLASSIFICATION	3.257915143311714E-5	TEST
// line 1854	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1869	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1872	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1877	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1886	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1898	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1902	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1905	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1911	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1918	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1935	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1938	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1942	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1948	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1960	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1963	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1968	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1972	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1982	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1995	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 2000	WITHOUT_CLASSIFICATION	0.9999961306289135	WITHOUT_CLASSIFICATION	3.869371086528361E-6	TEST
// line 2006	WITHOUT_CLASSIFICATION	0.9999961313270925	WITHOUT_CLASSIFICATION	3.868672907436055E-6	TEST
// line 2010	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.999935122204131	WITHOUT_CLASSIFICATION	6.487779586887475E-5	TEST
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9997560791745279	WITHOUT_CLASSIFICATION	2.4392082547207064E-4	TEST
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9997616106998573	WITHOUT_CLASSIFICATION	2.3838930014269947E-4	TEST
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.999991734272222	WITHOUT_CLASSIFICATION	8.265727778059588E-6	TEST
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999416078158136	WITHOUT_CLASSIFICATION	5.839218418637803E-5	TEST
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9996854844150977	WITHOUT_CLASSIFICATION	3.1451558490219327E-4	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999946329301779	WITHOUT_CLASSIFICATION	5.36706982217359E-6	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9992744414289373	WITHOUT_CLASSIFICATION	7.255585710627341E-4	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999969553924328	WITHOUT_CLASSIFICATION	3.04460756713476E-6	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999969553924328	WITHOUT_CLASSIFICATION	3.04460756713476E-6	TEST
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9998494438003617	WITHOUT_CLASSIFICATION	1.5055619963829636E-4	TEST
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999893086064816	WITHOUT_CLASSIFICATION	1.0691393518325776E-5	TEST
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999901284587327	WITHOUT_CLASSIFICATION	9.871541267286812E-6	TEST
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999961359401454	WITHOUT_CLASSIFICATION	3.864059854652227E-6	TEST
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999991459007066	WITHOUT_CLASSIFICATION	8.540992933440419E-7	TEST
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9998765096007338	WITHOUT_CLASSIFICATION	1.2349039926621324E-4	TEST
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999837782162474	WITHOUT_CLASSIFICATION	1.6221783752607728E-5	TEST
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999963577206924	WITHOUT_CLASSIFICATION	3.642279307465912E-6	TEST
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.999986043204478	WITHOUT_CLASSIFICATION	1.3956795521853092E-5	TEST
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999913069275855	WITHOUT_CLASSIFICATION	8.693072414534352E-6	TEST
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999839230946981	WITHOUT_CLASSIFICATION	1.6076905301839854E-5	TEST
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.999979380380769	WITHOUT_CLASSIFICATION	2.0619619230995758E-5	TEST
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999879482255917	WITHOUT_CLASSIFICATION	1.2051774408446247E-5	TEST
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999920573265748	WITHOUT_CLASSIFICATION	7.942673425227078E-6	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999942898234733	WITHOUT_CLASSIFICATION	5.710176526734818E-6	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999942898234733	WITHOUT_CLASSIFICATION	5.710176526734818E-6	TEST
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9997691514977723	WITHOUT_CLASSIFICATION	2.3084850222768253E-4	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999939312818692	WITHOUT_CLASSIFICATION	6.068718130747871E-6	TEST
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999960935423389	WITHOUT_CLASSIFICATION	3.906457661150424E-6	TEST
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9998361982617412	WITHOUT_CLASSIFICATION	1.6380173825885353E-4	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999962443285195	WITHOUT_CLASSIFICATION	3.7556714804100154E-6	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999961975487821	WITHOUT_CLASSIFICATION	3.8024512179895886E-6	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999971273702699	WITHOUT_CLASSIFICATION	2.872629730017436E-6	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999961975487821	WITHOUT_CLASSIFICATION	3.8024512179895886E-6	TEST
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999852179870358	WITHOUT_CLASSIFICATION	1.4782012964128182E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999816690705311	WITHOUT_CLASSIFICATION	1.8330929468940984E-5	TEST
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9997682513236004	WITHOUT_CLASSIFICATION	2.3174867639957116E-4	TEST
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9994874974068627	WITHOUT_CLASSIFICATION	5.125025931372542E-4	TEST
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9996756924334705	WITHOUT_CLASSIFICATION	3.2430756652945553E-4	TEST
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9996756924334705	WITHOUT_CLASSIFICATION	3.2430756652945553E-4	TEST
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999380073547601	WITHOUT_CLASSIFICATION	6.199264523983469E-5	TEST
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999671408729661	WITHOUT_CLASSIFICATION	3.2859127033910916E-5	TEST
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999666731082852	WITHOUT_CLASSIFICATION	3.3326891714737714E-5	TEST
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999965436076336	WITHOUT_CLASSIFICATION	3.4563923663510995E-6	TEST
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.999976326078903	WITHOUT_CLASSIFICATION	2.3673921097051014E-5	TEST
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9996152254331422	WITHOUT_CLASSIFICATION	3.847745668579295E-4	TEST
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9996152254331422	WITHOUT_CLASSIFICATION	3.847745668579295E-4	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9995854081679226	WITHOUT_CLASSIFICATION	4.1459183207729624E-4	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9998974542755005	WITHOUT_CLASSIFICATION	1.025457244996121E-4	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9998974542755005	WITHOUT_CLASSIFICATION	1.025457244996121E-4	TEST
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999913731932597	WITHOUT_CLASSIFICATION	8.626806740389895E-6	TEST
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999701533472423	WITHOUT_CLASSIFICATION	2.98466527577734E-5	TEST
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999772785728769	WITHOUT_CLASSIFICATION	2.2721427123174172E-5	TEST
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999968943049916	WITHOUT_CLASSIFICATION	3.1056950083997287E-6	TEST
// required and optional only	WITHOUT_CLASSIFICATION	0.9999969041532951	WITHOUT_CLASSIFICATION	3.095846704896053E-6	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999961975487821	WITHOUT_CLASSIFICATION	3.8024512179895886E-6	TEST
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999879647686308	WITHOUT_CLASSIFICATION	1.2035231369129778E-5	TEST
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999998981307417	WITHOUT_CLASSIFICATION	1.0186925824420212E-7	TEST
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999424491883825	WITHOUT_CLASSIFICATION	5.755081161753893E-5	TEST
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999879761370684	WITHOUT_CLASSIFICATION	1.2023862931748734E-5	TEST
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999998914035786	WITHOUT_CLASSIFICATION	1.0859642139577904E-7	TEST
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999996043764582	WITHOUT_CLASSIFICATION	3.9562354181359545E-7	TEST
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999918978473223	WITHOUT_CLASSIFICATION	8.102152677677338E-6	TEST
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9997603780178277	WITHOUT_CLASSIFICATION	2.3962198217243328E-4	TEST
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999985923860101	WITHOUT_CLASSIFICATION	1.4076139898169744E-6	TEST
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999343343052151	WITHOUT_CLASSIFICATION	6.566569478493217E-5	TEST
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999702450287705	WITHOUT_CLASSIFICATION	2.975497122942297E-5	TEST
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999998391790346	WITHOUT_CLASSIFICATION	1.60820965381771E-7	TEST
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9991049210206915	WITHOUT_CLASSIFICATION	8.950789793086216E-4	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999934718789443	WITHOUT_CLASSIFICATION	6.528121055694088E-6	TEST
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.999953521111612	WITHOUT_CLASSIFICATION	4.647888838807349E-5	TEST
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999859948843861	WITHOUT_CLASSIFICATION	1.4005115613757068E-5	TEST
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999877645085513	WITHOUT_CLASSIFICATION	1.2235491448556786E-5	TEST
// id must always be even	WITHOUT_CLASSIFICATION	0.999991055469388	WITHOUT_CLASSIFICATION	8.94453061195721E-6	TEST
// with block pass	WITHOUT_CLASSIFICATION	0.9999404161251065	WITHOUT_CLASSIFICATION	5.9583874893403386E-5	TEST
// no block	WITHOUT_CLASSIFICATION	0.9999978885667852	WITHOUT_CLASSIFICATION	2.111433214909588E-6	TEST
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.999898875833941	WITHOUT_CLASSIFICATION	1.0112416605904331E-4	TEST
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9994821673984075	WITHOUT_CLASSIFICATION	5.178326015925939E-4	TEST
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999458850276843	WITHOUT_CLASSIFICATION	5.4114972315558746E-5	TEST
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999611402785714	WITHOUT_CLASSIFICATION	3.885972142857549E-5	TEST
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999790775164221	WITHOUT_CLASSIFICATION	2.0922483577907942E-5	TEST
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999938545554844	WITHOUT_CLASSIFICATION	6.145444515587294E-6	TEST
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.999982990231872	WITHOUT_CLASSIFICATION	1.7009768127998483E-5	TEST
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999954940854104	WITHOUT_CLASSIFICATION	4.5059145896035514E-6	TEST
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9998557027694979	WITHOUT_CLASSIFICATION	1.4429723050216533E-4	TEST
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999857685325239	WITHOUT_CLASSIFICATION	1.423146747620026E-5	TEST
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999827764027694	WITHOUT_CLASSIFICATION	1.7223597230556192E-5	TEST
// Lastline	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9998407292116086	WITHOUT_CLASSIFICATION	1.5927078839147505E-4	TEST
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999986323056906	WITHOUT_CLASSIFICATION	1.3676943093053114E-6	TEST
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999971595939543	WITHOUT_CLASSIFICATION	2.840406045695089E-6	TEST
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999956391923315	WITHOUT_CLASSIFICATION	4.360807668509391E-6	TEST
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999922336979058	WITHOUT_CLASSIFICATION	7.766302094258325E-6	TEST
// silently ignore	WITHOUT_CLASSIFICATION	0.9999955626703319	WITHOUT_CLASSIFICATION	4.4373296681847806E-6	TEST
// used by compiler	WITHOUT_CLASSIFICATION	0.9999947098929116	WITHOUT_CLASSIFICATION	5.2901070883528975E-6	TEST
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.999998135096608	WITHOUT_CLASSIFICATION	1.8649033921029524E-6	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999674208485669	WITHOUT_CLASSIFICATION	3.257915143311714E-5	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.999929650482096	WITHOUT_CLASSIFICATION	7.034951790389298E-5	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.999990675243181	WITHOUT_CLASSIFICATION	9.324756819030335E-6	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999449223013351	WITHOUT_CLASSIFICATION	5.5077698664971995E-5	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999897226114225	WITHOUT_CLASSIFICATION	1.0277388577488486E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999816690705311	WITHOUT_CLASSIFICATION	1.8330929468940984E-5	TEST
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999976411665571	WITHOUT_CLASSIFICATION	2.3588334429250897E-6	TEST
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999963499329441	WITHOUT_CLASSIFICATION	3.6500670560551464E-6	TEST
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999982265868683	WITHOUT_CLASSIFICATION	1.7734131316612864E-6	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999996497235659	WITHOUT_CLASSIFICATION	3.5027643408821167E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999996497235659	WITHOUT_CLASSIFICATION	3.5027643408821167E-7	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999955211279807	WITHOUT_CLASSIFICATION	4.47887201928551E-6	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999955211279807	WITHOUT_CLASSIFICATION	4.47887201928551E-6	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999955211279807	WITHOUT_CLASSIFICATION	4.47887201928551E-6	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999945913311524	WITHOUT_CLASSIFICATION	5.4086688476764445E-6	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999945913311524	WITHOUT_CLASSIFICATION	5.4086688476764445E-6	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.999986065277476	WITHOUT_CLASSIFICATION	1.3934722523940645E-5	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.999986065277476	WITHOUT_CLASSIFICATION	1.3934722523940645E-5	TEST
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9995593259878433	WITHOUT_CLASSIFICATION	4.406740121566891E-4	TEST
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999480626472439	WITHOUT_CLASSIFICATION	5.193735275600988E-5	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.9999958862354871	WITHOUT_CLASSIFICATION	4.113764512893624E-6	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.9999958862354871	WITHOUT_CLASSIFICATION	4.113764512893624E-6	TEST
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999576460260439	WITHOUT_CLASSIFICATION	4.2353973956131734E-5	TEST
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999776057423198	WITHOUT_CLASSIFICATION	2.2394257680247202E-5	TEST
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999669901497935	WITHOUT_CLASSIFICATION	3.300985020647594E-5	TEST
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999933936615676	WITHOUT_CLASSIFICATION	6.60633843246055E-6	TEST
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.999996058617048	WITHOUT_CLASSIFICATION	3.94138295198108E-6	TEST
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999834633762954	WITHOUT_CLASSIFICATION	1.653662370462966E-5	TEST
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999877625842809	WITHOUT_CLASSIFICATION	1.223741571904879E-5	TEST
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999858572408774	WITHOUT_CLASSIFICATION	1.4142759122641705E-5	TEST
// caller	WITHOUT_CLASSIFICATION	0.9999376098900208	WITHOUT_CLASSIFICATION	6.239010997919409E-5	TEST
// calltype // block	WITHOUT_CLASSIFICATION	0.9999945601422948	WITHOUT_CLASSIFICATION	5.4398577052028606E-6	TEST
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999991352342912	WITHOUT_CLASSIFICATION	8.647657087121118E-7	TEST
// load arity for check	WITHOUT_CLASSIFICATION	0.999989651858244	WITHOUT_CLASSIFICATION	1.0348141756080596E-5	TEST
// throw	WITHOUT_CLASSIFICATION	0.9999519129500014	WITHOUT_CLASSIFICATION	4.80870499986478E-5	TEST
// load arity for error	WITHOUT_CLASSIFICATION	0.9999887601211446	WITHOUT_CLASSIFICATION	1.123987885543571E-5	TEST
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999863780065119	WITHOUT_CLASSIFICATION	1.3621993488042277E-5	TEST
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9998308961875316	WITHOUT_CLASSIFICATION	1.6910381246828193E-4	TEST
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9998962005350858	WITHOUT_CLASSIFICATION	1.0379946491415362E-4	TEST
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999857220183849	WITHOUT_CLASSIFICATION	1.4277981615236383E-5	TEST
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999857220183849	WITHOUT_CLASSIFICATION	1.4277981615236383E-5	TEST
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9996134510398554	WITHOUT_CLASSIFICATION	3.865489601444822E-4	TEST
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999819352519517	WITHOUT_CLASSIFICATION	1.8064748048335628E-5	TEST
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999623476715036	WITHOUT_CLASSIFICATION	3.765232849647612E-5	TEST
// load the encoding	WITHOUT_CLASSIFICATION	0.9999980819526937	WITHOUT_CLASSIFICATION	1.918047306325763E-6	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999707939711937	WITHOUT_CLASSIFICATION	2.9206028806323752E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999707939711937	WITHOUT_CLASSIFICATION	2.9206028806323752E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999707939711937	WITHOUT_CLASSIFICATION	2.9206028806323752E-5	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999673776458389	WITHOUT_CLASSIFICATION	3.262235416122095E-5	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999673776458389	WITHOUT_CLASSIFICATION	3.262235416122095E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999673776458389	WITHOUT_CLASSIFICATION	3.262235416122095E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999673776458389	WITHOUT_CLASSIFICATION	3.262235416122095E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999673776458389	WITHOUT_CLASSIFICATION	3.262235416122095E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999678422246006	WITHOUT_CLASSIFICATION	3.2157775399385885E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999678422246006	WITHOUT_CLASSIFICATION	3.2157775399385885E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999678422246006	WITHOUT_CLASSIFICATION	3.2157775399385885E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999678422246006	WITHOUT_CLASSIFICATION	3.2157775399385885E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999678422246006	WITHOUT_CLASSIFICATION	3.2157775399385885E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999678422246006	WITHOUT_CLASSIFICATION	3.2157775399385885E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999678422246006	WITHOUT_CLASSIFICATION	3.2157775399385885E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999678422246006	WITHOUT_CLASSIFICATION	3.2157775399385885E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999678422246006	WITHOUT_CLASSIFICATION	3.2157775399385885E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999678422246006	WITHOUT_CLASSIFICATION	3.2157775399385885E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999678422246006	WITHOUT_CLASSIFICATION	3.2157775399385885E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999678422246006	WITHOUT_CLASSIFICATION	3.2157775399385885E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999678422246006	WITHOUT_CLASSIFICATION	3.2157775399385885E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999678422246006	WITHOUT_CLASSIFICATION	3.2157775399385885E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999678422246006	WITHOUT_CLASSIFICATION	3.2157775399385885E-5	TEST
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999979746423768	WITHOUT_CLASSIFICATION	2.025357623152982E-6	TEST
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999857220183849	WITHOUT_CLASSIFICATION	1.4277981615236383E-5	TEST
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999673559214823	WITHOUT_CLASSIFICATION	3.264407851770205E-5	TEST
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.99999912676222	WITHOUT_CLASSIFICATION	8.732377798895138E-7	TEST
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999673559214823	WITHOUT_CLASSIFICATION	3.264407851770205E-5	TEST
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999966772069551	WITHOUT_CLASSIFICATION	3.322793044937824E-6	TEST
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999913184331688	WITHOUT_CLASSIFICATION	8.681566831172572E-6	TEST
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999846921995599	WITHOUT_CLASSIFICATION	1.530780044015955E-5	TEST
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999602698541903	WITHOUT_CLASSIFICATION	3.973014580970129E-5	TEST
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9999446113743844	WITHOUT_CLASSIFICATION	5.5388625615576724E-5	TEST
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999988966313953	WITHOUT_CLASSIFICATION	1.1033686046851575E-6	TEST
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999932547898286	WITHOUT_CLASSIFICATION	6.745210171383554E-6	TEST
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999975991684721	WITHOUT_CLASSIFICATION	2.40083152792652E-6	TEST
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999875758106068	WITHOUT_CLASSIFICATION	1.2424189393098326E-5	TEST
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9990101376356306	WITHOUT_CLASSIFICATION	9.898623643693942E-4	TEST
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9998664063920931	WITHOUT_CLASSIFICATION	1.3359360790691404E-4	TEST
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999969669651656	WITHOUT_CLASSIFICATION	3.0330348343242014E-6	TEST
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.999998853831242	WITHOUT_CLASSIFICATION	1.1461687579577842E-6	TEST
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999996056248186	WITHOUT_CLASSIFICATION	3.943751813381938E-7	TEST
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9995948102438594	WITHOUT_CLASSIFICATION	4.0518975614050717E-4	TEST
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999858320649787	WITHOUT_CLASSIFICATION	1.4167935021402489E-5	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999971273702699	WITHOUT_CLASSIFICATION	2.872629730017436E-6	TEST
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9994272729039732	WITHOUT_CLASSIFICATION	5.727270960268035E-4	TEST
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999849067016567	WITHOUT_CLASSIFICATION	1.5093298343143082E-5	TEST
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999973833500444	WITHOUT_CLASSIFICATION	2.6166499555760397E-6	TEST
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999993702547085	WITHOUT_CLASSIFICATION	6.297452915513744E-7	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999906863930982	WITHOUT_CLASSIFICATION	9.313606901777733E-6	TEST
// extension extensions	WITHOUT_CLASSIFICATION	0.9999862894840823	WITHOUT_CLASSIFICATION	1.371051591764979E-5	TEST
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999750321882094	WITHOUT_CLASSIFICATION	2.4967811790524532E-5	TEST
// try all extensions	WITHOUT_CLASSIFICATION	0.9999917623589374	WITHOUT_CLASSIFICATION	8.237641062699167E-6	TEST
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999841489351483	WITHOUT_CLASSIFICATION	1.585106485176589E-5	TEST
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999936932681766	WITHOUT_CLASSIFICATION	6.306731823364811E-6	TEST
// try only literal search	WITHOUT_CLASSIFICATION	0.9999861299287963	WITHOUT_CLASSIFICATION	1.3870071203628884E-5	TEST
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999954918056	WITHOUT_CLASSIFICATION	4.508194400096692E-6	TEST
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999866709359794	WITHOUT_CLASSIFICATION	1.3329064020567756E-5	TEST
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999988613823185	WITHOUT_CLASSIFICATION	1.1386176815106898E-6	TEST
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999765172659194	WITHOUT_CLASSIFICATION	2.34827340805976E-5	TEST
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999996788720592	WITHOUT_CLASSIFICATION	3.2112794084480976E-7	TEST
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999969253059445	WITHOUT_CLASSIFICATION	3.0746940553764237E-6	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999893831161633	WITHOUT_CLASSIFICATION	1.061688383669016E-5	TEST
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999945724071778	WITHOUT_CLASSIFICATION	5.427592822193666E-6	TEST
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999970324474524	WITHOUT_CLASSIFICATION	2.9675525474988157E-6	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.999932113712274	WITHOUT_CLASSIFICATION	6.7886287725941E-5	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.999932113712274	WITHOUT_CLASSIFICATION	6.7886287725941E-5	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999658663780427	WITHOUT_CLASSIFICATION	3.413362195726603E-5	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999658663780427	WITHOUT_CLASSIFICATION	3.413362195726603E-5	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.999946447484184	WITHOUT_CLASSIFICATION	5.355251581585286E-5	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.999946447484184	WITHOUT_CLASSIFICATION	5.355251581585286E-5	TEST
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999715051336571	WITHOUT_CLASSIFICATION	2.8494866342894232E-5	TEST
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999656605576659	WITHOUT_CLASSIFICATION	3.433944233405502E-5	TEST
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.999848944409788	WITHOUT_CLASSIFICATION	1.5105559021194787E-4	TEST
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999857188001283	WITHOUT_CLASSIFICATION	1.4281199871564213E-5	TEST
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.999994404116529	WITHOUT_CLASSIFICATION	5.595883471071064E-6	TEST
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9979856260503748	WITHOUT_CLASSIFICATION	0.00201437394962526	TEST
// signed short, native	WITHOUT_CLASSIFICATION	0.9999857950188745	WITHOUT_CLASSIFICATION	1.4204981125457287E-5	TEST
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999990468262596	WITHOUT_CLASSIFICATION	9.531737404363777E-7	TEST
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9997240269089487	WITHOUT_CLASSIFICATION	2.759730910513471E-4	TEST
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9996925672696109	WITHOUT_CLASSIFICATION	3.074327303891269E-4	TEST
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999111645111943	WITHOUT_CLASSIFICATION	8.883548880561938E-5	TEST
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999954333118847	WITHOUT_CLASSIFICATION	4.566688115332582E-6	TEST
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999994240969592	WITHOUT_CLASSIFICATION	5.75903040828929E-7	TEST
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.999999420922053	WITHOUT_CLASSIFICATION	5.790779470381662E-7	TEST
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9998662216775315	WITHOUT_CLASSIFICATION	1.337783224685026E-4	TEST
//            write('S');	WITHOUT_CLASSIFICATION	0.9999828088944358	WITHOUT_CLASSIFICATION	1.719110556414744E-5	TEST
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999983529831737	WITHOUT_CLASSIFICATION	1.6470168262287647E-6	TEST
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999881220355085	WITHOUT_CLASSIFICATION	1.1877964491609368E-5	TEST
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999536742196592	WITHOUT_CLASSIFICATION	4.6325780340681606E-5	TEST
// w_symbol	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// w_unique	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999645601816299	WITHOUT_CLASSIFICATION	3.5439818370056404E-5	TEST
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999944079824559	WITHOUT_CLASSIFICATION	5.592017544169814E-6	TEST
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999810368854734	WITHOUT_CLASSIFICATION	1.8963114526698913E-5	TEST
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999273333228821	WITHOUT_CLASSIFICATION	7.266667711796893E-5	TEST
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.999993745215655	WITHOUT_CLASSIFICATION	6.254784345023327E-6	TEST
// sic	WITHOUT_CLASSIFICATION	0.999935982211484	WITHOUT_CLASSIFICATION	6.401778851591967E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999831289934759	WITHOUT_CLASSIFICATION	1.6871006524150894E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999831289934759	WITHOUT_CLASSIFICATION	1.6871006524150894E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999831289934759	WITHOUT_CLASSIFICATION	1.6871006524150894E-5	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999366439982	WITHOUT_CLASSIFICATION	6.335600172280073E-8	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999366439982	WITHOUT_CLASSIFICATION	6.335600172280073E-8	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999934718789443	WITHOUT_CLASSIFICATION	6.528121055694088E-6	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999934718789443	WITHOUT_CLASSIFICATION	6.528121055694088E-6	TEST
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999996153019307	WITHOUT_CLASSIFICATION	3.846980692315017E-7	TEST
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9999836717038059	WITHOUT_CLASSIFICATION	1.6328296194126382E-5	TEST
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999857755025393	WITHOUT_CLASSIFICATION	1.4224497460703635E-5	TEST
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999858340592834	WITHOUT_CLASSIFICATION	1.4165940716446688E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999831289934759	WITHOUT_CLASSIFICATION	1.6871006524150894E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999831289934759	WITHOUT_CLASSIFICATION	1.6871006524150894E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999831289934759	WITHOUT_CLASSIFICATION	1.6871006524150894E-5	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999366439982	WITHOUT_CLASSIFICATION	6.335600172280073E-8	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999366439982	WITHOUT_CLASSIFICATION	6.335600172280073E-8	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999366439982	WITHOUT_CLASSIFICATION	6.335600172280073E-8	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999934718789443	WITHOUT_CLASSIFICATION	6.528121055694088E-6	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999934718789443	WITHOUT_CLASSIFICATION	6.528121055694088E-6	TEST
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999885351326759	WITHOUT_CLASSIFICATION	1.1464867323930106E-5	TEST
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999987122264801	WITHOUT_CLASSIFICATION	1.2877735199755956E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.999993231336562	WITHOUT_CLASSIFICATION	6.768663437919563E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.999993231336562	WITHOUT_CLASSIFICATION	6.768663437919563E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.999993231336562	WITHOUT_CLASSIFICATION	6.768663437919563E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.999993231336562	WITHOUT_CLASSIFICATION	6.768663437919563E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.999993231336562	WITHOUT_CLASSIFICATION	6.768663437919563E-6	TEST
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999866467324686	WITHOUT_CLASSIFICATION	1.3353267531437373E-5	TEST
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9999570822054983	WITHOUT_CLASSIFICATION	4.2917794501781296E-5	TEST
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999952022260645	WITHOUT_CLASSIFICATION	4.7977739354416515E-6	TEST
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999945094980627	WITHOUT_CLASSIFICATION	5.490501937371174E-6	TEST
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.999953263197364	WITHOUT_CLASSIFICATION	4.6736802635986945E-5	TEST
// not enough bytes	WITHOUT_CLASSIFICATION	0.9999738370584969	WITHOUT_CLASSIFICATION	2.6162941503181368E-5	TEST
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999961368101753	WITHOUT_CLASSIFICATION	3.863189824697636E-6	TEST
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999970563775247	WITHOUT_CLASSIFICATION	2.9436224753496747E-6	TEST
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999898836936686	WITHOUT_CLASSIFICATION	1.0116306331444529E-5	TEST
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999822354691226	WITHOUT_CLASSIFICATION	1.7764530877469637E-5	TEST
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9998706745597566	WITHOUT_CLASSIFICATION	1.2932544024341658E-4	TEST
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999372675182532	WITHOUT_CLASSIFICATION	6.273248174682653E-5	TEST
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999857798999802	WITHOUT_CLASSIFICATION	1.4220100019766288E-5	TEST
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999014199244909	WITHOUT_CLASSIFICATION	9.858007550910106E-5	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999185385378264	WITHOUT_CLASSIFICATION	8.14614621736048E-5	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999185385378264	WITHOUT_CLASSIFICATION	8.14614621736048E-5	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999185385378264	WITHOUT_CLASSIFICATION	8.14614621736048E-5	TEST
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9937722494580313	WITHOUT_CLASSIFICATION	0.006227750541968649	TEST
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9937627871318919	WITHOUT_CLASSIFICATION	0.006237212868108003	TEST
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999988283034718	WITHOUT_CLASSIFICATION	1.1716965283155795E-6	TEST
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999605031072609	WITHOUT_CLASSIFICATION	3.949689273900518E-5	TEST
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999623064506218	WITHOUT_CLASSIFICATION	3.769354937823788E-5	TEST
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999623072989378	WITHOUT_CLASSIFICATION	3.7692701062312347E-5	TEST
// single precision, native	WITHOUT_CLASSIFICATION	0.9999834706795087	WITHOUT_CLASSIFICATION	1.6529320491342968E-5	TEST
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999622087429528	WITHOUT_CLASSIFICATION	3.779125704721553E-5	TEST
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999735626100128	WITHOUT_CLASSIFICATION	2.6437389987212562E-5	TEST
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999735632050089	WITHOUT_CLASSIFICATION	2.6436794991204637E-5	TEST
// double precision, native	WITHOUT_CLASSIFICATION	0.9999884067874389	WITHOUT_CLASSIFICATION	1.1593212561042871E-5	TEST
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999858317461061	WITHOUT_CLASSIFICATION	1.4168253893951562E-5	TEST
// signed char	WITHOUT_CLASSIFICATION	0.9999945058208691	WITHOUT_CLASSIFICATION	5.494179130889965E-6	TEST
// unsigned char	WITHOUT_CLASSIFICATION	0.9999944982723074	WITHOUT_CLASSIFICATION	5.501727692637286E-6	TEST
// long, little-endian	WITHOUT_CLASSIFICATION	0.999985772843189	WITHOUT_CLASSIFICATION	1.4227156810904655E-5	TEST
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999944232783594	WITHOUT_CLASSIFICATION	5.576721640638121E-6	TEST
// unsigned int, native	WITHOUT_CLASSIFICATION	0.99998583150496	WITHOUT_CLASSIFICATION	1.4168495040017661E-5	TEST
// int, native	WITHOUT_CLASSIFICATION	0.999994446247908	WITHOUT_CLASSIFICATION	5.553752091929688E-6	TEST
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999674373091405	WITHOUT_CLASSIFICATION	3.256269085955225E-5	TEST
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999716426180849	WITHOUT_CLASSIFICATION	2.8357381915070295E-5	TEST
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999941935320629	WITHOUT_CLASSIFICATION	5.806467937136168E-6	TEST
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9999671124201771	WITHOUT_CLASSIFICATION	3.2887579822894564E-5	TEST
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.999985744649022	WITHOUT_CLASSIFICATION	1.4255350977965897E-5	TEST
// obtain a	WITHOUT_CLASSIFICATION	0.9999970682177771	WITHOUT_CLASSIFICATION	2.9317822228032267E-6	TEST
// obtain b	WITHOUT_CLASSIFICATION	0.9999945127561044	WITHOUT_CLASSIFICATION	5.487243895576848E-6	TEST
// obtain c	WITHOUT_CLASSIFICATION	0.9999950633935243	WITHOUT_CLASSIFICATION	4.936606475731925E-6	TEST
// obtain d	WITHOUT_CLASSIFICATION	0.9999944071924187	WITHOUT_CLASSIFICATION	5.592807581317413E-6	TEST
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999579680341008	WITHOUT_CLASSIFICATION	4.203196589923771E-5	TEST
/* 1 */	WITHOUT_CLASSIFICATION	0.9998886148342104	WITHOUT_CLASSIFICATION	1.1138516578951038E-4	TEST
/* 2 */	WITHOUT_CLASSIFICATION	0.9998957692566478	WITHOUT_CLASSIFICATION	1.0423074335220241E-4	TEST
/* 3 */	WITHOUT_CLASSIFICATION	0.9996575314659307	WITHOUT_CLASSIFICATION	3.4246853406926355E-4	TEST
/* 4 */	WITHOUT_CLASSIFICATION	0.9998894574228961	WITHOUT_CLASSIFICATION	1.1054257710377102E-4	TEST
/* 5 */	WITHOUT_CLASSIFICATION	0.9998756261573789	WITHOUT_CLASSIFICATION	1.243738426211274E-4	TEST
/* 6 */	WITHOUT_CLASSIFICATION	0.9998808140450971	WITHOUT_CLASSIFICATION	1.1918595490296164E-4	TEST
/* 7 */	WITHOUT_CLASSIFICATION	0.9998723734277203	WITHOUT_CLASSIFICATION	1.276265722797156E-4	TEST
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999845232736393	WITHOUT_CLASSIFICATION	1.547672636064447E-5	TEST
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999738383664286	WITHOUT_CLASSIFICATION	2.616163357145683E-5	TEST
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999950620483975	WITHOUT_CLASSIFICATION	4.937951602504281E-6	TEST
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.8793740383156123	TEST	0.12062596168438758	WITHOUT_CLASSIFICATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999925949007613	WITHOUT_CLASSIFICATION	7.405099238782291E-6	TEST
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999964352062312	WITHOUT_CLASSIFICATION	3.5647937689281965E-6	TEST
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999781985525789	WITHOUT_CLASSIFICATION	2.1801447421111665E-5	TEST
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999825745167527	WITHOUT_CLASSIFICATION	1.7425483247291457E-5	TEST
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9998937771934582	WITHOUT_CLASSIFICATION	1.0622280654176126E-4	TEST
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9997885603741415	WITHOUT_CLASSIFICATION	2.11439625858399E-4	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9996148630001511	WITHOUT_CLASSIFICATION	3.8513699984891656E-4	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9996148630001511	WITHOUT_CLASSIFICATION	3.8513699984891656E-4	TEST
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9994276324049592	WITHOUT_CLASSIFICATION	5.723675950407734E-4	TEST
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999969331130167	WITHOUT_CLASSIFICATION	3.066886983209245E-6	TEST
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9997885603741415	WITHOUT_CLASSIFICATION	2.11439625858399E-4	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9904539339104389	WITHOUT_CLASSIFICATION	0.009546066089561116	TEST
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.99964176786958	WITHOUT_CLASSIFICATION	3.582321304200283E-4	TEST
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9998562402914815	WITHOUT_CLASSIFICATION	1.4375970851851255E-4	TEST
// are we recursing?	WITHOUT_CLASSIFICATION	0.9999962702774384	WITHOUT_CLASSIFICATION	3.729722561501766E-6	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999897682905009	WITHOUT_CLASSIFICATION	1.0231709499042927E-5	TEST
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999972590281507	WITHOUT_CLASSIFICATION	2.740971849266162E-6	TEST
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999938175573294	WITHOUT_CLASSIFICATION	6.1824426705041035E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999983047334009	WITHOUT_CLASSIFICATION	1.6952665991748492E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999983047334009	WITHOUT_CLASSIFICATION	1.6952665991748492E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999983047334009	WITHOUT_CLASSIFICATION	1.6952665991748492E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999983047334009	WITHOUT_CLASSIFICATION	1.6952665991748492E-6	TEST
// try both	WITHOUT_CLASSIFICATION	0.9999956689006904	WITHOUT_CLASSIFICATION	4.3310993095581615E-6	TEST
// just unix	WITHOUT_CLASSIFICATION	0.9999976893745569	WITHOUT_CLASSIFICATION	2.310625443006437E-6	TEST
// just windows	WITHOUT_CLASSIFICATION	0.9999986263916308	WITHOUT_CLASSIFICATION	1.3736083692201418E-6	TEST
// neither	WITHOUT_CLASSIFICATION	0.9999361439322332	WITHOUT_CLASSIFICATION	6.385606776681074E-5	TEST
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999044465700595	WITHOUT_CLASSIFICATION	9.55534299404983E-5	TEST
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999434389554154	WITHOUT_CLASSIFICATION	5.656104458454409E-5	TEST
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999933376515217	WITHOUT_CLASSIFICATION	6.662348478387832E-6	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999983007842911	WITHOUT_CLASSIFICATION	1.6992157089555703E-6	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999983007842911	WITHOUT_CLASSIFICATION	1.6992157089555703E-6	TEST
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999981594939228	WITHOUT_CLASSIFICATION	1.8405060771694063E-6	TEST
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999664302863546	WITHOUT_CLASSIFICATION	3.356971364545878E-5	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9993761418691752	WITHOUT_CLASSIFICATION	6.238581308247147E-4	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999975115191704	WITHOUT_CLASSIFICATION	2.48848082958517E-6	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999975115191704	WITHOUT_CLASSIFICATION	2.48848082958517E-6	TEST
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999963741309666	WITHOUT_CLASSIFICATION	3.625869033319784E-6	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999988076245189	WITHOUT_CLASSIFICATION	1.192375481149228E-6	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999988076245189	WITHOUT_CLASSIFICATION	1.192375481149228E-6	TEST
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9991043371388121	WITHOUT_CLASSIFICATION	8.95662861187919E-4	TEST
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999982610434776	WITHOUT_CLASSIFICATION	1.738956522477113E-6	TEST
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999997337427825	WITHOUT_CLASSIFICATION	2.662572174864535E-7	TEST
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9995618915182684	WITHOUT_CLASSIFICATION	4.3810848173176227E-4	TEST
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999892389658044	WITHOUT_CLASSIFICATION	1.0761034195697383E-5	TEST
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.999999810202123	WITHOUT_CLASSIFICATION	1.8979787691031239E-7	TEST
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.99995831751904	WITHOUT_CLASSIFICATION	4.168248096000895E-5	TEST
//sequential	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999972765334715	WITHOUT_CLASSIFICATION	2.723466528439775E-6	TEST
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999860710215093	WITHOUT_CLASSIFICATION	1.3928978490608633E-5	TEST
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999838395675353	WITHOUT_CLASSIFICATION	1.616043246475302E-5	TEST
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.761475315704826	WITHOUT_CLASSIFICATION	0.23852468429517415	TEST
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.7554235863405319	WITHOUT_CLASSIFICATION	0.2445764136594682	TEST
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999973216324584	WITHOUT_CLASSIFICATION	2.6783675415293447E-6	TEST
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.999992095325136	WITHOUT_CLASSIFICATION	7.904674863927786E-6	TEST
// Args	WITHOUT_CLASSIFICATION	0.9999360310458724	WITHOUT_CLASSIFICATION	6.396895412765147E-5	TEST
// static methods only	WITHOUT_CLASSIFICATION	0.9999900776010344	WITHOUT_CLASSIFICATION	9.922398965539892E-6	TEST
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9996914769102706	WITHOUT_CLASSIFICATION	3.085230897294591E-4	TEST
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999964664263831	WITHOUT_CLASSIFICATION	3.533573616858928E-6	TEST
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999700298150513	WITHOUT_CLASSIFICATION	2.9970184948711215E-5	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.999998200765938	WITHOUT_CLASSIFICATION	1.7992340619129622E-6	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999979934597943	WITHOUT_CLASSIFICATION	2.0065402056979266E-6	TEST
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9998986589570983	WITHOUT_CLASSIFICATION	1.0134104290168826E-4	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999963866039795	WITHOUT_CLASSIFICATION	3.6133960205971904E-6	TEST
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9997024129303604	WITHOUT_CLASSIFICATION	2.9758706963956217E-4	TEST
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999991579433796	WITHOUT_CLASSIFICATION	8.420566204156345E-7	TEST
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999136398193277	WITHOUT_CLASSIFICATION	8.636018067235236E-5	TEST
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999994869633444	WITHOUT_CLASSIFICATION	5.130366556085645E-7	TEST
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999645422194251	WITHOUT_CLASSIFICATION	3.5457780574840885E-5	TEST
// ..	WITHOUT_CLASSIFICATION	0.9999366050072245	WITHOUT_CLASSIFICATION	6.339499277553494E-5	TEST
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999285742706436	WITHOUT_CLASSIFICATION	7.142572935635945E-5	TEST
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9997638046069836	WITHOUT_CLASSIFICATION	2.361953930163667E-4	TEST
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999808900604694	WITHOUT_CLASSIFICATION	1.91099395305098E-5	TEST
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999991844743142	WITHOUT_CLASSIFICATION	8.15525685807101E-7	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9998566538665672	WITHOUT_CLASSIFICATION	1.4334613343277444E-4	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999955848284549	WITHOUT_CLASSIFICATION	4.415171545065612E-6	TEST
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9996914769102706	WITHOUT_CLASSIFICATION	3.085230897294591E-4	TEST
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9996938563833193	WITHOUT_CLASSIFICATION	3.061436166806157E-4	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9998566538665672	WITHOUT_CLASSIFICATION	1.4334613343277444E-4	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999955848284549	WITHOUT_CLASSIFICATION	4.415171545065612E-6	TEST
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999616068553305	WITHOUT_CLASSIFICATION	3.839314466948712E-5	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9998659044037517	WITHOUT_CLASSIFICATION	1.3409559624843461E-4	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9998659044037517	WITHOUT_CLASSIFICATION	1.3409559624843461E-4	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999216544994717	WITHOUT_CLASSIFICATION	7.834550052833399E-5	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999945591386138	WITHOUT_CLASSIFICATION	5.440861386132351E-6	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999934216154285	WITHOUT_CLASSIFICATION	6.5783845714269855E-6	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999977081694074	WITHOUT_CLASSIFICATION	2.291830592696236E-6	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9997988328931283	WITHOUT_CLASSIFICATION	2.01167106871723E-4	TEST
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.999955325706965	WITHOUT_CLASSIFICATION	4.4674293034987585E-5	TEST
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999746562730863	WITHOUT_CLASSIFICATION	2.534372691365149E-5	TEST
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999806078081401	WITHOUT_CLASSIFICATION	1.9392191859809832E-5	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999636257049912	WITHOUT_CLASSIFICATION	3.6374295008889904E-5	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9999361663342121	WITHOUT_CLASSIFICATION	6.383366578781802E-5	TEST
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999414405304573	WITHOUT_CLASSIFICATION	5.855946954277246E-5	TEST
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999683071922016	WITHOUT_CLASSIFICATION	3.169280779828034E-5	TEST
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999935854335908	WITHOUT_CLASSIFICATION	6.414566409094103E-6	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999813950435456	WITHOUT_CLASSIFICATION	1.8604956454525718E-5	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999813950435456	WITHOUT_CLASSIFICATION	1.8604956454525718E-5	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.999953745958407	WITHOUT_CLASSIFICATION	4.625404159306198E-5	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.999953745958407	WITHOUT_CLASSIFICATION	4.625404159306198E-5	TEST
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.999964248520093	WITHOUT_CLASSIFICATION	3.575147990689408E-5	TEST
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999961195746153	WITHOUT_CLASSIFICATION	3.880425384680462E-6	TEST
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999531501076827	WITHOUT_CLASSIFICATION	4.684989231735714E-5	TEST
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9996914769102706	WITHOUT_CLASSIFICATION	3.085230897294591E-4	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999934216154285	WITHOUT_CLASSIFICATION	6.5783845714269855E-6	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999977081694074	WITHOUT_CLASSIFICATION	2.291830592696236E-6	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999636257049912	WITHOUT_CLASSIFICATION	3.6374295008889904E-5	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9999361663342121	WITHOUT_CLASSIFICATION	6.383366578781802E-5	TEST
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999901599009963	WITHOUT_CLASSIFICATION	9.840099003861875E-6	TEST
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999946898309945	WITHOUT_CLASSIFICATION	5.310169005484841E-6	TEST
// \v	WITHOUT_CLASSIFICATION	0.999935982211484	WITHOUT_CLASSIFICATION	6.401778851591967E-5	TEST
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999944992551671	WITHOUT_CLASSIFICATION	5.500744832842432E-6	TEST
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999820971454578	WITHOUT_CLASSIFICATION	1.790285454223373E-5	TEST
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999371575164724	WITHOUT_CLASSIFICATION	6.284248352760235E-5	TEST
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9998830421773571	WITHOUT_CLASSIFICATION	1.1695782264292531E-4	TEST
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999944178936585	WITHOUT_CLASSIFICATION	5.582106341562952E-6	TEST
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999972761516326	WITHOUT_CLASSIFICATION	2.72384836732748E-6	TEST
// negative values	WITHOUT_CLASSIFICATION	0.9999967465023241	WITHOUT_CLASSIFICATION	3.253497675892128E-6	TEST
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999978053133463	WITHOUT_CLASSIFICATION	2.1946866537716115E-6	TEST
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9983797728854723	WITHOUT_CLASSIFICATION	0.0016202271145276616	TEST
// no such luck...	WITHOUT_CLASSIFICATION	0.9999978299152623	WITHOUT_CLASSIFICATION	2.1700847376640355E-6	TEST
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9998555313044274	WITHOUT_CLASSIFICATION	1.4446869557264974E-4	TEST
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999969011702852	WITHOUT_CLASSIFICATION	3.098829714799599E-6	TEST
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999940410879742	WITHOUT_CLASSIFICATION	5.9589120259080444E-6	TEST
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999853289381171	WITHOUT_CLASSIFICATION	1.4671061882840314E-5	TEST
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999396656144458	WITHOUT_CLASSIFICATION	6.033438555411467E-5	TEST
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999740990269687	WITHOUT_CLASSIFICATION	2.5900973031266623E-5	TEST
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999857220183849	WITHOUT_CLASSIFICATION	1.4277981615236383E-5	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999857220183849	WITHOUT_CLASSIFICATION	1.4277981615236383E-5	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999857220183849	WITHOUT_CLASSIFICATION	1.4277981615236383E-5	TEST
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9997506443974026	WITHOUT_CLASSIFICATION	2.4935560259744095E-4	TEST
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999884330985582	WITHOUT_CLASSIFICATION	1.1566901441793626E-5	TEST
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.999999867431425	WITHOUT_CLASSIFICATION	1.3256857504398586E-7	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9996923668266244	WITHOUT_CLASSIFICATION	3.076331733756174E-4	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9996923668266244	WITHOUT_CLASSIFICATION	3.076331733756174E-4	TEST
// \v	WITHOUT_CLASSIFICATION	0.999935982211484	WITHOUT_CLASSIFICATION	6.401778851591967E-5	TEST
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9996134510398554	WITHOUT_CLASSIFICATION	3.865489601444822E-4	TEST
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9996914769102706	WITHOUT_CLASSIFICATION	3.085230897294591E-4	TEST
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9996914769102706	WITHOUT_CLASSIFICATION	3.085230897294591E-4	TEST
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9996914769102706	WITHOUT_CLASSIFICATION	3.085230897294591E-4	TEST
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9996914769102706	WITHOUT_CLASSIFICATION	3.085230897294591E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9996914769102706	WITHOUT_CLASSIFICATION	3.085230897294591E-4	TEST
// no number	WITHOUT_CLASSIFICATION	0.9999977405473168	WITHOUT_CLASSIFICATION	2.2594526831650127E-6	TEST
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999955775279719	WITHOUT_CLASSIFICATION	4.4224720280505435E-6	TEST
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9986187526317553	WITHOUT_CLASSIFICATION	0.0013812473682446723	TEST
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999344758730059	WITHOUT_CLASSIFICATION	6.552412699413354E-5	TEST
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999985807519504	WITHOUT_CLASSIFICATION	1.419248049615252E-6	TEST
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999982754277053	WITHOUT_CLASSIFICATION	1.7245722947171377E-6	TEST
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999952831313246	WITHOUT_CLASSIFICATION	4.716868675370829E-6	TEST
// we reached the end	WITHOUT_CLASSIFICATION	0.9999949710802143	WITHOUT_CLASSIFICATION	5.0289197856956905E-6	TEST
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999559399890271	WITHOUT_CLASSIFICATION	4.406001097286906E-5	TEST
// states	WITHOUT_CLASSIFICATION	0.9999412852635161	WITHOUT_CLASSIFICATION	5.871473648391744E-5	TEST
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999769617702642	WITHOUT_CLASSIFICATION	2.303822973589694E-5	TEST
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999945401097199	WITHOUT_CLASSIFICATION	5.459890280153156E-6	TEST
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999998599617155	WITHOUT_CLASSIFICATION	1.4003828447918467E-7	TEST
// drop through for sign	WITHOUT_CLASSIFICATION	0.999985968432077	WITHOUT_CLASSIFICATION	1.4031567922983484E-5	TEST
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.999989196022867	WITHOUT_CLASSIFICATION	1.0803977133132582E-5	TEST
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999679725830454	WITHOUT_CLASSIFICATION	3.2027416954584666E-5	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999910407560283	WITHOUT_CLASSIFICATION	8.959243971679068E-6	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.999976764512783	WITHOUT_CLASSIFICATION	2.3235487217063254E-5	TEST
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999941930170801	WITHOUT_CLASSIFICATION	5.806982919788237E-6	TEST
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999890556349291	WITHOUT_CLASSIFICATION	1.0944365070790686E-5	TEST
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999833552551	WITHOUT_CLASSIFICATION	1.6644744956358774E-8	TEST
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999982227756758	WITHOUT_CLASSIFICATION	1.7772243240288612E-6	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999952681004242	WITHOUT_CLASSIFICATION	4.7318995758090495E-5	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999952681004242	WITHOUT_CLASSIFICATION	4.7318995758090495E-5	TEST
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999817401158145	WITHOUT_CLASSIFICATION	1.8259884185464617E-5	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999958680112063	WITHOUT_CLASSIFICATION	4.1319887936715115E-6	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999958680112063	WITHOUT_CLASSIFICATION	4.1319887936715115E-6	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999976955806371	WITHOUT_CLASSIFICATION	2.304419362819907E-6	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999976955806371	WITHOUT_CLASSIFICATION	2.304419362819907E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999936944902607	WITHOUT_CLASSIFICATION	6.305509739341478E-6	TEST
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999902261604888	WITHOUT_CLASSIFICATION	9.77383951120647E-6	TEST
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999991059736296	WITHOUT_CLASSIFICATION	8.940263704182407E-7	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999962303080925	WITHOUT_CLASSIFICATION	3.7696919074030336E-6	TEST
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999914818526588	WITHOUT_CLASSIFICATION	8.518147341220947E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999377769259606	WITHOUT_CLASSIFICATION	6.222307403927364E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999377769259606	WITHOUT_CLASSIFICATION	6.222307403927364E-5	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999910407560283	WITHOUT_CLASSIFICATION	8.959243971679068E-6	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999910407560283	WITHOUT_CLASSIFICATION	8.959243971679068E-6	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999910407560283	WITHOUT_CLASSIFICATION	8.959243971679068E-6	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.999976764512783	WITHOUT_CLASSIFICATION	2.3235487217063254E-5	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999952681004242	WITHOUT_CLASSIFICATION	4.7318995758090495E-5	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999952681004242	WITHOUT_CLASSIFICATION	4.7318995758090495E-5	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999952681004242	WITHOUT_CLASSIFICATION	4.7318995758090495E-5	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999936944902607	WITHOUT_CLASSIFICATION	6.305509739341478E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999936944902607	WITHOUT_CLASSIFICATION	6.305509739341478E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999936944902607	WITHOUT_CLASSIFICATION	6.305509739341478E-6	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999962303080925	WITHOUT_CLASSIFICATION	3.7696919074030336E-6	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999962303080925	WITHOUT_CLASSIFICATION	3.7696919074030336E-6	TEST
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.999992065351879	WITHOUT_CLASSIFICATION	7.93464812097548E-6	TEST
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999861680085136	WITHOUT_CLASSIFICATION	1.3831991486332054E-5	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999900438357168	WITHOUT_CLASSIFICATION	9.956164283220529E-6	TEST
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9994889376721814	WITHOUT_CLASSIFICATION	5.110623278185726E-4	TEST
// no digits, error	WITHOUT_CLASSIFICATION	0.9999989056474962	WITHOUT_CLASSIFICATION	1.0943525038045306E-6	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999952574969073	WITHOUT_CLASSIFICATION	4.7425030927187055E-6	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999952574969073	WITHOUT_CLASSIFICATION	4.7425030927187055E-6	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999835248848028	WITHOUT_CLASSIFICATION	1.647511519716628E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999423975441554	WITHOUT_CLASSIFICATION	5.7602455844693476E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999423975441554	WITHOUT_CLASSIFICATION	5.7602455844693476E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999423975441554	WITHOUT_CLASSIFICATION	5.7602455844693476E-5	TEST
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999957251387839	WITHOUT_CLASSIFICATION	4.274861216161904E-6	TEST
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999874323365902	WITHOUT_CLASSIFICATION	1.2567663409931196E-5	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.999976764512783	WITHOUT_CLASSIFICATION	2.3235487217063254E-5	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999936944902607	WITHOUT_CLASSIFICATION	6.305509739341478E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999936944902607	WITHOUT_CLASSIFICATION	6.305509739341478E-6	TEST
//switch	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999423975441554	WITHOUT_CLASSIFICATION	5.7602455844693476E-5	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999835248848028	WITHOUT_CLASSIFICATION	1.647511519716628E-5	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999605595472261	WITHOUT_CLASSIFICATION	3.9440452773986884E-5	TEST
// switch //while	WITHOUT_CLASSIFICATION	0.9999948029295102	WITHOUT_CLASSIFICATION	5.197070489808264E-6	TEST
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999997340637937	WITHOUT_CLASSIFICATION	2.6593620636870043E-7	TEST
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999973971551004	WITHOUT_CLASSIFICATION	2.6028448995654824E-6	TEST
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999857220183849	WITHOUT_CLASSIFICATION	1.4277981615236383E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999006174650755	WITHOUT_CLASSIFICATION	9.938253492442335E-5	TEST
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999918090628129	WITHOUT_CLASSIFICATION	8.190937187028606E-6	TEST
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999857220183849	WITHOUT_CLASSIFICATION	1.4277981615236383E-5	TEST
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999697838736652	WITHOUT_CLASSIFICATION	3.0216126334841375E-5	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.99999807311782	WITHOUT_CLASSIFICATION	1.926882180055918E-6	TEST
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999693646106255	WITHOUT_CLASSIFICATION	3.063538937461178E-5	TEST
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9998610026571809	WITHOUT_CLASSIFICATION	1.389973428190468E-4	TEST
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999532538729503	WITHOUT_CLASSIFICATION	4.674612704961363E-5	TEST
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999876566389299	WITHOUT_CLASSIFICATION	1.2343361070219696E-5	TEST
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999980629780733	WITHOUT_CLASSIFICATION	1.937021926652911E-6	TEST
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999978080017252	WITHOUT_CLASSIFICATION	2.1919982748861204E-6	TEST
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9994859475288879	WITHOUT_CLASSIFICATION	5.140524711121273E-4	TEST
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9998308961875316	WITHOUT_CLASSIFICATION	1.6910381246828193E-4	TEST
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999966743643647	WITHOUT_CLASSIFICATION	3.3256356351771237E-6	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999174639848794	WITHOUT_CLASSIFICATION	8.253601512068968E-5	TEST
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999232624220226	WITHOUT_CLASSIFICATION	7.673757797742675E-5	TEST
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999910329885959	WITHOUT_CLASSIFICATION	8.967011404079115E-6	TEST
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999980315342664	WITHOUT_CLASSIFICATION	1.9684657336674035E-6	TEST
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.99997595159258	WITHOUT_CLASSIFICATION	2.4048407419976554E-5	TEST
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9993237869133292	WITHOUT_CLASSIFICATION	6.762130866708576E-4	TEST
// unread back	WITHOUT_CLASSIFICATION	0.9999945939400435	WITHOUT_CLASSIFICATION	5.406059956476436E-6	TEST
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999974865652375	WITHOUT_CLASSIFICATION	2.513434762586643E-6	TEST
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999952664807368	WITHOUT_CLASSIFICATION	4.733519263222182E-6	TEST
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.999994979626491	WITHOUT_CLASSIFICATION	5.020373509028205E-6	TEST
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999994382692253	WITHOUT_CLASSIFICATION	5.617307746901031E-7	TEST
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999996447597326	WITHOUT_CLASSIFICATION	3.5524026744131376E-7	TEST
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999840126591807	WITHOUT_CLASSIFICATION	1.5987340819376052E-5	TEST
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999970583434937	WITHOUT_CLASSIFICATION	2.9416565061730888E-6	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999605595472261	WITHOUT_CLASSIFICATION	3.9440452773986884E-5	TEST
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999958038784273	WITHOUT_CLASSIFICATION	4.196121572671511E-6	TEST
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999839780155828	WITHOUT_CLASSIFICATION	1.6021984417162364E-5	TEST
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999436039478969	WITHOUT_CLASSIFICATION	5.6396052103026815E-5	TEST
// silence	WITHOUT_CLASSIFICATION	0.999935982211484	WITHOUT_CLASSIFICATION	6.401778851591967E-5	TEST
// silence	WITHOUT_CLASSIFICATION	0.999935982211484	WITHOUT_CLASSIFICATION	6.401778851591967E-5	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.9999956984278618	WITHOUT_CLASSIFICATION	4.301572138148515E-6	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.9999956984278618	WITHOUT_CLASSIFICATION	4.301572138148515E-6	TEST
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999693095030879	WITHOUT_CLASSIFICATION	3.069049691213573E-5	TEST
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999267713421022	WITHOUT_CLASSIFICATION	7.322865789782686E-5	TEST
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.99999165929305	WITHOUT_CLASSIFICATION	8.340706949998363E-6	TEST
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999653000068913	WITHOUT_CLASSIFICATION	3.469999310866478E-5	TEST
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999640152762646	WITHOUT_CLASSIFICATION	3.598472373551788E-5	TEST
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999911464337766	WITHOUT_CLASSIFICATION	8.853566223374753E-6	TEST
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999830140651919	WITHOUT_CLASSIFICATION	1.698593480804667E-5	TEST
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999983039691835	WITHOUT_CLASSIFICATION	1.696030816508912E-6	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999996378049326	WITHOUT_CLASSIFICATION	3.6219506732684714E-7	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999684000232751	WITHOUT_CLASSIFICATION	3.159997672492413E-5	TEST
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999865846173479	WITHOUT_CLASSIFICATION	1.3415382652229414E-5	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999881119578132	WITHOUT_CLASSIFICATION	1.1888042186811682E-5	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999881119578132	WITHOUT_CLASSIFICATION	1.1888042186811682E-5	TEST
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999595901324579	WITHOUT_CLASSIFICATION	4.040986754214682E-5	TEST
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999906992238826	WITHOUT_CLASSIFICATION	9.30077611735813E-6	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999773241155885	WITHOUT_CLASSIFICATION	2.2675884411489162E-5	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999773241155885	WITHOUT_CLASSIFICATION	2.2675884411489162E-5	TEST
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999960704983236	WITHOUT_CLASSIFICATION	3.929501676364218E-6	TEST
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.99999499629433	WITHOUT_CLASSIFICATION	5.003705670000418E-6	TEST
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999808130383452	WITHOUT_CLASSIFICATION	1.9186961654822944E-5	TEST
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999690786295504	WITHOUT_CLASSIFICATION	3.0921370449649795E-5	TEST
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999869531315738	WITHOUT_CLASSIFICATION	1.3046868426233662E-5	TEST
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999579463442357	WITHOUT_CLASSIFICATION	4.2053655764369745E-5	TEST
// save the ungot	WITHOUT_CLASSIFICATION	0.9999978339214041	WITHOUT_CLASSIFICATION	2.1660785960182025E-6	TEST
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.999995511595602	WITHOUT_CLASSIFICATION	4.4884043980687335E-6	TEST
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999601306877928	WITHOUT_CLASSIFICATION	3.986931220732527E-5	TEST
// flush first	WITHOUT_CLASSIFICATION	0.9999965037814994	WITHOUT_CLASSIFICATION	3.4962185005612003E-6	TEST
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999675083250021	WITHOUT_CLASSIFICATION	3.2491674997910753E-5	TEST
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999393492378924	WITHOUT_CLASSIFICATION	6.065076210756386E-5	TEST
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.999989201350021	WITHOUT_CLASSIFICATION	1.079864997893467E-5	TEST
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999541043563863	WITHOUT_CLASSIFICATION	4.5895643613781045E-5	TEST
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999963541499757	WITHOUT_CLASSIFICATION	3.6458500244562285E-6	TEST
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999106297552438	WITHOUT_CLASSIFICATION	8.937024475621675E-5	TEST
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999914977472651	WITHOUT_CLASSIFICATION	8.502252734954962E-6	TEST
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999917089965079	WITHOUT_CLASSIFICATION	8.291003492112931E-6	TEST
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999283104449805	WITHOUT_CLASSIFICATION	7.168955501937968E-5	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999695567484376	WITHOUT_CLASSIFICATION	3.044325156237522E-5	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8734671691668253	WITHOUT_CLASSIFICATION	0.12653283083317465	TEST
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.999957510639645	WITHOUT_CLASSIFICATION	4.248936035505947E-5	TEST
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.999961801508797	WITHOUT_CLASSIFICATION	3.8198491202984025E-5	TEST
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999845456345341	WITHOUT_CLASSIFICATION	1.5454365465920972E-5	TEST
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999882779039144	WITHOUT_CLASSIFICATION	1.172209608560286E-5	TEST
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999865486220452	WITHOUT_CLASSIFICATION	1.3451377954907731E-5	TEST
// else leave it null	WITHOUT_CLASSIFICATION	0.9999808893568969	WITHOUT_CLASSIFICATION	1.9110643103090368E-5	TEST
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999830037249927	WITHOUT_CLASSIFICATION	1.6996275007287858E-5	TEST
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999874402094672	WITHOUT_CLASSIFICATION	1.2559790532886412E-5	TEST
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999855052393241	WITHOUT_CLASSIFICATION	1.4494760676083078E-5	TEST
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999960468493992	WITHOUT_CLASSIFICATION	3.953150600812727E-6	TEST
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999954902189205	WITHOUT_CLASSIFICATION	4.509781079388681E-6	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999990950917796	WITHOUT_CLASSIFICATION	9.04908220403229E-7	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999990950917796	WITHOUT_CLASSIFICATION	9.04908220403229E-7	TEST
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999968446594873	WITHOUT_CLASSIFICATION	3.1553405126525657E-6	TEST
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999998688566827	WITHOUT_CLASSIFICATION	1.3114331731829977E-7	TEST
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.999663433871897	WITHOUT_CLASSIFICATION	3.3656612810301865E-4	TEST
// Init	WITHOUT_CLASSIFICATION	0.9999365101000006	WITHOUT_CLASSIFICATION	6.348989999944724E-5	TEST
// Block	WITHOUT_CLASSIFICATION	0.9999360992279579	WITHOUT_CLASSIFICATION	6.390077204209714E-5	TEST
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999953471683322	WITHOUT_CLASSIFICATION	4.652831667837855E-6	TEST
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.999218388615579	WITHOUT_CLASSIFICATION	7.816113844209743E-4	TEST
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.999218388615579	WITHOUT_CLASSIFICATION	7.816113844209743E-4	TEST
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9998248046953347	WITHOUT_CLASSIFICATION	1.751953046652313E-4	TEST
// ok	WITHOUT_CLASSIFICATION	0.9999440979379947	WITHOUT_CLASSIFICATION	5.590206200534131E-5	TEST
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999983715827185	WITHOUT_CLASSIFICATION	1.6284172815551698E-6	TEST
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9998822850898218	WITHOUT_CLASSIFICATION	1.1771491017823242E-4	TEST
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999189309200206	WITHOUT_CLASSIFICATION	8.10690799793597E-5	TEST
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9996339474275107	WITHOUT_CLASSIFICATION	3.6605257248934956E-4	TEST
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999979165626968	WITHOUT_CLASSIFICATION	2.0834373032624813E-6	TEST
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999949441905859	WITHOUT_CLASSIFICATION	5.055809414141419E-6	TEST
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9997919409617669	WITHOUT_CLASSIFICATION	2.0805903823301134E-4	TEST
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999825234404495	WITHOUT_CLASSIFICATION	1.747655955045167E-5	TEST
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.999997143270217	WITHOUT_CLASSIFICATION	2.856729783001341E-6	TEST
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999808445677557	WITHOUT_CLASSIFICATION	1.9155432244247155E-5	TEST
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999935482044915	WITHOUT_CLASSIFICATION	6.4517955085451115E-6	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.999998403565028	WITHOUT_CLASSIFICATION	1.5964349719243844E-6	TEST
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999804422015662	WITHOUT_CLASSIFICATION	1.9557798433782505E-5	TEST
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999736262864031	WITHOUT_CLASSIFICATION	2.63737135968391E-5	TEST
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999619796410748	WITHOUT_CLASSIFICATION	3.802035892520055E-5	TEST
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999853652340045	WITHOUT_CLASSIFICATION	1.463476599551748E-5	TEST
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999848240065917	WITHOUT_CLASSIFICATION	1.5175993408200826E-5	TEST
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999606957263254	WITHOUT_CLASSIFICATION	3.930427367463706E-5	TEST
// void methods should work	WITHOUT_CLASSIFICATION	0.9999813233861775	WITHOUT_CLASSIFICATION	1.8676613822544123E-5	TEST
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999857919002036	WITHOUT_CLASSIFICATION	1.4208099796382596E-5	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9998606283845936	WITHOUT_CLASSIFICATION	1.393716154064233E-4	TEST
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.99994973106845	WITHOUT_CLASSIFICATION	5.026893155004161E-5	TEST
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999962393751101	WITHOUT_CLASSIFICATION	3.760624890057284E-6	TEST
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999673559214823	WITHOUT_CLASSIFICATION	3.264407851770205E-5	TEST
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999939675936084	WITHOUT_CLASSIFICATION	6.032406391732555E-6	TEST
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9996490257875401	WITHOUT_CLASSIFICATION	3.509742124598514E-4	TEST
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9998312912964742	WITHOUT_CLASSIFICATION	1.6870870352587422E-4	TEST
// value equality	WITHOUT_CLASSIFICATION	0.9999945849308679	WITHOUT_CLASSIFICATION	5.415069132068592E-6	TEST
// identity equality	WITHOUT_CLASSIFICATION	0.9999948626139086	WITHOUT_CLASSIFICATION	5.137386091488536E-6	TEST
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999674657978058	WITHOUT_CLASSIFICATION	3.25342021942321E-5	TEST
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999944162337845	WITHOUT_CLASSIFICATION	5.583766215621884E-6	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999857220183849	WITHOUT_CLASSIFICATION	1.4277981615236383E-5	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999857220183849	WITHOUT_CLASSIFICATION	1.4277981615236383E-5	TEST
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999857220183849	WITHOUT_CLASSIFICATION	1.4277981615236383E-5	TEST
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999493515378949	WITHOUT_CLASSIFICATION	5.064846210513197E-5	TEST
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999944095148204	WITHOUT_CLASSIFICATION	5.590485179489977E-6	TEST
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.999975330229617	WITHOUT_CLASSIFICATION	2.4669770382999334E-5	TEST
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999456570367745	WITHOUT_CLASSIFICATION	5.434296322547569E-5	TEST
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999890613839416	WITHOUT_CLASSIFICATION	1.0938616058245598E-5	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999991884605258	WITHOUT_CLASSIFICATION	8.11539474086177E-7	TEST
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.999999428265059	WITHOUT_CLASSIFICATION	5.717349409118271E-7	TEST
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999877329008602	WITHOUT_CLASSIFICATION	1.2267099139716774E-5	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999999671696009	WITHOUT_CLASSIFICATION	3.283039906468822E-8	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9996134510398554	WITHOUT_CLASSIFICATION	3.865489601444822E-4	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999845434289021	WITHOUT_CLASSIFICATION	1.5456571097904972E-5	TEST
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999671119132917	WITHOUT_CLASSIFICATION	3.288808670821166E-5	TEST
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999971534692748	WITHOUT_CLASSIFICATION	2.8465307251815638E-6	TEST
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999957341901539	WITHOUT_CLASSIFICATION	4.265809846086829E-6	TEST
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.999914724730434	WITHOUT_CLASSIFICATION	8.527526956613334E-5	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.999999854121478	WITHOUT_CLASSIFICATION	1.458785220217866E-7	TEST
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9998308961875316	WITHOUT_CLASSIFICATION	1.6910381246828193E-4	TEST
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.999995994614804	WITHOUT_CLASSIFICATION	4.005385195994057E-6	TEST
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9976208257580043	WITHOUT_CLASSIFICATION	0.0023791742419956565	TEST
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.999981931565876	WITHOUT_CLASSIFICATION	1.8068434123959648E-5	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.999927881666978	WITHOUT_CLASSIFICATION	7.211833302203224E-5	TEST
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999999075861671	WITHOUT_CLASSIFICATION	9.241383284646415E-8	TEST
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999994183672963	WITHOUT_CLASSIFICATION	5.816327036465424E-7	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999045536073469	WITHOUT_CLASSIFICATION	9.544639265315208E-5	TEST
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999855283922966	WITHOUT_CLASSIFICATION	1.4471607703493476E-5	TEST
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9998328864472672	WITHOUT_CLASSIFICATION	1.67113552732741E-4	TEST
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999957276773793	WITHOUT_CLASSIFICATION	4.272322620617674E-6	TEST
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999891305064801	WITHOUT_CLASSIFICATION	1.0869493519848944E-5	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.999986564187038	WITHOUT_CLASSIFICATION	1.3435812962041567E-5	TEST
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999891305064801	WITHOUT_CLASSIFICATION	1.0869493519848944E-5	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999970068856514	WITHOUT_CLASSIFICATION	2.9931143485459476E-6	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.999986564187038	WITHOUT_CLASSIFICATION	1.3435812962041567E-5	TEST
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9997635033863951	WITHOUT_CLASSIFICATION	2.3649661360494108E-4	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999963866039795	WITHOUT_CLASSIFICATION	3.6133960205971904E-6	TEST
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9999829911389597	WITHOUT_CLASSIFICATION	1.7008861040288264E-5	TEST
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9685390426182834	WITHOUT_CLASSIFICATION	0.03146095738171664	TEST
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999961035771503	WITHOUT_CLASSIFICATION	3.8964228497893355E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.999993231336562	WITHOUT_CLASSIFICATION	6.768663437919563E-6	TEST
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999676114937827	WITHOUT_CLASSIFICATION	3.2388506217454425E-5	TEST
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9992855188619509	WITHOUT_CLASSIFICATION	7.144811380490313E-4	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999945591386138	WITHOUT_CLASSIFICATION	5.440861386132351E-6	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999695567484376	WITHOUT_CLASSIFICATION	3.044325156237522E-5	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999900438357168	WITHOUT_CLASSIFICATION	9.956164283220529E-6	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999968333496749	WITHOUT_CLASSIFICATION	3.1666503249941332E-6	TEST
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999969483870556	WITHOUT_CLASSIFICATION	3.0516129444643203E-6	TEST
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999938896911279	WITHOUT_CLASSIFICATION	6.110308872047959E-6	TEST
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999674208485669	WITHOUT_CLASSIFICATION	3.257915143311714E-5	TEST
// switch // while	WITHOUT_CLASSIFICATION	0.999995129703662	WITHOUT_CLASSIFICATION	4.870296337905991E-6	TEST
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9995657652595615	WITHOUT_CLASSIFICATION	4.3423474043856065E-4	TEST
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999423091789507	WITHOUT_CLASSIFICATION	5.769082104929094E-5	TEST
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999996068014277	WITHOUT_CLASSIFICATION	3.9319857229648986E-7	TEST
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999866506595887	WITHOUT_CLASSIFICATION	1.3349340411195633E-5	TEST
// expected	WITHOUT_CLASSIFICATION	0.9999949632301716	WITHOUT_CLASSIFICATION	5.036769828510527E-6	TEST
// Do nothing	WITHOUT_CLASSIFICATION	0.9999962334468165	WITHOUT_CLASSIFICATION	3.766553183519681E-6	TEST
// constructor	WITHOUT_CLASSIFICATION	0.9999953250821767	WITHOUT_CLASSIFICATION	4.6749178232957245E-6	TEST
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999175088875187	WITHOUT_CLASSIFICATION	8.249111248130401E-5	TEST
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999826490970247	WITHOUT_CLASSIFICATION	1.7350902975260687E-5	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.99983601687742	WITHOUT_CLASSIFICATION	1.6398312258009864E-4	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999526129264744	WITHOUT_CLASSIFICATION	4.7387073525550346E-5	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999980887811175	WITHOUT_CLASSIFICATION	1.911218882453388E-6	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999980887811175	WITHOUT_CLASSIFICATION	1.911218882453388E-6	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999948827444252	WITHOUT_CLASSIFICATION	5.117255574890272E-6	TEST
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.999997583487821	WITHOUT_CLASSIFICATION	2.4165121790291908E-6	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999983650519556	WITHOUT_CLASSIFICATION	1.6349480443473746E-6	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9986491987867224	WITHOUT_CLASSIFICATION	0.0013508012132775267	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9986491987867224	WITHOUT_CLASSIFICATION	0.0013508012132775267	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9986491987867224	WITHOUT_CLASSIFICATION	0.0013508012132775267	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9986491987867224	WITHOUT_CLASSIFICATION	0.0013508012132775267	TEST
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999913576938771	WITHOUT_CLASSIFICATION	8.642306122929416E-6	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.999989458344806	WITHOUT_CLASSIFICATION	1.0541655193946589E-5	TEST
// "else" body	WITHOUT_CLASSIFICATION	0.999994587292389	WITHOUT_CLASSIFICATION	5.412707611006837E-6	TEST
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9998584640559596	WITHOUT_CLASSIFICATION	1.4153594404041063E-4	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9998695080003474	WITHOUT_CLASSIFICATION	1.304919996527164E-4	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998665449646041	WITHOUT_CLASSIFICATION	1.334550353958456E-4	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998665449646041	WITHOUT_CLASSIFICATION	1.334550353958456E-4	TEST
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999979121336864	WITHOUT_CLASSIFICATION	2.0878663135738958E-6	TEST
/* 10! */	WITHOUT_CLASSIFICATION	0.999867702029106	WITHOUT_CLASSIFICATION	1.3229797089397573E-4	TEST
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999197928290335	WITHOUT_CLASSIFICATION	8.020717096646524E-5	TEST
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9997348652857292	WITHOUT_CLASSIFICATION	2.6513471427079793E-4	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999635316193669	WITHOUT_CLASSIFICATION	3.6468380632979255E-5	TEST
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999889043386555	WITHOUT_CLASSIFICATION	1.1095661344367236E-5	TEST
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999999752865414	WITHOUT_CLASSIFICATION	2.4713458620069124E-8	TEST
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.999859046324761	WITHOUT_CLASSIFICATION	1.409536752390594E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999970068856514	WITHOUT_CLASSIFICATION	2.9931143485459476E-6	TEST
// line 449	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 495	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999857220183849	WITHOUT_CLASSIFICATION	1.4277981615236383E-5	TEST
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.999999492425477	WITHOUT_CLASSIFICATION	5.075745230888035E-7	TEST
/* 14! */	WITHOUT_CLASSIFICATION	0.999867702029106	WITHOUT_CLASSIFICATION	1.3229797089397573E-4	TEST
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999669290672544	WITHOUT_CLASSIFICATION	3.3070932745645614E-5	TEST
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999942025918201	WITHOUT_CLASSIFICATION	5.79740817978368E-6	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999962829665874	WITHOUT_CLASSIFICATION	3.7170334125126093E-6	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999962829665874	WITHOUT_CLASSIFICATION	3.7170334125126093E-6	TEST
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999197928290335	WITHOUT_CLASSIFICATION	8.020717096646532E-5	TEST
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999999152638601	WITHOUT_CLASSIFICATION	8.473613980661533E-8	TEST
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999803142150309	WITHOUT_CLASSIFICATION	1.9685784969173574E-5	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999953084102664	WITHOUT_CLASSIFICATION	4.691589733516208E-6	TEST
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999969486393431	WITHOUT_CLASSIFICATION	3.051360656803362E-6	TEST
/* 18! */	WITHOUT_CLASSIFICATION	0.999867702029106	WITHOUT_CLASSIFICATION	1.3229797089397573E-4	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.999879180856254	WITHOUT_CLASSIFICATION	1.2081914374599404E-4	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999928442053753	WITHOUT_CLASSIFICATION	7.15579462466234E-6	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999928442053753	WITHOUT_CLASSIFICATION	7.15579462466234E-6	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999928442053753	WITHOUT_CLASSIFICATION	7.15579462466234E-6	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999928442053753	WITHOUT_CLASSIFICATION	7.15579462466234E-6	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999939926297761	WITHOUT_CLASSIFICATION	6.0073702240064525E-6	TEST
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999999846099173	WITHOUT_CLASSIFICATION	1.5390082624614318E-8	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999559488065849	WITHOUT_CLASSIFICATION	4.405119341502905E-5	TEST
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999353858291526	WITHOUT_CLASSIFICATION	6.461417084729871E-5	TEST
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999927873359968	WITHOUT_CLASSIFICATION	7.212664003250227E-6	TEST
/* 22! */	WITHOUT_CLASSIFICATION	0.999867702029106	WITHOUT_CLASSIFICATION	1.3229797089397573E-4	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999889598395798	WITHOUT_CLASSIFICATION	1.1040160420318486E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999703824115476	WITHOUT_CLASSIFICATION	2.961758845238613E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999703824115476	WITHOUT_CLASSIFICATION	2.961758845238613E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999703824115476	WITHOUT_CLASSIFICATION	2.961758845238613E-5	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9998778412275158	WITHOUT_CLASSIFICATION	1.2215877248422064E-4	TEST
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999985677377007	WITHOUT_CLASSIFICATION	1.4322622992937565E-6	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999829822553629	WITHOUT_CLASSIFICATION	1.7017744637147455E-5	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999829822553629	WITHOUT_CLASSIFICATION	1.7017744637147455E-5	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.999935982211484	WITHOUT_CLASSIFICATION	6.401778851591967E-5	TEST
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999998087292	WITHOUT_CLASSIFICATION	1.912708941562913E-10	TEST
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9998577343379408	WITHOUT_CLASSIFICATION	1.422656620591857E-4	TEST
// BASE64	WITHOUT_CLASSIFICATION	0.999935982211484	WITHOUT_CLASSIFICATION	6.401778851591967E-5	TEST
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999994955252007	WITHOUT_CLASSIFICATION	5.044747992500336E-7	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999981245494198	WITHOUT_CLASSIFICATION	1.8754505801315086E-6	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999984702382299	WITHOUT_CLASSIFICATION	1.529761770050803E-6	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999984702382299	WITHOUT_CLASSIFICATION	1.529761770050803E-6	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999837291118315	WITHOUT_CLASSIFICATION	1.6270888168515888E-5	TEST
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999996487987833	WITHOUT_CLASSIFICATION	3.512012166824664E-7	TEST
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999998288705658	WITHOUT_CLASSIFICATION	1.711294340837868E-7	TEST
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9998524905195887	WITHOUT_CLASSIFICATION	1.4750948041121373E-4	TEST
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9998842758871558	WITHOUT_CLASSIFICATION	1.1572411284416296E-4	TEST
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.999999814145171	WITHOUT_CLASSIFICATION	1.8585482909673493E-7	TEST
// carriage return	WITHOUT_CLASSIFICATION	0.9999970211154866	WITHOUT_CLASSIFICATION	2.9788845133587375E-6	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9998772571915577	WITHOUT_CLASSIFICATION	1.227428084423648E-4	TEST
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999691026391455	WITHOUT_CLASSIFICATION	3.089736085451307E-5	TEST
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999969389557366	WITHOUT_CLASSIFICATION	3.0610442632928876E-6	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999931240353207	WITHOUT_CLASSIFICATION	6.875964679273987E-6	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.999997526205951	WITHOUT_CLASSIFICATION	2.4737940490380553E-6	TEST
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999913567175529	WITHOUT_CLASSIFICATION	8.643282447118767E-6	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999946917832806	WITHOUT_CLASSIFICATION	5.308216719475227E-6	TEST
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.999999476105457	WITHOUT_CLASSIFICATION	5.238945428882564E-7	TEST
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999997946386475	WITHOUT_CLASSIFICATION	2.053613523666654E-7	TEST
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999897706199108	WITHOUT_CLASSIFICATION	1.0229380089245593E-5	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999974988144912	WITHOUT_CLASSIFICATION	2.5011855086833856E-6	TEST
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999891732761453	WITHOUT_CLASSIFICATION	1.0826723854647044E-5	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999992729742349	WITHOUT_CLASSIFICATION	7.270257651387939E-7	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999938867729109	WITHOUT_CLASSIFICATION	6.113227089083347E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999967526357527	WITHOUT_CLASSIFICATION	3.2473642473222313E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999967526357527	WITHOUT_CLASSIFICATION	3.2473642473222313E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999967526357527	WITHOUT_CLASSIFICATION	3.2473642473222313E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999967526357527	WITHOUT_CLASSIFICATION	3.2473642473222313E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999967526357527	WITHOUT_CLASSIFICATION	3.2473642473222313E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999967526357527	WITHOUT_CLASSIFICATION	3.2473642473222313E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999967526357527	WITHOUT_CLASSIFICATION	3.2473642473222313E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999967526357527	WITHOUT_CLASSIFICATION	3.2473642473222313E-6	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999708714318642	WITHOUT_CLASSIFICATION	2.912856813572244E-5	TEST
/* fall through */	WITHOUT_CLASSIFICATION	0.9999902324182043	WITHOUT_CLASSIFICATION	9.767581795708691E-6	TEST
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9957217832648372	WITHOUT_CLASSIFICATION	0.004278216735162782	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.999942610404311	WITHOUT_CLASSIFICATION	5.738959568897758E-5	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999991884605258	WITHOUT_CLASSIFICATION	8.11539474086177E-7	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999991884605258	WITHOUT_CLASSIFICATION	8.11539474086177E-7	TEST
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.999984773354146	WITHOUT_CLASSIFICATION	1.5226645854027907E-5	TEST
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999991709491278	WITHOUT_CLASSIFICATION	8.290508722487842E-7	TEST
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999746511608693	WITHOUT_CLASSIFICATION	2.534883913075009E-5	TEST
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999828507789099	WITHOUT_CLASSIFICATION	1.7149221090095363E-5	TEST
// get current context	WITHOUT_CLASSIFICATION	0.9999959774894525	WITHOUT_CLASSIFICATION	4.022510547516425E-6	TEST
// octal constant	WITHOUT_CLASSIFICATION	0.9999946534767514	WITHOUT_CLASSIFICATION	5.346523248590564E-6	TEST
// read	WITHOUT_CLASSIFICATION	0.9999393006758872	WITHOUT_CLASSIFICATION	6.069932411283911E-5	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999549701124575	WITHOUT_CLASSIFICATION	4.502988754243634E-5	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9998623371952404	WITHOUT_CLASSIFICATION	1.3766280475966574E-4	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999895418382755	WITHOUT_CLASSIFICATION	1.0458161724576844E-5	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999895418382755	WITHOUT_CLASSIFICATION	1.0458161724576844E-5	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999895418382755	WITHOUT_CLASSIFICATION	1.0458161724576844E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999854905825101	WITHOUT_CLASSIFICATION	1.4509417489794947E-5	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999293113835089	WITHOUT_CLASSIFICATION	7.068861649113117E-5	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999326356551984	WITHOUT_CLASSIFICATION	6.736434480155877E-5	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999904228885135	WITHOUT_CLASSIFICATION	9.577111486564572E-6	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999874450385048	WITHOUT_CLASSIFICATION	1.2554961495222098E-5	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999973592425698	WITHOUT_CLASSIFICATION	2.640757430133651E-6	TEST
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999938084854926	WITHOUT_CLASSIFICATION	6.19151450736078E-6	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999264972578534	WITHOUT_CLASSIFICATION	7.350274214658146E-5	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999264972578534	WITHOUT_CLASSIFICATION	7.350274214658146E-5	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999954377173018	WITHOUT_CLASSIFICATION	4.562282698136834E-6	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999718941738526	WITHOUT_CLASSIFICATION	2.8105826147424423E-5	TEST
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999990180479373	WITHOUT_CLASSIFICATION	9.819520625899824E-7	TEST
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999843614655155	WITHOUT_CLASSIFICATION	1.563853448450561E-5	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999968959788378	WITHOUT_CLASSIFICATION	3.104021162290149E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999968959788378	WITHOUT_CLASSIFICATION	3.104021162290149E-6	TEST
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999880990679919	WITHOUT_CLASSIFICATION	1.1900932008214416E-5	TEST
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999726000195104	WITHOUT_CLASSIFICATION	2.7399980489697815E-5	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999600041036342	WITHOUT_CLASSIFICATION	3.999589636590987E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999828108367415	WITHOUT_CLASSIFICATION	1.7189163258556574E-5	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999916196811183	WITHOUT_CLASSIFICATION	8.380318881611068E-6	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999916196811183	WITHOUT_CLASSIFICATION	8.380318881611068E-6	TEST
// check arity	WITHOUT_CLASSIFICATION	0.9999974271747614	WITHOUT_CLASSIFICATION	2.572825238691647E-6	TEST
// check arity	WITHOUT_CLASSIFICATION	0.9999974271747614	WITHOUT_CLASSIFICATION	2.572825238691647E-6	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999988705838065	WITHOUT_CLASSIFICATION	1.1294161935041999E-6	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999893982136404	WITHOUT_CLASSIFICATION	1.0601786359637071E-5	TEST
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999760045560616	WITHOUT_CLASSIFICATION	2.399544393837497E-5	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.999935982211484	WITHOUT_CLASSIFICATION	6.401778851591967E-5	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999704918232368	WITHOUT_CLASSIFICATION	2.950817676316502E-5	TEST
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999963524754573	WITHOUT_CLASSIFICATION	3.6475245427063748E-6	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999858805110591	WITHOUT_CLASSIFICATION	1.4119488940929964E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999377769259606	WITHOUT_CLASSIFICATION	6.222307403927364E-5	TEST
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999985222808166	WITHOUT_CLASSIFICATION	1.4777191833818042E-6	TEST
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999998399569235	WITHOUT_CLASSIFICATION	1.600430765341606E-7	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999946196915696	WITHOUT_CLASSIFICATION	5.380308430362715E-6	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.999996361280202	WITHOUT_CLASSIFICATION	3.63871979807435E-6	TEST
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9995499917612141	WITHOUT_CLASSIFICATION	4.500082387860194E-4	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999786557208007	WITHOUT_CLASSIFICATION	2.134427919931367E-5	TEST
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999995562870403	WITHOUT_CLASSIFICATION	4.43712959710315E-7	TEST
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999921820347739	WITHOUT_CLASSIFICATION	7.817965226064162E-6	TEST
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999413988239464	WITHOUT_CLASSIFICATION	5.860117605365749E-5	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999961063281667	WITHOUT_CLASSIFICATION	3.893671833282916E-6	TEST
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9993284361364653	WITHOUT_CLASSIFICATION	6.71563863534819E-4	TEST
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999597982184516	WITHOUT_CLASSIFICATION	4.020178154835019E-5	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999968333496749	WITHOUT_CLASSIFICATION	3.1666503249941332E-6	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.999991654415228	WITHOUT_CLASSIFICATION	8.345584771926757E-6	TEST
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999953873485561	WITHOUT_CLASSIFICATION	4.612651443940693E-6	TEST
// coerce arguments	WITHOUT_CLASSIFICATION	0.999994792748512	WITHOUT_CLASSIFICATION	5.207251488022774E-6	TEST
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9998811050655572	WITHOUT_CLASSIFICATION	1.1889493444291654E-4	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999895904502795	WITHOUT_CLASSIFICATION	1.0409549720545385E-5	TEST
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999969708769819	WITHOUT_CLASSIFICATION	3.0291230181496925E-6	TEST
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999812580913158	WITHOUT_CLASSIFICATION	1.874190868422466E-5	TEST
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999995809568223	WITHOUT_CLASSIFICATION	4.190431777072705E-7	TEST
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999946041234793	WITHOUT_CLASSIFICATION	5.395876520676482E-6	TEST
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.999985185804788	WITHOUT_CLASSIFICATION	1.4814195212087476E-5	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999982046473125	WITHOUT_CLASSIFICATION	1.7953526876099584E-6	TEST
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999952976665551	WITHOUT_CLASSIFICATION	4.702333444818067E-6	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999874270766592	WITHOUT_CLASSIFICATION	1.2572923340731748E-5	TEST
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999788864393405	WITHOUT_CLASSIFICATION	2.111356065950334E-5	TEST
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999878767292298	WITHOUT_CLASSIFICATION	1.212327077007575E-5	TEST
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999827501580869	WITHOUT_CLASSIFICATION	1.7249841913129765E-5	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999597070443071	WITHOUT_CLASSIFICATION	4.029295569291483E-5	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999995813198927	WITHOUT_CLASSIFICATION	4.1868010723709766E-7	TEST
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999989919289117	WITHOUT_CLASSIFICATION	1.008071088247842E-6	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999361394369087	WITHOUT_CLASSIFICATION	6.386056309120496E-5	TEST
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9997560921564986	WITHOUT_CLASSIFICATION	2.439078435013441E-4	TEST
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999859303113071	WITHOUT_CLASSIFICATION	1.406968869286057E-5	TEST
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999901421976116	WITHOUT_CLASSIFICATION	9.85780238836026E-6	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999582088835666	WITHOUT_CLASSIFICATION	4.1791116433443426E-5	TEST
// specific arity	WITHOUT_CLASSIFICATION	0.999995813708281	WITHOUT_CLASSIFICATION	4.186291719110614E-6	TEST
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.999996762724577	WITHOUT_CLASSIFICATION	3.237275422972308E-6	TEST
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999595201820163	WITHOUT_CLASSIFICATION	4.0479817983603584E-5	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999674208485669	WITHOUT_CLASSIFICATION	3.257915143311714E-5	TEST
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999524220237911	WITHOUT_CLASSIFICATION	4.757797620880847E-5	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999864592991533	WITHOUT_CLASSIFICATION	1.3540700846741492E-5	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999864592991533	WITHOUT_CLASSIFICATION	1.3540700846741492E-5	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.999942741176573	WITHOUT_CLASSIFICATION	5.72588234270284E-5	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.999942741176573	WITHOUT_CLASSIFICATION	5.72588234270284E-5	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998654750457848	WITHOUT_CLASSIFICATION	1.345249542152604E-4	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998654750457848	WITHOUT_CLASSIFICATION	1.345249542152604E-4	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999902369859132	WITHOUT_CLASSIFICATION	9.76301408689433E-6	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999902369859132	WITHOUT_CLASSIFICATION	9.76301408689433E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999843064334205	WITHOUT_CLASSIFICATION	1.5693566579503803E-5	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999843064334205	WITHOUT_CLASSIFICATION	1.5693566579503803E-5	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999843064334205	WITHOUT_CLASSIFICATION	1.5693566579503803E-5	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999436183167885	WITHOUT_CLASSIFICATION	5.638168321155189E-5	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999907017786165	WITHOUT_CLASSIFICATION	9.298221383415799E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999907017786165	WITHOUT_CLASSIFICATION	9.298221383415799E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999907017786165	WITHOUT_CLASSIFICATION	9.298221383415799E-6	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999701816383467	WITHOUT_CLASSIFICATION	2.981836165332985E-5	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999701816383467	WITHOUT_CLASSIFICATION	2.981836165332985E-5	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999701816383467	WITHOUT_CLASSIFICATION	2.981836165332985E-5	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999674208485669	WITHOUT_CLASSIFICATION	3.257915143311714E-5	TEST
// backspace	WITHOUT_CLASSIFICATION	0.9999944074335645	WITHOUT_CLASSIFICATION	5.592566435560484E-6	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
/* package-private */	WITHOUT_CLASSIFICATION	0.9999707049136777	WITHOUT_CLASSIFICATION	2.9295086322213073E-5	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999952738546521	WITHOUT_CLASSIFICATION	4.726145347830808E-6	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999952738546521	WITHOUT_CLASSIFICATION	4.726145347830808E-6	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999902646750292	WITHOUT_CLASSIFICATION	9.735324970803911E-6	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999787907646219	WITHOUT_CLASSIFICATION	2.1209235378032223E-5	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999787907646219	WITHOUT_CLASSIFICATION	2.1209235378032223E-5	TEST
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.82095895553207	WITHOUT_CLASSIFICATION	0.17904104446793	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.999929650482096	WITHOUT_CLASSIFICATION	7.034951790389298E-5	TEST
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999562872490401	WITHOUT_CLASSIFICATION	4.3712750959924654E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999984642294639	WITHOUT_CLASSIFICATION	1.5357705360914624E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999984642294639	WITHOUT_CLASSIFICATION	1.5357705360914624E-5	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999941508548708	WITHOUT_CLASSIFICATION	5.849145129235561E-6	TEST
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9994754225222928	WITHOUT_CLASSIFICATION	5.245774777071702E-4	TEST
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999438332889548	WITHOUT_CLASSIFICATION	5.6166711045258314E-5	TEST
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999887967269168	WITHOUT_CLASSIFICATION	1.1203273083224968E-5	TEST
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9991274308443946	WITHOUT_CLASSIFICATION	8.725691556055133E-4	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999984642294639	WITHOUT_CLASSIFICATION	1.5357705360914624E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999984642294639	WITHOUT_CLASSIFICATION	1.5357705360914624E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999984642294639	WITHOUT_CLASSIFICATION	1.5357705360914624E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999984642294639	WITHOUT_CLASSIFICATION	1.5357705360914624E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999984642294639	WITHOUT_CLASSIFICATION	1.5357705360914624E-5	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999908981097035	WITHOUT_CLASSIFICATION	9.101890296371549E-6	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999664566231726	WITHOUT_CLASSIFICATION	3.3543376827447596E-5	TEST
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999994170137382	WITHOUT_CLASSIFICATION	5.829862618356466E-7	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999624046332055	WITHOUT_CLASSIFICATION	3.759536679447473E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999987713848151	WITHOUT_CLASSIFICATION	1.2286151849083452E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999987713848151	WITHOUT_CLASSIFICATION	1.2286151849083452E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999987713848151	WITHOUT_CLASSIFICATION	1.2286151849083452E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999987713848151	WITHOUT_CLASSIFICATION	1.2286151849083452E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999987713848151	WITHOUT_CLASSIFICATION	1.2286151849083452E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999987713848151	WITHOUT_CLASSIFICATION	1.2286151849083452E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999987713848151	WITHOUT_CLASSIFICATION	1.2286151849083452E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999987713848151	WITHOUT_CLASSIFICATION	1.2286151849083452E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999987713848151	WITHOUT_CLASSIFICATION	1.2286151849083452E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999987713848151	WITHOUT_CLASSIFICATION	1.2286151849083452E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999987713848151	WITHOUT_CLASSIFICATION	1.2286151849083452E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999987713848151	WITHOUT_CLASSIFICATION	1.2286151849083452E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999987713848151	WITHOUT_CLASSIFICATION	1.2286151849083452E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999987713848151	WITHOUT_CLASSIFICATION	1.2286151849083452E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999987713848151	WITHOUT_CLASSIFICATION	1.2286151849083452E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999987713848151	WITHOUT_CLASSIFICATION	1.2286151849083452E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999987713848151	WITHOUT_CLASSIFICATION	1.2286151849083452E-5	TEST
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999998257659782	WITHOUT_CLASSIFICATION	1.7423402172146052E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999987713848151	WITHOUT_CLASSIFICATION	1.2286151849083452E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999987713848151	WITHOUT_CLASSIFICATION	1.2286151849083452E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999987713848151	WITHOUT_CLASSIFICATION	1.2286151849083452E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999987713848151	WITHOUT_CLASSIFICATION	1.2286151849083452E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999987713848151	WITHOUT_CLASSIFICATION	1.2286151849083452E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999987713848151	WITHOUT_CLASSIFICATION	1.2286151849083452E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999987713848151	WITHOUT_CLASSIFICATION	1.2286151849083452E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999987713848151	WITHOUT_CLASSIFICATION	1.2286151849083452E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999987713848151	WITHOUT_CLASSIFICATION	1.2286151849083452E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999987713848151	WITHOUT_CLASSIFICATION	1.2286151849083452E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999987713848151	WITHOUT_CLASSIFICATION	1.2286151849083452E-5	TEST
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.999987498645128	WITHOUT_CLASSIFICATION	1.2501354872093992E-5	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.99924331581999	WITHOUT_CLASSIFICATION	7.566841800099915E-4	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.999992671918093	WITHOUT_CLASSIFICATION	7.328081907005148E-6	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999969142962625	WITHOUT_CLASSIFICATION	3.085703737507345E-6	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.99997209587138	WITHOUT_CLASSIFICATION	2.7904128619867018E-5	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.999927881666978	WITHOUT_CLASSIFICATION	7.211833302203224E-5	TEST
// only public methods	WITHOUT_CLASSIFICATION	0.999991110997298	WITHOUT_CLASSIFICATION	8.889002702090715E-6	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999685988257674	WITHOUT_CLASSIFICATION	3.140117423265466E-5	TEST
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999995023417587	WITHOUT_CLASSIFICATION	4.976582412495116E-7	TEST
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9999995704090128	WITHOUT_CLASSIFICATION	4.295909872705111E-7	TEST
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999926914760424	WITHOUT_CLASSIFICATION	7.30852395760429E-6	TEST
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999999878696892	WITHOUT_CLASSIFICATION	1.2130310689553159E-8	TEST
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999960529343291	WITHOUT_CLASSIFICATION	3.94706567083192E-6	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999927374487322	WITHOUT_CLASSIFICATION	7.2625512677331435E-6	TEST
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999586679123613	WITHOUT_CLASSIFICATION	4.1332087638718565E-5	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.999990010447961	WITHOUT_CLASSIFICATION	9.98955203897039E-6	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999999671696009	WITHOUT_CLASSIFICATION	3.283039906468822E-8	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998443715157842	WITHOUT_CLASSIFICATION	1.5562848421575448E-4	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998443715157842	WITHOUT_CLASSIFICATION	1.5562848421575448E-4	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998443715157842	WITHOUT_CLASSIFICATION	1.5562848421575448E-4	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998443715157842	WITHOUT_CLASSIFICATION	1.5562848421575448E-4	TEST
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999990035677558	WITHOUT_CLASSIFICATION	9.964322441593953E-7	TEST
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999467094041848	WITHOUT_CLASSIFICATION	5.329059581521219E-5	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999759636818593	WITHOUT_CLASSIFICATION	2.4036318140732893E-5	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999759636818593	WITHOUT_CLASSIFICATION	2.4036318140732893E-5	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999993705577497	WITHOUT_CLASSIFICATION	6.294422503519613E-7	TEST
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999519436102845	WITHOUT_CLASSIFICATION	4.8056389715584824E-5	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999927939425312	WITHOUT_CLASSIFICATION	7.206057468805601E-6	TEST
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999921237967507	WITHOUT_CLASSIFICATION	7.876203249200585E-6	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999828094969964	WITHOUT_CLASSIFICATION	1.7190503003570256E-5	TEST
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999562737813849	WITHOUT_CLASSIFICATION	4.372621861517461E-5	TEST
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999860008885835	WITHOUT_CLASSIFICATION	1.3999111416439394E-5	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999954064181092	WITHOUT_CLASSIFICATION	4.593581890726732E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999954064181092	WITHOUT_CLASSIFICATION	4.593581890726732E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999954064181092	WITHOUT_CLASSIFICATION	4.593581890726732E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999954064181092	WITHOUT_CLASSIFICATION	4.593581890726732E-6	TEST
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999951314002568	WITHOUT_CLASSIFICATION	4.868599743242003E-6	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999976967545791	WITHOUT_CLASSIFICATION	2.303245420934793E-6	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999976967545791	WITHOUT_CLASSIFICATION	2.303245420934793E-6	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999976967545791	WITHOUT_CLASSIFICATION	2.303245420934793E-6	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999896227076842	WITHOUT_CLASSIFICATION	1.037729231579614E-5	TEST
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999753173182964	WITHOUT_CLASSIFICATION	2.46826817036204E-5	TEST
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999871207325923	WITHOUT_CLASSIFICATION	1.2879267407650925E-5	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9986491987867224	WITHOUT_CLASSIFICATION	0.0013508012132775267	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9986491987867224	WITHOUT_CLASSIFICATION	0.0013508012132775267	TEST
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999935064633828	WITHOUT_CLASSIFICATION	6.493536617183628E-6	TEST
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999996294331585	WITHOUT_CLASSIFICATION	3.705668414992529E-7	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.9999927255523586	WITHOUT_CLASSIFICATION	7.27444764146392E-6	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.9999927255523586	WITHOUT_CLASSIFICATION	7.27444764146392E-6	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999796422960522	WITHOUT_CLASSIFICATION	2.0357703947778126E-5	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999796422960522	WITHOUT_CLASSIFICATION	2.0357703947778126E-5	TEST
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999093420110396	WITHOUT_CLASSIFICATION	9.065798896028021E-5	TEST
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999476701493664	WITHOUT_CLASSIFICATION	5.2329850633538115E-5	TEST
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999673559214823	WITHOUT_CLASSIFICATION	3.264407851770205E-5	TEST
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999832044781153	WITHOUT_CLASSIFICATION	1.6795521884685062E-5	TEST
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999707599405248	WITHOUT_CLASSIFICATION	2.924005947521887E-5	TEST
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999955837883241	WITHOUT_CLASSIFICATION	4.416211675832281E-6	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999674044487643	WITHOUT_CLASSIFICATION	3.259555123570562E-5	TEST
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999969955687964	WITHOUT_CLASSIFICATION	3.004431203564419E-6	TEST
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999165415413992	WITHOUT_CLASSIFICATION	8.345845860073544E-5	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.999985501882394	WITHOUT_CLASSIFICATION	1.4498117606055044E-5	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.999985501882394	WITHOUT_CLASSIFICATION	1.4498117606055044E-5	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999955397542198	WITHOUT_CLASSIFICATION	4.460245780211821E-6	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999955397542198	WITHOUT_CLASSIFICATION	4.460245780211821E-6	TEST
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999943347093893	WITHOUT_CLASSIFICATION	5.665290610701383E-6	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999857661134774	WITHOUT_CLASSIFICATION	1.4233886522453335E-5	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999884330985582	WITHOUT_CLASSIFICATION	1.1566901441793626E-5	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9996223186498032	WITHOUT_CLASSIFICATION	3.7768135019680774E-4	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9996223186498032	WITHOUT_CLASSIFICATION	3.7768135019680774E-4	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9996223186498032	WITHOUT_CLASSIFICATION	3.7768135019680774E-4	TEST
// line 286	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 476	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 513	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 530	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 533	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 551	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// end loop	WITHOUT_CLASSIFICATION	0.9999970463507064	WITHOUT_CLASSIFICATION	2.953649293627173E-6	TEST
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9998714307278003	WITHOUT_CLASSIFICATION	1.285692721997248E-4	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999991514373116	WITHOUT_CLASSIFICATION	8.48562688498159E-7	TEST
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9999948015270281	WITHOUT_CLASSIFICATION	5.198472971927768E-6	TEST
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9997936926834247	WITHOUT_CLASSIFICATION	2.063073165753685E-4	TEST
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999829688454921	WITHOUT_CLASSIFICATION	1.7031154507993043E-5	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9986491987867224	WITHOUT_CLASSIFICATION	0.0013508012132775267	TEST
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999997405558692	WITHOUT_CLASSIFICATION	2.5944413080384856E-7	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999437483031355	WITHOUT_CLASSIFICATION	5.6251696864497016E-5	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999980887811175	WITHOUT_CLASSIFICATION	1.911218882453388E-6	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9992620074814743	WITHOUT_CLASSIFICATION	7.37992518525722E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9992620074814743	WITHOUT_CLASSIFICATION	7.37992518525722E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9992620074814743	WITHOUT_CLASSIFICATION	7.37992518525722E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9992620074814743	WITHOUT_CLASSIFICATION	7.37992518525722E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9992620074814743	WITHOUT_CLASSIFICATION	7.37992518525722E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.999933707420008	WITHOUT_CLASSIFICATION	6.629257999204648E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9992620074814743	WITHOUT_CLASSIFICATION	7.37992518525722E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9992620074814743	WITHOUT_CLASSIFICATION	7.37992518525722E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9992620074814743	WITHOUT_CLASSIFICATION	7.37992518525722E-4	TEST
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999899510676376	WITHOUT_CLASSIFICATION	1.0048932362396821E-5	TEST
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999851867394361	WITHOUT_CLASSIFICATION	1.4813260563899198E-5	TEST
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9996615665015375	WITHOUT_CLASSIFICATION	3.3843349846250794E-4	TEST
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999390808336581	WITHOUT_CLASSIFICATION	6.091916634182634E-5	TEST
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9998596741326631	WITHOUT_CLASSIFICATION	1.4032586733685933E-4	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9996761523555351	WITHOUT_CLASSIFICATION	3.2384764446491036E-4	TEST
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999841822666169	WITHOUT_CLASSIFICATION	1.581773338317056E-5	TEST
// line 572	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 625	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 649	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 723	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 745	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 766	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 785	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 800	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 812	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 827	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 864	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 886	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 911	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 929	WITHOUT_CLASSIFICATION	0.9999961307438079	WITHOUT_CLASSIFICATION	3.869256192067403E-6	TEST
// line 952	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 970	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 972	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 991	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1011	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1026	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1067	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1085	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1145	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1169	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1201	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1229	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1287	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1293	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1307	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1325	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1363	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1398	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1473	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1492	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1523	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1562	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1582	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1620	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1635	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1652	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1681	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1755	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1789	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999944032300573	WITHOUT_CLASSIFICATION	5.5967699427544115E-6	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999863050463706	WITHOUT_CLASSIFICATION	1.3694953629366529E-5	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9997485969518165	WITHOUT_CLASSIFICATION	2.514030481835535E-4	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9998600882037241	WITHOUT_CLASSIFICATION	1.399117962759736E-4	TEST
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999929977283979	WITHOUT_CLASSIFICATION	7.002271602043661E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999946329301779	WITHOUT_CLASSIFICATION	5.36706982217359E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999946329301779	WITHOUT_CLASSIFICATION	5.36706982217359E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999946329301779	WITHOUT_CLASSIFICATION	5.36706982217359E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999946329301779	WITHOUT_CLASSIFICATION	5.36706982217359E-6	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9996408054037693	WITHOUT_CLASSIFICATION	3.591945962307435E-4	TEST
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999992727804979	WITHOUT_CLASSIFICATION	7.272195021004803E-7	TEST
// line 313	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 339	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 361	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 413	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 451	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 472	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 500	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 515	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 555	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 582	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 619	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 636	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 669	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 703	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 776	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 814	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 823	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 854	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 872	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 905	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 925	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 958	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 992	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1047	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1072	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1081	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1108	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1136	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1168	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1192	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1241	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1267	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1286	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1301	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1314	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1333	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1362	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1395	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1420	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1439	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1476	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1535	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1588	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1618	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1643	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1669	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1728	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1753	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1779	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1794	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1812	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1837	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1895	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1925	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1950	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 1992	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// line 2014	WITHOUT_CLASSIFICATION	0.9999961305036721	WITHOUT_CLASSIFICATION	3.86949632793776E-6	TEST
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999380093402844	WITHOUT_CLASSIFICATION	6.199065971562407E-5	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999939312818692	WITHOUT_CLASSIFICATION	6.068718130747871E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999962443285195	WITHOUT_CLASSIFICATION	3.7556714804100154E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999962443285195	WITHOUT_CLASSIFICATION	3.7556714804100154E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999962443285195	WITHOUT_CLASSIFICATION	3.7556714804100154E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999962443285195	WITHOUT_CLASSIFICATION	3.7556714804100154E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999962443285195	WITHOUT_CLASSIFICATION	3.7556714804100154E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999962443285195	WITHOUT_CLASSIFICATION	3.7556714804100154E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999962443285195	WITHOUT_CLASSIFICATION	3.7556714804100154E-6	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999816690705311	WITHOUT_CLASSIFICATION	1.8330929468940984E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999816690705311	WITHOUT_CLASSIFICATION	1.8330929468940984E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999816690705311	WITHOUT_CLASSIFICATION	1.8330929468940984E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999816690705311	WITHOUT_CLASSIFICATION	1.8330929468940984E-5	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9995854081679226	WITHOUT_CLASSIFICATION	4.1459183207729624E-4	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9995854081679226	WITHOUT_CLASSIFICATION	4.1459183207729624E-4	TEST
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999032196550068	WITHOUT_CLASSIFICATION	9.678034499312563E-5	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999996497235659	WITHOUT_CLASSIFICATION	3.5027643408821167E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999996497235659	WITHOUT_CLASSIFICATION	3.5027643408821167E-7	TEST
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999633466266062	WITHOUT_CLASSIFICATION	3.665337339374217E-5	TEST
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999955275781587	WITHOUT_CLASSIFICATION	4.4724218413178615E-6	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999678422246006	WITHOUT_CLASSIFICATION	3.2157775399385885E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999678422246006	WITHOUT_CLASSIFICATION	3.2157775399385885E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999678422246006	WITHOUT_CLASSIFICATION	3.2157775399385885E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999678422246006	WITHOUT_CLASSIFICATION	3.2157775399385885E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999678422246006	WITHOUT_CLASSIFICATION	3.2157775399385885E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999678422246006	WITHOUT_CLASSIFICATION	3.2157775399385885E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999678422246006	WITHOUT_CLASSIFICATION	3.2157775399385885E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999678422246006	WITHOUT_CLASSIFICATION	3.2157775399385885E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999678422246006	WITHOUT_CLASSIFICATION	3.2157775399385885E-5	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999906863930982	WITHOUT_CLASSIFICATION	9.313606901777733E-6	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999906863930982	WITHOUT_CLASSIFICATION	9.313606901777733E-6	TEST
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999925725611643	WITHOUT_CLASSIFICATION	7.427438835794825E-6	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999893831161633	WITHOUT_CLASSIFICATION	1.061688383669016E-5	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999893831161633	WITHOUT_CLASSIFICATION	1.061688383669016E-5	TEST
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999986444750698	WITHOUT_CLASSIFICATION	1.355524930224975E-6	TEST
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.7916676504392801	WITHOUT_CLASSIFICATION	0.20833234956072003	TEST
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999998416817028	WITHOUT_CLASSIFICATION	1.583182972510359E-7	TEST
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999941836361117	WITHOUT_CLASSIFICATION	5.816363888374698E-6	TEST
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999734940793239	WITHOUT_CLASSIFICATION	2.650592067601132E-5	TEST
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999674373091405	WITHOUT_CLASSIFICATION	3.256269085955225E-5	TEST
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999965640320101	WITHOUT_CLASSIFICATION	3.435967989991143E-6	TEST
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999919768904035	WITHOUT_CLASSIFICATION	8.023109596398958E-6	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9993761418691752	WITHOUT_CLASSIFICATION	6.238581308247147E-4	TEST
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9997468874054183	WITHOUT_CLASSIFICATION	2.5311259458170104E-4	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9904539339104389	WITHOUT_CLASSIFICATION	0.009546066089561116	TEST
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999987630079764	WITHOUT_CLASSIFICATION	1.2369920236072893E-6	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999897682905009	WITHOUT_CLASSIFICATION	1.0231709499042927E-5	TEST
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999978697862569	WITHOUT_CLASSIFICATION	2.130213743028513E-6	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999216544994717	WITHOUT_CLASSIFICATION	7.834550052833399E-5	TEST
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999954925278657	WITHOUT_CLASSIFICATION	4.507472134303783E-6	TEST
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999617098293571	WITHOUT_CLASSIFICATION	3.8290170643002076E-5	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9997988328931283	WITHOUT_CLASSIFICATION	2.01167106871723E-4	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999636257049912	WITHOUT_CLASSIFICATION	3.6374295008889904E-5	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999636257049912	WITHOUT_CLASSIFICATION	3.6374295008889904E-5	TEST
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999840822493135	WITHOUT_CLASSIFICATION	1.591775068661121E-5	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999952681004242	WITHOUT_CLASSIFICATION	4.7318995758090495E-5	TEST
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999828135942587	WITHOUT_CLASSIFICATION	1.7186405741367456E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9992422026789459	WITHOUT_CLASSIFICATION	7.577973210540187E-4	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999006174650755	WITHOUT_CLASSIFICATION	9.938253492442335E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999006174650755	WITHOUT_CLASSIFICATION	9.938253492442335E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999006174650755	WITHOUT_CLASSIFICATION	9.938253492442335E-5	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.99999807311782	WITHOUT_CLASSIFICATION	1.926882180055918E-6	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999174639848794	WITHOUT_CLASSIFICATION	8.253601512068968E-5	TEST
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999974088857421	WITHOUT_CLASSIFICATION	2.591114258052936E-6	TEST
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999999264738705	WITHOUT_CLASSIFICATION	7.352612962771061E-8	TEST
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999983315418425	WITHOUT_CLASSIFICATION	1.668458157485439E-6	TEST
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999997236564065	WITHOUT_CLASSIFICATION	2.763435933967045E-7	TEST
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.999992076419178	WITHOUT_CLASSIFICATION	7.923580821949193E-6	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999684000232751	WITHOUT_CLASSIFICATION	3.159997672492413E-5	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999996378049326	WITHOUT_CLASSIFICATION	3.6219506732684714E-7	TEST
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999824082452384	WITHOUT_CLASSIFICATION	1.7591754761595547E-5	TEST
// reset buffer	WITHOUT_CLASSIFICATION	0.9999949789201066	WITHOUT_CLASSIFICATION	5.021079893352583E-6	TEST
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999958529436518	WITHOUT_CLASSIFICATION	4.147056348179075E-6	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8734671691668253	WITHOUT_CLASSIFICATION	0.12653283083317465	TEST
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999785135597888	WITHOUT_CLASSIFICATION	2.1486440211190932E-5	TEST
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999976708816154	WITHOUT_CLASSIFICATION	2.329118384629132E-6	TEST
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999536529308533	WITHOUT_CLASSIFICATION	4.634706914674656E-5	TEST
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.99997990618646	WITHOUT_CLASSIFICATION	2.0093813540003158E-5	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9998606283845936	WITHOUT_CLASSIFICATION	1.393716154064233E-4	TEST
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999981750015743	WITHOUT_CLASSIFICATION	1.824998425661727E-6	TEST
