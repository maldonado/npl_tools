// ?R  | boolean | True if file is readable by the real uid/gid of the caller // FIXME: Need to implement an readable_real_p in FileTest	TEST	0.9999806518693432	WITHOUT_CLASSIFICATION	1.934813065686125E-5	TEST
// TODO make an assert here	TEST	0.9649225530493386	WITHOUT_CLASSIFICATION	0.03507744695066142	TEST
// TODO add test methods here. The name must begin with 'test'. For example:	TEST	0.91108278776671	TEST	0.08891721223328998	WITHOUT_CLASSIFICATION
// TODO: Make into an assert once I get things like blockbodynodes to be implicit nil	TEST	0.9992830841032384	WITHOUT_CLASSIFICATION	7.169158967615423E-4	TEST
// if the method is extending something, then we have // to test if the handler is initialized...	TEST	0.9998125713837833	WITHOUT_CLASSIFICATION	1.8742861621674214E-4	TEST
// ?W  | boolean | True if file1 exists and is writable by the real uid/gid // FIXME: Need to implement an writable_real_p in FileTest	TEST	0.9999776258459095	WITHOUT_CLASSIFICATION	2.237415409042576E-5	TEST
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999823610275023	WITHOUT_CLASSIFICATION	1.7638972497753313E-5	TEST
// line 335	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999979915206453	WITHOUT_CLASSIFICATION	2.008479354754141E-6	TEST
// line 362	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
// line 391	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
/* ^D */	WITHOUT_CLASSIFICATION	0.999912879859392	WITHOUT_CLASSIFICATION	8.712014060801242E-5	TEST
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999129561468663	WITHOUT_CLASSIFICATION	8.704385313376231E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9999520183723578	WITHOUT_CLASSIFICATION	4.798162764226343E-5	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9999520183723578	WITHOUT_CLASSIFICATION	4.798162764226343E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999600513950385	WITHOUT_CLASSIFICATION	3.994860496151603E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999600513950385	WITHOUT_CLASSIFICATION	3.994860496151603E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999600513950385	WITHOUT_CLASSIFICATION	3.994860496151603E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999600513950385	WITHOUT_CLASSIFICATION	3.994860496151603E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999600513950385	WITHOUT_CLASSIFICATION	3.994860496151603E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999600513950385	WITHOUT_CLASSIFICATION	3.994860496151603E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999600513950385	WITHOUT_CLASSIFICATION	3.994860496151603E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999600513950385	WITHOUT_CLASSIFICATION	3.994860496151603E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999600513950385	WITHOUT_CLASSIFICATION	3.994860496151603E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999600513950385	WITHOUT_CLASSIFICATION	3.994860496151603E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999600513950385	WITHOUT_CLASSIFICATION	3.994860496151603E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999600513950385	WITHOUT_CLASSIFICATION	3.994860496151603E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999600513950385	WITHOUT_CLASSIFICATION	3.994860496151603E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999600513950385	WITHOUT_CLASSIFICATION	3.994860496151603E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999600513950385	WITHOUT_CLASSIFICATION	3.994860496151603E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999600513950385	WITHOUT_CLASSIFICATION	3.994860496151603E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999600513950385	WITHOUT_CLASSIFICATION	3.994860496151603E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999600513950385	WITHOUT_CLASSIFICATION	3.994860496151603E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999600513950385	WITHOUT_CLASSIFICATION	3.994860496151603E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999600513950385	WITHOUT_CLASSIFICATION	3.994860496151603E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999600513950385	WITHOUT_CLASSIFICATION	3.994860496151603E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999600513950385	WITHOUT_CLASSIFICATION	3.994860496151603E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999600513950385	WITHOUT_CLASSIFICATION	3.994860496151603E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999600513950385	WITHOUT_CLASSIFICATION	3.994860496151603E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999600513950385	WITHOUT_CLASSIFICATION	3.994860496151603E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999600513950385	WITHOUT_CLASSIFICATION	3.994860496151603E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999600513950385	WITHOUT_CLASSIFICATION	3.994860496151603E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999600513950385	WITHOUT_CLASSIFICATION	3.994860496151603E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999600513950385	WITHOUT_CLASSIFICATION	3.994860496151603E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999600513950385	WITHOUT_CLASSIFICATION	3.994860496151603E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999600513950385	WITHOUT_CLASSIFICATION	3.994860496151603E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999600513950385	WITHOUT_CLASSIFICATION	3.994860496151603E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999600513950385	WITHOUT_CLASSIFICATION	3.994860496151603E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999600513950385	WITHOUT_CLASSIFICATION	3.994860496151603E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999600513950385	WITHOUT_CLASSIFICATION	3.994860496151603E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999600513950385	WITHOUT_CLASSIFICATION	3.994860496151603E-5	TEST
// return result	WITHOUT_CLASSIFICATION	0.9999982446489335	WITHOUT_CLASSIFICATION	1.755351066451625E-6	TEST
// name	WITHOUT_CLASSIFICATION	0.9998995792454248	WITHOUT_CLASSIFICATION	1.0042075457517297E-4	TEST
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999903685835444	WITHOUT_CLASSIFICATION	9.63141645563105E-6	TEST
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999976198616229	WITHOUT_CLASSIFICATION	2.380138377007069E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999951301923413	WITHOUT_CLASSIFICATION	4.869807658601655E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999951301923413	WITHOUT_CLASSIFICATION	4.869807658601655E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999951301923413	WITHOUT_CLASSIFICATION	4.869807658601655E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999951301923413	WITHOUT_CLASSIFICATION	4.869807658601655E-6	TEST
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999957464262506	WITHOUT_CLASSIFICATION	4.253573749507731E-6	TEST
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999644722866183	WITHOUT_CLASSIFICATION	3.55277133817363E-5	TEST
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999904006026499	WITHOUT_CLASSIFICATION	9.599397350140037E-6	TEST
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999787859421899	WITHOUT_CLASSIFICATION	2.1214057810146106E-5	TEST
// Version information:	WITHOUT_CLASSIFICATION	0.9999886193381367	WITHOUT_CLASSIFICATION	1.1380661863233702E-5	TEST
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999981780081098	WITHOUT_CLASSIFICATION	1.821991890186183E-6	TEST
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.999996009025392	WITHOUT_CLASSIFICATION	3.990974608090514E-6	TEST
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999978351919581	WITHOUT_CLASSIFICATION	2.1648080420499095E-6	TEST
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999999416941123	WITHOUT_CLASSIFICATION	5.830588761612121E-8	TEST
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9981296651706127	WITHOUT_CLASSIFICATION	0.0018703348293872286	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.999994672579449	WITHOUT_CLASSIFICATION	5.327420550964701E-6	TEST
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999944122611772	WITHOUT_CLASSIFICATION	5.587738822844564E-6	TEST
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9998815096092014	WITHOUT_CLASSIFICATION	1.1849039079862416E-4	TEST
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999990249185503	WITHOUT_CLASSIFICATION	9.750814496020745E-7	TEST
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999789183700114	WITHOUT_CLASSIFICATION	2.108162998855427E-5	TEST
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999852261635697	WITHOUT_CLASSIFICATION	1.477383643033653E-5	TEST
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9999998141783525	WITHOUT_CLASSIFICATION	1.858216476123446E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999951301923413	WITHOUT_CLASSIFICATION	4.869807658601655E-6	TEST
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999748758081118	WITHOUT_CLASSIFICATION	2.512419188809829E-5	TEST
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999328261361555	WITHOUT_CLASSIFICATION	6.717386384453413E-5	TEST
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999731577592329	WITHOUT_CLASSIFICATION	2.6842240767154215E-5	TEST
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9999840971359928	WITHOUT_CLASSIFICATION	1.5902864007270685E-5	TEST
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9999369829026389	WITHOUT_CLASSIFICATION	6.301709736110568E-5	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.9999973929060797	WITHOUT_CLASSIFICATION	2.6070939202899393E-6	TEST
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999923318207964	WITHOUT_CLASSIFICATION	7.66817920355302E-6	TEST
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999457177951843	WITHOUT_CLASSIFICATION	5.428220481578793E-5	TEST
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.999985432816264	WITHOUT_CLASSIFICATION	1.456718373606678E-5	TEST
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999869829964398	WITHOUT_CLASSIFICATION	1.3017003560077965E-5	TEST
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9994810976320001	WITHOUT_CLASSIFICATION	5.189023679998862E-4	TEST
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999503865044507	WITHOUT_CLASSIFICATION	4.9613495549393953E-5	TEST
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9996743258963415	WITHOUT_CLASSIFICATION	3.256741036584599E-4	TEST
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999852072714644	WITHOUT_CLASSIFICATION	1.479272853550326E-5	TEST
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999838626413758	WITHOUT_CLASSIFICATION	1.613735862414086E-5	TEST
// RubySignal	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999718375799096	WITHOUT_CLASSIFICATION	2.816242009035831E-5	TEST
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9932140711800149	WITHOUT_CLASSIFICATION	0.006785928819985164	TEST
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999904729498393	WITHOUT_CLASSIFICATION	9.52705016069913E-6	TEST
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.999998904708367	WITHOUT_CLASSIFICATION	1.0952916329472262E-6	TEST
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999889176308883	WITHOUT_CLASSIFICATION	1.1082369111719425E-5	TEST
//io.finish();	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9998970969695702	WITHOUT_CLASSIFICATION	1.029030304298779E-4	TEST
// hmm...	WITHOUT_CLASSIFICATION	0.99995779764608	WITHOUT_CLASSIFICATION	4.220235392014826E-5	TEST
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9998335094414391	WITHOUT_CLASSIFICATION	1.664905585608591E-4	TEST
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999847870998664	WITHOUT_CLASSIFICATION	1.5212900133544073E-5	TEST
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999868544800237	WITHOUT_CLASSIFICATION	1.3145519976297507E-5	TEST
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999944550342865	WITHOUT_CLASSIFICATION	5.544965713416583E-6	TEST
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999895739792009	WITHOUT_CLASSIFICATION	1.0426020799221318E-5	TEST
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999743548002382	WITHOUT_CLASSIFICATION	2.5645199761841464E-5	TEST
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999909672153672	WITHOUT_CLASSIFICATION	9.03278463285915E-6	TEST
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999386985008252	WITHOUT_CLASSIFICATION	6.130149917482612E-5	TEST
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999979062961537	WITHOUT_CLASSIFICATION	2.0937038463812065E-6	TEST
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999956500975012	WITHOUT_CLASSIFICATION	4.34990249874561E-6	TEST
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999846602587388	WITHOUT_CLASSIFICATION	1.533974126116309E-5	TEST
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999992014641271	WITHOUT_CLASSIFICATION	7.985358728554071E-7	TEST
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9998395499037427	WITHOUT_CLASSIFICATION	1.6045009625742076E-4	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999901399885051	WITHOUT_CLASSIFICATION	9.860011494907589E-6	TEST
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999997598944714	WITHOUT_CLASSIFICATION	2.401055285666204E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999908352987232	WITHOUT_CLASSIFICATION	9.164701276853044E-6	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.999990788529692	WITHOUT_CLASSIFICATION	9.211470307972922E-6	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.999967708331346	WITHOUT_CLASSIFICATION	3.229166865397416E-5	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.999967708331346	WITHOUT_CLASSIFICATION	3.229166865397416E-5	TEST
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9999732534253561	WITHOUT_CLASSIFICATION	2.674657464388134E-5	TEST
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999971600645109	WITHOUT_CLASSIFICATION	2.8399354890944497E-6	TEST
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999901558102089	WITHOUT_CLASSIFICATION	9.844189791027476E-6	TEST
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999969889428095	WITHOUT_CLASSIFICATION	3.011057190512046E-6	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999977309064517	WITHOUT_CLASSIFICATION	2.2690935482808523E-6	TEST
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999034294874299	WITHOUT_CLASSIFICATION	9.657051257001068E-5	TEST
// ???	WITHOUT_CLASSIFICATION	0.9999600291351446	WITHOUT_CLASSIFICATION	3.9970864855433246E-5	TEST
// PID	WITHOUT_CLASSIFICATION	0.9999578331891565	WITHOUT_CLASSIFICATION	4.2166810843417965E-5	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999908352987232	WITHOUT_CLASSIFICATION	9.164701276853044E-6	TEST
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999986465897868	WITHOUT_CLASSIFICATION	1.3534102131581929E-6	TEST
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999671536727721	WITHOUT_CLASSIFICATION	3.284632722798702E-5	TEST
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999998848207717	WITHOUT_CLASSIFICATION	1.1517922824506656E-7	TEST
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999984661338576	WITHOUT_CLASSIFICATION	1.5338661424072814E-6	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999917863833085	WITHOUT_CLASSIFICATION	8.21361669152365E-6	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999917863833085	WITHOUT_CLASSIFICATION	8.21361669152365E-6	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999917863833085	WITHOUT_CLASSIFICATION	8.21361669152365E-6	TEST
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999990962075407	WITHOUT_CLASSIFICATION	9.037924593497394E-7	TEST
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999973454292658	WITHOUT_CLASSIFICATION	2.654570734252134E-6	TEST
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999981085935682	WITHOUT_CLASSIFICATION	1.8914064318846335E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999897842180074	WITHOUT_CLASSIFICATION	1.0215781992489829E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999897842180074	WITHOUT_CLASSIFICATION	1.0215781992489829E-5	TEST
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9948710059040052	WITHOUT_CLASSIFICATION	0.005128994095994794	TEST
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999990177712418	WITHOUT_CLASSIFICATION	9.82228758260681E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999897842180074	WITHOUT_CLASSIFICATION	1.0215781992489829E-5	TEST
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999955098597697	WITHOUT_CLASSIFICATION	4.490140230270366E-6	TEST
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999695832222179	WITHOUT_CLASSIFICATION	3.0416777782098043E-5	TEST
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.999993969224655	WITHOUT_CLASSIFICATION	6.030775345054554E-6	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.999997410483336	WITHOUT_CLASSIFICATION	2.5895166639262135E-6	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999755878654649	WITHOUT_CLASSIFICATION	2.4412134535065383E-5	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999895535914739	WITHOUT_CLASSIFICATION	1.0446408526205567E-5	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999895535914739	WITHOUT_CLASSIFICATION	1.0446408526205567E-5	TEST
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.999979512141655	WITHOUT_CLASSIFICATION	2.048785834497696E-5	TEST
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999916114620547	WITHOUT_CLASSIFICATION	8.38853794534842E-6	TEST
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999909053736429	WITHOUT_CLASSIFICATION	9.094626357054213E-6	TEST
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999861046853428	WITHOUT_CLASSIFICATION	1.389531465737091E-5	TEST
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999732726683841	WITHOUT_CLASSIFICATION	2.672733161601798E-5	TEST
// extras flag	WITHOUT_CLASSIFICATION	0.9999959068399938	WITHOUT_CLASSIFICATION	4.0931600061367315E-6	TEST
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// ...nothing	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// utility method	WITHOUT_CLASSIFICATION	0.9999985575673079	WITHOUT_CLASSIFICATION	1.442432692111693E-6	TEST
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999943736132768	WITHOUT_CLASSIFICATION	5.626386723285645E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999908352987232	WITHOUT_CLASSIFICATION	9.164701276853044E-6	TEST
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999785598154026	WITHOUT_CLASSIFICATION	2.144018459735729E-5	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.999971247511366	WITHOUT_CLASSIFICATION	2.875248863397131E-5	TEST
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9999752751447073	WITHOUT_CLASSIFICATION	2.4724855292720053E-5	TEST
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.999974587651137	WITHOUT_CLASSIFICATION	2.5412348863000418E-5	TEST
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999855287970787	WITHOUT_CLASSIFICATION	1.447120292126774E-5	TEST
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.999989848790683	WITHOUT_CLASSIFICATION	1.0151209316998215E-5	TEST
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999767027720782	WITHOUT_CLASSIFICATION	2.3297227921764508E-5	TEST
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999879124343676	WITHOUT_CLASSIFICATION	1.208756563234081E-5	TEST
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9999468810615973	WITHOUT_CLASSIFICATION	5.31189384027277E-5	TEST
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9998698209845033	WITHOUT_CLASSIFICATION	1.3017901549672878E-4	TEST
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999913226940386	WITHOUT_CLASSIFICATION	8.677305961477877E-6	TEST
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999974168977056	WITHOUT_CLASSIFICATION	2.583102294406277E-6	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999953398669609	WITHOUT_CLASSIFICATION	4.660133039171271E-6	TEST
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999060418863016	WITHOUT_CLASSIFICATION	9.395811369834864E-5	TEST
// recheck condition	WITHOUT_CLASSIFICATION	0.9999953428124355	WITHOUT_CLASSIFICATION	4.657187564542971E-6	TEST
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.999983950904854	WITHOUT_CLASSIFICATION	1.604909514602012E-5	TEST
// Construct key services	WITHOUT_CLASSIFICATION	0.999973394754477	WITHOUT_CLASSIFICATION	2.6605245523033386E-5	TEST
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999975549801892	WITHOUT_CLASSIFICATION	2.4450198108252536E-6	TEST
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999968256299522	WITHOUT_CLASSIFICATION	3.1743700479682475E-6	TEST
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999925898642136	WITHOUT_CLASSIFICATION	7.4101357864699724E-6	TEST
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999992724358241	WITHOUT_CLASSIFICATION	7.275641759730225E-7	TEST
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999968841949858	WITHOUT_CLASSIFICATION	3.1158050142266957E-6	TEST
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.999926133887813	WITHOUT_CLASSIFICATION	7.38661121869642E-5	TEST
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999939731558724	WITHOUT_CLASSIFICATION	6.026844127682264E-6	TEST
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999835592518498	WITHOUT_CLASSIFICATION	1.6440748150197425E-5	TEST
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999878511061372	WITHOUT_CLASSIFICATION	1.2148893862864504E-5	TEST
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999751890855405	WITHOUT_CLASSIFICATION	2.4810914459551866E-5	TEST
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999962228263011	WITHOUT_CLASSIFICATION	3.777173698892868E-6	TEST
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999949087597625	WITHOUT_CLASSIFICATION	5.0912402375054676E-6	TEST
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999983771472061	WITHOUT_CLASSIFICATION	1.622852793928458E-6	TEST
// determine spacing	WITHOUT_CLASSIFICATION	0.999995544469456	WITHOUT_CLASSIFICATION	4.455530543922059E-6	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.999876568121972	WITHOUT_CLASSIFICATION	1.234318780279513E-4	TEST
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.999965138211574	WITHOUT_CLASSIFICATION	3.48617884260853E-5	TEST
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999030489861647	WITHOUT_CLASSIFICATION	9.695101383534586E-5	TEST
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9998014612793537	WITHOUT_CLASSIFICATION	1.9853872064636976E-4	TEST
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999530014441463	WITHOUT_CLASSIFICATION	4.699855585367264E-5	TEST
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9991497171145736	WITHOUT_CLASSIFICATION	8.502828854264821E-4	TEST
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.999986916966243	WITHOUT_CLASSIFICATION	1.3083033757091496E-5	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999858132666463	WITHOUT_CLASSIFICATION	1.4186733353728085E-5	TEST
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999923921777039	WITHOUT_CLASSIFICATION	7.6078222961580045E-6	TEST
// Default objects	WITHOUT_CLASSIFICATION	0.9999955215007781	WITHOUT_CLASSIFICATION	4.478499221939754E-6	TEST
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999924752103013	WITHOUT_CLASSIFICATION	7.524789698804651E-6	TEST
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999164860216685	WITHOUT_CLASSIFICATION	8.351397833146721E-5	TEST
// Java support	WITHOUT_CLASSIFICATION	0.9999968937230991	WITHOUT_CLASSIFICATION	3.1062769009618214E-6	TEST
// Parser stats	WITHOUT_CLASSIFICATION	0.9999950938338457	WITHOUT_CLASSIFICATION	4.906166154398662E-6	TEST
// Compilation	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.999981899448545	WITHOUT_CLASSIFICATION	1.810055145508872E-5	TEST
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999819195156763	WITHOUT_CLASSIFICATION	1.8080484323699015E-5	TEST
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999844462159617	WITHOUT_CLASSIFICATION	1.5553784038321823E-5	TEST
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999858276212418	WITHOUT_CLASSIFICATION	1.4172378758374134E-5	TEST
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999822075360257	WITHOUT_CLASSIFICATION	1.7792463974236796E-5	TEST
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999871314755309	WITHOUT_CLASSIFICATION	1.2868524469056823E-5	TEST
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999739413971491	WITHOUT_CLASSIFICATION	2.605860285085903E-5	TEST
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9998559451782717	WITHOUT_CLASSIFICATION	1.440548217283946E-4	TEST
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999804570109554	WITHOUT_CLASSIFICATION	1.9542989044625693E-5	TEST
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.999991111011154	WITHOUT_CLASSIFICATION	8.888988845957108E-6	TEST
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.999998168364156	WITHOUT_CLASSIFICATION	1.8316358439179824E-6	TEST
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// default options	WITHOUT_CLASSIFICATION	0.9999981666587026	WITHOUT_CLASSIFICATION	1.833341297391396E-6	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.99995779764608	WITHOUT_CLASSIFICATION	4.220235392014826E-5	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.99995779764608	WITHOUT_CLASSIFICATION	4.220235392014826E-5	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9999604764203672	WITHOUT_CLASSIFICATION	3.9523579632798154E-5	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9999604764203672	WITHOUT_CLASSIFICATION	3.9523579632798154E-5	TEST
// long name option	WITHOUT_CLASSIFICATION	0.9999759115427714	WITHOUT_CLASSIFICATION	2.4088457228505444E-5	TEST
// conversion	WITHOUT_CLASSIFICATION	0.9999952092353219	WITHOUT_CLASSIFICATION	4.7907646780469594E-6	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999901232309849	WITHOUT_CLASSIFICATION	9.876769015086213E-6	TEST
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9997847345330005	WITHOUT_CLASSIFICATION	2.152654669993899E-4	TEST
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999914998744229	WITHOUT_CLASSIFICATION	8.50012557702043E-6	TEST
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.999873460145155	WITHOUT_CLASSIFICATION	1.265398548449605E-4	TEST
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999879124343676	WITHOUT_CLASSIFICATION	1.208756563234081E-5	TEST
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999879124343676	WITHOUT_CLASSIFICATION	1.208756563234081E-5	TEST
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999879124343676	WITHOUT_CLASSIFICATION	1.208756563234081E-5	TEST
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999747296970336	WITHOUT_CLASSIFICATION	2.5270302966424467E-5	TEST
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999790802839756	WITHOUT_CLASSIFICATION	2.0919716024387426E-5	TEST
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999898479608623	WITHOUT_CLASSIFICATION	1.015203913765423E-5	TEST
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999871873875091	WITHOUT_CLASSIFICATION	1.2812612490827108E-5	TEST
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999843884913877	WITHOUT_CLASSIFICATION	1.5611508612325762E-5	TEST
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999898479608623	WITHOUT_CLASSIFICATION	1.015203913765423E-5	TEST
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999985088998874	WITHOUT_CLASSIFICATION	1.491100112585329E-6	TEST
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999879124343676	WITHOUT_CLASSIFICATION	1.208756563234081E-5	TEST
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999912581005092	WITHOUT_CLASSIFICATION	8.741899490925272E-6	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.999967775355303	WITHOUT_CLASSIFICATION	3.222464469709272E-5	TEST
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999805368246839	WITHOUT_CLASSIFICATION	1.9463175316160674E-5	TEST
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999879124343676	WITHOUT_CLASSIFICATION	1.208756563234081E-5	TEST
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999972985131795	WITHOUT_CLASSIFICATION	2.7014868204976864E-6	TEST
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999405969361832	WITHOUT_CLASSIFICATION	5.9403063816770716E-5	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999380014966024	WITHOUT_CLASSIFICATION	6.199850339750635E-5	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999977880078644	WITHOUT_CLASSIFICATION	2.2119921355230904E-6	TEST
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999924624271497	WITHOUT_CLASSIFICATION	7.537572850326747E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999969228445865	WITHOUT_CLASSIFICATION	3.077155413386421E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999969228445865	WITHOUT_CLASSIFICATION	3.077155413386421E-6	TEST
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999846369567864	WITHOUT_CLASSIFICATION	1.5363043213588183E-5	TEST
// string given	WITHOUT_CLASSIFICATION	0.9999933495247167	WITHOUT_CLASSIFICATION	6.650475283300105E-6	TEST
// hash given	WITHOUT_CLASSIFICATION	0.9999968898769257	WITHOUT_CLASSIFICATION	3.1101230741642767E-6	TEST
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999997648237087	WITHOUT_CLASSIFICATION	2.3517629141032328E-7	TEST
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999439610354683	WITHOUT_CLASSIFICATION	5.603896453154519E-5	TEST
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999898479608623	WITHOUT_CLASSIFICATION	1.015203913765423E-5	TEST
// nothing	WITHOUT_CLASSIFICATION	0.9999589940954882	WITHOUT_CLASSIFICATION	4.10059045118211E-5	TEST
// nothing	WITHOUT_CLASSIFICATION	0.9999589940954882	WITHOUT_CLASSIFICATION	4.10059045118211E-5	TEST
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999898479608623	WITHOUT_CLASSIFICATION	1.015203913765423E-5	TEST
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9935471526328988	WITHOUT_CLASSIFICATION	0.006452847367101106	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.999997008851226	WITHOUT_CLASSIFICATION	2.99114877409548E-6	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.999997008851226	WITHOUT_CLASSIFICATION	2.99114877409548E-6	TEST
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999959403896421	WITHOUT_CLASSIFICATION	4.059610357895038E-6	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9998715959602491	WITHOUT_CLASSIFICATION	1.284040397508417E-4	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9998715959602491	WITHOUT_CLASSIFICATION	1.284040397508417E-4	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999957323388401	WITHOUT_CLASSIFICATION	4.2676611599021435E-6	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999957323388401	WITHOUT_CLASSIFICATION	4.2676611599021435E-6	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.99995779764608	WITHOUT_CLASSIFICATION	4.220235392014826E-5	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.99995779764608	WITHOUT_CLASSIFICATION	4.220235392014826E-5	TEST
// QTRUE	WITHOUT_CLASSIFICATION	0.99995779764608	WITHOUT_CLASSIFICATION	4.220235392014826E-5	TEST
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.999980767626754	WITHOUT_CLASSIFICATION	1.923237324589936E-5	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999935377566838	WITHOUT_CLASSIFICATION	6.462243316283469E-6	TEST
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999993011549442	WITHOUT_CLASSIFICATION	6.988450557420044E-7	TEST
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999964156850959	WITHOUT_CLASSIFICATION	3.584314904076633E-6	TEST
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999954283157324	WITHOUT_CLASSIFICATION	4.571684267622421E-6	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999956255696474	WITHOUT_CLASSIFICATION	4.374430352662655E-6	TEST
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999991231937839	WITHOUT_CLASSIFICATION	8.768062160407972E-7	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999956255696474	WITHOUT_CLASSIFICATION	4.374430352662655E-6	TEST
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9790297705750831	WITHOUT_CLASSIFICATION	0.02097022942491684	TEST
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999936663007244	WITHOUT_CLASSIFICATION	6.333699275697334E-6	TEST
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999716918518586	WITHOUT_CLASSIFICATION	2.830814814139227E-5	TEST
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.999991976049558	WITHOUT_CLASSIFICATION	8.023950441966015E-6	TEST
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999867107498276	WITHOUT_CLASSIFICATION	1.3289250172279256E-5	TEST
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9998665685506445	WITHOUT_CLASSIFICATION	1.3343144935541233E-4	TEST
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999133469417768	WITHOUT_CLASSIFICATION	8.665305822316522E-5	TEST
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999879401549655	WITHOUT_CLASSIFICATION	1.2059845034436013E-5	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999982846936671	WITHOUT_CLASSIFICATION	1.7153063328669151E-6	TEST
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.999994497755932	WITHOUT_CLASSIFICATION	5.502244068118854E-6	TEST
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999879124343676	WITHOUT_CLASSIFICATION	1.208756563234081E-5	TEST
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9998652046712644	WITHOUT_CLASSIFICATION	1.3479532873563114E-4	TEST
// file not given	WITHOUT_CLASSIFICATION	0.9999972933482428	WITHOUT_CLASSIFICATION	2.706651757200841E-6	TEST
// string to eval	WITHOUT_CLASSIFICATION	0.9999975116829118	WITHOUT_CLASSIFICATION	2.4883170881654024E-6	TEST
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999936001833094	WITHOUT_CLASSIFICATION	6.399816690666452E-6	TEST
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999914684736374	WITHOUT_CLASSIFICATION	8.53152636264255E-6	TEST
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999780581639358	WITHOUT_CLASSIFICATION	2.1941836064205435E-5	TEST
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999925781984437	WITHOUT_CLASSIFICATION	7.421801556381104E-6	TEST
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.999928858499069	WITHOUT_CLASSIFICATION	7.11415009310664E-5	TEST
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9997184498667364	WITHOUT_CLASSIFICATION	2.815501332636773E-4	TEST
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9996696301239553	WITHOUT_CLASSIFICATION	3.3036987604469675E-4	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999886334806249	WITHOUT_CLASSIFICATION	1.1366519375095509E-5	TEST
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999942812241677	WITHOUT_CLASSIFICATION	5.718775832394467E-6	TEST
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999734756923251	WITHOUT_CLASSIFICATION	2.652430767492467E-5	TEST
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999614297573479	WITHOUT_CLASSIFICATION	3.857024265211503E-5	TEST
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999601901737378	WITHOUT_CLASSIFICATION	3.980982626217644E-5	TEST
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999668149911053	WITHOUT_CLASSIFICATION	3.318500889470922E-5	TEST
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999493092092833	WITHOUT_CLASSIFICATION	5.069079071672707E-5	TEST
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999973190428552	WITHOUT_CLASSIFICATION	2.6809571447571304E-6	TEST
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.999983635922551	WITHOUT_CLASSIFICATION	1.6364077448976863E-5	TEST
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999966949221782	WITHOUT_CLASSIFICATION	3.3050778218174946E-6	TEST
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999998075177389	WITHOUT_CLASSIFICATION	1.9248226120042031E-7	TEST
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.999998850212155	WITHOUT_CLASSIFICATION	1.149787844962833E-6	TEST
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999520847221056	WITHOUT_CLASSIFICATION	4.791527789438583E-5	TEST
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.999990952251339	WITHOUT_CLASSIFICATION	9.04774866097782E-6	TEST
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999925183820882	WITHOUT_CLASSIFICATION	7.481617911833683E-6	TEST
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999917388390825	WITHOUT_CLASSIFICATION	8.261160917493919E-6	TEST
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999804687097721	WITHOUT_CLASSIFICATION	1.953129022785857E-5	TEST
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999962861885405	WITHOUT_CLASSIFICATION	3.7138114595164666E-6	TEST
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999917422631903	WITHOUT_CLASSIFICATION	8.257736809759585E-6	TEST
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999943333804429	WITHOUT_CLASSIFICATION	5.666619557083788E-6	TEST
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.999991081801859	WITHOUT_CLASSIFICATION	8.918198140872995E-6	TEST
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999926255080733	WITHOUT_CLASSIFICATION	7.37449192676619E-6	TEST
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999984522541074	WITHOUT_CLASSIFICATION	1.5477458926198893E-6	TEST
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999995252769166	WITHOUT_CLASSIFICATION	4.7472308349811463E-7	TEST
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999941573321084	WITHOUT_CLASSIFICATION	5.842667891615338E-6	TEST
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999557128661815	WITHOUT_CLASSIFICATION	4.428713381855575E-5	TEST
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.999996803970994	WITHOUT_CLASSIFICATION	3.196029005978973E-6	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999727340681958	WITHOUT_CLASSIFICATION	2.726593180418103E-5	TEST
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999518282135101	WITHOUT_CLASSIFICATION	4.81717864898646E-5	TEST
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999971393434689	WITHOUT_CLASSIFICATION	2.8606565310579438E-6	TEST
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999979054969527	WITHOUT_CLASSIFICATION	2.0945030472569823E-6	TEST
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9995071470449344	WITHOUT_CLASSIFICATION	4.928529550656329E-4	TEST
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999924664293169	WITHOUT_CLASSIFICATION	7.5335706831625564E-6	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999992792837115	WITHOUT_CLASSIFICATION	7.207162885849996E-7	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999992792837115	WITHOUT_CLASSIFICATION	7.207162885849996E-7	TEST
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999473223875895	WITHOUT_CLASSIFICATION	5.267761241044879E-5	TEST
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999521739350825	WITHOUT_CLASSIFICATION	4.7826064917488356E-5	TEST
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999285427232769	WITHOUT_CLASSIFICATION	7.14572767231469E-5	TEST
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999917058392225	WITHOUT_CLASSIFICATION	8.294160777470839E-6	TEST
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999994954329523	WITHOUT_CLASSIFICATION	5.045670477369194E-7	TEST
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999735355021155	WITHOUT_CLASSIFICATION	2.6464497884470867E-5	TEST
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999801956921596	WITHOUT_CLASSIFICATION	1.980430784040364E-5	TEST
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999988673896519	WITHOUT_CLASSIFICATION	1.1326103481568824E-6	TEST
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999841407066759	WITHOUT_CLASSIFICATION	1.5859293324192997E-5	TEST
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.999997653888189	WITHOUT_CLASSIFICATION	2.3461118109963853E-6	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999988541432019	WITHOUT_CLASSIFICATION	1.145856798087576E-6	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999988541432019	WITHOUT_CLASSIFICATION	1.145856798087576E-6	TEST
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9999959657613382	WITHOUT_CLASSIFICATION	4.034238661822528E-6	TEST
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999996518746449	WITHOUT_CLASSIFICATION	3.481253550899472E-7	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9997152650173792	WITHOUT_CLASSIFICATION	2.847349826208556E-4	TEST
// Create Constants class	WITHOUT_CLASSIFICATION	0.999994418840636	WITHOUT_CLASSIFICATION	5.581159364032409E-6	TEST
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999832182410008	WITHOUT_CLASSIFICATION	1.6781758999181773E-5	TEST
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999972636999718	WITHOUT_CLASSIFICATION	2.736300028304031E-6	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999920276969805	WITHOUT_CLASSIFICATION	7.972303019511917E-6	TEST
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999627078814188	WITHOUT_CLASSIFICATION	3.7292118581194405E-5	TEST
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999946609333685	WITHOUT_CLASSIFICATION	5.339066631485514E-6	TEST
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999860593056255	WITHOUT_CLASSIFICATION	1.3940694374678736E-5	TEST
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999950273046644	WITHOUT_CLASSIFICATION	4.972695335623034E-6	TEST
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999365674983687	WITHOUT_CLASSIFICATION	6.343250163130954E-5	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999918303192964	WITHOUT_CLASSIFICATION	8.169680703566436E-6	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999918303192964	WITHOUT_CLASSIFICATION	8.169680703566436E-6	TEST
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999820605535833	WITHOUT_CLASSIFICATION	1.7939446416727256E-5	TEST
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999947458332035	WITHOUT_CLASSIFICATION	5.25416679659912E-6	TEST
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999917724208334	WITHOUT_CLASSIFICATION	8.227579166599451E-6	TEST
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999668585089091	WITHOUT_CLASSIFICATION	3.314149109090248E-5	TEST
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999653618477232	WITHOUT_CLASSIFICATION	3.463815227675687E-5	TEST
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.999958312804688	WITHOUT_CLASSIFICATION	4.1687195311971216E-5	TEST
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999241441346522	WITHOUT_CLASSIFICATION	7.585586534767254E-5	TEST
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999888336829506	WITHOUT_CLASSIFICATION	1.1166317049431437E-5	TEST
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999662219900649	WITHOUT_CLASSIFICATION	3.377800993504016E-5	TEST
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999891040582077	WITHOUT_CLASSIFICATION	1.0895941792276547E-5	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9997152650173792	WITHOUT_CLASSIFICATION	2.847349826208556E-4	TEST
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999206932068588	WITHOUT_CLASSIFICATION	7.930679314114336E-5	TEST
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999960471869366	WITHOUT_CLASSIFICATION	3.952813063415659E-6	TEST
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999078764009418	WITHOUT_CLASSIFICATION	9.212359905821582E-5	TEST
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999988334767377	WITHOUT_CLASSIFICATION	1.166523262292208E-6	TEST
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999881497430169	WITHOUT_CLASSIFICATION	1.1850256983194715E-5	TEST
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999998021052261	WITHOUT_CLASSIFICATION	1.9789477385677572E-7	TEST
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999915074976856	WITHOUT_CLASSIFICATION	8.492502314486483E-6	TEST
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999986737645347	WITHOUT_CLASSIFICATION	1.3262354653336195E-6	TEST
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999982072175094	WITHOUT_CLASSIFICATION	1.7927824905220734E-6	TEST
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999986033792774	WITHOUT_CLASSIFICATION	1.3966207226320883E-6	TEST
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999994133356676	WITHOUT_CLASSIFICATION	5.866643325577876E-7	TEST
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999848829015514	WITHOUT_CLASSIFICATION	1.5117098448670597E-5	TEST
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999862839185107	WITHOUT_CLASSIFICATION	1.3716081489235951E-5	TEST
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.999993829972487	WITHOUT_CLASSIFICATION	6.170027512983306E-6	TEST
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9998575555399377	WITHOUT_CLASSIFICATION	1.424444600621752E-4	TEST
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999978892872371	WITHOUT_CLASSIFICATION	2.1107127629220033E-6	TEST
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999390965071934	WITHOUT_CLASSIFICATION	6.090349280662441E-5	TEST
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999750463167172	WITHOUT_CLASSIFICATION	2.495368328278691E-5	TEST
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999900046926119	WITHOUT_CLASSIFICATION	9.995307387982723E-6	TEST
// rename is successful	WITHOUT_CLASSIFICATION	0.9999482502248107	WITHOUT_CLASSIFICATION	5.174977518932897E-5	TEST
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999903383442702	WITHOUT_CLASSIFICATION	9.66165572979556E-6	TEST
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999910840629265	WITHOUT_CLASSIFICATION	8.915937073600043E-6	TEST
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999878353888506	WITHOUT_CLASSIFICATION	1.2164611149258072E-5	TEST
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.999925099813762	WITHOUT_CLASSIFICATION	7.490018623796809E-5	TEST
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999138070681618	WITHOUT_CLASSIFICATION	8.619293183818022E-5	TEST
// 16 ?	WITHOUT_CLASSIFICATION	0.9999677795756055	WITHOUT_CLASSIFICATION	3.222042439461632E-5	TEST
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999588646013349	WITHOUT_CLASSIFICATION	4.1135398665164356E-5	TEST
// size + 1;	WITHOUT_CLASSIFICATION	0.9999968457847496	WITHOUT_CLASSIFICATION	3.1542152504508454E-6	TEST
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999939639995344	WITHOUT_CLASSIFICATION	6.036000465595203E-6	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.99997128761704	WITHOUT_CLASSIFICATION	2.8712382960016877E-5	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.99997128761704	WITHOUT_CLASSIFICATION	2.8712382960016877E-5	TEST
// put implementation	WITHOUT_CLASSIFICATION	0.999989847040563	WITHOUT_CLASSIFICATION	1.0152959436981906E-5	TEST
// get implementation	WITHOUT_CLASSIFICATION	0.999994142623645	WITHOUT_CLASSIFICATION	5.857376354961698E-6	TEST
// specialized for value	WITHOUT_CLASSIFICATION	0.9999816552898293	WITHOUT_CLASSIFICATION	1.8344710170718736E-5	TEST
// delete implementation	WITHOUT_CLASSIFICATION	0.9999907817078031	WITHOUT_CLASSIFICATION	9.218292196948073E-6	TEST
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.999990501738532	WITHOUT_CLASSIFICATION	9.498261468028169E-6	TEST
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999954526313515	WITHOUT_CLASSIFICATION	4.547368648496338E-6	TEST
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999908352987232	WITHOUT_CLASSIFICATION	9.164701276853044E-6	TEST
// update the hash value	WITHOUT_CLASSIFICATION	0.9999893338935419	WITHOUT_CLASSIFICATION	1.0666106458160991E-5	TEST
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9993988005342244	WITHOUT_CLASSIFICATION	6.011994657756246E-4	TEST
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999738347027656	WITHOUT_CLASSIFICATION	2.6165297234475406E-5	TEST
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.999979512141655	WITHOUT_CLASSIFICATION	2.048785834497696E-5	TEST
// remain where we are	WITHOUT_CLASSIFICATION	0.9999893945208971	WITHOUT_CLASSIFICATION	1.0605479102829144E-5	TEST
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.999654695247029	WITHOUT_CLASSIFICATION	3.4530475297103107E-4	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999858132666463	WITHOUT_CLASSIFICATION	1.4186733353728085E-5	TEST
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999973122369138	WITHOUT_CLASSIFICATION	2.6877630860960472E-6	TEST
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9996000483981792	WITHOUT_CLASSIFICATION	3.999516018208619E-4	TEST
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999999808213142	WITHOUT_CLASSIFICATION	1.9178685713512832E-8	TEST
// first try as directory	WITHOUT_CLASSIFICATION	0.9999991601898757	WITHOUT_CLASSIFICATION	8.398101243575186E-7	TEST
// next as regular file	WITHOUT_CLASSIFICATION	0.9999986663732735	WITHOUT_CLASSIFICATION	1.3336267264282546E-6	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999764925828367	WITHOUT_CLASSIFICATION	2.3507417163232378E-5	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// Stream-based	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999620767486395	WITHOUT_CLASSIFICATION	3.792325136061042E-5	TEST
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999992572144335	WITHOUT_CLASSIFICATION	7.427855665772362E-7	TEST
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999820009861597	WITHOUT_CLASSIFICATION	1.7999013840254323E-5	TEST
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999454391318495	WITHOUT_CLASSIFICATION	5.456086815035025E-5	TEST
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999981330858586	WITHOUT_CLASSIFICATION	1.8669141413757864E-6	TEST
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999968168729306	WITHOUT_CLASSIFICATION	3.1831270694380913E-6	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999569863062344	WITHOUT_CLASSIFICATION	4.301369376562399E-5	TEST
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.99999461182856	WITHOUT_CLASSIFICATION	5.388171439951046E-6	TEST
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999957572411828	WITHOUT_CLASSIFICATION	4.242758817153855E-6	TEST
// re-register	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999307676759452	WITHOUT_CLASSIFICATION	6.923232405474917E-5	TEST
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999902605335309	WITHOUT_CLASSIFICATION	9.739466469048116E-6	TEST
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999963726030389	WITHOUT_CLASSIFICATION	3.6273969612002264E-6	TEST
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999460386162291	WITHOUT_CLASSIFICATION	5.396138377092334E-5	TEST
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999586417994468	WITHOUT_CLASSIFICATION	4.1358200553143767E-5	TEST
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999987500382366	WITHOUT_CLASSIFICATION	1.2499617634050156E-6	TEST
// use original modes	WITHOUT_CLASSIFICATION	0.9999884156983285	WITHOUT_CLASSIFICATION	1.1584301671351481E-5	TEST
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.999995133736441	WITHOUT_CLASSIFICATION	4.8662635590052405E-6	TEST
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999348661404444	WITHOUT_CLASSIFICATION	6.513385955572995E-5	TEST
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999714697989388	WITHOUT_CLASSIFICATION	2.8530201061265903E-5	TEST
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.999987515272266	WITHOUT_CLASSIFICATION	1.2484727734105071E-5	TEST
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999481962355082	WITHOUT_CLASSIFICATION	5.180376449162808E-5	TEST
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999830245474042	WITHOUT_CLASSIFICATION	1.6975452595772488E-5	TEST
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999872818239194	WITHOUT_CLASSIFICATION	1.2718176080722842E-5	TEST
//Everything written	WITHOUT_CLASSIFICATION	0.9999498207529168	WITHOUT_CLASSIFICATION	5.0179247083246124E-5	TEST
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999940890933656	WITHOUT_CLASSIFICATION	5.910906634319337E-6	TEST
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9998730368254408	WITHOUT_CLASSIFICATION	1.2696317455917127E-4	TEST
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9997848664510164	WITHOUT_CLASSIFICATION	2.1513354898363172E-4	TEST
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999908451084084	WITHOUT_CLASSIFICATION	9.154891591661167E-6	TEST
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999906188281087	WITHOUT_CLASSIFICATION	9.381171891331164E-6	TEST
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999637429567159	WITHOUT_CLASSIFICATION	3.6257043284072766E-5	TEST
// hmmmm	WITHOUT_CLASSIFICATION	0.99995779764608	WITHOUT_CLASSIFICATION	4.220235392014826E-5	TEST
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999770993726387	WITHOUT_CLASSIFICATION	2.290062736125793E-5	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999972454932157	WITHOUT_CLASSIFICATION	2.7545067843438023E-6	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.999999355565291	WITHOUT_CLASSIFICATION	6.444347090512956E-7	TEST
// Length to read	WITHOUT_CLASSIFICATION	0.9999989083879137	WITHOUT_CLASSIFICATION	1.0916120862638697E-6	TEST
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999926569965218	WITHOUT_CLASSIFICATION	7.343003478201136E-6	TEST
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999801100265863	WITHOUT_CLASSIFICATION	1.988997341372789E-5	TEST
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999782745872695	WITHOUT_CLASSIFICATION	2.1725412730499072E-5	TEST
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999885093400719	WITHOUT_CLASSIFICATION	1.149065992807679E-5	TEST
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999883956323001	WITHOUT_CLASSIFICATION	1.160436769994761E-5	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999936349052331	WITHOUT_CLASSIFICATION	6.365094766938604E-6	TEST
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999898479608623	WITHOUT_CLASSIFICATION	1.015203913765423E-5	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999936349052331	WITHOUT_CLASSIFICATION	6.365094766938604E-6	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999680496589428	WITHOUT_CLASSIFICATION	3.195034105710524E-5	TEST
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9996963113927682	WITHOUT_CLASSIFICATION	3.036886072318281E-4	TEST
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999889515166227	WITHOUT_CLASSIFICATION	1.104848337736866E-5	TEST
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.9981892402886137	WITHOUT_CLASSIFICATION	0.001810759711386277	TEST
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999864863178087	WITHOUT_CLASSIFICATION	1.351368219127924E-5	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999915121862419	WITHOUT_CLASSIFICATION	8.487813758160896E-6	TEST
// write	WITHOUT_CLASSIFICATION	0.999920442179754	WITHOUT_CLASSIFICATION	7.955782024607669E-5	TEST
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.999929607564657	WITHOUT_CLASSIFICATION	7.039243534303927E-5	TEST
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999925127263162	WITHOUT_CLASSIFICATION	7.487273683764424E-6	TEST
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9999925085505248	WITHOUT_CLASSIFICATION	7.4914494752274825E-6	TEST
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9999987080201956	WITHOUT_CLASSIFICATION	1.2919798043858952E-6	TEST
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999954665054879	WITHOUT_CLASSIFICATION	4.533494512111556E-6	TEST
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9999922744389971	WITHOUT_CLASSIFICATION	7.72556100298089E-6	TEST
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999973160933813	WITHOUT_CLASSIFICATION	2.6839066186043037E-6	TEST
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.999901098525061	WITHOUT_CLASSIFICATION	9.890147493896253E-5	TEST
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9965668653382181	WITHOUT_CLASSIFICATION	0.00343313466178191	TEST
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999998701416205	WITHOUT_CLASSIFICATION	1.298583793876855E-7	TEST
// The class of this object	WITHOUT_CLASSIFICATION	0.9999888652188748	WITHOUT_CLASSIFICATION	1.1134781125256402E-5	TEST
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.999994151391832	WITHOUT_CLASSIFICATION	5.848608167983161E-6	TEST
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9996743258963415	WITHOUT_CLASSIFICATION	3.256741036584599E-4	TEST
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9998861761199761	WITHOUT_CLASSIFICATION	1.1382388002401027E-4	TEST
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999750463167172	WITHOUT_CLASSIFICATION	2.495368328278691E-5	TEST
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999879124343676	WITHOUT_CLASSIFICATION	1.208756563234081E-5	TEST
// for interface impls	WITHOUT_CLASSIFICATION	0.9999850374101457	WITHOUT_CLASSIFICATION	1.4962589854312599E-5	TEST
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.999985186235096	WITHOUT_CLASSIFICATION	1.4813764904075153E-5	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.999997011614437	WITHOUT_CLASSIFICATION	2.9883855629882714E-6	TEST
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999986174974427	WITHOUT_CLASSIFICATION	1.382502557244128E-6	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.999994672579449	WITHOUT_CLASSIFICATION	5.327420550964701E-6	TEST
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999995168902477	WITHOUT_CLASSIFICATION	4.831097522975675E-7	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999712746727221	WITHOUT_CLASSIFICATION	2.8725327277894483E-5	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999712746727221	WITHOUT_CLASSIFICATION	2.8725327277894483E-5	TEST
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999739700737516	WITHOUT_CLASSIFICATION	2.602992624839191E-5	TEST
// Struct methods	WITHOUT_CLASSIFICATION	0.9999966368894315	WITHOUT_CLASSIFICATION	3.363110568465629E-6	TEST
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.999786080116948	WITHOUT_CLASSIFICATION	2.1391988305201578E-4	TEST
// define access methods.	WITHOUT_CLASSIFICATION	0.9999974747041461	WITHOUT_CLASSIFICATION	2.52529585378289E-6	TEST
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999872911629573	WITHOUT_CLASSIFICATION	1.27088370428249E-5	TEST
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.999989093795533	WITHOUT_CLASSIFICATION	1.0906204467025939E-5	TEST
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999819801508101	WITHOUT_CLASSIFICATION	1.8019849189918635E-5	TEST
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999879124343676	WITHOUT_CLASSIFICATION	1.208756563234081E-5	TEST
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999957518830911	WITHOUT_CLASSIFICATION	4.248116908928867E-6	TEST
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.999972371042086	WITHOUT_CLASSIFICATION	2.7628957913952218E-5	TEST
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999996619748764	WITHOUT_CLASSIFICATION	3.3802512352587385E-7	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999962229884992	WITHOUT_CLASSIFICATION	3.777011500803395E-6	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999962229884992	WITHOUT_CLASSIFICATION	3.777011500803395E-6	TEST
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.999792371216408	WITHOUT_CLASSIFICATION	2.0762878359198095E-4	TEST
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999902264733173	WITHOUT_CLASSIFICATION	9.773526682686766E-6	TEST
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999733091944161	WITHOUT_CLASSIFICATION	2.6690805584023917E-5	TEST
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9998981561264882	WITHOUT_CLASSIFICATION	1.0184387351175259E-4	TEST
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999917580443082	WITHOUT_CLASSIFICATION	8.241955691766697E-6	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999794183856967	WITHOUT_CLASSIFICATION	2.0581614303300395E-5	TEST
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999471650878942	WITHOUT_CLASSIFICATION	5.28349121058177E-5	TEST
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999931306098672	WITHOUT_CLASSIFICATION	6.8693901328993745E-6	TEST
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9997404692064275	WITHOUT_CLASSIFICATION	2.595307935724896E-4	TEST
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999941165776738	WITHOUT_CLASSIFICATION	5.883422326215657E-6	TEST
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999591838373711	WITHOUT_CLASSIFICATION	4.081616262878807E-5	TEST
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999985669932965	WITHOUT_CLASSIFICATION	1.433006703495696E-6	TEST
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9998852603105303	WITHOUT_CLASSIFICATION	1.1473968946983122E-4	TEST
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999411279218572	WITHOUT_CLASSIFICATION	5.887207814289404E-5	TEST
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999941704384504	WITHOUT_CLASSIFICATION	5.82956154956723E-6	TEST
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999582071926822	WITHOUT_CLASSIFICATION	4.17928073177239E-5	TEST
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999953684721916	WITHOUT_CLASSIFICATION	4.6315278084589E-6	TEST
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999975823656376	WITHOUT_CLASSIFICATION	2.41763436226703E-6	TEST
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999884488444197	WITHOUT_CLASSIFICATION	1.1551155580279086E-5	TEST
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999954499993051	WITHOUT_CLASSIFICATION	4.550000694857536E-6	TEST
//FIXME warning	WITHOUT_CLASSIFICATION	0.9999468878720655	WITHOUT_CLASSIFICATION	5.311212793434478E-5	TEST
// FIXME warning	WITHOUT_CLASSIFICATION	0.9999806759949954	WITHOUT_CLASSIFICATION	1.932400500461444E-5	TEST
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9999535693705018	WITHOUT_CLASSIFICATION	4.643062949814601E-5	TEST
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999995965654671	WITHOUT_CLASSIFICATION	4.034345328119261E-7	TEST
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999688434310617	WITHOUT_CLASSIFICATION	3.115656893818999E-5	TEST
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999992773686444	WITHOUT_CLASSIFICATION	7.22631355707719E-7	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999982006385159	WITHOUT_CLASSIFICATION	1.7993614840630685E-6	TEST
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999239381710113	WITHOUT_CLASSIFICATION	7.60618289886016E-5	TEST
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999773358068116	WITHOUT_CLASSIFICATION	2.2664193188486518E-5	TEST
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999909524831647	WITHOUT_CLASSIFICATION	9.047516835185145E-6	TEST
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999981691835532	WITHOUT_CLASSIFICATION	1.830816446750212E-6	TEST
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999910769197949	WITHOUT_CLASSIFICATION	8.923080205170538E-6	TEST
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.999999214877393	WITHOUT_CLASSIFICATION	7.851226070405922E-7	TEST
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999992552020026	WITHOUT_CLASSIFICATION	7.447979973455946E-7	TEST
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.999968395766335	WITHOUT_CLASSIFICATION	3.160423366500307E-5	TEST
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999987110203666	WITHOUT_CLASSIFICATION	1.288979633334333E-6	TEST
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999716508939313	WITHOUT_CLASSIFICATION	2.8349106068816435E-5	TEST
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999716508939313	WITHOUT_CLASSIFICATION	2.8349106068816435E-5	TEST
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999200731152298	WITHOUT_CLASSIFICATION	7.992688477013366E-5	TEST
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999974310993675	WITHOUT_CLASSIFICATION	2.5689006324947162E-5	TEST
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999962288522047	WITHOUT_CLASSIFICATION	3.7711477953025915E-6	TEST
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9999903903416681	WITHOUT_CLASSIFICATION	9.609658331762147E-6	TEST
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9999274251074624	WITHOUT_CLASSIFICATION	7.257489253760536E-5	TEST
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999968565889304	WITHOUT_CLASSIFICATION	3.1434110694948994E-6	TEST
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999611188962979	WITHOUT_CLASSIFICATION	3.888110370211272E-5	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.999989159284313	WITHOUT_CLASSIFICATION	1.084071568697197E-5	TEST
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.999997437728734	WITHOUT_CLASSIFICATION	2.5622712660242664E-6	TEST
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999990288730701	WITHOUT_CLASSIFICATION	9.71126929827409E-7	TEST
//reopen	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999966368894315	WITHOUT_CLASSIFICATION	3.363110568465629E-6	TEST
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999690738163328	WITHOUT_CLASSIFICATION	3.09261836671515E-5	TEST
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999856238484987	WITHOUT_CLASSIFICATION	1.437615150131137E-5	TEST
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999986855366577	WITHOUT_CLASSIFICATION	1.3144633422753794E-6	TEST
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999997577191996	WITHOUT_CLASSIFICATION	2.422808004849133E-7	TEST
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999975614650819	WITHOUT_CLASSIFICATION	2.438534918210407E-6	TEST
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999982081761736	WITHOUT_CLASSIFICATION	1.7918238264851339E-6	TEST
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.999997620327429	WITHOUT_CLASSIFICATION	2.3796725709949936E-6	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999989232737401	WITHOUT_CLASSIFICATION	1.0767262599493514E-6	TEST
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999917092888817	WITHOUT_CLASSIFICATION	8.290711118186367E-6	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999930802660673	WITHOUT_CLASSIFICATION	6.919733932753214E-6	TEST
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999929377169382	WITHOUT_CLASSIFICATION	7.062283061788294E-6	TEST
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999896168525837	WITHOUT_CLASSIFICATION	1.038314741630947E-5	TEST
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999703251439632	WITHOUT_CLASSIFICATION	2.9674856036799152E-5	TEST
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999708696020468	WITHOUT_CLASSIFICATION	2.9130397953183187E-5	TEST
// ignore error	WITHOUT_CLASSIFICATION	0.9999983207066329	WITHOUT_CLASSIFICATION	1.6792933671314548E-6	TEST
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999791926838913	WITHOUT_CLASSIFICATION	2.080731610857828E-5	TEST
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999974310993675	WITHOUT_CLASSIFICATION	2.5689006324947162E-5	TEST
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999139732413728	WITHOUT_CLASSIFICATION	8.602675862719185E-5	TEST
// odd	WITHOUT_CLASSIFICATION	0.9999578076236163	WITHOUT_CLASSIFICATION	4.219237638366053E-5	TEST
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999991284148868	WITHOUT_CLASSIFICATION	8.715851132134336E-7	TEST
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.999987259570618	WITHOUT_CLASSIFICATION	1.2740429381993753E-5	TEST
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999934132720442	WITHOUT_CLASSIFICATION	6.586727955895289E-6	TEST
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.999998698363423	WITHOUT_CLASSIFICATION	1.3016365769583177E-6	TEST
/*  0! */	WITHOUT_CLASSIFICATION	0.9999063684401432	WITHOUT_CLASSIFICATION	9.363155985679569E-5	TEST
/*  1! */	WITHOUT_CLASSIFICATION	0.9999063684401432	WITHOUT_CLASSIFICATION	9.363155985679569E-5	TEST
/*  2! */	WITHOUT_CLASSIFICATION	0.9999063684401432	WITHOUT_CLASSIFICATION	9.363155985679569E-5	TEST
/*  3! */	WITHOUT_CLASSIFICATION	0.9999063684401432	WITHOUT_CLASSIFICATION	9.363155985679569E-5	TEST
/*  4! */	WITHOUT_CLASSIFICATION	0.9999063684401432	WITHOUT_CLASSIFICATION	9.363155985679569E-5	TEST
/*  5! */	WITHOUT_CLASSIFICATION	0.9999063684401432	WITHOUT_CLASSIFICATION	9.363155985679569E-5	TEST
/*  6! */	WITHOUT_CLASSIFICATION	0.9999063684401432	WITHOUT_CLASSIFICATION	9.363155985679569E-5	TEST
/*  7! */	WITHOUT_CLASSIFICATION	0.9999063684401432	WITHOUT_CLASSIFICATION	9.363155985679569E-5	TEST
/*  8! */	WITHOUT_CLASSIFICATION	0.9999063684401432	WITHOUT_CLASSIFICATION	9.363155985679569E-5	TEST
/*  9! */	WITHOUT_CLASSIFICATION	0.9999063684401432	WITHOUT_CLASSIFICATION	9.363155985679569E-5	TEST
/* 11! */	WITHOUT_CLASSIFICATION	0.999912879859392	WITHOUT_CLASSIFICATION	8.712014060801242E-5	TEST
/* 12! */	WITHOUT_CLASSIFICATION	0.999912879859392	WITHOUT_CLASSIFICATION	8.712014060801242E-5	TEST
/* 13! */	WITHOUT_CLASSIFICATION	0.999912879859392	WITHOUT_CLASSIFICATION	8.712014060801242E-5	TEST
/* 15! */	WITHOUT_CLASSIFICATION	0.999912879859392	WITHOUT_CLASSIFICATION	8.712014060801242E-5	TEST
/* 16! */	WITHOUT_CLASSIFICATION	0.999912879859392	WITHOUT_CLASSIFICATION	8.712014060801242E-5	TEST
/* 17! */	WITHOUT_CLASSIFICATION	0.999912879859392	WITHOUT_CLASSIFICATION	8.712014060801242E-5	TEST
/* 19! */	WITHOUT_CLASSIFICATION	0.999912879859392	WITHOUT_CLASSIFICATION	8.712014060801242E-5	TEST
/* 20! */	WITHOUT_CLASSIFICATION	0.999912879859392	WITHOUT_CLASSIFICATION	8.712014060801242E-5	TEST
/* 21! */	WITHOUT_CLASSIFICATION	0.999912879859392	WITHOUT_CLASSIFICATION	8.712014060801242E-5	TEST
// Static constants	WITHOUT_CLASSIFICATION	0.9999975899522853	WITHOUT_CLASSIFICATION	2.410047714776005E-6	TEST
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9999919237478249	WITHOUT_CLASSIFICATION	8.076252175181489E-6	TEST
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999738958723926	WITHOUT_CLASSIFICATION	2.6104127607392344E-5	TEST
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999877960035723	WITHOUT_CLASSIFICATION	1.2203996427781026E-5	TEST
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.999996739305977	WITHOUT_CLASSIFICATION	3.260694023060762E-6	TEST
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999980791426154	WITHOUT_CLASSIFICATION	1.920857384541048E-6	TEST
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999992228985617	WITHOUT_CLASSIFICATION	7.771014381996998E-7	TEST
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9999968492074047	WITHOUT_CLASSIFICATION	3.1507925952118255E-6	TEST
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.999998453142355	WITHOUT_CLASSIFICATION	1.5468576450080474E-6	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9998985748265613	WITHOUT_CLASSIFICATION	1.0142517343873513E-4	TEST
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9756424221498123	WITHOUT_CLASSIFICATION	0.024357577850187637	TEST
// integer division	WITHOUT_CLASSIFICATION	0.99999509849078	WITHOUT_CLASSIFICATION	4.901509220018065E-6	TEST
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999944230490526	WITHOUT_CLASSIFICATION	5.576950947394145E-6	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999879341835439	WITHOUT_CLASSIFICATION	1.2065816456068969E-5	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999879341835439	WITHOUT_CLASSIFICATION	1.2065816456068969E-5	TEST
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999980791426154	WITHOUT_CLASSIFICATION	1.920857384541048E-6	TEST
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9999708946471397	WITHOUT_CLASSIFICATION	2.9105352860296043E-5	TEST
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999998229320842	WITHOUT_CLASSIFICATION	1.7706791569196625E-7	TEST
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999963826312215	WITHOUT_CLASSIFICATION	3.617368778382388E-6	TEST
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999980569164332	WITHOUT_CLASSIFICATION	1.9430835668171238E-6	TEST
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999295104026849	WITHOUT_CLASSIFICATION	7.04895973151541E-5	TEST
// sign	WITHOUT_CLASSIFICATION	0.9999578531720946	WITHOUT_CLASSIFICATION	4.214682790530907E-5	TEST
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999932366022855	WITHOUT_CLASSIFICATION	6.7633977145318015E-6	TEST
// normalize the value	WITHOUT_CLASSIFICATION	0.9999944222706957	WITHOUT_CLASSIFICATION	5.577729304409188E-6	TEST
// base	WITHOUT_CLASSIFICATION	0.9999619708947146	WITHOUT_CLASSIFICATION	3.802910528541787E-5	TEST
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9997432035192921	WITHOUT_CLASSIFICATION	2.5679648070789097E-4	TEST
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999985887179367	WITHOUT_CLASSIFICATION	1.4112820632633512E-6	TEST
// eh?!	WITHOUT_CLASSIFICATION	0.99995779764608	WITHOUT_CLASSIFICATION	4.220235392014826E-5	TEST
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999541804107293	WITHOUT_CLASSIFICATION	4.5819589270712205E-5	TEST
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999931379254938	WITHOUT_CLASSIFICATION	6.862074506116724E-6	TEST
// the requested precision	WITHOUT_CLASSIFICATION	0.9999946431712233	WITHOUT_CLASSIFICATION	5.356828776663069E-6	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.9999973929060797	WITHOUT_CLASSIFICATION	2.6070939202899393E-6	TEST
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999906761015254	WITHOUT_CLASSIFICATION	9.323898474611353E-6	TEST
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.999989898328731	WITHOUT_CLASSIFICATION	1.010167126898029E-5	TEST
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999406070397463	WITHOUT_CLASSIFICATION	5.939296025369969E-5	TEST
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999921584844067	WITHOUT_CLASSIFICATION	7.841515593283562E-6	TEST
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999968175564335	WITHOUT_CLASSIFICATION	3.182443566552411E-6	TEST
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999950981246257	WITHOUT_CLASSIFICATION	4.901875374301393E-6	TEST
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999906367480733	WITHOUT_CLASSIFICATION	9.363251926717373E-6	TEST
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999956702749763	WITHOUT_CLASSIFICATION	4.329725023659038E-6	TEST
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999713712995384	WITHOUT_CLASSIFICATION	2.862870046155882E-5	TEST
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999960314173529	WITHOUT_CLASSIFICATION	3.968582647085614E-6	TEST
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999873766530762	WITHOUT_CLASSIFICATION	1.2623346923760062E-5	TEST
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999740411483445	WITHOUT_CLASSIFICATION	2.595885165542971E-5	TEST
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999901083292846	WITHOUT_CLASSIFICATION	9.89167071545124E-6	TEST
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999893369544696	WITHOUT_CLASSIFICATION	1.0663045530331473E-5	TEST
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999814747783227	WITHOUT_CLASSIFICATION	1.8525221677336426E-5	TEST
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999912285259867	WITHOUT_CLASSIFICATION	8.771474013305142E-6	TEST
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999891318041159	WITHOUT_CLASSIFICATION	1.0868195884043991E-5	TEST
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999901220887814	WITHOUT_CLASSIFICATION	9.877911218636064E-6	TEST
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999936349052331	WITHOUT_CLASSIFICATION	6.365094766938604E-6	TEST
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.999998244926658	WITHOUT_CLASSIFICATION	1.755073341900324E-6	TEST
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999983784453917	WITHOUT_CLASSIFICATION	1.6215546082370286E-6	TEST
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9999836147402794	WITHOUT_CLASSIFICATION	1.638525972066752E-5	TEST
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999986938308001	WITHOUT_CLASSIFICATION	1.3061691998721365E-6	TEST
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999876605166736	WITHOUT_CLASSIFICATION	1.2339483326345546E-5	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999869281751181	WITHOUT_CLASSIFICATION	1.3071824881844104E-5	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999869281751181	WITHOUT_CLASSIFICATION	1.3071824881844104E-5	TEST
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999829557792868	WITHOUT_CLASSIFICATION	1.7044220713155687E-5	TEST
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999812840349795	WITHOUT_CLASSIFICATION	1.8715965020520457E-5	TEST
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999985852731195	WITHOUT_CLASSIFICATION	1.4147268804903167E-6	TEST
//consume the file name	WITHOUT_CLASSIFICATION	0.9999395419375182	WITHOUT_CLASSIFICATION	6.0458062481715056E-5	TEST
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.999816609548847	WITHOUT_CLASSIFICATION	1.8339045115288346E-4	TEST
// try cwd first	WITHOUT_CLASSIFICATION	0.9999967178113061	WITHOUT_CLASSIFICATION	3.2821886939640997E-6	TEST
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999714976281222	WITHOUT_CLASSIFICATION	2.850237187777954E-5	TEST
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.999649118633104	WITHOUT_CLASSIFICATION	3.508813668959867E-4	TEST
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999888650785154	WITHOUT_CLASSIFICATION	1.1134921484714331E-5	TEST
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999888650785154	WITHOUT_CLASSIFICATION	1.1134921484714331E-5	TEST
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999888650785154	WITHOUT_CLASSIFICATION	1.1134921484714331E-5	TEST
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999557767110152	WITHOUT_CLASSIFICATION	4.422328898487604E-5	TEST
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9991497171145736	WITHOUT_CLASSIFICATION	8.502828854264821E-4	TEST
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999973287856893	WITHOUT_CLASSIFICATION	2.6712143108047406E-6	TEST
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9965668653382181	WITHOUT_CLASSIFICATION	0.00343313466178191	TEST
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9999615102281809	WITHOUT_CLASSIFICATION	3.848977181916342E-5	TEST
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999623933600419	WITHOUT_CLASSIFICATION	3.760663995799678E-5	TEST
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999960430265203	WITHOUT_CLASSIFICATION	3.956973479681315E-6	TEST
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999995977996495	WITHOUT_CLASSIFICATION	4.022003504765178E-7	TEST
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9991497171145736	WITHOUT_CLASSIFICATION	8.502828854264821E-4	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999831386749148	WITHOUT_CLASSIFICATION	1.6861325085142162E-5	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999831386749148	WITHOUT_CLASSIFICATION	1.6861325085142162E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999222204506973	WITHOUT_CLASSIFICATION	7.777954930259695E-5	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999932620579928	WITHOUT_CLASSIFICATION	6.737942007210436E-6	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999479446641532	WITHOUT_CLASSIFICATION	5.2055335846901385E-5	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999904002360657	WITHOUT_CLASSIFICATION	9.59976393442649E-6	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999935377566838	WITHOUT_CLASSIFICATION	6.462243316283469E-6	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999965038380583	WITHOUT_CLASSIFICATION	3.4961619417303287E-6	TEST
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9998421685306106	WITHOUT_CLASSIFICATION	1.5783146938938087E-4	TEST
// Profile	WITHOUT_CLASSIFICATION	0.9999578141215496	WITHOUT_CLASSIFICATION	4.2185878450487885E-5	TEST
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999062199886865	WITHOUT_CLASSIFICATION	9.378001131347323E-5	TEST
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999985050822874	WITHOUT_CLASSIFICATION	1.4949177126252886E-6	TEST
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999847129167521	WITHOUT_CLASSIFICATION	1.5287083247890285E-5	TEST
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999955697360798	WITHOUT_CLASSIFICATION	4.430263920100245E-6	TEST
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9997673926143914	WITHOUT_CLASSIFICATION	2.3260738560844653E-4	TEST
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9995779536322071	WITHOUT_CLASSIFICATION	4.220463677929123E-4	TEST
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999031301041437	WITHOUT_CLASSIFICATION	9.686989585630718E-5	TEST
// reset the state	WITHOUT_CLASSIFICATION	0.999998219654217	WITHOUT_CLASSIFICATION	1.7803457829648122E-6	TEST
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.999473462743785	WITHOUT_CLASSIFICATION	5.265372562149381E-4	TEST
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
//str is frozen	WITHOUT_CLASSIFICATION	0.999759938642254	WITHOUT_CLASSIFICATION	2.400613577460432E-4	TEST
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999265515379154	WITHOUT_CLASSIFICATION	7.344846208451732E-5	TEST
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9995360562244411	WITHOUT_CLASSIFICATION	4.639437755589232E-4	TEST
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999970886731004	WITHOUT_CLASSIFICATION	2.9113268995881503E-6	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.999997011614437	WITHOUT_CLASSIFICATION	2.9883855629882714E-6	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999794183856967	WITHOUT_CLASSIFICATION	2.0581614303300395E-5	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999982766166674	WITHOUT_CLASSIFICATION	1.723383332592456E-6	TEST
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999952722473958	WITHOUT_CLASSIFICATION	4.727752604264293E-6	TEST
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999977619081147	WITHOUT_CLASSIFICATION	2.238091885169468E-6	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9995558857780455	WITHOUT_CLASSIFICATION	4.441142219545027E-4	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999933475261696	WITHOUT_CLASSIFICATION	6.652473830356264E-6	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999933475261696	WITHOUT_CLASSIFICATION	6.652473830356264E-6	TEST
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.999998795316436	WITHOUT_CLASSIFICATION	1.204683564017859E-6	TEST
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.999976907294755	WITHOUT_CLASSIFICATION	2.309270524508149E-5	TEST
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999769778765051	WITHOUT_CLASSIFICATION	2.3022123494868626E-5	TEST
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999855655374175	WITHOUT_CLASSIFICATION	1.4434462582482406E-5	TEST
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999984793059734	WITHOUT_CLASSIFICATION	1.5206940266619711E-6	TEST
// static initializing method	WITHOUT_CLASSIFICATION	0.999997148671009	WITHOUT_CLASSIFICATION	2.851328991054668E-6	TEST
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999758294629819	WITHOUT_CLASSIFICATION	2.4170537018018308E-5	TEST
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999991197857252	WITHOUT_CLASSIFICATION	8.802142748455284E-7	TEST
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999608893703386	WITHOUT_CLASSIFICATION	3.9110629661558696E-5	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999888862556514	WITHOUT_CLASSIFICATION	1.1113744348648048E-5	TEST
// self // method name	WITHOUT_CLASSIFICATION	0.9999918355941607	WITHOUT_CLASSIFICATION	8.16440583921908E-6	TEST
// the default allocator	WITHOUT_CLASSIFICATION	0.9999972889424202	WITHOUT_CLASSIFICATION	2.7110575797841447E-6	TEST
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999945043051689	WITHOUT_CLASSIFICATION	5.495694831134323E-6	TEST
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999930003502709	WITHOUT_CLASSIFICATION	6.999649729069267E-6	TEST
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999921895575739	WITHOUT_CLASSIFICATION	7.810442426109206E-6	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999901232309849	WITHOUT_CLASSIFICATION	9.876769015086213E-6	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.999986252160453	WITHOUT_CLASSIFICATION	1.3747839547016826E-5	TEST
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999946023874581	WITHOUT_CLASSIFICATION	5.397612541870396E-6	TEST
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999993144841046	WITHOUT_CLASSIFICATION	6.855158953557205E-7	TEST
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999461078983429	WITHOUT_CLASSIFICATION	5.389210165717745E-5	TEST
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999671207658983	WITHOUT_CLASSIFICATION	3.28792341015359E-5	TEST
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999898576347921	WITHOUT_CLASSIFICATION	1.0142365207987435E-5	TEST
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999879124343676	WITHOUT_CLASSIFICATION	1.208756563234081E-5	TEST
// a gotcha	WITHOUT_CLASSIFICATION	0.9999975779789358	WITHOUT_CLASSIFICATION	2.4220210641668333E-6	TEST
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999993566257471	WITHOUT_CLASSIFICATION	6.43374252895933E-7	TEST
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999829950061151	WITHOUT_CLASSIFICATION	1.700499388489608E-5	TEST
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999945043051689	WITHOUT_CLASSIFICATION	5.495694831134323E-6	TEST
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.999986390255186	WITHOUT_CLASSIFICATION	1.3609744813922167E-5	TEST
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999921895575739	WITHOUT_CLASSIFICATION	7.810442426109206E-6	TEST
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999703360923949	WITHOUT_CLASSIFICATION	2.966390760505244E-5	TEST
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999815946047519	WITHOUT_CLASSIFICATION	1.840539524814759E-5	TEST
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999950829674	WITHOUT_CLASSIFICATION	4.917032599961252E-6	TEST
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999879124343676	WITHOUT_CLASSIFICATION	1.208756563234081E-5	TEST
// provider is not available	WITHOUT_CLASSIFICATION	0.9999009530054288	WITHOUT_CLASSIFICATION	9.904699457127779E-5	TEST
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999299248450172	WITHOUT_CLASSIFICATION	7.00751549828418E-5	TEST
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999938575930997	WITHOUT_CLASSIFICATION	6.142406900382283E-6	TEST
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.999965897093403	WITHOUT_CLASSIFICATION	3.4102906596986454E-5	TEST
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999825597047196	WITHOUT_CLASSIFICATION	1.744029528037602E-5	TEST
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999667778540003	WITHOUT_CLASSIFICATION	3.322214599972295E-5	TEST
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999997626571596	WITHOUT_CLASSIFICATION	2.3734284028095886E-7	TEST
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999981490266927	WITHOUT_CLASSIFICATION	1.850973307233792E-6	TEST
// JRubyService	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// while	WITHOUT_CLASSIFICATION	0.9999605198000614	WITHOUT_CLASSIFICATION	3.948019993856761E-5	TEST
/* \OOO */	WITHOUT_CLASSIFICATION	0.999912879859392	WITHOUT_CLASSIFICATION	8.712014060801242E-5	TEST
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999996068143462	WITHOUT_CLASSIFICATION	3.931856537883328E-7	TEST
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999903016447196	WITHOUT_CLASSIFICATION	9.698355280372624E-6	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999902967326492	WITHOUT_CLASSIFICATION	9.703267350889398E-6	TEST
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999741308160648	WITHOUT_CLASSIFICATION	2.5869183935195768E-5	TEST
// silent ?	WITHOUT_CLASSIFICATION	0.9999962250505812	WITHOUT_CLASSIFICATION	3.7749494188141058E-6	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.999912879859392	WITHOUT_CLASSIFICATION	8.712014060801242E-5	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999750463167172	WITHOUT_CLASSIFICATION	2.495368328278691E-5	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999898479608623	WITHOUT_CLASSIFICATION	1.015203913765423E-5	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999898479608623	WITHOUT_CLASSIFICATION	1.015203913765423E-5	TEST
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999729157871795	WITHOUT_CLASSIFICATION	2.7084212820536378E-5	TEST
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999635344459319	WITHOUT_CLASSIFICATION	3.646555406815945E-5	TEST
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999898479608623	WITHOUT_CLASSIFICATION	1.015203913765423E-5	TEST
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999917744770684	WITHOUT_CLASSIFICATION	8.225522931539267E-6	TEST
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999898479608623	WITHOUT_CLASSIFICATION	1.015203913765423E-5	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.999912879859392	WITHOUT_CLASSIFICATION	8.712014060801242E-5	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999898479608623	WITHOUT_CLASSIFICATION	1.015203913765423E-5	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999750463167172	WITHOUT_CLASSIFICATION	2.495368328278691E-5	TEST
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999405969361832	WITHOUT_CLASSIFICATION	5.9403063816770716E-5	TEST
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999898479608623	WITHOUT_CLASSIFICATION	1.015203913765423E-5	TEST
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999898479608623	WITHOUT_CLASSIFICATION	1.015203913765423E-5	TEST
// inner switch	WITHOUT_CLASSIFICATION	0.9999972123475003	WITHOUT_CLASSIFICATION	2.7876524997407733E-6	TEST
// newInstance here	WITHOUT_CLASSIFICATION	0.9999892000878832	WITHOUT_CLASSIFICATION	1.0799912116739185E-5	TEST
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999879124343676	WITHOUT_CLASSIFICATION	1.208756563234081E-5	TEST
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999879124343676	WITHOUT_CLASSIFICATION	1.208756563234081E-5	TEST
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999729564393522	WITHOUT_CLASSIFICATION	2.7043560647692675E-5	TEST
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// option_to_str	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999981939484768	WITHOUT_CLASSIFICATION	1.8060515232975133E-6	TEST
// args should be before block	WITHOUT_CLASSIFICATION	0.9999688114913509	WITHOUT_CLASSIFICATION	3.1188508649123716E-5	TEST
// args should be at end	WITHOUT_CLASSIFICATION	0.9999630694233262	WITHOUT_CLASSIFICATION	3.693057667372702E-5	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9998891811217129	WITHOUT_CLASSIFICATION	1.1081887828718137E-4	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9998891811217129	WITHOUT_CLASSIFICATION	1.1081887828718137E-4	TEST
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999923117894082	WITHOUT_CLASSIFICATION	7.688210591794892E-6	TEST
// start a new populator	WITHOUT_CLASSIFICATION	0.9999914376120584	WITHOUT_CLASSIFICATION	8.562387941572724E-6	TEST
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9998771298448903	WITHOUT_CLASSIFICATION	1.228701551097175E-4	TEST
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.999708981638278	WITHOUT_CLASSIFICATION	2.910183617219975E-4	TEST
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999940830053079	WITHOUT_CLASSIFICATION	5.916994692046607E-6	TEST
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.999965326921912	WITHOUT_CLASSIFICATION	3.467307808792894E-5	TEST
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.99998353845247	WITHOUT_CLASSIFICATION	1.6461547529943246E-5	TEST
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999794506626111	WITHOUT_CLASSIFICATION	2.0549337388900593E-5	TEST
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999888012331478	WITHOUT_CLASSIFICATION	1.1198766852230677E-5	TEST
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999977890320013	WITHOUT_CLASSIFICATION	2.2109679987606956E-6	TEST
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999880327788525	WITHOUT_CLASSIFICATION	1.1967221147461345E-5	TEST
//                }	WITHOUT_CLASSIFICATION	0.9999949906011952	WITHOUT_CLASSIFICATION	5.0093988046559315E-6	TEST
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999718072167109	WITHOUT_CLASSIFICATION	2.8192783289165233E-5	TEST
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9996526648057057	WITHOUT_CLASSIFICATION	3.473351942942946E-4	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999218723653204	WITHOUT_CLASSIFICATION	7.812763467965174E-5	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999893192269884	WITHOUT_CLASSIFICATION	1.0680773011504466E-5	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999982430587108	WITHOUT_CLASSIFICATION	1.7569412891618568E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999925868154272	WITHOUT_CLASSIFICATION	7.413184572877259E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999925868154272	WITHOUT_CLASSIFICATION	7.413184572877259E-6	TEST
// colon3	WITHOUT_CLASSIFICATION	0.99995779764608	WITHOUT_CLASSIFICATION	4.220235392014826E-5	TEST
// Colon3	WITHOUT_CLASSIFICATION	0.99995779764608	WITHOUT_CLASSIFICATION	4.220235392014826E-5	TEST
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999386718005809	WITHOUT_CLASSIFICATION	6.132819941915168E-5	TEST
// For b.foo	WITHOUT_CLASSIFICATION	0.9999922890616246	WITHOUT_CLASSIFICATION	7.710938375385404E-6	TEST
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999778103833001	WITHOUT_CLASSIFICATION	2.218961669985213E-5	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999925868154272	WITHOUT_CLASSIFICATION	7.413184572877259E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999925868154272	WITHOUT_CLASSIFICATION	7.413184572877259E-6	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999891506004576	WITHOUT_CLASSIFICATION	1.0849399542424662E-5	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999891506004576	WITHOUT_CLASSIFICATION	1.0849399542424662E-5	TEST
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9998742372267311	WITHOUT_CLASSIFICATION	1.2576277326880656E-4	TEST
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999922890616246	WITHOUT_CLASSIFICATION	7.710938375385404E-6	TEST
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999989914526536	WITHOUT_CLASSIFICATION	1.0085473463838787E-6	TEST
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999883965188149	WITHOUT_CLASSIFICATION	1.1603481185180238E-5	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999930209624717	WITHOUT_CLASSIFICATION	6.979037528323472E-6	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999930209624717	WITHOUT_CLASSIFICATION	6.979037528323472E-6	TEST
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999972112611375	WITHOUT_CLASSIFICATION	2.7887388624648252E-6	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999665607635937	WITHOUT_CLASSIFICATION	3.343923640629423E-5	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999860839581118	WITHOUT_CLASSIFICATION	1.3916041888119213E-5	TEST
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9999394109171743	WITHOUT_CLASSIFICATION	6.0589082825761744E-5	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999891506004576	WITHOUT_CLASSIFICATION	1.0849399542424662E-5	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999919061594388	WITHOUT_CLASSIFICATION	8.09384056113853E-6	TEST
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9994962621363087	WITHOUT_CLASSIFICATION	5.037378636912322E-4	TEST
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.999995306665297	WITHOUT_CLASSIFICATION	4.69333470289135E-6	TEST
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999897763705837	WITHOUT_CLASSIFICATION	1.0223629416247836E-5	TEST
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999986878466915	WITHOUT_CLASSIFICATION	1.312153308431365E-6	TEST
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999474364321445	WITHOUT_CLASSIFICATION	5.2563567855555924E-5	TEST
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999690738163328	WITHOUT_CLASSIFICATION	3.09261836671515E-5	TEST
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999978207265506	WITHOUT_CLASSIFICATION	2.179273449259948E-6	TEST
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999958244277343	WITHOUT_CLASSIFICATION	4.1755722658204945E-6	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999893192269884	WITHOUT_CLASSIFICATION	1.0680773011504466E-5	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999925868154272	WITHOUT_CLASSIFICATION	7.413184572877259E-6	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999891506004576	WITHOUT_CLASSIFICATION	1.0849399542424662E-5	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999919061594388	WITHOUT_CLASSIFICATION	8.09384056113853E-6	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999984677483846	WITHOUT_CLASSIFICATION	1.5322516153126302E-6	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999984677483846	WITHOUT_CLASSIFICATION	1.5322516153126302E-6	TEST
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999919905212744	WITHOUT_CLASSIFICATION	8.009478725600615E-6	TEST
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999970589101453	WITHOUT_CLASSIFICATION	2.941089854627887E-6	TEST
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999964697520163	WITHOUT_CLASSIFICATION	3.5302479837937357E-6	TEST
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999994725411017	WITHOUT_CLASSIFICATION	5.274588983290649E-7	TEST
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9998801942658933	WITHOUT_CLASSIFICATION	1.1980573410671766E-4	TEST
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999985102958274	WITHOUT_CLASSIFICATION	1.4897041724659045E-6	TEST
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999770351707868	WITHOUT_CLASSIFICATION	2.296482921312197E-5	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.99992683683839	WITHOUT_CLASSIFICATION	7.316316161000133E-5	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999994902775703	WITHOUT_CLASSIFICATION	5.097224296847889E-7	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999805325089406	WITHOUT_CLASSIFICATION	1.946749105939265E-5	TEST
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999779438017635	WITHOUT_CLASSIFICATION	2.2056198236507342E-5	TEST
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999993316318424	WITHOUT_CLASSIFICATION	6.68368157509594E-7	TEST
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999918780755861	WITHOUT_CLASSIFICATION	8.12192441390438E-6	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999982430587108	WITHOUT_CLASSIFICATION	1.7569412891618568E-6	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999891506004576	WITHOUT_CLASSIFICATION	1.0849399542424662E-5	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999665607635937	WITHOUT_CLASSIFICATION	3.343923640629423E-5	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999860839581118	WITHOUT_CLASSIFICATION	1.3916041888119213E-5	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999860839581118	WITHOUT_CLASSIFICATION	1.3916041888119213E-5	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999891506004576	WITHOUT_CLASSIFICATION	1.0849399542424662E-5	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999919061594388	WITHOUT_CLASSIFICATION	8.09384056113853E-6	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999919061594388	WITHOUT_CLASSIFICATION	8.09384056113853E-6	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999984677483846	WITHOUT_CLASSIFICATION	1.5322516153126302E-6	TEST
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999861110853777	WITHOUT_CLASSIFICATION	1.3888914622139965E-5	TEST
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.999660877554809	WITHOUT_CLASSIFICATION	3.391224451909531E-4	TEST
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999995025106376	WITHOUT_CLASSIFICATION	4.974893622872841E-7	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999746267998522	WITHOUT_CLASSIFICATION	2.5373200147854723E-5	TEST
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999632190972476	WITHOUT_CLASSIFICATION	3.678090275235107E-5	TEST
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9990492849734285	WITHOUT_CLASSIFICATION	9.507150265714425E-4	TEST
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999862098964263	WITHOUT_CLASSIFICATION	1.3790103573817793E-5	TEST
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999985713607107	WITHOUT_CLASSIFICATION	1.4286392892720046E-6	TEST
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999901222412709	WITHOUT_CLASSIFICATION	9.877758729076547E-6	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999665607635937	WITHOUT_CLASSIFICATION	3.343923640629423E-5	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999860839581118	WITHOUT_CLASSIFICATION	1.3916041888119213E-5	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999860839581118	WITHOUT_CLASSIFICATION	1.3916041888119213E-5	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999891506004576	WITHOUT_CLASSIFICATION	1.0849399542424662E-5	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.99992683683839	WITHOUT_CLASSIFICATION	7.316316161000133E-5	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999805325089406	WITHOUT_CLASSIFICATION	1.946749105939265E-5	TEST
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9993963679917478	WITHOUT_CLASSIFICATION	6.036320082520688E-4	TEST
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999984975896442	WITHOUT_CLASSIFICATION	1.5024103557544052E-6	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999922890616246	WITHOUT_CLASSIFICATION	7.710938375385404E-6	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999922890616246	WITHOUT_CLASSIFICATION	7.710938375385404E-6	TEST
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999879124343676	WITHOUT_CLASSIFICATION	1.208756563234081E-5	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999875679618178	WITHOUT_CLASSIFICATION	1.2432038182316669E-5	TEST
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999830204679344	WITHOUT_CLASSIFICATION	1.6979532065572178E-5	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999884419135876	WITHOUT_CLASSIFICATION	1.1558086412462875E-5	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.999998513649461	WITHOUT_CLASSIFICATION	1.4863505390574999E-6	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.999998513649461	WITHOUT_CLASSIFICATION	1.4863505390574999E-6	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999815095079045	WITHOUT_CLASSIFICATION	1.8490492095515226E-5	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999815095079045	WITHOUT_CLASSIFICATION	1.8490492095515226E-5	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999964691033106	WITHOUT_CLASSIFICATION	3.5308966892387664E-6	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999964691033106	WITHOUT_CLASSIFICATION	3.5308966892387664E-6	TEST
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999885568420482	WITHOUT_CLASSIFICATION	1.1443157951717288E-5	TEST
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999823666571866	WITHOUT_CLASSIFICATION	1.7633342813401444E-5	TEST
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999148329397193	WITHOUT_CLASSIFICATION	8.516706028072915E-5	TEST
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999950023663748	WITHOUT_CLASSIFICATION	4.9976336251399575E-6	TEST
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999996845854935	WITHOUT_CLASSIFICATION	3.154145065186295E-7	TEST
// pragmas	WITHOUT_CLASSIFICATION	0.99995779764608	WITHOUT_CLASSIFICATION	4.220235392014826E-5	TEST
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999977599601061	WITHOUT_CLASSIFICATION	2.240039894022672E-6	TEST
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.99999858194001	WITHOUT_CLASSIFICATION	1.4180599899590196E-6	TEST
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9998946470466678	WITHOUT_CLASSIFICATION	1.0535295333227416E-4	TEST
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.999904430772445	WITHOUT_CLASSIFICATION	9.556922755506887E-5	TEST
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999986509376487	WITHOUT_CLASSIFICATION	1.3490623513400982E-6	TEST
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999932711843902	WITHOUT_CLASSIFICATION	6.728815609754462E-6	TEST
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999100315238437	WITHOUT_CLASSIFICATION	8.996847615636278E-5	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999919954443772	WITHOUT_CLASSIFICATION	8.004555622750334E-6	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999919954443772	WITHOUT_CLASSIFICATION	8.004555622750334E-6	TEST
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9998898962060454	WITHOUT_CLASSIFICATION	1.1010379395452608E-4	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999965038380583	WITHOUT_CLASSIFICATION	3.4961619417303287E-6	TEST
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9999256402943044	WITHOUT_CLASSIFICATION	7.43597056955494E-5	TEST
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999985818633803	WITHOUT_CLASSIFICATION	1.4181366196724628E-6	TEST
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999965007203618	WITHOUT_CLASSIFICATION	3.4992796381131947E-6	TEST
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999848586187545	WITHOUT_CLASSIFICATION	1.5141381245538163E-5	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999916477398212	WITHOUT_CLASSIFICATION	8.352260178903245E-6	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999956344568238	WITHOUT_CLASSIFICATION	4.365543176165818E-6	TEST
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999989869809456	WITHOUT_CLASSIFICATION	1.0130190543746395E-6	TEST
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999490088355976	WITHOUT_CLASSIFICATION	5.0991164402465816E-5	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999935866322359	WITHOUT_CLASSIFICATION	6.413367764104791E-6	TEST
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9998696752706403	WITHOUT_CLASSIFICATION	1.3032472935978434E-4	TEST
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999424937896019	WITHOUT_CLASSIFICATION	5.750621039799649E-5	TEST
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999756310615537	WITHOUT_CLASSIFICATION	2.4368938446217702E-5	TEST
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999401751387734	WITHOUT_CLASSIFICATION	5.982486122649188E-5	TEST
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.999954837548096	WITHOUT_CLASSIFICATION	4.516245190391926E-5	TEST
// can't do it	WITHOUT_CLASSIFICATION	0.9999918339896211	WITHOUT_CLASSIFICATION	8.166010378983986E-6	TEST
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999850188698552	WITHOUT_CLASSIFICATION	1.4981130144790252E-5	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999960589809817	WITHOUT_CLASSIFICATION	3.941019018348465E-6	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999960589809817	WITHOUT_CLASSIFICATION	3.941019018348465E-6	TEST
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999716315262247	WITHOUT_CLASSIFICATION	2.8368473775335956E-5	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9996743258963415	WITHOUT_CLASSIFICATION	3.256741036584599E-4	TEST
//[]	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
//[]	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999690738163328	WITHOUT_CLASSIFICATION	3.09261836671515E-5	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9996743258963415	WITHOUT_CLASSIFICATION	3.256741036584599E-4	TEST
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9996743258963415	WITHOUT_CLASSIFICATION	3.256741036584599E-4	TEST
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999981866228572	WITHOUT_CLASSIFICATION	1.8133771427779946E-6	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999974135798967	WITHOUT_CLASSIFICATION	2.5864201032129776E-6	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999974135798967	WITHOUT_CLASSIFICATION	2.5864201032129776E-6	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999979777939995	WITHOUT_CLASSIFICATION	2.0222060005483984E-6	TEST
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.999996318162225	WITHOUT_CLASSIFICATION	3.6818377750037396E-6	TEST
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999540318950956	WITHOUT_CLASSIFICATION	4.5968104904423775E-5	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9996743258963415	WITHOUT_CLASSIFICATION	3.256741036584599E-4	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9996743258963415	WITHOUT_CLASSIFICATION	3.256741036584599E-4	TEST
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9996743258963415	WITHOUT_CLASSIFICATION	3.256741036584599E-4	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9996743258963415	WITHOUT_CLASSIFICATION	3.256741036584599E-4	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999483551467561	WITHOUT_CLASSIFICATION	5.1644853243892053E-5	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999997330282672	WITHOUT_CLASSIFICATION	2.669717327904785E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999997330282672	WITHOUT_CLASSIFICATION	2.669717327904785E-6	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999852107381904	WITHOUT_CLASSIFICATION	1.4789261809596714E-5	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999852107381904	WITHOUT_CLASSIFICATION	1.4789261809596714E-5	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999852107381904	WITHOUT_CLASSIFICATION	1.4789261809596714E-5	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999997330282672	WITHOUT_CLASSIFICATION	2.669717327904785E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999997330282672	WITHOUT_CLASSIFICATION	2.669717327904785E-6	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999483551467561	WITHOUT_CLASSIFICATION	5.1644853243892053E-5	TEST
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999807009944551	WITHOUT_CLASSIFICATION	1.9299005544875878E-5	TEST
// always false or nil	WITHOUT_CLASSIFICATION	0.9999895295131807	WITHOUT_CLASSIFICATION	1.0470486819424112E-5	TEST
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999884133162102	WITHOUT_CLASSIFICATION	1.1586683789740193E-5	TEST
// normal	WITHOUT_CLASSIFICATION	0.9999587538436201	WITHOUT_CLASSIFICATION	4.1246156379861356E-5	TEST
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999994293750372	WITHOUT_CLASSIFICATION	5.706249628903073E-7	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.999953428004523	WITHOUT_CLASSIFICATION	4.657199547702204E-5	TEST
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999944969095105	WITHOUT_CLASSIFICATION	5.503090489543279E-6	TEST
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999668442754076	WITHOUT_CLASSIFICATION	3.315572459231784E-5	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999935866322359	WITHOUT_CLASSIFICATION	6.413367764104791E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999997330282672	WITHOUT_CLASSIFICATION	2.669717327904785E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999997330282672	WITHOUT_CLASSIFICATION	2.669717327904785E-6	TEST
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999898897280213	WITHOUT_CLASSIFICATION	1.0110271978654072E-5	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999957854476702	WITHOUT_CLASSIFICATION	4.2145523297882756E-6	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999966593134773	WITHOUT_CLASSIFICATION	3.3406865227105756E-6	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999948893611719	WITHOUT_CLASSIFICATION	5.11063882813859E-6	TEST
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999929557707716	WITHOUT_CLASSIFICATION	7.044229228377114E-6	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999984589205677	WITHOUT_CLASSIFICATION	1.541079432240851E-6	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999927920869658	WITHOUT_CLASSIFICATION	7.207913034188168E-6	TEST
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999996502608548	WITHOUT_CLASSIFICATION	3.497391451798851E-7	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999862970917005	WITHOUT_CLASSIFICATION	1.370290829953384E-5	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999962070052509	WITHOUT_CLASSIFICATION	3.7929947490072576E-6	TEST
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9998739541081717	WITHOUT_CLASSIFICATION	1.2604589182841285E-4	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.9999639690145046	WITHOUT_CLASSIFICATION	3.603098549530419E-5	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999619707901913	WITHOUT_CLASSIFICATION	3.802920980872099E-5	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.999992060455048	WITHOUT_CLASSIFICATION	7.939544952115383E-6	TEST
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.999999668954847	WITHOUT_CLASSIFICATION	3.310451529405176E-7	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.99995779764608	WITHOUT_CLASSIFICATION	4.220235392014826E-5	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.99995779764608	WITHOUT_CLASSIFICATION	4.220235392014826E-5	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.99995779764608	WITHOUT_CLASSIFICATION	4.220235392014826E-5	TEST
// compile into array	WITHOUT_CLASSIFICATION	0.9999947538479662	WITHOUT_CLASSIFICATION	5.246152033773629E-6	TEST
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999989168146896	WITHOUT_CLASSIFICATION	1.0831853104217446E-6	TEST
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999973121982825	WITHOUT_CLASSIFICATION	2.687801717543987E-6	TEST
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999169339447813	WITHOUT_CLASSIFICATION	8.306605521867857E-5	TEST
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999964344056111	WITHOUT_CLASSIFICATION	3.5655943888886326E-6	TEST
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999948177503802	WITHOUT_CLASSIFICATION	5.1822496197284735E-6	TEST
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999997193014857	WITHOUT_CLASSIFICATION	2.8069851433575055E-7	TEST
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999339800464205	WITHOUT_CLASSIFICATION	6.601995357942E-5	TEST
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999801293290337	WITHOUT_CLASSIFICATION	1.987067096628888E-5	TEST
// leave as a normal array	WITHOUT_CLASSIFICATION	0.999998398430464	WITHOUT_CLASSIFICATION	1.6015695359310406E-6	TEST
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999973297315197	WITHOUT_CLASSIFICATION	2.6702684803606362E-6	TEST
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999435166373847	WITHOUT_CLASSIFICATION	5.648336261537764E-5	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999979777939995	WITHOUT_CLASSIFICATION	2.0222060005483984E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999997330282672	WITHOUT_CLASSIFICATION	2.669717327904785E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999997330282672	WITHOUT_CLASSIFICATION	2.669717327904785E-6	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999483551467561	WITHOUT_CLASSIFICATION	5.1644853243892053E-5	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.999953428004523	WITHOUT_CLASSIFICATION	4.657199547702204E-5	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999957854476702	WITHOUT_CLASSIFICATION	4.2145523297882756E-6	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999948893611719	WITHOUT_CLASSIFICATION	5.11063882813859E-6	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999984589205677	WITHOUT_CLASSIFICATION	1.541079432240851E-6	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999966593134773	WITHOUT_CLASSIFICATION	3.3406865227105756E-6	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999927920869658	WITHOUT_CLASSIFICATION	7.207913034188168E-6	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999962070052509	WITHOUT_CLASSIFICATION	3.7929947490072576E-6	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999862970917005	WITHOUT_CLASSIFICATION	1.370290829953384E-5	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.9999639690145046	WITHOUT_CLASSIFICATION	3.603098549530419E-5	TEST
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999977850507522	WITHOUT_CLASSIFICATION	2.2149492477681223E-6	TEST
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999985381620498	WITHOUT_CLASSIFICATION	1.4618379502972437E-6	TEST
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999962037710939	WITHOUT_CLASSIFICATION	3.7962289060397705E-6	TEST
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999933274726744	WITHOUT_CLASSIFICATION	6.672527325611546E-6	TEST
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999833518762411	WITHOUT_CLASSIFICATION	1.6648123758851515E-5	TEST
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999944898065415	WITHOUT_CLASSIFICATION	5.510193458412686E-6	TEST
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999974786607413	WITHOUT_CLASSIFICATION	2.521339258658564E-6	TEST
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999675071419236	WITHOUT_CLASSIFICATION	3.249285807636976E-5	TEST
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999963388107811	WITHOUT_CLASSIFICATION	3.661189218945863E-6	TEST
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999996955232833	WITHOUT_CLASSIFICATION	3.044767166686361E-7	TEST
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.999992784650976	WITHOUT_CLASSIFICATION	7.215349024107656E-6	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999931004086133	WITHOUT_CLASSIFICATION	6.899591386733837E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999662583889954	WITHOUT_CLASSIFICATION	3.3741611004651084E-5	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999987154483192	WITHOUT_CLASSIFICATION	1.2845516807844923E-6	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999937521295844	WITHOUT_CLASSIFICATION	6.247870415596819E-6	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999950967599046	WITHOUT_CLASSIFICATION	4.903240095383635E-6	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999788536419139	WITHOUT_CLASSIFICATION	2.11463580860584E-5	TEST
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999945988126149	WITHOUT_CLASSIFICATION	5.401187385152145E-6	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999981507228337	WITHOUT_CLASSIFICATION	1.8492771662636434E-6	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999978955850374	WITHOUT_CLASSIFICATION	2.1044149626121422E-6	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999976499279888	WITHOUT_CLASSIFICATION	2.3500720112797694E-6	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999995326428338	WITHOUT_CLASSIFICATION	4.6735716610919987E-7	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999995326428338	WITHOUT_CLASSIFICATION	4.6735716610919987E-7	TEST
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9997800305046818	WITHOUT_CLASSIFICATION	2.1996949531824517E-4	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999970108502648	WITHOUT_CLASSIFICATION	2.989149735165391E-6	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
/*arg2*/	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999970108502648	WITHOUT_CLASSIFICATION	2.989149735165391E-6	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999863998659777	WITHOUT_CLASSIFICATION	1.3600134022310589E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999984313707123	WITHOUT_CLASSIFICATION	1.5686292876376809E-6	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999984313707123	WITHOUT_CLASSIFICATION	1.5686292876376809E-6	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.99999472980327	WITHOUT_CLASSIFICATION	5.270196730027037E-6	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.99999472980327	WITHOUT_CLASSIFICATION	5.270196730027037E-6	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9999580906146811	WITHOUT_CLASSIFICATION	4.190938531885873E-5	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9999580906146811	WITHOUT_CLASSIFICATION	4.190938531885873E-5	TEST
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999731785192374	WITHOUT_CLASSIFICATION	2.6821480762587E-5	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999633701026271	WITHOUT_CLASSIFICATION	3.6629897372892436E-5	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999633701026271	WITHOUT_CLASSIFICATION	3.6629897372892436E-5	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999910171708529	WITHOUT_CLASSIFICATION	8.982829147071965E-6	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999910171708529	WITHOUT_CLASSIFICATION	8.982829147071965E-6	TEST
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999821799687962	WITHOUT_CLASSIFICATION	1.7820031203757862E-5	TEST
// call site	WITHOUT_CLASSIFICATION	0.9999973030610385	WITHOUT_CLASSIFICATION	2.696938961439884E-6	TEST
// call site	WITHOUT_CLASSIFICATION	0.9999973030610385	WITHOUT_CLASSIFICATION	2.696938961439884E-6	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999970459972777	WITHOUT_CLASSIFICATION	2.954002722285081E-6	TEST
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999481958776234	WITHOUT_CLASSIFICATION	5.1804122376556806E-5	TEST
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999946672581206	WITHOUT_CLASSIFICATION	5.332741879443089E-6	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999970459972777	WITHOUT_CLASSIFICATION	2.954002722285081E-6	TEST
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999711850687443	WITHOUT_CLASSIFICATION	2.8814931255679913E-5	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999925876054945	WITHOUT_CLASSIFICATION	7.412394505540661E-6	TEST
// args	WITHOUT_CLASSIFICATION	0.9999583177642373	WITHOUT_CLASSIFICATION	4.1682235762781034E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999585996777045	WITHOUT_CLASSIFICATION	4.140032229551619E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999585996777045	WITHOUT_CLASSIFICATION	4.140032229551619E-5	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999980677441589	WITHOUT_CLASSIFICATION	1.9322558410498203E-6	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999767158463324	WITHOUT_CLASSIFICATION	2.328415366761511E-5	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.9999767158463324	WITHOUT_CLASSIFICATION	2.3284153667615067E-5	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.9999419130620678	WITHOUT_CLASSIFICATION	5.8086937932128936E-5	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999712246413114	WITHOUT_CLASSIFICATION	2.8775358688507252E-5	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999895233153921	WITHOUT_CLASSIFICATION	1.0476684607729308E-5	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999895233153921	WITHOUT_CLASSIFICATION	1.0476684607729308E-5	TEST
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999980098409272	WITHOUT_CLASSIFICATION	1.9901590727457246E-6	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// args	WITHOUT_CLASSIFICATION	0.9999583177642373	WITHOUT_CLASSIFICATION	4.1682235762781034E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999585996777045	WITHOUT_CLASSIFICATION	4.140032229551619E-5	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999980677441589	WITHOUT_CLASSIFICATION	1.9322558410498203E-6	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999767158463324	WITHOUT_CLASSIFICATION	2.328415366761511E-5	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.9999767158463324	WITHOUT_CLASSIFICATION	2.3284153667615067E-5	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.9999419130620678	WITHOUT_CLASSIFICATION	5.8086937932128936E-5	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999868865759277	WITHOUT_CLASSIFICATION	1.3113424072263114E-5	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999984208616228	WITHOUT_CLASSIFICATION	1.5791383771565739E-6	TEST
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999927839329779	WITHOUT_CLASSIFICATION	7.216067022077743E-6	TEST
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999922119538354	WITHOUT_CLASSIFICATION	7.788046164676966E-6	TEST
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999797387416816	WITHOUT_CLASSIFICATION	2.0261258318440766E-5	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999746345970475	WITHOUT_CLASSIFICATION	2.5365402952512457E-5	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999719348408721	WITHOUT_CLASSIFICATION	2.8065159127909278E-5	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999719348408721	WITHOUT_CLASSIFICATION	2.8065159127909278E-5	TEST
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999900487258185	WITHOUT_CLASSIFICATION	9.95127418140288E-6	TEST
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999819288402221	WITHOUT_CLASSIFICATION	1.8071159777897046E-5	TEST
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999819271041744	WITHOUT_CLASSIFICATION	1.807289582557711E-5	TEST
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.999991035642238	WITHOUT_CLASSIFICATION	8.964357762063876E-6	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.999981943087414	WITHOUT_CLASSIFICATION	1.805691258610003E-5	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.999981943087414	WITHOUT_CLASSIFICATION	1.805691258610003E-5	TEST
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999789687684849	WITHOUT_CLASSIFICATION	2.103123151510851E-5	TEST
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999789747489862	WITHOUT_CLASSIFICATION	2.1025251013880277E-5	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999822721772298	WITHOUT_CLASSIFICATION	1.7727822770238867E-5	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999822721772298	WITHOUT_CLASSIFICATION	1.7727822770238867E-5	TEST
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999819271041744	WITHOUT_CLASSIFICATION	1.807289582557711E-5	TEST
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999950622010624	WITHOUT_CLASSIFICATION	4.937798937666265E-6	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999712246413114	WITHOUT_CLASSIFICATION	2.8775358688507252E-5	TEST
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999972931534125	WITHOUT_CLASSIFICATION	2.7068465875544167E-6	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999573442470382	WITHOUT_CLASSIFICATION	4.265575296187031E-5	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999878339236	WITHOUT_CLASSIFICATION	1.216607639989184E-5	TEST
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999946972269433	WITHOUT_CLASSIFICATION	5.302773056737987E-6	TEST
// load Object under value	WITHOUT_CLASSIFICATION	0.9999758009389864	WITHOUT_CLASSIFICATION	2.4199061013667998E-5	TEST
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999792951738362	WITHOUT_CLASSIFICATION	2.0704826163769067E-5	TEST
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.999987533024823	WITHOUT_CLASSIFICATION	1.2466975177113157E-5	TEST
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999916221969077	WITHOUT_CLASSIFICATION	8.377803092336535E-6	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999981987551186	WITHOUT_CLASSIFICATION	1.8012448814576948E-6	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999981987551186	WITHOUT_CLASSIFICATION	1.8012448814576948E-6	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999728330774231	WITHOUT_CLASSIFICATION	2.7166922576893187E-5	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999728330774231	WITHOUT_CLASSIFICATION	2.7166922576893187E-5	TEST
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.999993871335337	WITHOUT_CLASSIFICATION	6.128664663012832E-6	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999979217046854	WITHOUT_CLASSIFICATION	2.078295314633191E-6	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999979217046854	WITHOUT_CLASSIFICATION	2.078295314633191E-6	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999979217046854	WITHOUT_CLASSIFICATION	2.078295314633191E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999867743825491	WITHOUT_CLASSIFICATION	1.3225617450879814E-5	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999890333354285	WITHOUT_CLASSIFICATION	1.0966664571503905E-5	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999890333354285	WITHOUT_CLASSIFICATION	1.0966664571503905E-5	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999870875496756	WITHOUT_CLASSIFICATION	1.2912450324404522E-5	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.999997360727565	WITHOUT_CLASSIFICATION	2.6392724349799706E-6	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999840502082387	WITHOUT_CLASSIFICATION	1.5949791761329117E-5	TEST
// skip catch block	WITHOUT_CLASSIFICATION	0.9999963671296422	WITHOUT_CLASSIFICATION	3.632870357646489E-6	TEST
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999619713521217	WITHOUT_CLASSIFICATION	3.802864787817901E-5	TEST
// next jump	WITHOUT_CLASSIFICATION	0.9999957726062947	WITHOUT_CLASSIFICATION	4.227393705279363E-6	TEST
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9994189069560415	WITHOUT_CLASSIFICATION	5.810930439585033E-4	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999662583889954	WITHOUT_CLASSIFICATION	3.3741611004651084E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999662583889954	WITHOUT_CLASSIFICATION	3.3741611004651084E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999867743825491	WITHOUT_CLASSIFICATION	1.3225617450879814E-5	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999870875496756	WITHOUT_CLASSIFICATION	1.2912450324404522E-5	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999946531557321	WITHOUT_CLASSIFICATION	5.3468442678493165E-6	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.999997360727565	WITHOUT_CLASSIFICATION	2.6392724349799706E-6	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999840502082387	WITHOUT_CLASSIFICATION	1.5949791761329117E-5	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999914074169908	WITHOUT_CLASSIFICATION	8.592583009213187E-6	TEST
// break jump	WITHOUT_CLASSIFICATION	0.9999954094104234	WITHOUT_CLASSIFICATION	4.59058957649607E-6	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998615242646972	WITHOUT_CLASSIFICATION	1.3847573530279266E-4	TEST
//[reg]	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999177002168906	WITHOUT_CLASSIFICATION	8.229978310930397E-5	TEST
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999990411822064	WITHOUT_CLASSIFICATION	9.58817793540367E-7	TEST
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999975682620034	WITHOUT_CLASSIFICATION	2.431737996573822E-6	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999914074169908	WITHOUT_CLASSIFICATION	8.592583009213187E-6	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999700737696967	WITHOUT_CLASSIFICATION	2.992623030323689E-5	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999700737696967	WITHOUT_CLASSIFICATION	2.992623030323689E-5	TEST
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999829056826357	WITHOUT_CLASSIFICATION	1.7094317364208314E-5	TEST
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999961231348281	WITHOUT_CLASSIFICATION	3.8768651719279924E-6	TEST
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999959438096802	WITHOUT_CLASSIFICATION	4.056190319863001E-6	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.999978922531753	WITHOUT_CLASSIFICATION	2.1077468246995602E-5	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999791076013786	WITHOUT_CLASSIFICATION	2.0892398621369907E-5	TEST
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999947327421078	WITHOUT_CLASSIFICATION	5.267257892191642E-6	TEST
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999932340516052	WITHOUT_CLASSIFICATION	6.765948394726549E-6	TEST
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999721639386489	WITHOUT_CLASSIFICATION	2.7836061351173066E-5	TEST
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999992733047429	WITHOUT_CLASSIFICATION	7.266952569701038E-7	TEST
// false // zero	WITHOUT_CLASSIFICATION	0.9999968002000016	WITHOUT_CLASSIFICATION	3.1997999985009235E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999813212306925	WITHOUT_CLASSIFICATION	1.867876930744931E-5	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.999978922531753	WITHOUT_CLASSIFICATION	2.1077468246995602E-5	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999791076013786	WITHOUT_CLASSIFICATION	2.0892398621369907E-5	TEST
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999961166627158	WITHOUT_CLASSIFICATION	3.88333728420142E-6	TEST
// push false	WITHOUT_CLASSIFICATION	0.9999953900840282	WITHOUT_CLASSIFICATION	4.609915971907549E-6	TEST
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9996743258963415	WITHOUT_CLASSIFICATION	3.256741036584599E-4	TEST
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.999863171643052	WITHOUT_CLASSIFICATION	1.3682835694783742E-4	TEST
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999661621569331	WITHOUT_CLASSIFICATION	3.3837843066913035E-5	TEST
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9996743258963415	WITHOUT_CLASSIFICATION	3.256741036584599E-4	TEST
//[C]	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
// push true	WITHOUT_CLASSIFICATION	0.999995797869249	WITHOUT_CLASSIFICATION	4.202130751016792E-6	TEST
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999832276470282	WITHOUT_CLASSIFICATION	1.677235297189719E-5	TEST
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.999863171643052	WITHOUT_CLASSIFICATION	1.3682835694783742E-4	TEST
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9996743258963415	WITHOUT_CLASSIFICATION	3.256741036584599E-4	TEST
//[boolean]	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999911564598978	WITHOUT_CLASSIFICATION	8.843540102243777E-6	TEST
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999785410461287	WITHOUT_CLASSIFICATION	2.145895387131118E-5	TEST
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999630348325388	WITHOUT_CLASSIFICATION	3.696516746123224E-5	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999995406320399	WITHOUT_CLASSIFICATION	4.5936796012611884E-7	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999950842123031	WITHOUT_CLASSIFICATION	4.915787696973783E-6	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999960924181055	WITHOUT_CLASSIFICATION	3.907581894414418E-6	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999922918219305	WITHOUT_CLASSIFICATION	7.708178069612835E-6	TEST
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999830606379294	WITHOUT_CLASSIFICATION	1.6939362070618253E-5	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999950842123031	WITHOUT_CLASSIFICATION	4.915787696973783E-6	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999960924181055	WITHOUT_CLASSIFICATION	3.907581894414418E-6	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999922918219305	WITHOUT_CLASSIFICATION	7.708178069612835E-6	TEST
// finally with exception	WITHOUT_CLASSIFICATION	0.9999455934177894	WITHOUT_CLASSIFICATION	5.440658221046945E-5	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999993056774286	WITHOUT_CLASSIFICATION	6.94322571375006E-7	TEST
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999906509888394	WITHOUT_CLASSIFICATION	9.349011160617054E-6	TEST
// original exception is on stack	WITHOUT_CLASSIFICATION	0.999800313281107	WITHOUT_CLASSIFICATION	1.9968671889306487E-4	TEST
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999619111746101	WITHOUT_CLASSIFICATION	3.8088825389948526E-5	TEST
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999803218546096	WITHOUT_CLASSIFICATION	1.9678145390490754E-5	TEST
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999993766123949	WITHOUT_CLASSIFICATION	6.233876051665739E-7	TEST
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999991520409771	WITHOUT_CLASSIFICATION	8.479590228361829E-7	TEST
// script object	WITHOUT_CLASSIFICATION	0.999995170301207	WITHOUT_CLASSIFICATION	4.829698793090289E-6	TEST
// arities	WITHOUT_CLASSIFICATION	0.99995779764608	WITHOUT_CLASSIFICATION	4.220235392014826E-5	TEST
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.993234499399205	WITHOUT_CLASSIFICATION	0.006765500600794972	TEST
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999798438665671	WITHOUT_CLASSIFICATION	2.0156133432768427E-5	TEST
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999890292173977	WITHOUT_CLASSIFICATION	1.0970782602284055E-5	TEST
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999980830631297	WITHOUT_CLASSIFICATION	1.9169368702947945E-6	TEST
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9955515837265668	WITHOUT_CLASSIFICATION	0.004448416273433211	TEST
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999844717935648	WITHOUT_CLASSIFICATION	1.5528206435249135E-5	TEST
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999881142181399	WITHOUT_CLASSIFICATION	1.188578186015386E-5	TEST
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999047029403636	WITHOUT_CLASSIFICATION	9.529705963636645E-5	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999927482497424	WITHOUT_CLASSIFICATION	7.2517502575956014E-6	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999920979740607	WITHOUT_CLASSIFICATION	7.902025939270722E-6	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999966468899424	WITHOUT_CLASSIFICATION	3.353110057675137E-6	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999950833872524	WITHOUT_CLASSIFICATION	4.916612747511149E-6	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999950833872524	WITHOUT_CLASSIFICATION	4.916612747511149E-6	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999586003317014	WITHOUT_CLASSIFICATION	4.139966829859375E-5	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999586003317014	WITHOUT_CLASSIFICATION	4.139966829859375E-5	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999870983147303	WITHOUT_CLASSIFICATION	1.2901685269657832E-5	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999870983147303	WITHOUT_CLASSIFICATION	1.2901685269657832E-5	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.999946554284855	WITHOUT_CLASSIFICATION	5.344571514504575E-5	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999989730976874	WITHOUT_CLASSIFICATION	1.0269023126563385E-6	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999951981858882	WITHOUT_CLASSIFICATION	4.801814111710492E-6	TEST
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999982963304832	WITHOUT_CLASSIFICATION	1.703669516857608E-6	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999964063644017	WITHOUT_CLASSIFICATION	3.593635598329404E-6	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999909749331324	WITHOUT_CLASSIFICATION	9.025066867582158E-6	TEST
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999854668103068	WITHOUT_CLASSIFICATION	1.4533189693248781E-5	TEST
// then optional args	WITHOUT_CLASSIFICATION	0.9999892868526817	WITHOUT_CLASSIFICATION	1.0713147318252353E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999662583889954	WITHOUT_CLASSIFICATION	3.3741611004651084E-5	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.999946554284855	WITHOUT_CLASSIFICATION	5.344571514504575E-5	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999989730976874	WITHOUT_CLASSIFICATION	1.0269023126563385E-6	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999951981858882	WITHOUT_CLASSIFICATION	4.801814111710492E-6	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999964063644017	WITHOUT_CLASSIFICATION	3.593635598329404E-6	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999909749331324	WITHOUT_CLASSIFICATION	9.025066867582158E-6	TEST
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999795927981716	WITHOUT_CLASSIFICATION	2.040720182831261E-5	TEST
// finally, post args	WITHOUT_CLASSIFICATION	0.999988293560784	WITHOUT_CLASSIFICATION	1.170643921606005E-5	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9996549395830698	WITHOUT_CLASSIFICATION	3.450604169301523E-4	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9996549395830698	WITHOUT_CLASSIFICATION	3.450604169301523E-4	TEST
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999931904796071	WITHOUT_CLASSIFICATION	6.8095203929096E-6	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999023323129931	WITHOUT_CLASSIFICATION	9.766768700690186E-5	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999986791457395	WITHOUT_CLASSIFICATION	1.3208542605851996E-6	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999828847343223	WITHOUT_CLASSIFICATION	1.7115265677637294E-5	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999828847343223	WITHOUT_CLASSIFICATION	1.7115265677637294E-5	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999677281739824	WITHOUT_CLASSIFICATION	3.227182601764104E-5	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999723317977509	WITHOUT_CLASSIFICATION	2.766820224906316E-5	TEST
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999979477289168	WITHOUT_CLASSIFICATION	2.0522710832096356E-6	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999910315576304	WITHOUT_CLASSIFICATION	8.968442369730266E-6	TEST
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999994979281495	WITHOUT_CLASSIFICATION	5.020718504965291E-7	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999987154483192	WITHOUT_CLASSIFICATION	1.2845516807844923E-6	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999937521295844	WITHOUT_CLASSIFICATION	6.247870415596819E-6	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999950967599046	WITHOUT_CLASSIFICATION	4.903240095383635E-6	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999788536419139	WITHOUT_CLASSIFICATION	2.11463580860584E-5	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999978955850374	WITHOUT_CLASSIFICATION	2.1044149626121422E-6	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999976499279888	WITHOUT_CLASSIFICATION	2.3500720112797694E-6	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999677281739824	WITHOUT_CLASSIFICATION	3.227182601764104E-5	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999723317977509	WITHOUT_CLASSIFICATION	2.766820224906316E-5	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999910315576304	WITHOUT_CLASSIFICATION	8.968442369730266E-6	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999985736810314	WITHOUT_CLASSIFICATION	1.4263189686044444E-6	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999986791457395	WITHOUT_CLASSIFICATION	1.3208542605851996E-6	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999986791457395	WITHOUT_CLASSIFICATION	1.3208542605851996E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999813212306925	WITHOUT_CLASSIFICATION	1.867876930744931E-5	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999813212306925	WITHOUT_CLASSIFICATION	1.867876930744931E-5	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999985704118721	WITHOUT_CLASSIFICATION	1.429588127874493E-6	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999985704118721	WITHOUT_CLASSIFICATION	1.429588127874493E-6	TEST
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999990361560174	WITHOUT_CLASSIFICATION	9.638439826479005E-7	TEST
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999971206607452	WITHOUT_CLASSIFICATION	2.879339254812231E-6	TEST
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999688422484243	WITHOUT_CLASSIFICATION	3.1157751575655335E-5	TEST
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999266120835597	WITHOUT_CLASSIFICATION	7.338791644032751E-5	TEST
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999979754144263	WITHOUT_CLASSIFICATION	2.024585573641493E-6	TEST
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999963762496398	WITHOUT_CLASSIFICATION	3.62375036018735E-6	TEST
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999963685907416	WITHOUT_CLASSIFICATION	3.631409258358974E-6	TEST
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999934559666332	WITHOUT_CLASSIFICATION	6.5440333668224856E-6	TEST
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999798885447888	WITHOUT_CLASSIFICATION	2.0111455211169392E-5	TEST
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999931004086133	WITHOUT_CLASSIFICATION	6.899591386733837E-6	TEST
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999882463749744	WITHOUT_CLASSIFICATION	1.1753625025553052E-5	TEST
// verify the class	WITHOUT_CLASSIFICATION	0.9999988846246857	WITHOUT_CLASSIFICATION	1.1153753143039067E-6	TEST
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999954499662526	WITHOUT_CLASSIFICATION	4.550033747414791E-6	TEST
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999963993486352	WITHOUT_CLASSIFICATION	3.600651364771525E-6	TEST
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999939678780576	WITHOUT_CLASSIFICATION	6.032121942407404E-6	TEST
// thread context	WITHOUT_CLASSIFICATION	0.9999963065743381	WITHOUT_CLASSIFICATION	3.6934256618775726E-6	TEST
// line number	WITHOUT_CLASSIFICATION	0.9999964298501955	WITHOUT_CLASSIFICATION	3.570149804390345E-6	TEST
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999677790114764	WITHOUT_CLASSIFICATION	3.2220988523685996E-5	TEST
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999369424881762	WITHOUT_CLASSIFICATION	6.305751182379971E-5	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999937521295844	WITHOUT_CLASSIFICATION	6.247870415596819E-6	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999788536419139	WITHOUT_CLASSIFICATION	2.11463580860584E-5	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999995326428338	WITHOUT_CLASSIFICATION	4.6735716610919987E-7	TEST
// block	WITHOUT_CLASSIFICATION	0.9999585996777045	WITHOUT_CLASSIFICATION	4.140032229551619E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999585996777045	WITHOUT_CLASSIFICATION	4.140032229551619E-5	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999985736810314	WITHOUT_CLASSIFICATION	1.4263189686044444E-6	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999986791457395	WITHOUT_CLASSIFICATION	1.3208542605851996E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999813212306925	WITHOUT_CLASSIFICATION	1.867876930744931E-5	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999985704118721	WITHOUT_CLASSIFICATION	1.429588127874493E-6	TEST
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999727338135146	WITHOUT_CLASSIFICATION	2.726618648537539E-5	TEST
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9997372620054814	WITHOUT_CLASSIFICATION	2.6273799451861544E-4	TEST
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999942490014743	WITHOUT_CLASSIFICATION	5.7509985257405475E-6	TEST
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.99989197750929	WITHOUT_CLASSIFICATION	1.0802249070997076E-4	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999882756708871	WITHOUT_CLASSIFICATION	1.1724329113002777E-5	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999882756708871	WITHOUT_CLASSIFICATION	1.1724329113002777E-5	TEST
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999941531946056	WITHOUT_CLASSIFICATION	5.8468053943298265E-6	TEST
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999924010701242	WITHOUT_CLASSIFICATION	7.598929875819831E-6	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.999990429517906	WITHOUT_CLASSIFICATION	9.570482094136921E-6	TEST
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999905388347058	WITHOUT_CLASSIFICATION	9.461165294233924E-6	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999872383103499	WITHOUT_CLASSIFICATION	1.2761689650192934E-5	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999872383103499	WITHOUT_CLASSIFICATION	1.2761689650192934E-5	TEST
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.999978863918263	WITHOUT_CLASSIFICATION	2.1136081737021217E-5	TEST
// normal closure	WITHOUT_CLASSIFICATION	0.999995194853094	WITHOUT_CLASSIFICATION	4.805146906055789E-6	TEST
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999849400779911	WITHOUT_CLASSIFICATION	1.5059922008932538E-5	TEST
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.999771123418762	WITHOUT_CLASSIFICATION	2.2887658123808233E-4	TEST
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999880399017511	WITHOUT_CLASSIFICATION	1.1960098248940819E-5	TEST
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.999996034904141	WITHOUT_CLASSIFICATION	3.965095858951459E-6	TEST
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999882979136133	WITHOUT_CLASSIFICATION	1.170208638672667E-5	TEST
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999936715757973	WITHOUT_CLASSIFICATION	6.328424202702745E-6	TEST
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9999948473632209	WITHOUT_CLASSIFICATION	5.152636779139082E-6	TEST
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.993459231749283	WITHOUT_CLASSIFICATION	0.006540768250717071	TEST
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999320237272425	WITHOUT_CLASSIFICATION	6.797627275741037E-5	TEST
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999949040826313	WITHOUT_CLASSIFICATION	5.095917368644766E-6	TEST
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999999563941447	WITHOUT_CLASSIFICATION	4.36058553178043E-8	TEST
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999975300035453	WITHOUT_CLASSIFICATION	2.4699964547120554E-6	TEST
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9998303249601541	WITHOUT_CLASSIFICATION	1.6967503984587662E-4	TEST
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999954496426778	WITHOUT_CLASSIFICATION	4.550357322200137E-6	TEST
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.999996792339542	WITHOUT_CLASSIFICATION	3.2076604579947278E-6	TEST
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999930855715062	WITHOUT_CLASSIFICATION	6.914428493800691E-6	TEST
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999999780374766	WITHOUT_CLASSIFICATION	2.1962523368353433E-8	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999972624151531	WITHOUT_CLASSIFICATION	2.7375848468534252E-6	TEST
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9998827344157819	WITHOUT_CLASSIFICATION	1.1726558421815262E-4	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999940537395721	WITHOUT_CLASSIFICATION	5.946260427986038E-6	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999940537395721	WITHOUT_CLASSIFICATION	5.946260427986038E-6	TEST
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999970486701341	WITHOUT_CLASSIFICATION	2.951329865883427E-6	TEST
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999970820713534	WITHOUT_CLASSIFICATION	2.9179286465860058E-6	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999956344568238	WITHOUT_CLASSIFICATION	4.365543176165818E-6	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999956344568238	WITHOUT_CLASSIFICATION	4.365543176165818E-6	TEST
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9999316194594575	WITHOUT_CLASSIFICATION	6.83805405424315E-5	TEST
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999896595957937	WITHOUT_CLASSIFICATION	1.0340404206327102E-5	TEST
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999049420683903	WITHOUT_CLASSIFICATION	9.505793160963173E-5	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999966075557116	WITHOUT_CLASSIFICATION	3.39244428832973E-6	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999966075557116	WITHOUT_CLASSIFICATION	3.39244428832973E-6	TEST
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999971835688263	WITHOUT_CLASSIFICATION	2.8164311737360464E-6	TEST
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.999998328737874	WITHOUT_CLASSIFICATION	1.6712621259516448E-6	TEST
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999979263609631	WITHOUT_CLASSIFICATION	2.073639036906591E-6	TEST
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999984868321272	WITHOUT_CLASSIFICATION	1.5131678728168302E-6	TEST
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999882681662862	WITHOUT_CLASSIFICATION	1.1731833713900034E-5	TEST
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999965899358988	WITHOUT_CLASSIFICATION	3.4100641012739015E-6	TEST
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999945032752547	WITHOUT_CLASSIFICATION	5.4967247452535505E-6	TEST
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999977352380024	WITHOUT_CLASSIFICATION	2.2647619976578376E-6	TEST
// build each "when"	WITHOUT_CLASSIFICATION	0.9999961900435218	WITHOUT_CLASSIFICATION	3.809956478263957E-6	TEST
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999715841922637	WITHOUT_CLASSIFICATION	2.8415807736220545E-5	TEST
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999792708472433	WITHOUT_CLASSIFICATION	2.07291527567689E-5	TEST
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999905331989881	WITHOUT_CLASSIFICATION	9.466801011828405E-6	TEST
// close it out	WITHOUT_CLASSIFICATION	0.9999947042288949	WITHOUT_CLASSIFICATION	5.295771105027129E-6	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9998353021237255	WITHOUT_CLASSIFICATION	1.6469787627451578E-4	TEST
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9999922247730756	WITHOUT_CLASSIFICATION	7.7752269244357E-6	TEST
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999995287800894	WITHOUT_CLASSIFICATION	4.7121991060710043E-7	TEST
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999977089371966	WITHOUT_CLASSIFICATION	2.2910628033214247E-6	TEST
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999927256294813	WITHOUT_CLASSIFICATION	7.274370518681643E-6	TEST
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999932882008765	WITHOUT_CLASSIFICATION	6.7117991235480245E-6	TEST
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.999997940799861	WITHOUT_CLASSIFICATION	2.0592001389434977E-6	TEST
// Instance method	WITHOUT_CLASSIFICATION	0.9999986495593568	WITHOUT_CLASSIFICATION	1.3504406432794889E-6	TEST
// Class method	WITHOUT_CLASSIFICATION	0.9999988662727702	WITHOUT_CLASSIFICATION	1.1337272297801222E-6	TEST
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999864192065694	WITHOUT_CLASSIFICATION	1.358079343061908E-5	TEST
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999920698709347	WITHOUT_CLASSIFICATION	7.930129065393859E-6	TEST
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999972772566802	WITHOUT_CLASSIFICATION	2.722743319841612E-6	TEST
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.999995951155348	WITHOUT_CLASSIFICATION	4.048844651961359E-6	TEST
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.99988094103307	WITHOUT_CLASSIFICATION	1.1905896692991183E-4	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999791157680931	WITHOUT_CLASSIFICATION	2.0884231906829764E-5	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999951756061692	WITHOUT_CLASSIFICATION	4.824393830823057E-6	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999995394245471	WITHOUT_CLASSIFICATION	4.6057545288423403E-7	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999996905917159	WITHOUT_CLASSIFICATION	3.0940828413782516E-7	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9998353021237255	WITHOUT_CLASSIFICATION	1.6469787627451578E-4	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999791157680931	WITHOUT_CLASSIFICATION	2.0884231906829764E-5	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999951756061692	WITHOUT_CLASSIFICATION	4.824393830823057E-6	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999996905917159	WITHOUT_CLASSIFICATION	3.0940828413782516E-7	TEST
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.999876315125302	WITHOUT_CLASSIFICATION	1.236848746980502E-4	TEST
// Build the new module	WITHOUT_CLASSIFICATION	0.9999903034392843	WITHOUT_CLASSIFICATION	9.696560715640377E-6	TEST
// Build the module body	WITHOUT_CLASSIFICATION	0.99999499558954	WITHOUT_CLASSIFICATION	5.0044104600773554E-6	TEST
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999818155716795	WITHOUT_CLASSIFICATION	1.8184428320474463E-5	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999979568825076	WITHOUT_CLASSIFICATION	2.0431174923932917E-6	TEST
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.999999718548426	WITHOUT_CLASSIFICATION	2.81451574090392E-7	TEST
// get attr	WITHOUT_CLASSIFICATION	0.9999972624151531	WITHOUT_CLASSIFICATION	2.7375848468534252E-6	TEST
// call operator	WITHOUT_CLASSIFICATION	0.999997324413938	WITHOUT_CLASSIFICATION	2.6755860620244165E-6	TEST
// set attr	WITHOUT_CLASSIFICATION	0.9999967337385327	WITHOUT_CLASSIFICATION	3.266261467199561E-6	TEST
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999883757317837	WITHOUT_CLASSIFICATION	1.1624268216343352E-5	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999907673797862	WITHOUT_CLASSIFICATION	9.232620213756008E-6	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999907673797862	WITHOUT_CLASSIFICATION	9.232620213756008E-6	TEST
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999692233989939	WITHOUT_CLASSIFICATION	3.077660100604489E-5	TEST
// build first node only and return true	WITHOUT_CLASSIFICATION	0.999998109791922	WITHOUT_CLASSIFICATION	1.8902080778968805E-6	TEST
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.999998769977017	WITHOUT_CLASSIFICATION	1.2300229830249262E-6	TEST
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999968987506417	WITHOUT_CLASSIFICATION	3.101249358207735E-6	TEST
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999466074295629	WITHOUT_CLASSIFICATION	5.3392570437067766E-5	TEST
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999906120640734	WITHOUT_CLASSIFICATION	9.387935926688518E-6	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999998124016977	WITHOUT_CLASSIFICATION	1.8759830231130366E-7	TEST
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999965967109822	WITHOUT_CLASSIFICATION	3.4032890178575094E-6	TEST
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999914086268	WITHOUT_CLASSIFICATION	8.59137324448457E-9	TEST
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999971861626198	WITHOUT_CLASSIFICATION	2.81383738016145E-6	TEST
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999810572622	WITHOUT_CLASSIFICATION	1.894273782352943E-8	TEST
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999485247147106	WITHOUT_CLASSIFICATION	5.1475285289372615E-5	TEST
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.999998026621862	WITHOUT_CLASSIFICATION	1.9733781380621245E-6	TEST
// alu operations	WITHOUT_CLASSIFICATION	0.9999952427964136	WITHOUT_CLASSIFICATION	4.757203586394339E-6	TEST
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999993983187806	WITHOUT_CLASSIFICATION	6.016812194277594E-7	TEST
// closure instructions	WITHOUT_CLASSIFICATION	0.9999879100465943	WITHOUT_CLASSIFICATION	1.2089953405747224E-5	TEST
// eval instructions	WITHOUT_CLASSIFICATION	0.9999952175038963	WITHOUT_CLASSIFICATION	4.782496103691035E-6	TEST
// def instructions	WITHOUT_CLASSIFICATION	0.9999951005036525	WITHOUT_CLASSIFICATION	4.899496347525316E-6	TEST
// exception instructions	WITHOUT_CLASSIFICATION	0.9999888774095248	WITHOUT_CLASSIFICATION	1.1122590475200305E-5	TEST
// Loads	WITHOUT_CLASSIFICATION	0.99995779764608	WITHOUT_CLASSIFICATION	4.220235392014826E-5	TEST
// Stores	WITHOUT_CLASSIFICATION	0.9999578139428404	WITHOUT_CLASSIFICATION	4.218605715959836E-5	TEST
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999972322203244	WITHOUT_CLASSIFICATION	2.7677796756374614E-6	TEST
// others	WITHOUT_CLASSIFICATION	0.9999583862133679	WITHOUT_CLASSIFICATION	4.1613786632098086E-5	TEST
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999940658450274	WITHOUT_CLASSIFICATION	5.934154972687113E-6	TEST
// optimization guards	WITHOUT_CLASSIFICATION	0.99998797992046	WITHOUT_CLASSIFICATION	1.2020079539922202E-5	TEST
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999621956629612	WITHOUT_CLASSIFICATION	3.7804337038844946E-5	TEST
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999977042977511	WITHOUT_CLASSIFICATION	2.2957022488332327E-6	TEST
// scripts	WITHOUT_CLASSIFICATION	0.9999581601649441	WITHOUT_CLASSIFICATION	4.18398350558756E-5	TEST
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999978921906345	WITHOUT_CLASSIFICATION	2.1078093655984427E-6	TEST
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999951595665799	WITHOUT_CLASSIFICATION	4.840433420050509E-6	TEST
// methods and closures	WITHOUT_CLASSIFICATION	0.9999980347665149	WITHOUT_CLASSIFICATION	1.9652334850600564E-6	TEST
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999924423429278	WITHOUT_CLASSIFICATION	7.55765707219382E-6	TEST
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999811273135767	WITHOUT_CLASSIFICATION	1.8872686423355224E-5	TEST
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999860668633438	WITHOUT_CLASSIFICATION	1.3933136656275705E-5	TEST
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9997964055600812	WITHOUT_CLASSIFICATION	2.0359443991880015E-4	TEST
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999813521986849	WITHOUT_CLASSIFICATION	1.864780131516558E-5	TEST
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999711905029152	WITHOUT_CLASSIFICATION	2.8809497084800518E-5	TEST
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999987954503929	WITHOUT_CLASSIFICATION	1.204549607003519E-6	TEST
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999787640866868	WITHOUT_CLASSIFICATION	2.1235913313182504E-5	TEST
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999587808598459	WITHOUT_CLASSIFICATION	4.121914015416854E-5	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998968484880076	WITHOUT_CLASSIFICATION	1.031515119923476E-4	TEST
// Readline	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.999996292972377	WITHOUT_CLASSIFICATION	3.707027622907197E-6	TEST
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.999986323242761	WITHOUT_CLASSIFICATION	1.3676757239034834E-5	TEST
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999982768564197	WITHOUT_CLASSIFICATION	1.7231435802597852E-6	TEST
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9999998097313938	WITHOUT_CLASSIFICATION	1.9026860620777286E-7	TEST
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999999557250929	WITHOUT_CLASSIFICATION	4.427490703902489E-8	TEST
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999981519804798	WITHOUT_CLASSIFICATION	1.8480195201849217E-6	TEST
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999603267684399	WITHOUT_CLASSIFICATION	3.967323156003203E-5	TEST
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999584690606833	WITHOUT_CLASSIFICATION	4.153093931657689E-5	TEST
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999995212222101	WITHOUT_CLASSIFICATION	4.787777898565202E-7	TEST
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999432228601012	WITHOUT_CLASSIFICATION	5.67771398986821E-5	TEST
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9997567476612967	WITHOUT_CLASSIFICATION	2.432523387031726E-4	TEST
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9973020578695004	WITHOUT_CLASSIFICATION	0.0026979421304996368	TEST
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999628973786834	WITHOUT_CLASSIFICATION	3.7102621316710474E-5	TEST
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999961114011604	WITHOUT_CLASSIFICATION	3.888598839611744E-6	TEST
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999316603100488	WITHOUT_CLASSIFICATION	6.833968995127657E-5	TEST
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9999953811666334	WITHOUT_CLASSIFICATION	4.618833366619452E-6	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9991986471995847	WITHOUT_CLASSIFICATION	8.013528004153104E-4	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9991986471995847	WITHOUT_CLASSIFICATION	8.013528004153104E-4	TEST
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999627580964175	WITHOUT_CLASSIFICATION	3.724190358250411E-5	TEST
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9997370626079763	WITHOUT_CLASSIFICATION	2.629373920236591E-4	TEST
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999629554608541	WITHOUT_CLASSIFICATION	3.704453914577836E-5	TEST
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999966174036887	WITHOUT_CLASSIFICATION	3.382596311302714E-5	TEST
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999737038105174	WITHOUT_CLASSIFICATION	2.6296189482575992E-5	TEST
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999210652265568	WITHOUT_CLASSIFICATION	7.893477344328801E-5	TEST
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999405945825555	WITHOUT_CLASSIFICATION	5.940541744456533E-5	TEST
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.999966765769148	WITHOUT_CLASSIFICATION	3.323423085196249E-5	TEST
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.999984983680112	WITHOUT_CLASSIFICATION	1.5016319887969407E-5	TEST
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999986564990915	WITHOUT_CLASSIFICATION	1.3435009085426646E-6	TEST
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999414355014652	WITHOUT_CLASSIFICATION	5.856449853490615E-5	TEST
// class or module	WITHOUT_CLASSIFICATION	0.999997176665373	WITHOUT_CLASSIFICATION	2.8233346270545316E-6	TEST
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999953226398061	WITHOUT_CLASSIFICATION	4.677360193965084E-6	TEST
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999827739247703	WITHOUT_CLASSIFICATION	1.7226075229671204E-5	TEST
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999863023204675	WITHOUT_CLASSIFICATION	1.3697679532567842E-5	TEST
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999903179301421	WITHOUT_CLASSIFICATION	9.682069857817476E-6	TEST
// IN changed!	WITHOUT_CLASSIFICATION	0.9999951107074178	WITHOUT_CLASSIFICATION	4.889292582278224E-6	TEST
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999742540698434	WITHOUT_CLASSIFICATION	2.5745930156627192E-5	TEST
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999789624075375	WITHOUT_CLASSIFICATION	2.1037592462606815E-5	TEST
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9997623180561166	WITHOUT_CLASSIFICATION	2.3768194388341856E-4	TEST
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999632392127762	WITHOUT_CLASSIFICATION	3.6760787223881636E-5	TEST
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999972696365614	WITHOUT_CLASSIFICATION	2.7303634385303564E-6	TEST
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999994347645773	WITHOUT_CLASSIFICATION	5.652354226902885E-7	TEST
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.999999393969103	WITHOUT_CLASSIFICATION	6.060308969823215E-7	TEST
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.999959390690874	WITHOUT_CLASSIFICATION	4.060930912589717E-5	TEST
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9998947541163681	WITHOUT_CLASSIFICATION	1.0524588363190617E-4	TEST
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999493354589798	WITHOUT_CLASSIFICATION	5.0664541020240145E-5	TEST
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999986844693178	WITHOUT_CLASSIFICATION	1.3155306821238877E-6	TEST
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999894247939587	WITHOUT_CLASSIFICATION	1.0575206041273106E-5	TEST
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999985703703647	WITHOUT_CLASSIFICATION	1.429629635387125E-6	TEST
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999924615417187	WITHOUT_CLASSIFICATION	7.538458281281428E-6	TEST
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999925711346964	WITHOUT_CLASSIFICATION	7.428865303554302E-6	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999853934636416	WITHOUT_CLASSIFICATION	1.4606536358422701E-5	TEST
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999417987089247	WITHOUT_CLASSIFICATION	5.8201291075168235E-5	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999853934636416	WITHOUT_CLASSIFICATION	1.4606536358422701E-5	TEST
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999905942077733	WITHOUT_CLASSIFICATION	9.405792226826823E-6	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999267018357031	WITHOUT_CLASSIFICATION	7.329816429689953E-5	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999267018357031	WITHOUT_CLASSIFICATION	7.329816429689953E-5	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999267018357031	WITHOUT_CLASSIFICATION	7.329816429689953E-5	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999930774800178	WITHOUT_CLASSIFICATION	6.922519982304777E-6	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999930774800178	WITHOUT_CLASSIFICATION	6.922519982304777E-6	TEST
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9996378671737689	WITHOUT_CLASSIFICATION	3.6213282623110814E-4	TEST
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.999986958589541	WITHOUT_CLASSIFICATION	1.3041410459120017E-5	TEST
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999952052272956	WITHOUT_CLASSIFICATION	4.794772704429099E-6	TEST
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9999948359189861	WITHOUT_CLASSIFICATION	5.164081013970612E-6	TEST
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999972047753755	WITHOUT_CLASSIFICATION	2.795224624563607E-6	TEST
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999649885319761	WITHOUT_CLASSIFICATION	3.501146802390952E-5	TEST
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999713246791141	WITHOUT_CLASSIFICATION	2.8675320886012205E-5	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999648777362495	WITHOUT_CLASSIFICATION	3.5122263750499455E-5	TEST
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999052156123168	WITHOUT_CLASSIFICATION	9.478438768318217E-5	TEST
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.999993833597855	WITHOUT_CLASSIFICATION	6.166402145087685E-6	TEST
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999877787516819	WITHOUT_CLASSIFICATION	1.2221248318012325E-5	TEST
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999929403815788	WITHOUT_CLASSIFICATION	7.059618421121076E-6	TEST
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999941688828523	WITHOUT_CLASSIFICATION	5.831117147723226E-6	TEST
// root-level logic	WITHOUT_CLASSIFICATION	0.9999952652978986	WITHOUT_CLASSIFICATION	4.734702101393419E-6	TEST
// root-level methods	WITHOUT_CLASSIFICATION	0.9999917334019768	WITHOUT_CLASSIFICATION	8.266598023228746E-6	TEST
// root-level classes	WITHOUT_CLASSIFICATION	0.9999889246211858	WITHOUT_CLASSIFICATION	1.1075378814164676E-5	TEST
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999881229917281	WITHOUT_CLASSIFICATION	1.1877008271953936E-5	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999940215263328	WITHOUT_CLASSIFICATION	5.9784736672566865E-6	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999940215263328	WITHOUT_CLASSIFICATION	5.9784736672566865E-6	TEST
// receiver	WITHOUT_CLASSIFICATION	0.9999952762550668	WITHOUT_CLASSIFICATION	4.723744933261593E-6	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999940774495396	WITHOUT_CLASSIFICATION	5.922550460418912E-6	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999940774495396	WITHOUT_CLASSIFICATION	5.922550460418912E-6	TEST
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999660063973674	WITHOUT_CLASSIFICATION	3.399360263249388E-5	TEST
// Object[] args	WITHOUT_CLASSIFICATION	0.9999951441709767	WITHOUT_CLASSIFICATION	4.855829023308977E-6	TEST
// load handle	WITHOUT_CLASSIFICATION	0.999995163454086	WITHOUT_CLASSIFICATION	4.836545914008595E-6	TEST
// args array	WITHOUT_CLASSIFICATION	0.9999957403010091	WITHOUT_CLASSIFICATION	4.2596989908002335E-6	TEST
// i'th argument	WITHOUT_CLASSIFICATION	0.9999957634899382	WITHOUT_CLASSIFICATION	4.236510061715268E-6	TEST
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999830597395025	WITHOUT_CLASSIFICATION	1.6940260497563455E-5	TEST
// Object arg0	WITHOUT_CLASSIFICATION	0.9999951264555654	WITHOUT_CLASSIFICATION	4.873544434601906E-6	TEST
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999857501454988	WITHOUT_CLASSIFICATION	1.4249854501138859E-5	TEST
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999808131417818	WITHOUT_CLASSIFICATION	1.9186858218296937E-5	TEST
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999980290202872	WITHOUT_CLASSIFICATION	1.9709797127353673E-6	TEST
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999951548319027	WITHOUT_CLASSIFICATION	4.845168097331476E-6	TEST
// at end	WITHOUT_CLASSIFICATION	0.999949749247744	WITHOUT_CLASSIFICATION	5.025075225596284E-5	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999982766166674	WITHOUT_CLASSIFICATION	1.723383332592456E-6	TEST
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999918209258533	WITHOUT_CLASSIFICATION	8.179074146708544E-6	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999648777362495	WITHOUT_CLASSIFICATION	3.5122263750499455E-5	TEST
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.999863171643052	WITHOUT_CLASSIFICATION	1.3682835694783742E-4	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999931202581368	WITHOUT_CLASSIFICATION	6.879741863259998E-6	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999985065960462	WITHOUT_CLASSIFICATION	1.493403953847021E-6	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999985065960462	WITHOUT_CLASSIFICATION	1.493403953847021E-6	TEST
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999459895470612	WITHOUT_CLASSIFICATION	5.401045293894796E-5	TEST
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9997258282373507	WITHOUT_CLASSIFICATION	2.74171762649376E-4	TEST
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999988964368279	WITHOUT_CLASSIFICATION	1.1035631719761665E-6	TEST
// restore position	WITHOUT_CLASSIFICATION	0.9999955900703931	WITHOUT_CLASSIFICATION	4.409929606851348E-6	TEST
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999996104701063	WITHOUT_CLASSIFICATION	3.8952989374518227E-7	TEST
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999978687530847	WITHOUT_CLASSIFICATION	2.1312469153761924E-6	TEST
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999988750498949	WITHOUT_CLASSIFICATION	1.1249501050458058E-6	TEST
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9992326061532115	WITHOUT_CLASSIFICATION	7.673938467886105E-4	TEST
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999484534970954	WITHOUT_CLASSIFICATION	5.1546502904710616E-5	TEST
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999829724553724	WITHOUT_CLASSIFICATION	1.7027544627645203E-5	TEST
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999829021271786	WITHOUT_CLASSIFICATION	1.709787282148018E-5	TEST
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999730990653285	WITHOUT_CLASSIFICATION	2.6900934671501552E-5	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999952645530751	WITHOUT_CLASSIFICATION	4.735446924896837E-6	TEST
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999909246827031	WITHOUT_CLASSIFICATION	9.075317296847917E-6	TEST
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.999981346890523	WITHOUT_CLASSIFICATION	1.8653109476978405E-5	TEST
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999837525132361	WITHOUT_CLASSIFICATION	1.6247486763935605E-5	TEST
// Timeout module methods	WITHOUT_CLASSIFICATION	0.99999175219008	WITHOUT_CLASSIFICATION	8.247809920039222E-6	TEST
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999951424776362	WITHOUT_CLASSIFICATION	4.857522363796198E-6	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999918664162455	WITHOUT_CLASSIFICATION	8.133583754491917E-6	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999792322424262	WITHOUT_CLASSIFICATION	2.076775757373709E-5	TEST
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999930018207187	WITHOUT_CLASSIFICATION	6.998179281384445E-6	TEST
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999990267432902	WITHOUT_CLASSIFICATION	9.732567097423169E-7	TEST
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999879994352655	WITHOUT_CLASSIFICATION	1.2000564734436393E-5	TEST
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999998228377585	WITHOUT_CLASSIFICATION	1.7716224162097717E-7	TEST
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999935276790078	WITHOUT_CLASSIFICATION	6.472320992149224E-6	TEST
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999879124343676	WITHOUT_CLASSIFICATION	1.208756563234081E-5	TEST
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.999911006285053	WITHOUT_CLASSIFICATION	8.899371494689832E-5	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.999872779810234	WITHOUT_CLASSIFICATION	1.272201897659483E-4	TEST
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.999996640311634	WITHOUT_CLASSIFICATION	3.359688365906549E-6	TEST
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999844857485356	WITHOUT_CLASSIFICATION	1.5514251464440184E-5	TEST
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999957799608223	WITHOUT_CLASSIFICATION	4.220039177653532E-6	TEST
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999944241851515	WITHOUT_CLASSIFICATION	5.57581484858822E-6	TEST
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.999765574198955	WITHOUT_CLASSIFICATION	2.344258010450141E-4	TEST
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999866362251711	WITHOUT_CLASSIFICATION	1.336377482878895E-5	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999730314845883	WITHOUT_CLASSIFICATION	2.696851541165061E-5	TEST
// $blah	WITHOUT_CLASSIFICATION	0.99995779764608	WITHOUT_CLASSIFICATION	4.220235392014826E-5	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.999872779810234	WITHOUT_CLASSIFICATION	1.272201897659483E-4	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.999992148763723	WITHOUT_CLASSIFICATION	7.851236277056266E-6	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999730314845883	WITHOUT_CLASSIFICATION	2.696851541165061E-5	TEST
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999868355562826	WITHOUT_CLASSIFICATION	1.3164443717461414E-5	TEST
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999945714595859	WITHOUT_CLASSIFICATION	5.4285404140615014E-6	TEST
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999914107528558	WITHOUT_CLASSIFICATION	8.589247144108962E-6	TEST
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999887711521324	WITHOUT_CLASSIFICATION	1.1228847867687128E-5	TEST
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999857174233061	WITHOUT_CLASSIFICATION	1.4282576693900035E-5	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999989572607474	WITHOUT_CLASSIFICATION	1.0427392525161282E-6	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999989572607474	WITHOUT_CLASSIFICATION	1.0427392525161282E-6	TEST
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.999933989702191	WITHOUT_CLASSIFICATION	6.60102978089402E-5	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999987018383492	WITHOUT_CLASSIFICATION	1.2981616508750381E-6	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999953252344734	WITHOUT_CLASSIFICATION	4.6747655266048885E-6	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999953252344734	WITHOUT_CLASSIFICATION	4.6747655266048885E-6	TEST
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999999437318244	WITHOUT_CLASSIFICATION	5.626817557871422E-8	TEST
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9996743258963415	WITHOUT_CLASSIFICATION	3.256741036584599E-4	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999805239669646	WITHOUT_CLASSIFICATION	1.94760330354651E-5	TEST
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999969929904905	WITHOUT_CLASSIFICATION	3.0070095094724867E-6	TEST
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999997873094832	WITHOUT_CLASSIFICATION	2.1269051671297505E-7	TEST
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999454775992985	WITHOUT_CLASSIFICATION	5.452240070157752E-5	TEST
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9998638317000517	WITHOUT_CLASSIFICATION	1.3616829994824405E-4	TEST
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999930259918464	WITHOUT_CLASSIFICATION	6.974008153573685E-6	TEST
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999892895575065	WITHOUT_CLASSIFICATION	1.0710442493363512E-5	TEST
// host and port given	WITHOUT_CLASSIFICATION	0.9999983087708261	WITHOUT_CLASSIFICATION	1.691229173993091E-6	TEST
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999891689117745	WITHOUT_CLASSIFICATION	1.0831088225599862E-5	TEST
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9993081696768904	WITHOUT_CLASSIFICATION	6.918303231096425E-4	TEST
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9998675577656259	WITHOUT_CLASSIFICATION	1.3244223437417575E-4	TEST
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.999989263728165	WITHOUT_CLASSIFICATION	1.0736271835020505E-5	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999618252470277	WITHOUT_CLASSIFICATION	3.8174752972240817E-5	TEST
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999965992051453	WITHOUT_CLASSIFICATION	3.4007948547809626E-6	TEST
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9999899925197555	WITHOUT_CLASSIFICATION	1.0007480244468105E-5	TEST
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999865943582631	WITHOUT_CLASSIFICATION	1.3405641736839702E-5	TEST
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999577090638075	WITHOUT_CLASSIFICATION	4.229093619242166E-5	TEST
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999868603808798	WITHOUT_CLASSIFICATION	1.3139619120165488E-5	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.99995779764608	WITHOUT_CLASSIFICATION	4.220235392014826E-5	TEST
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.99995779764608	WITHOUT_CLASSIFICATION	4.220235392014826E-5	TEST
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9998755408145478	WITHOUT_CLASSIFICATION	1.2445918545226988E-4	TEST
// line 323	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999930802660673	WITHOUT_CLASSIFICATION	6.919733932753214E-6	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999930802660673	WITHOUT_CLASSIFICATION	6.919733932753214E-6	TEST
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999997867427215	WITHOUT_CLASSIFICATION	2.1325727860477469E-7	TEST
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999893475078268	WITHOUT_CLASSIFICATION	1.0652492173145323E-5	TEST
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9998739541081717	WITHOUT_CLASSIFICATION	1.2604589182841285E-4	TEST
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999857827907126	WITHOUT_CLASSIFICATION	1.4217209287420835E-5	TEST
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999141366192977	WITHOUT_CLASSIFICATION	8.58633807022637E-5	TEST
// RubySocket	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999491046169099	WITHOUT_CLASSIFICATION	5.089538309009597E-5	TEST
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999690871674398	WITHOUT_CLASSIFICATION	3.091283256018906E-5	TEST
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999992134594927	WITHOUT_CLASSIFICATION	7.865405071909847E-7	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999970323206223	WITHOUT_CLASSIFICATION	2.967679377603767E-6	TEST
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999948022218057	WITHOUT_CLASSIFICATION	5.197778194331984E-6	TEST
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999971596756966	WITHOUT_CLASSIFICATION	2.8403243033915366E-6	TEST
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9996743258963415	WITHOUT_CLASSIFICATION	3.256741036584599E-4	TEST
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.999979865952441	WITHOUT_CLASSIFICATION	2.0134047558969337E-5	TEST
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999813230794035	WITHOUT_CLASSIFICATION	1.867692059656358E-5	TEST
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999952634136816	WITHOUT_CLASSIFICATION	4.736586318349447E-6	TEST
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999875453213574	WITHOUT_CLASSIFICATION	1.2454678642629E-5	TEST
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999973641414155	WITHOUT_CLASSIFICATION	2.6358585846308783E-6	TEST
// be dead	WITHOUT_CLASSIFICATION	0.9999690250635624	WITHOUT_CLASSIFICATION	3.097493643753823E-5	TEST
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999983163716073	WITHOUT_CLASSIFICATION	1.6836283927116766E-6	TEST
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999960025398598	WITHOUT_CLASSIFICATION	3.997460140134587E-6	TEST
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.999627987260392	WITHOUT_CLASSIFICATION	3.7201273960794375E-4	TEST
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9993105705861688	WITHOUT_CLASSIFICATION	6.894294138312804E-4	TEST
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999936697091066	WITHOUT_CLASSIFICATION	6.330290893375633E-6	TEST
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999985743710352	WITHOUT_CLASSIFICATION	1.4256289648437708E-6	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999254555643792	WITHOUT_CLASSIFICATION	7.454443562079166E-5	TEST
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999513212693757	WITHOUT_CLASSIFICATION	4.867873062426871E-5	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999966584731294	WITHOUT_CLASSIFICATION	3.3415268707012738E-6	TEST
// main body	WITHOUT_CLASSIFICATION	0.9999959745761521	WITHOUT_CLASSIFICATION	4.025423847894228E-6	TEST
// return jump handling	WITHOUT_CLASSIFICATION	0.999994240185745	WITHOUT_CLASSIFICATION	5.7598142549581016E-6	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999578727201766	WITHOUT_CLASSIFICATION	4.212727982351272E-5	TEST
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999937336078522	WITHOUT_CLASSIFICATION	6.2663921479012696E-6	TEST
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999892381274811	WITHOUT_CLASSIFICATION	1.0761872518966546E-5	TEST
// clear the redo	WITHOUT_CLASSIFICATION	0.9999979802200032	WITHOUT_CLASSIFICATION	2.0197799967483765E-6	TEST
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.99999500726627	WITHOUT_CLASSIFICATION	4.992733729931534E-6	TEST
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999944062654056	WITHOUT_CLASSIFICATION	5.593734594460101E-6	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999630101287083	WITHOUT_CLASSIFICATION	3.698987129177781E-5	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999106446226279	WITHOUT_CLASSIFICATION	8.935537737210356E-5	TEST
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999795683948783	WITHOUT_CLASSIFICATION	2.0431605121612457E-5	TEST
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999577430303129	WITHOUT_CLASSIFICATION	4.225696968714934E-5	TEST
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999533634598021	WITHOUT_CLASSIFICATION	4.663654019781528E-5	TEST
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999957428934038	WITHOUT_CLASSIFICATION	4.257106596323821E-6	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999972933777413	WITHOUT_CLASSIFICATION	2.706622258690569E-6	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999972933777413	WITHOUT_CLASSIFICATION	2.706622258690569E-6	TEST
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999965033200794	WITHOUT_CLASSIFICATION	3.49667992058333E-6	TEST
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999873882197002	WITHOUT_CLASSIFICATION	1.2611780299795769E-5	TEST
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999869960956272	WITHOUT_CLASSIFICATION	1.3003904372722491E-5	TEST
// return	WITHOUT_CLASSIFICATION	0.9999774882914622	WITHOUT_CLASSIFICATION	2.251170853788426E-5	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999927482497424	WITHOUT_CLASSIFICATION	7.2517502575956014E-6	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999920979740607	WITHOUT_CLASSIFICATION	7.902025939270722E-6	TEST
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999761295906079	WITHOUT_CLASSIFICATION	2.387040939207819E-5	TEST
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999502621219195	WITHOUT_CLASSIFICATION	4.9737878080604675E-5	TEST
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999427014406465	WITHOUT_CLASSIFICATION	5.729855935341897E-5	TEST
// tc	WITHOUT_CLASSIFICATION	0.99995779764608	WITHOUT_CLASSIFICATION	4.220235392014826E-5	TEST
// self // name	WITHOUT_CLASSIFICATION	0.9999887780444762	WITHOUT_CLASSIFICATION	1.1221955523862558E-5	TEST
// no args	WITHOUT_CLASSIFICATION	0.9999832918367274	WITHOUT_CLASSIFICATION	1.670816327261189E-5	TEST
// variable args with block	WITHOUT_CLASSIFICATION	0.9999331745732896	WITHOUT_CLASSIFICATION	6.682542671039217E-5	TEST
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999898898375	WITHOUT_CLASSIFICATION	1.0110162500029735E-5	TEST
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999989936568734	WITHOUT_CLASSIFICATION	1.006343126590783E-5	TEST
// one arg with block	WITHOUT_CLASSIFICATION	0.9999610991893016	WITHOUT_CLASSIFICATION	3.890081069827973E-5	TEST
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999990200339295	WITHOUT_CLASSIFICATION	9.799660704958572E-6	TEST
// two args with block	WITHOUT_CLASSIFICATION	0.9999471657178617	WITHOUT_CLASSIFICATION	5.2834282138272864E-5	TEST
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999865763419649	WITHOUT_CLASSIFICATION	1.3423658035092351E-5	TEST
// three args with block	WITHOUT_CLASSIFICATION	0.999942991318217	WITHOUT_CLASSIFICATION	5.700868178307533E-5	TEST
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999855157030372	WITHOUT_CLASSIFICATION	1.448429696280735E-5	TEST
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.99993645981624	WITHOUT_CLASSIFICATION	6.354018375999057E-5	TEST
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9998630670478749	WITHOUT_CLASSIFICATION	1.3693295212507885E-4	TEST
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999736931523165	WITHOUT_CLASSIFICATION	2.630684768345873E-5	TEST
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999937829515262	WITHOUT_CLASSIFICATION	6.2170484738718755E-6	TEST
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.999991483823187	WITHOUT_CLASSIFICATION	8.516176812982908E-6	TEST
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999908109338411	WITHOUT_CLASSIFICATION	9.189066158783782E-6	TEST
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999890359664577	WITHOUT_CLASSIFICATION	1.0964033542216153E-5	TEST
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999855864100177	WITHOUT_CLASSIFICATION	1.4413589982380718E-5	TEST
// static invocation	WITHOUT_CLASSIFICATION	0.9999960830986906	WITHOUT_CLASSIFICATION	3.916901309462055E-6	TEST
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999880378265489	WITHOUT_CLASSIFICATION	1.1962173451077318E-5	TEST
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999021643301038	WITHOUT_CLASSIFICATION	9.78356698962094E-5	TEST
// normal finally and exit	WITHOUT_CLASSIFICATION	0.999997324233384	WITHOUT_CLASSIFICATION	2.6757666159610978E-6	TEST
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999873452598087	WITHOUT_CLASSIFICATION	1.2654740191283078E-5	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999106446226279	WITHOUT_CLASSIFICATION	8.935537737210356E-5	TEST
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999704211070141	WITHOUT_CLASSIFICATION	2.9578892985919005E-5	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999841091334363	WITHOUT_CLASSIFICATION	1.5890866563785493E-5	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999841091334363	WITHOUT_CLASSIFICATION	1.5890866563785493E-5	TEST
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.999988364851136	WITHOUT_CLASSIFICATION	1.1635148863901762E-5	TEST
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.999979025112121	WITHOUT_CLASSIFICATION	2.097488787901457E-5	TEST
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999879124343676	WITHOUT_CLASSIFICATION	1.208756563234081E-5	TEST
// never reached	WITHOUT_CLASSIFICATION	0.9999961042621826	WITHOUT_CLASSIFICATION	3.8957378174492376E-6	TEST
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9999093529376802	WITHOUT_CLASSIFICATION	9.064706231973902E-5	TEST
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999374631142234	WITHOUT_CLASSIFICATION	6.25368857766352E-5	TEST
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.999939142193625	WITHOUT_CLASSIFICATION	6.0857806374942226E-5	TEST
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9999165832171312	WITHOUT_CLASSIFICATION	8.341678286889069E-5	TEST
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9999378434260496	WITHOUT_CLASSIFICATION	6.21565739504036E-5	TEST
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9999395122949152	WITHOUT_CLASSIFICATION	6.0487705084739765E-5	TEST
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.999917090497438	WITHOUT_CLASSIFICATION	8.290950256187914E-5	TEST
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9999099041833355	WITHOUT_CLASSIFICATION	9.009581666457543E-5	TEST
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999920819813478	WITHOUT_CLASSIFICATION	7.918018652083509E-6	TEST
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999712246413114	WITHOUT_CLASSIFICATION	2.8775358688507252E-5	TEST
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999971275839376	WITHOUT_CLASSIFICATION	2.8724160624913666E-6	TEST
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999977898254195	WITHOUT_CLASSIFICATION	2.210174580479303E-6	TEST
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999826540481654	WITHOUT_CLASSIFICATION	1.734595183461078E-5	TEST
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9999812835041719	WITHOUT_CLASSIFICATION	1.8716495828037965E-5	TEST
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999870751814668	WITHOUT_CLASSIFICATION	1.2924818533199276E-5	TEST
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999874222221632	WITHOUT_CLASSIFICATION	1.2577777836699657E-5	TEST
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9999827595405777	WITHOUT_CLASSIFICATION	1.7240459422217183E-5	TEST
// promise to implement three	WITHOUT_CLASSIFICATION	0.9999921301366018	WITHOUT_CLASSIFICATION	7.869863398093497E-6	TEST
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.999989655616523	WITHOUT_CLASSIFICATION	1.0344383477117507E-5	TEST
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999936762543146	WITHOUT_CLASSIFICATION	6.3237456854150755E-6	TEST
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999986615115058	WITHOUT_CLASSIFICATION	1.3384884940757732E-6	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999918869025177	WITHOUT_CLASSIFICATION	8.113097482239595E-6	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999757681971446	WITHOUT_CLASSIFICATION	2.4231802855416957E-5	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999924434207987	WITHOUT_CLASSIFICATION	7.556579201246108E-6	TEST
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999976789367073	WITHOUT_CLASSIFICATION	2.3210632926422144E-6	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999967820425054	WITHOUT_CLASSIFICATION	3.217957494616886E-6	TEST
// start setup method	WITHOUT_CLASSIFICATION	0.9999971605412621	WITHOUT_CLASSIFICATION	2.8394587379400615E-6	TEST
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999967337385327	WITHOUT_CLASSIFICATION	3.266261467199561E-6	TEST
// set Ruby	WITHOUT_CLASSIFICATION	0.9999967337385327	WITHOUT_CLASSIFICATION	3.266261467199561E-6	TEST
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.999994557354187	WITHOUT_CLASSIFICATION	5.442645813035392E-6	TEST
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999572816453132	WITHOUT_CLASSIFICATION	4.271835468683583E-5	TEST
// get current context	WITHOUT_CLASSIFICATION	0.9999964063556049	WITHOUT_CLASSIFICATION	3.5936443951227977E-6	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999916331082059	WITHOUT_CLASSIFICATION	8.366891794031283E-6	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999918869025177	WITHOUT_CLASSIFICATION	8.113097482239595E-6	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999757681971446	WITHOUT_CLASSIFICATION	2.4231802855416957E-5	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999924434207987	WITHOUT_CLASSIFICATION	7.556579201246108E-6	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999967820425054	WITHOUT_CLASSIFICATION	3.217957494616886E-6	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.999993544825832	WITHOUT_CLASSIFICATION	6.455174167962212E-6	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999739859735963	WITHOUT_CLASSIFICATION	2.6014026403647977E-5	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.999996580505737	WITHOUT_CLASSIFICATION	3.4194942630413798E-6	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999962482595919	WITHOUT_CLASSIFICATION	3.7517404081473575E-6	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999985545700077	WITHOUT_CLASSIFICATION	1.4454299923444024E-6	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999826418737346	WITHOUT_CLASSIFICATION	1.7358126265301426E-5	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.9999989092166084	WITHOUT_CLASSIFICATION	1.0907833916797065E-6	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999979948144924	WITHOUT_CLASSIFICATION	2.005185507587715E-6	TEST
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999898520627705	WITHOUT_CLASSIFICATION	1.014793722962176E-5	TEST
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999982067762069	WITHOUT_CLASSIFICATION	1.7932237931689338E-6	TEST
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999885601672583	WITHOUT_CLASSIFICATION	1.1439832741608266E-5	TEST
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999756348188392	WITHOUT_CLASSIFICATION	2.4365181160788046E-5	TEST
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999826430887201	WITHOUT_CLASSIFICATION	1.735691127993072E-5	TEST
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999948114487374	WITHOUT_CLASSIFICATION	5.188551262734188E-6	TEST
// store it	WITHOUT_CLASSIFICATION	0.9999893488072283	WITHOUT_CLASSIFICATION	1.065119277168173E-5	TEST
// end of try block	WITHOUT_CLASSIFICATION	0.9999982773318663	WITHOUT_CLASSIFICATION	1.722668133763777E-6	TEST
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999898033180191	WITHOUT_CLASSIFICATION	1.0196681980889201E-5	TEST
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999473956967181	WITHOUT_CLASSIFICATION	5.2604303281917144E-5	TEST
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999950041002281	WITHOUT_CLASSIFICATION	4.99589977194081E-6	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999916331082059	WITHOUT_CLASSIFICATION	8.366891794031283E-6	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999739859735963	WITHOUT_CLASSIFICATION	2.6014026403647977E-5	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.999996580505737	WITHOUT_CLASSIFICATION	3.4194942630413798E-6	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999985545700077	WITHOUT_CLASSIFICATION	1.4454299923444024E-6	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999826418737346	WITHOUT_CLASSIFICATION	1.7358126265301426E-5	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.9999989092166084	WITHOUT_CLASSIFICATION	1.0907833916797065E-6	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999979948144924	WITHOUT_CLASSIFICATION	2.005185507587715E-6	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999991218475209	WITHOUT_CLASSIFICATION	8.781524790173743E-7	TEST
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999910215197735	WITHOUT_CLASSIFICATION	8.978480226481754E-6	TEST
// perform the dispatch	WITHOUT_CLASSIFICATION	0.999994522894546	WITHOUT_CLASSIFICATION	5.477105453929577E-6	TEST
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999989178530005	WITHOUT_CLASSIFICATION	1.0821469994078067E-6	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999709031156612	WITHOUT_CLASSIFICATION	2.9096884338819327E-5	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999709031156612	WITHOUT_CLASSIFICATION	2.9096884338819327E-5	TEST
// setup the class	WITHOUT_CLASSIFICATION	0.9999988355218523	WITHOUT_CLASSIFICATION	1.1644781477129968E-6	TEST
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999993094463037	WITHOUT_CLASSIFICATION	6.905536963892546E-7	TEST
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.999997168207462	WITHOUT_CLASSIFICATION	2.8317925379956145E-6	TEST
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999966371381468	WITHOUT_CLASSIFICATION	3.362861853218147E-6	TEST
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999956074617757	WITHOUT_CLASSIFICATION	4.392538224307328E-6	TEST
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999986950013342	WITHOUT_CLASSIFICATION	1.3049986657464987E-6	TEST
// set the full name	WITHOUT_CLASSIFICATION	0.9999822994663431	WITHOUT_CLASSIFICATION	1.7700533656849647E-5	TEST
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999926983858988	WITHOUT_CLASSIFICATION	7.3016141012457165E-6	TEST
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999859705586687	WITHOUT_CLASSIFICATION	1.4029441331333052E-5	TEST
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999468568552173	WITHOUT_CLASSIFICATION	5.314314478264505E-5	TEST
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999585994886584	WITHOUT_CLASSIFICATION	4.140051134154993E-5	TEST
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999945282779895	WITHOUT_CLASSIFICATION	5.471722010546483E-6	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9998512507866814	WITHOUT_CLASSIFICATION	1.4874921331872203E-4	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.999986015925608	WITHOUT_CLASSIFICATION	1.3984074392026134E-5	TEST
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999890482672573	WITHOUT_CLASSIFICATION	1.0951732742754394E-5	TEST
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999817850925466	WITHOUT_CLASSIFICATION	1.821490745335054E-5	TEST
// add all static variables	WITHOUT_CLASSIFICATION	0.9999822724887616	WITHOUT_CLASSIFICATION	1.772751123839646E-5	TEST
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999963424392501	WITHOUT_CLASSIFICATION	3.657560749902359E-6	TEST
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.999998093212961	WITHOUT_CLASSIFICATION	1.9067870390726701E-6	TEST
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999997526221256	WITHOUT_CLASSIFICATION	2.473778744578026E-7	TEST
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.999700901811807	WITHOUT_CLASSIFICATION	2.990981881929263E-4	TEST
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.99999722634097	WITHOUT_CLASSIFICATION	2.773659030057297E-6	TEST
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999983526542675	WITHOUT_CLASSIFICATION	1.6473457324959373E-6	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9986004502237262	WITHOUT_CLASSIFICATION	0.0013995497762737466	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999993554095086	WITHOUT_CLASSIFICATION	6.44590491429092E-7	TEST
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999995939440711	WITHOUT_CLASSIFICATION	4.060559288641439E-7	TEST
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.999923598476635	WITHOUT_CLASSIFICATION	7.640152336492932E-5	TEST
// line 326	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999993554095086	WITHOUT_CLASSIFICATION	6.44590491429092E-7	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.999986015925608	WITHOUT_CLASSIFICATION	1.3984074392026134E-5	TEST
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999564341880841	WITHOUT_CLASSIFICATION	4.356581191575083E-5	TEST
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.999996891600539	WITHOUT_CLASSIFICATION	3.10839946102708E-6	TEST
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999570234010476	WITHOUT_CLASSIFICATION	4.297659895239354E-5	TEST
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.999998928462093	WITHOUT_CLASSIFICATION	1.071537906959785E-6	TEST
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999966368881604	WITHOUT_CLASSIFICATION	3.3631118395936794E-6	TEST
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999796916064143	WITHOUT_CLASSIFICATION	2.0308393585650785E-5	TEST
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9998885492465768	WITHOUT_CLASSIFICATION	1.1145075342329391E-4	TEST
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999600486576391	WITHOUT_CLASSIFICATION	3.9951342360869415E-5	TEST
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9994992825549524	WITHOUT_CLASSIFICATION	5.007174450476277E-4	TEST
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9998019124064453	WITHOUT_CLASSIFICATION	1.980875935547927E-4	TEST
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999995381249853	WITHOUT_CLASSIFICATION	4.618750147019455E-7	TEST
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999806040619186	WITHOUT_CLASSIFICATION	1.9395938081504538E-5	TEST
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.999930265971265	WITHOUT_CLASSIFICATION	6.973402873505669E-5	TEST
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999990250995406	WITHOUT_CLASSIFICATION	9.749004594021952E-7	TEST
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999994493727183	WITHOUT_CLASSIFICATION	5.506272815633883E-7	TEST
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999697646954047	WITHOUT_CLASSIFICATION	3.0235304595279433E-5	TEST
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999993033521394	WITHOUT_CLASSIFICATION	6.966478605961351E-7	TEST
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9999863706444287	WITHOUT_CLASSIFICATION	1.3629355571293793E-5	TEST
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.999999085786859	WITHOUT_CLASSIFICATION	9.142131410996895E-7	TEST
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999816148915849	WITHOUT_CLASSIFICATION	1.8385108415107547E-5	TEST
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999971648375772	WITHOUT_CLASSIFICATION	2.835162422821673E-6	TEST
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999936407805291	WITHOUT_CLASSIFICATION	6.359219470958948E-6	TEST
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999651504567201	WITHOUT_CLASSIFICATION	3.484954327983516E-5	TEST
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999999776607835	WITHOUT_CLASSIFICATION	2.2339216410967735E-8	TEST
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999976180706374	WITHOUT_CLASSIFICATION	2.381929362597891E-6	TEST
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999712246413114	WITHOUT_CLASSIFICATION	2.8775358688507252E-5	TEST
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9996107575964337	WITHOUT_CLASSIFICATION	3.892424035662426E-4	TEST
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9997639335452824	WITHOUT_CLASSIFICATION	2.3606645471772555E-4	TEST
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999298441994565	WITHOUT_CLASSIFICATION	7.01558005434486E-5	TEST
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999939356300289	WITHOUT_CLASSIFICATION	6.064369970981079E-6	TEST
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999827168831092	WITHOUT_CLASSIFICATION	1.728311689079261E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999657271352116	WITHOUT_CLASSIFICATION	3.427286478848105E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999657271352116	WITHOUT_CLASSIFICATION	3.427286478848105E-5	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9998512507866814	WITHOUT_CLASSIFICATION	1.4874921331872203E-4	TEST
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999934858878067	WITHOUT_CLASSIFICATION	6.5141121933127674E-6	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.99997651083538	WITHOUT_CLASSIFICATION	2.3489164620026684E-5	TEST
// weakly reserved names	WITHOUT_CLASSIFICATION	0.999989347277147	WITHOUT_CLASSIFICATION	1.0652722853032679E-5	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999923297637124	WITHOUT_CLASSIFICATION	7.670236287625718E-6	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999923297637124	WITHOUT_CLASSIFICATION	7.670236287625718E-6	TEST
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999909450166156	WITHOUT_CLASSIFICATION	9.054983384340548E-6	TEST
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999947166223863	WITHOUT_CLASSIFICATION	5.283377613672816E-6	TEST
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999905798181552	WITHOUT_CLASSIFICATION	9.420181844802909E-6	TEST
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999821412987939	WITHOUT_CLASSIFICATION	1.785870120599168E-5	TEST
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999004387132611	WITHOUT_CLASSIFICATION	9.956128673892475E-5	TEST
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999997269682724	WITHOUT_CLASSIFICATION	2.7303172755764914E-7	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999857760854018	WITHOUT_CLASSIFICATION	1.4223914598173693E-5	TEST
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999940739193345	WITHOUT_CLASSIFICATION	5.92608066554225E-6	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999295208890374	WITHOUT_CLASSIFICATION	7.047911096251458E-5	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999489437403422	WITHOUT_CLASSIFICATION	5.105625965789879E-5	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.999970662643103	WITHOUT_CLASSIFICATION	2.9337356896968525E-5	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999885161512946	WITHOUT_CLASSIFICATION	1.1483848705376288E-5	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999726704970651	WITHOUT_CLASSIFICATION	2.732950293498921E-5	TEST
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999971835818763	WITHOUT_CLASSIFICATION	2.8164181236894336E-6	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999712246413114	WITHOUT_CLASSIFICATION	2.8775358688507252E-5	TEST
// something?	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999907870771305	WITHOUT_CLASSIFICATION	9.212922869544882E-6	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999907870771305	WITHOUT_CLASSIFICATION	9.212922869544882E-6	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999905214186429	WITHOUT_CLASSIFICATION	9.47858135723818E-6	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999905214186429	WITHOUT_CLASSIFICATION	9.47858135723818E-6	TEST
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999946599679331	WITHOUT_CLASSIFICATION	5.340032066911329E-6	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999911581107469	WITHOUT_CLASSIFICATION	8.841889253117174E-6	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999794134637671	WITHOUT_CLASSIFICATION	2.058653623300464E-5	TEST
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999776044865449	WITHOUT_CLASSIFICATION	2.2395513455056452E-5	TEST
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999786244822879	WITHOUT_CLASSIFICATION	2.1375517712136725E-5	TEST
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999867174536874	WITHOUT_CLASSIFICATION	1.3282546312683369E-5	TEST
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.999975177796065	WITHOUT_CLASSIFICATION	2.4822203934959788E-5	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999885161512946	WITHOUT_CLASSIFICATION	1.1483848705376288E-5	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999726704970651	WITHOUT_CLASSIFICATION	2.732950293498921E-5	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999712246413114	WITHOUT_CLASSIFICATION	2.8775358688507252E-5	TEST
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999894204437763	WITHOUT_CLASSIFICATION	1.0579556223837532E-5	TEST
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9998923240245735	WITHOUT_CLASSIFICATION	1.0767597542659304E-4	TEST
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999996150892267	WITHOUT_CLASSIFICATION	3.849107733376307E-7	TEST
// see note above re: return type	WITHOUT_CLASSIFICATION	0.999985298535187	WITHOUT_CLASSIFICATION	1.470146481295906E-5	TEST
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.999984836553299	WITHOUT_CLASSIFICATION	1.5163446700960083E-5	TEST
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999793845724697	WITHOUT_CLASSIFICATION	2.061542753030067E-5	TEST
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999893989262442	WITHOUT_CLASSIFICATION	1.0601073755767719E-5	TEST
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999893989262442	WITHOUT_CLASSIFICATION	1.0601073755767719E-5	TEST
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999920966724088	WITHOUT_CLASSIFICATION	7.903327591180437E-6	TEST
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999866860063789	WITHOUT_CLASSIFICATION	1.3313993621183657E-5	TEST
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999990089968528	WITHOUT_CLASSIFICATION	9.910031471971452E-7	TEST
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999755181210923	WITHOUT_CLASSIFICATION	2.4481878907670694E-5	TEST
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999726618120555	WITHOUT_CLASSIFICATION	2.7338187944565985E-5	TEST
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9997438184440155	WITHOUT_CLASSIFICATION	2.561815559845269E-4	TEST
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9999990047452361	WITHOUT_CLASSIFICATION	9.952547640369245E-7	TEST
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999978377367403	WITHOUT_CLASSIFICATION	2.1622632595784895E-6	TEST
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999934061932656	WITHOUT_CLASSIFICATION	6.593806734491891E-6	TEST
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999862165795027	WITHOUT_CLASSIFICATION	1.3783420497410854E-5	TEST
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999945719592502	WITHOUT_CLASSIFICATION	5.428040749759655E-6	TEST
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999986928897556	WITHOUT_CLASSIFICATION	1.3071102444847077E-6	TEST
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999917864507221	WITHOUT_CLASSIFICATION	8.213549278001281E-6	TEST
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999936363144462	WITHOUT_CLASSIFICATION	6.363685553883644E-6	TEST
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9996743258963415	WITHOUT_CLASSIFICATION	3.256741036584599E-4	TEST
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999931965302785	WITHOUT_CLASSIFICATION	6.803469721441792E-6	TEST
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999706082097558	WITHOUT_CLASSIFICATION	2.939179024424634E-5	TEST
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999947347577841	WITHOUT_CLASSIFICATION	5.265242215818085E-6	TEST
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999413917122659	WITHOUT_CLASSIFICATION	5.8608287734019145E-5	TEST
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9988115056706879	WITHOUT_CLASSIFICATION	0.0011884943293121173	TEST
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999959795264551	WITHOUT_CLASSIFICATION	4.020473544869661E-6	TEST
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999319289465097	WITHOUT_CLASSIFICATION	6.807105349021098E-5	TEST
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999747810610399	WITHOUT_CLASSIFICATION	2.5218938960131667E-5	TEST
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.999960379169775	WITHOUT_CLASSIFICATION	3.9620830225065105E-5	TEST
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999707484000958	WITHOUT_CLASSIFICATION	2.9251599904181417E-5	TEST
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999979971420828	WITHOUT_CLASSIFICATION	2.0028579171863583E-6	TEST
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999971388998674	WITHOUT_CLASSIFICATION	2.8611001326475385E-6	TEST
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999238534858106	WITHOUT_CLASSIFICATION	7.614651418943716E-5	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999963472824908	WITHOUT_CLASSIFICATION	3.652717509280338E-6	TEST
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999977523969074	WITHOUT_CLASSIFICATION	2.247603092603289E-6	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999911063361175	WITHOUT_CLASSIFICATION	8.893663882465153E-6	TEST
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999917044038464	WITHOUT_CLASSIFICATION	8.295596153602621E-6	TEST
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999930882614286	WITHOUT_CLASSIFICATION	6.911738571358632E-6	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.99997651083538	WITHOUT_CLASSIFICATION	2.3489164620026684E-5	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999963472824908	WITHOUT_CLASSIFICATION	3.652717509280338E-6	TEST
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9998263046839013	WITHOUT_CLASSIFICATION	1.7369531609871087E-4	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999999133836696	WITHOUT_CLASSIFICATION	8.661633047561812E-8	TEST
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999871076241952	WITHOUT_CLASSIFICATION	1.2892375804962539E-5	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999291202544024	WITHOUT_CLASSIFICATION	7.087974559769578E-5	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999291202544024	WITHOUT_CLASSIFICATION	7.087974559769578E-5	TEST
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999790225850055	WITHOUT_CLASSIFICATION	2.0977414994529358E-5	TEST
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999958124917551	WITHOUT_CLASSIFICATION	4.187508244872567E-6	TEST
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999995513037591	WITHOUT_CLASSIFICATION	4.4869624100446996E-7	TEST
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999997617184021	WITHOUT_CLASSIFICATION	2.3828159791089916E-7	TEST
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9999737008628566	WITHOUT_CLASSIFICATION	2.6299137143392596E-5	TEST
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999639794859136	WITHOUT_CLASSIFICATION	3.602051408633188E-5	TEST
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999803902632864	WITHOUT_CLASSIFICATION	1.9609736713556955E-5	TEST
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999288123817718	WITHOUT_CLASSIFICATION	7.118761822817066E-5	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999886984172254	WITHOUT_CLASSIFICATION	1.1301582774613112E-5	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999886984172254	WITHOUT_CLASSIFICATION	1.1301582774613112E-5	TEST
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999963250370756	WITHOUT_CLASSIFICATION	3.6749629244781617E-6	TEST
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999287929346032	WITHOUT_CLASSIFICATION	7.120706539680554E-5	TEST
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999998583520202	WITHOUT_CLASSIFICATION	1.4164797979746088E-7	TEST
// must be a public method	WITHOUT_CLASSIFICATION	0.9999992169793805	WITHOUT_CLASSIFICATION	7.830206195812544E-7	TEST
// must be a public class	WITHOUT_CLASSIFICATION	0.9999985974849263	WITHOUT_CLASSIFICATION	1.4025150737388944E-6	TEST
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999961852523253	WITHOUT_CLASSIFICATION	3.814747674779365E-6	TEST
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999670104352446	WITHOUT_CLASSIFICATION	3.2989564755313436E-5	TEST
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999993819936169	WITHOUT_CLASSIFICATION	6.180063829887767E-7	TEST
// no matching method found	WITHOUT_CLASSIFICATION	0.9999988484751584	WITHOUT_CLASSIFICATION	1.1515248416210224E-6	TEST
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9962809018789703	WITHOUT_CLASSIFICATION	0.0037190981210296725	TEST
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999929528798891	WITHOUT_CLASSIFICATION	7.047120110907513E-6	TEST
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999950093794596	WITHOUT_CLASSIFICATION	4.990620540289198E-6	TEST
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999954374443387	WITHOUT_CLASSIFICATION	4.56255566122324E-6	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998635629512723	WITHOUT_CLASSIFICATION	1.3643704872766345E-4	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998635629512723	WITHOUT_CLASSIFICATION	1.3643704872766345E-4	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999875679618178	WITHOUT_CLASSIFICATION	1.2432038182316669E-5	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999979948144924	WITHOUT_CLASSIFICATION	2.005185507587715E-6	TEST
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9962809018789703	WITHOUT_CLASSIFICATION	0.0037190981210296725	TEST
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999967298164305	WITHOUT_CLASSIFICATION	3.2701835694036303E-6	TEST
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999999431975606	WITHOUT_CLASSIFICATION	5.6802439384373055E-8	TEST
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999993989336156	WITHOUT_CLASSIFICATION	6.010663844869788E-7	TEST
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999899511512341	WITHOUT_CLASSIFICATION	1.004884876589672E-5	TEST
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999991269175205	WITHOUT_CLASSIFICATION	8.730824794291501E-7	TEST
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999893785705871	WITHOUT_CLASSIFICATION	1.0621429412979044E-5	TEST
/* package scope */	WITHOUT_CLASSIFICATION	0.9999911842731377	WITHOUT_CLASSIFICATION	8.81572686230122E-6	TEST
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.99997651083538	WITHOUT_CLASSIFICATION	2.3489164620026684E-5	TEST
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999917334019768	WITHOUT_CLASSIFICATION	8.266598023228746E-6	TEST
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9994261427091544	WITHOUT_CLASSIFICATION	5.738572908455214E-4	TEST
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999944265396763	WITHOUT_CLASSIFICATION	5.573460323725565E-6	TEST
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9998322592618595	WITHOUT_CLASSIFICATION	1.677407381405299E-4	TEST
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999934843346051	WITHOUT_CLASSIFICATION	6.515665394958353E-6	TEST
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999981055871645	WITHOUT_CLASSIFICATION	1.8944128354861445E-6	TEST
// statically initialized below	WITHOUT_CLASSIFICATION	0.9998910617976214	WITHOUT_CLASSIFICATION	1.0893820237852703E-4	TEST
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999937434792824	WITHOUT_CLASSIFICATION	6.256520717525531E-6	TEST
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999901015877966	WITHOUT_CLASSIFICATION	9.89841220342722E-6	TEST
// should not happen!	WITHOUT_CLASSIFICATION	0.9999088939574785	WITHOUT_CLASSIFICATION	9.110604252142465E-5	TEST
// start class	WITHOUT_CLASSIFICATION	0.999997876440144	WITHOUT_CLASSIFICATION	2.123559855981132E-6	TEST
// make getter for handler	WITHOUT_CLASSIFICATION	0.9999343333528089	WITHOUT_CLASSIFICATION	6.566664719111249E-5	TEST
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999649389725641	WITHOUT_CLASSIFICATION	3.5061027435827226E-5	TEST
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.995071736015114	WITHOUT_CLASSIFICATION	0.00492826398488598	TEST
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999784164314498	WITHOUT_CLASSIFICATION	2.1583568550121435E-5	TEST
// create static private method field	WITHOUT_CLASSIFICATION	0.9999757940070665	WITHOUT_CLASSIFICATION	2.4205992933589777E-5	TEST
// load static empty array	WITHOUT_CLASSIFICATION	0.9999921932299898	WITHOUT_CLASSIFICATION	7.80677001024375E-6	TEST
// box arguments	WITHOUT_CLASSIFICATION	0.9999965610149062	WITHOUT_CLASSIFICATION	3.4389850938648567E-6	TEST
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9997802851073363	WITHOUT_CLASSIFICATION	2.1971489266365207E-4	TEST
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999961163875579	WITHOUT_CLASSIFICATION	3.8836124420851925E-6	TEST
// do a void return	WITHOUT_CLASSIFICATION	0.9999989470583335	WITHOUT_CLASSIFICATION	1.0529416665777392E-6	TEST
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999918078134301	WITHOUT_CLASSIFICATION	8.192186569922882E-6	TEST
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999790225850055	WITHOUT_CLASSIFICATION	2.0977414994529358E-5	TEST
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999909742106211	WITHOUT_CLASSIFICATION	9.025789378864479E-6	TEST
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999995053728101	WITHOUT_CLASSIFICATION	4.946271899672674E-7	TEST
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999869776214969	WITHOUT_CLASSIFICATION	1.3022378503115142E-5	TEST
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.999983017645208	WITHOUT_CLASSIFICATION	1.698235479191482E-5	TEST
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999940570459991	WITHOUT_CLASSIFICATION	5.942954001009833E-6	TEST
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999960066237097	WITHOUT_CLASSIFICATION	3.993376290379285E-6	TEST
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999931831836357	WITHOUT_CLASSIFICATION	6.816816364293849E-6	TEST
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9999411898309737	WITHOUT_CLASSIFICATION	5.8810169026266136E-5	TEST
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9994976113892845	WITHOUT_CLASSIFICATION	5.023886107155748E-4	TEST
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999924124042341	WITHOUT_CLASSIFICATION	7.5875957659533565E-6	TEST
/* NUL */	WITHOUT_CLASSIFICATION	0.999912879859392	WITHOUT_CLASSIFICATION	8.712014060801242E-5	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999479446641532	WITHOUT_CLASSIFICATION	5.2055335846901385E-5	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999904002360657	WITHOUT_CLASSIFICATION	9.59976393442649E-6	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999994902775703	WITHOUT_CLASSIFICATION	5.097224296847889E-7	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999746267998522	WITHOUT_CLASSIFICATION	2.5373200147854723E-5	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.999996723799782	WITHOUT_CLASSIFICATION	3.2762002181024315E-6	TEST
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999942304393433	WITHOUT_CLASSIFICATION	5.769560656667157E-6	TEST
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999856677781606	WITHOUT_CLASSIFICATION	1.433222183946204E-5	TEST
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999800620786081	WITHOUT_CLASSIFICATION	1.9937921391768732E-5	TEST
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999440670946458	WITHOUT_CLASSIFICATION	5.593290535418827E-5	TEST
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999612611509398	WITHOUT_CLASSIFICATION	3.873884906019935E-5	TEST
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.999786538003906	WITHOUT_CLASSIFICATION	2.134619960940761E-4	TEST
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9997913701527417	WITHOUT_CLASSIFICATION	2.0862984725846296E-4	TEST
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999983805657066	WITHOUT_CLASSIFICATION	1.619434293501996E-6	TEST
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999907647800323	WITHOUT_CLASSIFICATION	9.235219967573757E-6	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999923106329087	WITHOUT_CLASSIFICATION	7.689367091323004E-6	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999923106329087	WITHOUT_CLASSIFICATION	7.689367091323004E-6	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999923106329087	WITHOUT_CLASSIFICATION	7.689367091323004E-6	TEST
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999996704405665	WITHOUT_CLASSIFICATION	3.295594334742191E-7	TEST
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999988132216197	WITHOUT_CLASSIFICATION	1.1867783803643393E-6	TEST
// Single node in list	WITHOUT_CLASSIFICATION	0.9999979366780397	WITHOUT_CLASSIFICATION	2.063321960333502E-6	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.999971275665817	WITHOUT_CLASSIFICATION	2.8724334182910712E-5	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.999971275665817	WITHOUT_CLASSIFICATION	2.8724334182910712E-5	TEST
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999828191816929	WITHOUT_CLASSIFICATION	1.718081830714328E-5	TEST
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999752809670209	WITHOUT_CLASSIFICATION	2.471903297902413E-5	TEST
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999731296598411	WITHOUT_CLASSIFICATION	2.6870340158914208E-5	TEST
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999971589296808	WITHOUT_CLASSIFICATION	2.841070319115477E-6	TEST
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.999995444553058	WITHOUT_CLASSIFICATION	4.555446942036328E-6	TEST
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999529046540733	WITHOUT_CLASSIFICATION	4.709534592675338E-5	TEST
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999588135261471	WITHOUT_CLASSIFICATION	4.1186473852912625E-5	TEST
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999957447879233	WITHOUT_CLASSIFICATION	4.2552120767159086E-6	TEST
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999966897747199	WITHOUT_CLASSIFICATION	3.310225280089217E-6	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999877415404425	WITHOUT_CLASSIFICATION	1.2258459557452558E-5	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999877415404425	WITHOUT_CLASSIFICATION	1.2258459557452558E-5	TEST
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999672179668627	WITHOUT_CLASSIFICATION	3.278203313721224E-5	TEST
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999968217636962	WITHOUT_CLASSIFICATION	3.1782363037555873E-6	TEST
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999921648005259	WITHOUT_CLASSIFICATION	7.835199474173382E-6	TEST
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999765386553305	WITHOUT_CLASSIFICATION	2.3461344669445607E-5	TEST
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999921496942226	WITHOUT_CLASSIFICATION	7.850305777386099E-6	TEST
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999974333001727	WITHOUT_CLASSIFICATION	2.566699827297884E-6	TEST
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999902289133965	WITHOUT_CLASSIFICATION	9.771086603533818E-6	TEST
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999911398831156	WITHOUT_CLASSIFICATION	8.860116884378934E-6	TEST
// PUSH(1)	WITHOUT_CLASSIFICATION	0.99995779764608	WITHOUT_CLASSIFICATION	4.220235392014826E-5	TEST
// POP	WITHOUT_CLASSIFICATION	0.99995779764608	WITHOUT_CLASSIFICATION	4.220235392014826E-5	TEST
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999713577872944	WITHOUT_CLASSIFICATION	2.8642212705616342E-5	TEST
// LEXPOP	WITHOUT_CLASSIFICATION	0.99995779764608	WITHOUT_CLASSIFICATION	4.220235392014826E-5	TEST
// SET_P	WITHOUT_CLASSIFICATION	0.99995779764608	WITHOUT_CLASSIFICATION	4.220235392014826E-5	TEST
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999720144707854	WITHOUT_CLASSIFICATION	2.7985529214563523E-5	TEST
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9998683996613573	WITHOUT_CLASSIFICATION	1.31600338642736E-4	TEST
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999919117362333	WITHOUT_CLASSIFICATION	8.08826376687809E-6	TEST
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.999975989887901	WITHOUT_CLASSIFICATION	2.401011209899221E-5	TEST
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9998352058471798	WITHOUT_CLASSIFICATION	1.6479415282032818E-4	TEST
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999942843175501	WITHOUT_CLASSIFICATION	5.7156824499548504E-6	TEST
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999960029047977	WITHOUT_CLASSIFICATION	3.997095202238213E-6	TEST
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9999918923706574	WITHOUT_CLASSIFICATION	8.107629342596768E-6	TEST
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999908650015398	WITHOUT_CLASSIFICATION	9.13499846017803E-6	TEST
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999727122339223	WITHOUT_CLASSIFICATION	2.728776607786151E-5	TEST
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999891452500541	WITHOUT_CLASSIFICATION	1.0854749945860896E-5	TEST
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999950283328336	WITHOUT_CLASSIFICATION	4.971667166342136E-6	TEST
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999739118772716	WITHOUT_CLASSIFICATION	2.608812272841545E-5	TEST
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999890412693837	WITHOUT_CLASSIFICATION	1.0958730616357544E-5	TEST
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999731095916782	WITHOUT_CLASSIFICATION	2.6890408321818277E-5	TEST
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.999995747438505	WITHOUT_CLASSIFICATION	4.252561495019597E-6	TEST
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.999995083574667	WITHOUT_CLASSIFICATION	4.916425332964643E-6	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.999912879859392	WITHOUT_CLASSIFICATION	8.712014060801242E-5	TEST
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999964509233751	WITHOUT_CLASSIFICATION	3.5490766249730367E-6	TEST
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999945539459899	WITHOUT_CLASSIFICATION	5.446054010183736E-6	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.999912879859392	WITHOUT_CLASSIFICATION	8.712014060801242E-5	TEST
/* it's a comment */	WITHOUT_CLASSIFICATION	0.999996841974888	WITHOUT_CLASSIFICATION	3.1580251119107703E-6	TEST
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999264968267177	WITHOUT_CLASSIFICATION	7.350317328222551E-5	TEST
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999644690285412	WITHOUT_CLASSIFICATION	3.5530971458834715E-5	TEST
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999889449476791	WITHOUT_CLASSIFICATION	1.105505232097577E-5	TEST
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999819257010548	WITHOUT_CLASSIFICATION	1.8074298945241314E-5	TEST
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.999994118542597	WITHOUT_CLASSIFICATION	5.881457403048397E-6	TEST
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999976559510041	WITHOUT_CLASSIFICATION	2.3440489958506996E-6	TEST
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.999936852503666	WITHOUT_CLASSIFICATION	6.314749633390866E-5	TEST
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999898479608623	WITHOUT_CLASSIFICATION	1.015203913765423E-5	TEST
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999898479608623	WITHOUT_CLASSIFICATION	1.015203913765423E-5	TEST
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999898528767796	WITHOUT_CLASSIFICATION	1.0147123220566259E-5	TEST
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999817678476166	WITHOUT_CLASSIFICATION	1.8232152383314413E-5	TEST
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999782911992795	WITHOUT_CLASSIFICATION	2.1708800720485647E-5	TEST
/* $@: error position */	WITHOUT_CLASSIFICATION	0.999990698706983	WITHOUT_CLASSIFICATION	9.301293016964121E-6	TEST
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.999945523374021	WITHOUT_CLASSIFICATION	5.4476625978941044E-5	TEST
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9998636209914179	WITHOUT_CLASSIFICATION	1.3637900858213124E-4	TEST
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9997954826876692	WITHOUT_CLASSIFICATION	2.0451731233088395E-4	TEST
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999695285270871	WITHOUT_CLASSIFICATION	3.047147291283481E-5	TEST
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999898479608623	WITHOUT_CLASSIFICATION	1.015203913765423E-5	TEST
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999916205078019	WITHOUT_CLASSIFICATION	8.37949219823176E-6	TEST
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999778544721994	WITHOUT_CLASSIFICATION	2.214552780058291E-5	TEST
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999880554735321	WITHOUT_CLASSIFICATION	1.1944526468017086E-5	TEST
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999928308689275	WITHOUT_CLASSIFICATION	7.1691310724820614E-6	TEST
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999088351945348	WITHOUT_CLASSIFICATION	9.11648054651603E-5	TEST
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9998372111647551	WITHOUT_CLASSIFICATION	1.6278883524485326E-4	TEST
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.999976015060899	WITHOUT_CLASSIFICATION	2.398493910102556E-5	TEST
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9997913728330273	WITHOUT_CLASSIFICATION	2.0862716697275484E-4	TEST
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999951165867023	WITHOUT_CLASSIFICATION	4.883413297728364E-6	TEST
// block (primary)	WITHOUT_CLASSIFICATION	0.999995175848985	WITHOUT_CLASSIFICATION	4.824151015048419E-6	TEST
// block (expr)	WITHOUT_CLASSIFICATION	0.999995175848985	WITHOUT_CLASSIFICATION	4.824151015048419E-6	TEST
// hash	WITHOUT_CLASSIFICATION	0.999958156145048	WITHOUT_CLASSIFICATION	4.1843854951960226E-5	TEST
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9995955447049292	WITHOUT_CLASSIFICATION	4.0445529507081296E-4	TEST
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9999606706322728	WITHOUT_CLASSIFICATION	3.932936772726153E-5	TEST
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999851633107246	WITHOUT_CLASSIFICATION	1.4836689275419324E-5	TEST
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999947149559693	WITHOUT_CLASSIFICATION	5.285044030687354E-6	TEST
// binary	WITHOUT_CLASSIFICATION	0.9999614828628427	WITHOUT_CLASSIFICATION	3.851713715726651E-5	TEST
// decimal	WITHOUT_CLASSIFICATION	0.9999581639716285	WITHOUT_CLASSIFICATION	4.183602837147479E-5	TEST
//Octal	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999987799278951	WITHOUT_CLASSIFICATION	1.2200721048696538E-6	TEST
// backslash	WITHOUT_CLASSIFICATION	0.9999951230109667	WITHOUT_CLASSIFICATION	4.8769890332034425E-6	TEST
// newline	WITHOUT_CLASSIFICATION	0.9999583196305817	WITHOUT_CLASSIFICATION	4.1680369418344765E-5	TEST
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999955307356925	WITHOUT_CLASSIFICATION	4.469264307576831E-6	TEST
// form feed	WITHOUT_CLASSIFICATION	0.9999956658119517	WITHOUT_CLASSIFICATION	4.334188048276658E-6	TEST
// vertical tab	WITHOUT_CLASSIFICATION	0.9999955539026648	WITHOUT_CLASSIFICATION	4.446097335226746E-6	TEST
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// escape	WITHOUT_CLASSIFICATION	0.9999668466937576	WITHOUT_CLASSIFICATION	3.31533062425187E-5	TEST
// hex constant	WITHOUT_CLASSIFICATION	0.9999957081944799	WITHOUT_CLASSIFICATION	4.291805520077795E-6	TEST
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999470493500972	WITHOUT_CLASSIFICATION	5.2950649902971947E-5	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999890603576267	WITHOUT_CLASSIFICATION	1.0939642373239699E-5	TEST
// space	WITHOUT_CLASSIFICATION	0.99997808799103	WITHOUT_CLASSIFICATION	2.191200896987779E-5	TEST
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999105025477806	WITHOUT_CLASSIFICATION	8.949745221943452E-5	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9998134130178382	WITHOUT_CLASSIFICATION	1.865869821616866E-4	TEST
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999939259032643	WITHOUT_CLASSIFICATION	6.074096735669718E-6	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999890603576267	WITHOUT_CLASSIFICATION	1.0939642373239699E-5	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.999938489826969	WITHOUT_CLASSIFICATION	6.151017303106777E-5	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.999938489826969	WITHOUT_CLASSIFICATION	6.151017303106777E-5	TEST
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999889376647813	WITHOUT_CLASSIFICATION	1.1062335218823184E-5	TEST
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999754591156721	WITHOUT_CLASSIFICATION	2.4540884327912658E-5	TEST
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999975199652243	WITHOUT_CLASSIFICATION	2.4800347756720017E-6	TEST
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999670548696511	WITHOUT_CLASSIFICATION	3.2945130348860995E-5	TEST
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999918726943348	WITHOUT_CLASSIFICATION	8.127305665168603E-6	TEST
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999712246413114	WITHOUT_CLASSIFICATION	2.8775358688507252E-5	TEST
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9759686312470285	TEST	0.024031368752971537	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999644018863443	WITHOUT_CLASSIFICATION	3.559811365567998E-5	TEST
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9995730730387853	WITHOUT_CLASSIFICATION	4.2692696121475785E-4	TEST
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.999977265435144	WITHOUT_CLASSIFICATION	2.273456485596175E-5	TEST
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999813378851751	WITHOUT_CLASSIFICATION	1.8662114824844594E-5	TEST
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9997857471983802	WITHOUT_CLASSIFICATION	2.1425280161974E-4	TEST
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.999997549326534	WITHOUT_CLASSIFICATION	2.450673466109774E-6	TEST
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999978529723862	WITHOUT_CLASSIFICATION	2.147027613812819E-6	TEST
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999581264493272	WITHOUT_CLASSIFICATION	4.1873550672741155E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
// line 329	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9996876513596953	WITHOUT_CLASSIFICATION	3.1234864030461727E-4	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999881196488286	WITHOUT_CLASSIFICATION	1.1880351171358387E-5	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999050092262571	WITHOUT_CLASSIFICATION	9.499077374289235E-5	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999894215387314	WITHOUT_CLASSIFICATION	1.0578461268575923E-5	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999987939920162	WITHOUT_CLASSIFICATION	1.2060079838551537E-6	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999950860111446	WITHOUT_CLASSIFICATION	4.913988855401916E-6	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.99999526371688	WITHOUT_CLASSIFICATION	4.736283120072326E-6	TEST
// line 271	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 274	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 303	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 311	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 314	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 317	WITHOUT_CLASSIFICATION	0.9999965102830868	WITHOUT_CLASSIFICATION	3.4897169131436624E-6	TEST
// line 332	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 338	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 341	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 344	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 358	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 367	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 378	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 407	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 411	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 414	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 434	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 443	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 446	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 452	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 457	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 464	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 467	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 470	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 479	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 484	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 492	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 498	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 501	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 504	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 507	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 510	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 519	WITHOUT_CLASSIFICATION	0.9999965120789259	WITHOUT_CLASSIFICATION	3.4879210740449335E-6	TEST
// line 525	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 556	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 559	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 563	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 569	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 575	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 578	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 587	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 596	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 604	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 607	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 613	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 616	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 634	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 638	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 643	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 646	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 655	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 660	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 667	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 670	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 701	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 717	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 720	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 726	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 729	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 735	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 738	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 751	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 754	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 757	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 760	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 763	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 769	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 775	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 797	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 803	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 806	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 809	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 815	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 818	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 821	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 824	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 830	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 833	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 836	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 852	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 858	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 861	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 868	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 871	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 876	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 879	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 883	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 899	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 903	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 907	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 915	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 920	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 923	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 926	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 936	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 940	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 944	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 948	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 956	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 964	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 967	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 972	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 978	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 984	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 986	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 996	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1001	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1008	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1014	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1029	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1032	WITHOUT_CLASSIFICATION	0.9999965192560352	WITHOUT_CLASSIFICATION	3.480743964895552E-6	TEST
// line 1034	WITHOUT_CLASSIFICATION	0.999996510278566	WITHOUT_CLASSIFICATION	3.4897214340711836E-6	TEST
// line 1045	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1048	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1051	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1058	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1070	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1073	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1076	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1079	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1082	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1089	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1100	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1103	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1107	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.9999965303309498	WITHOUT_CLASSIFICATION	3.469669050232075E-6	TEST
// line 1113	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1115	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1119	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1135	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1137	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1151	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1154	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1164	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1175	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1178	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1187	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1189	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1193	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1214	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1234	WITHOUT_CLASSIFICATION	0.9999965157864277	WITHOUT_CLASSIFICATION	3.4842135723995816E-6	TEST
// line 1239	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1243	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1263	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1269	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1280	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1283	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1290	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1296	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1299	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1302	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1309	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1313	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1315	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1328	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1335	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1352	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1358	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1374	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1381	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1415	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1431	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1434	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1440	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1443	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1453	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1465	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1477	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1480	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1485	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1488	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1510	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1516	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1533	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1550	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1553	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1556	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1565	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1568	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1571	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1574	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1577	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1587	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1600	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1609	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1623	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1626	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1638	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1641	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1644	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1649	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1655	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1658	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1661	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1672	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1677	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1687	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1694	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1733	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1745	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1757	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1769	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1775	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1784	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1808	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1814	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999851154568773	WITHOUT_CLASSIFICATION	1.4884543122744351E-5	TEST
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9995224799922211	WITHOUT_CLASSIFICATION	4.775200077789887E-4	TEST
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999291488952585	WITHOUT_CLASSIFICATION	7.08511047415223E-5	TEST
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999351567690428	WITHOUT_CLASSIFICATION	6.484323095723538E-5	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.999750903077591	WITHOUT_CLASSIFICATION	2.490969224090361E-4	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9998924706128537	WITHOUT_CLASSIFICATION	1.0752938714631894E-4	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9998054845050939	WITHOUT_CLASSIFICATION	1.9451549490610682E-4	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9998054845050939	WITHOUT_CLASSIFICATION	1.9451549490610682E-4	TEST
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999106000531065	WITHOUT_CLASSIFICATION	8.939994689351079E-5	TEST
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9998583357771804	WITHOUT_CLASSIFICATION	1.4166422281962959E-4	TEST
// line 529	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999284364464395	WITHOUT_CLASSIFICATION	7.156355356048358E-5	TEST
/* XXX*/	WITHOUT_CLASSIFICATION	0.9997501810497527	WITHOUT_CLASSIFICATION	2.4981895024737386E-4	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999861826204849	WITHOUT_CLASSIFICATION	1.3817379515033578E-5	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998727099544826	WITHOUT_CLASSIFICATION	1.2729004551736745E-4	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999284364464395	WITHOUT_CLASSIFICATION	7.156355356048358E-5	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998296515685142	WITHOUT_CLASSIFICATION	1.7034843148579112E-4	TEST
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999795797313615	WITHOUT_CLASSIFICATION	2.0420268638460328E-5	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999995284140568	WITHOUT_CLASSIFICATION	4.715859431993475E-6	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9994250909244626	WITHOUT_CLASSIFICATION	5.749090755373067E-4	TEST
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999965162087527	WITHOUT_CLASSIFICATION	3.483791247294691E-6	TEST
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999910408477926	WITHOUT_CLASSIFICATION	8.959152207535689E-6	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999968863029745	WITHOUT_CLASSIFICATION	3.113697025517784E-6	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999968863029745	WITHOUT_CLASSIFICATION	3.113697025517784E-6	TEST
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9998680241981026	WITHOUT_CLASSIFICATION	1.3197580189733054E-4	TEST
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9993033770555232	WITHOUT_CLASSIFICATION	6.966229444767949E-4	TEST
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999092801757739	WITHOUT_CLASSIFICATION	9.071982422617055E-5	TEST
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999906977599483	WITHOUT_CLASSIFICATION	9.302240051653728E-6	TEST
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9997129287618863	WITHOUT_CLASSIFICATION	2.8707123811368775E-4	TEST
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999672680782989	WITHOUT_CLASSIFICATION	3.2731921701086285E-5	TEST
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.999999277695456	WITHOUT_CLASSIFICATION	7.223045439992235E-7	TEST
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999736037405448	WITHOUT_CLASSIFICATION	2.6396259455223212E-5	TEST
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999918773950258	WITHOUT_CLASSIFICATION	8.122604974207504E-6	TEST
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999760004535609	WITHOUT_CLASSIFICATION	2.3999546439000434E-5	TEST
// Parser states:	WITHOUT_CLASSIFICATION	0.9999950922767279	WITHOUT_CLASSIFICATION	4.907723272154748E-6	TEST
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999768100522748	WITHOUT_CLASSIFICATION	2.3189947725181784E-5	TEST
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999945444094154	WITHOUT_CLASSIFICATION	5.455590584547425E-6	TEST
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9997736124587236	WITHOUT_CLASSIFICATION	2.2638754127638123E-4	TEST
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999750463167172	WITHOUT_CLASSIFICATION	2.495368328278691E-5	TEST
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999905305384593	WITHOUT_CLASSIFICATION	9.469461540582603E-6	TEST
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999749931909311	WITHOUT_CLASSIFICATION	2.5006809068908753E-5	TEST
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999708717381602	WITHOUT_CLASSIFICATION	2.9128261839744256E-5	TEST
// Node	WITHOUT_CLASSIFICATION	0.9999578678281186	WITHOUT_CLASSIFICATION	4.2132171881440405E-5	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.999783404346795	WITHOUT_CLASSIFICATION	2.165956532051213E-4	TEST
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9996499910308605	WITHOUT_CLASSIFICATION	3.500089691395212E-4	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.999783404346795	WITHOUT_CLASSIFICATION	2.165956532051213E-4	TEST
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9996152078393141	WITHOUT_CLASSIFICATION	3.8479216068578137E-4	TEST
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9996499910308605	WITHOUT_CLASSIFICATION	3.500089691395212E-4	TEST
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9999870205030192	WITHOUT_CLASSIFICATION	1.2979496980732914E-5	TEST
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999898479608623	WITHOUT_CLASSIFICATION	1.015203913765423E-5	TEST
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.999983819393248	WITHOUT_CLASSIFICATION	1.618060675209118E-5	TEST
// foo()	WITHOUT_CLASSIFICATION	0.99995779764608	WITHOUT_CLASSIFICATION	4.220235392014826E-5	TEST
// foo()	WITHOUT_CLASSIFICATION	0.99995779764608	WITHOUT_CLASSIFICATION	4.220235392014826E-5	TEST
// foo()	WITHOUT_CLASSIFICATION	0.99995779764608	WITHOUT_CLASSIFICATION	4.220235392014826E-5	TEST
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999176885264566	WITHOUT_CLASSIFICATION	8.231147354336728E-5	TEST
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.99744129517093	WITHOUT_CLASSIFICATION	0.002558704829069911	TEST
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999889298235489	WITHOUT_CLASSIFICATION	1.1070176450997E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999881196488286	WITHOUT_CLASSIFICATION	1.1880351171358387E-5	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999894215387314	WITHOUT_CLASSIFICATION	1.0578461268575923E-5	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999987939920162	WITHOUT_CLASSIFICATION	1.2060079838551537E-6	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999950860111446	WITHOUT_CLASSIFICATION	4.913988855401916E-6	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.99999526371688	WITHOUT_CLASSIFICATION	4.736283120072326E-6	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 280	WITHOUT_CLASSIFICATION	0.999996510261206	WITHOUT_CLASSIFICATION	3.4897387940767845E-6	TEST
// line 283	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 296	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 324	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 327	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 331	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 333	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 336	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 342	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 345	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 348	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 354	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 368	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 377	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 388	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 392	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 397	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 429	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 432	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 436	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 445	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 448	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 454	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 459	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 466	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 469	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 478	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 481	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 488	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 494	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 497	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 503	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 506	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 509	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 512	WITHOUT_CLASSIFICATION	0.9999965119660968	WITHOUT_CLASSIFICATION	3.4880339029967382E-6	TEST
// line 521	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 526	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 785	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 534	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 549	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 552	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 558	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 561	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 571	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 574	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 579	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 586	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 589	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 592	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 595	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 598	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 623	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 627	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 630	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 633	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 639	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 648	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 657	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 661	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 666	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 678	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 682	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 688	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 699	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 706	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 708	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 727	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 737	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 753	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 779	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 801	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 808	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 811	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 817	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 899	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 944	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 820	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 826	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 829	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 832	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 851	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 857	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 860	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 863	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 866	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 869	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 875	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 884	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 887	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 890	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 902	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 909	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 912	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 916	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 922	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 928	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 941	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 947	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 951	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 955	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 965	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 969	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 977	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 983	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1013	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1023	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1035	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1041	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1043	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1054	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1057	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1060	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1069	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1075	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.9999965303309498	WITHOUT_CLASSIFICATION	3.469669050232075E-6	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1078	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1084	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1087	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1090	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1093	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1114	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1116	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1118	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1124	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1126	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1138	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1144	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1149	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1155	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1162	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1173	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1179	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1182	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1190	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1196	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1213	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1217	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1231	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1236	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1244	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1254	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1258	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1264	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1270	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1273	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1276	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1279	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1282	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1289	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1292	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1295	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1298	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1305	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1308	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1311	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1317	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1323	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1326	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1329	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1337	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1342	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1345	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1354	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1359	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1366	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1369	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1373	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1377	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1383	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1399	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1401	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1406	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1417	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1424	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1427	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1430	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1433	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1436	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1442	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1445	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1458	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1464	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1489	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1493	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1507	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1519	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1532	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1538	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1542	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1557	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1573	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1591	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1607	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1610	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1622	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1625	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1636	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1639	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1647	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1651	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1657	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1660	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1663	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1678	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1702	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1711	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1719	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1722	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1731	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1734	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1738	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1746	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1756	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1758	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1761	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1767	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1776	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1782	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1785	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1788	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1791	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1797	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1800	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1803	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1806	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1809	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1815	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1825	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1828	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1831	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1847	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9998054845050939	WITHOUT_CLASSIFICATION	1.9451549490610682E-4	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9998054845050939	WITHOUT_CLASSIFICATION	1.9451549490610682E-4	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999284364464395	WITHOUT_CLASSIFICATION	7.156355356048358E-5	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999861826204849	WITHOUT_CLASSIFICATION	1.3817379515033578E-5	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998727099544826	WITHOUT_CLASSIFICATION	1.2729004551736745E-4	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999284364464395	WITHOUT_CLASSIFICATION	7.156355356048358E-5	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998296515685142	WITHOUT_CLASSIFICATION	1.7034843148579112E-4	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999712746727221	WITHOUT_CLASSIFICATION	2.8725327277894483E-5	TEST
// line 1854	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1869	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1872	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1877	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1886	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1898	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1902	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1905	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1911	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1918	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1935	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1938	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1942	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1948	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1960	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1963	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1968	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1972	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1982	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1995	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 2000	WITHOUT_CLASSIFICATION	0.9999965134608005	WITHOUT_CLASSIFICATION	3.4865391994086616E-6	TEST
// line 2006	WITHOUT_CLASSIFICATION	0.9999965108555573	WITHOUT_CLASSIFICATION	3.4891444427722864E-6	TEST
// line 2010	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999418450365515	WITHOUT_CLASSIFICATION	5.815496344851954E-5	TEST
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9998375028981334	WITHOUT_CLASSIFICATION	1.6249710186669496E-4	TEST
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9998298685070162	WITHOUT_CLASSIFICATION	1.701314929837558E-4	TEST
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999945460543317	WITHOUT_CLASSIFICATION	5.453945668272508E-6	TEST
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999567075126954	WITHOUT_CLASSIFICATION	4.329248730460887E-5	TEST
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9997980565913726	WITHOUT_CLASSIFICATION	2.019434086273753E-4	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999995284140568	WITHOUT_CLASSIFICATION	4.715859431993475E-6	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9994250909244626	WITHOUT_CLASSIFICATION	5.749090755373067E-4	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999968863029745	WITHOUT_CLASSIFICATION	3.113697025517784E-6	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999968863029745	WITHOUT_CLASSIFICATION	3.113697025517784E-6	TEST
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9999036586674109	WITHOUT_CLASSIFICATION	9.634133258903169E-5	TEST
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999914115737584	WITHOUT_CLASSIFICATION	8.588426241644597E-6	TEST
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999914221697792	WITHOUT_CLASSIFICATION	8.577830220818655E-6	TEST
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999965162087527	WITHOUT_CLASSIFICATION	3.483791247294691E-6	TEST
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999993824675714	WITHOUT_CLASSIFICATION	6.175324286378868E-7	TEST
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999235226556483	WITHOUT_CLASSIFICATION	7.647734435167789E-5	TEST
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999925917691609	WITHOUT_CLASSIFICATION	7.408230839128192E-6	TEST
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999972748982724	WITHOUT_CLASSIFICATION	2.7251017276075564E-6	TEST
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999882017156702	WITHOUT_CLASSIFICATION	1.1798284329924806E-5	TEST
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999914282024799	WITHOUT_CLASSIFICATION	8.571797520246237E-6	TEST
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999883250368087	WITHOUT_CLASSIFICATION	1.1674963191381604E-5	TEST
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999851320556652	WITHOUT_CLASSIFICATION	1.486794433467042E-5	TEST
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999920213078585	WITHOUT_CLASSIFICATION	7.97869214160792E-6	TEST
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999975443446575	WITHOUT_CLASSIFICATION	2.4556553424079167E-6	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999954067126519	WITHOUT_CLASSIFICATION	4.593287348193255E-6	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999954067126519	WITHOUT_CLASSIFICATION	4.593287348193255E-6	TEST
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9998400074831911	WITHOUT_CLASSIFICATION	1.599925168088169E-4	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999956221618633	WITHOUT_CLASSIFICATION	4.377838136635911E-6	TEST
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999970009231147	WITHOUT_CLASSIFICATION	2.9990768853581244E-6	TEST
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9998870357506158	WITHOUT_CLASSIFICATION	1.1296424938423974E-4	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999970623129203	WITHOUT_CLASSIFICATION	2.937687079646284E-6	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.999997220429768	WITHOUT_CLASSIFICATION	2.779570231970627E-6	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999974048437789	WITHOUT_CLASSIFICATION	2.5951562211410306E-6	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.999997220429768	WITHOUT_CLASSIFICATION	2.779570231970627E-6	TEST
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999831126209902	WITHOUT_CLASSIFICATION	1.6887379009848262E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999863077747728	WITHOUT_CLASSIFICATION	1.3692225227194244E-5	TEST
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9998414328720105	WITHOUT_CLASSIFICATION	1.5856712798944166E-4	TEST
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9995655597624706	WITHOUT_CLASSIFICATION	4.344402375293619E-4	TEST
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9997269764442284	WITHOUT_CLASSIFICATION	2.730235557717431E-4	TEST
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9997269764442284	WITHOUT_CLASSIFICATION	2.730235557717431E-4	TEST
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999513592818636	WITHOUT_CLASSIFICATION	4.86407181363512E-5	TEST
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999758923011302	WITHOUT_CLASSIFICATION	2.410769886976676E-5	TEST
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999737001031647	WITHOUT_CLASSIFICATION	2.629989683533398E-5	TEST
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999983546585761	WITHOUT_CLASSIFICATION	1.6453414239011937E-6	TEST
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.99998990365615	WITHOUT_CLASSIFICATION	1.0096343850029168E-5	TEST
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9996756247886793	WITHOUT_CLASSIFICATION	3.243752113206826E-4	TEST
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9996756247886793	WITHOUT_CLASSIFICATION	3.243752113206826E-4	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9996654313985052	WITHOUT_CLASSIFICATION	3.345686014947708E-4	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999144964005346	WITHOUT_CLASSIFICATION	8.550359946542047E-5	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999144964005346	WITHOUT_CLASSIFICATION	8.550359946542047E-5	TEST
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999911885348693	WITHOUT_CLASSIFICATION	8.81146513062714E-6	TEST
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999780049679652	WITHOUT_CLASSIFICATION	2.1995032034793985E-5	TEST
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999745524597747	WITHOUT_CLASSIFICATION	2.544754022523996E-5	TEST
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999971592851307	WITHOUT_CLASSIFICATION	2.8407148693359483E-6	TEST
// required and optional only	WITHOUT_CLASSIFICATION	0.9999978997242429	WITHOUT_CLASSIFICATION	2.100275757103543E-6	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.999997220429768	WITHOUT_CLASSIFICATION	2.779570231970627E-6	TEST
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999892188832618	WITHOUT_CLASSIFICATION	1.0781116738266978E-5	TEST
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999999394884046	WITHOUT_CLASSIFICATION	6.051159541858065E-8	TEST
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999532083494527	WITHOUT_CLASSIFICATION	4.679165054732308E-5	TEST
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999892295195372	WITHOUT_CLASSIFICATION	1.0770480462683362E-5	TEST
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999999355329062	WITHOUT_CLASSIFICATION	6.446709388294419E-8	TEST
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.999999683801574	WITHOUT_CLASSIFICATION	3.1619842595143785E-7	TEST
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999910972371626	WITHOUT_CLASSIFICATION	8.902762837356787E-6	TEST
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9998237677199254	WITHOUT_CLASSIFICATION	1.7623228007457008E-4	TEST
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.999999140589668	WITHOUT_CLASSIFICATION	8.594103319822597E-7	TEST
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999477797871559	WITHOUT_CLASSIFICATION	5.2220212844035E-5	TEST
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999773038565175	WITHOUT_CLASSIFICATION	2.2696143482451585E-5	TEST
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999998359072173	WITHOUT_CLASSIFICATION	1.640927827307244E-7	TEST
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.994636600223986	WITHOUT_CLASSIFICATION	0.0053633997760139185	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999937053917458	WITHOUT_CLASSIFICATION	6.294608254159272E-6	TEST
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9999735682973959	WITHOUT_CLASSIFICATION	2.643170260405752E-5	TEST
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999881100490098	WITHOUT_CLASSIFICATION	1.188995099017842E-5	TEST
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999898734522601	WITHOUT_CLASSIFICATION	1.0126547739895914E-5	TEST
// id must always be even	WITHOUT_CLASSIFICATION	0.9999903045042562	WITHOUT_CLASSIFICATION	9.695495743863633E-6	TEST
// with block pass	WITHOUT_CLASSIFICATION	0.9999390420323263	WITHOUT_CLASSIFICATION	6.095796767367978E-5	TEST
// no block	WITHOUT_CLASSIFICATION	0.9999980663003963	WITHOUT_CLASSIFICATION	1.9336996036393165E-6	TEST
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999148105515043	WITHOUT_CLASSIFICATION	8.518944849570025E-5	TEST
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.999617078083744	WITHOUT_CLASSIFICATION	3.829219162559772E-4	TEST
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999591731053963	WITHOUT_CLASSIFICATION	4.082689460374898E-5	TEST
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999635545043987	WITHOUT_CLASSIFICATION	3.644549560143431E-5	TEST
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999835033474381	WITHOUT_CLASSIFICATION	1.6496652561875788E-5	TEST
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999955570165499	WITHOUT_CLASSIFICATION	4.4429834501089915E-6	TEST
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999869702721945	WITHOUT_CLASSIFICATION	1.3029727805444274E-5	TEST
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999965795230872	WITHOUT_CLASSIFICATION	3.420476912736058E-6	TEST
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9998503119410947	WITHOUT_CLASSIFICATION	1.496880589051962E-4	TEST
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999879617611885	WITHOUT_CLASSIFICATION	1.203823881135225E-5	TEST
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999818577455922	WITHOUT_CLASSIFICATION	1.8142254407687066E-5	TEST
// Lastline	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9998922725992342	WITHOUT_CLASSIFICATION	1.0772740076588849E-4	TEST
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999986928460434	WITHOUT_CLASSIFICATION	1.3071539566248028E-6	TEST
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999979638572122	WITHOUT_CLASSIFICATION	2.036142787743818E-6	TEST
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999966523717699	WITHOUT_CLASSIFICATION	3.3476282302082173E-6	TEST
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999934438886913	WITHOUT_CLASSIFICATION	6.556111308652093E-6	TEST
// silently ignore	WITHOUT_CLASSIFICATION	0.9999959186167175	WITHOUT_CLASSIFICATION	4.0813832824630345E-6	TEST
// used by compiler	WITHOUT_CLASSIFICATION	0.9999960943802525	WITHOUT_CLASSIFICATION	3.905619747511857E-6	TEST
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999987671742889	WITHOUT_CLASSIFICATION	1.2328257110798916E-6	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999712746727221	WITHOUT_CLASSIFICATION	2.8725327277894483E-5	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999630316572103	WITHOUT_CLASSIFICATION	3.6968342789589E-5	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999932620579928	WITHOUT_CLASSIFICATION	6.737942007210436E-6	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999479446641532	WITHOUT_CLASSIFICATION	5.2055335846901385E-5	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999904002360657	WITHOUT_CLASSIFICATION	9.59976393442649E-6	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999863077747728	WITHOUT_CLASSIFICATION	1.3692225227194244E-5	TEST
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999974800397835	WITHOUT_CLASSIFICATION	2.5199602164385527E-6	TEST
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999976572571986	WITHOUT_CLASSIFICATION	2.342742801343403E-6	TEST
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999991672944955	WITHOUT_CLASSIFICATION	8.327055046108872E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999997476566247	WITHOUT_CLASSIFICATION	2.5234337539025376E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999997476566247	WITHOUT_CLASSIFICATION	2.5234337539025376E-7	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999966523658799	WITHOUT_CLASSIFICATION	3.347634120097996E-6	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999966523658799	WITHOUT_CLASSIFICATION	3.347634120097996E-6	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999966523658799	WITHOUT_CLASSIFICATION	3.347634120097996E-6	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999939167677123	WITHOUT_CLASSIFICATION	6.083232287711505E-6	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999939167677123	WITHOUT_CLASSIFICATION	6.083232287711505E-6	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.999984823780728	WITHOUT_CLASSIFICATION	1.5176219272134497E-5	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.999984823780728	WITHOUT_CLASSIFICATION	1.5176219272134497E-5	TEST
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9994414992747097	WITHOUT_CLASSIFICATION	5.585007252903144E-4	TEST
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999358827225157	WITHOUT_CLASSIFICATION	6.411727748427381E-5	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.9999962229884992	WITHOUT_CLASSIFICATION	3.777011500803395E-6	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.9999962229884992	WITHOUT_CLASSIFICATION	3.777011500803395E-6	TEST
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.999965268263171	WITHOUT_CLASSIFICATION	3.473173682897232E-5	TEST
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999799780036274	WITHOUT_CLASSIFICATION	2.0021996372635873E-5	TEST
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999730814467721	WITHOUT_CLASSIFICATION	2.6918553227932986E-5	TEST
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999945370640944	WITHOUT_CLASSIFICATION	5.4629359056031255E-6	TEST
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999971983408011	WITHOUT_CLASSIFICATION	2.8016591988872156E-6	TEST
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999906319206793	WITHOUT_CLASSIFICATION	9.368079320661417E-6	TEST
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999871178380769	WITHOUT_CLASSIFICATION	1.288216192302551E-5	TEST
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999879963487178	WITHOUT_CLASSIFICATION	1.2003651282161778E-5	TEST
// caller	WITHOUT_CLASSIFICATION	0.9999590960152556	WITHOUT_CLASSIFICATION	4.090398474451446E-5	TEST
// calltype // block	WITHOUT_CLASSIFICATION	0.999995175848985	WITHOUT_CLASSIFICATION	4.824151015048419E-6	TEST
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999991789803601	WITHOUT_CLASSIFICATION	8.21019639930326E-7	TEST
// load arity for check	WITHOUT_CLASSIFICATION	0.999988498484933	WITHOUT_CLASSIFICATION	1.1501515066955338E-5	TEST
// throw	WITHOUT_CLASSIFICATION	0.9999671178543788	WITHOUT_CLASSIFICATION	3.288214562125996E-5	TEST
// load arity for error	WITHOUT_CLASSIFICATION	0.9999906091883098	WITHOUT_CLASSIFICATION	9.39081169008616E-6	TEST
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999883758076222	WITHOUT_CLASSIFICATION	1.1624192377647008E-5	TEST
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.999863171643052	WITHOUT_CLASSIFICATION	1.3682835694783742E-4	TEST
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9998935255140005	WITHOUT_CLASSIFICATION	1.064744859996419E-4	TEST
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999879124343676	WITHOUT_CLASSIFICATION	1.208756563234081E-5	TEST
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999879124343676	WITHOUT_CLASSIFICATION	1.208756563234081E-5	TEST
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9996743258963415	WITHOUT_CLASSIFICATION	3.256741036584599E-4	TEST
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999776853530864	WITHOUT_CLASSIFICATION	2.231464691361012E-5	TEST
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999590298383748	WITHOUT_CLASSIFICATION	4.0970161625131704E-5	TEST
// load the encoding	WITHOUT_CLASSIFICATION	0.9999982568176302	WITHOUT_CLASSIFICATION	1.7431823697593163E-6	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999737667563341	WITHOUT_CLASSIFICATION	2.623324366589215E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999737667563341	WITHOUT_CLASSIFICATION	2.623324366589215E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999737667563341	WITHOUT_CLASSIFICATION	2.623324366589215E-5	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999712686130807	WITHOUT_CLASSIFICATION	2.873138691929875E-5	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999712686130807	WITHOUT_CLASSIFICATION	2.873138691929875E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999712686130807	WITHOUT_CLASSIFICATION	2.873138691929875E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999712686130807	WITHOUT_CLASSIFICATION	2.873138691929875E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999712686130807	WITHOUT_CLASSIFICATION	2.873138691929875E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999716227145341	WITHOUT_CLASSIFICATION	2.8377285465976188E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999716227145341	WITHOUT_CLASSIFICATION	2.8377285465976188E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999716227145341	WITHOUT_CLASSIFICATION	2.8377285465976188E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999716227145341	WITHOUT_CLASSIFICATION	2.8377285465976188E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999716227145341	WITHOUT_CLASSIFICATION	2.8377285465976188E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999716227145341	WITHOUT_CLASSIFICATION	2.8377285465976188E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999716227145341	WITHOUT_CLASSIFICATION	2.8377285465976188E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999716227145341	WITHOUT_CLASSIFICATION	2.8377285465976188E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999716227145341	WITHOUT_CLASSIFICATION	2.8377285465976188E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999716227145341	WITHOUT_CLASSIFICATION	2.8377285465976188E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999716227145341	WITHOUT_CLASSIFICATION	2.8377285465976188E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999716227145341	WITHOUT_CLASSIFICATION	2.8377285465976188E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999716227145341	WITHOUT_CLASSIFICATION	2.8377285465976188E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999716227145341	WITHOUT_CLASSIFICATION	2.8377285465976188E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999716227145341	WITHOUT_CLASSIFICATION	2.8377285465976188E-5	TEST
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999982822337594	WITHOUT_CLASSIFICATION	1.7177662404771595E-6	TEST
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999879124343676	WITHOUT_CLASSIFICATION	1.208756563234081E-5	TEST
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999712246413114	WITHOUT_CLASSIFICATION	2.8775358688507252E-5	TEST
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999993251180879	WITHOUT_CLASSIFICATION	6.74881912116326E-7	TEST
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999712246413114	WITHOUT_CLASSIFICATION	2.8775358688507252E-5	TEST
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999970367967514	WITHOUT_CLASSIFICATION	2.963203248642638E-6	TEST
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999934453637834	WITHOUT_CLASSIFICATION	6.554636216547123E-6	TEST
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999855087874021	WITHOUT_CLASSIFICATION	1.4491212597891901E-5	TEST
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999645724777327	WITHOUT_CLASSIFICATION	3.5427522267336506E-5	TEST
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9999534530075983	WITHOUT_CLASSIFICATION	4.654699240167289E-5	TEST
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999987828042597	WITHOUT_CLASSIFICATION	1.2171957402781086E-6	TEST
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999938968424436	WITHOUT_CLASSIFICATION	6.103157556399057E-6	TEST
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999986697245052	WITHOUT_CLASSIFICATION	1.3302754947777675E-6	TEST
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999913569935176	WITHOUT_CLASSIFICATION	8.643006482429014E-6	TEST
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.999409149979833	WITHOUT_CLASSIFICATION	5.908500201670342E-4	TEST
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999111892454312	WITHOUT_CLASSIFICATION	8.881075456886372E-5	TEST
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999977810206493	WITHOUT_CLASSIFICATION	2.2189793506044966E-6	TEST
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999993062041335	WITHOUT_CLASSIFICATION	6.937958666777392E-7	TEST
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999996984167504	WITHOUT_CLASSIFICATION	3.015832495893528E-7	TEST
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9996328750515887	WITHOUT_CLASSIFICATION	3.6712494841130666E-4	TEST
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999883934247137	WITHOUT_CLASSIFICATION	1.1606575286421885E-5	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999974048437789	WITHOUT_CLASSIFICATION	2.5951562211410306E-6	TEST
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9996883437856149	WITHOUT_CLASSIFICATION	3.1165621438500573E-4	TEST
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999842027125003	WITHOUT_CLASSIFICATION	1.579728749965028E-5	TEST
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999983701970382	WITHOUT_CLASSIFICATION	1.6298029617664438E-6	TEST
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999997869117655	WITHOUT_CLASSIFICATION	2.1308823438769194E-7	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999916910430088	WITHOUT_CLASSIFICATION	8.308956991191174E-6	TEST
// extension extensions	WITHOUT_CLASSIFICATION	0.9999883550090624	WITHOUT_CLASSIFICATION	1.1644990937577585E-5	TEST
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999807921500062	WITHOUT_CLASSIFICATION	1.9207849993789666E-5	TEST
// try all extensions	WITHOUT_CLASSIFICATION	0.9999921127772853	WITHOUT_CLASSIFICATION	7.887222714661696E-6	TEST
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999844048241755	WITHOUT_CLASSIFICATION	1.5595175824499527E-5	TEST
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999951136103071	WITHOUT_CLASSIFICATION	4.886389692937221E-6	TEST
// try only literal search	WITHOUT_CLASSIFICATION	0.9999885186111415	WITHOUT_CLASSIFICATION	1.1481388858596472E-5	TEST
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999966675664642	WITHOUT_CLASSIFICATION	3.33243353593695E-6	TEST
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.999988378598189	WITHOUT_CLASSIFICATION	1.1621401811013843E-5	TEST
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999990471291242	WITHOUT_CLASSIFICATION	9.528708758921593E-7	TEST
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999778689202489	WITHOUT_CLASSIFICATION	2.213107975107334E-5	TEST
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999997303614908	WITHOUT_CLASSIFICATION	2.6963850918460185E-7	TEST
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999977658984461	WITHOUT_CLASSIFICATION	2.234101553895977E-6	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999907723263045	WITHOUT_CLASSIFICATION	9.227673695514278E-6	TEST
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999951435440976	WITHOUT_CLASSIFICATION	4.856455902461191E-6	TEST
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999970381884461	WITHOUT_CLASSIFICATION	2.9618115538668595E-6	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999333947600663	WITHOUT_CLASSIFICATION	6.660523993376317E-5	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999333947600663	WITHOUT_CLASSIFICATION	6.660523993376317E-5	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999731376914642	WITHOUT_CLASSIFICATION	2.6862308535738704E-5	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999731376914642	WITHOUT_CLASSIFICATION	2.6862308535738704E-5	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999599865975691	WITHOUT_CLASSIFICATION	4.0013402430842723E-5	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999599865975691	WITHOUT_CLASSIFICATION	4.0013402430842723E-5	TEST
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999788693155316	WITHOUT_CLASSIFICATION	2.1130684468318222E-5	TEST
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999754154978727	WITHOUT_CLASSIFICATION	2.4584502127369744E-5	TEST
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.999884441059413	WITHOUT_CLASSIFICATION	1.1555894058701856E-4	TEST
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999880980340133	WITHOUT_CLASSIFICATION	1.1901965986757969E-5	TEST
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999954314379076	WITHOUT_CLASSIFICATION	4.568562092413726E-6	TEST
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9989623534835759	WITHOUT_CLASSIFICATION	0.0010376465164241603	TEST
// signed short, native	WITHOUT_CLASSIFICATION	0.999988366411751	WITHOUT_CLASSIFICATION	1.1633588248854987E-5	TEST
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999991499467359	WITHOUT_CLASSIFICATION	8.500532641192602E-7	TEST
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9997818769948151	WITHOUT_CLASSIFICATION	2.1812300518492183E-4	TEST
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9997367480597634	WITHOUT_CLASSIFICATION	2.632519402365559E-4	TEST
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999285273336217	WITHOUT_CLASSIFICATION	7.147266637832386E-5	TEST
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.999996997239571	WITHOUT_CLASSIFICATION	3.0027604290162234E-6	TEST
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999996443907804	WITHOUT_CLASSIFICATION	3.55609219666799E-7	TEST
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999997379109371	WITHOUT_CLASSIFICATION	2.6208906290615487E-7	TEST
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9998907955207351	WITHOUT_CLASSIFICATION	1.0920447926491152E-4	TEST
//            write('S');	WITHOUT_CLASSIFICATION	0.9999870089285358	WITHOUT_CLASSIFICATION	1.2991071464195552E-5	TEST
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999989978109164	WITHOUT_CLASSIFICATION	1.0021890835368702E-6	TEST
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999948655597658	WITHOUT_CLASSIFICATION	5.1344402342512575E-6	TEST
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999696685796943	WITHOUT_CLASSIFICATION	3.0331420305674872E-5	TEST
// w_symbol	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// w_unique	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999672446292545	WITHOUT_CLASSIFICATION	3.275537074558222E-5	TEST
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999950861557309	WITHOUT_CLASSIFICATION	4.9138442690776024E-6	TEST
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999836649298877	WITHOUT_CLASSIFICATION	1.633507011225434E-5	TEST
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999363002249054	WITHOUT_CLASSIFICATION	6.369977509452975E-5	TEST
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999935828336431	WITHOUT_CLASSIFICATION	6.417166356871287E-6	TEST
// sic	WITHOUT_CLASSIFICATION	0.99995779764608	WITHOUT_CLASSIFICATION	4.220235392014826E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999797034095422	WITHOUT_CLASSIFICATION	2.0296590457694E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999797034095422	WITHOUT_CLASSIFICATION	2.0296590457694E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999797034095422	WITHOUT_CLASSIFICATION	2.0296590457694E-5	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999493481895	WITHOUT_CLASSIFICATION	5.065181053264077E-8	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999493481895	WITHOUT_CLASSIFICATION	5.065181053264077E-8	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999937053917458	WITHOUT_CLASSIFICATION	6.294608254159272E-6	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999937053917458	WITHOUT_CLASSIFICATION	6.294608254159272E-6	TEST
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999996102092139	WITHOUT_CLASSIFICATION	3.8979078602899536E-7	TEST
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9999877055942406	WITHOUT_CLASSIFICATION	1.2294405759376417E-5	TEST
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999883690355721	WITHOUT_CLASSIFICATION	1.1630964427835013E-5	TEST
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999881092291505	WITHOUT_CLASSIFICATION	1.1890770849583522E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999797034095422	WITHOUT_CLASSIFICATION	2.0296590457694E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999797034095422	WITHOUT_CLASSIFICATION	2.0296590457694E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999797034095422	WITHOUT_CLASSIFICATION	2.0296590457694E-5	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999493481895	WITHOUT_CLASSIFICATION	5.065181053264077E-8	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999493481895	WITHOUT_CLASSIFICATION	5.065181053264077E-8	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999493481895	WITHOUT_CLASSIFICATION	5.065181053264077E-8	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999937053917458	WITHOUT_CLASSIFICATION	6.294608254159272E-6	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999937053917458	WITHOUT_CLASSIFICATION	6.294608254159272E-6	TEST
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999876139092397	WITHOUT_CLASSIFICATION	1.2386090760298435E-5	TEST
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999988923695818	WITHOUT_CLASSIFICATION	1.1076304181809949E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999937959349796	WITHOUT_CLASSIFICATION	6.20406502036606E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999937959349796	WITHOUT_CLASSIFICATION	6.20406502036606E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999937959349796	WITHOUT_CLASSIFICATION	6.20406502036606E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999937959349796	WITHOUT_CLASSIFICATION	6.20406502036606E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999937959349796	WITHOUT_CLASSIFICATION	6.20406502036606E-6	TEST
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999888162424486	WITHOUT_CLASSIFICATION	1.1183757551365248E-5	TEST
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9999603397872026	WITHOUT_CLASSIFICATION	3.9660212797427957E-5	TEST
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999953176783943	WITHOUT_CLASSIFICATION	4.682321605653998E-6	TEST
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999951798829602	WITHOUT_CLASSIFICATION	4.820117039921709E-6	TEST
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999710652907544	WITHOUT_CLASSIFICATION	2.8934709245608374E-5	TEST
// not enough bytes	WITHOUT_CLASSIFICATION	0.9999783165415799	WITHOUT_CLASSIFICATION	2.168345842007829E-5	TEST
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999969396737832	WITHOUT_CLASSIFICATION	3.0603262167703066E-6	TEST
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999977239473259	WITHOUT_CLASSIFICATION	2.276052674013364E-6	TEST
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999897896906161	WITHOUT_CLASSIFICATION	1.0210309383899971E-5	TEST
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999863486143123	WITHOUT_CLASSIFICATION	1.3651385687607999E-5	TEST
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9998984564900952	WITHOUT_CLASSIFICATION	1.0154350990478891E-4	TEST
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999513325865668	WITHOUT_CLASSIFICATION	4.866741343334995E-5	TEST
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999880070964039	WITHOUT_CLASSIFICATION	1.1992903596121619E-5	TEST
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999137783067158	WITHOUT_CLASSIFICATION	8.62216932842419E-5	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999259723696817	WITHOUT_CLASSIFICATION	7.402763031822288E-5	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999259723696817	WITHOUT_CLASSIFICATION	7.402763031822288E-5	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999259723696817	WITHOUT_CLASSIFICATION	7.402763031822288E-5	TEST
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9957609593706602	WITHOUT_CLASSIFICATION	0.004239040629339793	TEST
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9957553439930826	WITHOUT_CLASSIFICATION	0.004244656006917346	TEST
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999992760571732	WITHOUT_CLASSIFICATION	7.239428267647181E-7	TEST
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999566988750601	WITHOUT_CLASSIFICATION	4.3301124939942673E-5	TEST
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999675852843314	WITHOUT_CLASSIFICATION	3.241471566865038E-5	TEST
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.999967585885525	WITHOUT_CLASSIFICATION	3.241411447497042E-5	TEST
// single precision, native	WITHOUT_CLASSIFICATION	0.9999863521961787	WITHOUT_CLASSIFICATION	1.3647803821330215E-5	TEST
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999675104469936	WITHOUT_CLASSIFICATION	3.2489553006430884E-5	TEST
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999772642173093	WITHOUT_CLASSIFICATION	2.273578269068055E-5	TEST
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999772646389925	WITHOUT_CLASSIFICATION	2.2735361007476488E-5	TEST
// double precision, native	WITHOUT_CLASSIFICATION	0.9999904274414679	WITHOUT_CLASSIFICATION	9.572558531980503E-6	TEST
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999883932094386	WITHOUT_CLASSIFICATION	1.1606790561311224E-5	TEST
// signed char	WITHOUT_CLASSIFICATION	0.9999953597435731	WITHOUT_CLASSIFICATION	4.640256426932365E-6	TEST
// unsigned char	WITHOUT_CLASSIFICATION	0.9999953607901365	WITHOUT_CLASSIFICATION	4.639209863549028E-6	TEST
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999879767558668	WITHOUT_CLASSIFICATION	1.202324413317009E-5	TEST
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999951086481494	WITHOUT_CLASSIFICATION	4.891351850580574E-6	TEST
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999884731885583	WITHOUT_CLASSIFICATION	1.1526811441654478E-5	TEST
// int, native	WITHOUT_CLASSIFICATION	0.9999951511503282	WITHOUT_CLASSIFICATION	4.848849671716533E-6	TEST
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999713062341808	WITHOUT_CLASSIFICATION	2.8693765819151093E-5	TEST
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999794747749776	WITHOUT_CLASSIFICATION	2.0525225022445173E-5	TEST
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999951525423298	WITHOUT_CLASSIFICATION	4.847457670131921E-6	TEST
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9999679920547873	WITHOUT_CLASSIFICATION	3.200794521272216E-5	TEST
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999879270441058	WITHOUT_CLASSIFICATION	1.2072955894112644E-5	TEST
// obtain a	WITHOUT_CLASSIFICATION	0.9999975792460979	WITHOUT_CLASSIFICATION	2.4207539021110787E-6	TEST
// obtain b	WITHOUT_CLASSIFICATION	0.9999951480835677	WITHOUT_CLASSIFICATION	4.8519164323681506E-6	TEST
// obtain c	WITHOUT_CLASSIFICATION	0.9999956150382237	WITHOUT_CLASSIFICATION	4.3849617763966255E-6	TEST
// obtain d	WITHOUT_CLASSIFICATION	0.9999950865089888	WITHOUT_CLASSIFICATION	4.913491011163068E-6	TEST
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999592477756256	WITHOUT_CLASSIFICATION	4.0752224374363645E-5	TEST
/* 1 */	WITHOUT_CLASSIFICATION	0.999924706237467	WITHOUT_CLASSIFICATION	7.529376253304319E-5	TEST
/* 2 */	WITHOUT_CLASSIFICATION	0.9999301661109702	WITHOUT_CLASSIFICATION	6.983388902983073E-5	TEST
/* 3 */	WITHOUT_CLASSIFICATION	0.9997937130160842	WITHOUT_CLASSIFICATION	2.0628698391584178E-4	TEST
/* 4 */	WITHOUT_CLASSIFICATION	0.9999329605584284	WITHOUT_CLASSIFICATION	6.703944157155481E-5	TEST
/* 5 */	WITHOUT_CLASSIFICATION	0.9999168265657272	WITHOUT_CLASSIFICATION	8.317343427269582E-5	TEST
/* 6 */	WITHOUT_CLASSIFICATION	0.999920681731354	WITHOUT_CLASSIFICATION	7.931826864606576E-5	TEST
/* 7 */	WITHOUT_CLASSIFICATION	0.999915242995309	WITHOUT_CLASSIFICATION	8.475700469104676E-5	TEST
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999900185482331	WITHOUT_CLASSIFICATION	9.981451766903487E-6	TEST
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999844708597573	WITHOUT_CLASSIFICATION	1.552914024274723E-5	TEST
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999970905034613	WITHOUT_CLASSIFICATION	2.909496538723417E-6	TEST
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.8938883462520906	TEST	0.10611165374790946	WITHOUT_CLASSIFICATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999944896771249	WITHOUT_CLASSIFICATION	5.510322875033177E-6	TEST
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999975727783399	WITHOUT_CLASSIFICATION	2.427221660102806E-6	TEST
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.999985556826736	WITHOUT_CLASSIFICATION	1.444317326392923E-5	TEST
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.999984881064804	WITHOUT_CLASSIFICATION	1.5118935195901412E-5	TEST
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999158885981135	WITHOUT_CLASSIFICATION	8.41114018864321E-5	TEST
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9998772341455355	WITHOUT_CLASSIFICATION	1.2276585446440637E-4	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9997436770693979	WITHOUT_CLASSIFICATION	2.56322930602065E-4	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9997436770693979	WITHOUT_CLASSIFICATION	2.56322930602065E-4	TEST
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.999484422088468	WITHOUT_CLASSIFICATION	5.155779115319568E-4	TEST
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.999997695495147	WITHOUT_CLASSIFICATION	2.3045048529275125E-6	TEST
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9998768118908371	WITHOUT_CLASSIFICATION	1.2318810916291827E-4	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9905288461516071	WITHOUT_CLASSIFICATION	0.009471153848392887	TEST
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9997361040346441	WITHOUT_CLASSIFICATION	2.6389596535596617E-4	TEST
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9998685368307154	WITHOUT_CLASSIFICATION	1.3146316928470554E-4	TEST
// are we recursing?	WITHOUT_CLASSIFICATION	0.9999968865165902	WITHOUT_CLASSIFICATION	3.1134834097516145E-6	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999919225380791	WITHOUT_CLASSIFICATION	8.077461920899799E-6	TEST
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999975940023367	WITHOUT_CLASSIFICATION	2.4059976633250404E-6	TEST
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999953709667344	WITHOUT_CLASSIFICATION	4.629033265573779E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999987047120048	WITHOUT_CLASSIFICATION	1.295287995155408E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999987047120048	WITHOUT_CLASSIFICATION	1.295287995155408E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999987047120048	WITHOUT_CLASSIFICATION	1.295287995155408E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999987047120048	WITHOUT_CLASSIFICATION	1.295287995155408E-6	TEST
// try both	WITHOUT_CLASSIFICATION	0.9999959675658767	WITHOUT_CLASSIFICATION	4.032434123233612E-6	TEST
// just unix	WITHOUT_CLASSIFICATION	0.9999976416831935	WITHOUT_CLASSIFICATION	2.3583168064355665E-6	TEST
// just windows	WITHOUT_CLASSIFICATION	0.9999985826857277	WITHOUT_CLASSIFICATION	1.4173142722595276E-6	TEST
// neither	WITHOUT_CLASSIFICATION	0.9999579008170988	WITHOUT_CLASSIFICATION	4.209918290118874E-5	TEST
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999165233455211	WITHOUT_CLASSIFICATION	8.347665447903683E-5	TEST
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999593527809968	WITHOUT_CLASSIFICATION	4.064721900326264E-5	TEST
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.999994620382894	WITHOUT_CLASSIFICATION	5.379617105919737E-6	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999984574835824	WITHOUT_CLASSIFICATION	1.5425164175720113E-6	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999984574835824	WITHOUT_CLASSIFICATION	1.5425164175720113E-6	TEST
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999979717184938	WITHOUT_CLASSIFICATION	2.0282815062769766E-6	TEST
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999774800706567	WITHOUT_CLASSIFICATION	2.2519929343312808E-5	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9995192227049541	WITHOUT_CLASSIFICATION	4.80777295045969E-4	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999979776017659	WITHOUT_CLASSIFICATION	2.022398234131985E-6	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999979776017659	WITHOUT_CLASSIFICATION	2.022398234131985E-6	TEST
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999968255109676	WITHOUT_CLASSIFICATION	3.1744890324031062E-6	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999989867432392	WITHOUT_CLASSIFICATION	1.013256760846281E-6	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999989867432392	WITHOUT_CLASSIFICATION	1.013256760846281E-6	TEST
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9993382521885025	WITHOUT_CLASSIFICATION	6.617478114975651E-4	TEST
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999974950977304	WITHOUT_CLASSIFICATION	2.5049022695322903E-6	TEST
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999998146226855	WITHOUT_CLASSIFICATION	1.8537731450364908E-7	TEST
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9996757845432085	WITHOUT_CLASSIFICATION	3.242154567915363E-4	TEST
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999913389437778	WITHOUT_CLASSIFICATION	8.661056222254864E-6	TEST
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999998272251868	WITHOUT_CLASSIFICATION	1.7277481311725712E-7	TEST
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9999561340789389	WITHOUT_CLASSIFICATION	4.3865921061009276E-5	TEST
//sequential	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999976835321353	WITHOUT_CLASSIFICATION	2.3164678647125432E-6	TEST
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999901874381696	WITHOUT_CLASSIFICATION	9.812561830310597E-6	TEST
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999905278598186	WITHOUT_CLASSIFICATION	9.472140181514512E-6	TEST
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.8216917333252772	WITHOUT_CLASSIFICATION	0.1783082666747227	TEST
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.8091845340968352	WITHOUT_CLASSIFICATION	0.1908154659031648	TEST
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999979068051867	WITHOUT_CLASSIFICATION	2.093194813196549E-6	TEST
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999931781610434	WITHOUT_CLASSIFICATION	6.821838956625056E-6	TEST
// Args	WITHOUT_CLASSIFICATION	0.9999578324280782	WITHOUT_CLASSIFICATION	4.21675719217073E-5	TEST
// static methods only	WITHOUT_CLASSIFICATION	0.9999933366163499	WITHOUT_CLASSIFICATION	6.663383650093692E-6	TEST
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9997468139901935	WITHOUT_CLASSIFICATION	2.5318600980648643E-4	TEST
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999971666748854	WITHOUT_CLASSIFICATION	2.8333251146097984E-6	TEST
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999770168437128	WITHOUT_CLASSIFICATION	2.298315628717001E-5	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999989393999729	WITHOUT_CLASSIFICATION	1.0606000270856004E-6	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999984943170349	WITHOUT_CLASSIFICATION	1.5056829650363229E-6	TEST
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999080002074963	WITHOUT_CLASSIFICATION	9.199979250369612E-5	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999972032689997	WITHOUT_CLASSIFICATION	2.7967310002451128E-6	TEST
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9998048754237142	WITHOUT_CLASSIFICATION	1.9512457628567776E-4	TEST
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999993761978049	WITHOUT_CLASSIFICATION	6.238021951842064E-7	TEST
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999280993378501	WITHOUT_CLASSIFICATION	7.190066214992838E-5	TEST
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999996846557268	WITHOUT_CLASSIFICATION	3.153442731825004E-7	TEST
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999704687984907	WITHOUT_CLASSIFICATION	2.9531201509354768E-5	TEST
// ..	WITHOUT_CLASSIFICATION	0.9999581028114007	WITHOUT_CLASSIFICATION	4.189718859925027E-5	TEST
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999278999411897	WITHOUT_CLASSIFICATION	7.210005881030963E-5	TEST
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9998185150382554	WITHOUT_CLASSIFICATION	1.8148496174466287E-4	TEST
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999836340530137	WITHOUT_CLASSIFICATION	1.6365946986351444E-5	TEST
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999996218131327	WITHOUT_CLASSIFICATION	3.781868672509877E-7	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9998524214584041	WITHOUT_CLASSIFICATION	1.4757854159586214E-4	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999961190616213	WITHOUT_CLASSIFICATION	3.8809383785705864E-6	TEST
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9997468139901935	WITHOUT_CLASSIFICATION	2.5318600980648643E-4	TEST
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9997487921993076	WITHOUT_CLASSIFICATION	2.5120780069247964E-4	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9998524214584041	WITHOUT_CLASSIFICATION	1.4757854159586214E-4	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999961190616213	WITHOUT_CLASSIFICATION	3.8809383785705864E-6	TEST
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999579017002649	WITHOUT_CLASSIFICATION	4.2098299735050144E-5	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9998949899124354	WITHOUT_CLASSIFICATION	1.0501008756461741E-4	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9998949899124354	WITHOUT_CLASSIFICATION	1.0501008756461741E-4	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999317264526653	WITHOUT_CLASSIFICATION	6.82735473347615E-5	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999959302614747	WITHOUT_CLASSIFICATION	4.06973852530646E-6	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999940861259683	WITHOUT_CLASSIFICATION	5.913874031733405E-6	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999980607904616	WITHOUT_CLASSIFICATION	1.9392095383705516E-6	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9998578022926239	WITHOUT_CLASSIFICATION	1.4219770737608823E-4	TEST
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999596721195385	WITHOUT_CLASSIFICATION	4.032788046151438E-5	TEST
// '.' is printed	WITHOUT_CLASSIFICATION	0.99997884659103	WITHOUT_CLASSIFICATION	2.1153408969993168E-5	TEST
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999816022464967	WITHOUT_CLASSIFICATION	1.839775350336932E-5	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999663926510444	WITHOUT_CLASSIFICATION	3.360734895563028E-5	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9999579088110465	WITHOUT_CLASSIFICATION	4.209118895351673E-5	TEST
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999498247578951	WITHOUT_CLASSIFICATION	5.0175242104959595E-5	TEST
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999690419765622	WITHOUT_CLASSIFICATION	3.0958023437652E-5	TEST
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999943529965049	WITHOUT_CLASSIFICATION	5.647003495210754E-6	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999820228162715	WITHOUT_CLASSIFICATION	1.797718372852587E-5	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999820228162715	WITHOUT_CLASSIFICATION	1.797718372852587E-5	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999553527976229	WITHOUT_CLASSIFICATION	4.464720237707079E-5	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999553527976229	WITHOUT_CLASSIFICATION	4.464720237707079E-5	TEST
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999647011160755	WITHOUT_CLASSIFICATION	3.5298883924420854E-5	TEST
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999969353555999	WITHOUT_CLASSIFICATION	3.0646444000763257E-6	TEST
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999566782921216	WITHOUT_CLASSIFICATION	4.332170787832741E-5	TEST
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9997468139901935	WITHOUT_CLASSIFICATION	2.5318600980648643E-4	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999940861259683	WITHOUT_CLASSIFICATION	5.913874031733405E-6	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999980607904616	WITHOUT_CLASSIFICATION	1.9392095383705516E-6	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999663926510444	WITHOUT_CLASSIFICATION	3.360734895563028E-5	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9999579088110465	WITHOUT_CLASSIFICATION	4.209118895351673E-5	TEST
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999929375655222	WITHOUT_CLASSIFICATION	7.062434477854525E-6	TEST
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999956643522399	WITHOUT_CLASSIFICATION	4.335647760119907E-6	TEST
// \v	WITHOUT_CLASSIFICATION	0.99995779764608	WITHOUT_CLASSIFICATION	4.220235392014826E-5	TEST
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999952044897504	WITHOUT_CLASSIFICATION	4.795510249477423E-6	TEST
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999841764216487	WITHOUT_CLASSIFICATION	1.5823578351215505E-5	TEST
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999294999018387	WITHOUT_CLASSIFICATION	7.05000981613097E-5	TEST
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999043859559951	WITHOUT_CLASSIFICATION	9.561404400497302E-5	TEST
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999950937395861	WITHOUT_CLASSIFICATION	4.906260414021574E-6	TEST
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.999997710714201	WITHOUT_CLASSIFICATION	2.289285799054247E-6	TEST
// negative values	WITHOUT_CLASSIFICATION	0.9999969254835424	WITHOUT_CLASSIFICATION	3.0745164575593817E-6	TEST
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999981298720263	WITHOUT_CLASSIFICATION	1.8701279736736104E-6	TEST
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9974636073600309	WITHOUT_CLASSIFICATION	0.002536392639969126	TEST
// no such luck...	WITHOUT_CLASSIFICATION	0.9999980299614908	WITHOUT_CLASSIFICATION	1.9700385092263975E-6	TEST
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9998771253058102	WITHOUT_CLASSIFICATION	1.228746941897113E-4	TEST
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999977010245528	WITHOUT_CLASSIFICATION	2.2989754472622206E-6	TEST
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.999993945301918	WITHOUT_CLASSIFICATION	6.054698081965564E-6	TEST
/* constant vector a */	WITHOUT_CLASSIFICATION	0.999988234951307	WITHOUT_CLASSIFICATION	1.1765048692983202E-5	TEST
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.999946076240589	WITHOUT_CLASSIFICATION	5.3923759411144576E-5	TEST
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.99997787571208	WITHOUT_CLASSIFICATION	2.2124287920055023E-5	TEST
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999879126910738	WITHOUT_CLASSIFICATION	1.2087308926275679E-5	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999879126910738	WITHOUT_CLASSIFICATION	1.2087308926275679E-5	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999879126910738	WITHOUT_CLASSIFICATION	1.2087308926275679E-5	TEST
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9997975307482458	WITHOUT_CLASSIFICATION	2.0246925175426662E-4	TEST
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999898479608623	WITHOUT_CLASSIFICATION	1.015203913765423E-5	TEST
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999999144831674	WITHOUT_CLASSIFICATION	8.551683259412E-8	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9997475116983439	WITHOUT_CLASSIFICATION	2.524883016561328E-4	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9997475116983439	WITHOUT_CLASSIFICATION	2.524883016561328E-4	TEST
// \v	WITHOUT_CLASSIFICATION	0.99995779764608	WITHOUT_CLASSIFICATION	4.220235392014826E-5	TEST
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9996743258963415	WITHOUT_CLASSIFICATION	3.256741036584599E-4	TEST
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9997468139901935	WITHOUT_CLASSIFICATION	2.5318600980648643E-4	TEST
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9997468139901935	WITHOUT_CLASSIFICATION	2.5318600980648643E-4	TEST
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9997468139901935	WITHOUT_CLASSIFICATION	2.5318600980648643E-4	TEST
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9997468139901935	WITHOUT_CLASSIFICATION	2.5318600980648643E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9997468139901935	WITHOUT_CLASSIFICATION	2.5318600980648643E-4	TEST
// no number	WITHOUT_CLASSIFICATION	0.9999979834133115	WITHOUT_CLASSIFICATION	2.016586688627189E-6	TEST
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999960252354092	WITHOUT_CLASSIFICATION	3.974764590847375E-6	TEST
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9988892505781907	WITHOUT_CLASSIFICATION	0.0011107494218093096	TEST
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999418930989007	WITHOUT_CLASSIFICATION	5.810690109922193E-5	TEST
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999988213497053	WITHOUT_CLASSIFICATION	1.1786502946266288E-6	TEST
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.999998769231748	WITHOUT_CLASSIFICATION	1.2307682519618837E-6	TEST
// goto next bucket	WITHOUT_CLASSIFICATION	0.999995772067051	WITHOUT_CLASSIFICATION	4.227932948946362E-6	TEST
// we reached the end	WITHOUT_CLASSIFICATION	0.9999963392615886	WITHOUT_CLASSIFICATION	3.660738411363285E-6	TEST
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999670892458745	WITHOUT_CLASSIFICATION	3.2910754125412685E-5	TEST
// states	WITHOUT_CLASSIFICATION	0.9999610582335867	WITHOUT_CLASSIFICATION	3.89417664131674E-5	TEST
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999709483049691	WITHOUT_CLASSIFICATION	2.9051695030879868E-5	TEST
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999932339333468	WITHOUT_CLASSIFICATION	6.766066653180758E-6	TEST
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999998841140529	WITHOUT_CLASSIFICATION	1.1588594706531957E-7	TEST
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999872140731151	WITHOUT_CLASSIFICATION	1.2785926884786819E-5	TEST
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999940171078163	WITHOUT_CLASSIFICATION	5.9828921836492694E-6	TEST
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999697078856673	WITHOUT_CLASSIFICATION	3.029211433270236E-5	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999909466543195	WITHOUT_CLASSIFICATION	9.053345680479136E-6	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999780610260408	WITHOUT_CLASSIFICATION	2.1938973959189095E-5	TEST
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999934967647749	WITHOUT_CLASSIFICATION	6.503235225072605E-6	TEST
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999902642704646	WITHOUT_CLASSIFICATION	9.735729535407978E-6	TEST
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999829534997	WITHOUT_CLASSIFICATION	1.704650022776648E-8	TEST
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999985864360111	WITHOUT_CLASSIFICATION	1.413563988863703E-6	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999575122998774	WITHOUT_CLASSIFICATION	4.248770012258118E-5	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999575122998774	WITHOUT_CLASSIFICATION	4.248770012258118E-5	TEST
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999866690478046	WITHOUT_CLASSIFICATION	1.3330952195418941E-5	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999961259847834	WITHOUT_CLASSIFICATION	3.874015216562738E-6	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999961259847834	WITHOUT_CLASSIFICATION	3.874015216562738E-6	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999982780789267	WITHOUT_CLASSIFICATION	1.721921073307788E-6	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999982780789267	WITHOUT_CLASSIFICATION	1.721921073307788E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999929810696104	WITHOUT_CLASSIFICATION	7.018930389540455E-6	TEST
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999898720814709	WITHOUT_CLASSIFICATION	1.012791852904649E-5	TEST
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999993099991769	WITHOUT_CLASSIFICATION	6.900008231626926E-7	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999963867396234	WITHOUT_CLASSIFICATION	3.613260376610845E-6	TEST
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.999993314397034	WITHOUT_CLASSIFICATION	6.685602965912564E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999585996777045	WITHOUT_CLASSIFICATION	4.140032229551619E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999585996777045	WITHOUT_CLASSIFICATION	4.140032229551619E-5	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999909466543195	WITHOUT_CLASSIFICATION	9.053345680479136E-6	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999909466543195	WITHOUT_CLASSIFICATION	9.053345680479136E-6	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999909466543195	WITHOUT_CLASSIFICATION	9.053345680479136E-6	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999780610260408	WITHOUT_CLASSIFICATION	2.1938973959189095E-5	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999575122998774	WITHOUT_CLASSIFICATION	4.248770012258118E-5	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999575122998774	WITHOUT_CLASSIFICATION	4.248770012258118E-5	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999575122998774	WITHOUT_CLASSIFICATION	4.248770012258118E-5	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999929810696104	WITHOUT_CLASSIFICATION	7.018930389540455E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999929810696104	WITHOUT_CLASSIFICATION	7.018930389540455E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999929810696104	WITHOUT_CLASSIFICATION	7.018930389540455E-6	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999963867396234	WITHOUT_CLASSIFICATION	3.613260376610845E-6	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999963867396234	WITHOUT_CLASSIFICATION	3.613260376610845E-6	TEST
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999940617023414	WITHOUT_CLASSIFICATION	5.9382976586055355E-6	TEST
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999874739525197	WITHOUT_CLASSIFICATION	1.2526047480290377E-5	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999897512816663	WITHOUT_CLASSIFICATION	1.0248718333657415E-5	TEST
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9994495284590111	WITHOUT_CLASSIFICATION	5.504715409888616E-4	TEST
// no digits, error	WITHOUT_CLASSIFICATION	0.9999991914253513	WITHOUT_CLASSIFICATION	8.085746486304472E-7	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999947137684001	WITHOUT_CLASSIFICATION	5.286231599866741E-6	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999947137684001	WITHOUT_CLASSIFICATION	5.286231599866741E-6	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999775669871581	WITHOUT_CLASSIFICATION	2.243301284184346E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.999935839881586	WITHOUT_CLASSIFICATION	6.416011841403378E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.999935839881586	WITHOUT_CLASSIFICATION	6.416011841403378E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.999935839881586	WITHOUT_CLASSIFICATION	6.416011841403378E-5	TEST
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999957456462198	WITHOUT_CLASSIFICATION	4.254353780138043E-6	TEST
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999870418339609	WITHOUT_CLASSIFICATION	1.2958166039024837E-5	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999780610260408	WITHOUT_CLASSIFICATION	2.1938973959189095E-5	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999929810696104	WITHOUT_CLASSIFICATION	7.018930389540455E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999929810696104	WITHOUT_CLASSIFICATION	7.018930389540455E-6	TEST
//switch	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.999935839881586	WITHOUT_CLASSIFICATION	6.416011841403378E-5	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999775669871581	WITHOUT_CLASSIFICATION	2.243301284184346E-5	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999642311787662	WITHOUT_CLASSIFICATION	3.576882123380365E-5	TEST
// switch //while	WITHOUT_CLASSIFICATION	0.9999953848981457	WITHOUT_CLASSIFICATION	4.615101854292051E-6	TEST
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999997868097564	WITHOUT_CLASSIFICATION	2.1319024350098725E-7	TEST
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999979013759099	WITHOUT_CLASSIFICATION	2.098624089975016E-6	TEST
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999879124343676	WITHOUT_CLASSIFICATION	1.208756563234081E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999170411641449	WITHOUT_CLASSIFICATION	8.295883585498827E-5	TEST
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.999993164783807	WITHOUT_CLASSIFICATION	6.835216193024819E-6	TEST
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999879124343676	WITHOUT_CLASSIFICATION	1.208756563234081E-5	TEST
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999765827038063	WITHOUT_CLASSIFICATION	2.3417296193758207E-5	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999980751498385	WITHOUT_CLASSIFICATION	1.92485016152797E-6	TEST
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999667875461451	WITHOUT_CLASSIFICATION	3.3212453854873E-5	TEST
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9998980044352984	WITHOUT_CLASSIFICATION	1.0199556470148532E-4	TEST
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999641242598087	WITHOUT_CLASSIFICATION	3.587574019132858E-5	TEST
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999905302442605	WITHOUT_CLASSIFICATION	9.469755739408635E-6	TEST
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999983689313662	WITHOUT_CLASSIFICATION	1.6310686338543445E-6	TEST
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999982719835907	WITHOUT_CLASSIFICATION	1.7280164092649101E-6	TEST
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9997437272080073	WITHOUT_CLASSIFICATION	2.5627279199277663E-4	TEST
/*package-protected*/	WITHOUT_CLASSIFICATION	0.999863171643052	WITHOUT_CLASSIFICATION	1.3682835694783742E-4	TEST
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999969061573712	WITHOUT_CLASSIFICATION	3.0938426288529884E-6	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.999946328348249	WITHOUT_CLASSIFICATION	5.36716517510008E-5	TEST
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999429340888681	WITHOUT_CLASSIFICATION	5.706591113173546E-5	TEST
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999944147462283	WITHOUT_CLASSIFICATION	5.585253771607085E-6	TEST
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999983634636692	WITHOUT_CLASSIFICATION	1.6365363307208701E-6	TEST
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999806956845023	WITHOUT_CLASSIFICATION	1.9304315497605224E-5	TEST
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9996333294571347	WITHOUT_CLASSIFICATION	3.6667054286536305E-4	TEST
// unread back	WITHOUT_CLASSIFICATION	0.9999953299374494	WITHOUT_CLASSIFICATION	4.670062550541787E-6	TEST
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999981180066737	WITHOUT_CLASSIFICATION	1.8819933263909054E-6	TEST
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.999996961955603	WITHOUT_CLASSIFICATION	3.03804439714058E-6	TEST
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999958896992686	WITHOUT_CLASSIFICATION	4.110300731488085E-6	TEST
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999994320555046	WITHOUT_CLASSIFICATION	5.679444954177327E-7	TEST
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999998299094351	WITHOUT_CLASSIFICATION	1.700905648474667E-7	TEST
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999890213844428	WITHOUT_CLASSIFICATION	1.0978615557102292E-5	TEST
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999978466342764	WITHOUT_CLASSIFICATION	2.1533657235593313E-6	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999642311787662	WITHOUT_CLASSIFICATION	3.576882123380365E-5	TEST
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999497757168917	WITHOUT_CLASSIFICATION	5.0224283108283E-5	TEST
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999866114783182	WITHOUT_CLASSIFICATION	1.3388521681787983E-5	TEST
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999560478252518	WITHOUT_CLASSIFICATION	4.3952174748110915E-5	TEST
// silence	WITHOUT_CLASSIFICATION	0.99995779764608	WITHOUT_CLASSIFICATION	4.220235392014826E-5	TEST
// silence	WITHOUT_CLASSIFICATION	0.99995779764608	WITHOUT_CLASSIFICATION	4.220235392014826E-5	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.9999966156993512	WITHOUT_CLASSIFICATION	3.384300648842161E-6	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.9999966156993512	WITHOUT_CLASSIFICATION	3.384300648842161E-6	TEST
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999739388843778	WITHOUT_CLASSIFICATION	2.6061115622193274E-5	TEST
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999392208888912	WITHOUT_CLASSIFICATION	6.077911110879271E-5	TEST
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999935187626552	WITHOUT_CLASSIFICATION	6.481237344703745E-6	TEST
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999731050432668	WITHOUT_CLASSIFICATION	2.6894956733226128E-5	TEST
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999774345588867	WITHOUT_CLASSIFICATION	2.2565441113409365E-5	TEST
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999941164291624	WITHOUT_CLASSIFICATION	5.883570837677561E-6	TEST
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999880759276444	WITHOUT_CLASSIFICATION	1.1924072355639482E-5	TEST
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.999998793297768	WITHOUT_CLASSIFICATION	1.2067022319435792E-6	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999998566657272	WITHOUT_CLASSIFICATION	1.433342728207851E-7	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999805216428063	WITHOUT_CLASSIFICATION	1.9478357193692043E-5	TEST
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.999989336486692	WITHOUT_CLASSIFICATION	1.06635133079803E-5	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999915001158283	WITHOUT_CLASSIFICATION	8.499884171738237E-6	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999915001158283	WITHOUT_CLASSIFICATION	8.499884171738237E-6	TEST
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.999972999821238	WITHOUT_CLASSIFICATION	2.7000178762084104E-5	TEST
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999946477579208	WITHOUT_CLASSIFICATION	5.352242079140417E-6	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999790001970801	WITHOUT_CLASSIFICATION	2.0999802919927797E-5	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999790001970801	WITHOUT_CLASSIFICATION	2.0999802919927797E-5	TEST
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999974546431462	WITHOUT_CLASSIFICATION	2.5453568539265646E-6	TEST
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.999996910193108	WITHOUT_CLASSIFICATION	3.089806892025204E-6	TEST
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.999985080610079	WITHOUT_CLASSIFICATION	1.4919389921113676E-5	TEST
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999730921503001	WITHOUT_CLASSIFICATION	2.6907849699892612E-5	TEST
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999879457682073	WITHOUT_CLASSIFICATION	1.2054231792873522E-5	TEST
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999660169283192	WITHOUT_CLASSIFICATION	3.398307168084396E-5	TEST
// save the ungot	WITHOUT_CLASSIFICATION	0.9999981375012803	WITHOUT_CLASSIFICATION	1.8624987197714182E-6	TEST
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999969875113603	WITHOUT_CLASSIFICATION	3.0124886396212046E-6	TEST
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999686924331481	WITHOUT_CLASSIFICATION	3.1307566851915955E-5	TEST
// flush first	WITHOUT_CLASSIFICATION	0.9999967917937715	WITHOUT_CLASSIFICATION	3.208206228467226E-6	TEST
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999722714605497	WITHOUT_CLASSIFICATION	2.7728539450282343E-5	TEST
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999470806623858	WITHOUT_CLASSIFICATION	5.291933761421703E-5	TEST
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999901951016402	WITHOUT_CLASSIFICATION	9.804898359737382E-6	TEST
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.999952911352429	WITHOUT_CLASSIFICATION	4.708864757097603E-5	TEST
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.99999769466668	WITHOUT_CLASSIFICATION	2.3053333200257747E-6	TEST
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999460210703399	WITHOUT_CLASSIFICATION	5.3978929660168784E-5	TEST
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999934281748133	WITHOUT_CLASSIFICATION	6.571825186741557E-6	TEST
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999938812815613	WITHOUT_CLASSIFICATION	6.1187184386053776E-6	TEST
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999456429126865	WITHOUT_CLASSIFICATION	5.4357087313530824E-5	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999734805027077	WITHOUT_CLASSIFICATION	2.651949729217022E-5	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8586343120068207	WITHOUT_CLASSIFICATION	0.1413656879931792	TEST
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999667365397317	WITHOUT_CLASSIFICATION	3.326346026822704E-5	TEST
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999701208268552	WITHOUT_CLASSIFICATION	2.987917314471968E-5	TEST
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999849067959945	WITHOUT_CLASSIFICATION	1.5093204005456418E-5	TEST
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999884689171257	WITHOUT_CLASSIFICATION	1.1531082874292978E-5	TEST
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999931613431541	WITHOUT_CLASSIFICATION	6.838656845931533E-6	TEST
// else leave it null	WITHOUT_CLASSIFICATION	0.999985382370873	WITHOUT_CLASSIFICATION	1.4617629126965888E-5	TEST
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999876628173009	WITHOUT_CLASSIFICATION	1.2337182699132589E-5	TEST
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999891678211433	WITHOUT_CLASSIFICATION	1.0832178856646486E-5	TEST
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.999987059550353	WITHOUT_CLASSIFICATION	1.2940449646901523E-5	TEST
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999962811424754	WITHOUT_CLASSIFICATION	3.7188575245982036E-6	TEST
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999961221447797	WITHOUT_CLASSIFICATION	3.8778552202948195E-6	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999994129420102	WITHOUT_CLASSIFICATION	5.870579897992198E-7	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999994129420102	WITHOUT_CLASSIFICATION	5.870579897992198E-7	TEST
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999970762019242	WITHOUT_CLASSIFICATION	2.9237980757275003E-6	TEST
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999999223885513	WITHOUT_CLASSIFICATION	7.761144869982942E-8	TEST
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9997138684820057	WITHOUT_CLASSIFICATION	2.861315179942721E-4	TEST
// Init	WITHOUT_CLASSIFICATION	0.9999580974641947	WITHOUT_CLASSIFICATION	4.190253580529389E-5	TEST
// Block	WITHOUT_CLASSIFICATION	0.9999578695703115	WITHOUT_CLASSIFICATION	4.2130429688471935E-5	TEST
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999958309970306	WITHOUT_CLASSIFICATION	4.169002969400886E-6	TEST
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9993043276410429	WITHOUT_CLASSIFICATION	6.956723589571157E-4	TEST
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9993043276410429	WITHOUT_CLASSIFICATION	6.956723589571157E-4	TEST
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999075441332055	WITHOUT_CLASSIFICATION	9.24558667945089E-5	TEST
// ok	WITHOUT_CLASSIFICATION	0.9999635151225494	WITHOUT_CLASSIFICATION	3.648487745064867E-5	TEST
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999990748304647	WITHOUT_CLASSIFICATION	9.251695352658159E-7	TEST
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9999334910316059	WITHOUT_CLASSIFICATION	6.650896839406842E-5	TEST
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.999937536436764	WITHOUT_CLASSIFICATION	6.246356323595642E-5	TEST
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9996909672283271	WITHOUT_CLASSIFICATION	3.0903277167294786E-4	TEST
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999989473812588	WITHOUT_CLASSIFICATION	1.0526187410931505E-6	TEST
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999950177622613	WITHOUT_CLASSIFICATION	4.9822377387330585E-6	TEST
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9998721233425008	WITHOUT_CLASSIFICATION	1.2787665749931876E-4	TEST
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999861267914291	WITHOUT_CLASSIFICATION	1.3873208570906007E-5	TEST
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9999978712047187	WITHOUT_CLASSIFICATION	2.1287952812161564E-6	TEST
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.99998497865306	WITHOUT_CLASSIFICATION	1.5021346939934639E-5	TEST
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999950944392779	WITHOUT_CLASSIFICATION	4.90556072211834E-6	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999977880078644	WITHOUT_CLASSIFICATION	2.2119921355230904E-6	TEST
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999797153003518	WITHOUT_CLASSIFICATION	2.0284699648213762E-5	TEST
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999757700986991	WITHOUT_CLASSIFICATION	2.4229901300916992E-5	TEST
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999705799340596	WITHOUT_CLASSIFICATION	2.9420065940459967E-5	TEST
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.999989922093065	WITHOUT_CLASSIFICATION	1.0077906934897913E-5	TEST
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999880327788525	WITHOUT_CLASSIFICATION	1.1967221147461345E-5	TEST
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999690738163328	WITHOUT_CLASSIFICATION	3.09261836671515E-5	TEST
// void methods should work	WITHOUT_CLASSIFICATION	0.9999879536605073	WITHOUT_CLASSIFICATION	1.2046339492707412E-5	TEST
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999885548140678	WITHOUT_CLASSIFICATION	1.1445185932212767E-5	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9998793572790725	WITHOUT_CLASSIFICATION	1.2064272092756145E-4	TEST
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.99993791742221	WITHOUT_CLASSIFICATION	6.208257778996615E-5	TEST
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999964806162519	WITHOUT_CLASSIFICATION	3.519383748125931E-6	TEST
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999712246413114	WITHOUT_CLASSIFICATION	2.8775358688507252E-5	TEST
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999954554993745	WITHOUT_CLASSIFICATION	4.544500625556262E-6	TEST
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9996709467502493	WITHOUT_CLASSIFICATION	3.290532497507472E-4	TEST
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9998639059272678	WITHOUT_CLASSIFICATION	1.3609407273208572E-4	TEST
// value equality	WITHOUT_CLASSIFICATION	0.9999952795886655	WITHOUT_CLASSIFICATION	4.720411334452809E-6	TEST
// identity equality	WITHOUT_CLASSIFICATION	0.9999955123974338	WITHOUT_CLASSIFICATION	4.487602566228596E-6	TEST
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999713139096671	WITHOUT_CLASSIFICATION	2.8686090332877252E-5	TEST
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999950903842505	WITHOUT_CLASSIFICATION	4.909615749592092E-6	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999879124343676	WITHOUT_CLASSIFICATION	1.208756563234081E-5	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999879124343676	WITHOUT_CLASSIFICATION	1.208756563234081E-5	TEST
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999879124343676	WITHOUT_CLASSIFICATION	1.208756563234081E-5	TEST
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999616362981147	WITHOUT_CLASSIFICATION	3.836370188527846E-5	TEST
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999950864897119	WITHOUT_CLASSIFICATION	4.913510288164347E-6	TEST
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999815964670058	WITHOUT_CLASSIFICATION	1.840353299422722E-5	TEST
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999541216741489	WITHOUT_CLASSIFICATION	4.5878325851102594E-5	TEST
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999921640588889	WITHOUT_CLASSIFICATION	7.835941111165435E-6	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999995326428338	WITHOUT_CLASSIFICATION	4.6735716610919987E-7	TEST
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999997238799629	WITHOUT_CLASSIFICATION	2.761200370284561E-7	TEST
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.999995125981543	WITHOUT_CLASSIFICATION	4.874018456962965E-6	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999999695836514	WITHOUT_CLASSIFICATION	3.041634853016462E-8	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9996743258963415	WITHOUT_CLASSIFICATION	3.256741036584599E-4	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999863998659777	WITHOUT_CLASSIFICATION	1.3600134022310589E-5	TEST
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999708927699015	WITHOUT_CLASSIFICATION	2.9107230098518036E-5	TEST
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999976988631046	WITHOUT_CLASSIFICATION	2.301136895303683E-6	TEST
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999973407598033	WITHOUT_CLASSIFICATION	2.659240196604768E-6	TEST
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9999336582297251	WITHOUT_CLASSIFICATION	6.63417702749576E-5	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999999133836696	WITHOUT_CLASSIFICATION	8.661633047561812E-8	TEST
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.999863171643052	WITHOUT_CLASSIFICATION	1.3682835694783742E-4	TEST
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999964822984526	WITHOUT_CLASSIFICATION	3.5177015473335946E-6	TEST
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.998039578002702	WITHOUT_CLASSIFICATION	0.001960421997297926	TEST
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.999984579769592	WITHOUT_CLASSIFICATION	1.5420230408109978E-5	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999395667447207	WITHOUT_CLASSIFICATION	6.0433255279189655E-5	TEST
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999998996466112	WITHOUT_CLASSIFICATION	1.0035338882693291E-7	TEST
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999997547027897	WITHOUT_CLASSIFICATION	2.452972102840014E-7	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999295208890374	WITHOUT_CLASSIFICATION	7.047911096251458E-5	TEST
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999875242588744	WITHOUT_CLASSIFICATION	1.2475741125508799E-5	TEST
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9998145882780483	WITHOUT_CLASSIFICATION	1.8541172195166167E-4	TEST
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999961827442234	WITHOUT_CLASSIFICATION	3.817255776536734E-6	TEST
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999898885444571	WITHOUT_CLASSIFICATION	1.0111455542852938E-5	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999886352365517	WITHOUT_CLASSIFICATION	1.1364763448264519E-5	TEST
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999898885444571	WITHOUT_CLASSIFICATION	1.0111455542852938E-5	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999975237937218	WITHOUT_CLASSIFICATION	2.47620627824866E-6	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999886352365517	WITHOUT_CLASSIFICATION	1.1364763448264519E-5	TEST
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9998483502244548	WITHOUT_CLASSIFICATION	1.5164977554525062E-4	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999972032689997	WITHOUT_CLASSIFICATION	2.7967310002451128E-6	TEST
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9999900748614533	WITHOUT_CLASSIFICATION	9.925138546752617E-6	TEST
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9673750612998928	WITHOUT_CLASSIFICATION	0.03262493870010719	TEST
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999959721278951	WITHOUT_CLASSIFICATION	4.027872104750353E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999937959349796	WITHOUT_CLASSIFICATION	6.20406502036606E-6	TEST
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999726234953411	WITHOUT_CLASSIFICATION	2.7376504658895446E-5	TEST
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9994477481577608	WITHOUT_CLASSIFICATION	5.522518422392007E-4	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999959302614747	WITHOUT_CLASSIFICATION	4.06973852530646E-6	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999734805027077	WITHOUT_CLASSIFICATION	2.651949729217022E-5	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999897512816663	WITHOUT_CLASSIFICATION	1.0248718333657415E-5	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999984677483846	WITHOUT_CLASSIFICATION	1.5322516153126302E-6	TEST
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999978365230405	WITHOUT_CLASSIFICATION	2.1634769594401218E-6	TEST
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999962512477515	WITHOUT_CLASSIFICATION	3.7487522485389243E-6	TEST
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999712746727221	WITHOUT_CLASSIFICATION	2.8725327277894483E-5	TEST
// switch // while	WITHOUT_CLASSIFICATION	0.9999956452838735	WITHOUT_CLASSIFICATION	4.354716126450822E-6	TEST
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9997895684966163	WITHOUT_CLASSIFICATION	2.1043150338377237E-4	TEST
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999727480309374	WITHOUT_CLASSIFICATION	2.7251969062576295E-5	TEST
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999996168981893	WITHOUT_CLASSIFICATION	3.8310181066950075E-7	TEST
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999923610862939	WITHOUT_CLASSIFICATION	7.638913706165405E-6	TEST
// expected	WITHOUT_CLASSIFICATION	0.9999956919443724	WITHOUT_CLASSIFICATION	4.308055627573687E-6	TEST
// Do nothing	WITHOUT_CLASSIFICATION	0.9999963861685152	WITHOUT_CLASSIFICATION	3.613831484885913E-6	TEST
// constructor	WITHOUT_CLASSIFICATION	0.9999958160906639	WITHOUT_CLASSIFICATION	4.18390933609601E-6	TEST
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.999944772749396	WITHOUT_CLASSIFICATION	5.522725060408962E-5	TEST
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999857712052674	WITHOUT_CLASSIFICATION	1.4228794732474504E-5	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9998938013672587	WITHOUT_CLASSIFICATION	1.0619863274137447E-4	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999569863062344	WITHOUT_CLASSIFICATION	4.301369376562399E-5	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999989232737401	WITHOUT_CLASSIFICATION	1.0767262599493514E-6	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999989232737401	WITHOUT_CLASSIFICATION	1.0767262599493514E-6	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999960589809817	WITHOUT_CLASSIFICATION	3.941019018348465E-6	TEST
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999981517896723	WITHOUT_CLASSIFICATION	1.8482103276939544E-6	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999987018383492	WITHOUT_CLASSIFICATION	1.2981616508750381E-6	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9986004502237262	WITHOUT_CLASSIFICATION	0.0013995497762737466	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9986004502237262	WITHOUT_CLASSIFICATION	0.0013995497762737466	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9986004502237262	WITHOUT_CLASSIFICATION	0.0013995497762737466	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9986004502237262	WITHOUT_CLASSIFICATION	0.0013995497762737466	TEST
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999932254728965	WITHOUT_CLASSIFICATION	6.774527103511952E-6	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.999992060455048	WITHOUT_CLASSIFICATION	7.939544952115383E-6	TEST
// "else" body	WITHOUT_CLASSIFICATION	0.9999955186203549	WITHOUT_CLASSIFICATION	4.481379645128003E-6	TEST
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.99989642008679	WITHOUT_CLASSIFICATION	1.0357991320994205E-4	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999061171406843	WITHOUT_CLASSIFICATION	9.388285931565958E-5	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.999876568121972	WITHOUT_CLASSIFICATION	1.234318780279513E-4	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.999876568121972	WITHOUT_CLASSIFICATION	1.234318780279513E-4	TEST
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999991658405842	WITHOUT_CLASSIFICATION	8.341594158680344E-7	TEST
/* 10! */	WITHOUT_CLASSIFICATION	0.999912879859392	WITHOUT_CLASSIFICATION	8.712014060801242E-5	TEST
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999400850050909	WITHOUT_CLASSIFICATION	5.9914994909029804E-5	TEST
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9998948046564219	WITHOUT_CLASSIFICATION	1.0519534357804687E-4	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999619707901913	WITHOUT_CLASSIFICATION	3.802920980872099E-5	TEST
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999890335257563	WITHOUT_CLASSIFICATION	1.0966474243726862E-5	TEST
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999999745334457	WITHOUT_CLASSIFICATION	2.5466554360737253E-8	TEST
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.99988065102878	WITHOUT_CLASSIFICATION	1.1934897121999509E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999975237937218	WITHOUT_CLASSIFICATION	2.47620627824866E-6	TEST
// line 449	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 495	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999879124343676	WITHOUT_CLASSIFICATION	1.208756563234081E-5	TEST
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.99999951727829	WITHOUT_CLASSIFICATION	4.827217099362978E-7	TEST
/* 14! */	WITHOUT_CLASSIFICATION	0.999912879859392	WITHOUT_CLASSIFICATION	8.712014060801242E-5	TEST
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999699935284033	WITHOUT_CLASSIFICATION	3.000647159663844E-5	TEST
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999953095406782	WITHOUT_CLASSIFICATION	4.690459321749588E-6	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999966468899424	WITHOUT_CLASSIFICATION	3.353110057675137E-6	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999966468899424	WITHOUT_CLASSIFICATION	3.353110057675137E-6	TEST
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999400850050909	WITHOUT_CLASSIFICATION	5.991499490902986E-5	TEST
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999999314714039	WITHOUT_CLASSIFICATION	6.852859610912654E-8	TEST
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999902382781475	WITHOUT_CLASSIFICATION	9.761721852515736E-6	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999950833872524	WITHOUT_CLASSIFICATION	4.916612747511149E-6	TEST
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999969571024794	WITHOUT_CLASSIFICATION	3.0428975206336323E-6	TEST
/* 18! */	WITHOUT_CLASSIFICATION	0.999912879859392	WITHOUT_CLASSIFICATION	8.712014060801242E-5	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999218723653204	WITHOUT_CLASSIFICATION	7.812763467965174E-5	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999931004086133	WITHOUT_CLASSIFICATION	6.899591386733837E-6	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999931004086133	WITHOUT_CLASSIFICATION	6.899591386733837E-6	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999931004086133	WITHOUT_CLASSIFICATION	6.899591386733837E-6	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999931004086133	WITHOUT_CLASSIFICATION	6.899591386733837E-6	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999966075557116	WITHOUT_CLASSIFICATION	3.39244428832973E-6	TEST
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999999905427345	WITHOUT_CLASSIFICATION	9.457265460410954E-9	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999618252470277	WITHOUT_CLASSIFICATION	3.8174752972240817E-5	TEST
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999388359977127	WITHOUT_CLASSIFICATION	6.116400228734556E-5	TEST
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999948900438997	WITHOUT_CLASSIFICATION	5.109956100172154E-6	TEST
/* 22! */	WITHOUT_CLASSIFICATION	0.999912879859392	WITHOUT_CLASSIFICATION	8.712014060801242E-5	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999893192269884	WITHOUT_CLASSIFICATION	1.0680773011504466E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999662583889954	WITHOUT_CLASSIFICATION	3.3741611004651084E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999662583889954	WITHOUT_CLASSIFICATION	3.3741611004651084E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999662583889954	WITHOUT_CLASSIFICATION	3.3741611004651084E-5	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999023323129931	WITHOUT_CLASSIFICATION	9.766768700690186E-5	TEST
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999990610499884	WITHOUT_CLASSIFICATION	9.389500116036421E-7	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999853934636416	WITHOUT_CLASSIFICATION	1.4606536358422701E-5	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999853934636416	WITHOUT_CLASSIFICATION	1.4606536358422701E-5	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.99995779764608	WITHOUT_CLASSIFICATION	4.220235392014826E-5	TEST
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999998928789	WITHOUT_CLASSIFICATION	1.0712110983735446E-10	TEST
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999014462233352	WITHOUT_CLASSIFICATION	9.855377666473172E-5	TEST
// BASE64	WITHOUT_CLASSIFICATION	0.99995779764608	WITHOUT_CLASSIFICATION	4.220235392014826E-5	TEST
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999997138714898	WITHOUT_CLASSIFICATION	2.861285102763905E-7	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999982430587108	WITHOUT_CLASSIFICATION	1.7569412891618568E-6	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999987154483192	WITHOUT_CLASSIFICATION	1.2845516807844923E-6	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999987154483192	WITHOUT_CLASSIFICATION	1.2845516807844923E-6	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999828847343223	WITHOUT_CLASSIFICATION	1.7115265677637294E-5	TEST
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999997432008043	WITHOUT_CLASSIFICATION	2.567991956908733E-7	TEST
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999999287316718	WITHOUT_CLASSIFICATION	7.126832821153004E-8	TEST
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9998751992777185	WITHOUT_CLASSIFICATION	1.2480072228145873E-4	TEST
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9999099927330093	WITHOUT_CLASSIFICATION	9.000726699073606E-5	TEST
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999998246898287	WITHOUT_CLASSIFICATION	1.7531017135213448E-7	TEST
// carriage return	WITHOUT_CLASSIFICATION	0.999997377201305	WITHOUT_CLASSIFICATION	2.6227986950192168E-6	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999050092262571	WITHOUT_CLASSIFICATION	9.499077374289235E-5	TEST
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999790802839756	WITHOUT_CLASSIFICATION	2.0919716024387426E-5	TEST
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999976290935855	WITHOUT_CLASSIFICATION	2.3709064144609915E-6	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999937521295844	WITHOUT_CLASSIFICATION	6.247870415596819E-6	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999985704118721	WITHOUT_CLASSIFICATION	1.429588127874493E-6	TEST
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999954623841105	WITHOUT_CLASSIFICATION	4.5376158895418435E-6	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999970323206223	WITHOUT_CLASSIFICATION	2.967679377603767E-6	TEST
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999996817484511	WITHOUT_CLASSIFICATION	3.18251548824931E-7	TEST
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999998490569689	WITHOUT_CLASSIFICATION	1.5094303108751395E-7	TEST
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999935990957495	WITHOUT_CLASSIFICATION	6.400904250438334E-6	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999981507228337	WITHOUT_CLASSIFICATION	1.8492771662636434E-6	TEST
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999935559227983	WITHOUT_CLASSIFICATION	6.4440772017646264E-6	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999995394245471	WITHOUT_CLASSIFICATION	4.6057545288423403E-7	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.999993544825832	WITHOUT_CLASSIFICATION	6.455174167962212E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999657271352116	WITHOUT_CLASSIFICATION	3.427286478848105E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999657271352116	WITHOUT_CLASSIFICATION	3.427286478848105E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999657271352116	WITHOUT_CLASSIFICATION	3.427286478848105E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999657271352116	WITHOUT_CLASSIFICATION	3.427286478848105E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999657271352116	WITHOUT_CLASSIFICATION	3.427286478848105E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999657271352116	WITHOUT_CLASSIFICATION	3.427286478848105E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999657271352116	WITHOUT_CLASSIFICATION	3.427286478848105E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999657271352116	WITHOUT_CLASSIFICATION	3.427286478848105E-5	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999794134637671	WITHOUT_CLASSIFICATION	2.058653623300464E-5	TEST
/* fall through */	WITHOUT_CLASSIFICATION	0.9999918203554317	WITHOUT_CLASSIFICATION	8.179644568454857E-6	TEST
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9978976517014105	WITHOUT_CLASSIFICATION	0.0021023482985894184	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999680496589428	WITHOUT_CLASSIFICATION	3.195034105710524E-5	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999995326428338	WITHOUT_CLASSIFICATION	4.6735716610919987E-7	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999995326428338	WITHOUT_CLASSIFICATION	4.6735716610919987E-7	TEST
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999904014927752	WITHOUT_CLASSIFICATION	9.598507224763308E-6	TEST
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999992839463893	WITHOUT_CLASSIFICATION	7.160536107463523E-7	TEST
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999759124588954	WITHOUT_CLASSIFICATION	2.4087541104703228E-5	TEST
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999857105328006	WITHOUT_CLASSIFICATION	1.4289467199315054E-5	TEST
// get current context	WITHOUT_CLASSIFICATION	0.9999964063556049	WITHOUT_CLASSIFICATION	3.5936443951227977E-6	TEST
// octal constant	WITHOUT_CLASSIFICATION	0.9999952669221336	WITHOUT_CLASSIFICATION	4.7330778664399045E-6	TEST
// read	WITHOUT_CLASSIFICATION	0.9999616952472264	WITHOUT_CLASSIFICATION	3.830475277347366E-5	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.999967775355303	WITHOUT_CLASSIFICATION	3.222464469709272E-5	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9998985748265613	WITHOUT_CLASSIFICATION	1.0142517343873513E-4	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999925868154272	WITHOUT_CLASSIFICATION	7.413184572877259E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999925868154272	WITHOUT_CLASSIFICATION	7.413184572877259E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999925868154272	WITHOUT_CLASSIFICATION	7.413184572877259E-6	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999882756708871	WITHOUT_CLASSIFICATION	1.1724329113002777E-5	TEST
// at end	WITHOUT_CLASSIFICATION	0.999949749247744	WITHOUT_CLASSIFICATION	5.025075225596284E-5	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999380014966024	WITHOUT_CLASSIFICATION	6.199850339750635E-5	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999915121862419	WITHOUT_CLASSIFICATION	8.487813758160896E-6	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.999990429517906	WITHOUT_CLASSIFICATION	9.570482094136921E-6	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999979568825076	WITHOUT_CLASSIFICATION	2.0431174923932917E-6	TEST
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999961936114334	WITHOUT_CLASSIFICATION	3.8063885665613037E-6	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999254555643792	WITHOUT_CLASSIFICATION	7.454443562079166E-5	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999254555643792	WITHOUT_CLASSIFICATION	7.454443562079166E-5	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999962482595919	WITHOUT_CLASSIFICATION	3.7517404081473575E-6	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.99997651083538	WITHOUT_CLASSIFICATION	2.3489164620026684E-5	TEST
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999993721811913	WITHOUT_CLASSIFICATION	6.278188086937963E-7	TEST
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999918748748226	WITHOUT_CLASSIFICATION	8.125125177365021E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999969228445865	WITHOUT_CLASSIFICATION	3.077155413386421E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999969228445865	WITHOUT_CLASSIFICATION	3.077155413386421E-6	TEST
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999930334383283	WITHOUT_CLASSIFICATION	6.966561671738942E-6	TEST
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999826079784795	WITHOUT_CLASSIFICATION	1.7392021520464913E-5	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999665607635937	WITHOUT_CLASSIFICATION	3.343923640629423E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999872383103499	WITHOUT_CLASSIFICATION	1.2761689650192934E-5	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999931202581368	WITHOUT_CLASSIFICATION	6.879741863259998E-6	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999931202581368	WITHOUT_CLASSIFICATION	6.879741863259998E-6	TEST
// check arity	WITHOUT_CLASSIFICATION	0.999997548042015	WITHOUT_CLASSIFICATION	2.4519579849750396E-6	TEST
// check arity	WITHOUT_CLASSIFICATION	0.999997548042015	WITHOUT_CLASSIFICATION	2.4519579849750396E-6	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999991218475209	WITHOUT_CLASSIFICATION	8.781524790173743E-7	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999923297637124	WITHOUT_CLASSIFICATION	7.670236287625718E-6	TEST
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999794689648683	WITHOUT_CLASSIFICATION	2.0531035131761436E-5	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.99995779764608	WITHOUT_CLASSIFICATION	4.220235392014826E-5	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999750463167172	WITHOUT_CLASSIFICATION	2.495368328278691E-5	TEST
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.999997076935004	WITHOUT_CLASSIFICATION	2.923064996012031E-6	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999891506004576	WITHOUT_CLASSIFICATION	1.0849399542424662E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999585996777045	WITHOUT_CLASSIFICATION	4.140032229551619E-5	TEST
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999984105881371	WITHOUT_CLASSIFICATION	1.5894118629027997E-6	TEST
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.999999862662177	WITHOUT_CLASSIFICATION	1.373378230275177E-7	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999952645530751	WITHOUT_CLASSIFICATION	4.735446924896837E-6	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999966584731294	WITHOUT_CLASSIFICATION	3.3415268707012738E-6	TEST
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9995614377118094	WITHOUT_CLASSIFICATION	4.3856228819059376E-4	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999857760854018	WITHOUT_CLASSIFICATION	1.4223914598173693E-5	TEST
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999995818392122	WITHOUT_CLASSIFICATION	4.1816078783942794E-7	TEST
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999946894708412	WITHOUT_CLASSIFICATION	5.310529158750045E-6	TEST
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999695275665683	WITHOUT_CLASSIFICATION	3.0472433431740747E-5	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999982846936671	WITHOUT_CLASSIFICATION	1.7153063328669151E-6	TEST
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9997174413111455	WITHOUT_CLASSIFICATION	2.8255868885453307E-4	TEST
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999658249328489	WITHOUT_CLASSIFICATION	3.417506715116553E-5	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999984677483846	WITHOUT_CLASSIFICATION	1.5322516153126302E-6	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999932240867062	WITHOUT_CLASSIFICATION	6.7759132938200165E-6	TEST
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999964729776721	WITHOUT_CLASSIFICATION	3.5270223279622685E-6	TEST
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999953204414775	WITHOUT_CLASSIFICATION	4.67955852247955E-6	TEST
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999010626584913	WITHOUT_CLASSIFICATION	9.89373415086731E-5	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999911063361175	WITHOUT_CLASSIFICATION	8.893663882465153E-6	TEST
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999979932321523	WITHOUT_CLASSIFICATION	2.006767847649646E-6	TEST
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999839937440611	WITHOUT_CLASSIFICATION	1.600625593891377E-5	TEST
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999997378775187	WITHOUT_CLASSIFICATION	2.621224812737209E-7	TEST
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999936421390158	WITHOUT_CLASSIFICATION	6.35786098429858E-6	TEST
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999886840559649	WITHOUT_CLASSIFICATION	1.1315944035170056E-5	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999984208616228	WITHOUT_CLASSIFICATION	1.5791383771565739E-6	TEST
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999962388051935	WITHOUT_CLASSIFICATION	3.7611948065720226E-6	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999886334806249	WITHOUT_CLASSIFICATION	1.1366519375095509E-5	TEST
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999874904232107	WITHOUT_CLASSIFICATION	1.2509576789464716E-5	TEST
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.999986117846219	WITHOUT_CLASSIFICATION	1.3882153781039154E-5	TEST
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999848039853562	WITHOUT_CLASSIFICATION	1.519601464378852E-5	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999746345970475	WITHOUT_CLASSIFICATION	2.5365402952512457E-5	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999998124016977	WITHOUT_CLASSIFICATION	1.8759830231130366E-7	TEST
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999995290198177	WITHOUT_CLASSIFICATION	4.7098018230401375E-7	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999578727201766	WITHOUT_CLASSIFICATION	4.212727982351272E-5	TEST
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9998335932900737	WITHOUT_CLASSIFICATION	1.6640670992629838E-4	TEST
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999922363097116	WITHOUT_CLASSIFICATION	7.763690288435143E-6	TEST
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999955759804062	WITHOUT_CLASSIFICATION	4.42401959378442E-6	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999746267998522	WITHOUT_CLASSIFICATION	2.5373200147854723E-5	TEST
// specific arity	WITHOUT_CLASSIFICATION	0.9999965264115535	WITHOUT_CLASSIFICATION	3.4735884465462087E-6	TEST
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999977091967063	WITHOUT_CLASSIFICATION	2.2908032937458766E-6	TEST
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999800445837943	WITHOUT_CLASSIFICATION	1.995541620576934E-5	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999712746727221	WITHOUT_CLASSIFICATION	2.8725327277894483E-5	TEST
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.99996398843299	WITHOUT_CLASSIFICATION	3.6011567010012135E-5	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999884419135876	WITHOUT_CLASSIFICATION	1.1558086412462875E-5	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999884419135876	WITHOUT_CLASSIFICATION	1.1558086412462875E-5	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999573442470382	WITHOUT_CLASSIFICATION	4.265575296187031E-5	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999573442470382	WITHOUT_CLASSIFICATION	4.265575296187031E-5	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998968484880076	WITHOUT_CLASSIFICATION	1.031515119923476E-4	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998968484880076	WITHOUT_CLASSIFICATION	1.031515119923476E-4	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999901399885051	WITHOUT_CLASSIFICATION	9.860011494907589E-6	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999901399885051	WITHOUT_CLASSIFICATION	9.860011494907589E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999878339236	WITHOUT_CLASSIFICATION	1.216607639989184E-5	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999878339236	WITHOUT_CLASSIFICATION	1.216607639989184E-5	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999878339236	WITHOUT_CLASSIFICATION	1.216607639989184E-5	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999489437403422	WITHOUT_CLASSIFICATION	5.105625965789879E-5	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999908352987232	WITHOUT_CLASSIFICATION	9.164701276853044E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999908352987232	WITHOUT_CLASSIFICATION	9.164701276853044E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999908352987232	WITHOUT_CLASSIFICATION	9.164701276853044E-6	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999727340681958	WITHOUT_CLASSIFICATION	2.726593180418103E-5	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999727340681958	WITHOUT_CLASSIFICATION	2.726593180418103E-5	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999727340681958	WITHOUT_CLASSIFICATION	2.726593180418103E-5	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999712746727221	WITHOUT_CLASSIFICATION	2.8725327277894483E-5	TEST
// backspace	WITHOUT_CLASSIFICATION	0.9999950851893792	WITHOUT_CLASSIFICATION	4.914810620754166E-6	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
/* package-private */	WITHOUT_CLASSIFICATION	0.9999752111918598	WITHOUT_CLASSIFICATION	2.4788808140046307E-5	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999960378139643	WITHOUT_CLASSIFICATION	3.962186035724265E-6	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999960378139643	WITHOUT_CLASSIFICATION	3.962186035724265E-6	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.999990788529692	WITHOUT_CLASSIFICATION	9.211470307972922E-6	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999922450101312	WITHOUT_CLASSIFICATION	7.7549898687526E-6	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999922450101312	WITHOUT_CLASSIFICATION	7.7549898687526E-6	TEST
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.8275911598514468	WITHOUT_CLASSIFICATION	0.17240884014855312	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999630316572103	WITHOUT_CLASSIFICATION	3.6968342789589E-5	TEST
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999653960113848	WITHOUT_CLASSIFICATION	3.4603988615303554E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999867743825491	WITHOUT_CLASSIFICATION	1.3225617450879814E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999867743825491	WITHOUT_CLASSIFICATION	1.3225617450879814E-5	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999977309064517	WITHOUT_CLASSIFICATION	2.2690935482808523E-6	TEST
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9997341749647798	WITHOUT_CLASSIFICATION	2.6582503522014253E-4	TEST
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999578139340088	WITHOUT_CLASSIFICATION	4.2186065991112605E-5	TEST
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999944346249711	WITHOUT_CLASSIFICATION	5.5653750288416625E-6	TEST
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9996398732675019	WITHOUT_CLASSIFICATION	3.601267324981376E-4	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999867743825491	WITHOUT_CLASSIFICATION	1.3225617450879814E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999867743825491	WITHOUT_CLASSIFICATION	1.3225617450879814E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999867743825491	WITHOUT_CLASSIFICATION	1.3225617450879814E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999867743825491	WITHOUT_CLASSIFICATION	1.3225617450879814E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999867743825491	WITHOUT_CLASSIFICATION	1.3225617450879814E-5	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999918664162455	WITHOUT_CLASSIFICATION	8.133583754491917E-6	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999630101287083	WITHOUT_CLASSIFICATION	3.698987129177781E-5	TEST
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999996803982575	WITHOUT_CLASSIFICATION	3.196017425291119E-7	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.999970662643103	WITHOUT_CLASSIFICATION	2.9337356896968525E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999897842180074	WITHOUT_CLASSIFICATION	1.0215781992489829E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999897842180074	WITHOUT_CLASSIFICATION	1.0215781992489829E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999897842180074	WITHOUT_CLASSIFICATION	1.0215781992489829E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999897842180074	WITHOUT_CLASSIFICATION	1.0215781992489829E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999897842180074	WITHOUT_CLASSIFICATION	1.0215781992489829E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999897842180074	WITHOUT_CLASSIFICATION	1.0215781992489829E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999897842180074	WITHOUT_CLASSIFICATION	1.0215781992489829E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999897842180074	WITHOUT_CLASSIFICATION	1.0215781992489829E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999897842180074	WITHOUT_CLASSIFICATION	1.0215781992489829E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999897842180074	WITHOUT_CLASSIFICATION	1.0215781992489829E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999897842180074	WITHOUT_CLASSIFICATION	1.0215781992489829E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999897842180074	WITHOUT_CLASSIFICATION	1.0215781992489829E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999897842180074	WITHOUT_CLASSIFICATION	1.0215781992489829E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999897842180074	WITHOUT_CLASSIFICATION	1.0215781992489829E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999897842180074	WITHOUT_CLASSIFICATION	1.0215781992489829E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999897842180074	WITHOUT_CLASSIFICATION	1.0215781992489829E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999897842180074	WITHOUT_CLASSIFICATION	1.0215781992489829E-5	TEST
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999999316013304	WITHOUT_CLASSIFICATION	6.839866955185429E-8	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999897842180074	WITHOUT_CLASSIFICATION	1.0215781992489829E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999897842180074	WITHOUT_CLASSIFICATION	1.0215781992489829E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999897842180074	WITHOUT_CLASSIFICATION	1.0215781992489829E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999897842180074	WITHOUT_CLASSIFICATION	1.0215781992489829E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999897842180074	WITHOUT_CLASSIFICATION	1.0215781992489829E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999897842180074	WITHOUT_CLASSIFICATION	1.0215781992489829E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999897842180074	WITHOUT_CLASSIFICATION	1.0215781992489829E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999897842180074	WITHOUT_CLASSIFICATION	1.0215781992489829E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999897842180074	WITHOUT_CLASSIFICATION	1.0215781992489829E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999897842180074	WITHOUT_CLASSIFICATION	1.0215781992489829E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999897842180074	WITHOUT_CLASSIFICATION	1.0215781992489829E-5	TEST
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999953763763954	WITHOUT_CLASSIFICATION	4.623623604673018E-6	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9995558857780455	WITHOUT_CLASSIFICATION	4.441142219545027E-4	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999946531557321	WITHOUT_CLASSIFICATION	5.3468442678493165E-6	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999972624151531	WITHOUT_CLASSIFICATION	2.7375848468534252E-6	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999792322424262	WITHOUT_CLASSIFICATION	2.076775757373709E-5	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999395667447207	WITHOUT_CLASSIFICATION	6.0433255279189655E-5	TEST
// only public methods	WITHOUT_CLASSIFICATION	0.9999933081632447	WITHOUT_CLASSIFICATION	6.691836755233467E-6	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999755878654649	WITHOUT_CLASSIFICATION	2.4412134535065383E-5	TEST
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999996400166088	WITHOUT_CLASSIFICATION	3.59983391214411E-7	TEST
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9999997697496649	WITHOUT_CLASSIFICATION	2.302503352115633E-7	TEST
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999924561722964	WITHOUT_CLASSIFICATION	7.543827703701222E-6	TEST
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999999928909098	WITHOUT_CLASSIFICATION	7.109090266198062E-9	TEST
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999971603184316	WITHOUT_CLASSIFICATION	2.8396815685147637E-6	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999920276969805	WITHOUT_CLASSIFICATION	7.972303019511917E-6	TEST
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999760467854404	WITHOUT_CLASSIFICATION	2.3953214559591034E-5	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999888862556514	WITHOUT_CLASSIFICATION	1.1113744348648048E-5	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999999695836514	WITHOUT_CLASSIFICATION	3.041634853016462E-8	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998615242646972	WITHOUT_CLASSIFICATION	1.3847573530279266E-4	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998615242646972	WITHOUT_CLASSIFICATION	1.3847573530279266E-4	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998615242646972	WITHOUT_CLASSIFICATION	1.3847573530279266E-4	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998615242646972	WITHOUT_CLASSIFICATION	1.3847573530279266E-4	TEST
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999993433650611	WITHOUT_CLASSIFICATION	6.56634938903867E-7	TEST
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9998188276211419	WITHOUT_CLASSIFICATION	1.8117237885810573E-4	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999801604699545	WITHOUT_CLASSIFICATION	1.9839530045415143E-5	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999801604699545	WITHOUT_CLASSIFICATION	1.9839530045415143E-5	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999995406320399	WITHOUT_CLASSIFICATION	4.5936796012611884E-7	TEST
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999596782750767	WITHOUT_CLASSIFICATION	4.032172492327336E-5	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.999992148763723	WITHOUT_CLASSIFICATION	7.851236277056266E-6	TEST
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999936156109982	WITHOUT_CLASSIFICATION	6.38438900187607E-6	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999911581107469	WITHOUT_CLASSIFICATION	8.841889253117174E-6	TEST
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999714024444626	WITHOUT_CLASSIFICATION	2.859755553748135E-5	TEST
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999861177008442	WITHOUT_CLASSIFICATION	1.3882299155691989E-5	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999960515134665	WITHOUT_CLASSIFICATION	3.948486533472909E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999960515134665	WITHOUT_CLASSIFICATION	3.948486533472909E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999960515134665	WITHOUT_CLASSIFICATION	3.948486533472909E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999960515134665	WITHOUT_CLASSIFICATION	3.948486533472909E-6	TEST
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999966483024695	WITHOUT_CLASSIFICATION	3.351697530406301E-6	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999982006385159	WITHOUT_CLASSIFICATION	1.7993614840630685E-6	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999982006385159	WITHOUT_CLASSIFICATION	1.7993614840630685E-6	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999982006385159	WITHOUT_CLASSIFICATION	1.7993614840630685E-6	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999916477398212	WITHOUT_CLASSIFICATION	8.352260178903245E-6	TEST
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999781911653078	WITHOUT_CLASSIFICATION	2.1808834692167203E-5	TEST
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.999987868106653	WITHOUT_CLASSIFICATION	1.2131893346995316E-5	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9986004502237262	WITHOUT_CLASSIFICATION	0.0013995497762737466	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9986004502237262	WITHOUT_CLASSIFICATION	0.0013995497762737466	TEST
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999967205648317	WITHOUT_CLASSIFICATION	3.2794351683478663E-6	TEST
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999998784491794	WITHOUT_CLASSIFICATION	1.21550820569978E-7	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.9999943525559069	WITHOUT_CLASSIFICATION	5.647444093127788E-6	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.9999943525559069	WITHOUT_CLASSIFICATION	5.647444093127788E-6	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.999986252160453	WITHOUT_CLASSIFICATION	1.3747839547016826E-5	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.999986252160453	WITHOUT_CLASSIFICATION	1.3747839547016826E-5	TEST
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999542352453193	WITHOUT_CLASSIFICATION	4.5764754680551576E-5	TEST
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999761478035537	WITHOUT_CLASSIFICATION	2.3852196446309135E-5	TEST
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999712246413114	WITHOUT_CLASSIFICATION	2.8775358688507252E-5	TEST
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999870274965488	WITHOUT_CLASSIFICATION	1.297250345118439E-5	TEST
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999974310993675	WITHOUT_CLASSIFICATION	2.5689006324947162E-5	TEST
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999964558639918	WITHOUT_CLASSIFICATION	3.5441360082964732E-6	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.999971247511366	WITHOUT_CLASSIFICATION	2.875248863397131E-5	TEST
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999974348096672	WITHOUT_CLASSIFICATION	2.5651903327833857E-6	TEST
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999171212188744	WITHOUT_CLASSIFICATION	8.287878112555537E-5	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999902967326492	WITHOUT_CLASSIFICATION	9.703267350889398E-6	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999902967326492	WITHOUT_CLASSIFICATION	9.703267350889398E-6	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999953398669609	WITHOUT_CLASSIFICATION	4.660133039171271E-6	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999953398669609	WITHOUT_CLASSIFICATION	4.660133039171271E-6	TEST
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999959713644231	WITHOUT_CLASSIFICATION	4.028635576943681E-6	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.999989159284313	WITHOUT_CLASSIFICATION	1.084071568697197E-5	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999898479608623	WITHOUT_CLASSIFICATION	1.015203913765423E-5	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9996876513596953	WITHOUT_CLASSIFICATION	3.1234864030461727E-4	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9996876513596953	WITHOUT_CLASSIFICATION	3.1234864030461727E-4	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9996876513596953	WITHOUT_CLASSIFICATION	3.1234864030461727E-4	TEST
// line 286	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 476	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 513	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 530	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 533	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 551	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// end loop	WITHOUT_CLASSIFICATION	0.9999973517451962	WITHOUT_CLASSIFICATION	2.6482548037697456E-6	TEST
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9998743217139532	WITHOUT_CLASSIFICATION	1.2567828604685924E-4	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999993056774286	WITHOUT_CLASSIFICATION	6.94322571375006E-7	TEST
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9999955830963805	WITHOUT_CLASSIFICATION	4.4169036195458E-6	TEST
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.999781807167935	WITHOUT_CLASSIFICATION	2.181928320650336E-4	TEST
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999867113860832	WITHOUT_CLASSIFICATION	1.3288613916780204E-5	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9986004502237262	WITHOUT_CLASSIFICATION	0.0013995497762737466	TEST
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999998590974821	WITHOUT_CLASSIFICATION	1.4090251785527833E-7	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999764925828367	WITHOUT_CLASSIFICATION	2.3507417163232378E-5	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999989232737401	WITHOUT_CLASSIFICATION	1.0767262599493514E-6	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9995305036307847	WITHOUT_CLASSIFICATION	4.6949636921525984E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9995305036307847	WITHOUT_CLASSIFICATION	4.6949636921525984E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9995305036307847	WITHOUT_CLASSIFICATION	4.6949636921525984E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9995305036307847	WITHOUT_CLASSIFICATION	4.6949636921525984E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9995305036307847	WITHOUT_CLASSIFICATION	4.6949636921525984E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999443297004494	WITHOUT_CLASSIFICATION	5.567029955067059E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9995305036307847	WITHOUT_CLASSIFICATION	4.6949636921525984E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9995305036307847	WITHOUT_CLASSIFICATION	4.6949636921525984E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9995305036307847	WITHOUT_CLASSIFICATION	4.6949636921525984E-4	TEST
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999922108998294	WITHOUT_CLASSIFICATION	7.789100170664231E-6	TEST
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999898075967621	WITHOUT_CLASSIFICATION	1.019240323788417E-5	TEST
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9997916619180833	WITHOUT_CLASSIFICATION	2.0833808191680791E-4	TEST
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999617898139024	WITHOUT_CLASSIFICATION	3.821018609753497E-5	TEST
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9998910982266125	WITHOUT_CLASSIFICATION	1.0890177338754835E-4	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9998134130178382	WITHOUT_CLASSIFICATION	1.865869821616866E-4	TEST
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999942110480163	WITHOUT_CLASSIFICATION	5.788951983652793E-6	TEST
// line 572	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 625	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 649	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 723	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 745	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 766	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 785	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 800	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 812	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 827	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 864	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 886	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 911	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 929	WITHOUT_CLASSIFICATION	0.9999965104570514	WITHOUT_CLASSIFICATION	3.489542948562248E-6	TEST
// line 952	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 970	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 972	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 991	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1011	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1026	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1067	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1085	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1145	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1169	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1201	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1229	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1287	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1293	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1307	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1325	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1363	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1398	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1473	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1492	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1523	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1562	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1582	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1620	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1635	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1652	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1681	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1755	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1789	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999950823891826	WITHOUT_CLASSIFICATION	4.917610817456403E-6	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999851154568773	WITHOUT_CLASSIFICATION	1.4884543122744351E-5	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.999750903077591	WITHOUT_CLASSIFICATION	2.490969224090361E-4	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9998924706128537	WITHOUT_CLASSIFICATION	1.0752938714631894E-4	TEST
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999970746648764	WITHOUT_CLASSIFICATION	2.925335123696941E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999995284140568	WITHOUT_CLASSIFICATION	4.715859431993475E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999995284140568	WITHOUT_CLASSIFICATION	4.715859431993475E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999995284140568	WITHOUT_CLASSIFICATION	4.715859431993475E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999995284140568	WITHOUT_CLASSIFICATION	4.715859431993475E-6	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.999783404346795	WITHOUT_CLASSIFICATION	2.165956532051213E-4	TEST
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999995279087841	WITHOUT_CLASSIFICATION	4.720912159306256E-7	TEST
// line 313	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 339	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 361	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 413	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 451	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 472	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 500	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 515	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 555	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 582	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 619	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 636	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 669	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 703	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 776	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 814	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 823	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 854	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 872	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 905	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 925	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 958	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 992	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1047	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1072	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1081	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1108	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1136	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1168	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1192	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1241	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1267	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1286	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1301	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1314	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1333	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1362	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1395	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1420	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1439	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1476	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1535	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1588	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1618	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1643	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1669	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1728	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1753	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1779	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1794	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1812	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1837	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1895	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1925	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1950	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 1992	WITHOUT_CLASSIFICATION	0.9999965102697972	WITHOUT_CLASSIFICATION	3.4897302027846484E-6	TEST
// line 2014	WITHOUT_CLASSIFICATION	0.9999965119012468	WITHOUT_CLASSIFICATION	3.4880987531931978E-6	TEST
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999383831698151	WITHOUT_CLASSIFICATION	6.161683018492576E-5	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999956221618633	WITHOUT_CLASSIFICATION	4.377838136635911E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999970623129203	WITHOUT_CLASSIFICATION	2.937687079646284E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999970623129203	WITHOUT_CLASSIFICATION	2.937687079646284E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999970623129203	WITHOUT_CLASSIFICATION	2.937687079646284E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999970623129203	WITHOUT_CLASSIFICATION	2.937687079646284E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999970623129203	WITHOUT_CLASSIFICATION	2.937687079646284E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999970623129203	WITHOUT_CLASSIFICATION	2.937687079646284E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999970623129203	WITHOUT_CLASSIFICATION	2.937687079646284E-6	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999863077747728	WITHOUT_CLASSIFICATION	1.3692225227194244E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999863077747728	WITHOUT_CLASSIFICATION	1.3692225227194244E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999863077747728	WITHOUT_CLASSIFICATION	1.3692225227194244E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999863077747728	WITHOUT_CLASSIFICATION	1.3692225227194244E-5	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9996654313985052	WITHOUT_CLASSIFICATION	3.345686014947708E-4	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9996654313985052	WITHOUT_CLASSIFICATION	3.345686014947708E-4	TEST
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999753456003204	WITHOUT_CLASSIFICATION	2.4654399679571775E-5	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999997476566247	WITHOUT_CLASSIFICATION	2.5234337539025376E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999997476566247	WITHOUT_CLASSIFICATION	2.5234337539025376E-7	TEST
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999695658460157	WITHOUT_CLASSIFICATION	3.0434153984257647E-5	TEST
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.999996546953057	WITHOUT_CLASSIFICATION	3.4530469430478895E-6	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999716227145341	WITHOUT_CLASSIFICATION	2.8377285465976188E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999716227145341	WITHOUT_CLASSIFICATION	2.8377285465976188E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999716227145341	WITHOUT_CLASSIFICATION	2.8377285465976188E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999716227145341	WITHOUT_CLASSIFICATION	2.8377285465976188E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999716227145341	WITHOUT_CLASSIFICATION	2.8377285465976188E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999716227145341	WITHOUT_CLASSIFICATION	2.8377285465976188E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999716227145341	WITHOUT_CLASSIFICATION	2.8377285465976188E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999716227145341	WITHOUT_CLASSIFICATION	2.8377285465976188E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999716227145341	WITHOUT_CLASSIFICATION	2.8377285465976188E-5	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999916910430088	WITHOUT_CLASSIFICATION	8.308956991191174E-6	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999916910430088	WITHOUT_CLASSIFICATION	8.308956991191174E-6	TEST
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999922125621296	WITHOUT_CLASSIFICATION	7.787437870409653E-6	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999907723263045	WITHOUT_CLASSIFICATION	9.227673695514278E-6	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999907723263045	WITHOUT_CLASSIFICATION	9.227673695514278E-6	TEST
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999991871596589	WITHOUT_CLASSIFICATION	8.12840341188645E-7	TEST
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9354135022130194	WITHOUT_CLASSIFICATION	0.06458649778698057	TEST
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999998799625321	WITHOUT_CLASSIFICATION	1.200374679390783E-7	TEST
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999959411892675	WITHOUT_CLASSIFICATION	4.058810732564849E-6	TEST
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999772117256578	WITHOUT_CLASSIFICATION	2.27882743421095E-5	TEST
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999713062341808	WITHOUT_CLASSIFICATION	2.8693765819151093E-5	TEST
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999968602830539	WITHOUT_CLASSIFICATION	3.13971694602529E-6	TEST
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999943832369823	WITHOUT_CLASSIFICATION	5.616763017678032E-6	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9995192227049541	WITHOUT_CLASSIFICATION	4.80777295045969E-4	TEST
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9997550340195954	WITHOUT_CLASSIFICATION	2.449659804045416E-4	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9905288461516071	WITHOUT_CLASSIFICATION	0.009471153848392887	TEST
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999994523252518	WITHOUT_CLASSIFICATION	5.476747482693584E-7	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999919225380791	WITHOUT_CLASSIFICATION	8.077461920899799E-6	TEST
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.999998463995951	WITHOUT_CLASSIFICATION	1.5360040489568254E-6	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999317264526653	WITHOUT_CLASSIFICATION	6.82735473347615E-5	TEST
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999968328825358	WITHOUT_CLASSIFICATION	3.167117464128985E-6	TEST
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999686220739593	WITHOUT_CLASSIFICATION	3.137792604079786E-5	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9998578022926239	WITHOUT_CLASSIFICATION	1.4219770737608823E-4	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999663926510444	WITHOUT_CLASSIFICATION	3.360734895563028E-5	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999663926510444	WITHOUT_CLASSIFICATION	3.360734895563028E-5	TEST
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999873404593782	WITHOUT_CLASSIFICATION	1.26595406217725E-5	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999575122998774	WITHOUT_CLASSIFICATION	4.248770012258118E-5	TEST
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999831205341783	WITHOUT_CLASSIFICATION	1.6879465821839234E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9995224278502358	WITHOUT_CLASSIFICATION	4.775721497641148E-4	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999170411641449	WITHOUT_CLASSIFICATION	8.295883585498827E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999170411641449	WITHOUT_CLASSIFICATION	8.295883585498827E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999170411641449	WITHOUT_CLASSIFICATION	8.295883585498827E-5	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999980751498385	WITHOUT_CLASSIFICATION	1.92485016152797E-6	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.999946328348249	WITHOUT_CLASSIFICATION	5.36716517510008E-5	TEST
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999982689773608	WITHOUT_CLASSIFICATION	1.7310226393024398E-6	TEST
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999999648457639	WITHOUT_CLASSIFICATION	3.515423606151798E-8	TEST
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999993473563857	WITHOUT_CLASSIFICATION	6.526436141422987E-7	TEST
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999998567990291	WITHOUT_CLASSIFICATION	1.432009707965892E-7	TEST
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999936500961608	WITHOUT_CLASSIFICATION	6.349903839146602E-6	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999805216428063	WITHOUT_CLASSIFICATION	1.9478357193692043E-5	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999998566657272	WITHOUT_CLASSIFICATION	1.433342728207851E-7	TEST
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999854246899522	WITHOUT_CLASSIFICATION	1.4575310047840175E-5	TEST
// reset buffer	WITHOUT_CLASSIFICATION	0.9999955697225833	WITHOUT_CLASSIFICATION	4.430277416710694E-6	TEST
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999972475472446	WITHOUT_CLASSIFICATION	2.752452755363695E-6	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8586343120068207	WITHOUT_CLASSIFICATION	0.1413656879931792	TEST
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999900711658998	WITHOUT_CLASSIFICATION	9.928834100144311E-6	TEST
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999988564359419	WITHOUT_CLASSIFICATION	1.1435640581854486E-6	TEST
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999601167346575	WITHOUT_CLASSIFICATION	3.988326534248335E-5	TEST
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999851146163083	WITHOUT_CLASSIFICATION	1.4885383691633108E-5	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9998793572790725	WITHOUT_CLASSIFICATION	1.2064272092756145E-4	TEST
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999987163307245	WITHOUT_CLASSIFICATION	1.283669275617647E-6	TEST
