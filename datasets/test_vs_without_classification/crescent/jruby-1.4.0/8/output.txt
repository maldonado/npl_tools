// ?R  | boolean | True if file is readable by the real uid/gid of the caller // FIXME: Need to implement an readable_real_p in FileTest	TEST	0.9999906101558526	WITHOUT_CLASSIFICATION	9.389844147530174E-6	TEST
// TODO make an assert here	TEST	0.9985884565891262	WITHOUT_CLASSIFICATION	0.0014115434108737846	TEST
// TODO add test methods here. The name must begin with 'test'. For example:	TEST	0.7894317536622173	WITHOUT_CLASSIFICATION	0.21056824633778282	TEST
// TODO: Make into an assert once I get things like blockbodynodes to be implicit nil	TEST	0.99993404412133	WITHOUT_CLASSIFICATION	6.595587866998166E-5	TEST
// if the method is extending something, then we have // to test if the handler is initialized...	TEST	0.9999905098126152	WITHOUT_CLASSIFICATION	9.490187384765594E-6	TEST
// ?W  | boolean | True if file1 exists and is writable by the real uid/gid // FIXME: Need to implement an writable_real_p in FileTest	TEST	0.9999686973742739	WITHOUT_CLASSIFICATION	3.130262572605314E-5	TEST
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999999924196598	WITHOUT_CLASSIFICATION	7.580340234273914E-9	TEST
// line 335	WITHOUT_CLASSIFICATION	0.9999996294660668	WITHOUT_CLASSIFICATION	3.705339332159065E-7	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999944002780475	WITHOUT_CLASSIFICATION	5.599721952530316E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999944002780475	WITHOUT_CLASSIFICATION	5.599721952530316E-6	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999824976848234	WITHOUT_CLASSIFICATION	1.750231517665046E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999824976848234	WITHOUT_CLASSIFICATION	1.750231517665046E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999885867452581	WITHOUT_CLASSIFICATION	1.1413254741823817E-5	TEST
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.999999385711473	WITHOUT_CLASSIFICATION	6.142885269691154E-7	TEST
// line 362	WITHOUT_CLASSIFICATION	0.999999616335056	WITHOUT_CLASSIFICATION	3.8366494412998464E-7	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999996258089707	WITHOUT_CLASSIFICATION	3.741910292950824E-7	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999951257311309	WITHOUT_CLASSIFICATION	4.874268869062512E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999951257311309	WITHOUT_CLASSIFICATION	4.874268869062512E-6	TEST
// line 391	WITHOUT_CLASSIFICATION	0.9999995841629024	WITHOUT_CLASSIFICATION	4.1583709762549423E-7	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999948703384598	WITHOUT_CLASSIFICATION	5.129661540107464E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999948703384598	WITHOUT_CLASSIFICATION	5.129661540107464E-6	TEST
/* ^D */	WITHOUT_CLASSIFICATION	0.9999886536158811	WITHOUT_CLASSIFICATION	1.1346384119036252E-5	TEST
/* ^Z */	WITHOUT_CLASSIFICATION	0.999993266577892	WITHOUT_CLASSIFICATION	6.733422107985778E-6	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999945531375517	WITHOUT_CLASSIFICATION	5.446862448327968E-6	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999945531375517	WITHOUT_CLASSIFICATION	5.446862448327968E-6	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999945531375517	WITHOUT_CLASSIFICATION	5.446862448327968E-6	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999945531375517	WITHOUT_CLASSIFICATION	5.446862448327968E-6	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999945531375517	WITHOUT_CLASSIFICATION	5.446862448327968E-6	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999945531375517	WITHOUT_CLASSIFICATION	5.446862448327968E-6	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999945531375517	WITHOUT_CLASSIFICATION	5.446862448327968E-6	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999819188219526	WITHOUT_CLASSIFICATION	1.8081178047410076E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999819188219526	WITHOUT_CLASSIFICATION	1.8081178047410076E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999819188219526	WITHOUT_CLASSIFICATION	1.8081178047410076E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999819188219526	WITHOUT_CLASSIFICATION	1.8081178047410076E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999819188219526	WITHOUT_CLASSIFICATION	1.8081178047410076E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999819188219526	WITHOUT_CLASSIFICATION	1.8081178047410076E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999819188219526	WITHOUT_CLASSIFICATION	1.8081178047410076E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999865500502579	WITHOUT_CLASSIFICATION	1.3449949742069895E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999865500502579	WITHOUT_CLASSIFICATION	1.3449949742069895E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999865500502579	WITHOUT_CLASSIFICATION	1.3449949742069895E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999865500502579	WITHOUT_CLASSIFICATION	1.3449949742069895E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999865500502579	WITHOUT_CLASSIFICATION	1.3449949742069895E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999865500502579	WITHOUT_CLASSIFICATION	1.3449949742069895E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999949567310014	WITHOUT_CLASSIFICATION	5.043268998587585E-6	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999949567310014	WITHOUT_CLASSIFICATION	5.043268998587585E-6	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999949567310014	WITHOUT_CLASSIFICATION	5.043268998587585E-6	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999949567310014	WITHOUT_CLASSIFICATION	5.043268998587585E-6	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999949567310014	WITHOUT_CLASSIFICATION	5.043268998587585E-6	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999949567310014	WITHOUT_CLASSIFICATION	5.043268998587585E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.99999469248343	WITHOUT_CLASSIFICATION	5.307516570042199E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.99999469248343	WITHOUT_CLASSIFICATION	5.307516570042199E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.99999469248343	WITHOUT_CLASSIFICATION	5.307516570042199E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.99999469248343	WITHOUT_CLASSIFICATION	5.307516570042199E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.99999469248343	WITHOUT_CLASSIFICATION	5.307516570042199E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.99999469248343	WITHOUT_CLASSIFICATION	5.307516570042199E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.99999469248343	WITHOUT_CLASSIFICATION	5.307516570042199E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999947674030546	WITHOUT_CLASSIFICATION	5.232596945361884E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999947674030546	WITHOUT_CLASSIFICATION	5.232596945361884E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999947674030546	WITHOUT_CLASSIFICATION	5.232596945361884E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999947674030546	WITHOUT_CLASSIFICATION	5.232596945361884E-6	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9999731271530161	WITHOUT_CLASSIFICATION	2.6872846983938686E-5	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9999731271530161	WITHOUT_CLASSIFICATION	2.6872846983938686E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450846035	WITHOUT_CLASSIFICATION	4.5491539649563463E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450846035	WITHOUT_CLASSIFICATION	4.5491539649563463E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450846035	WITHOUT_CLASSIFICATION	4.5491539649563463E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450846035	WITHOUT_CLASSIFICATION	4.5491539649563463E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450846035	WITHOUT_CLASSIFICATION	4.5491539649563463E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450846035	WITHOUT_CLASSIFICATION	4.5491539649563463E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450846035	WITHOUT_CLASSIFICATION	4.5491539649563463E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450846035	WITHOUT_CLASSIFICATION	4.5491539649563463E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450846035	WITHOUT_CLASSIFICATION	4.5491539649563463E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450846035	WITHOUT_CLASSIFICATION	4.5491539649563463E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450846035	WITHOUT_CLASSIFICATION	4.5491539649563463E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450846035	WITHOUT_CLASSIFICATION	4.5491539649563463E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450846035	WITHOUT_CLASSIFICATION	4.5491539649563463E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450846035	WITHOUT_CLASSIFICATION	4.5491539649563463E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450846035	WITHOUT_CLASSIFICATION	4.5491539649563463E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450846035	WITHOUT_CLASSIFICATION	4.5491539649563463E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450846035	WITHOUT_CLASSIFICATION	4.5491539649563463E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450846035	WITHOUT_CLASSIFICATION	4.5491539649563463E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450846035	WITHOUT_CLASSIFICATION	4.5491539649563463E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450846035	WITHOUT_CLASSIFICATION	4.5491539649563463E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450846035	WITHOUT_CLASSIFICATION	4.5491539649563463E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450846035	WITHOUT_CLASSIFICATION	4.5491539649563463E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450846035	WITHOUT_CLASSIFICATION	4.5491539649563463E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450846035	WITHOUT_CLASSIFICATION	4.5491539649563463E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450846035	WITHOUT_CLASSIFICATION	4.5491539649563463E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450846035	WITHOUT_CLASSIFICATION	4.5491539649563463E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450846035	WITHOUT_CLASSIFICATION	4.5491539649563463E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450846035	WITHOUT_CLASSIFICATION	4.5491539649563463E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450846035	WITHOUT_CLASSIFICATION	4.5491539649563463E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450846035	WITHOUT_CLASSIFICATION	4.5491539649563463E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450846035	WITHOUT_CLASSIFICATION	4.5491539649563463E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450846035	WITHOUT_CLASSIFICATION	4.5491539649563463E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450846035	WITHOUT_CLASSIFICATION	4.5491539649563463E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450846035	WITHOUT_CLASSIFICATION	4.5491539649563463E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450846035	WITHOUT_CLASSIFICATION	4.5491539649563463E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450846035	WITHOUT_CLASSIFICATION	4.5491539649563463E-7	TEST
// return result	WITHOUT_CLASSIFICATION	0.9999999568619058	WITHOUT_CLASSIFICATION	4.313809417002271E-8	TEST
// name	WITHOUT_CLASSIFICATION	0.9999992653016678	WITHOUT_CLASSIFICATION	7.346983320544744E-7	TEST
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.999999411569119	WITHOUT_CLASSIFICATION	5.884308809139894E-7	TEST
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999999146571371	WITHOUT_CLASSIFICATION	8.534286290260068E-8	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999996318295655	WITHOUT_CLASSIFICATION	3.6817043441522993E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999996318295655	WITHOUT_CLASSIFICATION	3.6817043441522993E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999996318295655	WITHOUT_CLASSIFICATION	3.6817043441522993E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999996318295655	WITHOUT_CLASSIFICATION	3.6817043441522993E-7	TEST
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999998723008156	WITHOUT_CLASSIFICATION	1.2769918441581114E-7	TEST
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999999880181378	WITHOUT_CLASSIFICATION	1.198186219570818E-8	TEST
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999997980229358	WITHOUT_CLASSIFICATION	2.019770642741527E-7	TEST
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999999053561495	WITHOUT_CLASSIFICATION	9.464385047829913E-8	TEST
// Version information:	WITHOUT_CLASSIFICATION	0.9999995614108075	WITHOUT_CLASSIFICATION	4.385891925291865E-7	TEST
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999999786927571	WITHOUT_CLASSIFICATION	2.1307242892466992E-8	TEST
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999999250723507	WITHOUT_CLASSIFICATION	7.492764927595459E-8	TEST
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999999864999194	WITHOUT_CLASSIFICATION	1.3500080643545275E-8	TEST
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999999921852059	WITHOUT_CLASSIFICATION	7.814794194711794E-9	TEST
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999995587779233	WITHOUT_CLASSIFICATION	4.4122207661234753E-7	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999999955372623	WITHOUT_CLASSIFICATION	4.462737677368069E-9	TEST
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999996654442134	WITHOUT_CLASSIFICATION	3.345557866395413E-7	TEST
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9999923127352709	WITHOUT_CLASSIFICATION	7.687264729146439E-6	TEST
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999999612183464	WITHOUT_CLASSIFICATION	3.878165349858445E-8	TEST
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999998803713197	WITHOUT_CLASSIFICATION	1.196286802109583E-7	TEST
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999946319288304	WITHOUT_CLASSIFICATION	5.36807116952581E-6	TEST
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.999999992061411	WITHOUT_CLASSIFICATION	7.938589108300488E-9	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999996318295655	WITHOUT_CLASSIFICATION	3.6817043441522993E-7	TEST
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.999999977142383	WITHOUT_CLASSIFICATION	2.2857616951734682E-8	TEST
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999998797659047	WITHOUT_CLASSIFICATION	1.2023409523299467E-7	TEST
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999998604854708	WITHOUT_CLASSIFICATION	1.3951452907449345E-7	TEST
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9999988963205975	WITHOUT_CLASSIFICATION	1.103679402550392E-6	TEST
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9999999752359021	WITHOUT_CLASSIFICATION	2.4764097797444942E-8	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.999999746829246	WITHOUT_CLASSIFICATION	2.5317075403165925E-7	TEST
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999997638220258	WITHOUT_CLASSIFICATION	2.3617797404251465E-7	TEST
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999998279476466	WITHOUT_CLASSIFICATION	1.7205235325640772E-7	TEST
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999996504942575	WITHOUT_CLASSIFICATION	3.4950574237491364E-7	TEST
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999998813036317	WITHOUT_CLASSIFICATION	1.1869636827587084E-7	TEST
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999720072857453	WITHOUT_CLASSIFICATION	2.799271425469854E-5	TEST
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999997880918017	WITHOUT_CLASSIFICATION	2.1190819834319072E-7	TEST
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.999999845990971	WITHOUT_CLASSIFICATION	1.5400902907937918E-7	TEST
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999987305522664	WITHOUT_CLASSIFICATION	1.2694477336431696E-6	TEST
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999967115745704	WITHOUT_CLASSIFICATION	3.2884254296204008E-6	TEST
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999980679076079	WITHOUT_CLASSIFICATION	1.9320923920709157E-6	TEST
// RubySignal	WITHOUT_CLASSIFICATION	0.9999998882504981	WITHOUT_CLASSIFICATION	1.1174950181283769E-7	TEST
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999999679152558	WITHOUT_CLASSIFICATION	3.208474422359967E-8	TEST
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9959022500564568	WITHOUT_CLASSIFICATION	0.004097749943543184	TEST
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999993532454784	WITHOUT_CLASSIFICATION	6.467545216801026E-7	TEST
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999992502711461	WITHOUT_CLASSIFICATION	7.497288540251012E-7	TEST
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999992476808807	WITHOUT_CLASSIFICATION	7.523191194129698E-7	TEST
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999998235523764	WITHOUT_CLASSIFICATION	1.7644762358411763E-7	TEST
//io.finish();	WITHOUT_CLASSIFICATION	0.9999808425604172	WITHOUT_CLASSIFICATION	1.915743958275048E-5	TEST
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9999997391083808	WITHOUT_CLASSIFICATION	2.608916192527838E-7	TEST
// hmm...	WITHOUT_CLASSIFICATION	0.9999982990608063	WITHOUT_CLASSIFICATION	1.7009391937657426E-6	TEST
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999994122728122	WITHOUT_CLASSIFICATION	5.877271877519318E-7	TEST
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999999639375328	WITHOUT_CLASSIFICATION	3.606246720098077E-8	TEST
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999999758864451	WITHOUT_CLASSIFICATION	2.4113554809492424E-8	TEST
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999999708061817	WITHOUT_CLASSIFICATION	2.919381820092471E-8	TEST
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999995364197439	WITHOUT_CLASSIFICATION	4.6358025600824296E-7	TEST
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999998520244242	WITHOUT_CLASSIFICATION	1.479755757266057E-7	TEST
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999998145464275	WITHOUT_CLASSIFICATION	1.8545357255720315E-7	TEST
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.999999968574211	WITHOUT_CLASSIFICATION	3.1425789019811964E-8	TEST
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999999920315924	WITHOUT_CLASSIFICATION	7.968407542345556E-9	TEST
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.999999848784171	WITHOUT_CLASSIFICATION	1.5121582889309995E-7	TEST
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.999999974896051	WITHOUT_CLASSIFICATION	2.5103949042075678E-8	TEST
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999999218612984	WITHOUT_CLASSIFICATION	7.813870160370735E-8	TEST
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999992688660593	WITHOUT_CLASSIFICATION	7.311339406624363E-7	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999996695605045	WITHOUT_CLASSIFICATION	3.3043949554806383E-7	TEST
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999999809083379	WITHOUT_CLASSIFICATION	1.909166216474406E-8	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999999394748864	WITHOUT_CLASSIFICATION	6.052511352391223E-8	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999989607550526	WITHOUT_CLASSIFICATION	1.0392449474684088E-6	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999988547552281	WITHOUT_CLASSIFICATION	1.1452447719130451E-6	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999988547552281	WITHOUT_CLASSIFICATION	1.1452447719130451E-6	TEST
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.999996922317855	WITHOUT_CLASSIFICATION	3.0776821449168295E-6	TEST
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999999956855303	WITHOUT_CLASSIFICATION	4.3144697438933646E-9	TEST
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999972302146554	WITHOUT_CLASSIFICATION	2.7697853446656717E-6	TEST
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999999769207519	WITHOUT_CLASSIFICATION	2.3079248125881468E-8	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999998644039669	WITHOUT_CLASSIFICATION	1.3559603297345818E-7	TEST
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999989629195906	WITHOUT_CLASSIFICATION	1.0370804094365595E-6	TEST
// ???	WITHOUT_CLASSIFICATION	0.9999984328326791	WITHOUT_CLASSIFICATION	1.5671673209369824E-6	TEST
// PID	WITHOUT_CLASSIFICATION	0.9999964536650892	WITHOUT_CLASSIFICATION	3.5463349109908126E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999999394748864	WITHOUT_CLASSIFICATION	6.052511352391223E-8	TEST
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999999710974161	WITHOUT_CLASSIFICATION	2.890258396382483E-8	TEST
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999994746085916	WITHOUT_CLASSIFICATION	5.253914084128149E-7	TEST
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999999982290435	WITHOUT_CLASSIFICATION	1.7709564414663577E-9	TEST
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.999999996897908	WITHOUT_CLASSIFICATION	3.1020920257877628E-9	TEST
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999998997625117	WITHOUT_CLASSIFICATION	1.0023748823490001E-7	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999998580418957	WITHOUT_CLASSIFICATION	1.4195810434400267E-7	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999998580418957	WITHOUT_CLASSIFICATION	1.4195810434400267E-7	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999998580418957	WITHOUT_CLASSIFICATION	1.4195810434400267E-7	TEST
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999999904943841	WITHOUT_CLASSIFICATION	9.505615802366998E-9	TEST
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999978679695559	WITHOUT_CLASSIFICATION	2.1320304440199853E-6	TEST
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999999473512984	WITHOUT_CLASSIFICATION	5.2648701688527716E-8	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908085288	WITHOUT_CLASSIFICATION	1.0919147120033145E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908085288	WITHOUT_CLASSIFICATION	1.0919147120033145E-7	TEST
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.999975809555604	WITHOUT_CLASSIFICATION	2.4190444395964493E-5	TEST
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999999130915859	WITHOUT_CLASSIFICATION	8.690841414853803E-8	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908085288	WITHOUT_CLASSIFICATION	1.0919147120033145E-7	TEST
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999998973141098	WITHOUT_CLASSIFICATION	1.0268589017316498E-7	TEST
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999999611633563	WITHOUT_CLASSIFICATION	3.883664363587576E-8	TEST
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999999728836787	WITHOUT_CLASSIFICATION	2.7116321246964433E-8	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999997997070101	WITHOUT_CLASSIFICATION	2.0029298979313983E-7	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999997997070101	WITHOUT_CLASSIFICATION	2.0029298979313983E-7	TEST
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999995358554032	WITHOUT_CLASSIFICATION	4.6414459667657807E-7	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999974327480364	WITHOUT_CLASSIFICATION	2.567251963565425E-6	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999997657997005	WITHOUT_CLASSIFICATION	2.3420029962776917E-7	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999997657997005	WITHOUT_CLASSIFICATION	2.3420029962776917E-7	TEST
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.999999863000983	WITHOUT_CLASSIFICATION	1.3699901709438663E-7	TEST
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999999502983482	WITHOUT_CLASSIFICATION	4.970165183350249E-8	TEST
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999985530500435	WITHOUT_CLASSIFICATION	1.4469499565720888E-6	TEST
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999998861102424	WITHOUT_CLASSIFICATION	1.1388975764343373E-7	TEST
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999996202504291	WITHOUT_CLASSIFICATION	3.7974957095493565E-7	TEST
// extras flag	WITHOUT_CLASSIFICATION	0.999999929284636	WITHOUT_CLASSIFICATION	7.071536396394549E-8	TEST
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999989279343887	WITHOUT_CLASSIFICATION	1.0720656113206163E-6	TEST
// ...nothing	WITHOUT_CLASSIFICATION	0.9999986948580835	WITHOUT_CLASSIFICATION	1.3051419164947488E-6	TEST
// utility method	WITHOUT_CLASSIFICATION	0.9999998778752491	WITHOUT_CLASSIFICATION	1.2212475096697854E-7	TEST
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999998968340913	WITHOUT_CLASSIFICATION	1.0316590870539268E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999999394748864	WITHOUT_CLASSIFICATION	6.052511352391223E-8	TEST
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999952969674906	WITHOUT_CLASSIFICATION	4.703032509335775E-6	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999999501841577	WITHOUT_CLASSIFICATION	4.981584228072493E-8	TEST
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999999083286901	WITHOUT_CLASSIFICATION	9.16713099791787E-8	TEST
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9999989967551378	WITHOUT_CLASSIFICATION	1.003244862147489E-6	TEST
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999996120663396	WITHOUT_CLASSIFICATION	3.8793366034764513E-7	TEST
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999937755095515	WITHOUT_CLASSIFICATION	6.2244904485569804E-6	TEST
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999994226970367	WITHOUT_CLASSIFICATION	5.773029633696461E-7	TEST
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999987612158286	WITHOUT_CLASSIFICATION	1.2387841712991892E-6	TEST
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.999999935144959	WITHOUT_CLASSIFICATION	6.485504100128722E-8	TEST
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.999999785417906	WITHOUT_CLASSIFICATION	2.1458209387673604E-7	TEST
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999999571727085	WITHOUT_CLASSIFICATION	4.282729147996809E-8	TEST
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999999693581652	WITHOUT_CLASSIFICATION	3.064183473832842E-8	TEST
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999999810433349	WITHOUT_CLASSIFICATION	1.895666506819468E-8	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999999475860172	WITHOUT_CLASSIFICATION	5.2413982751333765E-8	TEST
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999284634705815	WITHOUT_CLASSIFICATION	7.153652941852782E-5	TEST
// recheck condition	WITHOUT_CLASSIFICATION	0.9999999907951042	WITHOUT_CLASSIFICATION	9.204895730531644E-9	TEST
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999999824136624	WITHOUT_CLASSIFICATION	1.758633756068014E-8	TEST
// Construct key services	WITHOUT_CLASSIFICATION	0.9999998805746484	WITHOUT_CLASSIFICATION	1.1942535151666694E-7	TEST
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999999933364977	WITHOUT_CLASSIFICATION	6.663502269076519E-9	TEST
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999999915391136	WITHOUT_CLASSIFICATION	8.46088643143854E-9	TEST
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999999889176375	WITHOUT_CLASSIFICATION	1.108236237879339E-8	TEST
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999999995070685	WITHOUT_CLASSIFICATION	4.929314482883463E-10	TEST
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999999998727087	WITHOUT_CLASSIFICATION	1.272912488914542E-10	TEST
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999994815998065	WITHOUT_CLASSIFICATION	5.184001934879986E-7	TEST
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999998781132183	WITHOUT_CLASSIFICATION	1.2188678158538668E-7	TEST
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999998967533155	WITHOUT_CLASSIFICATION	1.0324668448085924E-7	TEST
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999984399366177	WITHOUT_CLASSIFICATION	1.5600633822774196E-6	TEST
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999999938581613	WITHOUT_CLASSIFICATION	6.141838776027781E-9	TEST
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999999980294808	WITHOUT_CLASSIFICATION	1.970519274044643E-9	TEST
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999998660615301	WITHOUT_CLASSIFICATION	1.3393846980862667E-7	TEST
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999999900225457	WITHOUT_CLASSIFICATION	9.977454294151821E-9	TEST
// determine spacing	WITHOUT_CLASSIFICATION	0.99999997369217	WITHOUT_CLASSIFICATION	2.63078300108225E-8	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999929488943408	WITHOUT_CLASSIFICATION	7.051105659252575E-6	TEST
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999998558975851	WITHOUT_CLASSIFICATION	1.4410241483136974E-7	TEST
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999997106583782	WITHOUT_CLASSIFICATION	2.89341621732775E-7	TEST
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999980793722537	WITHOUT_CLASSIFICATION	1.92062774635686E-6	TEST
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999999295525799	WITHOUT_CLASSIFICATION	7.044742016825567E-8	TEST
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999729225948272	WITHOUT_CLASSIFICATION	2.7077405172717285E-5	TEST
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999998702767091	WITHOUT_CLASSIFICATION	1.2972329096555302E-7	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999999538027706	WITHOUT_CLASSIFICATION	4.619722936932648E-8	TEST
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999999581151912	WITHOUT_CLASSIFICATION	4.188480889405412E-8	TEST
// Default objects	WITHOUT_CLASSIFICATION	0.9999999680162255	WITHOUT_CLASSIFICATION	3.19837745153293E-8	TEST
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999995447457404	WITHOUT_CLASSIFICATION	4.552542597016768E-7	TEST
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999999142452003	WITHOUT_CLASSIFICATION	8.57547997808808E-8	TEST
// Java support	WITHOUT_CLASSIFICATION	0.9999998760857497	WITHOUT_CLASSIFICATION	1.2391425026985235E-7	TEST
// Parser stats	WITHOUT_CLASSIFICATION	0.9999998004615427	WITHOUT_CLASSIFICATION	1.9953845739251572E-7	TEST
// Compilation	WITHOUT_CLASSIFICATION	0.9999998519694497	WITHOUT_CLASSIFICATION	1.4803055024008793E-7	TEST
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.999999975100908	WITHOUT_CLASSIFICATION	2.489909198261149E-8	TEST
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999999797939596	WITHOUT_CLASSIFICATION	2.0206040447897098E-8	TEST
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999999921945102	WITHOUT_CLASSIFICATION	7.80548981046094E-9	TEST
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999999858308066	WITHOUT_CLASSIFICATION	1.4169193380869322E-8	TEST
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999999798179674	WITHOUT_CLASSIFICATION	2.018203259825822E-8	TEST
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.999999967844363	WITHOUT_CLASSIFICATION	3.215563695343425E-8	TEST
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999999815972186	WITHOUT_CLASSIFICATION	1.840278140171294E-8	TEST
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999997855583241	WITHOUT_CLASSIFICATION	2.1444167585360025E-7	TEST
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999999881853464	WITHOUT_CLASSIFICATION	1.1814653446922914E-8	TEST
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999999058689838	WITHOUT_CLASSIFICATION	9.413101626228143E-8	TEST
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999999593374229	WITHOUT_CLASSIFICATION	4.066257714599434E-8	TEST
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999999500085787	WITHOUT_CLASSIFICATION	4.999142130340559E-8	TEST
// default options	WITHOUT_CLASSIFICATION	0.9999999774377031	WITHOUT_CLASSIFICATION	2.2562296929856443E-8	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999981658175496	WITHOUT_CLASSIFICATION	1.8341824503862627E-6	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999981658175496	WITHOUT_CLASSIFICATION	1.8341824503862627E-6	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999994870097418	WITHOUT_CLASSIFICATION	5.129902581851137E-7	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999994870097418	WITHOUT_CLASSIFICATION	5.129902581851137E-7	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999984719345644	WITHOUT_CLASSIFICATION	1.5280654356957246E-6	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999984719345644	WITHOUT_CLASSIFICATION	1.5280654356957246E-6	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.99999887534853	WITHOUT_CLASSIFICATION	1.124651470048227E-6	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.99999887534853	WITHOUT_CLASSIFICATION	1.124651470048227E-6	TEST
// long name option	WITHOUT_CLASSIFICATION	0.9999997071065062	WITHOUT_CLASSIFICATION	2.9289349385635157E-7	TEST
// conversion	WITHOUT_CLASSIFICATION	0.999999899454301	WITHOUT_CLASSIFICATION	1.0054569893673537E-7	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999999754987887	WITHOUT_CLASSIFICATION	2.450121129709161E-7	TEST
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.999998415889616	WITHOUT_CLASSIFICATION	1.584110383996339E-6	TEST
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999998537321015	WITHOUT_CLASSIFICATION	1.4626789840431217E-7	TEST
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999943485590048	WITHOUT_CLASSIFICATION	5.651440995139425E-6	TEST
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999954721266862	WITHOUT_CLASSIFICATION	4.5278733138440645E-6	TEST
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999999561508692	WITHOUT_CLASSIFICATION	4.3849130667149844E-8	TEST
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999999363292081	WITHOUT_CLASSIFICATION	6.36707918617652E-8	TEST
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999997314529765	WITHOUT_CLASSIFICATION	2.685470235561041E-7	TEST
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999997752499362	WITHOUT_CLASSIFICATION	2.2475006381402025E-7	TEST
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999999372106145	WITHOUT_CLASSIFICATION	6.278938545744022E-8	TEST
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999993559337232	WITHOUT_CLASSIFICATION	6.440662766871229E-7	TEST
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999995574147565	WITHOUT_CLASSIFICATION	4.4258524341486885E-7	TEST
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999998679914481	WITHOUT_CLASSIFICATION	1.320085519291326E-7	TEST
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999989424124374	WITHOUT_CLASSIFICATION	1.0575875626082872E-6	TEST
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999999995179321	WITHOUT_CLASSIFICATION	4.820680059391931E-10	TEST
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999998233933745	WITHOUT_CLASSIFICATION	1.7660662560003936E-7	TEST
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999973455212787	WITHOUT_CLASSIFICATION	2.6544787212226265E-6	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999994298232847	WITHOUT_CLASSIFICATION	5.701767154143185E-7	TEST
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999999197766197	WITHOUT_CLASSIFICATION	8.02233803346802E-8	TEST
// Illegal combination	WITHOUT_CLASSIFICATION	0.999999598654907	WITHOUT_CLASSIFICATION	4.01345093044215E-7	TEST
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999997904757415	WITHOUT_CLASSIFICATION	2.0952425849124838E-7	TEST
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999995347521518	WITHOUT_CLASSIFICATION	4.652478482967516E-7	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999992343473401	WITHOUT_CLASSIFICATION	7.656526600077267E-7	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999993774941692	WITHOUT_CLASSIFICATION	6.225058307572364E-7	TEST
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999995866117506	WITHOUT_CLASSIFICATION	4.133882494203117E-7	TEST
// block given	WITHOUT_CLASSIFICATION	0.999999851468722	WITHOUT_CLASSIFICATION	1.485312780149335E-7	TEST
// block given	WITHOUT_CLASSIFICATION	0.999999851468722	WITHOUT_CLASSIFICATION	1.485312780149335E-7	TEST
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999993875521493	WITHOUT_CLASSIFICATION	6.124478505903767E-7	TEST
// string given	WITHOUT_CLASSIFICATION	0.9999991214868189	WITHOUT_CLASSIFICATION	8.785131812051309E-7	TEST
// hash given	WITHOUT_CLASSIFICATION	0.9999987250918644	WITHOUT_CLASSIFICATION	1.2749081356857916E-6	TEST
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999999290367725	WITHOUT_CLASSIFICATION	7.096322754932989E-8	TEST
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999982067174483	WITHOUT_CLASSIFICATION	1.7932825516237463E-6	TEST
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999988558300926	WITHOUT_CLASSIFICATION	1.1441699074079302E-6	TEST
// nothing	WITHOUT_CLASSIFICATION	0.9999984183146744	WITHOUT_CLASSIFICATION	1.581685325585888E-6	TEST
// nothing	WITHOUT_CLASSIFICATION	0.9999984183146744	WITHOUT_CLASSIFICATION	1.581685325585888E-6	TEST
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999997543253543	WITHOUT_CLASSIFICATION	2.456746457536431E-7	TEST
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.999352808973885	WITHOUT_CLASSIFICATION	6.471910261149902E-4	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999996194214443	WITHOUT_CLASSIFICATION	3.8057855571558215E-7	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999996194214443	WITHOUT_CLASSIFICATION	3.8057855571558215E-7	TEST
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999999247070489	WITHOUT_CLASSIFICATION	7.529295108231974E-8	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999981404651498	WITHOUT_CLASSIFICATION	1.8595348502738889E-6	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999981404651498	WITHOUT_CLASSIFICATION	1.8595348502738889E-6	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999992618411243	WITHOUT_CLASSIFICATION	7.381588755654603E-7	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999992618411243	WITHOUT_CLASSIFICATION	7.381588755654603E-7	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.999997483328542	WITHOUT_CLASSIFICATION	2.5166714580043093E-6	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.999997483328542	WITHOUT_CLASSIFICATION	2.5166714580043093E-6	TEST
// QTRUE	WITHOUT_CLASSIFICATION	0.999998462860431	WITHOUT_CLASSIFICATION	1.5371395689716535E-6	TEST
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999997352824382	WITHOUT_CLASSIFICATION	2.64717561833259E-7	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999998638190045	WITHOUT_CLASSIFICATION	1.3618099551244075E-7	TEST
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999999461505742	WITHOUT_CLASSIFICATION	5.384942587635267E-8	TEST
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999999988372074	WITHOUT_CLASSIFICATION	1.1627926276410902E-9	TEST
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999999954726189	WITHOUT_CLASSIFICATION	4.52738108375913E-9	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999998462013289	WITHOUT_CLASSIFICATION	1.537986712453763E-7	TEST
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999999952603897	WITHOUT_CLASSIFICATION	4.73961033702136E-9	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999998462013289	WITHOUT_CLASSIFICATION	1.537986712453763E-7	TEST
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9996125534593264	WITHOUT_CLASSIFICATION	3.874465406735722E-4	TEST
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999998213971685	WITHOUT_CLASSIFICATION	1.786028315285272E-7	TEST
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999998085930357	WITHOUT_CLASSIFICATION	1.9140696435342687E-7	TEST
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999992902323136	WITHOUT_CLASSIFICATION	7.097676864733805E-7	TEST
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.999999957511103	WITHOUT_CLASSIFICATION	4.2488896842900536E-8	TEST
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999984959277441	WITHOUT_CLASSIFICATION	1.5040722557754925E-6	TEST
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999977393436965	WITHOUT_CLASSIFICATION	2.2606563035101737E-6	TEST
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999990544000577	WITHOUT_CLASSIFICATION	9.455999423751397E-7	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999992271588	WITHOUT_CLASSIFICATION	7.728412720064971E-10	TEST
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999999865721876	WITHOUT_CLASSIFICATION	1.3427812413608834E-8	TEST
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999999479542749	WITHOUT_CLASSIFICATION	5.2045725052838746E-8	TEST
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999844095127652	WITHOUT_CLASSIFICATION	1.5590487234770994E-5	TEST
// file not given	WITHOUT_CLASSIFICATION	0.999999808917501	WITHOUT_CLASSIFICATION	1.9108249906290935E-7	TEST
// string to eval	WITHOUT_CLASSIFICATION	0.9999999082519818	WITHOUT_CLASSIFICATION	9.17480182618001E-8	TEST
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999997662630391	WITHOUT_CLASSIFICATION	2.3373696089709568E-7	TEST
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999999874152696	WITHOUT_CLASSIFICATION	1.2584730398524295E-8	TEST
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999995936133502	WITHOUT_CLASSIFICATION	4.0638664978369627E-7	TEST
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999998992093635	WITHOUT_CLASSIFICATION	1.0079063649804229E-7	TEST
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9999992886685124	WITHOUT_CLASSIFICATION	7.113314876352648E-7	TEST
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999943522788136	WITHOUT_CLASSIFICATION	5.647721186352698E-6	TEST
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999989973986244	WITHOUT_CLASSIFICATION	1.0026013756251903E-6	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.999999957954027	WITHOUT_CLASSIFICATION	4.2045973135790776E-8	TEST
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999998721759646	WITHOUT_CLASSIFICATION	1.2782403541972962E-7	TEST
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999998495276131	WITHOUT_CLASSIFICATION	1.5047238690825776E-7	TEST
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.999999611786886	WITHOUT_CLASSIFICATION	3.882131139391666E-7	TEST
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999999804345858	WITHOUT_CLASSIFICATION	1.956541410487689E-8	TEST
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999999246500876	WITHOUT_CLASSIFICATION	7.5349912440838E-8	TEST
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.999999708335106	WITHOUT_CLASSIFICATION	2.916648939825817E-7	TEST
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999999867154938	WITHOUT_CLASSIFICATION	1.3284506196679169E-8	TEST
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.999999953658508	WITHOUT_CLASSIFICATION	4.6341491995576525E-8	TEST
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999999429419877	WITHOUT_CLASSIFICATION	5.705801238384427E-8	TEST
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999999989359107	WITHOUT_CLASSIFICATION	1.064089325710446E-9	TEST
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999999978105863	WITHOUT_CLASSIFICATION	2.1894135314192926E-9	TEST
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999998530392913	WITHOUT_CLASSIFICATION	1.4696070868214585E-7	TEST
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999999291176728	WITHOUT_CLASSIFICATION	7.088232721042684E-8	TEST
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999998659056226	WITHOUT_CLASSIFICATION	1.340943774799838E-7	TEST
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999999393584605	WITHOUT_CLASSIFICATION	6.064153950276505E-8	TEST
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999999900945891	WITHOUT_CLASSIFICATION	9.905410929619742E-9	TEST
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999999994272323	WITHOUT_CLASSIFICATION	5.727677556150355E-10	TEST
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999999458919704	WITHOUT_CLASSIFICATION	5.410802970478641E-8	TEST
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999999878341784	WITHOUT_CLASSIFICATION	1.2165821588143301E-8	TEST
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999999274298162	WITHOUT_CLASSIFICATION	7.257018377628425E-8	TEST
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999999508507279	WITHOUT_CLASSIFICATION	4.914927200670013E-8	TEST
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999999714456576	WITHOUT_CLASSIFICATION	2.8554342526332008E-8	TEST
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999999943612542	WITHOUT_CLASSIFICATION	5.638745892457095E-9	TEST
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999999838347685	WITHOUT_CLASSIFICATION	1.616523146033729E-8	TEST
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.999999704068602	WITHOUT_CLASSIFICATION	2.9593139810157166E-7	TEST
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999999978653392	WITHOUT_CLASSIFICATION	2.1346607866174605E-9	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999997996917732	WITHOUT_CLASSIFICATION	2.003082268420423E-7	TEST
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999995217752675	WITHOUT_CLASSIFICATION	4.782247325839359E-7	TEST
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999999863893793	WITHOUT_CLASSIFICATION	1.3610620766674147E-8	TEST
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999999908295032	WITHOUT_CLASSIFICATION	9.17049684525351E-9	TEST
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999843991051021	WITHOUT_CLASSIFICATION	1.5600894897932518E-5	TEST
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999999242854085	WITHOUT_CLASSIFICATION	7.571459140110446E-8	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.999999980647624	WITHOUT_CLASSIFICATION	1.9352376031068868E-8	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.999999980647624	WITHOUT_CLASSIFICATION	1.9352376031068868E-8	TEST
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.999998673525381	WITHOUT_CLASSIFICATION	1.326474618988643E-6	TEST
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999941394733994	WITHOUT_CLASSIFICATION	5.8605266006717666E-6	TEST
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999999737325941	WITHOUT_CLASSIFICATION	2.62674058285976E-8	TEST
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999999857436452	WITHOUT_CLASSIFICATION	1.4256354867757022E-8	TEST
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999999741012716	WITHOUT_CLASSIFICATION	2.589872827241877E-8	TEST
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.999998915796645	WITHOUT_CLASSIFICATION	1.084203355033781E-6	TEST
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.999997449377679	WITHOUT_CLASSIFICATION	2.5506223210802248E-6	TEST
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999999991893977	WITHOUT_CLASSIFICATION	8.106021995799299E-10	TEST
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999997632558666	WITHOUT_CLASSIFICATION	2.3674413346928563E-7	TEST
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999998833990805	WITHOUT_CLASSIFICATION	1.1660091945907614E-7	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999999905733534	WITHOUT_CLASSIFICATION	9.426646545496134E-9	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999999905733534	WITHOUT_CLASSIFICATION	9.426646545496134E-9	TEST
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9999999545487807	WITHOUT_CLASSIFICATION	4.545121939858437E-8	TEST
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999999981436739	WITHOUT_CLASSIFICATION	1.8563260639348899E-9	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999213624051767	WITHOUT_CLASSIFICATION	7.86375948233131E-5	TEST
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999999277345677	WITHOUT_CLASSIFICATION	7.226543231760183E-8	TEST
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.999999662407512	WITHOUT_CLASSIFICATION	3.3759248801153857E-7	TEST
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999999855126742	WITHOUT_CLASSIFICATION	1.4487325853370809E-8	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999997484965377	WITHOUT_CLASSIFICATION	2.515034622244254E-7	TEST
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999998418332118	WITHOUT_CLASSIFICATION	1.581667882503741E-7	TEST
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999999864221102	WITHOUT_CLASSIFICATION	1.357788973310188E-8	TEST
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999998289565232	WITHOUT_CLASSIFICATION	1.710434768140231E-7	TEST
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999999507789232	WITHOUT_CLASSIFICATION	4.922107678148704E-8	TEST
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999992939003893	WITHOUT_CLASSIFICATION	7.060996106664996E-7	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999999889428134	WITHOUT_CLASSIFICATION	1.1057186595452054E-8	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999999889428134	WITHOUT_CLASSIFICATION	1.1057186595452054E-8	TEST
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999999791344434	WITHOUT_CLASSIFICATION	2.0865556585000652E-8	TEST
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999998660773	WITHOUT_CLASSIFICATION	1.3392269999358822E-7	TEST
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999998988554067	WITHOUT_CLASSIFICATION	1.0114459323489673E-7	TEST
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999972892256436	WITHOUT_CLASSIFICATION	2.71077435649613E-6	TEST
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.999999951903019	WITHOUT_CLASSIFICATION	4.809698085179552E-8	TEST
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999998275595455	WITHOUT_CLASSIFICATION	1.7244045458008713E-7	TEST
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999985881767703	WITHOUT_CLASSIFICATION	1.4118232295643961E-6	TEST
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999997540352135	WITHOUT_CLASSIFICATION	2.459647866188954E-7	TEST
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999992841627618	WITHOUT_CLASSIFICATION	7.15837238186169E-7	TEST
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999999836779396	WITHOUT_CLASSIFICATION	1.632206040329847E-8	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999213624051767	WITHOUT_CLASSIFICATION	7.86375948233131E-5	TEST
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999996150576794	WITHOUT_CLASSIFICATION	3.849423206138621E-7	TEST
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999967077239759	WITHOUT_CLASSIFICATION	3.2922760240485147E-6	TEST
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999951394127634	WITHOUT_CLASSIFICATION	4.860587236545436E-6	TEST
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.999999987620912	WITHOUT_CLASSIFICATION	1.2379087929439328E-8	TEST
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999999839969343	WITHOUT_CLASSIFICATION	1.6003065593968787E-8	TEST
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999999953753153	WITHOUT_CLASSIFICATION	4.6246847928443E-9	TEST
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999991617422431	WITHOUT_CLASSIFICATION	8.38257756848799E-7	TEST
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999999148883884	WITHOUT_CLASSIFICATION	8.51116117019741E-8	TEST
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999999661961733	WITHOUT_CLASSIFICATION	3.3803826779733434E-8	TEST
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999999665658978	WITHOUT_CLASSIFICATION	3.343410219247682E-8	TEST
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999999177099542	WITHOUT_CLASSIFICATION	8.229004578702867E-8	TEST
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.999998781964524	WITHOUT_CLASSIFICATION	1.2180354760133992E-6	TEST
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999991358381964	WITHOUT_CLASSIFICATION	8.641618035971969E-7	TEST
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999990140075454	WITHOUT_CLASSIFICATION	9.859924545140947E-7	TEST
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999928859792736	WITHOUT_CLASSIFICATION	7.1140207263201065E-6	TEST
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999999579314486	WITHOUT_CLASSIFICATION	4.2068551415714986E-8	TEST
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999991971841335	WITHOUT_CLASSIFICATION	8.028158663576719E-7	TEST
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999997948890086	WITHOUT_CLASSIFICATION	2.0511099139258072E-7	TEST
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999995729211624	WITHOUT_CLASSIFICATION	4.270788375899507E-7	TEST
// rename is successful	WITHOUT_CLASSIFICATION	0.9999994847368252	WITHOUT_CLASSIFICATION	5.152631748072804E-7	TEST
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999999975369268	WITHOUT_CLASSIFICATION	2.4630732510460444E-9	TEST
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999998457132661	WITHOUT_CLASSIFICATION	1.5428673406485578E-7	TEST
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999998967308037	WITHOUT_CLASSIFICATION	1.0326919638182638E-7	TEST
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999966356359787	WITHOUT_CLASSIFICATION	3.3643640212285424E-6	TEST
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999998832324959	WITHOUT_CLASSIFICATION	1.1676750410148388E-7	TEST
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999997682295807	WITHOUT_CLASSIFICATION	2.3177041935167622E-7	TEST
// 16 ?	WITHOUT_CLASSIFICATION	0.9999982035574326	WITHOUT_CLASSIFICATION	1.796442567481935E-6	TEST
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999997204613017	WITHOUT_CLASSIFICATION	2.79538698256352E-7	TEST
// size + 1;	WITHOUT_CLASSIFICATION	0.999999743251364	WITHOUT_CLASSIFICATION	2.5674863598524765E-7	TEST
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999999867647482	WITHOUT_CLASSIFICATION	1.3235251837015601E-8	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999945741948725	WITHOUT_CLASSIFICATION	5.425805127587112E-6	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999945741948725	WITHOUT_CLASSIFICATION	5.425805127587112E-6	TEST
// put implementation	WITHOUT_CLASSIFICATION	0.9999997745081021	WITHOUT_CLASSIFICATION	2.254918978318643E-7	TEST
// get implementation	WITHOUT_CLASSIFICATION	0.9999998559438243	WITHOUT_CLASSIFICATION	1.4405617556993327E-7	TEST
// specialized for value	WITHOUT_CLASSIFICATION	0.9999999832565402	WITHOUT_CLASSIFICATION	1.674345984370627E-8	TEST
// delete implementation	WITHOUT_CLASSIFICATION	0.9999999486046088	WITHOUT_CLASSIFICATION	5.139539113604379E-8	TEST
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999979046444648	WITHOUT_CLASSIFICATION	2.095355535141954E-6	TEST
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999995847940124	WITHOUT_CLASSIFICATION	4.152059876439673E-7	TEST
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999999394748864	WITHOUT_CLASSIFICATION	6.052511352391223E-8	TEST
// update the hash value	WITHOUT_CLASSIFICATION	0.999999337990601	WITHOUT_CLASSIFICATION	6.620093990289086E-7	TEST
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999975909659681	WITHOUT_CLASSIFICATION	2.4090340318020784E-6	TEST
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999998657909682	WITHOUT_CLASSIFICATION	1.3420903179175006E-7	TEST
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999999387642442	WITHOUT_CLASSIFICATION	6.123575588536801E-8	TEST
// remain where we are	WITHOUT_CLASSIFICATION	0.999999739818782	WITHOUT_CLASSIFICATION	2.6018121794437886E-7	TEST
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999897246778418	WITHOUT_CLASSIFICATION	1.0275322158298647E-5	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999999538027706	WITHOUT_CLASSIFICATION	4.619722936932648E-8	TEST
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999999957620168	WITHOUT_CLASSIFICATION	4.237983124274403E-9	TEST
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999518784136746	WITHOUT_CLASSIFICATION	4.8121586325386926E-5	TEST
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999999999004352	WITHOUT_CLASSIFICATION	9.956474424298066E-11	TEST
// first try as directory	WITHOUT_CLASSIFICATION	0.9999999723854908	WITHOUT_CLASSIFICATION	2.7614509159946156E-8	TEST
// next as regular file	WITHOUT_CLASSIFICATION	0.9999999905922238	WITHOUT_CLASSIFICATION	9.407776185900945E-9	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.999997977779828	WITHOUT_CLASSIFICATION	2.0222201721037634E-6	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999988085493646	WITHOUT_CLASSIFICATION	1.191450635383763E-6	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999988085493646	WITHOUT_CLASSIFICATION	1.191450635383763E-6	TEST
// Stream-based	WITHOUT_CLASSIFICATION	0.9999999127163989	WITHOUT_CLASSIFICATION	8.728360107649934E-8	TEST
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999999246896345	WITHOUT_CLASSIFICATION	7.531036542124758E-8	TEST
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999999080921558	WITHOUT_CLASSIFICATION	9.19078441931739E-8	TEST
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999995517860956	WITHOUT_CLASSIFICATION	4.4821390446147624E-7	TEST
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999997455013987	WITHOUT_CLASSIFICATION	2.544986013395634E-7	TEST
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999999897838009	WITHOUT_CLASSIFICATION	1.0216199136748448E-8	TEST
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999999993599876	WITHOUT_CLASSIFICATION	6.400123251831361E-10	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999480445173	WITHOUT_CLASSIFICATION	5.195548274120755E-8	TEST
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999996538870415	WITHOUT_CLASSIFICATION	3.461129584799318E-7	TEST
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999999583697488	WITHOUT_CLASSIFICATION	4.163025134284284E-8	TEST
// re-register	WITHOUT_CLASSIFICATION	0.999999559704325	WITHOUT_CLASSIFICATION	4.402956750161738E-7	TEST
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999994877591444	WITHOUT_CLASSIFICATION	5.12240855717469E-7	TEST
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999981206209165	WITHOUT_CLASSIFICATION	1.8793790834721955E-6	TEST
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.999999800214248	WITHOUT_CLASSIFICATION	1.9978575199827815E-7	TEST
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999994822197661	WITHOUT_CLASSIFICATION	5.177802338874109E-7	TEST
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999988142516952	WITHOUT_CLASSIFICATION	1.1857483048516487E-6	TEST
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999999067346419	WITHOUT_CLASSIFICATION	9.32653581191108E-8	TEST
// use original modes	WITHOUT_CLASSIFICATION	0.9999999089785777	WITHOUT_CLASSIFICATION	9.102142231432203E-8	TEST
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999999777266038	WITHOUT_CLASSIFICATION	2.227339626385174E-8	TEST
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999997317361439	WITHOUT_CLASSIFICATION	2.6826385614272564E-7	TEST
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.999999963667941	WITHOUT_CLASSIFICATION	3.633205899667757E-8	TEST
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999997804740409	WITHOUT_CLASSIFICATION	2.1952595899176436E-7	TEST
// isRetained=true	WITHOUT_CLASSIFICATION	0.99999991353219	WITHOUT_CLASSIFICATION	8.646781006597045E-8	TEST
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999983556022414	WITHOUT_CLASSIFICATION	1.6443977585880626E-6	TEST
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999999139749611	WITHOUT_CLASSIFICATION	8.602503893385137E-8	TEST
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999999769301062	WITHOUT_CLASSIFICATION	2.306989380354354E-8	TEST
//Everything written	WITHOUT_CLASSIFICATION	0.9999894005527937	WITHOUT_CLASSIFICATION	1.0599447206387598E-5	TEST
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999999549220208	WITHOUT_CLASSIFICATION	4.507797920764741E-8	TEST
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999997838643463	WITHOUT_CLASSIFICATION	2.1613565365182254E-7	TEST
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9999993345989011	WITHOUT_CLASSIFICATION	6.65401098946497E-7	TEST
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999999946765671	WITHOUT_CLASSIFICATION	5.323432991563288E-9	TEST
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999990061731601	WITHOUT_CLASSIFICATION	9.938268399962717E-7	TEST
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999997397151387	WITHOUT_CLASSIFICATION	2.6028486135433363E-7	TEST
// hmmmm	WITHOUT_CLASSIFICATION	0.999997320381662	WITHOUT_CLASSIFICATION	2.679618338008275E-6	TEST
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999972405973536	WITHOUT_CLASSIFICATION	2.759402646436781E-6	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999999275907625	WITHOUT_CLASSIFICATION	7.240923745322747E-8	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999999782353971	WITHOUT_CLASSIFICATION	2.1764602880675725E-8	TEST
// Length to read	WITHOUT_CLASSIFICATION	0.999999816103412	WITHOUT_CLASSIFICATION	1.8389658797581846E-7	TEST
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999999440119106	WITHOUT_CLASSIFICATION	5.598808932086742E-8	TEST
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999998611955109	WITHOUT_CLASSIFICATION	1.388044890585837E-7	TEST
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999998273184499	WITHOUT_CLASSIFICATION	1.726815500750399E-7	TEST
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999998128447746	WITHOUT_CLASSIFICATION	1.8715522532741517E-7	TEST
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999997156011373	WITHOUT_CLASSIFICATION	2.843988626672378E-7	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999996481488714	WITHOUT_CLASSIFICATION	3.518511286315217E-7	TEST
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999996787960673	WITHOUT_CLASSIFICATION	3.2120393270813057E-7	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999996481488714	WITHOUT_CLASSIFICATION	3.518511286315217E-7	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999999601825604	WITHOUT_CLASSIFICATION	3.981743948376411E-8	TEST
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.999998013063509	WITHOUT_CLASSIFICATION	1.986936491079425E-6	TEST
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999998625352309	WITHOUT_CLASSIFICATION	1.3746476911566076E-7	TEST
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.9995007420952617	WITHOUT_CLASSIFICATION	4.992579047382337E-4	TEST
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.999999414818579	WITHOUT_CLASSIFICATION	5.851814209829078E-7	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999997875495173	WITHOUT_CLASSIFICATION	2.1245048255737735E-7	TEST
// write	WITHOUT_CLASSIFICATION	0.9999997398036095	WITHOUT_CLASSIFICATION	2.601963904963471E-7	TEST
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999341688344439	WITHOUT_CLASSIFICATION	6.583116555610848E-5	TEST
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999999026600732	WITHOUT_CLASSIFICATION	9.733992674236868E-8	TEST
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9999962127286716	WITHOUT_CLASSIFICATION	3.7872713283471004E-6	TEST
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.99999959767659	WITHOUT_CLASSIFICATION	4.0232340996109885E-7	TEST
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999991460547427	WITHOUT_CLASSIFICATION	8.539452573583213E-7	TEST
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.999999776790402	WITHOUT_CLASSIFICATION	2.2320959814969083E-7	TEST
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999999942967971	WITHOUT_CLASSIFICATION	5.703202984390267E-9	TEST
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9999874717488682	WITHOUT_CLASSIFICATION	1.2528251131814508E-5	TEST
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9998972998259144	WITHOUT_CLASSIFICATION	1.0270017408563541E-4	TEST
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999999968848045	WITHOUT_CLASSIFICATION	3.115195489636743E-9	TEST
// The class of this object	WITHOUT_CLASSIFICATION	0.9999996688876841	WITHOUT_CLASSIFICATION	3.3111231599348736E-7	TEST
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999983821088239	WITHOUT_CLASSIFICATION	1.6178911762633656E-6	TEST
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999989280331486	WITHOUT_CLASSIFICATION	1.0719668514383188E-6	TEST
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999999590002014	WITHOUT_CLASSIFICATION	4.099979863675284E-8	TEST
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999999422652551	WITHOUT_CLASSIFICATION	5.773474492934428E-8	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999993324154782	WITHOUT_CLASSIFICATION	6.675845216591734E-7	TEST
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999999173818727	WITHOUT_CLASSIFICATION	8.261812726239744E-8	TEST
// for interface impls	WITHOUT_CLASSIFICATION	0.9999999546347657	WITHOUT_CLASSIFICATION	4.536523423273154E-8	TEST
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999996794154583	WITHOUT_CLASSIFICATION	3.205845416743807E-7	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999999478495484	WITHOUT_CLASSIFICATION	5.2150451706265735E-8	TEST
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999999869306764	WITHOUT_CLASSIFICATION	1.3069323553134162E-8	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999999955372623	WITHOUT_CLASSIFICATION	4.462737677368069E-9	TEST
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999997737926037	WITHOUT_CLASSIFICATION	2.2620739618283536E-7	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999872306673853	WITHOUT_CLASSIFICATION	1.276933261478425E-5	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999833834432472	WITHOUT_CLASSIFICATION	1.6616556752767236E-5	TEST
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999876764873911	WITHOUT_CLASSIFICATION	1.232351260883978E-5	TEST
// Struct methods	WITHOUT_CLASSIFICATION	0.9999999733352728	WITHOUT_CLASSIFICATION	2.666472724846519E-8	TEST
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999999697260831	WITHOUT_CLASSIFICATION	3.027391684386773E-8	TEST
// define access methods.	WITHOUT_CLASSIFICATION	0.9999999662800807	WITHOUT_CLASSIFICATION	3.37199193383736E-8	TEST
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999998066656531	WITHOUT_CLASSIFICATION	1.9333434685682434E-7	TEST
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999596277823	WITHOUT_CLASSIFICATION	4.037221766601111E-8	TEST
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999971847779924	WITHOUT_CLASSIFICATION	2.8152220075909974E-6	TEST
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999953081525466	WITHOUT_CLASSIFICATION	4.6918474534127284E-6	TEST
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999999956412904	WITHOUT_CLASSIFICATION	4.3587096521105774E-9	TEST
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999985501237494	WITHOUT_CLASSIFICATION	1.4498762505967761E-6	TEST
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999999810198678	WITHOUT_CLASSIFICATION	1.8980132304481717E-8	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999996957956164	WITHOUT_CLASSIFICATION	3.042043835966831E-7	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999996957956164	WITHOUT_CLASSIFICATION	3.042043835966831E-7	TEST
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999993140138262	WITHOUT_CLASSIFICATION	6.859861736938475E-7	TEST
// superClass may be null.	WITHOUT_CLASSIFICATION	0.999999918608388	WITHOUT_CLASSIFICATION	8.139161206121045E-8	TEST
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.999999961212173	WITHOUT_CLASSIFICATION	3.87878269664858E-8	TEST
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999995788399505	WITHOUT_CLASSIFICATION	4.2116004946103994E-7	TEST
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999999955993716	WITHOUT_CLASSIFICATION	4.400628453563473E-9	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999999920344232	WITHOUT_CLASSIFICATION	7.965576764152016E-9	TEST
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999998870541478	WITHOUT_CLASSIFICATION	1.1294585225673045E-7	TEST
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999998703922068	WITHOUT_CLASSIFICATION	1.2960779318131354E-7	TEST
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.999999599866208	WITHOUT_CLASSIFICATION	4.0013379199722974E-7	TEST
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999999959437715	WITHOUT_CLASSIFICATION	4.056228502288883E-9	TEST
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999998306127088	WITHOUT_CLASSIFICATION	1.6938729125307325E-7	TEST
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999999964005322	WITHOUT_CLASSIFICATION	3.5994678687039846E-9	TEST
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.999999466949679	WITHOUT_CLASSIFICATION	5.330503209129183E-7	TEST
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999995189342861	WITHOUT_CLASSIFICATION	4.810657140280684E-7	TEST
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999999920511659	WITHOUT_CLASSIFICATION	7.948834188988146E-9	TEST
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999999532207099	WITHOUT_CLASSIFICATION	4.6779290011291874E-8	TEST
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999999624427444	WITHOUT_CLASSIFICATION	3.7557255571300266E-8	TEST
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999999884984926	WITHOUT_CLASSIFICATION	1.1501507339427062E-8	TEST
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999997843859135	WITHOUT_CLASSIFICATION	2.156140863484284E-7	TEST
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999999695545416	WITHOUT_CLASSIFICATION	3.044545843718279E-8	TEST
//FIXME warning	WITHOUT_CLASSIFICATION	0.9999814778368107	WITHOUT_CLASSIFICATION	1.852216318933487E-5	TEST
// FIXME warning	WITHOUT_CLASSIFICATION	0.999994485153667	WITHOUT_CLASSIFICATION	5.5148463330922855E-6	TEST
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9999999967716862	WITHOUT_CLASSIFICATION	3.2283139154710866E-9	TEST
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999999987299353	WITHOUT_CLASSIFICATION	1.2700646713522846E-9	TEST
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999924479679435	WITHOUT_CLASSIFICATION	7.552032056406383E-6	TEST
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999936424747	WITHOUT_CLASSIFICATION	6.3575252020040094E-9	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999998833888093	WITHOUT_CLASSIFICATION	1.1661119076074135E-7	TEST
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999995517156132	WITHOUT_CLASSIFICATION	4.482843868474243E-7	TEST
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999999385598908	WITHOUT_CLASSIFICATION	6.144010922571443E-8	TEST
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999998682709215	WITHOUT_CLASSIFICATION	1.3172907862879617E-7	TEST
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999998974095416	WITHOUT_CLASSIFICATION	1.0259045843252914E-7	TEST
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999999672544099	WITHOUT_CLASSIFICATION	3.274559010730863E-8	TEST
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999999994096255	WITHOUT_CLASSIFICATION	5.903744800729924E-10	TEST
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999999943721077	WITHOUT_CLASSIFICATION	5.627892277428999E-9	TEST
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.999999963676527	WITHOUT_CLASSIFICATION	3.632347308828564E-8	TEST
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999999988492361	WITHOUT_CLASSIFICATION	1.1507639274987181E-9	TEST
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999930475394844	WITHOUT_CLASSIFICATION	6.952460515615626E-6	TEST
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999869899406375	WITHOUT_CLASSIFICATION	1.3010059362576872E-5	TEST
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.999999131849393	WITHOUT_CLASSIFICATION	8.681506070018577E-7	TEST
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999928010473408	WITHOUT_CLASSIFICATION	7.198952659228917E-6	TEST
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999962414964697	WITHOUT_CLASSIFICATION	3.758503530147963E-6	TEST
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9999998128403023	WITHOUT_CLASSIFICATION	1.8715969778146132E-7	TEST
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9999958607014661	WITHOUT_CLASSIFICATION	4.13929853390845E-6	TEST
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999999957506448	WITHOUT_CLASSIFICATION	4.2493551799568906E-9	TEST
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999996387214242	WITHOUT_CLASSIFICATION	3.612785757562491E-7	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999998978967185	WITHOUT_CLASSIFICATION	1.0210328147920891E-7	TEST
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999999520062299	WITHOUT_CLASSIFICATION	4.799377011732566E-8	TEST
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999999588809036	WITHOUT_CLASSIFICATION	4.1119096324976284E-8	TEST
//reopen	WITHOUT_CLASSIFICATION	0.9999856784012829	WITHOUT_CLASSIFICATION	1.4321598717033557E-5	TEST
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999999028685747	WITHOUT_CLASSIFICATION	9.713142534695849E-8	TEST
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999999956026538	WITHOUT_CLASSIFICATION	4.397346162436754E-9	TEST
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999998762814868	WITHOUT_CLASSIFICATION	1.23718513232956E-7	TEST
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999999872011158	WITHOUT_CLASSIFICATION	1.2798884219887877E-8	TEST
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999999983526433	WITHOUT_CLASSIFICATION	1.6473566882226192E-9	TEST
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999999835974677	WITHOUT_CLASSIFICATION	1.6402532389078434E-8	TEST
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999999946859747	WITHOUT_CLASSIFICATION	5.3140254255281E-9	TEST
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999999935650035	WITHOUT_CLASSIFICATION	6.434996588998009E-9	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.999999898330324	WITHOUT_CLASSIFICATION	1.0166967608233982E-7	TEST
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999999875189148	WITHOUT_CLASSIFICATION	1.2481085105811295E-8	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999999926449882	WITHOUT_CLASSIFICATION	7.355011820886307E-9	TEST
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999999896747969	WITHOUT_CLASSIFICATION	1.0325203245451317E-8	TEST
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999997753855868	WITHOUT_CLASSIFICATION	2.246144131279653E-7	TEST
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999998761095601	WITHOUT_CLASSIFICATION	1.2389043990146496E-7	TEST
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999999810453151	WITHOUT_CLASSIFICATION	1.8954685007610113E-8	TEST
// ignore error	WITHOUT_CLASSIFICATION	0.9999999436659402	WITHOUT_CLASSIFICATION	5.633405968931155E-8	TEST
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999854948193132	WITHOUT_CLASSIFICATION	1.4505180686700818E-5	TEST
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999928471215291	WITHOUT_CLASSIFICATION	7.15287847084031E-6	TEST
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999995722341442	WITHOUT_CLASSIFICATION	4.277658559301173E-7	TEST
// odd	WITHOUT_CLASSIFICATION	0.9999983790817011	WITHOUT_CLASSIFICATION	1.6209182988942166E-6	TEST
// JRubyClient	WITHOUT_CLASSIFICATION	0.999999867983798	WITHOUT_CLASSIFICATION	1.3201620204947268E-7	TEST
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999995267157125	WITHOUT_CLASSIFICATION	4.732842875891679E-7	TEST
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.999999934205897	WITHOUT_CLASSIFICATION	6.579410306820131E-8	TEST
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999999799138822	WITHOUT_CLASSIFICATION	2.0086117749055074E-8	TEST
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.999991972620632	WITHOUT_CLASSIFICATION	8.027379368036764E-6	TEST
/*  0! */	WITHOUT_CLASSIFICATION	0.9999907234798348	WITHOUT_CLASSIFICATION	9.27652016527869E-6	TEST
/*  1! */	WITHOUT_CLASSIFICATION	0.9999932432418276	WITHOUT_CLASSIFICATION	6.756758172467049E-6	TEST
/*  2! */	WITHOUT_CLASSIFICATION	0.9999917943500699	WITHOUT_CLASSIFICATION	8.205649930140925E-6	TEST
/*  3! */	WITHOUT_CLASSIFICATION	0.9999901629092236	WITHOUT_CLASSIFICATION	9.837090776417864E-6	TEST
/*  4! */	WITHOUT_CLASSIFICATION	0.9999926345948408	WITHOUT_CLASSIFICATION	7.365405159239292E-6	TEST
/*  5! */	WITHOUT_CLASSIFICATION	0.9999926941180037	WITHOUT_CLASSIFICATION	7.305881996256054E-6	TEST
/*  6! */	WITHOUT_CLASSIFICATION	0.9999927694979461	WITHOUT_CLASSIFICATION	7.230502053929597E-6	TEST
/*  7! */	WITHOUT_CLASSIFICATION	0.9999929711599226	WITHOUT_CLASSIFICATION	7.028840077342777E-6	TEST
/*  8! */	WITHOUT_CLASSIFICATION	0.9999922808051493	WITHOUT_CLASSIFICATION	7.719194850607122E-6	TEST
/*  9! */	WITHOUT_CLASSIFICATION	0.9999916959194491	WITHOUT_CLASSIFICATION	8.304080550940855E-6	TEST
/* 11! */	WITHOUT_CLASSIFICATION	0.9999919159457211	WITHOUT_CLASSIFICATION	8.084054278822863E-6	TEST
/* 12! */	WITHOUT_CLASSIFICATION	0.9999908135835258	WITHOUT_CLASSIFICATION	9.18641647414978E-6	TEST
/* 13! */	WITHOUT_CLASSIFICATION	0.9999894344530957	WITHOUT_CLASSIFICATION	1.056554690423605E-5	TEST
/* 15! */	WITHOUT_CLASSIFICATION	0.9999918247576193	WITHOUT_CLASSIFICATION	8.175242380639816E-6	TEST
/* 16! */	WITHOUT_CLASSIFICATION	0.9999918767523309	WITHOUT_CLASSIFICATION	8.12324766917213E-6	TEST
/* 17! */	WITHOUT_CLASSIFICATION	0.9999921420140797	WITHOUT_CLASSIFICATION	7.857985920335255E-6	TEST
/* 19! */	WITHOUT_CLASSIFICATION	0.9999909639017793	WITHOUT_CLASSIFICATION	9.036098220740074E-6	TEST
/* 20! */	WITHOUT_CLASSIFICATION	0.9999871616880331	WITHOUT_CLASSIFICATION	1.283831196677335E-5	TEST
/* 21! */	WITHOUT_CLASSIFICATION	0.9999910309085958	WITHOUT_CLASSIFICATION	8.969091404226083E-6	TEST
// Static constants	WITHOUT_CLASSIFICATION	0.999999982420886	WITHOUT_CLASSIFICATION	1.75791141362764E-8	TEST
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9999953696081956	WITHOUT_CLASSIFICATION	4.630391804323985E-6	TEST
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.999999553712684	WITHOUT_CLASSIFICATION	4.462873159849115E-7	TEST
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999998693232995	WITHOUT_CLASSIFICATION	1.3067670034527638E-7	TEST
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999995226405631	WITHOUT_CLASSIFICATION	4.773594369059739E-7	TEST
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999999975012085	WITHOUT_CLASSIFICATION	2.498791428796593E-9	TEST
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999999955448406	WITHOUT_CLASSIFICATION	4.455159296338092E-9	TEST
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9999999135470723	WITHOUT_CLASSIFICATION	8.645292760607043E-8	TEST
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999999726833713	WITHOUT_CLASSIFICATION	2.7316628720027513E-8	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999997346624796	WITHOUT_CLASSIFICATION	2.653375204123987E-7	TEST
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9379142131607615	WITHOUT_CLASSIFICATION	0.06208578683923852	TEST
// integer division	WITHOUT_CLASSIFICATION	0.9999999161629707	WITHOUT_CLASSIFICATION	8.383702922504233E-8	TEST
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999967960156124	WITHOUT_CLASSIFICATION	3.2039843876423296E-6	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999998545888759	WITHOUT_CLASSIFICATION	1.4541112416886905E-7	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999998545888759	WITHOUT_CLASSIFICATION	1.4541112416886905E-7	TEST
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.999999987438155	WITHOUT_CLASSIFICATION	1.256184489056253E-8	TEST
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.999998801927193	WITHOUT_CLASSIFICATION	1.1980728069571841E-6	TEST
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999999973258841	WITHOUT_CLASSIFICATION	2.6741159767747952E-9	TEST
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999998853142489	WITHOUT_CLASSIFICATION	1.1468575107928968E-7	TEST
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999999895727748	WITHOUT_CLASSIFICATION	1.042722532810193E-8	TEST
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999996289010414	WITHOUT_CLASSIFICATION	3.7109895857898165E-7	TEST
// sign	WITHOUT_CLASSIFICATION	0.9999995413753908	WITHOUT_CLASSIFICATION	4.5862460914133227E-7	TEST
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999999765681893	WITHOUT_CLASSIFICATION	2.3431810765314802E-8	TEST
// normalize the value	WITHOUT_CLASSIFICATION	0.9999999737533061	WITHOUT_CLASSIFICATION	2.6246693825597215E-8	TEST
// base	WITHOUT_CLASSIFICATION	0.9999997081304497	WITHOUT_CLASSIFICATION	2.918695502920423E-7	TEST
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9996828208809513	WITHOUT_CLASSIFICATION	3.1717911904861727E-4	TEST
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999999905950474	WITHOUT_CLASSIFICATION	9.4049525179799E-9	TEST
// eh?!	WITHOUT_CLASSIFICATION	0.9999978006295223	WITHOUT_CLASSIFICATION	2.199370477742244E-6	TEST
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.999998354128267	WITHOUT_CLASSIFICATION	1.6458717330369891E-6	TEST
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999999683264811	WITHOUT_CLASSIFICATION	3.167351893071247E-8	TEST
// the requested precision	WITHOUT_CLASSIFICATION	0.9999838179939624	WITHOUT_CLASSIFICATION	1.6182006037609593E-5	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.999999746829246	WITHOUT_CLASSIFICATION	2.5317075403165925E-7	TEST
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999999652915154	WITHOUT_CLASSIFICATION	3.4708484669540334E-8	TEST
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999994204352777	WITHOUT_CLASSIFICATION	5.795647222629604E-7	TEST
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999982853054514	WITHOUT_CLASSIFICATION	1.7146945485079457E-6	TEST
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999999090999381	WITHOUT_CLASSIFICATION	9.09000619745001E-8	TEST
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.999999999433506	WITHOUT_CLASSIFICATION	5.664939862917557E-10	TEST
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999995243567787	WITHOUT_CLASSIFICATION	4.7564322120524744E-7	TEST
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999997294452139	WITHOUT_CLASSIFICATION	2.705547861642424E-7	TEST
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999999838062508	WITHOUT_CLASSIFICATION	1.61937492107068E-8	TEST
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999993968710889	WITHOUT_CLASSIFICATION	6.03128911187508E-7	TEST
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999999799724713	WITHOUT_CLASSIFICATION	2.0027528739874234E-8	TEST
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999996121192906	WITHOUT_CLASSIFICATION	3.878807095317603E-7	TEST
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999997692185534	WITHOUT_CLASSIFICATION	2.307814466080508E-7	TEST
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999967431445038	WITHOUT_CLASSIFICATION	3.256855496233011E-6	TEST
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.999999730601136	WITHOUT_CLASSIFICATION	2.693988640604484E-7	TEST
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999995454416407	WITHOUT_CLASSIFICATION	4.545583592198663E-7	TEST
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999963210691682	WITHOUT_CLASSIFICATION	3.6789308318436166E-6	TEST
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999993627521184	WITHOUT_CLASSIFICATION	6.372478815287484E-7	TEST
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999999411647925	WITHOUT_CLASSIFICATION	5.883520750711051E-8	TEST
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999998374105606	WITHOUT_CLASSIFICATION	1.6258943936558583E-7	TEST
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999995623094459	WITHOUT_CLASSIFICATION	4.3769055413673065E-7	TEST
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999999874310634	WITHOUT_CLASSIFICATION	1.256893658264559E-8	TEST
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999999469065782	WITHOUT_CLASSIFICATION	5.3093421758724465E-8	TEST
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999999963423645	WITHOUT_CLASSIFICATION	3.657635398707884E-9	TEST
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.999999950540139	WITHOUT_CLASSIFICATION	4.945986093679105E-8	TEST
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.999999923163693	WITHOUT_CLASSIFICATION	7.68363070764678E-8	TEST
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999999210950978	WITHOUT_CLASSIFICATION	7.890490220483078E-8	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999993338093001	WITHOUT_CLASSIFICATION	6.661907000552197E-7	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999993338093001	WITHOUT_CLASSIFICATION	6.661907000552197E-7	TEST
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999999690124517	WITHOUT_CLASSIFICATION	3.098754821113757E-8	TEST
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999999580334387	WITHOUT_CLASSIFICATION	4.1966561423815017E-8	TEST
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999999337439367	WITHOUT_CLASSIFICATION	6.625606334230319E-8	TEST
//consume the file name	WITHOUT_CLASSIFICATION	0.9999998335917664	WITHOUT_CLASSIFICATION	1.6640823361008232E-7	TEST
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999953053841047	WITHOUT_CLASSIFICATION	4.694615895255538E-6	TEST
// try cwd first	WITHOUT_CLASSIFICATION	0.9999998847468463	WITHOUT_CLASSIFICATION	1.152531537297134E-7	TEST
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999999586798083	WITHOUT_CLASSIFICATION	4.132019171460376E-8	TEST
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.999971816452811	WITHOUT_CLASSIFICATION	2.8183547189074228E-5	TEST
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999998728269285	WITHOUT_CLASSIFICATION	1.2717307154104242E-7	TEST
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999997817231258	WITHOUT_CLASSIFICATION	2.1827687420202713E-7	TEST
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999998302460729	WITHOUT_CLASSIFICATION	1.697539271948184E-7	TEST
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999998514184576	WITHOUT_CLASSIFICATION	1.485815425121954E-7	TEST
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999930498781705	WITHOUT_CLASSIFICATION	6.950121829425821E-6	TEST
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999997209074317	WITHOUT_CLASSIFICATION	2.7909256824543356E-7	TEST
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9996898833167769	WITHOUT_CLASSIFICATION	3.101166832231545E-4	TEST
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9999973823704482	WITHOUT_CLASSIFICATION	2.6176295518128436E-6	TEST
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999968678369588	WITHOUT_CLASSIFICATION	3.1321630412600594E-6	TEST
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999998261259627	WITHOUT_CLASSIFICATION	1.7387403726215213E-7	TEST
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999981605602566	WITHOUT_CLASSIFICATION	1.839439743410471E-6	TEST
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999729225948272	WITHOUT_CLASSIFICATION	2.7077405172717285E-5	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999999698534737	WITHOUT_CLASSIFICATION	3.0146526304569284E-8	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999999698534737	WITHOUT_CLASSIFICATION	3.0146526304569284E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.999999970944616	WITHOUT_CLASSIFICATION	2.9055383965949406E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.999999970944616	WITHOUT_CLASSIFICATION	2.9055383965949406E-8	TEST
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999999734570918	WITHOUT_CLASSIFICATION	2.6542908173162673E-8	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999998603023633	WITHOUT_CLASSIFICATION	1.3969763672271002E-7	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999998423596784	WITHOUT_CLASSIFICATION	1.5764032166806182E-7	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999165455439	WITHOUT_CLASSIFICATION	8.345445610441017E-8	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999998638190045	WITHOUT_CLASSIFICATION	1.3618099551244075E-7	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999924972858	WITHOUT_CLASSIFICATION	7.502714283461198E-9	TEST
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9999995855142239	WITHOUT_CLASSIFICATION	4.1448577616880147E-7	TEST
// Profile	WITHOUT_CLASSIFICATION	0.9999996211687732	WITHOUT_CLASSIFICATION	3.7883122689611963E-7	TEST
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999997769464283	WITHOUT_CLASSIFICATION	2.2305357178248487E-7	TEST
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999998941431701	WITHOUT_CLASSIFICATION	1.058568299172245E-7	TEST
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999998453742771	WITHOUT_CLASSIFICATION	1.5462572287872595E-7	TEST
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999999225809824	WITHOUT_CLASSIFICATION	7.741901772699166E-8	TEST
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999998616880235	WITHOUT_CLASSIFICATION	1.3831197650726563E-7	TEST
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9999678739271017	WITHOUT_CLASSIFICATION	3.2126072898293715E-5	TEST
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999999431105883	WITHOUT_CLASSIFICATION	5.688941179278639E-8	TEST
// reset the state	WITHOUT_CLASSIFICATION	0.999999761931683	WITHOUT_CLASSIFICATION	2.380683169010436E-7	TEST
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9999993401381483	WITHOUT_CLASSIFICATION	6.598618517793986E-7	TEST
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999999153500063	WITHOUT_CLASSIFICATION	8.464999365229001E-8	TEST
//str is frozen	WITHOUT_CLASSIFICATION	0.9999936516311836	WITHOUT_CLASSIFICATION	6.348368816403315E-6	TEST
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.999999605219496	WITHOUT_CLASSIFICATION	3.947805039442937E-7	TEST
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999997219493839	WITHOUT_CLASSIFICATION	2.780506160665605E-7	TEST
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999999628064445	WITHOUT_CLASSIFICATION	3.719355553269499E-8	TEST
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999996926105383	WITHOUT_CLASSIFICATION	3.0738946163649735E-7	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999999478495484	WITHOUT_CLASSIFICATION	5.2150451706265735E-8	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999999920344232	WITHOUT_CLASSIFICATION	7.965576764152016E-9	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999998123221994	WITHOUT_CLASSIFICATION	1.876778005237314E-7	TEST
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999999984980825	WITHOUT_CLASSIFICATION	1.501917419505346E-9	TEST
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999999219409451	WITHOUT_CLASSIFICATION	7.80590547972019E-8	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999996634757062	WITHOUT_CLASSIFICATION	3.3652429375808216E-7	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999999844162724	WITHOUT_CLASSIFICATION	1.5583727745747462E-8	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999999844162724	WITHOUT_CLASSIFICATION	1.5583727745747462E-8	TEST
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999999845288116	WITHOUT_CLASSIFICATION	1.5471188460937476E-8	TEST
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999998018134115	WITHOUT_CLASSIFICATION	1.981865885463831E-7	TEST
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999999626803288	WITHOUT_CLASSIFICATION	3.731967133527764E-8	TEST
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999999263135136	WITHOUT_CLASSIFICATION	7.368648631108528E-8	TEST
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999999932965787	WITHOUT_CLASSIFICATION	6.703421245052633E-9	TEST
// static initializing method	WITHOUT_CLASSIFICATION	0.999999984797595	WITHOUT_CLASSIFICATION	1.520240498101065E-8	TEST
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999999741814487	WITHOUT_CLASSIFICATION	2.5818551224059263E-8	TEST
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999999994035983	WITHOUT_CLASSIFICATION	5.96401742250696E-10	TEST
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999999176272477	WITHOUT_CLASSIFICATION	8.23727522934457E-8	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999997183810106	WITHOUT_CLASSIFICATION	2.8161898927240245E-7	TEST
// self // method name	WITHOUT_CLASSIFICATION	0.9999998639874299	WITHOUT_CLASSIFICATION	1.3601257007883321E-7	TEST
// the default allocator	WITHOUT_CLASSIFICATION	0.9999999929441086	WITHOUT_CLASSIFICATION	7.055891447210477E-9	TEST
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999996663329768	WITHOUT_CLASSIFICATION	3.33667023250636E-7	TEST
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999996657892823	WITHOUT_CLASSIFICATION	3.3421071763996275E-7	TEST
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999999460802173	WITHOUT_CLASSIFICATION	5.391978288531054E-8	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999999754987887	WITHOUT_CLASSIFICATION	2.450121129709161E-7	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999996333005211	WITHOUT_CLASSIFICATION	3.666994788597982E-7	TEST
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.999999953910343	WITHOUT_CLASSIFICATION	4.6089657082396544E-8	TEST
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999999919302122	WITHOUT_CLASSIFICATION	8.069787714735107E-9	TEST
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9998311727008105	WITHOUT_CLASSIFICATION	1.6882729918951214E-4	TEST
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999996484294427	WITHOUT_CLASSIFICATION	3.5157055741534057E-7	TEST
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999984229974815	WITHOUT_CLASSIFICATION	1.5770025184837726E-6	TEST
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999946687106737	WITHOUT_CLASSIFICATION	5.331289326321945E-6	TEST
// a gotcha	WITHOUT_CLASSIFICATION	0.9999996471590552	WITHOUT_CLASSIFICATION	3.528409447411344E-7	TEST
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999999011322438	WITHOUT_CLASSIFICATION	9.88677561502596E-8	TEST
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999998264265167	WITHOUT_CLASSIFICATION	1.735734832832741E-7	TEST
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.999999856859994	WITHOUT_CLASSIFICATION	1.4314000606929253E-7	TEST
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999997227077705	WITHOUT_CLASSIFICATION	2.7729222950185956E-7	TEST
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999999400485617	WITHOUT_CLASSIFICATION	5.99514381882412E-8	TEST
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999996850255415	WITHOUT_CLASSIFICATION	3.149744585065771E-7	TEST
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999999356958166	WITHOUT_CLASSIFICATION	6.43041834577777E-8	TEST
// MRI behavior:	WITHOUT_CLASSIFICATION	0.999999539248868	WITHOUT_CLASSIFICATION	4.6075113195482013E-7	TEST
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999995649739483	WITHOUT_CLASSIFICATION	4.3502605176763014E-7	TEST
// provider is not available	WITHOUT_CLASSIFICATION	0.9999994124721371	WITHOUT_CLASSIFICATION	5.875278629336094E-7	TEST
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999990641736902	WITHOUT_CLASSIFICATION	9.35826309858043E-7	TEST
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999999903686009	WITHOUT_CLASSIFICATION	9.631399232240988E-9	TEST
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999954481318931	WITHOUT_CLASSIFICATION	4.551868106898284E-6	TEST
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999978579967886	WITHOUT_CLASSIFICATION	2.1420032113823798E-6	TEST
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.999999910421876	WITHOUT_CLASSIFICATION	8.957812400248539E-8	TEST
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999998904758988	WITHOUT_CLASSIFICATION	1.0952410129766876E-7	TEST
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999999970571303	WITHOUT_CLASSIFICATION	2.9428698017429983E-9	TEST
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999999706170702	WITHOUT_CLASSIFICATION	2.9382929757911353E-8	TEST
// JRubyService	WITHOUT_CLASSIFICATION	0.9999998778961241	WITHOUT_CLASSIFICATION	1.2210387580270206E-7	TEST
// while	WITHOUT_CLASSIFICATION	0.9999993406425545	WITHOUT_CLASSIFICATION	6.593574454199979E-7	TEST
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999828161858181	WITHOUT_CLASSIFICATION	1.718381418197484E-5	TEST
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999999694141322	WITHOUT_CLASSIFICATION	3.058586778575676E-8	TEST
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999999160871319	WITHOUT_CLASSIFICATION	8.391286800564464E-8	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999904373047	WITHOUT_CLASSIFICATION	9.562695301431145E-9	TEST
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999999823913787	WITHOUT_CLASSIFICATION	1.7608621332010688E-8	TEST
// silent ?	WITHOUT_CLASSIFICATION	0.9999998869468403	WITHOUT_CLASSIFICATION	1.1305315970337721E-7	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999942042773906	WITHOUT_CLASSIFICATION	5.795722609420108E-6	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999936209805339	WITHOUT_CLASSIFICATION	6.379019466016385E-6	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999934473675326	WITHOUT_CLASSIFICATION	6.552632467321574E-6	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999956298827986	WITHOUT_CLASSIFICATION	4.3701172014882365E-6	TEST
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999982102461841	WITHOUT_CLASSIFICATION	1.7897538158465898E-6	TEST
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999928561400052	WITHOUT_CLASSIFICATION	7.14385999470732E-6	TEST
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999972615962669	WITHOUT_CLASSIFICATION	2.7384037331835882E-6	TEST
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999999726078388	WITHOUT_CLASSIFICATION	2.7392161313857315E-8	TEST
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999920932305644	WITHOUT_CLASSIFICATION	7.90676943569E-6	TEST
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999998318734089	WITHOUT_CLASSIFICATION	1.681265911352617E-7	TEST
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999821042199402	WITHOUT_CLASSIFICATION	1.7895780059867344E-5	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999942042773906	WITHOUT_CLASSIFICATION	5.795722609420108E-6	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999934473675326	WITHOUT_CLASSIFICATION	6.552632467321574E-6	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999936209805339	WITHOUT_CLASSIFICATION	6.379019466016385E-6	TEST
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999929800355781	WITHOUT_CLASSIFICATION	7.019964421954356E-6	TEST
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999960889286185	WITHOUT_CLASSIFICATION	3.911071381625617E-6	TEST
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999988357702542	WITHOUT_CLASSIFICATION	1.1642297457549634E-6	TEST
// inner switch	WITHOUT_CLASSIFICATION	0.9999999452057018	WITHOUT_CLASSIFICATION	5.47942982763344E-8	TEST
// newInstance here	WITHOUT_CLASSIFICATION	0.9999999693015917	WITHOUT_CLASSIFICATION	3.069840832176474E-8	TEST
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999997647504528	WITHOUT_CLASSIFICATION	2.352495472085036E-7	TEST
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999997261530083	WITHOUT_CLASSIFICATION	2.73846991814922E-7	TEST
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999999152781547	WITHOUT_CLASSIFICATION	8.472184523255007E-8	TEST
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.99999981842115	WITHOUT_CLASSIFICATION	1.8157885008216609E-7	TEST
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999999840780847	WITHOUT_CLASSIFICATION	1.592191542934663E-8	TEST
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999999930280309	WITHOUT_CLASSIFICATION	6.971969130238865E-9	TEST
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999999684859294	WITHOUT_CLASSIFICATION	3.151407065458078E-8	TEST
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999997731347399	WITHOUT_CLASSIFICATION	2.2686526020422367E-7	TEST
// option_to_str	WITHOUT_CLASSIFICATION	0.9999996662171735	WITHOUT_CLASSIFICATION	3.3378282647024373E-7	TEST
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999999932845576	WITHOUT_CLASSIFICATION	6.715442503093933E-9	TEST
// args should be before block	WITHOUT_CLASSIFICATION	0.9999997176911645	WITHOUT_CLASSIFICATION	2.8230883553033347E-7	TEST
// args should be at end	WITHOUT_CLASSIFICATION	0.9999997813756246	WITHOUT_CLASSIFICATION	2.186243754034239E-7	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.999999576256931	WITHOUT_CLASSIFICATION	4.237430689497048E-7	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.999999576256931	WITHOUT_CLASSIFICATION	4.237430689497048E-7	TEST
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999997704861561	WITHOUT_CLASSIFICATION	2.2951384385834416E-7	TEST
// start a new populator	WITHOUT_CLASSIFICATION	0.9999999217128213	WITHOUT_CLASSIFICATION	7.828717872947416E-8	TEST
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999987584726006	WITHOUT_CLASSIFICATION	1.2415273994296605E-6	TEST
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999933037663704	WITHOUT_CLASSIFICATION	6.6962336294949504E-6	TEST
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999998445922808	WITHOUT_CLASSIFICATION	1.554077192957378E-7	TEST
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999999978954367	WITHOUT_CLASSIFICATION	2.1045632361493365E-9	TEST
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999999919467754	WITHOUT_CLASSIFICATION	8.053224517068018E-9	TEST
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999999412747466	WITHOUT_CLASSIFICATION	5.87252533469252E-8	TEST
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999999463770669	WITHOUT_CLASSIFICATION	5.362293306239074E-8	TEST
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999999974611989	WITHOUT_CLASSIFICATION	2.538800992942093E-9	TEST
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999999342443102	WITHOUT_CLASSIFICATION	6.575568981132935E-8	TEST
//                }	WITHOUT_CLASSIFICATION	0.9999984933187082	WITHOUT_CLASSIFICATION	1.506681291839552E-6	TEST
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999999590022856	WITHOUT_CLASSIFICATION	4.099771436182845E-8	TEST
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999997416650266	WITHOUT_CLASSIFICATION	2.5833497345511207E-7	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999999245914036	WITHOUT_CLASSIFICATION	7.540859634614267E-8	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999999265218763	WITHOUT_CLASSIFICATION	7.34781237463651E-8	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999999642904543	WITHOUT_CLASSIFICATION	3.5709545680395624E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999772951707	WITHOUT_CLASSIFICATION	2.270482933355591E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999772951707	WITHOUT_CLASSIFICATION	2.270482933355591E-8	TEST
// colon3	WITHOUT_CLASSIFICATION	0.9999995445731318	WITHOUT_CLASSIFICATION	4.554268682615154E-7	TEST
// Colon3	WITHOUT_CLASSIFICATION	0.9999991588107212	WITHOUT_CLASSIFICATION	8.411892786797891E-7	TEST
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999953361574111	WITHOUT_CLASSIFICATION	4.66384258895036E-6	TEST
// For b.foo	WITHOUT_CLASSIFICATION	0.9999985696404774	WITHOUT_CLASSIFICATION	1.4303595226137448E-6	TEST
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999999820584008	WITHOUT_CLASSIFICATION	1.7941599177217217E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999772951707	WITHOUT_CLASSIFICATION	2.270482933355591E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999772951707	WITHOUT_CLASSIFICATION	2.270482933355591E-8	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999991172032	WITHOUT_CLASSIFICATION	8.827968351751025E-10	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999991172032	WITHOUT_CLASSIFICATION	8.827968351751025E-10	TEST
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999994852449312	WITHOUT_CLASSIFICATION	5.147550688882023E-7	TEST
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999982666299317	WITHOUT_CLASSIFICATION	1.733370068301636E-6	TEST
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999999948349112	WITHOUT_CLASSIFICATION	5.165088760733393E-9	TEST
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999999508199765	WITHOUT_CLASSIFICATION	4.9180023414882215E-8	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999999945797715	WITHOUT_CLASSIFICATION	5.42022839777595E-9	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999999945797715	WITHOUT_CLASSIFICATION	5.42022839777595E-9	TEST
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999999271700796	WITHOUT_CLASSIFICATION	7.282992043120533E-8	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999992395598483	WITHOUT_CLASSIFICATION	7.60440151777126E-7	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999993614533763	WITHOUT_CLASSIFICATION	6.385466237595943E-7	TEST
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9999996039739016	WITHOUT_CLASSIFICATION	3.960260984057324E-7	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999990833307	WITHOUT_CLASSIFICATION	9.166692432444702E-10	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999998483528698	WITHOUT_CLASSIFICATION	1.516471301291671E-7	TEST
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999992765421	WITHOUT_CLASSIFICATION	7.234578999815201E-7	TEST
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999999728113282	WITHOUT_CLASSIFICATION	2.7188671776496792E-8	TEST
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999998052004316	WITHOUT_CLASSIFICATION	1.9479956838413309E-7	TEST
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999999950772042	WITHOUT_CLASSIFICATION	4.922795780789661E-9	TEST
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.999997916124503	WITHOUT_CLASSIFICATION	2.0838754971165814E-6	TEST
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999999582996364	WITHOUT_CLASSIFICATION	4.1700363605261834E-8	TEST
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999998757274086	WITHOUT_CLASSIFICATION	1.2427259140700758E-7	TEST
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999999637390037	WITHOUT_CLASSIFICATION	3.626099634437636E-8	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999999265218763	WITHOUT_CLASSIFICATION	7.34781237463651E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999772951707	WITHOUT_CLASSIFICATION	2.270482933355591E-8	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999991172032	WITHOUT_CLASSIFICATION	8.827968351751025E-10	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999998483528698	WITHOUT_CLASSIFICATION	1.516471301291671E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999658741177	WITHOUT_CLASSIFICATION	3.4125882455610684E-8	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999658741177	WITHOUT_CLASSIFICATION	3.4125882455610684E-8	TEST
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999998171142822	WITHOUT_CLASSIFICATION	1.828857178490875E-7	TEST
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999999619189441	WITHOUT_CLASSIFICATION	3.808105581380025E-8	TEST
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999999979497965	WITHOUT_CLASSIFICATION	2.0502035539295084E-9	TEST
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999999973765833	WITHOUT_CLASSIFICATION	2.6234167168333672E-9	TEST
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999993312888968	WITHOUT_CLASSIFICATION	6.687111031040054E-7	TEST
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999999060345571	WITHOUT_CLASSIFICATION	9.396544289525137E-8	TEST
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999998239519845	WITHOUT_CLASSIFICATION	1.760480155473779E-7	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999980853312123	WITHOUT_CLASSIFICATION	1.9146687878374835E-6	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999951616957	WITHOUT_CLASSIFICATION	4.838304278378653E-9	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.999999936253991	WITHOUT_CLASSIFICATION	6.374600901461072E-8	TEST
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999994175682655	WITHOUT_CLASSIFICATION	5.824317344167529E-7	TEST
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999999892021261	WITHOUT_CLASSIFICATION	1.0797873983886328E-8	TEST
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999999579653226	WITHOUT_CLASSIFICATION	4.203467744780709E-8	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999999642904543	WITHOUT_CLASSIFICATION	3.5709545680395624E-8	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999991172032	WITHOUT_CLASSIFICATION	8.827968351751025E-10	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999992395598483	WITHOUT_CLASSIFICATION	7.60440151777126E-7	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999993614533763	WITHOUT_CLASSIFICATION	6.385466237595943E-7	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999993614533763	WITHOUT_CLASSIFICATION	6.385466237595943E-7	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999990833307	WITHOUT_CLASSIFICATION	9.166692432444702E-10	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999998483528698	WITHOUT_CLASSIFICATION	1.516471301291671E-7	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999998483528698	WITHOUT_CLASSIFICATION	1.516471301291671E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999658741177	WITHOUT_CLASSIFICATION	3.4125882455610684E-8	TEST
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999998002103763	WITHOUT_CLASSIFICATION	1.9978962386753975E-7	TEST
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999988156406766	WITHOUT_CLASSIFICATION	1.1843593234550053E-6	TEST
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999794879281	WITHOUT_CLASSIFICATION	2.0512071994063406E-8	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999966445937015	WITHOUT_CLASSIFICATION	3.3554062984991996E-6	TEST
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999995435795751	WITHOUT_CLASSIFICATION	4.5642042479925755E-7	TEST
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999649866974529	WITHOUT_CLASSIFICATION	3.501330254705617E-5	TEST
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999999405603992	WITHOUT_CLASSIFICATION	5.94396007817216E-8	TEST
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999999997674371	WITHOUT_CLASSIFICATION	2.3256281889149306E-10	TEST
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999999766055031	WITHOUT_CLASSIFICATION	2.3394496857468393E-8	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999992395598483	WITHOUT_CLASSIFICATION	7.60440151777126E-7	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999993614533763	WITHOUT_CLASSIFICATION	6.385466237595943E-7	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999993614533763	WITHOUT_CLASSIFICATION	6.385466237595943E-7	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999990833307	WITHOUT_CLASSIFICATION	9.166692432444702E-10	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999980853312123	WITHOUT_CLASSIFICATION	1.9146687878374835E-6	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.999999936253991	WITHOUT_CLASSIFICATION	6.374600901461072E-8	TEST
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9991563142229184	WITHOUT_CLASSIFICATION	8.436857770816314E-4	TEST
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999999131303191	WITHOUT_CLASSIFICATION	8.686968091827306E-8	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.999998365639972	WITHOUT_CLASSIFICATION	1.6343600279515552E-6	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.999998365639972	WITHOUT_CLASSIFICATION	1.6343600279515552E-6	TEST
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999997908480717	WITHOUT_CLASSIFICATION	2.091519283500104E-7	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.999999861041822	WITHOUT_CLASSIFICATION	1.3895817802574337E-7	TEST
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999999262653662	WITHOUT_CLASSIFICATION	7.37346338047955E-8	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999999694313895	WITHOUT_CLASSIFICATION	3.0568610512140434E-8	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.999999873780008	WITHOUT_CLASSIFICATION	1.2621999193209183E-7	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.999999873780008	WITHOUT_CLASSIFICATION	1.2621999193209183E-7	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.999999909233435	WITHOUT_CLASSIFICATION	9.076656513964281E-8	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.999999909233435	WITHOUT_CLASSIFICATION	9.076656513964281E-8	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999999874452352	WITHOUT_CLASSIFICATION	1.2554764877746317E-8	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999999874452352	WITHOUT_CLASSIFICATION	1.2554764877746317E-8	TEST
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999997749578077	WITHOUT_CLASSIFICATION	2.2504219236758913E-7	TEST
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999999001523217	WITHOUT_CLASSIFICATION	9.984767835235024E-8	TEST
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999979821092374	WITHOUT_CLASSIFICATION	2.0178907625752628E-6	TEST
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999999828488024	WITHOUT_CLASSIFICATION	1.715119758303075E-8	TEST
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999999964471518	WITHOUT_CLASSIFICATION	3.5528482638695293E-9	TEST
// pragmas	WITHOUT_CLASSIFICATION	0.9999992634315507	WITHOUT_CLASSIFICATION	7.365684492859141E-7	TEST
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999998399599184	WITHOUT_CLASSIFICATION	1.6004008165591264E-7	TEST
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999999060138419	WITHOUT_CLASSIFICATION	9.398615803208869E-8	TEST
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999963269549526	WITHOUT_CLASSIFICATION	3.6730450474330658E-6	TEST
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999974909333076	WITHOUT_CLASSIFICATION	2.5090666923048587E-6	TEST
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999999846138662	WITHOUT_CLASSIFICATION	1.5386133801831867E-8	TEST
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999999717764548	WITHOUT_CLASSIFICATION	2.8223545246188236E-8	TEST
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999996676510312	WITHOUT_CLASSIFICATION	3.3234896878661E-7	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999986307227225	WITHOUT_CLASSIFICATION	1.3692772774802635E-6	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999986307227225	WITHOUT_CLASSIFICATION	1.3692772774802635E-6	TEST
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999993317022183	WITHOUT_CLASSIFICATION	6.682977816044878E-7	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999924972858	WITHOUT_CLASSIFICATION	7.502714283461198E-9	TEST
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.999999952476547	WITHOUT_CLASSIFICATION	4.752345293472317E-8	TEST
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999999957384236	WITHOUT_CLASSIFICATION	4.26157635473562E-9	TEST
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999999387310281	WITHOUT_CLASSIFICATION	6.126897185554498E-8	TEST
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999997475691477	WITHOUT_CLASSIFICATION	2.524308523487528E-7	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999999246323297	WITHOUT_CLASSIFICATION	7.536767027622664E-8	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999999253703948	WITHOUT_CLASSIFICATION	7.462960512522425E-8	TEST
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999999972498462	WITHOUT_CLASSIFICATION	2.7501537930639355E-9	TEST
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999999610624031	WITHOUT_CLASSIFICATION	3.8937596843688085E-8	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999999879320629	WITHOUT_CLASSIFICATION	1.2067937069242524E-8	TEST
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999990771746812	WITHOUT_CLASSIFICATION	9.228253187989804E-7	TEST
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999999337278872	WITHOUT_CLASSIFICATION	6.627211278189453E-8	TEST
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999987951544475	WITHOUT_CLASSIFICATION	1.2048455525231103E-6	TEST
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999792205862663	WITHOUT_CLASSIFICATION	2.0779413733673124E-5	TEST
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999996914009773	WITHOUT_CLASSIFICATION	3.085990226417248E-7	TEST
// can't do it	WITHOUT_CLASSIFICATION	0.9999998874749798	WITHOUT_CLASSIFICATION	1.1252502022336291E-7	TEST
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999999849425851	WITHOUT_CLASSIFICATION	1.5057414828887258E-8	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999618071893	WITHOUT_CLASSIFICATION	3.819281069717118E-8	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999618071893	WITHOUT_CLASSIFICATION	3.819281069717118E-8	TEST
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999999687765273	WITHOUT_CLASSIFICATION	3.1223472738853214E-8	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999961642673404	WITHOUT_CLASSIFICATION	3.8357326595202785E-6	TEST
//[]	WITHOUT_CLASSIFICATION	0.9999394533397674	WITHOUT_CLASSIFICATION	6.054666023249896E-5	TEST
//[]	WITHOUT_CLASSIFICATION	0.9999394533397674	WITHOUT_CLASSIFICATION	6.054666023249896E-5	TEST
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999996166264129	WITHOUT_CLASSIFICATION	3.83373587182075E-7	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999969867760192	WITHOUT_CLASSIFICATION	3.0132239807904024E-6	TEST
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9999930372139764	WITHOUT_CLASSIFICATION	6.9627860236084274E-6	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999926168344108	WITHOUT_CLASSIFICATION	7.383165589131489E-6	TEST
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999999166802213	WITHOUT_CLASSIFICATION	8.331977879701902E-8	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999999848897436	WITHOUT_CLASSIFICATION	1.5110256405400616E-8	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999999848897436	WITHOUT_CLASSIFICATION	1.5110256405400616E-8	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999999987527289	WITHOUT_CLASSIFICATION	1.2472710668014197E-9	TEST
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999998699796557	WITHOUT_CLASSIFICATION	1.3002034438781353E-7	TEST
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999999678953342	WITHOUT_CLASSIFICATION	3.210466588912881E-8	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999966223356103	WITHOUT_CLASSIFICATION	3.3776643896751426E-6	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999961642673404	WITHOUT_CLASSIFICATION	3.8357326595202785E-6	TEST
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999971325606396	WITHOUT_CLASSIFICATION	2.8674393604625985E-6	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999992727737225	WITHOUT_CLASSIFICATION	7.272262775877295E-7	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999992727737225	WITHOUT_CLASSIFICATION	7.272262775877295E-7	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.999999366382928	WITHOUT_CLASSIFICATION	6.33617072069373E-7	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999862319977	WITHOUT_CLASSIFICATION	1.3768002296204965E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999862319977	WITHOUT_CLASSIFICATION	1.3768002296204965E-8	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999999894935638	WITHOUT_CLASSIFICATION	1.050643626441098E-8	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999999894935638	WITHOUT_CLASSIFICATION	1.050643626441098E-8	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999999894935638	WITHOUT_CLASSIFICATION	1.050643626441098E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999862319977	WITHOUT_CLASSIFICATION	1.3768002296204965E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999862319977	WITHOUT_CLASSIFICATION	1.3768002296204965E-8	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.999999366382928	WITHOUT_CLASSIFICATION	6.33617072069373E-7	TEST
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999999659652659	WITHOUT_CLASSIFICATION	3.403473412375982E-8	TEST
// always false or nil	WITHOUT_CLASSIFICATION	0.999999931153486	WITHOUT_CLASSIFICATION	6.884651405379188E-8	TEST
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999998813679661	WITHOUT_CLASSIFICATION	1.186320339014602E-7	TEST
// normal	WITHOUT_CLASSIFICATION	0.9999998229734312	WITHOUT_CLASSIFICATION	1.770265687940742E-7	TEST
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999999977489212	WITHOUT_CLASSIFICATION	2.2510788156916233E-9	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999992983560941	WITHOUT_CLASSIFICATION	7.016439059805617E-7	TEST
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.999999677454821	WITHOUT_CLASSIFICATION	3.225451789912276E-7	TEST
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999999871121051	WITHOUT_CLASSIFICATION	1.2887894910871404E-8	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999999879320629	WITHOUT_CLASSIFICATION	1.2067937069242524E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999862319977	WITHOUT_CLASSIFICATION	1.3768002296204965E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999862319977	WITHOUT_CLASSIFICATION	1.3768002296204965E-8	TEST
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.999999984029137	WITHOUT_CLASSIFICATION	1.5970862974355817E-8	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999999345737652	WITHOUT_CLASSIFICATION	6.542623480321278E-8	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999996240899343	WITHOUT_CLASSIFICATION	3.75910065836526E-7	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.999999980375693	WITHOUT_CLASSIFICATION	1.9624306995138563E-8	TEST
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999999205595643	WITHOUT_CLASSIFICATION	7.944043558224107E-8	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999999693729205	WITHOUT_CLASSIFICATION	3.0627079549196975E-8	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999929278749	WITHOUT_CLASSIFICATION	7.072125119390899E-9	TEST
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999999435049521	WITHOUT_CLASSIFICATION	5.649504795829532E-8	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999997595040712	WITHOUT_CLASSIFICATION	2.404959289068466E-7	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999836016766	WITHOUT_CLASSIFICATION	1.6398323370821862E-8	TEST
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999929388216499	WITHOUT_CLASSIFICATION	7.061178350067185E-6	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.9999981686534976	WITHOUT_CLASSIFICATION	1.8313465023700459E-6	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999999558079281	WITHOUT_CLASSIFICATION	4.419207174338399E-8	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999999198512918	WITHOUT_CLASSIFICATION	8.014870824099014E-8	TEST
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999999985532481	WITHOUT_CLASSIFICATION	1.4467520259652786E-9	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999995992860974	WITHOUT_CLASSIFICATION	4.007139026351609E-7	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999995992860974	WITHOUT_CLASSIFICATION	4.007139026351609E-7	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999995992860974	WITHOUT_CLASSIFICATION	4.007139026351609E-7	TEST
// compile into array	WITHOUT_CLASSIFICATION	0.9999999954654506	WITHOUT_CLASSIFICATION	4.534549369882814E-9	TEST
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999999983022472	WITHOUT_CLASSIFICATION	1.6977528333201006E-9	TEST
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999999841676596	WITHOUT_CLASSIFICATION	1.5832340408884054E-8	TEST
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999999752863927	WITHOUT_CLASSIFICATION	2.4713607312327216E-8	TEST
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999999883099565	WITHOUT_CLASSIFICATION	1.169004338813953E-8	TEST
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999997014289961	WITHOUT_CLASSIFICATION	2.9857100401581696E-7	TEST
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999999998089313	WITHOUT_CLASSIFICATION	1.910686777406322E-10	TEST
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999996914033192	WITHOUT_CLASSIFICATION	3.0859668081908157E-7	TEST
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999999456430025	WITHOUT_CLASSIFICATION	5.435699740407069E-8	TEST
// leave as a normal array	WITHOUT_CLASSIFICATION	0.999999890550172	WITHOUT_CLASSIFICATION	1.0944982788639809E-7	TEST
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.999999359794708	WITHOUT_CLASSIFICATION	6.40205292059231E-7	TEST
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999994750630968	WITHOUT_CLASSIFICATION	5.249369032623194E-7	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999999987527289	WITHOUT_CLASSIFICATION	1.2472710668014197E-9	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999862319977	WITHOUT_CLASSIFICATION	1.3768002296204965E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999862319977	WITHOUT_CLASSIFICATION	1.3768002296204965E-8	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.999999366382928	WITHOUT_CLASSIFICATION	6.33617072069373E-7	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999992983560941	WITHOUT_CLASSIFICATION	7.016439059805617E-7	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999999345737652	WITHOUT_CLASSIFICATION	6.542623480321278E-8	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.999999980375693	WITHOUT_CLASSIFICATION	1.9624306995138563E-8	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999999693729205	WITHOUT_CLASSIFICATION	3.0627079549196975E-8	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999996240899343	WITHOUT_CLASSIFICATION	3.75910065836526E-7	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999929278749	WITHOUT_CLASSIFICATION	7.072125119390899E-9	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999836016766	WITHOUT_CLASSIFICATION	1.6398323370821862E-8	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999997595040712	WITHOUT_CLASSIFICATION	2.404959289068466E-7	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.9999981686534976	WITHOUT_CLASSIFICATION	1.8313465023700459E-6	TEST
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999999441721341	WITHOUT_CLASSIFICATION	5.5827865856491885E-8	TEST
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.999999918181154	WITHOUT_CLASSIFICATION	8.181884601337867E-8	TEST
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999994908373565	WITHOUT_CLASSIFICATION	5.091626435561639E-7	TEST
// finally, grab the script	WITHOUT_CLASSIFICATION	0.999999974983366	WITHOUT_CLASSIFICATION	2.5016634060643943E-8	TEST
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999999826207558	WITHOUT_CLASSIFICATION	1.7379244108098713E-8	TEST
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999998591550708	WITHOUT_CLASSIFICATION	1.4084492918939947E-7	TEST
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999999137517379	WITHOUT_CLASSIFICATION	8.624826210419616E-8	TEST
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999997601766016	WITHOUT_CLASSIFICATION	2.398233984443288E-7	TEST
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999999619544411	WITHOUT_CLASSIFICATION	3.804555898004119E-8	TEST
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999999407995601	WITHOUT_CLASSIFICATION	5.920043986780177E-8	TEST
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.999999978070088	WITHOUT_CLASSIFICATION	2.192991197466136E-8	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999878486162	WITHOUT_CLASSIFICATION	1.215138374827615E-8	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999995005283551	WITHOUT_CLASSIFICATION	4.994716448219608E-7	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999999441694294	WITHOUT_CLASSIFICATION	5.5830570506579205E-8	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.999999998706194	WITHOUT_CLASSIFICATION	1.2938059490181236E-9	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.999999957100858	WITHOUT_CLASSIFICATION	4.2899141915850974E-8	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999993154117127	WITHOUT_CLASSIFICATION	6.84588287326846E-7	TEST
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999999602994021	WITHOUT_CLASSIFICATION	3.970059791599944E-8	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999999958357386	WITHOUT_CLASSIFICATION	4.164261440712298E-9	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999999802169541	WITHOUT_CLASSIFICATION	1.9783045908809036E-8	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999999875292797	WITHOUT_CLASSIFICATION	1.2470720323228366E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999925819352	WITHOUT_CLASSIFICATION	7.418064748169088E-9	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999925819352	WITHOUT_CLASSIFICATION	7.418064748169088E-9	TEST
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999995822916811	WITHOUT_CLASSIFICATION	4.177083189036668E-7	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999999930910087	WITHOUT_CLASSIFICATION	6.908991215280092E-9	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999890188368848	WITHOUT_CLASSIFICATION	1.0981163115107366E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999890188368848	WITHOUT_CLASSIFICATION	1.0981163115107366E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999890188368848	WITHOUT_CLASSIFICATION	1.0981163115107366E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999826155446473	WITHOUT_CLASSIFICATION	1.7384455352680348E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999826155446473	WITHOUT_CLASSIFICATION	1.7384455352680348E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999826155446473	WITHOUT_CLASSIFICATION	1.7384455352680348E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999826155446473	WITHOUT_CLASSIFICATION	1.7384455352680348E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999679438119834	WITHOUT_CLASSIFICATION	3.205618801663734E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999679438119834	WITHOUT_CLASSIFICATION	3.205618801663734E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999679438119834	WITHOUT_CLASSIFICATION	3.205618801663734E-5	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999738551415946	WITHOUT_CLASSIFICATION	2.6144858405343205E-5	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999738551415946	WITHOUT_CLASSIFICATION	2.6144858405343205E-5	TEST
/*arg2*/	WITHOUT_CLASSIFICATION	0.9999676258434429	WITHOUT_CLASSIFICATION	3.237415655703455E-5	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9999777801098281	WITHOUT_CLASSIFICATION	2.2219890171850642E-5	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999999930910087	WITHOUT_CLASSIFICATION	6.908991215280092E-9	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999999556416385	WITHOUT_CLASSIFICATION	4.435836160985226E-8	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999890188368848	WITHOUT_CLASSIFICATION	1.0981163115107366E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999890188368848	WITHOUT_CLASSIFICATION	1.0981163115107366E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999826155446473	WITHOUT_CLASSIFICATION	1.7384455352680348E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999826155446473	WITHOUT_CLASSIFICATION	1.7384455352680348E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999826155446473	WITHOUT_CLASSIFICATION	1.7384455352680348E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999679438119834	WITHOUT_CLASSIFICATION	3.205618801663734E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999679438119834	WITHOUT_CLASSIFICATION	3.205618801663734E-5	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999738551415946	WITHOUT_CLASSIFICATION	2.6144858405343205E-5	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9999777801098281	WITHOUT_CLASSIFICATION	2.2219890171850642E-5	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999999883653073	WITHOUT_CLASSIFICATION	1.1634692581733565E-8	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999999883653073	WITHOUT_CLASSIFICATION	1.1634692581733565E-8	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999766325356	WITHOUT_CLASSIFICATION	2.336746434657841E-8	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999766325356	WITHOUT_CLASSIFICATION	2.336746434657841E-8	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9999993993476527	WITHOUT_CLASSIFICATION	6.006523473143279E-7	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9999993993476527	WITHOUT_CLASSIFICATION	6.006523473143279E-7	TEST
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999998213877344	WITHOUT_CLASSIFICATION	1.7861226556412293E-7	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999999381699642	WITHOUT_CLASSIFICATION	6.183003570830904E-8	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999999381699642	WITHOUT_CLASSIFICATION	6.183003570830904E-8	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999999818091918	WITHOUT_CLASSIFICATION	1.819080820747692E-8	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999999818091918	WITHOUT_CLASSIFICATION	1.819080820747692E-8	TEST
// eval value for assignment	WITHOUT_CLASSIFICATION	0.999999923972136	WITHOUT_CLASSIFICATION	7.602786399658416E-8	TEST
// call site	WITHOUT_CLASSIFICATION	0.9999999683288794	WITHOUT_CLASSIFICATION	3.167112062816135E-8	TEST
// call site	WITHOUT_CLASSIFICATION	0.9999999683288794	WITHOUT_CLASSIFICATION	3.167112062816135E-8	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999999824667334	WITHOUT_CLASSIFICATION	1.753326671426362E-8	TEST
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999997896018691	WITHOUT_CLASSIFICATION	2.1039813096264047E-7	TEST
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999999657688489	WITHOUT_CLASSIFICATION	3.423115113816064E-8	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999826155446473	WITHOUT_CLASSIFICATION	1.7384455352680348E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999826155446473	WITHOUT_CLASSIFICATION	1.7384455352680348E-5	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999999824667334	WITHOUT_CLASSIFICATION	1.753326671426362E-8	TEST
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999998974233997	WITHOUT_CLASSIFICATION	1.0257660026271138E-7	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999998022422405	WITHOUT_CLASSIFICATION	1.9775775952972608E-7	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999998022422405	WITHOUT_CLASSIFICATION	1.9775775952972608E-7	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999998022422405	WITHOUT_CLASSIFICATION	1.9775775952972608E-7	TEST
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.999999964356015	WITHOUT_CLASSIFICATION	3.5643984928237314E-8	TEST
// args	WITHOUT_CLASSIFICATION	0.9999996326810185	WITHOUT_CLASSIFICATION	3.673189814856609E-7	TEST
// block	WITHOUT_CLASSIFICATION	0.9999996260268498	WITHOUT_CLASSIFICATION	3.739731502010423E-7	TEST
// block	WITHOUT_CLASSIFICATION	0.9999996260268498	WITHOUT_CLASSIFICATION	3.739731502010423E-7	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.999999979309246	WITHOUT_CLASSIFICATION	2.0690754002487568E-8	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999998920285279	WITHOUT_CLASSIFICATION	1.0797147205163995E-7	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.9999998920544645	WITHOUT_CLASSIFICATION	1.0794553546689099E-7	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.9999996749485487	WITHOUT_CLASSIFICATION	3.2505145129318053E-7	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999999285675755	WITHOUT_CLASSIFICATION	7.143242454499691E-8	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999999710269146	WITHOUT_CLASSIFICATION	2.897308537534472E-8	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999999710269146	WITHOUT_CLASSIFICATION	2.897308537534472E-8	TEST
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999999967340228	WITHOUT_CLASSIFICATION	3.2659771156461104E-9	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9999702794043396	WITHOUT_CLASSIFICATION	2.9720595660480176E-5	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9999702794043396	WITHOUT_CLASSIFICATION	2.9720595660480176E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999826155446473	WITHOUT_CLASSIFICATION	1.7384455352680348E-5	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999998022422405	WITHOUT_CLASSIFICATION	1.9775775952972608E-7	TEST
// args	WITHOUT_CLASSIFICATION	0.9999996326810185	WITHOUT_CLASSIFICATION	3.673189814856609E-7	TEST
// block	WITHOUT_CLASSIFICATION	0.9999996260268498	WITHOUT_CLASSIFICATION	3.739731502010423E-7	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.999999979309246	WITHOUT_CLASSIFICATION	2.0690754002487568E-8	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999998920285279	WITHOUT_CLASSIFICATION	1.0797147205163995E-7	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.9999998920544645	WITHOUT_CLASSIFICATION	1.0794553546689099E-7	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.9999996749485487	WITHOUT_CLASSIFICATION	3.2505145129318053E-7	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9999702794043396	WITHOUT_CLASSIFICATION	2.9720595660480176E-5	TEST
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999998575960046	WITHOUT_CLASSIFICATION	1.4240399541877994E-7	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999999469041193	WITHOUT_CLASSIFICATION	5.3095880702247424E-8	TEST
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999999115036858	WITHOUT_CLASSIFICATION	8.849631416363135E-8	TEST
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999999832736923	WITHOUT_CLASSIFICATION	1.672630759987413E-8	TEST
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999999137673298	WITHOUT_CLASSIFICATION	8.623267011428353E-8	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999997232472702	WITHOUT_CLASSIFICATION	2.7675272982225706E-7	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999998719203289	WITHOUT_CLASSIFICATION	1.2807967106432756E-7	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999998719203289	WITHOUT_CLASSIFICATION	1.2807967106432756E-7	TEST
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999999485812524	WITHOUT_CLASSIFICATION	5.141874750627726E-8	TEST
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999999724438089	WITHOUT_CLASSIFICATION	2.7556191104783048E-8	TEST
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.999999975546463	WITHOUT_CLASSIFICATION	2.4453536916584513E-8	TEST
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999999852549536	WITHOUT_CLASSIFICATION	1.4745046464873119E-8	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999999781057878	WITHOUT_CLASSIFICATION	2.1894212244748197E-8	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999999781057878	WITHOUT_CLASSIFICATION	2.1894212244748197E-8	TEST
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999999853100131	WITHOUT_CLASSIFICATION	1.4689986784593563E-8	TEST
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999999779333846	WITHOUT_CLASSIFICATION	2.206661545754182E-8	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.999999976522548	WITHOUT_CLASSIFICATION	2.347745208339918E-8	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.999999976522548	WITHOUT_CLASSIFICATION	2.347745208339918E-8	TEST
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999998230654037	WITHOUT_CLASSIFICATION	1.7693459633867684E-7	TEST
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999999885826762	WITHOUT_CLASSIFICATION	1.1417323701090371E-8	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999999285675755	WITHOUT_CLASSIFICATION	7.143242454499691E-8	TEST
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999999571107184	WITHOUT_CLASSIFICATION	4.2889281455380094E-8	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999786248224	WITHOUT_CLASSIFICATION	2.137517756561001E-8	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999999127707281	WITHOUT_CLASSIFICATION	8.722927185308636E-8	TEST
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999999449271882	WITHOUT_CLASSIFICATION	5.5072811849022895E-8	TEST
// load Object under value	WITHOUT_CLASSIFICATION	0.9999998837726056	WITHOUT_CLASSIFICATION	1.1622739424425631E-7	TEST
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999999010762919	WITHOUT_CLASSIFICATION	9.892370805236995E-8	TEST
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999999944469155	WITHOUT_CLASSIFICATION	5.55308464298924E-9	TEST
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999999088134485	WITHOUT_CLASSIFICATION	9.118655158212175E-8	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999999991260629	WITHOUT_CLASSIFICATION	8.73937246270744E-10	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999999991260629	WITHOUT_CLASSIFICATION	8.73937246270744E-10	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999999622548915	WITHOUT_CLASSIFICATION	3.774510853359708E-8	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999999622548915	WITHOUT_CLASSIFICATION	3.774510853359708E-8	TEST
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999999942604705	WITHOUT_CLASSIFICATION	5.73952945664577E-9	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999999284545916	WITHOUT_CLASSIFICATION	7.154540834141321E-8	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999999284545916	WITHOUT_CLASSIFICATION	7.154540834141321E-8	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999999284545916	WITHOUT_CLASSIFICATION	7.154540834141321E-8	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999994344204556	WITHOUT_CLASSIFICATION	5.655795444068663E-7	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999999574738792	WITHOUT_CLASSIFICATION	4.252612075356283E-8	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999999574738792	WITHOUT_CLASSIFICATION	4.252612075356283E-8	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.999999801789812	WITHOUT_CLASSIFICATION	1.9821018790023913E-7	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.9999999803847123	WITHOUT_CLASSIFICATION	1.9615287761908653E-8	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999997475021197	WITHOUT_CLASSIFICATION	2.52497880331349E-7	TEST
// skip catch block	WITHOUT_CLASSIFICATION	0.9999999321834806	WITHOUT_CLASSIFICATION	6.781651937349584E-8	TEST
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.999999909609745	WITHOUT_CLASSIFICATION	9.039025502797133E-8	TEST
// next jump	WITHOUT_CLASSIFICATION	0.9999998647992877	WITHOUT_CLASSIFICATION	1.3520071223637845E-7	TEST
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999788519499412	WITHOUT_CLASSIFICATION	2.11480500588489E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999995005283551	WITHOUT_CLASSIFICATION	4.994716448219608E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999995005283551	WITHOUT_CLASSIFICATION	4.994716448219608E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999994344204556	WITHOUT_CLASSIFICATION	5.655795444068663E-7	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.999999801789812	WITHOUT_CLASSIFICATION	1.9821018790023913E-7	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999999269476872	WITHOUT_CLASSIFICATION	7.30523127063625E-8	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.9999999803847123	WITHOUT_CLASSIFICATION	1.9615287761908653E-8	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999997475021197	WITHOUT_CLASSIFICATION	2.52497880331349E-7	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999999951074571	WITHOUT_CLASSIFICATION	4.8925428182913525E-9	TEST
// break jump	WITHOUT_CLASSIFICATION	0.9999998987836706	WITHOUT_CLASSIFICATION	1.0121632934516746E-7	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999997359363709	WITHOUT_CLASSIFICATION	2.640636290852049E-7	TEST
//[reg]	WITHOUT_CLASSIFICATION	0.9999758346813189	WITHOUT_CLASSIFICATION	2.416531868115536E-5	TEST
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.999999390105615	WITHOUT_CLASSIFICATION	6.098943850815181E-7	TEST
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999999949647054	WITHOUT_CLASSIFICATION	5.035294612668654E-9	TEST
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999999983543117	WITHOUT_CLASSIFICATION	1.6456882336392807E-9	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999999951074571	WITHOUT_CLASSIFICATION	4.8925428182913525E-9	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999935963791409	WITHOUT_CLASSIFICATION	6.403620859190578E-6	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999935963791409	WITHOUT_CLASSIFICATION	6.403620859190578E-6	TEST
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.99999941136668	WITHOUT_CLASSIFICATION	5.886333198877713E-7	TEST
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999999893106059	WITHOUT_CLASSIFICATION	1.0689394242276085E-8	TEST
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999997804534373	WITHOUT_CLASSIFICATION	2.195465626614119E-7	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999994884978562	WITHOUT_CLASSIFICATION	5.115021438388734E-7	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999994389249436	WITHOUT_CLASSIFICATION	5.610750564525644E-7	TEST
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999999221873818	WITHOUT_CLASSIFICATION	7.781261829330627E-8	TEST
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999998821948894	WITHOUT_CLASSIFICATION	1.1780511051619819E-7	TEST
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999999700509502	WITHOUT_CLASSIFICATION	2.994904987683535E-8	TEST
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999999923169386	WITHOUT_CLASSIFICATION	7.683061411588392E-9	TEST
// false // zero	WITHOUT_CLASSIFICATION	0.9999998427389853	WITHOUT_CLASSIFICATION	1.5726101462302428E-7	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999999364018486	WITHOUT_CLASSIFICATION	6.359815139102631E-7	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999994884978562	WITHOUT_CLASSIFICATION	5.115021438388734E-7	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999994389249436	WITHOUT_CLASSIFICATION	5.610750564525644E-7	TEST
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999999897595372	WITHOUT_CLASSIFICATION	1.024046287334673E-8	TEST
// push false	WITHOUT_CLASSIFICATION	0.9999997677850216	WITHOUT_CLASSIFICATION	2.3221497821802357E-7	TEST
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999998314915983	WITHOUT_CLASSIFICATION	1.6850840159898847E-7	TEST
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999986180724831	WITHOUT_CLASSIFICATION	1.3819275168116887E-6	TEST
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999986061250346	WITHOUT_CLASSIFICATION	1.393874965430851E-6	TEST
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999975706773835	WITHOUT_CLASSIFICATION	2.4293226165674833E-6	TEST
//[C]	WITHOUT_CLASSIFICATION	0.9999457171295759	WITHOUT_CLASSIFICATION	5.428287042416795E-5	TEST
// push true	WITHOUT_CLASSIFICATION	0.9999996174481003	WITHOUT_CLASSIFICATION	3.825518996732762E-7	TEST
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.99999880346673	WITHOUT_CLASSIFICATION	1.1965332700393045E-6	TEST
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999960503090529	WITHOUT_CLASSIFICATION	3.949690947070995E-6	TEST
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999987299606503	WITHOUT_CLASSIFICATION	1.2700393496580491E-6	TEST
//[boolean]	WITHOUT_CLASSIFICATION	0.9999931262310414	WITHOUT_CLASSIFICATION	6.873768958646992E-6	TEST
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999999618479426	WITHOUT_CLASSIFICATION	3.815205749831497E-8	TEST
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999999185396067	WITHOUT_CLASSIFICATION	8.146039332199703E-8	TEST
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.999998742011384	WITHOUT_CLASSIFICATION	1.2579886160306413E-6	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.999999988446609	WITHOUT_CLASSIFICATION	1.1553391011643164E-8	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999958793797433	WITHOUT_CLASSIFICATION	4.120620256749621E-6	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999999100466979	WITHOUT_CLASSIFICATION	8.995330216317397E-8	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999999915097727	WITHOUT_CLASSIFICATION	8.490227330168766E-9	TEST
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999999467297058	WITHOUT_CLASSIFICATION	5.32702940714068E-8	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999958793797433	WITHOUT_CLASSIFICATION	4.120620256749621E-6	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999999100466979	WITHOUT_CLASSIFICATION	8.995330216317397E-8	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999999915097727	WITHOUT_CLASSIFICATION	8.490227330168766E-9	TEST
// finally with exception	WITHOUT_CLASSIFICATION	0.9999997419017762	WITHOUT_CLASSIFICATION	2.5809822386551703E-7	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999999978679023	WITHOUT_CLASSIFICATION	2.1320977521693343E-9	TEST
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999999927145476	WITHOUT_CLASSIFICATION	7.285452417226939E-9	TEST
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999996943836853	WITHOUT_CLASSIFICATION	3.05616314684287E-7	TEST
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999993062681302	WITHOUT_CLASSIFICATION	6.937318698604659E-7	TEST
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999999270417717	WITHOUT_CLASSIFICATION	7.295822827125377E-8	TEST
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.999999993421571	WITHOUT_CLASSIFICATION	6.578428996864461E-9	TEST
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999999984640703	WITHOUT_CLASSIFICATION	1.535929715975981E-9	TEST
// script object	WITHOUT_CLASSIFICATION	0.9999999561840357	WITHOUT_CLASSIFICATION	4.38159642139891E-8	TEST
// arities	WITHOUT_CLASSIFICATION	0.9999999105529119	WITHOUT_CLASSIFICATION	8.94470880599189E-8	TEST
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9946503120518059	WITHOUT_CLASSIFICATION	0.00534968794819417	TEST
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999999270485008	WITHOUT_CLASSIFICATION	7.29514991727181E-8	TEST
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999998179060327	WITHOUT_CLASSIFICATION	1.8209396732727487E-7	TEST
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.999999795934017	WITHOUT_CLASSIFICATION	2.040659829018303E-7	TEST
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9995726192507043	WITHOUT_CLASSIFICATION	4.2738074929574756E-4	TEST
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999999250559344	WITHOUT_CLASSIFICATION	7.494406557791353E-8	TEST
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999999939192541	WITHOUT_CLASSIFICATION	6.080745965614927E-9	TEST
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.999999734691222	WITHOUT_CLASSIFICATION	2.6530877796365016E-7	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999998369793183	WITHOUT_CLASSIFICATION	1.6302068174337242E-7	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999997312878672	WITHOUT_CLASSIFICATION	2.6871213268739607E-7	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999999072263895	WITHOUT_CLASSIFICATION	9.277361054884922E-8	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999997673553955	WITHOUT_CLASSIFICATION	2.326446044286485E-7	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999997673553955	WITHOUT_CLASSIFICATION	2.326446044286485E-7	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999995427693381	WITHOUT_CLASSIFICATION	4.5723066186166426E-7	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999995427693381	WITHOUT_CLASSIFICATION	4.5723066186166426E-7	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.999999735246648	WITHOUT_CLASSIFICATION	2.647533519447524E-7	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.999999735246648	WITHOUT_CLASSIFICATION	2.647533519447524E-7	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999999130563848	WITHOUT_CLASSIFICATION	8.694361519929995E-8	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999899507639	WITHOUT_CLASSIFICATION	1.0049236144090568E-8	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999960953309	WITHOUT_CLASSIFICATION	3.904669165993552E-9	TEST
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999996619409977	WITHOUT_CLASSIFICATION	3.380590022645057E-7	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999994256150546	WITHOUT_CLASSIFICATION	5.743849453059169E-7	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999999689737284	WITHOUT_CLASSIFICATION	3.1026271497907605E-8	TEST
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999997768960305	WITHOUT_CLASSIFICATION	2.2310396945672157E-7	TEST
// then optional args	WITHOUT_CLASSIFICATION	0.9999999090012567	WITHOUT_CLASSIFICATION	9.09987433878255E-8	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999995005283551	WITHOUT_CLASSIFICATION	4.994716448219608E-7	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999999130563848	WITHOUT_CLASSIFICATION	8.694361519929995E-8	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999899507639	WITHOUT_CLASSIFICATION	1.0049236144090568E-8	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999960953309	WITHOUT_CLASSIFICATION	3.904669165993552E-9	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999994256150546	WITHOUT_CLASSIFICATION	5.743849453059169E-7	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999999689737284	WITHOUT_CLASSIFICATION	3.1026271497907605E-8	TEST
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999996881467138	WITHOUT_CLASSIFICATION	3.118532862625719E-7	TEST
// finally, post args	WITHOUT_CLASSIFICATION	0.9999998789501089	WITHOUT_CLASSIFICATION	1.210498910716309E-7	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999996596874601	WITHOUT_CLASSIFICATION	3.4031253994914563E-7	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999996596874601	WITHOUT_CLASSIFICATION	3.4031253994914563E-7	TEST
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999997289488516	WITHOUT_CLASSIFICATION	2.710511483417525E-7	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999999372125501	WITHOUT_CLASSIFICATION	6.278744991582926E-8	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999999756455599	WITHOUT_CLASSIFICATION	2.4354440171043665E-8	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999181328179	WITHOUT_CLASSIFICATION	8.186718214217967E-8	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999181328179	WITHOUT_CLASSIFICATION	8.186718214217967E-8	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999997998937008	WITHOUT_CLASSIFICATION	2.0010629910647358E-7	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999996568117457	WITHOUT_CLASSIFICATION	3.431882542457076E-7	TEST
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999999823405626	WITHOUT_CLASSIFICATION	1.7659437335271473E-8	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.999999960499668	WITHOUT_CLASSIFICATION	3.9500332114376384E-8	TEST
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999999956761827	WITHOUT_CLASSIFICATION	4.3238172648433715E-9	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999999441694294	WITHOUT_CLASSIFICATION	5.5830570506579205E-8	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.999999998706194	WITHOUT_CLASSIFICATION	1.2938059490181236E-9	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.999999957100858	WITHOUT_CLASSIFICATION	4.2899141915850974E-8	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999993154117127	WITHOUT_CLASSIFICATION	6.84588287326846E-7	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999999802169541	WITHOUT_CLASSIFICATION	1.9783045908809036E-8	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999999875292797	WITHOUT_CLASSIFICATION	1.2470720323228366E-8	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999997998937008	WITHOUT_CLASSIFICATION	2.0010629910647358E-7	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999996568117457	WITHOUT_CLASSIFICATION	3.431882542457076E-7	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.999999960499668	WITHOUT_CLASSIFICATION	3.9500332114376384E-8	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999999913363617	WITHOUT_CLASSIFICATION	8.663638197051293E-9	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999999756455599	WITHOUT_CLASSIFICATION	2.4354440171043665E-8	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999999756455599	WITHOUT_CLASSIFICATION	2.4354440171043665E-8	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999999364018486	WITHOUT_CLASSIFICATION	6.359815139102631E-7	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999999364018486	WITHOUT_CLASSIFICATION	6.359815139102631E-7	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999916454313	WITHOUT_CLASSIFICATION	8.354568707252446E-9	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999916454313	WITHOUT_CLASSIFICATION	8.354568707252446E-9	TEST
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999999897265218	WITHOUT_CLASSIFICATION	1.0273478197760856E-8	TEST
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999999757451933	WITHOUT_CLASSIFICATION	2.425480681003812E-8	TEST
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.999999906541124	WITHOUT_CLASSIFICATION	9.345887592644156E-8	TEST
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.999996419627977	WITHOUT_CLASSIFICATION	3.5803720228575476E-6	TEST
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.999999928332093	WITHOUT_CLASSIFICATION	7.166790713749015E-8	TEST
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999999599167464	WITHOUT_CLASSIFICATION	4.008325360220286E-8	TEST
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999999684543972	WITHOUT_CLASSIFICATION	3.154560277308928E-8	TEST
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999999974648608	WITHOUT_CLASSIFICATION	2.5351391786400068E-9	TEST
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999999840817898	WITHOUT_CLASSIFICATION	1.5918210167181227E-8	TEST
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.999999984620282	WITHOUT_CLASSIFICATION	1.5379718089613252E-8	TEST
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999998394578975	WITHOUT_CLASSIFICATION	1.6054210249562114E-7	TEST
// verify the class	WITHOUT_CLASSIFICATION	0.9999999777122087	WITHOUT_CLASSIFICATION	2.2287791265486E-8	TEST
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999999452821359	WITHOUT_CLASSIFICATION	5.471786412892698E-8	TEST
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999999867851289	WITHOUT_CLASSIFICATION	1.321487114998147E-8	TEST
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999997922739374	WITHOUT_CLASSIFICATION	2.0772606261749832E-7	TEST
// thread context	WITHOUT_CLASSIFICATION	0.9999998780311377	WITHOUT_CLASSIFICATION	1.2196886233505087E-7	TEST
// line number	WITHOUT_CLASSIFICATION	0.9999998714660802	WITHOUT_CLASSIFICATION	1.2853391987619097E-7	TEST
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999999872495408	WITHOUT_CLASSIFICATION	1.2750459287025003E-8	TEST
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999999962107468	WITHOUT_CLASSIFICATION	3.789253265972491E-9	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.999999998706194	WITHOUT_CLASSIFICATION	1.2938059490181236E-9	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999993154117127	WITHOUT_CLASSIFICATION	6.84588287326846E-7	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999925819352	WITHOUT_CLASSIFICATION	7.418064748169088E-9	TEST
// block	WITHOUT_CLASSIFICATION	0.9999996260268498	WITHOUT_CLASSIFICATION	3.739731502010423E-7	TEST
// block	WITHOUT_CLASSIFICATION	0.9999996260268498	WITHOUT_CLASSIFICATION	3.739731502010423E-7	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999999913363617	WITHOUT_CLASSIFICATION	8.663638197051293E-9	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999999756455599	WITHOUT_CLASSIFICATION	2.4354440171043665E-8	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999999364018486	WITHOUT_CLASSIFICATION	6.359815139102631E-7	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999916454313	WITHOUT_CLASSIFICATION	8.354568707252446E-9	TEST
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999999681695393	WITHOUT_CLASSIFICATION	3.1830460617646825E-8	TEST
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999998886678213	WITHOUT_CLASSIFICATION	1.1133217864322367E-7	TEST
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999999769354823	WITHOUT_CLASSIFICATION	2.3064517838387606E-8	TEST
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999999318679469	WITHOUT_CLASSIFICATION	6.813205320036761E-8	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999864665167	WITHOUT_CLASSIFICATION	1.3533483330026752E-8	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999864665167	WITHOUT_CLASSIFICATION	1.3533483330026752E-8	TEST
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999999675825154	WITHOUT_CLASSIFICATION	3.241748449377171E-8	TEST
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.99999992527106	WITHOUT_CLASSIFICATION	7.47289400405074E-8	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999999795908961	WITHOUT_CLASSIFICATION	2.040910375773466E-8	TEST
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999999568497284	WITHOUT_CLASSIFICATION	4.31502714998529E-8	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999999238200066	WITHOUT_CLASSIFICATION	7.617999347880909E-8	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999999238200066	WITHOUT_CLASSIFICATION	7.617999347880909E-8	TEST
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.999999938699398	WITHOUT_CLASSIFICATION	6.130060206001832E-8	TEST
// normal closure	WITHOUT_CLASSIFICATION	0.9999999827545076	WITHOUT_CLASSIFICATION	1.7245492308413015E-8	TEST
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999997384186323	WITHOUT_CLASSIFICATION	2.615813676527722E-7	TEST
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9999994605967846	WITHOUT_CLASSIFICATION	5.394032153740509E-7	TEST
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999989548589697	WITHOUT_CLASSIFICATION	1.0451410303354243E-6	TEST
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999999902693588	WITHOUT_CLASSIFICATION	9.73064130837065E-9	TEST
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999996536806908	WITHOUT_CLASSIFICATION	3.463193092217915E-7	TEST
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999999916073686	WITHOUT_CLASSIFICATION	8.392631346007509E-9	TEST
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9999982044516428	WITHOUT_CLASSIFICATION	1.7955483572220651E-6	TEST
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9986875333229118	WITHOUT_CLASSIFICATION	0.0013124666770881817	TEST
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999998887437289	WITHOUT_CLASSIFICATION	1.112562710981516E-7	TEST
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999997574144132	WITHOUT_CLASSIFICATION	2.425855867833334E-7	TEST
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999999876369003	WITHOUT_CLASSIFICATION	1.2363099649115354E-8	TEST
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.999999970353242	WITHOUT_CLASSIFICATION	2.964675799407849E-8	TEST
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999908781369935	WITHOUT_CLASSIFICATION	9.121863006457778E-6	TEST
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999988386104395	WITHOUT_CLASSIFICATION	1.1613895605819392E-6	TEST
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999998860093716	WITHOUT_CLASSIFICATION	1.1399062834969379E-7	TEST
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999999746051583	WITHOUT_CLASSIFICATION	2.5394841644766045E-8	TEST
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999996685324626	WITHOUT_CLASSIFICATION	3.314675374404258E-7	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999997703990327	WITHOUT_CLASSIFICATION	2.2960096730884023E-7	TEST
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999992058256784	WITHOUT_CLASSIFICATION	7.941743216503016E-7	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999999828415728	WITHOUT_CLASSIFICATION	1.715842721815403E-8	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999999828415728	WITHOUT_CLASSIFICATION	1.715842721815403E-8	TEST
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999999605291382	WITHOUT_CLASSIFICATION	3.9470861786576204E-8	TEST
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999998787790821	WITHOUT_CLASSIFICATION	1.2122091774042923E-7	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999999253703948	WITHOUT_CLASSIFICATION	7.462960512522425E-8	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999999253703948	WITHOUT_CLASSIFICATION	7.462960512522425E-8	TEST
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9999973713372085	WITHOUT_CLASSIFICATION	2.6286627915076134E-6	TEST
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999997016824266	WITHOUT_CLASSIFICATION	2.9831757344063E-7	TEST
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999946102297621	WITHOUT_CLASSIFICATION	5.389770237884652E-6	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999584851419	WITHOUT_CLASSIFICATION	4.151485803232368E-8	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999584851419	WITHOUT_CLASSIFICATION	4.151485803232368E-8	TEST
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999999337353297	WITHOUT_CLASSIFICATION	6.62646703576118E-8	TEST
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999999773706866	WITHOUT_CLASSIFICATION	2.2629313489894132E-8	TEST
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999999980833347	WITHOUT_CLASSIFICATION	1.916665263240696E-9	TEST
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999999931625947	WITHOUT_CLASSIFICATION	6.837405325821581E-9	TEST
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999999847299974	WITHOUT_CLASSIFICATION	1.52700025398417E-8	TEST
// get the incoming case value	WITHOUT_CLASSIFICATION	0.999999939732675	WITHOUT_CLASSIFICATION	6.026732495407761E-8	TEST
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999999629080943	WITHOUT_CLASSIFICATION	3.709190566162964E-8	TEST
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999936536808	WITHOUT_CLASSIFICATION	6.346319199990854E-6	TEST
// build each "when"	WITHOUT_CLASSIFICATION	0.9999998839540988	WITHOUT_CLASSIFICATION	1.1604590127294655E-7	TEST
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999998496652069	WITHOUT_CLASSIFICATION	1.5033479303408804E-7	TEST
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999995539844286	WITHOUT_CLASSIFICATION	4.460155713730085E-7	TEST
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999997907679128	WITHOUT_CLASSIFICATION	2.0923208731864977E-7	TEST
// close it out	WITHOUT_CLASSIFICATION	0.9999999600389364	WITHOUT_CLASSIFICATION	3.9961063507312894E-8	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999996639092521	WITHOUT_CLASSIFICATION	3.36090747912447E-7	TEST
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.99999991467058	WITHOUT_CLASSIFICATION	8.532942005518552E-8	TEST
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999999949754389	WITHOUT_CLASSIFICATION	5.0245611365604535E-9	TEST
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999999959181406	WITHOUT_CLASSIFICATION	4.081859429064236E-9	TEST
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999997927284626	WITHOUT_CLASSIFICATION	2.0727153745837103E-7	TEST
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999994949882349	WITHOUT_CLASSIFICATION	5.05011765022686E-7	TEST
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999998134019127	WITHOUT_CLASSIFICATION	1.8659808734113605E-7	TEST
// Instance method	WITHOUT_CLASSIFICATION	0.9999999837809107	WITHOUT_CLASSIFICATION	1.621908924308452E-8	TEST
// Class method	WITHOUT_CLASSIFICATION	0.999999924056444	WITHOUT_CLASSIFICATION	7.594355598657017E-8	TEST
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999998566526782	WITHOUT_CLASSIFICATION	1.4334732189179643E-7	TEST
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999998778660486	WITHOUT_CLASSIFICATION	1.2213395138556623E-7	TEST
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999881044393025	WITHOUT_CLASSIFICATION	1.1895560697412057E-5	TEST
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999996166885908	WITHOUT_CLASSIFICATION	3.833114091225464E-7	TEST
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999930185843	WITHOUT_CLASSIFICATION	6.9814156999516145E-6	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999999255484647	WITHOUT_CLASSIFICATION	7.445153530542091E-8	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999997750710903	WITHOUT_CLASSIFICATION	2.2492890973251288E-7	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999999907228576	WITHOUT_CLASSIFICATION	9.27714236630018E-9	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999999522216	WITHOUT_CLASSIFICATION	4.7778479576055716E-11	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999996639092521	WITHOUT_CLASSIFICATION	3.36090747912447E-7	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999999255484647	WITHOUT_CLASSIFICATION	7.445153530542091E-8	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999997750710903	WITHOUT_CLASSIFICATION	2.2492890973251288E-7	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999999522216	WITHOUT_CLASSIFICATION	4.7778479576055716E-11	TEST
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999996639814733	WITHOUT_CLASSIFICATION	3.3601852666012926E-7	TEST
// Build the new module	WITHOUT_CLASSIFICATION	0.99999938872732	WITHOUT_CLASSIFICATION	6.112726801462101E-7	TEST
// Build the module body	WITHOUT_CLASSIFICATION	0.9999995269995091	WITHOUT_CLASSIFICATION	4.7300049083822417E-7	TEST
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999954375381368	WITHOUT_CLASSIFICATION	4.562461863220193E-6	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999985439805621	WITHOUT_CLASSIFICATION	1.4560194378950097E-6	TEST
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999999988236864	WITHOUT_CLASSIFICATION	1.1763136488386975E-9	TEST
// get attr	WITHOUT_CLASSIFICATION	0.9999997995612907	WITHOUT_CLASSIFICATION	2.004387093301488E-7	TEST
// call operator	WITHOUT_CLASSIFICATION	0.9999999559787082	WITHOUT_CLASSIFICATION	4.4021291888975396E-8	TEST
// set attr	WITHOUT_CLASSIFICATION	0.9999999266260617	WITHOUT_CLASSIFICATION	7.337393823362829E-8	TEST
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999999121772546	WITHOUT_CLASSIFICATION	8.782274540225086E-8	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999963714701187	WITHOUT_CLASSIFICATION	3.6285298812611893E-6	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999963714701187	WITHOUT_CLASSIFICATION	3.6285298812611893E-6	TEST
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999997137783921	WITHOUT_CLASSIFICATION	2.86221607848037E-7	TEST
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999999968671944	WITHOUT_CLASSIFICATION	3.1328055138903372E-9	TEST
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999999963144013	WITHOUT_CLASSIFICATION	3.6855987498647926E-9	TEST
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999997918148054	WITHOUT_CLASSIFICATION	2.0818519460030008E-7	TEST
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.999999987245216	WITHOUT_CLASSIFICATION	1.2754783974425216E-8	TEST
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999989604562215	WITHOUT_CLASSIFICATION	1.0395437784469771E-6	TEST
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999999157410854	WITHOUT_CLASSIFICATION	8.425891460308634E-8	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999994427585	WITHOUT_CLASSIFICATION	5.572415038634542E-10	TEST
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999998954521568	WITHOUT_CLASSIFICATION	1.0454784317486518E-7	TEST
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999999554247	WITHOUT_CLASSIFICATION	4.457536479848E-11	TEST
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999999071740949	WITHOUT_CLASSIFICATION	9.28259050349784E-8	TEST
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999999175946	WITHOUT_CLASSIFICATION	8.240535947560691E-11	TEST
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999994355264015	WITHOUT_CLASSIFICATION	5.644735984547215E-7	TEST
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999999808627026	WITHOUT_CLASSIFICATION	1.913729741170662E-8	TEST
// alu operations	WITHOUT_CLASSIFICATION	0.9999999646616072	WITHOUT_CLASSIFICATION	3.5338392763975194E-8	TEST
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.999999999049732	WITHOUT_CLASSIFICATION	9.502679040155363E-10	TEST
// closure instructions	WITHOUT_CLASSIFICATION	0.9999999810529474	WITHOUT_CLASSIFICATION	1.8947052638180448E-8	TEST
// eval instructions	WITHOUT_CLASSIFICATION	0.9999999819421665	WITHOUT_CLASSIFICATION	1.8057833464084807E-8	TEST
// def instructions	WITHOUT_CLASSIFICATION	0.9999999804827555	WITHOUT_CLASSIFICATION	1.9517244570638407E-8	TEST
// exception instructions	WITHOUT_CLASSIFICATION	0.999999965866404	WITHOUT_CLASSIFICATION	3.413359599069894E-8	TEST
// Loads	WITHOUT_CLASSIFICATION	0.9999995131173668	WITHOUT_CLASSIFICATION	4.86882633143652E-7	TEST
// Stores	WITHOUT_CLASSIFICATION	0.9999997741477396	WITHOUT_CLASSIFICATION	2.2585226052144234E-7	TEST
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999999733547296	WITHOUT_CLASSIFICATION	2.66452704747418E-8	TEST
// others	WITHOUT_CLASSIFICATION	0.9999996943710799	WITHOUT_CLASSIFICATION	3.0562892009882007E-7	TEST
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999999329039887	WITHOUT_CLASSIFICATION	6.709601122719958E-8	TEST
// optimization guards	WITHOUT_CLASSIFICATION	0.9999998018027929	WITHOUT_CLASSIFICATION	1.9819720710471357E-7	TEST
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999964576317033	WITHOUT_CLASSIFICATION	3.5423682966667068E-6	TEST
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999999983630602	WITHOUT_CLASSIFICATION	1.6369398530117953E-9	TEST
// scripts	WITHOUT_CLASSIFICATION	0.9999998073695213	WITHOUT_CLASSIFICATION	1.9263047881248243E-7	TEST
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999999605471375	WITHOUT_CLASSIFICATION	3.945286247760699E-8	TEST
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999999794623158	WITHOUT_CLASSIFICATION	2.0537684176838642E-8	TEST
// methods and closures	WITHOUT_CLASSIFICATION	0.9999999921329394	WITHOUT_CLASSIFICATION	7.867060567621148E-9	TEST
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999994441553003	WITHOUT_CLASSIFICATION	5.558446996408955E-7	TEST
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.999999737016549	WITHOUT_CLASSIFICATION	2.6298345104675083E-7	TEST
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999999564708772	WITHOUT_CLASSIFICATION	4.352912276573459E-8	TEST
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999986236418789	WITHOUT_CLASSIFICATION	1.376358121138042E-6	TEST
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999997644254027	WITHOUT_CLASSIFICATION	2.355745973021276E-7	TEST
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999998371770581	WITHOUT_CLASSIFICATION	1.628229418329172E-7	TEST
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999999330343479	WITHOUT_CLASSIFICATION	6.696565205637003E-8	TEST
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999975286485132	WITHOUT_CLASSIFICATION	2.471351486913754E-6	TEST
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999994553293997	WITHOUT_CLASSIFICATION	5.446706003148956E-7	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998973378579032	WITHOUT_CLASSIFICATION	1.0266214209680885E-4	TEST
// Readline	WITHOUT_CLASSIFICATION	0.9999998615038149	WITHOUT_CLASSIFICATION	1.3849618505527987E-7	TEST
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999998097561251	WITHOUT_CLASSIFICATION	1.902438749124243E-7	TEST
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999999221318232	WITHOUT_CLASSIFICATION	7.786817679427575E-8	TEST
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999999946789072	WITHOUT_CLASSIFICATION	5.32109287051185E-9	TEST
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9999999969913299	WITHOUT_CLASSIFICATION	3.008669943424431E-9	TEST
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999999968729025	WITHOUT_CLASSIFICATION	3.127097527822273E-9	TEST
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999999179616309	WITHOUT_CLASSIFICATION	8.203836900296889E-8	TEST
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999995681141769	WITHOUT_CLASSIFICATION	4.318858230752483E-7	TEST
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999999739928779	WITHOUT_CLASSIFICATION	2.6007122209293234E-8	TEST
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.99999998997438	WITHOUT_CLASSIFICATION	1.0025620050712325E-8	TEST
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999642743495961	WITHOUT_CLASSIFICATION	3.5725650403928294E-5	TEST
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999901159135229	WITHOUT_CLASSIFICATION	9.884086477020366E-6	TEST
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999145520980195	WITHOUT_CLASSIFICATION	8.544790198042997E-5	TEST
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999999767036144	WITHOUT_CLASSIFICATION	2.329638560880213E-7	TEST
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999999933969744	WITHOUT_CLASSIFICATION	6.603025522879382E-9	TEST
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999999289477587	WITHOUT_CLASSIFICATION	7.105224129001242E-8	TEST
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9999999250928968	WITHOUT_CLASSIFICATION	7.490710313221836E-8	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999971338300584	WITHOUT_CLASSIFICATION	2.866169941556197E-6	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999971338300584	WITHOUT_CLASSIFICATION	2.866169941556197E-6	TEST
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999995537796085	WITHOUT_CLASSIFICATION	4.4622039148099764E-7	TEST
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.999997705437992	WITHOUT_CLASSIFICATION	2.2945620080156255E-6	TEST
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999985652227162	WITHOUT_CLASSIFICATION	1.434777283790256E-6	TEST
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999990864668181	WITHOUT_CLASSIFICATION	9.135331818990663E-7	TEST
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999999375916528	WITHOUT_CLASSIFICATION	6.24083471955248E-8	TEST
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999994637170977	WITHOUT_CLASSIFICATION	5.362829022658967E-7	TEST
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999727180401909	WITHOUT_CLASSIFICATION	2.7281959809099615E-5	TEST
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999994322539515	WITHOUT_CLASSIFICATION	5.677460485149607E-7	TEST
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999998964065292	WITHOUT_CLASSIFICATION	1.0359347077415696E-7	TEST
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999999985466109	WITHOUT_CLASSIFICATION	1.4533890506563657E-9	TEST
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999998314259868	WITHOUT_CLASSIFICATION	1.6857401325771761E-7	TEST
// class or module	WITHOUT_CLASSIFICATION	0.9999999413241949	WITHOUT_CLASSIFICATION	5.867580517211739E-8	TEST
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999993972318941	WITHOUT_CLASSIFICATION	6.027681058360314E-7	TEST
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.999999979690011	WITHOUT_CLASSIFICATION	2.0309989023324466E-8	TEST
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999995181877577	WITHOUT_CLASSIFICATION	4.818122423820913E-7	TEST
// IN is the same!	WITHOUT_CLASSIFICATION	0.999998819778616	WITHOUT_CLASSIFICATION	1.180221383995671E-6	TEST
// IN changed!	WITHOUT_CLASSIFICATION	0.9999995423811473	WITHOUT_CLASSIFICATION	4.5761885268418976E-7	TEST
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.999999557923614	WITHOUT_CLASSIFICATION	4.42076386070864E-7	TEST
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.999999945745105	WITHOUT_CLASSIFICATION	5.4254894979382286E-8	TEST
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999998064109368	WITHOUT_CLASSIFICATION	1.9358906317838894E-7	TEST
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999988154961899	WITHOUT_CLASSIFICATION	1.1845038101204194E-6	TEST
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999999267695135	WITHOUT_CLASSIFICATION	7.323048649996635E-8	TEST
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999988995972563	WITHOUT_CLASSIFICATION	1.1004027437007275E-6	TEST
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999998468556608	WITHOUT_CLASSIFICATION	1.5314433914759856E-7	TEST
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999997067030653	WITHOUT_CLASSIFICATION	2.932969347219869E-7	TEST
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999984851351441	WITHOUT_CLASSIFICATION	1.5148648559358477E-6	TEST
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999983666800314	WITHOUT_CLASSIFICATION	1.6333199685896905E-6	TEST
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999998042708873	WITHOUT_CLASSIFICATION	1.957291127480813E-7	TEST
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999999730404706	WITHOUT_CLASSIFICATION	2.695952934614737E-8	TEST
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999999778640958	WITHOUT_CLASSIFICATION	2.213590420098215E-8	TEST
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999999902431039	WITHOUT_CLASSIFICATION	9.756896066222807E-9	TEST
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999993905045684	WITHOUT_CLASSIFICATION	6.094954316578559E-7	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999621833854	WITHOUT_CLASSIFICATION	3.781661449428152E-8	TEST
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999981194642497	WITHOUT_CLASSIFICATION	1.8805357504035611E-6	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999621833854	WITHOUT_CLASSIFICATION	3.781661449428152E-8	TEST
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.999999984706537	WITHOUT_CLASSIFICATION	1.529346299009746E-8	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.99999862268429	WITHOUT_CLASSIFICATION	1.3773157100674767E-6	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.99999862268429	WITHOUT_CLASSIFICATION	1.3773157100674767E-6	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.99999862268429	WITHOUT_CLASSIFICATION	1.3773157100674767E-6	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999999516713828	WITHOUT_CLASSIFICATION	4.832861724672025E-8	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999999516713828	WITHOUT_CLASSIFICATION	4.832861724672025E-8	TEST
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999989186433976	WITHOUT_CLASSIFICATION	1.0813566024576428E-6	TEST
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999999699758376	WITHOUT_CLASSIFICATION	3.0024162342835715E-8	TEST
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999999082771968	WITHOUT_CLASSIFICATION	9.172280324206682E-8	TEST
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9999999987423893	WITHOUT_CLASSIFICATION	1.2576106453577718E-9	TEST
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999988592380589	WITHOUT_CLASSIFICATION	1.1407619411729792E-6	TEST
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999987185671728	WITHOUT_CLASSIFICATION	1.2814328272018544E-6	TEST
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999999170719964	WITHOUT_CLASSIFICATION	8.292800358829655E-8	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999999035559733	WITHOUT_CLASSIFICATION	9.644402668903376E-8	TEST
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999986409593724	WITHOUT_CLASSIFICATION	1.3590406276234738E-6	TEST
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999999855448832	WITHOUT_CLASSIFICATION	1.445511677620819E-8	TEST
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999994500795246	WITHOUT_CLASSIFICATION	5.499204754931859E-7	TEST
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999999792624655	WITHOUT_CLASSIFICATION	2.0737534485579495E-8	TEST
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999999929561706	WITHOUT_CLASSIFICATION	7.043829381035597E-9	TEST
// root-level logic	WITHOUT_CLASSIFICATION	0.9999999128395213	WITHOUT_CLASSIFICATION	8.716047871478685E-8	TEST
// root-level methods	WITHOUT_CLASSIFICATION	0.9999998768926921	WITHOUT_CLASSIFICATION	1.231073078498823E-7	TEST
// root-level classes	WITHOUT_CLASSIFICATION	0.9999998853105986	WITHOUT_CLASSIFICATION	1.1468940139477817E-7	TEST
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999999156775581	WITHOUT_CLASSIFICATION	8.432244195456617E-8	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999998960272761	WITHOUT_CLASSIFICATION	1.0397272386705616E-7	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999998960272761	WITHOUT_CLASSIFICATION	1.0397272386705616E-7	TEST
// receiver	WITHOUT_CLASSIFICATION	0.9999998320321806	WITHOUT_CLASSIFICATION	1.6796781945161776E-7	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999999386867134	WITHOUT_CLASSIFICATION	6.131328659910351E-8	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999999386867134	WITHOUT_CLASSIFICATION	6.131328659910351E-8	TEST
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999968603102941	WITHOUT_CLASSIFICATION	3.1396897058618793E-6	TEST
// Object[] args	WITHOUT_CLASSIFICATION	0.9999999264751186	WITHOUT_CLASSIFICATION	7.352488137931682E-8	TEST
// load handle	WITHOUT_CLASSIFICATION	0.9999998249479894	WITHOUT_CLASSIFICATION	1.7505201065556036E-7	TEST
// args array	WITHOUT_CLASSIFICATION	0.9999995590166071	WITHOUT_CLASSIFICATION	4.4098339296048686E-7	TEST
// i'th argument	WITHOUT_CLASSIFICATION	0.9999997925343102	WITHOUT_CLASSIFICATION	2.0746568986273294E-7	TEST
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999999897168512	WITHOUT_CLASSIFICATION	1.0283148707246505E-8	TEST
// Object arg0	WITHOUT_CLASSIFICATION	0.9999998595143537	WITHOUT_CLASSIFICATION	1.4048564625396487E-7	TEST
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999999898023367	WITHOUT_CLASSIFICATION	1.0197663318588188E-8	TEST
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999999023717568	WITHOUT_CLASSIFICATION	9.762824321557441E-8	TEST
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999998736547026	WITHOUT_CLASSIFICATION	1.2634529743212847E-7	TEST
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999995163517531	WITHOUT_CLASSIFICATION	4.836482469184969E-7	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999997733869248	WITHOUT_CLASSIFICATION	2.2661307527931883E-7	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999998123221994	WITHOUT_CLASSIFICATION	1.876778005237314E-7	TEST
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999999826654293	WITHOUT_CLASSIFICATION	1.733457069533775E-8	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999999035559733	WITHOUT_CLASSIFICATION	9.644402668903376E-8	TEST
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999732165405258	WITHOUT_CLASSIFICATION	2.6783459474130873E-5	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999999513937673	WITHOUT_CLASSIFICATION	4.86062326190325E-8	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999999148230936	WITHOUT_CLASSIFICATION	8.517690639901582E-8	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999999148230936	WITHOUT_CLASSIFICATION	8.517690639901582E-8	TEST
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999997964274072	WITHOUT_CLASSIFICATION	2.0357259270218102E-7	TEST
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999996760421819	WITHOUT_CLASSIFICATION	3.239578182009613E-7	TEST
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999999967890884	WITHOUT_CLASSIFICATION	3.2109115867539223E-9	TEST
// restore position	WITHOUT_CLASSIFICATION	0.9999995304002721	WITHOUT_CLASSIFICATION	4.695997278763197E-7	TEST
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.999999970683466	WITHOUT_CLASSIFICATION	2.9316533991524844E-8	TEST
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999998970900582	WITHOUT_CLASSIFICATION	1.0290994173376476E-7	TEST
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999999778281503	WITHOUT_CLASSIFICATION	2.2171849735204567E-8	TEST
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9999325219458476	WITHOUT_CLASSIFICATION	6.747805415234525E-5	TEST
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.999999990871699	WITHOUT_CLASSIFICATION	9.128301052716234E-9	TEST
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999999715570956	WITHOUT_CLASSIFICATION	2.844290432945147E-8	TEST
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999998135946696	WITHOUT_CLASSIFICATION	1.8640533046275531E-7	TEST
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999996933452698	WITHOUT_CLASSIFICATION	3.066547301463077E-7	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999776848485266	WITHOUT_CLASSIFICATION	2.231515147348822E-5	TEST
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999998670936908	WITHOUT_CLASSIFICATION	1.329063090554175E-7	TEST
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.999999901664412	WITHOUT_CLASSIFICATION	9.833558803634026E-8	TEST
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999997723897434	WITHOUT_CLASSIFICATION	2.2761025669279496E-7	TEST
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999998832213016	WITHOUT_CLASSIFICATION	1.1677869836705566E-7	TEST
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999994802596303	WITHOUT_CLASSIFICATION	5.197403698055108E-7	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.999999927103858	WITHOUT_CLASSIFICATION	7.289614204416964E-8	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999999692470221	WITHOUT_CLASSIFICATION	3.075297796696935E-8	TEST
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999999476820869	WITHOUT_CLASSIFICATION	5.231791310774961E-8	TEST
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999999963140705	WITHOUT_CLASSIFICATION	3.6859293275175135E-9	TEST
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999996946238626	WITHOUT_CLASSIFICATION	3.0537613734910936E-7	TEST
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999999997038305	WITHOUT_CLASSIFICATION	2.9616955527365767E-10	TEST
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999998891769117	WITHOUT_CLASSIFICATION	1.1082308821969945E-7	TEST
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999996696101517	WITHOUT_CLASSIFICATION	3.303898482045787E-7	TEST
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999484795985969	WITHOUT_CLASSIFICATION	5.152040140316982E-5	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999924917392012	WITHOUT_CLASSIFICATION	7.508260798736307E-6	TEST
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999999943716109	WITHOUT_CLASSIFICATION	5.628389131169178E-9	TEST
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.999999218157256	WITHOUT_CLASSIFICATION	7.818427440107663E-7	TEST
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999999443675162	WITHOUT_CLASSIFICATION	5.56324838884618E-8	TEST
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999999814211398	WITHOUT_CLASSIFICATION	1.857886013791052E-8	TEST
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999663489620874	WITHOUT_CLASSIFICATION	3.365103791265196E-5	TEST
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999966707636867	WITHOUT_CLASSIFICATION	3.329236313225294E-6	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999987094282242	WITHOUT_CLASSIFICATION	1.2905717758035973E-6	TEST
// $blah	WITHOUT_CLASSIFICATION	0.9999993201606533	WITHOUT_CLASSIFICATION	6.798393466705599E-7	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999924917392012	WITHOUT_CLASSIFICATION	7.508260798736307E-6	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999978793599684	WITHOUT_CLASSIFICATION	2.120640031608748E-6	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999987094282242	WITHOUT_CLASSIFICATION	1.2905717758035973E-6	TEST
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.999999068554488	WITHOUT_CLASSIFICATION	9.314455119466859E-7	TEST
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999999728735768	WITHOUT_CLASSIFICATION	2.7126423243192245E-8	TEST
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999984250498102	WITHOUT_CLASSIFICATION	1.574950189822516E-6	TEST
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999999482138796	WITHOUT_CLASSIFICATION	5.178612041355771E-8	TEST
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999992371042304	WITHOUT_CLASSIFICATION	7.628957694377751E-7	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999999232863226	WITHOUT_CLASSIFICATION	7.671367744735953E-8	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999999232863226	WITHOUT_CLASSIFICATION	7.671367744735953E-8	TEST
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9999987612695104	WITHOUT_CLASSIFICATION	1.2387304896040788E-6	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999999982441486	WITHOUT_CLASSIFICATION	1.7558513432102725E-9	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999999504593391	WITHOUT_CLASSIFICATION	4.954066086649794E-8	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999999504593391	WITHOUT_CLASSIFICATION	4.954066086649794E-8	TEST
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999999984519911	WITHOUT_CLASSIFICATION	1.5480090228134064E-9	TEST
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9997843640319595	WITHOUT_CLASSIFICATION	2.1563596804054388E-4	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9999486286627307	WITHOUT_CLASSIFICATION	5.1371337269406014E-5	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9999486286627307	WITHOUT_CLASSIFICATION	5.1371337269406014E-5	TEST
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999997247359271	WITHOUT_CLASSIFICATION	2.7526407292106965E-7	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999995857908006	WITHOUT_CLASSIFICATION	4.1420919938991844E-7	TEST
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999996634390269	WITHOUT_CLASSIFICATION	3.3656097307445856E-7	TEST
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999999263146659	WITHOUT_CLASSIFICATION	7.368533410247061E-8	TEST
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.999999990251911	WITHOUT_CLASSIFICATION	9.748088993945289E-9	TEST
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999980649175276	WITHOUT_CLASSIFICATION	1.935082472381346E-6	TEST
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999998231954689	WITHOUT_CLASSIFICATION	1.7680453111568095E-7	TEST
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999997057597072	WITHOUT_CLASSIFICATION	2.942402927637516E-7	TEST
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999998945337194	WITHOUT_CLASSIFICATION	1.0546628053880803E-7	TEST
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.999999491741856	WITHOUT_CLASSIFICATION	5.082581440018192E-7	TEST
// host and port given	WITHOUT_CLASSIFICATION	0.9999996698237257	WITHOUT_CLASSIFICATION	3.301762743763474E-7	TEST
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999998224433333	WITHOUT_CLASSIFICATION	1.7755666670450701E-7	TEST
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999999618806669	WITHOUT_CLASSIFICATION	3.811933308833965E-8	TEST
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999985781836561	WITHOUT_CLASSIFICATION	1.4218163438218549E-6	TEST
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999999536460965	WITHOUT_CLASSIFICATION	4.635390344747552E-8	TEST
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999999913423835	WITHOUT_CLASSIFICATION	8.657616481182945E-9	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999663426736317	WITHOUT_CLASSIFICATION	3.365732636829668E-5	TEST
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999999441522037	WITHOUT_CLASSIFICATION	5.584779627254018E-8	TEST
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999999621490003	WITHOUT_CLASSIFICATION	3.785099974692209E-8	TEST
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9999999392204755	WITHOUT_CLASSIFICATION	6.077952460072011E-8	TEST
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999997680109702	WITHOUT_CLASSIFICATION	2.3198902982296556E-7	TEST
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999978240015903	WITHOUT_CLASSIFICATION	2.17599840971895E-6	TEST
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999999505341931	WITHOUT_CLASSIFICATION	4.946580691440764E-8	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.999998568057435	WITHOUT_CLASSIFICATION	1.4319425649849797E-6	TEST
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999975092341877	WITHOUT_CLASSIFICATION	2.490765812284079E-6	TEST
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.999996678581701	WITHOUT_CLASSIFICATION	3.3214182989491773E-6	TEST
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999986965366068	WITHOUT_CLASSIFICATION	1.303463393227481E-6	TEST
// line 323	WITHOUT_CLASSIFICATION	0.9999995927275918	WITHOUT_CLASSIFICATION	4.072724082800259E-7	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999999926449882	WITHOUT_CLASSIFICATION	7.355011820886307E-9	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999999926449882	WITHOUT_CLASSIFICATION	7.355011820886307E-9	TEST
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999999732006559	WITHOUT_CLASSIFICATION	2.679934406735358E-8	TEST
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999998812794666	WITHOUT_CLASSIFICATION	1.1872053337289814E-7	TEST
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999982513528549	WITHOUT_CLASSIFICATION	1.7486471451325629E-6	TEST
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999996045403123	WITHOUT_CLASSIFICATION	3.954596877243705E-7	TEST
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999993683478348	WITHOUT_CLASSIFICATION	6.316521652334004E-7	TEST
// RubySocket	WITHOUT_CLASSIFICATION	0.9999998630168841	WITHOUT_CLASSIFICATION	1.3698311597238583E-7	TEST
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999996093187831	WITHOUT_CLASSIFICATION	3.906812169157963E-7	TEST
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999999284685012	WITHOUT_CLASSIFICATION	7.153149883260455E-8	TEST
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999999471561883	WITHOUT_CLASSIFICATION	5.284381172120697E-8	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999999533807412	WITHOUT_CLASSIFICATION	4.66192588221203E-8	TEST
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999997865895904	WITHOUT_CLASSIFICATION	2.134104096398077E-7	TEST
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999998583234441	WITHOUT_CLASSIFICATION	1.4167655594530696E-7	TEST
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.999998919257608	WITHOUT_CLASSIFICATION	1.0807423919945338E-6	TEST
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999998353969358	WITHOUT_CLASSIFICATION	1.6460306410308762E-7	TEST
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999999983306043	WITHOUT_CLASSIFICATION	1.6693957431922991E-9	TEST
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999999777481384	WITHOUT_CLASSIFICATION	2.2251861562752876E-8	TEST
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999999856775597	WITHOUT_CLASSIFICATION	1.4322440253978188E-8	TEST
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999999520332431	WITHOUT_CLASSIFICATION	4.7966756954977566E-8	TEST
// be dead	WITHOUT_CLASSIFICATION	0.9999997147863224	WITHOUT_CLASSIFICATION	2.8521367760653255E-7	TEST
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999998017016581	WITHOUT_CLASSIFICATION	1.9829834187125763E-7	TEST
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999999712460512	WITHOUT_CLASSIFICATION	2.8753948733910804E-8	TEST
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999981385872889	WITHOUT_CLASSIFICATION	1.861412711178952E-6	TEST
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999998395141176	WITHOUT_CLASSIFICATION	1.6048588231851154E-7	TEST
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999999669023094	WITHOUT_CLASSIFICATION	3.309769053781681E-8	TEST
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999999783216432	WITHOUT_CLASSIFICATION	2.1678356835302082E-8	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999998884198098	WITHOUT_CLASSIFICATION	1.1158019016909076E-7	TEST
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999987064145206	WITHOUT_CLASSIFICATION	1.2935854795095824E-6	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999997422763731	WITHOUT_CLASSIFICATION	2.577236269677167E-7	TEST
// main body	WITHOUT_CLASSIFICATION	0.999999728144154	WITHOUT_CLASSIFICATION	2.718558459680592E-7	TEST
// return jump handling	WITHOUT_CLASSIFICATION	0.9999999929699651	WITHOUT_CLASSIFICATION	7.030034782029242E-9	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999996990403399	WITHOUT_CLASSIFICATION	3.0095966009810076E-7	TEST
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999999345819716	WITHOUT_CLASSIFICATION	6.541802844378237E-8	TEST
// redo jump handling	WITHOUT_CLASSIFICATION	0.999999951281091	WITHOUT_CLASSIFICATION	4.8718908999760616E-8	TEST
// clear the redo	WITHOUT_CLASSIFICATION	0.9999998630071314	WITHOUT_CLASSIFICATION	1.3699286869057255E-7	TEST
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999999209676221	WITHOUT_CLASSIFICATION	7.903237793190833E-8	TEST
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999997708886506	WITHOUT_CLASSIFICATION	2.29111349485298E-7	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999998538370575	WITHOUT_CLASSIFICATION	1.4616294254916797E-7	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999995934440704	WITHOUT_CLASSIFICATION	4.0655592962100666E-7	TEST
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999999806602154	WITHOUT_CLASSIFICATION	1.9339784486129705E-8	TEST
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999999499134575	WITHOUT_CLASSIFICATION	5.008654239504637E-8	TEST
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999985791255166	WITHOUT_CLASSIFICATION	1.4208744834668825E-6	TEST
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999999768241122	WITHOUT_CLASSIFICATION	2.3175887818955286E-8	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999999912142317	WITHOUT_CLASSIFICATION	8.785768360907054E-9	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999999912142317	WITHOUT_CLASSIFICATION	8.785768360907054E-9	TEST
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999995405665718	WITHOUT_CLASSIFICATION	4.5943342824349685E-7	TEST
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.999999996529141	WITHOUT_CLASSIFICATION	3.470859038345761E-9	TEST
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999998853767128	WITHOUT_CLASSIFICATION	1.146232872994241E-7	TEST
// return	WITHOUT_CLASSIFICATION	0.9999999578534394	WITHOUT_CLASSIFICATION	4.214656063398304E-8	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999998369793183	WITHOUT_CLASSIFICATION	1.6302068174337242E-7	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999997312878672	WITHOUT_CLASSIFICATION	2.6871213268739607E-7	TEST
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999997123938815	WITHOUT_CLASSIFICATION	2.876061184170478E-7	TEST
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999995430185025	WITHOUT_CLASSIFICATION	4.569814974748295E-7	TEST
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999996429097783	WITHOUT_CLASSIFICATION	3.570902217572279E-7	TEST
// tc	WITHOUT_CLASSIFICATION	0.9999992369540578	WITHOUT_CLASSIFICATION	7.630459421574022E-7	TEST
// self // name	WITHOUT_CLASSIFICATION	0.9999996497681612	WITHOUT_CLASSIFICATION	3.5023183875380054E-7	TEST
// no args	WITHOUT_CLASSIFICATION	0.9999998792426114	WITHOUT_CLASSIFICATION	1.2075738869473248E-7	TEST
// variable args with block	WITHOUT_CLASSIFICATION	0.9999998335296875	WITHOUT_CLASSIFICATION	1.6647031245744155E-7	TEST
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999999661751868	WITHOUT_CLASSIFICATION	3.3824813097114786E-8	TEST
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999562552112	WITHOUT_CLASSIFICATION	4.3744788739229037E-8	TEST
// one arg with block	WITHOUT_CLASSIFICATION	0.9999998320012453	WITHOUT_CLASSIFICATION	1.6799875462570057E-7	TEST
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999305455158	WITHOUT_CLASSIFICATION	6.945448414280719E-8	TEST
// two args with block	WITHOUT_CLASSIFICATION	0.9999997662249674	WITHOUT_CLASSIFICATION	2.337750324481904E-7	TEST
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999436922233	WITHOUT_CLASSIFICATION	5.6307776641989185E-8	TEST
// three args with block	WITHOUT_CLASSIFICATION	0.9999997625614458	WITHOUT_CLASSIFICATION	2.374385541983471E-7	TEST
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999290410049	WITHOUT_CLASSIFICATION	7.095899507096266E-8	TEST
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999996163293268	WITHOUT_CLASSIFICATION	3.836706731996097E-7	TEST
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999996406171019	WITHOUT_CLASSIFICATION	3.59382898025471E-7	TEST
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.999999869256829	WITHOUT_CLASSIFICATION	1.3074317098859135E-7	TEST
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999313572232	WITHOUT_CLASSIFICATION	6.864277671665579E-8	TEST
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999076154928	WITHOUT_CLASSIFICATION	9.238450716983393E-8	TEST
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999284764487	WITHOUT_CLASSIFICATION	7.152355128913565E-8	TEST
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999999131540822	WITHOUT_CLASSIFICATION	8.684591774313824E-8	TEST
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999999537065317	WITHOUT_CLASSIFICATION	4.6293468338498175E-8	TEST
// static invocation	WITHOUT_CLASSIFICATION	0.9999998570161882	WITHOUT_CLASSIFICATION	1.4298381182563293E-7	TEST
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999999146680364	WITHOUT_CLASSIFICATION	8.533196368301073E-8	TEST
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.999999507276286	WITHOUT_CLASSIFICATION	4.927237139622961E-7	TEST
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999999848235029	WITHOUT_CLASSIFICATION	1.517649701166401E-8	TEST
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999998816375578	WITHOUT_CLASSIFICATION	1.183624422238882E-7	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999995934440704	WITHOUT_CLASSIFICATION	4.0655592962100666E-7	TEST
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999994141861143	WITHOUT_CLASSIFICATION	5.858138858115396E-7	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999998502953446	WITHOUT_CLASSIFICATION	1.49704655395877E-7	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999998502953446	WITHOUT_CLASSIFICATION	1.49704655395877E-7	TEST
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999989317939805	WITHOUT_CLASSIFICATION	1.0682060195065966E-6	TEST
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999999704067194	WITHOUT_CLASSIFICATION	2.9593280614188532E-8	TEST
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999999113969629	WITHOUT_CLASSIFICATION	8.860303715598297E-8	TEST
// never reached	WITHOUT_CLASSIFICATION	0.9999998092396732	WITHOUT_CLASSIFICATION	1.907603266227653E-7	TEST
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9999997440835455	WITHOUT_CLASSIFICATION	2.5591645449713066E-7	TEST
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999997952933726	WITHOUT_CLASSIFICATION	2.0470662748375836E-7	TEST
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9999997886155871	WITHOUT_CLASSIFICATION	2.1138441295875548E-7	TEST
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9999996552166505	WITHOUT_CLASSIFICATION	3.4478334951415045E-7	TEST
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9999998309131423	WITHOUT_CLASSIFICATION	1.6908685781039546E-7	TEST
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9999998237145842	WITHOUT_CLASSIFICATION	1.7628541584331748E-7	TEST
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9999997152103216	WITHOUT_CLASSIFICATION	2.847896784400645E-7	TEST
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9999996110980761	WITHOUT_CLASSIFICATION	3.889019239270959E-7	TEST
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999999291913734	WITHOUT_CLASSIFICATION	7.080862654301708E-8	TEST
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.999999882466086	WITHOUT_CLASSIFICATION	1.1753391405128614E-7	TEST
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999986682070544	WITHOUT_CLASSIFICATION	1.3317929456187426E-6	TEST
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999999979977303	WITHOUT_CLASSIFICATION	2.0022695842113673E-9	TEST
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999998152291939	WITHOUT_CLASSIFICATION	1.8477080609087212E-7	TEST
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9999995552786353	WITHOUT_CLASSIFICATION	4.447213647540871E-7	TEST
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999998785378539	WITHOUT_CLASSIFICATION	1.2146214613889724E-7	TEST
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999998733668289	WITHOUT_CLASSIFICATION	1.2663317103415044E-7	TEST
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9999998042050697	WITHOUT_CLASSIFICATION	1.9579493038842244E-7	TEST
// promise to implement three	WITHOUT_CLASSIFICATION	0.9999998619557761	WITHOUT_CLASSIFICATION	1.380442239707555E-7	TEST
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999999939297061	WITHOUT_CLASSIFICATION	6.070293953003283E-9	TEST
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.999999995893853	WITHOUT_CLASSIFICATION	4.106146931417154E-9	TEST
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.999999997815723	WITHOUT_CLASSIFICATION	2.1842770622538153E-9	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999999636097963	WITHOUT_CLASSIFICATION	3.639020377212335E-8	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999997923435509	WITHOUT_CLASSIFICATION	2.0765644914098904E-7	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999999489586675	WITHOUT_CLASSIFICATION	5.104133252498409E-8	TEST
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999998808358244	WITHOUT_CLASSIFICATION	1.1916417565352578E-7	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999999745963222	WITHOUT_CLASSIFICATION	2.5403677843985005E-8	TEST
// start setup method	WITHOUT_CLASSIFICATION	0.9999998981979833	WITHOUT_CLASSIFICATION	1.0180201667049354E-7	TEST
// set RubyClass	WITHOUT_CLASSIFICATION	0.999999964481017	WITHOUT_CLASSIFICATION	3.551898297184296E-8	TEST
// set Ruby	WITHOUT_CLASSIFICATION	0.9999998486871461	WITHOUT_CLASSIFICATION	1.5131285403372035E-7	TEST
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.999999993998632	WITHOUT_CLASSIFICATION	6.001367934645687E-9	TEST
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999999970241228	WITHOUT_CLASSIFICATION	2.975877134255818E-9	TEST
// get current context	WITHOUT_CLASSIFICATION	0.999999917712282	WITHOUT_CLASSIFICATION	8.228771801006841E-8	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999999707124987	WITHOUT_CLASSIFICATION	2.9287501362215594E-8	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999999636097963	WITHOUT_CLASSIFICATION	3.639020377212335E-8	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999997923435509	WITHOUT_CLASSIFICATION	2.0765644914098904E-7	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999999489586675	WITHOUT_CLASSIFICATION	5.104133252498409E-8	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999999745963222	WITHOUT_CLASSIFICATION	2.5403677843985005E-8	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999999943595836	WITHOUT_CLASSIFICATION	5.640416357891907E-9	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999999903690185	WITHOUT_CLASSIFICATION	9.630981447633238E-9	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999999260401411	WITHOUT_CLASSIFICATION	7.395985881339169E-8	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999998915910359	WITHOUT_CLASSIFICATION	1.0840896413794095E-7	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999998132657237	WITHOUT_CLASSIFICATION	1.8673427636368848E-7	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999937336982	WITHOUT_CLASSIFICATION	6.266301853834179E-9	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.9999999399903587	WITHOUT_CLASSIFICATION	6.000964124639122E-8	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999999383902259	WITHOUT_CLASSIFICATION	6.160977412599632E-8	TEST
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999999793729512	WITHOUT_CLASSIFICATION	2.0627048851389643E-8	TEST
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999996223225641	WITHOUT_CLASSIFICATION	3.776774359123796E-7	TEST
// prepare temp locals	WITHOUT_CLASSIFICATION	0.999999651944474	WITHOUT_CLASSIFICATION	3.480555260052484E-7	TEST
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999998236206209	WITHOUT_CLASSIFICATION	1.763793791409992E-7	TEST
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999999125616686	WITHOUT_CLASSIFICATION	8.743833135801076E-8	TEST
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999999970987434	WITHOUT_CLASSIFICATION	2.901256473540833E-9	TEST
// store it	WITHOUT_CLASSIFICATION	0.999999591111038	WITHOUT_CLASSIFICATION	4.0888896207010484E-7	TEST
// end of try block	WITHOUT_CLASSIFICATION	0.9999999768511058	WITHOUT_CLASSIFICATION	2.314889420078869E-8	TEST
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999999847804677	WITHOUT_CLASSIFICATION	1.521953236153749E-8	TEST
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999999087822372	WITHOUT_CLASSIFICATION	9.121776274797356E-8	TEST
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999999959100364	WITHOUT_CLASSIFICATION	4.089963540828379E-9	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999999707124987	WITHOUT_CLASSIFICATION	2.9287501362215594E-8	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999999903690185	WITHOUT_CLASSIFICATION	9.630981447633238E-9	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999999260401411	WITHOUT_CLASSIFICATION	7.395985881339169E-8	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999998132657237	WITHOUT_CLASSIFICATION	1.8673427636368848E-7	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999937336982	WITHOUT_CLASSIFICATION	6.266301853834179E-9	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.9999999399903587	WITHOUT_CLASSIFICATION	6.000964124639122E-8	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999999383902259	WITHOUT_CLASSIFICATION	6.160977412599632E-8	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999999441240147	WITHOUT_CLASSIFICATION	5.587598516123209E-8	TEST
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999992308420517	WITHOUT_CLASSIFICATION	7.691579483359593E-7	TEST
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999999716475249	WITHOUT_CLASSIFICATION	2.8352475207117794E-8	TEST
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999999988060206	WITHOUT_CLASSIFICATION	1.193979274711332E-9	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999989390216864	WITHOUT_CLASSIFICATION	1.0609783135855027E-6	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999989390216864	WITHOUT_CLASSIFICATION	1.0609783135855027E-6	TEST
// setup the class	WITHOUT_CLASSIFICATION	0.999999984014603	WITHOUT_CLASSIFICATION	1.5985396975339375E-8	TEST
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999999925611863	WITHOUT_CLASSIFICATION	7.438813673237571E-9	TEST
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999998274343374	WITHOUT_CLASSIFICATION	1.7256566263670866E-7	TEST
// probably a primitive	WITHOUT_CLASSIFICATION	0.999999963063558	WITHOUT_CLASSIFICATION	3.693644193299335E-8	TEST
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999999422069324	WITHOUT_CLASSIFICATION	5.779306759512031E-8	TEST
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.999999960919445	WITHOUT_CLASSIFICATION	3.908055510093543E-8	TEST
// set the full name	WITHOUT_CLASSIFICATION	0.9999998449804391	WITHOUT_CLASSIFICATION	1.550195608794996E-7	TEST
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999999952930704	WITHOUT_CLASSIFICATION	4.706929599636246E-9	TEST
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999999593461856	WITHOUT_CLASSIFICATION	4.065381440196681E-8	TEST
// add array construction methods	WITHOUT_CLASSIFICATION	0.999999960392132	WITHOUT_CLASSIFICATION	3.960786795752154E-8	TEST
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999999856580648	WITHOUT_CLASSIFICATION	1.4341935149215529E-8	TEST
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999999979074937	WITHOUT_CLASSIFICATION	2.0925063384213416E-9	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999995722538411	WITHOUT_CLASSIFICATION	4.2774615899170087E-7	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.999999896841284	WITHOUT_CLASSIFICATION	1.0315871604606775E-7	TEST
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999999974146894	WITHOUT_CLASSIFICATION	2.5853106121480103E-9	TEST
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999999930898124	WITHOUT_CLASSIFICATION	6.910187657009124E-9	TEST
// add all static variables	WITHOUT_CLASSIFICATION	0.9999999569010056	WITHOUT_CLASSIFICATION	4.309899441537958E-8	TEST
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999999877310681	WITHOUT_CLASSIFICATION	1.2268931932137653E-8	TEST
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999998871501654	WITHOUT_CLASSIFICATION	1.1284983451481629E-7	TEST
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.999999997480988	WITHOUT_CLASSIFICATION	2.519011953599154E-9	TEST
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9999584164840969	WITHOUT_CLASSIFICATION	4.15835159031985E-5	TEST
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999999784173946	WITHOUT_CLASSIFICATION	2.1582605364986773E-8	TEST
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999999909919352	WITHOUT_CLASSIFICATION	9.0080648182162E-9	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9982278027226413	WITHOUT_CLASSIFICATION	0.001772197277358725	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.999999987945185	WITHOUT_CLASSIFICATION	1.2054814948286223E-8	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999999952054952	WITHOUT_CLASSIFICATION	4.794504847836063E-9	TEST
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999999993131918	WITHOUT_CLASSIFICATION	6.868083034067832E-10	TEST
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999991014413901	WITHOUT_CLASSIFICATION	8.985586098536357E-7	TEST
// line 326	WITHOUT_CLASSIFICATION	0.9999996004480108	WITHOUT_CLASSIFICATION	3.9955198910476216E-7	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.999999987945185	WITHOUT_CLASSIFICATION	1.2054814948286223E-8	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999999952054952	WITHOUT_CLASSIFICATION	4.794504847836063E-9	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.999999896841284	WITHOUT_CLASSIFICATION	1.0315871604606775E-7	TEST
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999998363119526	WITHOUT_CLASSIFICATION	1.6368804747464634E-7	TEST
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.999999966648587	WITHOUT_CLASSIFICATION	3.335141303463128E-8	TEST
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999998213698102	WITHOUT_CLASSIFICATION	1.786301896190201E-7	TEST
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.999999990454346	WITHOUT_CLASSIFICATION	9.54565407732384E-9	TEST
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999999364923645	WITHOUT_CLASSIFICATION	6.350763555382273E-8	TEST
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999989050161763	WITHOUT_CLASSIFICATION	1.094983823763662E-6	TEST
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999994044138885	WITHOUT_CLASSIFICATION	5.955861114645893E-7	TEST
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999999398378616	WITHOUT_CLASSIFICATION	6.016213832859534E-8	TEST
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.999995112671064	WITHOUT_CLASSIFICATION	4.8873289359934394E-6	TEST
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999994745062151	WITHOUT_CLASSIFICATION	5.254937850361553E-7	TEST
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999999895714801	WITHOUT_CLASSIFICATION	1.042852002325159E-8	TEST
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999999207725614	WITHOUT_CLASSIFICATION	7.92274385426885E-8	TEST
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999999104372177	WITHOUT_CLASSIFICATION	8.95627823832753E-8	TEST
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999999885922166	WITHOUT_CLASSIFICATION	1.1407783399151527E-8	TEST
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999999996056881	WITHOUT_CLASSIFICATION	3.9431194971847627E-10	TEST
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999977090620198	WITHOUT_CLASSIFICATION	2.290937980204257E-6	TEST
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999999992139534	WITHOUT_CLASSIFICATION	7.86046660773088E-10	TEST
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9999999327971956	WITHOUT_CLASSIFICATION	6.720280440418157E-8	TEST
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999999862135659	WITHOUT_CLASSIFICATION	1.3786434134670712E-8	TEST
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999999281347488	WITHOUT_CLASSIFICATION	7.186525122942396E-8	TEST
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999999936653948	WITHOUT_CLASSIFICATION	6.334605152053302E-9	TEST
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999999931431528	WITHOUT_CLASSIFICATION	6.85684713410854E-9	TEST
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999999237250362	WITHOUT_CLASSIFICATION	7.627496374567337E-8	TEST
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999999999741668	WITHOUT_CLASSIFICATION	2.583319664039065E-11	TEST
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999999976496264	WITHOUT_CLASSIFICATION	2.350373584588398E-9	TEST
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.99999996775063	WITHOUT_CLASSIFICATION	3.224936999001277E-8	TEST
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9943973644186819	WITHOUT_CLASSIFICATION	0.005602635581318158	TEST
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9999995675857548	WITHOUT_CLASSIFICATION	4.3241424516404364E-7	TEST
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999998823012831	WITHOUT_CLASSIFICATION	1.1769871684613139E-7	TEST
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999999827762992	WITHOUT_CLASSIFICATION	1.7223700894123783E-8	TEST
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999999958808343	WITHOUT_CLASSIFICATION	4.1191656885878335E-9	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999997946067545	WITHOUT_CLASSIFICATION	2.0539324547221852E-7	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999997946067545	WITHOUT_CLASSIFICATION	2.0539324547221852E-7	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999995722538411	WITHOUT_CLASSIFICATION	4.2774615899170087E-7	TEST
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999999903825768	WITHOUT_CLASSIFICATION	9.617423166104584E-9	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999999369789253	WITHOUT_CLASSIFICATION	6.302107465693404E-8	TEST
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999997228511137	WITHOUT_CLASSIFICATION	2.771488863465787E-7	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999919979687	WITHOUT_CLASSIFICATION	8.002031212488619E-9	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999919979687	WITHOUT_CLASSIFICATION	8.002031212488619E-9	TEST
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999874922462	WITHOUT_CLASSIFICATION	1.250775369888501E-8	TEST
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999999208233544	WITHOUT_CLASSIFICATION	7.917664547483362E-8	TEST
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999999846662475	WITHOUT_CLASSIFICATION	1.5333752514917794E-8	TEST
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.999999939966466	WITHOUT_CLASSIFICATION	6.003353400798739E-8	TEST
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999989487061894	WITHOUT_CLASSIFICATION	1.051293810525474E-6	TEST
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999999929553063	WITHOUT_CLASSIFICATION	7.04469379038491E-9	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999999393460055	WITHOUT_CLASSIFICATION	6.065399456471316E-8	TEST
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999998484882182	WITHOUT_CLASSIFICATION	1.515117818625815E-7	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999999582306354	WITHOUT_CLASSIFICATION	4.176936465500786E-8	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999998824336669	WITHOUT_CLASSIFICATION	1.1756633311923855E-7	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999995623827108	WITHOUT_CLASSIFICATION	4.376172892587423E-7	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999998260321509	WITHOUT_CLASSIFICATION	1.7396784914152652E-7	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999981503335567	WITHOUT_CLASSIFICATION	1.8496664433273829E-6	TEST
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999999934186173	WITHOUT_CLASSIFICATION	6.581382641905765E-9	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999989425703069	WITHOUT_CLASSIFICATION	1.057429693099459E-6	TEST
// something?	WITHOUT_CLASSIFICATION	0.9999984676478094	WITHOUT_CLASSIFICATION	1.5323521906050078E-6	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999999489065532	WITHOUT_CLASSIFICATION	5.1093446843983234E-8	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999999489065532	WITHOUT_CLASSIFICATION	5.1093446843983234E-8	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999998983293205	WITHOUT_CLASSIFICATION	1.0167067947002062E-7	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999998983293205	WITHOUT_CLASSIFICATION	1.0167067947002062E-7	TEST
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999999826137809	WITHOUT_CLASSIFICATION	1.738621907370901E-8	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999996106271952	WITHOUT_CLASSIFICATION	3.8937280474665087E-7	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999999969070507	WITHOUT_CLASSIFICATION	3.092949308216017E-9	TEST
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999998404551947	WITHOUT_CLASSIFICATION	1.5954480533308858E-7	TEST
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999999510199904	WITHOUT_CLASSIFICATION	4.898000951637072E-8	TEST
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999998651423466	WITHOUT_CLASSIFICATION	1.3485765328679092E-7	TEST
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.999999991000114	WITHOUT_CLASSIFICATION	8.999885949607794E-9	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999998260321509	WITHOUT_CLASSIFICATION	1.7396784914152652E-7	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999981503335567	WITHOUT_CLASSIFICATION	1.8496664433273829E-6	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999989425703069	WITHOUT_CLASSIFICATION	1.057429693099459E-6	TEST
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999998327063591	WITHOUT_CLASSIFICATION	1.6729364090801954E-7	TEST
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999990381678237	WITHOUT_CLASSIFICATION	9.618321762906728E-7	TEST
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999999878325934	WITHOUT_CLASSIFICATION	1.2167406740907873E-8	TEST
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999996552745105	WITHOUT_CLASSIFICATION	3.447254894421076E-7	TEST
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999999790285048	WITHOUT_CLASSIFICATION	2.0971495215031287E-8	TEST
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.999998518740448	WITHOUT_CLASSIFICATION	1.4812595519998064E-6	TEST
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999999195863233	WITHOUT_CLASSIFICATION	8.04136766891766E-8	TEST
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999999334288482	WITHOUT_CLASSIFICATION	6.657115183595782E-8	TEST
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999999037095816	WITHOUT_CLASSIFICATION	9.629041836997939E-8	TEST
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999999881339784	WITHOUT_CLASSIFICATION	1.186602151882138E-8	TEST
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999999829407563	WITHOUT_CLASSIFICATION	1.705924369366788E-8	TEST
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.999999850618433	WITHOUT_CLASSIFICATION	1.49381567110284E-7	TEST
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999997384549888	WITHOUT_CLASSIFICATION	2.6154501125246237E-7	TEST
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999981078033292	WITHOUT_CLASSIFICATION	1.8921966708851196E-6	TEST
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9999997725656611	WITHOUT_CLASSIFICATION	2.2743433889967928E-7	TEST
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999999835328527	WITHOUT_CLASSIFICATION	1.646714734673894E-8	TEST
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999997528418525	WITHOUT_CLASSIFICATION	2.471581474574679E-7	TEST
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999999175055783	WITHOUT_CLASSIFICATION	8.249442176968696E-8	TEST
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999991102041489	WITHOUT_CLASSIFICATION	8.897958510598757E-7	TEST
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.99999998667147	WITHOUT_CLASSIFICATION	1.3328529905885556E-8	TEST
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999999593628666	WITHOUT_CLASSIFICATION	4.063713347959403E-8	TEST
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999996646544811	WITHOUT_CLASSIFICATION	3.353455189593651E-7	TEST
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999961817524172	WITHOUT_CLASSIFICATION	3.818247582877569E-6	TEST
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999998644987214	WITHOUT_CLASSIFICATION	1.3550127864496542E-7	TEST
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999998573051871	WITHOUT_CLASSIFICATION	1.4269481273567459E-7	TEST
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999997907791811	WITHOUT_CLASSIFICATION	2.0922081901183148E-7	TEST
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999999127425931	WITHOUT_CLASSIFICATION	8.725740685013448E-8	TEST
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999981890152823	WITHOUT_CLASSIFICATION	1.8109847177636555E-6	TEST
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999999694907707	WITHOUT_CLASSIFICATION	3.050922921789391E-8	TEST
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999999754073297	WITHOUT_CLASSIFICATION	2.4592670357909515E-8	TEST
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999999892266243	WITHOUT_CLASSIFICATION	1.0773375783277755E-8	TEST
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999993253492542	WITHOUT_CLASSIFICATION	6.746507457915896E-7	TEST
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999998961868268	WITHOUT_CLASSIFICATION	1.0381317312357869E-7	TEST
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999999949329689	WITHOUT_CLASSIFICATION	5.067031100340302E-9	TEST
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999999183403524	WITHOUT_CLASSIFICATION	8.165964754225289E-8	TEST
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999999645774655	WITHOUT_CLASSIFICATION	3.542253433359695E-8	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999999642262342	WITHOUT_CLASSIFICATION	3.5773765899834236E-8	TEST
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.999999978895139	WITHOUT_CLASSIFICATION	2.1104860958339884E-8	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999983554754219	WITHOUT_CLASSIFICATION	1.644524578112942E-6	TEST
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999999713715254	WITHOUT_CLASSIFICATION	2.8628474625971227E-8	TEST
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999999462007989	WITHOUT_CLASSIFICATION	5.3799201145936086E-8	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999999369789253	WITHOUT_CLASSIFICATION	6.302107465693404E-8	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999999642262342	WITHOUT_CLASSIFICATION	3.5773765899834236E-8	TEST
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.999985337072502	WITHOUT_CLASSIFICATION	1.4662927497831094E-5	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999999995469885	WITHOUT_CLASSIFICATION	4.530115134759274E-10	TEST
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999998802601652	WITHOUT_CLASSIFICATION	1.1973983479215513E-7	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999993849933514	WITHOUT_CLASSIFICATION	6.150066485748899E-7	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999993849933514	WITHOUT_CLASSIFICATION	6.150066485748899E-7	TEST
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999998373719815	WITHOUT_CLASSIFICATION	1.6262801859701776E-7	TEST
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999999926808578	WITHOUT_CLASSIFICATION	7.319142192382261E-9	TEST
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.999999977518207	WITHOUT_CLASSIFICATION	2.248179298701496E-8	TEST
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999999933320594	WITHOUT_CLASSIFICATION	6.667940620117533E-9	TEST
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9999999212616225	WITHOUT_CLASSIFICATION	7.873837751364257E-8	TEST
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999999491919056	WITHOUT_CLASSIFICATION	5.080809433109699E-8	TEST
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999997435485026	WITHOUT_CLASSIFICATION	2.564514973557754E-7	TEST
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999998980854053	WITHOUT_CLASSIFICATION	1.019145946518422E-7	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999999729187056	WITHOUT_CLASSIFICATION	2.7081294428494182E-8	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999999729187056	WITHOUT_CLASSIFICATION	2.7081294428494182E-8	TEST
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999998241105955	WITHOUT_CLASSIFICATION	1.758894046007638E-7	TEST
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999978091463227	WITHOUT_CLASSIFICATION	2.190853677341144E-6	TEST
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999999790445617	WITHOUT_CLASSIFICATION	2.0955438241911454E-8	TEST
// must be a public method	WITHOUT_CLASSIFICATION	0.9999999801824323	WITHOUT_CLASSIFICATION	1.9817567647662448E-8	TEST
// must be a public class	WITHOUT_CLASSIFICATION	0.999999973700859	WITHOUT_CLASSIFICATION	2.6299141015368034E-8	TEST
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999999890989121	WITHOUT_CLASSIFICATION	1.0901087984252787E-8	TEST
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999999999549876	WITHOUT_CLASSIFICATION	4.5012452091624155E-11	TEST
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999999516657739	WITHOUT_CLASSIFICATION	4.833422608997875E-8	TEST
// no matching method found	WITHOUT_CLASSIFICATION	0.9999998994031344	WITHOUT_CLASSIFICATION	1.0059686563352742E-7	TEST
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9997955807656335	WITHOUT_CLASSIFICATION	2.044192343665599E-4	TEST
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999712429051184	WITHOUT_CLASSIFICATION	2.8757094881583394E-5	TEST
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999991880295802	WITHOUT_CLASSIFICATION	8.119704198094218E-7	TEST
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999999858795319	WITHOUT_CLASSIFICATION	1.412046827359045E-8	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999988139829695	WITHOUT_CLASSIFICATION	1.186017030501128E-6	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999988139829695	WITHOUT_CLASSIFICATION	1.186017030501128E-6	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.999999861041822	WITHOUT_CLASSIFICATION	1.3895817802574337E-7	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999999383902259	WITHOUT_CLASSIFICATION	6.160977412599632E-8	TEST
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9998116315499638	WITHOUT_CLASSIFICATION	1.8836845003624756E-4	TEST
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999999986342724	WITHOUT_CLASSIFICATION	1.3657276260807897E-9	TEST
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999999991544267	WITHOUT_CLASSIFICATION	8.455733394937965E-10	TEST
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999999647192755	WITHOUT_CLASSIFICATION	3.528072443453881E-8	TEST
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999993009141834	WITHOUT_CLASSIFICATION	6.990858165033299E-7	TEST
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.999999463198049	WITHOUT_CLASSIFICATION	5.368019510106231E-7	TEST
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999963224592314	WITHOUT_CLASSIFICATION	3.6775407686332025E-6	TEST
/* package scope */	WITHOUT_CLASSIFICATION	0.9999996177320877	WITHOUT_CLASSIFICATION	3.822679122897191E-7	TEST
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999999197714238	WITHOUT_CLASSIFICATION	8.022857624228391E-8	TEST
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999998812545988	WITHOUT_CLASSIFICATION	1.1874540125625998E-7	TEST
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999890958809935	WITHOUT_CLASSIFICATION	1.0904119006472204E-5	TEST
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.999999993536476	WITHOUT_CLASSIFICATION	6.463523985530191E-9	TEST
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999993567389341	WITHOUT_CLASSIFICATION	6.432610657989689E-7	TEST
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999999813427698	WITHOUT_CLASSIFICATION	1.865723014579091E-8	TEST
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999999657365414	WITHOUT_CLASSIFICATION	3.426345858052986E-8	TEST
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999999235959697	WITHOUT_CLASSIFICATION	7.64040303080018E-8	TEST
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999999951327443	WITHOUT_CLASSIFICATION	4.867255654189124E-9	TEST
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999999959317837	WITHOUT_CLASSIFICATION	4.068216342706319E-9	TEST
// should not happen!	WITHOUT_CLASSIFICATION	0.9999992124731905	WITHOUT_CLASSIFICATION	7.875268096516412E-7	TEST
// start class	WITHOUT_CLASSIFICATION	0.9999998629846679	WITHOUT_CLASSIFICATION	1.370153320555835E-7	TEST
// make getter for handler	WITHOUT_CLASSIFICATION	0.9999995235248228	WITHOUT_CLASSIFICATION	4.7647517712560653E-7	TEST
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999995560129716	WITHOUT_CLASSIFICATION	4.4398702825553307E-7	TEST
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9996964662680988	WITHOUT_CLASSIFICATION	3.035337319011196E-4	TEST
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999998293908837	WITHOUT_CLASSIFICATION	1.7060911624919295E-7	TEST
// create static private method field	WITHOUT_CLASSIFICATION	0.9999998839703337	WITHOUT_CLASSIFICATION	1.160296662980004E-7	TEST
// load static empty array	WITHOUT_CLASSIFICATION	0.9999999568119188	WITHOUT_CLASSIFICATION	4.318808126975806E-8	TEST
// box arguments	WITHOUT_CLASSIFICATION	0.9999999512346052	WITHOUT_CLASSIFICATION	4.8765394812329266E-8	TEST
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9999990445997402	WITHOUT_CLASSIFICATION	9.554002596952268E-7	TEST
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999999460904648	WITHOUT_CLASSIFICATION	5.3909535109879865E-8	TEST
// do a void return	WITHOUT_CLASSIFICATION	0.999999990188018	WITHOUT_CLASSIFICATION	9.811981951350922E-9	TEST
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999999281911346	WITHOUT_CLASSIFICATION	7.180886551000284E-8	TEST
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999997867005385	WITHOUT_CLASSIFICATION	2.1329946149527656E-7	TEST
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999997892802633	WITHOUT_CLASSIFICATION	2.1071973653924682E-7	TEST
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999999944575396	WITHOUT_CLASSIFICATION	5.542460335581315E-9	TEST
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999988725019333	WITHOUT_CLASSIFICATION	1.1274980667390364E-6	TEST
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999982244302134	WITHOUT_CLASSIFICATION	1.7755697866377011E-6	TEST
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999975953792666	WITHOUT_CLASSIFICATION	2.404620733494026E-6	TEST
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999993203227374	WITHOUT_CLASSIFICATION	6.79677262525913E-7	TEST
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999999666125733	WITHOUT_CLASSIFICATION	3.338742667080628E-8	TEST
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9999999857401518	WITHOUT_CLASSIFICATION	1.425984820903238E-8	TEST
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999869349466979	WITHOUT_CLASSIFICATION	1.306505330212547E-5	TEST
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999999894062283	WITHOUT_CLASSIFICATION	1.059377170559839E-8	TEST
/* NUL */	WITHOUT_CLASSIFICATION	0.9999933986652069	WITHOUT_CLASSIFICATION	6.601334793212977E-6	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999998423596784	WITHOUT_CLASSIFICATION	1.5764032166806182E-7	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999165455439	WITHOUT_CLASSIFICATION	8.345445610441017E-8	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999951616957	WITHOUT_CLASSIFICATION	4.838304278378653E-9	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999966445937015	WITHOUT_CLASSIFICATION	3.3554062984991996E-6	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.999999987945185	WITHOUT_CLASSIFICATION	1.2054814948286223E-8	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.999999987945185	WITHOUT_CLASSIFICATION	1.2054814948286223E-8	TEST
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999999963159661	WITHOUT_CLASSIFICATION	3.6840338525640706E-9	TEST
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999993279222902	WITHOUT_CLASSIFICATION	6.720777098026842E-7	TEST
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999981835633541	WITHOUT_CLASSIFICATION	1.8164366458838204E-6	TEST
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.999999918980559	WITHOUT_CLASSIFICATION	8.101944103583003E-8	TEST
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999998637932943	WITHOUT_CLASSIFICATION	1.3620670568336827E-7	TEST
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999995439039246	WITHOUT_CLASSIFICATION	4.5609607544722653E-7	TEST
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999998501642067	WITHOUT_CLASSIFICATION	1.4983579331132657E-7	TEST
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.999999948658901	WITHOUT_CLASSIFICATION	5.134109906585453E-8	TEST
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999999957107998	WITHOUT_CLASSIFICATION	4.289200223454823E-9	TEST
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999998102313444	WITHOUT_CLASSIFICATION	1.8976865562303096E-7	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999999810805534	WITHOUT_CLASSIFICATION	1.8919446582806008E-8	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999999810805534	WITHOUT_CLASSIFICATION	1.8919446582806008E-8	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999999810805534	WITHOUT_CLASSIFICATION	1.8919446582806008E-8	TEST
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999999973756551	WITHOUT_CLASSIFICATION	2.6243449438655103E-9	TEST
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999999948180472	WITHOUT_CLASSIFICATION	5.181952730890055E-9	TEST
// Single node in list	WITHOUT_CLASSIFICATION	0.9999999315010486	WITHOUT_CLASSIFICATION	6.849895148270346E-8	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999999855352492	WITHOUT_CLASSIFICATION	1.4464750846858517E-8	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999999855352492	WITHOUT_CLASSIFICATION	1.4464750846858517E-8	TEST
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999999192957177	WITHOUT_CLASSIFICATION	8.070428232989136E-8	TEST
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999993528873059	WITHOUT_CLASSIFICATION	6.471126941043242E-7	TEST
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999991160934586	WITHOUT_CLASSIFICATION	8.839065413652033E-7	TEST
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.999999713375734	WITHOUT_CLASSIFICATION	2.8662426592573043E-7	TEST
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999999191023389	WITHOUT_CLASSIFICATION	8.089766114501106E-8	TEST
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999975135087888	WITHOUT_CLASSIFICATION	2.486491211226836E-6	TEST
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999998273760704	WITHOUT_CLASSIFICATION	1.7262392954587221E-7	TEST
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999999535257508	WITHOUT_CLASSIFICATION	4.647424922152129E-8	TEST
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.999999884271838	WITHOUT_CLASSIFICATION	1.1572816200272174E-7	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999999746175096	WITHOUT_CLASSIFICATION	2.5382490430260175E-8	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999999746175096	WITHOUT_CLASSIFICATION	2.5382490430260175E-8	TEST
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999975643026089	WITHOUT_CLASSIFICATION	2.435697391165843E-6	TEST
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999916078920322	WITHOUT_CLASSIFICATION	8.392107967763578E-6	TEST
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999992604897193	WITHOUT_CLASSIFICATION	7.395102807154335E-7	TEST
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999996732432833	WITHOUT_CLASSIFICATION	3.2675671660600633E-7	TEST
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.99999998809858	WITHOUT_CLASSIFICATION	1.190141983867732E-8	TEST
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999998013875998	WITHOUT_CLASSIFICATION	1.9861240019926E-7	TEST
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999997978450731	WITHOUT_CLASSIFICATION	2.0215492700930077E-7	TEST
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999998270298449	WITHOUT_CLASSIFICATION	1.7297015501194036E-7	TEST
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999986933892441	WITHOUT_CLASSIFICATION	1.3066107559669623E-6	TEST
// POP	WITHOUT_CLASSIFICATION	0.9999966929039309	WITHOUT_CLASSIFICATION	3.307096069035131E-6	TEST
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999999645662327	WITHOUT_CLASSIFICATION	3.543376731488582E-8	TEST
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999975698583566	WITHOUT_CLASSIFICATION	2.4301416433929617E-6	TEST
// SET_P	WITHOUT_CLASSIFICATION	0.9999986043925055	WITHOUT_CLASSIFICATION	1.3956074944978395E-6	TEST
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.999999891849635	WITHOUT_CLASSIFICATION	1.0815036504895815E-7	TEST
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9999951074050885	WITHOUT_CLASSIFICATION	4.892594911461086E-6	TEST
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999999876909081	WITHOUT_CLASSIFICATION	1.2309091972256087E-8	TEST
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999998788593202	WITHOUT_CLASSIFICATION	1.2114067976766978E-7	TEST
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999621574537882	WITHOUT_CLASSIFICATION	3.7842546211788535E-5	TEST
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999999265467225	WITHOUT_CLASSIFICATION	7.345327746367756E-8	TEST
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999999899034498	WITHOUT_CLASSIFICATION	1.0096550135805932E-8	TEST
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9999991489904657	WITHOUT_CLASSIFICATION	8.510095342431287E-7	TEST
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999998553707344	WITHOUT_CLASSIFICATION	1.4462926548496472E-7	TEST
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999998882733351	WITHOUT_CLASSIFICATION	1.1172666482653961E-7	TEST
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999853779854436	WITHOUT_CLASSIFICATION	1.462201455640691E-5	TEST
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999992922332624	WITHOUT_CLASSIFICATION	7.077667375897096E-7	TEST
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.99999995487713	WITHOUT_CLASSIFICATION	4.512286995551962E-8	TEST
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.999999772259953	WITHOUT_CLASSIFICATION	2.27740047022668E-7	TEST
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999987319343908	WITHOUT_CLASSIFICATION	1.2680656092568675E-6	TEST
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999999633741822	WITHOUT_CLASSIFICATION	3.662581774518464E-8	TEST
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999991569744567	WITHOUT_CLASSIFICATION	8.430255433220445E-7	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999914047077968	WITHOUT_CLASSIFICATION	8.59529220322963E-6	TEST
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999996225427149	WITHOUT_CLASSIFICATION	3.774572849956562E-7	TEST
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999994974066105	WITHOUT_CLASSIFICATION	5.025933894363127E-7	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999914047077968	WITHOUT_CLASSIFICATION	8.59529220322963E-6	TEST
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999998429415703	WITHOUT_CLASSIFICATION	1.5705842968563685E-7	TEST
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999978855242512	WITHOUT_CLASSIFICATION	2.114475748715808E-6	TEST
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999976597388218	WITHOUT_CLASSIFICATION	2.340261178202009E-6	TEST
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999993976326863	WITHOUT_CLASSIFICATION	6.02367313593993E-7	TEST
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999999178082696	WITHOUT_CLASSIFICATION	8.21917303986588E-8	TEST
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999999281425024	WITHOUT_CLASSIFICATION	7.185749766250447E-8	TEST
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999999353994635	WITHOUT_CLASSIFICATION	6.46005364940265E-8	TEST
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999994103658713	WITHOUT_CLASSIFICATION	5.896341287077418E-7	TEST
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999990454728499	WITHOUT_CLASSIFICATION	9.54527150103636E-7	TEST
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999968492856641	WITHOUT_CLASSIFICATION	3.150714335925825E-6	TEST
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999916692340529	WITHOUT_CLASSIFICATION	8.330765947092823E-6	TEST
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999983083754486	WITHOUT_CLASSIFICATION	1.6916245514601854E-6	TEST
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999977878176016	WITHOUT_CLASSIFICATION	2.212182398366033E-6	TEST
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999997256595385	WITHOUT_CLASSIFICATION	2.743404615457435E-7	TEST
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999976119119712	WITHOUT_CLASSIFICATION	2.3880880288199082E-6	TEST
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999915250396187	WITHOUT_CLASSIFICATION	8.474960381236556E-6	TEST
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999866075010138	WITHOUT_CLASSIFICATION	1.3392498986236484E-5	TEST
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999993287633846	WITHOUT_CLASSIFICATION	6.712366154636533E-7	TEST
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999998155223323	WITHOUT_CLASSIFICATION	1.844776676434127E-7	TEST
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999897710136936	WITHOUT_CLASSIFICATION	1.0228986306446805E-5	TEST
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999992353749887	WITHOUT_CLASSIFICATION	7.64625011283621E-7	TEST
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999995985073677	WITHOUT_CLASSIFICATION	4.0149263234451413E-7	TEST
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999972312932988	WITHOUT_CLASSIFICATION	2.768706701271117E-6	TEST
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999980200991366	WITHOUT_CLASSIFICATION	1.979900863361742E-6	TEST
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999921705844635	WITHOUT_CLASSIFICATION	7.829415536435267E-6	TEST
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999996978746604	WITHOUT_CLASSIFICATION	3.02125339710388E-7	TEST
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.99999367871754	WITHOUT_CLASSIFICATION	6.321282460109094E-6	TEST
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999997549311156	WITHOUT_CLASSIFICATION	2.450688844969256E-7	TEST
// block (primary)	WITHOUT_CLASSIFICATION	0.9999999581142683	WITHOUT_CLASSIFICATION	4.188573164405555E-8	TEST
// block (expr)	WITHOUT_CLASSIFICATION	0.9999999383582766	WITHOUT_CLASSIFICATION	6.164172341858515E-8	TEST
// hash	WITHOUT_CLASSIFICATION	0.9999982574340807	WITHOUT_CLASSIFICATION	1.7425659194134283E-6	TEST
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9999646540790923	WITHOUT_CLASSIFICATION	3.534592090768373E-5	TEST
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9999629556853461	WITHOUT_CLASSIFICATION	3.70443146538637E-5	TEST
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.999999902947087	WITHOUT_CLASSIFICATION	9.705291302586971E-8	TEST
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999998822931379	WITHOUT_CLASSIFICATION	1.1770686221565692E-7	TEST
// binary	WITHOUT_CLASSIFICATION	0.9999996739783112	WITHOUT_CLASSIFICATION	3.26021688729497E-7	TEST
// decimal	WITHOUT_CLASSIFICATION	0.9999998815812081	WITHOUT_CLASSIFICATION	1.1841879185322715E-7	TEST
//Octal	WITHOUT_CLASSIFICATION	0.9999906873863481	WITHOUT_CLASSIFICATION	9.31261365189955E-6	TEST
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.999999944478278	WITHOUT_CLASSIFICATION	5.5521721981463554E-8	TEST
// backslash	WITHOUT_CLASSIFICATION	0.9999997907699653	WITHOUT_CLASSIFICATION	2.0923003472979236E-7	TEST
// newline	WITHOUT_CLASSIFICATION	0.9999994543161136	WITHOUT_CLASSIFICATION	5.456838864265358E-7	TEST
// horizontal tab	WITHOUT_CLASSIFICATION	0.999999836070353	WITHOUT_CLASSIFICATION	1.6392964693716734E-7	TEST
// form feed	WITHOUT_CLASSIFICATION	0.9999979580120124	WITHOUT_CLASSIFICATION	2.0419879876687806E-6	TEST
// vertical tab	WITHOUT_CLASSIFICATION	0.9999999584117797	WITHOUT_CLASSIFICATION	4.158822035536666E-8	TEST
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999998325322196	WITHOUT_CLASSIFICATION	1.6746778043146932E-7	TEST
// escape	WITHOUT_CLASSIFICATION	0.9999996351559557	WITHOUT_CLASSIFICATION	3.648440443111905E-7	TEST
// hex constant	WITHOUT_CLASSIFICATION	0.9999999433738581	WITHOUT_CLASSIFICATION	5.662614185318288E-8	TEST
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999998724152351	WITHOUT_CLASSIFICATION	1.2758476480789699E-7	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999991134901429	WITHOUT_CLASSIFICATION	8.865098570685935E-7	TEST
// space	WITHOUT_CLASSIFICATION	0.9999998915270361	WITHOUT_CLASSIFICATION	1.0847296398162045E-7	TEST
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999861800399247	WITHOUT_CLASSIFICATION	1.381996007542393E-5	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999993842401117	WITHOUT_CLASSIFICATION	6.157598882597092E-7	TEST
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999998009731187	WITHOUT_CLASSIFICATION	1.9902688121869027E-7	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999991134901429	WITHOUT_CLASSIFICATION	8.865098570685935E-7	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9999324224247265	WITHOUT_CLASSIFICATION	6.75775752735413E-5	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9999324224247265	WITHOUT_CLASSIFICATION	6.75775752735413E-5	TEST
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999958158100006	WITHOUT_CLASSIFICATION	4.184189999447663E-6	TEST
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999999138206498	WITHOUT_CLASSIFICATION	8.617935021149348E-8	TEST
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999999790155155	WITHOUT_CLASSIFICATION	2.0984484442591622E-8	TEST
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999985276836392	WITHOUT_CLASSIFICATION	1.4723163608354952E-6	TEST
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999995411198481	WITHOUT_CLASSIFICATION	4.588801518303108E-7	TEST
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999996624197233	WITHOUT_CLASSIFICATION	3.375802768423994E-7	TEST
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999998938522623	WITHOUT_CLASSIFICATION	1.0614773769714489E-7	TEST
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9848365861685517	WITHOUT_CLASSIFICATION	0.015163413831448137	TEST
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999999705970578	WITHOUT_CLASSIFICATION	2.940294221343189E-8	TEST
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999834622579838	WITHOUT_CLASSIFICATION	1.6537742016103398E-5	TEST
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999997431301509	WITHOUT_CLASSIFICATION	2.5686984903886074E-7	TEST
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999999962939089	WITHOUT_CLASSIFICATION	3.7060911658134503E-9	TEST
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.999998693489464	WITHOUT_CLASSIFICATION	1.3065105360188624E-6	TEST
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999987314322325	WITHOUT_CLASSIFICATION	1.268567767464313E-6	TEST
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999977300404551	WITHOUT_CLASSIFICATION	2.269959544797451E-6	TEST
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999967601506228	WITHOUT_CLASSIFICATION	3.2398493772052778E-6	TEST
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999998607670992	WITHOUT_CLASSIFICATION	1.392329008040012E-7	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999858059131049	WITHOUT_CLASSIFICATION	1.419408689511298E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999858059131049	WITHOUT_CLASSIFICATION	1.419408689511298E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999858059131049	WITHOUT_CLASSIFICATION	1.419408689511298E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999858059131049	WITHOUT_CLASSIFICATION	1.419408689511298E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999858059131049	WITHOUT_CLASSIFICATION	1.419408689511298E-5	TEST
// line 329	WITHOUT_CLASSIFICATION	0.999999504425637	WITHOUT_CLASSIFICATION	4.955743629646695E-7	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999987261912356	WITHOUT_CLASSIFICATION	1.2738087644016302E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999955594584206	WITHOUT_CLASSIFICATION	4.440541579377163E-6	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999999752811133	WITHOUT_CLASSIFICATION	2.471888670934703E-8	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999983931577373	WITHOUT_CLASSIFICATION	1.6068422627706276E-6	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999999850401862	WITHOUT_CLASSIFICATION	1.4959813898017382E-8	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999994511927663	WITHOUT_CLASSIFICATION	5.488072336145921E-7	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999998825306888	WITHOUT_CLASSIFICATION	1.174693111752494E-7	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999999443569377	WITHOUT_CLASSIFICATION	5.5643062204458E-8	TEST
// line 271	WITHOUT_CLASSIFICATION	0.9999997512468333	WITHOUT_CLASSIFICATION	2.4875316676948274E-7	TEST
// line 274	WITHOUT_CLASSIFICATION	0.9999997541394221	WITHOUT_CLASSIFICATION	2.4586057789469537E-7	TEST
// line 303	WITHOUT_CLASSIFICATION	0.9999995458745388	WITHOUT_CLASSIFICATION	4.5412546129492E-7	TEST
// line 311	WITHOUT_CLASSIFICATION	0.9999996314083397	WITHOUT_CLASSIFICATION	3.685916603480398E-7	TEST
// line 314	WITHOUT_CLASSIFICATION	0.9999996673234458	WITHOUT_CLASSIFICATION	3.326765541538629E-7	TEST
// line 317	WITHOUT_CLASSIFICATION	0.9999996878924818	WITHOUT_CLASSIFICATION	3.1210751814444866E-7	TEST
// line 332	WITHOUT_CLASSIFICATION	0.9999995990840174	WITHOUT_CLASSIFICATION	4.0091598271657717E-7	TEST
// line 338	WITHOUT_CLASSIFICATION	0.999999615668825	WITHOUT_CLASSIFICATION	3.8433117500961173E-7	TEST
// line 341	WITHOUT_CLASSIFICATION	0.999999623119883	WITHOUT_CLASSIFICATION	3.768801169347251E-7	TEST
// line 344	WITHOUT_CLASSIFICATION	0.9999996275615227	WITHOUT_CLASSIFICATION	3.724384772367157E-7	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999996252017614	WITHOUT_CLASSIFICATION	3.747982385062282E-7	TEST
// line 358	WITHOUT_CLASSIFICATION	0.9999996210030961	WITHOUT_CLASSIFICATION	3.789969038894062E-7	TEST
// line 367	WITHOUT_CLASSIFICATION	0.9999996631840801	WITHOUT_CLASSIFICATION	3.3681591994224844E-7	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999996258089707	WITHOUT_CLASSIFICATION	3.741910292950824E-7	TEST
// line 378	WITHOUT_CLASSIFICATION	0.9999996394839403	WITHOUT_CLASSIFICATION	3.605160597033077E-7	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999996184935988	WITHOUT_CLASSIFICATION	3.8150640126974786E-7	TEST
// line 407	WITHOUT_CLASSIFICATION	0.9999997695446426	WITHOUT_CLASSIFICATION	2.3045535732549563E-7	TEST
// line 411	WITHOUT_CLASSIFICATION	0.9999997629997004	WITHOUT_CLASSIFICATION	2.3700029952839164E-7	TEST
// line 414	WITHOUT_CLASSIFICATION	0.9999997843736489	WITHOUT_CLASSIFICATION	2.1562635106909058E-7	TEST
// line 417	WITHOUT_CLASSIFICATION	0.999999799317743	WITHOUT_CLASSIFICATION	2.0068225706277578E-7	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999997027149329	WITHOUT_CLASSIFICATION	2.9728506703537647E-7	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999997415981366	WITHOUT_CLASSIFICATION	2.584018634116397E-7	TEST
// line 434	WITHOUT_CLASSIFICATION	0.9999996976347236	WITHOUT_CLASSIFICATION	3.0236527638375086E-7	TEST
// line 443	WITHOUT_CLASSIFICATION	0.9999996973152107	WITHOUT_CLASSIFICATION	3.026847894097934E-7	TEST
// line 446	WITHOUT_CLASSIFICATION	0.9999997657015172	WITHOUT_CLASSIFICATION	2.3429848281631736E-7	TEST
// line 452	WITHOUT_CLASSIFICATION	0.9999997533119991	WITHOUT_CLASSIFICATION	2.466880009515319E-7	TEST
// line 457	WITHOUT_CLASSIFICATION	0.9999997807330229	WITHOUT_CLASSIFICATION	2.1926697704868907E-7	TEST
// line 464	WITHOUT_CLASSIFICATION	0.9999997625971988	WITHOUT_CLASSIFICATION	2.374028012501921E-7	TEST
// line 467	WITHOUT_CLASSIFICATION	0.9999997822819348	WITHOUT_CLASSIFICATION	2.1771806530463814E-7	TEST
// line 470	WITHOUT_CLASSIFICATION	0.9999997765095289	WITHOUT_CLASSIFICATION	2.2349047110657005E-7	TEST
// line 479	WITHOUT_CLASSIFICATION	0.9999997538938131	WITHOUT_CLASSIFICATION	2.461061869217886E-7	TEST
// line 484	WITHOUT_CLASSIFICATION	0.9999997473394667	WITHOUT_CLASSIFICATION	2.5266053319232276E-7	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999997592594775	WITHOUT_CLASSIFICATION	2.407405224766303E-7	TEST
// line 492	WITHOUT_CLASSIFICATION	0.9999997236521746	WITHOUT_CLASSIFICATION	2.76347825401369E-7	TEST
// line 498	WITHOUT_CLASSIFICATION	0.9999997320853798	WITHOUT_CLASSIFICATION	2.679146200781719E-7	TEST
// line 501	WITHOUT_CLASSIFICATION	0.9999997431679626	WITHOUT_CLASSIFICATION	2.5683203747677397E-7	TEST
// line 504	WITHOUT_CLASSIFICATION	0.9999997376123633	WITHOUT_CLASSIFICATION	2.623876367528433E-7	TEST
// line 507	WITHOUT_CLASSIFICATION	0.9999997663260904	WITHOUT_CLASSIFICATION	2.3367390955861203E-7	TEST
// line 510	WITHOUT_CLASSIFICATION	0.999999800108427	WITHOUT_CLASSIFICATION	1.998915729800301E-7	TEST
// line 519	WITHOUT_CLASSIFICATION	0.9999997684367388	WITHOUT_CLASSIFICATION	2.3156326124206215E-7	TEST
// line 525	WITHOUT_CLASSIFICATION	0.999999733259048	WITHOUT_CLASSIFICATION	2.6674095189013705E-7	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999955594584206	WITHOUT_CLASSIFICATION	4.440541579377163E-6	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999997167250807	WITHOUT_CLASSIFICATION	2.8327491934227815E-7	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999997488228421	WITHOUT_CLASSIFICATION	2.511771578101125E-7	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999996970633416	WITHOUT_CLASSIFICATION	3.029366584743094E-7	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999997655228802	WITHOUT_CLASSIFICATION	2.344771197905363E-7	TEST
// line 556	WITHOUT_CLASSIFICATION	0.9999997683126539	WITHOUT_CLASSIFICATION	2.3168734598038607E-7	TEST
// line 559	WITHOUT_CLASSIFICATION	0.9999997362544495	WITHOUT_CLASSIFICATION	2.637455504726679E-7	TEST
// line 563	WITHOUT_CLASSIFICATION	0.9999997115778116	WITHOUT_CLASSIFICATION	2.8842218833159384E-7	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999997665175223	WITHOUT_CLASSIFICATION	2.3348247753029457E-7	TEST
// line 569	WITHOUT_CLASSIFICATION	0.9999997488545143	WITHOUT_CLASSIFICATION	2.511454858256831E-7	TEST
// line 575	WITHOUT_CLASSIFICATION	0.9999997695098792	WITHOUT_CLASSIFICATION	2.304901209173009E-7	TEST
// line 578	WITHOUT_CLASSIFICATION	0.9999997682304171	WITHOUT_CLASSIFICATION	2.3176958280358334E-7	TEST
// line 587	WITHOUT_CLASSIFICATION	0.9999997682260293	WITHOUT_CLASSIFICATION	2.317739707089101E-7	TEST
// line 596	WITHOUT_CLASSIFICATION	0.9999997485789501	WITHOUT_CLASSIFICATION	2.5142104989481546E-7	TEST
// line 604	WITHOUT_CLASSIFICATION	0.9999997398486337	WITHOUT_CLASSIFICATION	2.601513663928512E-7	TEST
// line 607	WITHOUT_CLASSIFICATION	0.9999997684078303	WITHOUT_CLASSIFICATION	2.315921696640751E-7	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999998021533031	WITHOUT_CLASSIFICATION	1.9784669692462526E-7	TEST
// line 613	WITHOUT_CLASSIFICATION	0.999999734065417	WITHOUT_CLASSIFICATION	2.6593458309616746E-7	TEST
// line 616	WITHOUT_CLASSIFICATION	0.9999997853770624	WITHOUT_CLASSIFICATION	2.1462293770726948E-7	TEST
// line 634	WITHOUT_CLASSIFICATION	0.999999703337906	WITHOUT_CLASSIFICATION	2.9666209399731044E-7	TEST
// line 638	WITHOUT_CLASSIFICATION	0.9999996942338621	WITHOUT_CLASSIFICATION	3.05766137869477E-7	TEST
// line 643	WITHOUT_CLASSIFICATION	0.9999997009463465	WITHOUT_CLASSIFICATION	2.990536535571789E-7	TEST
// line 646	WITHOUT_CLASSIFICATION	0.9999997578347184	WITHOUT_CLASSIFICATION	2.421652815701057E-7	TEST
// line 655	WITHOUT_CLASSIFICATION	0.9999997646596989	WITHOUT_CLASSIFICATION	2.353403010214929E-7	TEST
// line 660	WITHOUT_CLASSIFICATION	0.9999997464642292	WITHOUT_CLASSIFICATION	2.535357709103532E-7	TEST
// line 667	WITHOUT_CLASSIFICATION	0.999999774755936	WITHOUT_CLASSIFICATION	2.2524406400939102E-7	TEST
// line 670	WITHOUT_CLASSIFICATION	0.9999997802524714	WITHOUT_CLASSIFICATION	2.197475285866972E-7	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999997633989928	WITHOUT_CLASSIFICATION	2.3660100726467102E-7	TEST
// line 696	WITHOUT_CLASSIFICATION	0.999999738194974	WITHOUT_CLASSIFICATION	2.6180502599955467E-7	TEST
// line 701	WITHOUT_CLASSIFICATION	0.9999997760563463	WITHOUT_CLASSIFICATION	2.2394365379242814E-7	TEST
// line 717	WITHOUT_CLASSIFICATION	0.9999997911850728	WITHOUT_CLASSIFICATION	2.088149272660231E-7	TEST
// line 720	WITHOUT_CLASSIFICATION	0.9999997152553334	WITHOUT_CLASSIFICATION	2.847446666552345E-7	TEST
// line 726	WITHOUT_CLASSIFICATION	0.9999997525167824	WITHOUT_CLASSIFICATION	2.474832175950291E-7	TEST
// line 729	WITHOUT_CLASSIFICATION	0.9999996930398606	WITHOUT_CLASSIFICATION	3.069601394322294E-7	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999996903084206	WITHOUT_CLASSIFICATION	3.096915794441796E-7	TEST
// line 735	WITHOUT_CLASSIFICATION	0.999999713734004	WITHOUT_CLASSIFICATION	2.8626599605806296E-7	TEST
// line 738	WITHOUT_CLASSIFICATION	0.9999997031080985	WITHOUT_CLASSIFICATION	2.968919014322152E-7	TEST
// line 751	WITHOUT_CLASSIFICATION	0.9999997685950974	WITHOUT_CLASSIFICATION	2.3140490252019694E-7	TEST
// line 754	WITHOUT_CLASSIFICATION	0.999999771502353	WITHOUT_CLASSIFICATION	2.2849764710253983E-7	TEST
// line 757	WITHOUT_CLASSIFICATION	0.9999997704492769	WITHOUT_CLASSIFICATION	2.295507229954312E-7	TEST
// line 760	WITHOUT_CLASSIFICATION	0.9999997640784135	WITHOUT_CLASSIFICATION	2.3592158640400194E-7	TEST
// line 763	WITHOUT_CLASSIFICATION	0.999999718630123	WITHOUT_CLASSIFICATION	2.8136987690140813E-7	TEST
// line 769	WITHOUT_CLASSIFICATION	0.9999997549959537	WITHOUT_CLASSIFICATION	2.45004046314793E-7	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999997494687949	WITHOUT_CLASSIFICATION	2.505312050573714E-7	TEST
// line 775	WITHOUT_CLASSIFICATION	0.9999997690155568	WITHOUT_CLASSIFICATION	2.3098444333619547E-7	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999997550495875	WITHOUT_CLASSIFICATION	2.4495041249489927E-7	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999997603763623	WITHOUT_CLASSIFICATION	2.396236377196417E-7	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999997425193939	WITHOUT_CLASSIFICATION	2.5748060600875766E-7	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999997458842588	WITHOUT_CLASSIFICATION	2.541157412300931E-7	TEST
// line 797	WITHOUT_CLASSIFICATION	0.9999997473750709	WITHOUT_CLASSIFICATION	2.526249291662278E-7	TEST
// line 803	WITHOUT_CLASSIFICATION	0.9999996044341053	WITHOUT_CLASSIFICATION	3.955658947289545E-7	TEST
// line 806	WITHOUT_CLASSIFICATION	0.9999997320092865	WITHOUT_CLASSIFICATION	2.6799071346314406E-7	TEST
// line 809	WITHOUT_CLASSIFICATION	0.999999698643689	WITHOUT_CLASSIFICATION	3.01356311044701E-7	TEST
// line 815	WITHOUT_CLASSIFICATION	0.9999997780556577	WITHOUT_CLASSIFICATION	2.2194434229036643E-7	TEST
// line 818	WITHOUT_CLASSIFICATION	0.9999997818681006	WITHOUT_CLASSIFICATION	2.1813189936721958E-7	TEST
// line 821	WITHOUT_CLASSIFICATION	0.9999997220678543	WITHOUT_CLASSIFICATION	2.7793214577862016E-7	TEST
// line 824	WITHOUT_CLASSIFICATION	0.9999997216381936	WITHOUT_CLASSIFICATION	2.7836180636374395E-7	TEST
// line 830	WITHOUT_CLASSIFICATION	0.9999996737712004	WITHOUT_CLASSIFICATION	3.2622879963626104E-7	TEST
// line 833	WITHOUT_CLASSIFICATION	0.9999996793887875	WITHOUT_CLASSIFICATION	3.2061121255670453E-7	TEST
// line 836	WITHOUT_CLASSIFICATION	0.9999996918481346	WITHOUT_CLASSIFICATION	3.0815186530012914E-7	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999996519355324	WITHOUT_CLASSIFICATION	3.480644676883881E-7	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999997266273903	WITHOUT_CLASSIFICATION	2.733726096714109E-7	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999997392618177	WITHOUT_CLASSIFICATION	2.607381822372673E-7	TEST
// line 852	WITHOUT_CLASSIFICATION	0.9999997389615894	WITHOUT_CLASSIFICATION	2.6103841059742607E-7	TEST
// line 858	WITHOUT_CLASSIFICATION	0.999999748069138	WITHOUT_CLASSIFICATION	2.5193086196797184E-7	TEST
// line 861	WITHOUT_CLASSIFICATION	0.9999997473628057	WITHOUT_CLASSIFICATION	2.5263719423174276E-7	TEST
// line 868	WITHOUT_CLASSIFICATION	0.9999997482311443	WITHOUT_CLASSIFICATION	2.5176885558298224E-7	TEST
// line 871	WITHOUT_CLASSIFICATION	0.9999997570497088	WITHOUT_CLASSIFICATION	2.4295029125314325E-7	TEST
// line 876	WITHOUT_CLASSIFICATION	0.999999769021474	WITHOUT_CLASSIFICATION	2.309785258543249E-7	TEST
// line 879	WITHOUT_CLASSIFICATION	0.9999997403754992	WITHOUT_CLASSIFICATION	2.5962450079002213E-7	TEST
// line 883	WITHOUT_CLASSIFICATION	0.9999996789414325	WITHOUT_CLASSIFICATION	3.21058567524004E-7	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999996616665457	WITHOUT_CLASSIFICATION	3.3833345424784133E-7	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999997343245184	WITHOUT_CLASSIFICATION	2.656754815405887E-7	TEST
// line 899	WITHOUT_CLASSIFICATION	0.9999997209039707	WITHOUT_CLASSIFICATION	2.7909602938025384E-7	TEST
// line 903	WITHOUT_CLASSIFICATION	0.999999573017835	WITHOUT_CLASSIFICATION	4.2698216499351257E-7	TEST
// line 907	WITHOUT_CLASSIFICATION	0.9999997364691656	WITHOUT_CLASSIFICATION	2.6353083441921364E-7	TEST
// line 915	WITHOUT_CLASSIFICATION	0.9999997608810136	WITHOUT_CLASSIFICATION	2.39118986425982E-7	TEST
// line 920	WITHOUT_CLASSIFICATION	0.9999996628755464	WITHOUT_CLASSIFICATION	3.371244535921709E-7	TEST
// line 923	WITHOUT_CLASSIFICATION	0.9999996291148138	WITHOUT_CLASSIFICATION	3.708851862601973E-7	TEST
// line 926	WITHOUT_CLASSIFICATION	0.9999997069913987	WITHOUT_CLASSIFICATION	2.930086012364829E-7	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999996364220023	WITHOUT_CLASSIFICATION	3.6357799768946504E-7	TEST
// line 936	WITHOUT_CLASSIFICATION	0.9999996708344155	WITHOUT_CLASSIFICATION	3.291655843717062E-7	TEST
// line 940	WITHOUT_CLASSIFICATION	0.9999997145673127	WITHOUT_CLASSIFICATION	2.854326872614405E-7	TEST
// line 944	WITHOUT_CLASSIFICATION	0.999999722495213	WITHOUT_CLASSIFICATION	2.775047870485627E-7	TEST
// line 948	WITHOUT_CLASSIFICATION	0.9999997149453977	WITHOUT_CLASSIFICATION	2.850546022338523E-7	TEST
// line 956	WITHOUT_CLASSIFICATION	0.9999997465079778	WITHOUT_CLASSIFICATION	2.53492022130859E-7	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999997218227172	WITHOUT_CLASSIFICATION	2.7817728277582454E-7	TEST
// line 964	WITHOUT_CLASSIFICATION	0.9999997326673097	WITHOUT_CLASSIFICATION	2.673326902848652E-7	TEST
// line 967	WITHOUT_CLASSIFICATION	0.9999997528641357	WITHOUT_CLASSIFICATION	2.471358642404829E-7	TEST
// line 972	WITHOUT_CLASSIFICATION	0.9999997288090103	WITHOUT_CLASSIFICATION	2.711909896787802E-7	TEST
// line 978	WITHOUT_CLASSIFICATION	0.9999997382385379	WITHOUT_CLASSIFICATION	2.6176146215885853E-7	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999997082723576	WITHOUT_CLASSIFICATION	2.917276423299215E-7	TEST
// line 984	WITHOUT_CLASSIFICATION	0.9999997155846567	WITHOUT_CLASSIFICATION	2.844153433459608E-7	TEST
// line 986	WITHOUT_CLASSIFICATION	0.9999997268260954	WITHOUT_CLASSIFICATION	2.731739046532575E-7	TEST
// line 996	WITHOUT_CLASSIFICATION	0.9999997316608812	WITHOUT_CLASSIFICATION	2.6833911885309014E-7	TEST
// line 1001	WITHOUT_CLASSIFICATION	0.9999997465818536	WITHOUT_CLASSIFICATION	2.5341814633838887E-7	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999997720537638	WITHOUT_CLASSIFICATION	2.2794623621136845E-7	TEST
// line 1008	WITHOUT_CLASSIFICATION	0.9999997386011101	WITHOUT_CLASSIFICATION	2.613988898594972E-7	TEST
// line 1014	WITHOUT_CLASSIFICATION	0.9999997856377673	WITHOUT_CLASSIFICATION	2.1436223268873294E-7	TEST
// line 1029	WITHOUT_CLASSIFICATION	0.999999703124509	WITHOUT_CLASSIFICATION	2.9687549099350537E-7	TEST
// line 1032	WITHOUT_CLASSIFICATION	0.9999996583349865	WITHOUT_CLASSIFICATION	3.4166501354763875E-7	TEST
// line 1034	WITHOUT_CLASSIFICATION	0.9999996821592572	WITHOUT_CLASSIFICATION	3.178407428345601E-7	TEST
// line 1045	WITHOUT_CLASSIFICATION	0.9999997847681217	WITHOUT_CLASSIFICATION	2.152318783028194E-7	TEST
// line 1048	WITHOUT_CLASSIFICATION	0.999999771566114	WITHOUT_CLASSIFICATION	2.2843388607315437E-7	TEST
// line 1051	WITHOUT_CLASSIFICATION	0.9999997247840611	WITHOUT_CLASSIFICATION	2.7521593890787065E-7	TEST
// line 1058	WITHOUT_CLASSIFICATION	0.9999997553395207	WITHOUT_CLASSIFICATION	2.446604793566035E-7	TEST
// line 1070	WITHOUT_CLASSIFICATION	0.999999831136435	WITHOUT_CLASSIFICATION	1.6886356508430752E-7	TEST
// line 1073	WITHOUT_CLASSIFICATION	0.9999997533710383	WITHOUT_CLASSIFICATION	2.466289617457916E-7	TEST
// line 1076	WITHOUT_CLASSIFICATION	0.999999808665081	WITHOUT_CLASSIFICATION	1.9133491910058422E-7	TEST
// line 1079	WITHOUT_CLASSIFICATION	0.9999997849552804	WITHOUT_CLASSIFICATION	2.1504471969827656E-7	TEST
// line 1082	WITHOUT_CLASSIFICATION	0.9999997381538526	WITHOUT_CLASSIFICATION	2.618461473394942E-7	TEST
// line 1089	WITHOUT_CLASSIFICATION	0.9999997262123417	WITHOUT_CLASSIFICATION	2.7378765831772057E-7	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999997748997271	WITHOUT_CLASSIFICATION	2.2510027278381939E-7	TEST
// line 1100	WITHOUT_CLASSIFICATION	0.9999997965794312	WITHOUT_CLASSIFICATION	2.0342056886445808E-7	TEST
// line 1103	WITHOUT_CLASSIFICATION	0.9999997035197429	WITHOUT_CLASSIFICATION	2.9648025709879024E-7	TEST
// line 1107	WITHOUT_CLASSIFICATION	0.9999998166643547	WITHOUT_CLASSIFICATION	1.8333564542347304E-7	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.9999997521227383	WITHOUT_CLASSIFICATION	2.478772617213861E-7	TEST
// line 1113	WITHOUT_CLASSIFICATION	0.9999997328027911	WITHOUT_CLASSIFICATION	2.6719720894830574E-7	TEST
// line 1115	WITHOUT_CLASSIFICATION	0.9999997908710492	WITHOUT_CLASSIFICATION	2.091289507764418E-7	TEST
// line 1119	WITHOUT_CLASSIFICATION	0.999999769684369	WITHOUT_CLASSIFICATION	2.3031563098099723E-7	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999997291884363	WITHOUT_CLASSIFICATION	2.7081156375895463E-7	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999997336555827	WITHOUT_CLASSIFICATION	2.6634441726565295E-7	TEST
// line 1135	WITHOUT_CLASSIFICATION	0.9999997386363757	WITHOUT_CLASSIFICATION	2.613636242948751E-7	TEST
// line 1137	WITHOUT_CLASSIFICATION	0.999999751165259	WITHOUT_CLASSIFICATION	2.488347409818316E-7	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999997824644696	WITHOUT_CLASSIFICATION	2.1753553043113113E-7	TEST
// line 1151	WITHOUT_CLASSIFICATION	0.999999760919766	WITHOUT_CLASSIFICATION	2.3908023404324606E-7	TEST
// line 1154	WITHOUT_CLASSIFICATION	0.9999997923115335	WITHOUT_CLASSIFICATION	2.0768846647693063E-7	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999997872948992	WITHOUT_CLASSIFICATION	2.1270510076353786E-7	TEST
// line 1164	WITHOUT_CLASSIFICATION	0.9999997945008519	WITHOUT_CLASSIFICATION	2.0549914798526127E-7	TEST
// line 1175	WITHOUT_CLASSIFICATION	0.99999980583611	WITHOUT_CLASSIFICATION	1.9416388996471535E-7	TEST
// line 1178	WITHOUT_CLASSIFICATION	0.9999997972168636	WITHOUT_CLASSIFICATION	2.0278313637728752E-7	TEST
// line 1187	WITHOUT_CLASSIFICATION	0.9999998077624287	WITHOUT_CLASSIFICATION	1.922375713460255E-7	TEST
// line 1189	WITHOUT_CLASSIFICATION	0.9999997776326297	WITHOUT_CLASSIFICATION	2.2236737018256158E-7	TEST
// line 1193	WITHOUT_CLASSIFICATION	0.9999997196179521	WITHOUT_CLASSIFICATION	2.8038204796389516E-7	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999997224586828	WITHOUT_CLASSIFICATION	2.775413171201059E-7	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999997531870015	WITHOUT_CLASSIFICATION	2.4681299850023473E-7	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999997763030131	WITHOUT_CLASSIFICATION	2.236969869548195E-7	TEST
// line 1214	WITHOUT_CLASSIFICATION	0.9999997603193811	WITHOUT_CLASSIFICATION	2.396806189027031E-7	TEST
// line 1234	WITHOUT_CLASSIFICATION	0.9999997239589393	WITHOUT_CLASSIFICATION	2.760410606721834E-7	TEST
// line 1239	WITHOUT_CLASSIFICATION	0.9999996866856412	WITHOUT_CLASSIFICATION	3.1331435882107596E-7	TEST
// line 1243	WITHOUT_CLASSIFICATION	0.9999996996413539	WITHOUT_CLASSIFICATION	3.003586459835122E-7	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999997748293677	WITHOUT_CLASSIFICATION	2.2517063232810633E-7	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999997294869918	WITHOUT_CLASSIFICATION	2.7051300814077424E-7	TEST
// line 1263	WITHOUT_CLASSIFICATION	0.999999708835465	WITHOUT_CLASSIFICATION	2.9116453504159944E-7	TEST
// line 1269	WITHOUT_CLASSIFICATION	0.9999997464672121	WITHOUT_CLASSIFICATION	2.535327878892289E-7	TEST
// line 1280	WITHOUT_CLASSIFICATION	0.9999997445709305	WITHOUT_CLASSIFICATION	2.5542906937397517E-7	TEST
// line 1283	WITHOUT_CLASSIFICATION	0.9999996914634847	WITHOUT_CLASSIFICATION	3.0853651539063703E-7	TEST
// line 1290	WITHOUT_CLASSIFICATION	0.9999997013419207	WITHOUT_CLASSIFICATION	2.986580792069948E-7	TEST
// line 1296	WITHOUT_CLASSIFICATION	0.999999721932726	WITHOUT_CLASSIFICATION	2.780672740225452E-7	TEST
// line 1299	WITHOUT_CLASSIFICATION	0.9999997078862092	WITHOUT_CLASSIFICATION	2.921137907859476E-7	TEST
// line 1302	WITHOUT_CLASSIFICATION	0.9999996848564648	WITHOUT_CLASSIFICATION	3.1514353517527474E-7	TEST
// line 1309	WITHOUT_CLASSIFICATION	0.9999996787473241	WITHOUT_CLASSIFICATION	3.212526758362326E-7	TEST
// line 1313	WITHOUT_CLASSIFICATION	0.9999997190121839	WITHOUT_CLASSIFICATION	2.80987816057998E-7	TEST
// line 1315	WITHOUT_CLASSIFICATION	0.9999997270926811	WITHOUT_CLASSIFICATION	2.7290731883627466E-7	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999996624332632	WITHOUT_CLASSIFICATION	3.375667367865597E-7	TEST
// line 1328	WITHOUT_CLASSIFICATION	0.9999996859648197	WITHOUT_CLASSIFICATION	3.140351802482353E-7	TEST
// line 1335	WITHOUT_CLASSIFICATION	0.9999997266093422	WITHOUT_CLASSIFICATION	2.73390657844709E-7	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999997187965394	WITHOUT_CLASSIFICATION	2.8120346056732023E-7	TEST
// line 1352	WITHOUT_CLASSIFICATION	0.9999997158272873	WITHOUT_CLASSIFICATION	2.841727127034563E-7	TEST
// line 1358	WITHOUT_CLASSIFICATION	0.9999997214249171	WITHOUT_CLASSIFICATION	2.785750828092147E-7	TEST
// line 1374	WITHOUT_CLASSIFICATION	0.9999997400568787	WITHOUT_CLASSIFICATION	2.5994312126681366E-7	TEST
// line 1381	WITHOUT_CLASSIFICATION	0.9999996753788178	WITHOUT_CLASSIFICATION	3.2462118204975064E-7	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999997384216246	WITHOUT_CLASSIFICATION	2.6157837546584305E-7	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999996809813031	WITHOUT_CLASSIFICATION	3.190186968443519E-7	TEST
// line 1415	WITHOUT_CLASSIFICATION	0.9999997846679038	WITHOUT_CLASSIFICATION	2.1533209600584195E-7	TEST
// line 1431	WITHOUT_CLASSIFICATION	0.9999996815939151	WITHOUT_CLASSIFICATION	3.1840608499329557E-7	TEST
// line 1434	WITHOUT_CLASSIFICATION	0.9999997261922754	WITHOUT_CLASSIFICATION	2.738077246102764E-7	TEST
// line 1440	WITHOUT_CLASSIFICATION	0.9999997728700976	WITHOUT_CLASSIFICATION	2.2712990244663667E-7	TEST
// line 1443	WITHOUT_CLASSIFICATION	0.9999997258904977	WITHOUT_CLASSIFICATION	2.7410950233286013E-7	TEST
// line 1453	WITHOUT_CLASSIFICATION	0.999999735580974	WITHOUT_CLASSIFICATION	2.6441902598287865E-7	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999998002093459	WITHOUT_CLASSIFICATION	1.9979065414784416E-7	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.9999997753879624	WITHOUT_CLASSIFICATION	2.2461203755483956E-7	TEST
// line 1465	WITHOUT_CLASSIFICATION	0.9999997936863333	WITHOUT_CLASSIFICATION	2.0631366665267185E-7	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999997977066967	WITHOUT_CLASSIFICATION	2.022933034596563E-7	TEST
// line 1477	WITHOUT_CLASSIFICATION	0.9999997924713457	WITHOUT_CLASSIFICATION	2.0752865435763395E-7	TEST
// line 1480	WITHOUT_CLASSIFICATION	0.9999997670707117	WITHOUT_CLASSIFICATION	2.3292928821891126E-7	TEST
// line 1485	WITHOUT_CLASSIFICATION	0.999999780067113	WITHOUT_CLASSIFICATION	2.1993288696597088E-7	TEST
// line 1488	WITHOUT_CLASSIFICATION	0.9999997719189972	WITHOUT_CLASSIFICATION	2.2808100284997636E-7	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999997741492265	WITHOUT_CLASSIFICATION	2.2585077353725275E-7	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999997492473496	WITHOUT_CLASSIFICATION	2.5075265033202953E-7	TEST
// line 1510	WITHOUT_CLASSIFICATION	0.9999997982924267	WITHOUT_CLASSIFICATION	2.0170757339479682E-7	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999997288894944	WITHOUT_CLASSIFICATION	2.71110505505856E-7	TEST
// line 1516	WITHOUT_CLASSIFICATION	0.9999997906984212	WITHOUT_CLASSIFICATION	2.0930157881888105E-7	TEST
// line 1533	WITHOUT_CLASSIFICATION	0.9999997310663938	WITHOUT_CLASSIFICATION	2.689336060673878E-7	TEST
// line 1550	WITHOUT_CLASSIFICATION	0.9999997732296374	WITHOUT_CLASSIFICATION	2.267703626497649E-7	TEST
// line 1553	WITHOUT_CLASSIFICATION	0.9999997296099928	WITHOUT_CLASSIFICATION	2.7039000713735825E-7	TEST
// line 1556	WITHOUT_CLASSIFICATION	0.9999997943066388	WITHOUT_CLASSIFICATION	2.056933611825754E-7	TEST
// line 1565	WITHOUT_CLASSIFICATION	0.9999997926178378	WITHOUT_CLASSIFICATION	2.0738216234166768E-7	TEST
// line 1568	WITHOUT_CLASSIFICATION	0.9999997881202666	WITHOUT_CLASSIFICATION	2.1187973332823503E-7	TEST
// line 1571	WITHOUT_CLASSIFICATION	0.9999997677099907	WITHOUT_CLASSIFICATION	2.322900094049525E-7	TEST
// line 1574	WITHOUT_CLASSIFICATION	0.999999798002069	WITHOUT_CLASSIFICATION	2.0199793107016828E-7	TEST
// line 1577	WITHOUT_CLASSIFICATION	0.9999997965378109	WITHOUT_CLASSIFICATION	2.0346218905341678E-7	TEST
// line 1587	WITHOUT_CLASSIFICATION	0.999999794197835	WITHOUT_CLASSIFICATION	2.058021649720708E-7	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.9999997659043904	WITHOUT_CLASSIFICATION	2.3409560962052328E-7	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999997615735123	WITHOUT_CLASSIFICATION	2.3842648762100566E-7	TEST
// line 1600	WITHOUT_CLASSIFICATION	0.9999997691248907	WITHOUT_CLASSIFICATION	2.308751093001153E-7	TEST
// line 1609	WITHOUT_CLASSIFICATION	0.9999997450789619	WITHOUT_CLASSIFICATION	2.5492103805343964E-7	TEST
// line 1623	WITHOUT_CLASSIFICATION	0.9999997138503983	WITHOUT_CLASSIFICATION	2.86149601683901E-7	TEST
// line 1626	WITHOUT_CLASSIFICATION	0.9999997636711435	WITHOUT_CLASSIFICATION	2.363288563807611E-7	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999997198974299	WITHOUT_CLASSIFICATION	2.8010257012293395E-7	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999997157189993	WITHOUT_CLASSIFICATION	2.8428100069740424E-7	TEST
// line 1638	WITHOUT_CLASSIFICATION	0.9999997274787007	WITHOUT_CLASSIFICATION	2.725212992278956E-7	TEST
// line 1641	WITHOUT_CLASSIFICATION	0.9999997529161918	WITHOUT_CLASSIFICATION	2.470838081650473E-7	TEST
// line 1644	WITHOUT_CLASSIFICATION	0.9999997851731305	WITHOUT_CLASSIFICATION	2.1482686949588172E-7	TEST
// line 1649	WITHOUT_CLASSIFICATION	0.9999997704411786	WITHOUT_CLASSIFICATION	2.2955882132278463E-7	TEST
// line 1655	WITHOUT_CLASSIFICATION	0.9999997903320162	WITHOUT_CLASSIFICATION	2.0966798385081388E-7	TEST
// line 1658	WITHOUT_CLASSIFICATION	0.9999997871648884	WITHOUT_CLASSIFICATION	2.1283511162156778E-7	TEST
// line 1661	WITHOUT_CLASSIFICATION	0.9999997496313914	WITHOUT_CLASSIFICATION	2.5036860863124815E-7	TEST
// line 1672	WITHOUT_CLASSIFICATION	0.9999997892730821	WITHOUT_CLASSIFICATION	2.107269179318615E-7	TEST
// line 1677	WITHOUT_CLASSIFICATION	0.9999997992216393	WITHOUT_CLASSIFICATION	2.007783606948954E-7	TEST
// line 1687	WITHOUT_CLASSIFICATION	0.9999997954491395	WITHOUT_CLASSIFICATION	2.045508604307803E-7	TEST
// line 1694	WITHOUT_CLASSIFICATION	0.9999997672704651	WITHOUT_CLASSIFICATION	2.327295348910904E-7	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999997754089224	WITHOUT_CLASSIFICATION	2.2459107773157464E-7	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999997571713993	WITHOUT_CLASSIFICATION	2.428286006944846E-7	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999997788798689	WITHOUT_CLASSIFICATION	2.2112013120979781E-7	TEST
// line 1733	WITHOUT_CLASSIFICATION	0.9999997412547015	WITHOUT_CLASSIFICATION	2.587452985929974E-7	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.9999997795711631	WITHOUT_CLASSIFICATION	2.204288369873255E-7	TEST
// line 1745	WITHOUT_CLASSIFICATION	0.9999997987533259	WITHOUT_CLASSIFICATION	2.0124667419031397E-7	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999997778197849	WITHOUT_CLASSIFICATION	2.2218021508594677E-7	TEST
// line 1757	WITHOUT_CLASSIFICATION	0.9999997964070725	WITHOUT_CLASSIFICATION	2.035929275345346E-7	TEST
// line 1769	WITHOUT_CLASSIFICATION	0.9999997827022982	WITHOUT_CLASSIFICATION	2.1729770187113674E-7	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999997778018734	WITHOUT_CLASSIFICATION	2.2219812652773347E-7	TEST
// line 1775	WITHOUT_CLASSIFICATION	0.9999997951372721	WITHOUT_CLASSIFICATION	2.0486272795502537E-7	TEST
// line 1784	WITHOUT_CLASSIFICATION	0.9999997883090068	WITHOUT_CLASSIFICATION	2.116909931900742E-7	TEST
// line 1808	WITHOUT_CLASSIFICATION	0.9999997408824781	WITHOUT_CLASSIFICATION	2.591175219173419E-7	TEST
// line 1814	WITHOUT_CLASSIFICATION	0.999999784286066	WITHOUT_CLASSIFICATION	2.157139340423163E-7	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.9999997792149239	WITHOUT_CLASSIFICATION	2.20785076159518E-7	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999997727583639	WITHOUT_CLASSIFICATION	2.2724163602142728E-7	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999995887218711	WITHOUT_CLASSIFICATION	4.1127812886747127E-7	TEST
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9999724677568649	WITHOUT_CLASSIFICATION	2.753224313508173E-5	TEST
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999842633606235	WITHOUT_CLASSIFICATION	1.573663937648167E-5	TEST
/*                  }*/	WITHOUT_CLASSIFICATION	0.999989821975596	WITHOUT_CLASSIFICATION	1.017802440386553E-5	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999988246451363	WITHOUT_CLASSIFICATION	1.1753548637017846E-6	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999992802278089	WITHOUT_CLASSIFICATION	7.197721909784944E-7	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9999960656019888	WITHOUT_CLASSIFICATION	3.934398011199014E-6	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999961661805895	WITHOUT_CLASSIFICATION	3.8338194105010474E-6	TEST
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999857389798613	WITHOUT_CLASSIFICATION	1.426102013869469E-5	TEST
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9999963114090616	WITHOUT_CLASSIFICATION	3.688590938303858E-6	TEST
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9999998800474621	WITHOUT_CLASSIFICATION	1.1995253786946794E-7	TEST
// line 529	WITHOUT_CLASSIFICATION	0.999999687757123	WITHOUT_CLASSIFICATION	3.1224287703364034E-7	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999990337447279	WITHOUT_CLASSIFICATION	9.662552721178586E-7	TEST
/* XXX*/	WITHOUT_CLASSIFICATION	0.9999835902674395	WITHOUT_CLASSIFICATION	1.6409732560527625E-5	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999984903066773	WITHOUT_CLASSIFICATION	1.5096933226533257E-6	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999696785009291	WITHOUT_CLASSIFICATION	3.0321499070863544E-5	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999843727291293	WITHOUT_CLASSIFICATION	1.56272708706608E-5	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999952786621986	WITHOUT_CLASSIFICATION	4.721337801329169E-6	TEST
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999999589781339	WITHOUT_CLASSIFICATION	4.1021866187978454E-8	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999861847484	WITHOUT_CLASSIFICATION	1.381525152204668E-8	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999995219663675	WITHOUT_CLASSIFICATION	4.780336324570822E-7	TEST
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999997454180853	WITHOUT_CLASSIFICATION	2.54581914684489E-7	TEST
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999999580383839	WITHOUT_CLASSIFICATION	4.1961616055400625E-8	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.999999978211613	WITHOUT_CLASSIFICATION	2.1788387002973933E-8	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.999999978211613	WITHOUT_CLASSIFICATION	2.1788387002973933E-8	TEST
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999957859811369	WITHOUT_CLASSIFICATION	4.21401886314212E-6	TEST
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9999923898765638	WITHOUT_CLASSIFICATION	7.6101234362560615E-6	TEST
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999968412949642	WITHOUT_CLASSIFICATION	3.158705035795782E-6	TEST
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999998583751597	WITHOUT_CLASSIFICATION	1.4162484026440922E-7	TEST
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999998511844043	WITHOUT_CLASSIFICATION	1.488155956570047E-7	TEST
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999999253586173	WITHOUT_CLASSIFICATION	7.464138276173368E-8	TEST
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999999936205967	WITHOUT_CLASSIFICATION	6.379403335101775E-9	TEST
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999993119365729	WITHOUT_CLASSIFICATION	6.880634270675416E-7	TEST
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999999428698139	WITHOUT_CLASSIFICATION	5.7130186162915004E-8	TEST
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999997174168507	WITHOUT_CLASSIFICATION	2.825831492918389E-7	TEST
// Parser states:	WITHOUT_CLASSIFICATION	0.9999979509122092	WITHOUT_CLASSIFICATION	2.04908779078074E-6	TEST
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999591095084184	WITHOUT_CLASSIFICATION	4.089049158149951E-5	TEST
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999999977479069	WITHOUT_CLASSIFICATION	2.2520931561204826E-9	TEST
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999986423700992	WITHOUT_CLASSIFICATION	1.3576299008674972E-6	TEST
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999982691312913	WITHOUT_CLASSIFICATION	1.7308687087222531E-6	TEST
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999987924460186	WITHOUT_CLASSIFICATION	1.2075539813643062E-6	TEST
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999998984612095	WITHOUT_CLASSIFICATION	1.0153879045841055E-7	TEST
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999993471521641	WITHOUT_CLASSIFICATION	6.528478359452943E-7	TEST
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.999999987726724	WITHOUT_CLASSIFICATION	1.2273275903286002E-8	TEST
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999994637186769	WITHOUT_CLASSIFICATION	5.362813231591894E-7	TEST
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999999982144636	WITHOUT_CLASSIFICATION	1.7855364709778286E-9	TEST
// Node	WITHOUT_CLASSIFICATION	0.9999988748014393	WITHOUT_CLASSIFICATION	1.1251985607430824E-6	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9930601361718739	WITHOUT_CLASSIFICATION	0.0069398638281260765	TEST
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.999999867756229	WITHOUT_CLASSIFICATION	1.3224377107053955E-7	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9930601361718739	WITHOUT_CLASSIFICATION	0.0069398638281260765	TEST
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999997515124308	WITHOUT_CLASSIFICATION	2.4848756918106525E-7	TEST
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999997563019734	WITHOUT_CLASSIFICATION	2.43698026649985E-7	TEST
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9999990284179578	WITHOUT_CLASSIFICATION	9.71582042226698E-7	TEST
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999985164123891	WITHOUT_CLASSIFICATION	1.4835876108347834E-6	TEST
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.999999924799148	WITHOUT_CLASSIFICATION	7.520085198011956E-8	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999990465787357	WITHOUT_CLASSIFICATION	9.534212644149386E-7	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999990465787357	WITHOUT_CLASSIFICATION	9.534212644149386E-7	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999990465787357	WITHOUT_CLASSIFICATION	9.534212644149386E-7	TEST
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.999998649879289	WITHOUT_CLASSIFICATION	1.3501207109368893E-6	TEST
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.999994982030991	WITHOUT_CLASSIFICATION	5.017969008985952E-6	TEST
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999999668727315	WITHOUT_CLASSIFICATION	3.312726850999036E-8	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999854213075741	WITHOUT_CLASSIFICATION	1.4578692425935957E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999854213075741	WITHOUT_CLASSIFICATION	1.4578692425935957E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999854213075741	WITHOUT_CLASSIFICATION	1.4578692425935957E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999854213075741	WITHOUT_CLASSIFICATION	1.4578692425935957E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999854213075741	WITHOUT_CLASSIFICATION	1.4578692425935957E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999854213075741	WITHOUT_CLASSIFICATION	1.4578692425935957E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999944002780475	WITHOUT_CLASSIFICATION	5.599721952530316E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999944002780475	WITHOUT_CLASSIFICATION	5.599721952530316E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999944002780475	WITHOUT_CLASSIFICATION	5.599721952530316E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999944002780475	WITHOUT_CLASSIFICATION	5.599721952530316E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999944002780475	WITHOUT_CLASSIFICATION	5.599721952530316E-6	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999824976848234	WITHOUT_CLASSIFICATION	1.750231517665046E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999824976848234	WITHOUT_CLASSIFICATION	1.750231517665046E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999824976848234	WITHOUT_CLASSIFICATION	1.750231517665046E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999824976848234	WITHOUT_CLASSIFICATION	1.750231517665046E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999824976848234	WITHOUT_CLASSIFICATION	1.750231517665046E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999885867452581	WITHOUT_CLASSIFICATION	1.1413254741823817E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999885867452581	WITHOUT_CLASSIFICATION	1.1413254741823817E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999885867452581	WITHOUT_CLASSIFICATION	1.1413254741823817E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999885867452581	WITHOUT_CLASSIFICATION	1.1413254741823817E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999885867452581	WITHOUT_CLASSIFICATION	1.1413254741823817E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999885867452581	WITHOUT_CLASSIFICATION	1.1413254741823817E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999951257311309	WITHOUT_CLASSIFICATION	4.874268869062512E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999951257311309	WITHOUT_CLASSIFICATION	4.874268869062512E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999951257311309	WITHOUT_CLASSIFICATION	4.874268869062512E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999951257311309	WITHOUT_CLASSIFICATION	4.874268869062512E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999951257311309	WITHOUT_CLASSIFICATION	4.874268869062512E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999948703384598	WITHOUT_CLASSIFICATION	5.129661540107464E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999948703384598	WITHOUT_CLASSIFICATION	5.129661540107464E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999948703384598	WITHOUT_CLASSIFICATION	5.129661540107464E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999948703384598	WITHOUT_CLASSIFICATION	5.129661540107464E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999948703384598	WITHOUT_CLASSIFICATION	5.129661540107464E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999955594584206	WITHOUT_CLASSIFICATION	4.440541579377163E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999955594584206	WITHOUT_CLASSIFICATION	4.440541579377163E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999955594584206	WITHOUT_CLASSIFICATION	4.440541579377163E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999955594584206	WITHOUT_CLASSIFICATION	4.440541579377163E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999955594584206	WITHOUT_CLASSIFICATION	4.440541579377163E-6	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999999752811133	WITHOUT_CLASSIFICATION	2.471888670934703E-8	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999999850401862	WITHOUT_CLASSIFICATION	1.4959813898017382E-8	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999994511927663	WITHOUT_CLASSIFICATION	5.488072336145921E-7	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999998825306888	WITHOUT_CLASSIFICATION	1.174693111752494E-7	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999999443569377	WITHOUT_CLASSIFICATION	5.5643062204458E-8	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999995857908006	WITHOUT_CLASSIFICATION	4.1420919938991844E-7	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999996252017614	WITHOUT_CLASSIFICATION	3.747982385062282E-7	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999996184935988	WITHOUT_CLASSIFICATION	3.8150640126974786E-7	TEST
// line 417	WITHOUT_CLASSIFICATION	0.999999799317743	WITHOUT_CLASSIFICATION	2.0068225706277578E-7	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999997027149329	WITHOUT_CLASSIFICATION	2.9728506703537647E-7	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999996729224221	WITHOUT_CLASSIFICATION	3.270775778376156E-7	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999997415981366	WITHOUT_CLASSIFICATION	2.584018634116397E-7	TEST
// line 280	WITHOUT_CLASSIFICATION	0.9999997220354898	WITHOUT_CLASSIFICATION	2.779645101033246E-7	TEST
// line 283	WITHOUT_CLASSIFICATION	0.9999996642415393	WITHOUT_CLASSIFICATION	3.357584607394571E-7	TEST
// line 296	WITHOUT_CLASSIFICATION	0.9999996977280273	WITHOUT_CLASSIFICATION	3.02271972702081E-7	TEST
// line 324	WITHOUT_CLASSIFICATION	0.9999995851440167	WITHOUT_CLASSIFICATION	4.148559833941065E-7	TEST
// line 327	WITHOUT_CLASSIFICATION	0.9999996141511304	WITHOUT_CLASSIFICATION	3.858488695792876E-7	TEST
// line 331	WITHOUT_CLASSIFICATION	0.9999996154210481	WITHOUT_CLASSIFICATION	3.845789519511483E-7	TEST
// line 333	WITHOUT_CLASSIFICATION	0.9999996202882826	WITHOUT_CLASSIFICATION	3.797117174058798E-7	TEST
// line 336	WITHOUT_CLASSIFICATION	0.9999996370292866	WITHOUT_CLASSIFICATION	3.629707134363452E-7	TEST
// line 342	WITHOUT_CLASSIFICATION	0.9999996051236174	WITHOUT_CLASSIFICATION	3.948763826070801E-7	TEST
// line 345	WITHOUT_CLASSIFICATION	0.999999641931413	WITHOUT_CLASSIFICATION	3.5806858699291747E-7	TEST
// line 348	WITHOUT_CLASSIFICATION	0.999999617427231	WITHOUT_CLASSIFICATION	3.825727690441416E-7	TEST
// line 354	WITHOUT_CLASSIFICATION	0.9999996299111175	WITHOUT_CLASSIFICATION	3.700888825623792E-7	TEST
// line 368	WITHOUT_CLASSIFICATION	0.9999996258268607	WITHOUT_CLASSIFICATION	3.741731392422738E-7	TEST
// line 377	WITHOUT_CLASSIFICATION	0.999999643474774	WITHOUT_CLASSIFICATION	3.565252259452119E-7	TEST
// line 388	WITHOUT_CLASSIFICATION	0.9999996151347886	WITHOUT_CLASSIFICATION	3.8486521135409214E-7	TEST
// line 392	WITHOUT_CLASSIFICATION	0.9999995660617699	WITHOUT_CLASSIFICATION	4.339382301180265E-7	TEST
// line 397	WITHOUT_CLASSIFICATION	0.999999622874806	WITHOUT_CLASSIFICATION	3.7712519402019324E-7	TEST
// line 429	WITHOUT_CLASSIFICATION	0.9999996794976707	WITHOUT_CLASSIFICATION	3.2050232932136194E-7	TEST
// line 432	WITHOUT_CLASSIFICATION	0.9999996775026438	WITHOUT_CLASSIFICATION	3.2249735615955086E-7	TEST
// line 436	WITHOUT_CLASSIFICATION	0.9999997080222457	WITHOUT_CLASSIFICATION	2.9197775432685313E-7	TEST
// line 445	WITHOUT_CLASSIFICATION	0.9999997638208674	WITHOUT_CLASSIFICATION	2.3617913262503643E-7	TEST
// line 448	WITHOUT_CLASSIFICATION	0.9999997493455417	WITHOUT_CLASSIFICATION	2.5065445825167393E-7	TEST
// line 454	WITHOUT_CLASSIFICATION	0.9999997619765296	WITHOUT_CLASSIFICATION	2.3802347042461118E-7	TEST
// line 459	WITHOUT_CLASSIFICATION	0.9999997471780566	WITHOUT_CLASSIFICATION	2.528219433571927E-7	TEST
// line 466	WITHOUT_CLASSIFICATION	0.9999997634305406	WITHOUT_CLASSIFICATION	2.365694593378728E-7	TEST
// line 469	WITHOUT_CLASSIFICATION	0.9999997455010874	WITHOUT_CLASSIFICATION	2.544989125475E-7	TEST
// line 478	WITHOUT_CLASSIFICATION	0.9999997685107425	WITHOUT_CLASSIFICATION	2.3148925744409355E-7	TEST
// line 481	WITHOUT_CLASSIFICATION	0.9999997462983747	WITHOUT_CLASSIFICATION	2.537016251945949E-7	TEST
// line 488	WITHOUT_CLASSIFICATION	0.9999997481298158	WITHOUT_CLASSIFICATION	2.5187018410980106E-7	TEST
// line 494	WITHOUT_CLASSIFICATION	0.9999997365491591	WITHOUT_CLASSIFICATION	2.6345084098575124E-7	TEST
// line 497	WITHOUT_CLASSIFICATION	0.999999761904387	WITHOUT_CLASSIFICATION	2.3809561306662728E-7	TEST
// line 503	WITHOUT_CLASSIFICATION	0.9999996213347763	WITHOUT_CLASSIFICATION	3.7866522383142814E-7	TEST
// line 506	WITHOUT_CLASSIFICATION	0.9999997434706861	WITHOUT_CLASSIFICATION	2.565293138543232E-7	TEST
// line 509	WITHOUT_CLASSIFICATION	0.9999997115297267	WITHOUT_CLASSIFICATION	2.884702732749378E-7	TEST
// line 512	WITHOUT_CLASSIFICATION	0.9999997714391584	WITHOUT_CLASSIFICATION	2.2856084164557758E-7	TEST
// line 521	WITHOUT_CLASSIFICATION	0.9999997358591356	WITHOUT_CLASSIFICATION	2.6414086443992164E-7	TEST
// line 526	WITHOUT_CLASSIFICATION	0.9999997452091769	WITHOUT_CLASSIFICATION	2.5479082317628385E-7	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999997488228421	WITHOUT_CLASSIFICATION	2.511771578101125E-7	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999996970633416	WITHOUT_CLASSIFICATION	3.029366584743094E-7	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999997655228802	WITHOUT_CLASSIFICATION	2.344771197905363E-7	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999997665175223	WITHOUT_CLASSIFICATION	2.3348247753029457E-7	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999998021533031	WITHOUT_CLASSIFICATION	1.9784669692462526E-7	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999997633989928	WITHOUT_CLASSIFICATION	2.3660100726467102E-7	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999997351981161	WITHOUT_CLASSIFICATION	2.648018839439475E-7	TEST
// line 696	WITHOUT_CLASSIFICATION	0.999999738194974	WITHOUT_CLASSIFICATION	2.6180502599955467E-7	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999997494687949	WITHOUT_CLASSIFICATION	2.505312050573714E-7	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999997550495875	WITHOUT_CLASSIFICATION	2.4495041249489927E-7	TEST
// line 785	WITHOUT_CLASSIFICATION	0.9999997685887968	WITHOUT_CLASSIFICATION	2.3141120309899343E-7	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999997603763623	WITHOUT_CLASSIFICATION	2.396236377196417E-7	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999997425193939	WITHOUT_CLASSIFICATION	2.5748060600875766E-7	TEST
// line 534	WITHOUT_CLASSIFICATION	0.999999700856588	WITHOUT_CLASSIFICATION	2.991434120554407E-7	TEST
// line 549	WITHOUT_CLASSIFICATION	0.9999997390584918	WITHOUT_CLASSIFICATION	2.6094150825328664E-7	TEST
// line 552	WITHOUT_CLASSIFICATION	0.9999997426428187	WITHOUT_CLASSIFICATION	2.573571812605797E-7	TEST
// line 558	WITHOUT_CLASSIFICATION	0.999999747745452	WITHOUT_CLASSIFICATION	2.522545480885075E-7	TEST
// line 561	WITHOUT_CLASSIFICATION	0.9999997641954859	WITHOUT_CLASSIFICATION	2.3580451416412346E-7	TEST
// line 571	WITHOUT_CLASSIFICATION	0.9999997697683557	WITHOUT_CLASSIFICATION	2.3023164433973335E-7	TEST
// line 574	WITHOUT_CLASSIFICATION	0.9999997724455699	WITHOUT_CLASSIFICATION	2.2755443016038823E-7	TEST
// line 579	WITHOUT_CLASSIFICATION	0.9999997539674398	WITHOUT_CLASSIFICATION	2.460325602470392E-7	TEST
// line 586	WITHOUT_CLASSIFICATION	0.9999997598611375	WITHOUT_CLASSIFICATION	2.401388625347504E-7	TEST
// line 589	WITHOUT_CLASSIFICATION	0.999999731840226	WITHOUT_CLASSIFICATION	2.6815977409779426E-7	TEST
// line 592	WITHOUT_CLASSIFICATION	0.9999997225845498	WITHOUT_CLASSIFICATION	2.7741545020783384E-7	TEST
// line 595	WITHOUT_CLASSIFICATION	0.9999997355780789	WITHOUT_CLASSIFICATION	2.644219211743803E-7	TEST
// line 598	WITHOUT_CLASSIFICATION	0.9999997310527915	WITHOUT_CLASSIFICATION	2.6894720849520566E-7	TEST
// line 623	WITHOUT_CLASSIFICATION	0.9999996788407823	WITHOUT_CLASSIFICATION	3.2115921764409186E-7	TEST
// line 627	WITHOUT_CLASSIFICATION	0.9999997552407853	WITHOUT_CLASSIFICATION	2.4475921476131034E-7	TEST
// line 630	WITHOUT_CLASSIFICATION	0.999999694293792	WITHOUT_CLASSIFICATION	3.05706207988196E-7	TEST
// line 633	WITHOUT_CLASSIFICATION	0.9999996995584731	WITHOUT_CLASSIFICATION	3.004415268538968E-7	TEST
// line 639	WITHOUT_CLASSIFICATION	0.9999996738323047	WITHOUT_CLASSIFICATION	3.2616769532974386E-7	TEST
// line 648	WITHOUT_CLASSIFICATION	0.9999997521774293	WITHOUT_CLASSIFICATION	2.4782257076245603E-7	TEST
// line 657	WITHOUT_CLASSIFICATION	0.9999997833530505	WITHOUT_CLASSIFICATION	2.166469495596236E-7	TEST
// line 661	WITHOUT_CLASSIFICATION	0.9999997528013044	WITHOUT_CLASSIFICATION	2.4719869564903674E-7	TEST
// line 666	WITHOUT_CLASSIFICATION	0.999999755014642	WITHOUT_CLASSIFICATION	2.449853580387084E-7	TEST
// line 678	WITHOUT_CLASSIFICATION	0.9999997735026369	WITHOUT_CLASSIFICATION	2.2649736321047923E-7	TEST
// line 682	WITHOUT_CLASSIFICATION	0.9999997458433172	WITHOUT_CLASSIFICATION	2.541566827845743E-7	TEST
// line 688	WITHOUT_CLASSIFICATION	0.9999997510244686	WITHOUT_CLASSIFICATION	2.489755314132988E-7	TEST
// line 699	WITHOUT_CLASSIFICATION	0.9999997369111298	WITHOUT_CLASSIFICATION	2.6308887026665766E-7	TEST
// line 706	WITHOUT_CLASSIFICATION	0.9999997668894975	WITHOUT_CLASSIFICATION	2.3311050239531382E-7	TEST
// line 708	WITHOUT_CLASSIFICATION	0.9999997262243653	WITHOUT_CLASSIFICATION	2.737756347656609E-7	TEST
// line 727	WITHOUT_CLASSIFICATION	0.9999997414322401	WITHOUT_CLASSIFICATION	2.5856775982670605E-7	TEST
// line 737	WITHOUT_CLASSIFICATION	0.9999997048991075	WITHOUT_CLASSIFICATION	2.951008925172271E-7	TEST
// line 753	WITHOUT_CLASSIFICATION	0.9999997174559042	WITHOUT_CLASSIFICATION	2.8254409576110883E-7	TEST
// line 779	WITHOUT_CLASSIFICATION	0.999999743769071	WITHOUT_CLASSIFICATION	2.5623092904299703E-7	TEST
// line 801	WITHOUT_CLASSIFICATION	0.9999997316962626	WITHOUT_CLASSIFICATION	2.6830373751160996E-7	TEST
// line 808	WITHOUT_CLASSIFICATION	0.9999996910662668	WITHOUT_CLASSIFICATION	3.0893373322702097E-7	TEST
// line 811	WITHOUT_CLASSIFICATION	0.9999997494961715	WITHOUT_CLASSIFICATION	2.505038284737886E-7	TEST
// line 817	WITHOUT_CLASSIFICATION	0.9999997878830292	WITHOUT_CLASSIFICATION	2.1211697067479268E-7	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999997266273903	WITHOUT_CLASSIFICATION	2.733726096714109E-7	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999997504495525	WITHOUT_CLASSIFICATION	2.4955044757663164E-7	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999997392618177	WITHOUT_CLASSIFICATION	2.607381822372673E-7	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999996616665457	WITHOUT_CLASSIFICATION	3.3833345424784133E-7	TEST
// line 899	WITHOUT_CLASSIFICATION	0.9999997209039707	WITHOUT_CLASSIFICATION	2.7909602938025384E-7	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999996364220023	WITHOUT_CLASSIFICATION	3.6357799768946504E-7	TEST
// line 944	WITHOUT_CLASSIFICATION	0.999999722495213	WITHOUT_CLASSIFICATION	2.775047870485627E-7	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999997218227172	WITHOUT_CLASSIFICATION	2.7817728277582454E-7	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999997082723576	WITHOUT_CLASSIFICATION	2.917276423299215E-7	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999997720537638	WITHOUT_CLASSIFICATION	2.2794623621136845E-7	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999996718259971	WITHOUT_CLASSIFICATION	3.2817400276440014E-7	TEST
// line 820	WITHOUT_CLASSIFICATION	0.9999996915429175	WITHOUT_CLASSIFICATION	3.0845708245260004E-7	TEST
// line 826	WITHOUT_CLASSIFICATION	0.9999997319069331	WITHOUT_CLASSIFICATION	2.6809306678782923E-7	TEST
// line 829	WITHOUT_CLASSIFICATION	0.999999667482359	WITHOUT_CLASSIFICATION	3.325176409958887E-7	TEST
// line 832	WITHOUT_CLASSIFICATION	0.999999659627228	WITHOUT_CLASSIFICATION	3.4037277199752907E-7	TEST
// line 851	WITHOUT_CLASSIFICATION	0.9999997469680341	WITHOUT_CLASSIFICATION	2.5303196590795364E-7	TEST
// line 857	WITHOUT_CLASSIFICATION	0.9999997679873143	WITHOUT_CLASSIFICATION	2.3201268579262976E-7	TEST
// line 860	WITHOUT_CLASSIFICATION	0.9999997409162787	WITHOUT_CLASSIFICATION	2.590837212422412E-7	TEST
// line 863	WITHOUT_CLASSIFICATION	0.9999996910055176	WITHOUT_CLASSIFICATION	3.089944824465563E-7	TEST
// line 866	WITHOUT_CLASSIFICATION	0.9999997498645189	WITHOUT_CLASSIFICATION	2.5013548104999284E-7	TEST
// line 869	WITHOUT_CLASSIFICATION	0.9999997309453681	WITHOUT_CLASSIFICATION	2.690546319548903E-7	TEST
// line 875	WITHOUT_CLASSIFICATION	0.9999997659563541	WITHOUT_CLASSIFICATION	2.3404364584499272E-7	TEST
// line 884	WITHOUT_CLASSIFICATION	0.9999997408563355	WITHOUT_CLASSIFICATION	2.591436645778201E-7	TEST
// line 887	WITHOUT_CLASSIFICATION	0.9999997597690292	WITHOUT_CLASSIFICATION	2.402309707742194E-7	TEST
// line 890	WITHOUT_CLASSIFICATION	0.9999997164739616	WITHOUT_CLASSIFICATION	2.835260383443271E-7	TEST
// line 902	WITHOUT_CLASSIFICATION	0.9999996812311311	WITHOUT_CLASSIFICATION	3.18768868952546E-7	TEST
// line 909	WITHOUT_CLASSIFICATION	0.9999996962002623	WITHOUT_CLASSIFICATION	3.0379973771463853E-7	TEST
// line 912	WITHOUT_CLASSIFICATION	0.9999997400480467	WITHOUT_CLASSIFICATION	2.599519533309768E-7	TEST
// line 916	WITHOUT_CLASSIFICATION	0.9999997641379997	WITHOUT_CLASSIFICATION	2.3586200025163956E-7	TEST
// line 922	WITHOUT_CLASSIFICATION	0.9999997040900358	WITHOUT_CLASSIFICATION	2.959099641998511E-7	TEST
// line 928	WITHOUT_CLASSIFICATION	0.9999996869823702	WITHOUT_CLASSIFICATION	3.130176298442342E-7	TEST
// line 941	WITHOUT_CLASSIFICATION	0.9999997191857365	WITHOUT_CLASSIFICATION	2.808142635722992E-7	TEST
// line 947	WITHOUT_CLASSIFICATION	0.9999997421514053	WITHOUT_CLASSIFICATION	2.578485946726026E-7	TEST
// line 951	WITHOUT_CLASSIFICATION	0.9999997270611455	WITHOUT_CLASSIFICATION	2.7293885443706575E-7	TEST
// line 955	WITHOUT_CLASSIFICATION	0.9999997280739117	WITHOUT_CLASSIFICATION	2.719260882570092E-7	TEST
// line 965	WITHOUT_CLASSIFICATION	0.9999997414239488	WITHOUT_CLASSIFICATION	2.585760512273271E-7	TEST
// line 969	WITHOUT_CLASSIFICATION	0.9999997302101865	WITHOUT_CLASSIFICATION	2.697898134122044E-7	TEST
// line 977	WITHOUT_CLASSIFICATION	0.9999997411361802	WITHOUT_CLASSIFICATION	2.5886381986621423E-7	TEST
// line 983	WITHOUT_CLASSIFICATION	0.9999996476318173	WITHOUT_CLASSIFICATION	3.5236818277582124E-7	TEST
// line 1013	WITHOUT_CLASSIFICATION	0.999999731147129	WITHOUT_CLASSIFICATION	2.688528709554653E-7	TEST
// line 1023	WITHOUT_CLASSIFICATION	0.9999996970323879	WITHOUT_CLASSIFICATION	3.029676120403712E-7	TEST
// line 1035	WITHOUT_CLASSIFICATION	0.9999996835715038	WITHOUT_CLASSIFICATION	3.164284961418616E-7	TEST
// line 1041	WITHOUT_CLASSIFICATION	0.9999997442285032	WITHOUT_CLASSIFICATION	2.557714968003722E-7	TEST
// line 1043	WITHOUT_CLASSIFICATION	0.999999724129074	WITHOUT_CLASSIFICATION	2.7587092598530897E-7	TEST
// line 1054	WITHOUT_CLASSIFICATION	0.9999997608893441	WITHOUT_CLASSIFICATION	2.3911065585609373E-7	TEST
// line 1057	WITHOUT_CLASSIFICATION	0.9999997779622719	WITHOUT_CLASSIFICATION	2.2203772801832152E-7	TEST
// line 1060	WITHOUT_CLASSIFICATION	0.9999997917097698	WITHOUT_CLASSIFICATION	2.0829023022478614E-7	TEST
// line 1069	WITHOUT_CLASSIFICATION	0.9999997636337318	WITHOUT_CLASSIFICATION	2.3636626826948796E-7	TEST
// line 1075	WITHOUT_CLASSIFICATION	0.9999998061256069	WITHOUT_CLASSIFICATION	1.9387439304714546E-7	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999997788241192	WITHOUT_CLASSIFICATION	2.2117588086379436E-7	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.9999997521227383	WITHOUT_CLASSIFICATION	2.478772617213861E-7	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999997724300609	WITHOUT_CLASSIFICATION	2.2756993914705178E-7	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999997291884363	WITHOUT_CLASSIFICATION	2.7081156375895463E-7	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999997824644696	WITHOUT_CLASSIFICATION	2.1753553043113113E-7	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999997872948992	WITHOUT_CLASSIFICATION	2.1270510076353786E-7	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999997224586828	WITHOUT_CLASSIFICATION	2.775413171201059E-7	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999997531870015	WITHOUT_CLASSIFICATION	2.4681299850023473E-7	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999997748293677	WITHOUT_CLASSIFICATION	2.2517063232810633E-7	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999997294869918	WITHOUT_CLASSIFICATION	2.7051300814077424E-7	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999997294257895	WITHOUT_CLASSIFICATION	2.7057421053159506E-7	TEST
// line 1078	WITHOUT_CLASSIFICATION	0.9999997978680789	WITHOUT_CLASSIFICATION	2.021319211570961E-7	TEST
// line 1084	WITHOUT_CLASSIFICATION	0.9999997447351966	WITHOUT_CLASSIFICATION	2.552648035037514E-7	TEST
// line 1087	WITHOUT_CLASSIFICATION	0.9999997633735206	WITHOUT_CLASSIFICATION	2.3662647956326045E-7	TEST
// line 1090	WITHOUT_CLASSIFICATION	0.9999997690866577	WITHOUT_CLASSIFICATION	2.3091334224428287E-7	TEST
// line 1093	WITHOUT_CLASSIFICATION	0.9999997008741824	WITHOUT_CLASSIFICATION	2.9912581755626467E-7	TEST
// line 1114	WITHOUT_CLASSIFICATION	0.9999997869582925	WITHOUT_CLASSIFICATION	2.1304170747532348E-7	TEST
// line 1116	WITHOUT_CLASSIFICATION	0.9999997938796239	WITHOUT_CLASSIFICATION	2.0612037616943026E-7	TEST
// line 1118	WITHOUT_CLASSIFICATION	0.9999997912527705	WITHOUT_CLASSIFICATION	2.087472295459526E-7	TEST
// line 1124	WITHOUT_CLASSIFICATION	0.9999997660259963	WITHOUT_CLASSIFICATION	2.339740037800983E-7	TEST
// line 1126	WITHOUT_CLASSIFICATION	0.9999997746571646	WITHOUT_CLASSIFICATION	2.2534283542877712E-7	TEST
// line 1138	WITHOUT_CLASSIFICATION	0.999999728934821	WITHOUT_CLASSIFICATION	2.7106517896770527E-7	TEST
// line 1144	WITHOUT_CLASSIFICATION	0.9999997883874595	WITHOUT_CLASSIFICATION	2.116125405178606E-7	TEST
// line 1149	WITHOUT_CLASSIFICATION	0.9999997748526348	WITHOUT_CLASSIFICATION	2.2514736511585264E-7	TEST
// line 1155	WITHOUT_CLASSIFICATION	0.9999997904337159	WITHOUT_CLASSIFICATION	2.095662842175685E-7	TEST
// line 1162	WITHOUT_CLASSIFICATION	0.9999997832932067	WITHOUT_CLASSIFICATION	2.1670679324313655E-7	TEST
// line 1173	WITHOUT_CLASSIFICATION	0.9999997530018323	WITHOUT_CLASSIFICATION	2.469981677123701E-7	TEST
// line 1179	WITHOUT_CLASSIFICATION	0.9999997846641371	WITHOUT_CLASSIFICATION	2.153358628968506E-7	TEST
// line 1182	WITHOUT_CLASSIFICATION	0.9999997872809792	WITHOUT_CLASSIFICATION	2.127190208341609E-7	TEST
// line 1190	WITHOUT_CLASSIFICATION	0.9999997638861162	WITHOUT_CLASSIFICATION	2.3611388384876142E-7	TEST
// line 1196	WITHOUT_CLASSIFICATION	0.9999997798317631	WITHOUT_CLASSIFICATION	2.2016823694742393E-7	TEST
// line 1213	WITHOUT_CLASSIFICATION	0.9999996991846443	WITHOUT_CLASSIFICATION	3.00815355708162E-7	TEST
// line 1217	WITHOUT_CLASSIFICATION	0.9999997749666624	WITHOUT_CLASSIFICATION	2.2503333763564725E-7	TEST
// line 1231	WITHOUT_CLASSIFICATION	0.9999996650351041	WITHOUT_CLASSIFICATION	3.349648958362083E-7	TEST
// line 1236	WITHOUT_CLASSIFICATION	0.9999997218507704	WITHOUT_CLASSIFICATION	2.7814922970878086E-7	TEST
// line 1244	WITHOUT_CLASSIFICATION	0.999999757837022	WITHOUT_CLASSIFICATION	2.4216297794225977E-7	TEST
// line 1254	WITHOUT_CLASSIFICATION	0.999999764932917	WITHOUT_CLASSIFICATION	2.3506708308953144E-7	TEST
// line 1258	WITHOUT_CLASSIFICATION	0.9999997594552659	WITHOUT_CLASSIFICATION	2.405447340856622E-7	TEST
// line 1264	WITHOUT_CLASSIFICATION	0.9999997653829108	WITHOUT_CLASSIFICATION	2.346170891739491E-7	TEST
// line 1270	WITHOUT_CLASSIFICATION	0.9999997781012443	WITHOUT_CLASSIFICATION	2.2189875558823273E-7	TEST
// line 1273	WITHOUT_CLASSIFICATION	0.9999997200369667	WITHOUT_CLASSIFICATION	2.799630333384909E-7	TEST
// line 1276	WITHOUT_CLASSIFICATION	0.9999997824750682	WITHOUT_CLASSIFICATION	2.1752493193437642E-7	TEST
// line 1279	WITHOUT_CLASSIFICATION	0.9999997554897522	WITHOUT_CLASSIFICATION	2.445102477925802E-7	TEST
// line 1282	WITHOUT_CLASSIFICATION	0.9999997656154328	WITHOUT_CLASSIFICATION	2.3438456730119585E-7	TEST
// line 1289	WITHOUT_CLASSIFICATION	0.9999997328919322	WITHOUT_CLASSIFICATION	2.6710806775019897E-7	TEST
// line 1292	WITHOUT_CLASSIFICATION	0.9999997184937235	WITHOUT_CLASSIFICATION	2.815062766021186E-7	TEST
// line 1295	WITHOUT_CLASSIFICATION	0.9999997182129186	WITHOUT_CLASSIFICATION	2.817870814364717E-7	TEST
// line 1298	WITHOUT_CLASSIFICATION	0.9999997025428773	WITHOUT_CLASSIFICATION	2.9745712271421655E-7	TEST
// line 1305	WITHOUT_CLASSIFICATION	0.9999996856935603	WITHOUT_CLASSIFICATION	3.143064396066153E-7	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999997187965394	WITHOUT_CLASSIFICATION	2.8120346056732023E-7	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999997384216246	WITHOUT_CLASSIFICATION	2.6157837546584305E-7	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999996809813031	WITHOUT_CLASSIFICATION	3.190186968443519E-7	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.99999977300885	WITHOUT_CLASSIFICATION	2.269911501181293E-7	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.9999997753879624	WITHOUT_CLASSIFICATION	2.2461203755483956E-7	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999997977066967	WITHOUT_CLASSIFICATION	2.022933034596563E-7	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999997741492265	WITHOUT_CLASSIFICATION	2.2585077353725275E-7	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999997492473496	WITHOUT_CLASSIFICATION	2.5075265033202953E-7	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.9999997659043904	WITHOUT_CLASSIFICATION	2.3409560962052328E-7	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999997615735123	WITHOUT_CLASSIFICATION	2.3842648762100566E-7	TEST
// line 1308	WITHOUT_CLASSIFICATION	0.9999996645498255	WITHOUT_CLASSIFICATION	3.354501745367965E-7	TEST
// line 1311	WITHOUT_CLASSIFICATION	0.9999996919741859	WITHOUT_CLASSIFICATION	3.080258140828202E-7	TEST
// line 1317	WITHOUT_CLASSIFICATION	0.9999997391766203	WITHOUT_CLASSIFICATION	2.6082337969534407E-7	TEST
// line 1323	WITHOUT_CLASSIFICATION	0.9999997003563663	WITHOUT_CLASSIFICATION	2.996436336868869E-7	TEST
// line 1326	WITHOUT_CLASSIFICATION	0.9999997060371896	WITHOUT_CLASSIFICATION	2.939628104288626E-7	TEST
// line 1329	WITHOUT_CLASSIFICATION	0.9999996353905369	WITHOUT_CLASSIFICATION	3.6460946305573E-7	TEST
// line 1337	WITHOUT_CLASSIFICATION	0.9999997394386952	WITHOUT_CLASSIFICATION	2.6056130468428014E-7	TEST
// line 1342	WITHOUT_CLASSIFICATION	0.9999997097529814	WITHOUT_CLASSIFICATION	2.902470186909798E-7	TEST
// line 1345	WITHOUT_CLASSIFICATION	0.999999736807914	WITHOUT_CLASSIFICATION	2.6319208599365627E-7	TEST
// line 1354	WITHOUT_CLASSIFICATION	0.9999997279726041	WITHOUT_CLASSIFICATION	2.7202739601620666E-7	TEST
// line 1359	WITHOUT_CLASSIFICATION	0.9999997087404552	WITHOUT_CLASSIFICATION	2.912595448734206E-7	TEST
// line 1366	WITHOUT_CLASSIFICATION	0.9999997308814959	WITHOUT_CLASSIFICATION	2.691185041356601E-7	TEST
// line 1369	WITHOUT_CLASSIFICATION	0.9999997105230669	WITHOUT_CLASSIFICATION	2.8947693311594194E-7	TEST
// line 1373	WITHOUT_CLASSIFICATION	0.9999997404522987	WITHOUT_CLASSIFICATION	2.595477013243208E-7	TEST
// line 1377	WITHOUT_CLASSIFICATION	0.9999997381725834	WITHOUT_CLASSIFICATION	2.618274166468396E-7	TEST
// line 1383	WITHOUT_CLASSIFICATION	0.9999997186010979	WITHOUT_CLASSIFICATION	2.8139890201907953E-7	TEST
// line 1399	WITHOUT_CLASSIFICATION	0.9999996962694178	WITHOUT_CLASSIFICATION	3.037305822131233E-7	TEST
// line 1401	WITHOUT_CLASSIFICATION	0.9999997391308804	WITHOUT_CLASSIFICATION	2.6086911955547474E-7	TEST
// line 1406	WITHOUT_CLASSIFICATION	0.999999770048458	WITHOUT_CLASSIFICATION	2.299515419292752E-7	TEST
// line 1417	WITHOUT_CLASSIFICATION	0.9999997942004133	WITHOUT_CLASSIFICATION	2.0579958664177692E-7	TEST
// line 1424	WITHOUT_CLASSIFICATION	0.999999755080468	WITHOUT_CLASSIFICATION	2.4491953190008097E-7	TEST
// line 1427	WITHOUT_CLASSIFICATION	0.9999997740129639	WITHOUT_CLASSIFICATION	2.2598703609916587E-7	TEST
// line 1430	WITHOUT_CLASSIFICATION	0.999999720093168	WITHOUT_CLASSIFICATION	2.799068320564607E-7	TEST
// line 1433	WITHOUT_CLASSIFICATION	0.999999724946281	WITHOUT_CLASSIFICATION	2.7505371902131093E-7	TEST
// line 1436	WITHOUT_CLASSIFICATION	0.9999997355987253	WITHOUT_CLASSIFICATION	2.644012745999219E-7	TEST
// line 1442	WITHOUT_CLASSIFICATION	0.9999997657003383	WITHOUT_CLASSIFICATION	2.342996616845688E-7	TEST
// line 1445	WITHOUT_CLASSIFICATION	0.9999997861176169	WITHOUT_CLASSIFICATION	2.1388238313865717E-7	TEST
// line 1458	WITHOUT_CLASSIFICATION	0.9999997810124244	WITHOUT_CLASSIFICATION	2.1898757572508352E-7	TEST
// line 1464	WITHOUT_CLASSIFICATION	0.9999997849863969	WITHOUT_CLASSIFICATION	2.1501360303495984E-7	TEST
// line 1489	WITHOUT_CLASSIFICATION	0.999999756555977	WITHOUT_CLASSIFICATION	2.434440230823637E-7	TEST
// line 1493	WITHOUT_CLASSIFICATION	0.9999997168443853	WITHOUT_CLASSIFICATION	2.831556147270789E-7	TEST
// line 1507	WITHOUT_CLASSIFICATION	0.9999997927269176	WITHOUT_CLASSIFICATION	2.0727308231677117E-7	TEST
// line 1519	WITHOUT_CLASSIFICATION	0.9999997663221168	WITHOUT_CLASSIFICATION	2.3367788316221442E-7	TEST
// line 1532	WITHOUT_CLASSIFICATION	0.9999997144896294	WITHOUT_CLASSIFICATION	2.8551037047181264E-7	TEST
// line 1538	WITHOUT_CLASSIFICATION	0.999999726300784	WITHOUT_CLASSIFICATION	2.7369921588464495E-7	TEST
// line 1542	WITHOUT_CLASSIFICATION	0.9999997701952553	WITHOUT_CLASSIFICATION	2.298047446330881E-7	TEST
// line 1557	WITHOUT_CLASSIFICATION	0.9999997969226132	WITHOUT_CLASSIFICATION	2.030773867922076E-7	TEST
// line 1573	WITHOUT_CLASSIFICATION	0.9999997495453987	WITHOUT_CLASSIFICATION	2.5045460123016753E-7	TEST
// line 1591	WITHOUT_CLASSIFICATION	0.9999997321391667	WITHOUT_CLASSIFICATION	2.678608332844036E-7	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999997891448493	WITHOUT_CLASSIFICATION	2.1085515061124153E-7	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999997198974299	WITHOUT_CLASSIFICATION	2.8010257012293395E-7	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999997157189993	WITHOUT_CLASSIFICATION	2.8428100069740424E-7	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999997754089224	WITHOUT_CLASSIFICATION	2.2459107773157464E-7	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999997991733279	WITHOUT_CLASSIFICATION	2.00826672049568E-7	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999997788798689	WITHOUT_CLASSIFICATION	2.2112013120979781E-7	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.9999997795711631	WITHOUT_CLASSIFICATION	2.204288369873255E-7	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999997778197849	WITHOUT_CLASSIFICATION	2.2218021508594677E-7	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.9999997792149239	WITHOUT_CLASSIFICATION	2.20785076159518E-7	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999997727583639	WITHOUT_CLASSIFICATION	2.2724163602142728E-7	TEST
// line 1607	WITHOUT_CLASSIFICATION	0.9999997935616983	WITHOUT_CLASSIFICATION	2.0643830163749647E-7	TEST
// line 1610	WITHOUT_CLASSIFICATION	0.9999997995731232	WITHOUT_CLASSIFICATION	2.0042687673389454E-7	TEST
// line 1622	WITHOUT_CLASSIFICATION	0.9999997716939226	WITHOUT_CLASSIFICATION	2.2830607728258824E-7	TEST
// line 1625	WITHOUT_CLASSIFICATION	0.999999772261512	WITHOUT_CLASSIFICATION	2.2773848790429983E-7	TEST
// line 1636	WITHOUT_CLASSIFICATION	0.9999997309437706	WITHOUT_CLASSIFICATION	2.6905622942986216E-7	TEST
// line 1639	WITHOUT_CLASSIFICATION	0.9999997092953297	WITHOUT_CLASSIFICATION	2.907046702880591E-7	TEST
// line 1647	WITHOUT_CLASSIFICATION	0.9999998005936535	WITHOUT_CLASSIFICATION	1.9940634648823407E-7	TEST
// line 1651	WITHOUT_CLASSIFICATION	0.9999997607736338	WITHOUT_CLASSIFICATION	2.392263660609269E-7	TEST
// line 1657	WITHOUT_CLASSIFICATION	0.999999807007028	WITHOUT_CLASSIFICATION	1.9299297194404608E-7	TEST
// line 1660	WITHOUT_CLASSIFICATION	0.9999997740725222	WITHOUT_CLASSIFICATION	2.259274778954066E-7	TEST
// line 1663	WITHOUT_CLASSIFICATION	0.9999997305499493	WITHOUT_CLASSIFICATION	2.694500507491767E-7	TEST
// line 1678	WITHOUT_CLASSIFICATION	0.9999997982718173	WITHOUT_CLASSIFICATION	2.017281826822901E-7	TEST
// line 1702	WITHOUT_CLASSIFICATION	0.9999997718867145	WITHOUT_CLASSIFICATION	2.2811328541996137E-7	TEST
// line 1711	WITHOUT_CLASSIFICATION	0.9999997704061281	WITHOUT_CLASSIFICATION	2.295938720399486E-7	TEST
// line 1719	WITHOUT_CLASSIFICATION	0.999999775780149	WITHOUT_CLASSIFICATION	2.2421985087386985E-7	TEST
// line 1722	WITHOUT_CLASSIFICATION	0.9999997782786347	WITHOUT_CLASSIFICATION	2.2172136533543627E-7	TEST
// line 1731	WITHOUT_CLASSIFICATION	0.9999997005084137	WITHOUT_CLASSIFICATION	2.994915863459569E-7	TEST
// line 1734	WITHOUT_CLASSIFICATION	0.99999974489497	WITHOUT_CLASSIFICATION	2.5510502995105683E-7	TEST
// line 1738	WITHOUT_CLASSIFICATION	0.9999997366686285	WITHOUT_CLASSIFICATION	2.633313714612425E-7	TEST
// line 1746	WITHOUT_CLASSIFICATION	0.9999998003561275	WITHOUT_CLASSIFICATION	1.9964387251774163E-7	TEST
// line 1756	WITHOUT_CLASSIFICATION	0.999999809386669	WITHOUT_CLASSIFICATION	1.9061333100855154E-7	TEST
// line 1758	WITHOUT_CLASSIFICATION	0.9999997924626134	WITHOUT_CLASSIFICATION	2.0753738669786522E-7	TEST
// line 1761	WITHOUT_CLASSIFICATION	0.9999997680950979	WITHOUT_CLASSIFICATION	2.3190490199541977E-7	TEST
// line 1767	WITHOUT_CLASSIFICATION	0.9999997988899747	WITHOUT_CLASSIFICATION	2.01110025226147E-7	TEST
// line 1776	WITHOUT_CLASSIFICATION	0.9999997978202283	WITHOUT_CLASSIFICATION	2.0217977171148324E-7	TEST
// line 1782	WITHOUT_CLASSIFICATION	0.999999782875363	WITHOUT_CLASSIFICATION	2.1712463695637731E-7	TEST
// line 1785	WITHOUT_CLASSIFICATION	0.9999997948765513	WITHOUT_CLASSIFICATION	2.0512344874812424E-7	TEST
// line 1788	WITHOUT_CLASSIFICATION	0.9999997875970292	WITHOUT_CLASSIFICATION	2.124029708079969E-7	TEST
// line 1791	WITHOUT_CLASSIFICATION	0.9999997405669147	WITHOUT_CLASSIFICATION	2.594330853608346E-7	TEST
// line 1797	WITHOUT_CLASSIFICATION	0.9999997760485733	WITHOUT_CLASSIFICATION	2.239514267357147E-7	TEST
// line 1800	WITHOUT_CLASSIFICATION	0.999999771522953	WITHOUT_CLASSIFICATION	2.284770468947932E-7	TEST
// line 1803	WITHOUT_CLASSIFICATION	0.9999996682199294	WITHOUT_CLASSIFICATION	3.3178007062673457E-7	TEST
// line 1806	WITHOUT_CLASSIFICATION	0.9999997752233516	WITHOUT_CLASSIFICATION	2.247766483304069E-7	TEST
// line 1809	WITHOUT_CLASSIFICATION	0.9999997472380253	WITHOUT_CLASSIFICATION	2.527619746182265E-7	TEST
// line 1815	WITHOUT_CLASSIFICATION	0.9999997882479011	WITHOUT_CLASSIFICATION	2.117520988305421E-7	TEST
// line 1825	WITHOUT_CLASSIFICATION	0.9999997733143063	WITHOUT_CLASSIFICATION	2.2668569359114918E-7	TEST
// line 1828	WITHOUT_CLASSIFICATION	0.9999997633096783	WITHOUT_CLASSIFICATION	2.3669032167942634E-7	TEST
// line 1831	WITHOUT_CLASSIFICATION	0.999999688543766	WITHOUT_CLASSIFICATION	3.1145623394930085E-7	TEST
// line 1847	WITHOUT_CLASSIFICATION	0.9999997988598069	WITHOUT_CLASSIFICATION	2.011401930888391E-7	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9999960656019888	WITHOUT_CLASSIFICATION	3.934398011199014E-6	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999961661805895	WITHOUT_CLASSIFICATION	3.8338194105010474E-6	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999990337447279	WITHOUT_CLASSIFICATION	9.662552721178586E-7	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999984903066773	WITHOUT_CLASSIFICATION	1.5096933226533257E-6	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999696785009291	WITHOUT_CLASSIFICATION	3.0321499070863544E-5	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999843727291293	WITHOUT_CLASSIFICATION	1.56272708706608E-5	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999952786621986	WITHOUT_CLASSIFICATION	4.721337801329169E-6	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999825070254916	WITHOUT_CLASSIFICATION	1.749297450842837E-5	TEST
// line 1854	WITHOUT_CLASSIFICATION	0.9999997902898967	WITHOUT_CLASSIFICATION	2.097101032759555E-7	TEST
// line 1869	WITHOUT_CLASSIFICATION	0.9999997741716543	WITHOUT_CLASSIFICATION	2.258283457438849E-7	TEST
// line 1872	WITHOUT_CLASSIFICATION	0.9999997869341961	WITHOUT_CLASSIFICATION	2.13065803921113E-7	TEST
// line 1877	WITHOUT_CLASSIFICATION	0.9999997969931735	WITHOUT_CLASSIFICATION	2.0300682635133144E-7	TEST
// line 1886	WITHOUT_CLASSIFICATION	0.9999997910954064	WITHOUT_CLASSIFICATION	2.0890459355540962E-7	TEST
// line 1898	WITHOUT_CLASSIFICATION	0.9999997651762242	WITHOUT_CLASSIFICATION	2.3482377572751696E-7	TEST
// line 1902	WITHOUT_CLASSIFICATION	0.9999997250731675	WITHOUT_CLASSIFICATION	2.7492683246497867E-7	TEST
// line 1905	WITHOUT_CLASSIFICATION	0.9999997257762641	WITHOUT_CLASSIFICATION	2.742237360020856E-7	TEST
// line 1911	WITHOUT_CLASSIFICATION	0.9999997351864003	WITHOUT_CLASSIFICATION	2.64813599723132E-7	TEST
// line 1918	WITHOUT_CLASSIFICATION	0.9999997658070698	WITHOUT_CLASSIFICATION	2.3419293004826825E-7	TEST
// line 1935	WITHOUT_CLASSIFICATION	0.999999709838655	WITHOUT_CLASSIFICATION	2.901613450319343E-7	TEST
// line 1938	WITHOUT_CLASSIFICATION	0.9999996990687249	WITHOUT_CLASSIFICATION	3.0093127513171315E-7	TEST
// line 1942	WITHOUT_CLASSIFICATION	0.9999997459906739	WITHOUT_CLASSIFICATION	2.540093261817938E-7	TEST
// line 1948	WITHOUT_CLASSIFICATION	0.999999753914633	WITHOUT_CLASSIFICATION	2.4608536704851294E-7	TEST
// line 1960	WITHOUT_CLASSIFICATION	0.9999997598539935	WITHOUT_CLASSIFICATION	2.401460064582953E-7	TEST
// line 1963	WITHOUT_CLASSIFICATION	0.9999997135919045	WITHOUT_CLASSIFICATION	2.8640809537808714E-7	TEST
// line 1968	WITHOUT_CLASSIFICATION	0.9999997629884645	WITHOUT_CLASSIFICATION	2.370115354653109E-7	TEST
// line 1972	WITHOUT_CLASSIFICATION	0.9999997667498913	WITHOUT_CLASSIFICATION	2.3325010858977241E-7	TEST
// line 1982	WITHOUT_CLASSIFICATION	0.9999997480796098	WITHOUT_CLASSIFICATION	2.519203902103403E-7	TEST
// line 1995	WITHOUT_CLASSIFICATION	0.9999997659678341	WITHOUT_CLASSIFICATION	2.340321658278288E-7	TEST
// line 2000	WITHOUT_CLASSIFICATION	0.9999996333576351	WITHOUT_CLASSIFICATION	3.666423649702875E-7	TEST
// line 2006	WITHOUT_CLASSIFICATION	0.9999996243385411	WITHOUT_CLASSIFICATION	3.756614589398221E-7	TEST
// line 2010	WITHOUT_CLASSIFICATION	0.9999997670435814	WITHOUT_CLASSIFICATION	2.3295641856855222E-7	TEST
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999997240740616	WITHOUT_CLASSIFICATION	2.7592593836126367E-7	TEST
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999987793468054	WITHOUT_CLASSIFICATION	1.2206531946077805E-6	TEST
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999995943125203	WITHOUT_CLASSIFICATION	4.0568747971648515E-7	TEST
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999985142290778	WITHOUT_CLASSIFICATION	1.485770922163271E-6	TEST
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999999618824985	WITHOUT_CLASSIFICATION	3.811750151019042E-8	TEST
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9999974774775119	WITHOUT_CLASSIFICATION	2.5225224881563282E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999861847484	WITHOUT_CLASSIFICATION	1.381525152204668E-8	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999995219663675	WITHOUT_CLASSIFICATION	4.780336324570822E-7	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.999999978211613	WITHOUT_CLASSIFICATION	2.1788387002973933E-8	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.999999978211613	WITHOUT_CLASSIFICATION	2.1788387002973933E-8	TEST
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9999944365827219	WITHOUT_CLASSIFICATION	5.563417278075083E-6	TEST
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999994537451431	WITHOUT_CLASSIFICATION	5.462548569066129E-7	TEST
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.999999955077152	WITHOUT_CLASSIFICATION	4.4922847888018673E-8	TEST
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999997257275604	WITHOUT_CLASSIFICATION	2.742724396783641E-7	TEST
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999999611580669	WITHOUT_CLASSIFICATION	3.884193322817505E-8	TEST
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999951285697742	WITHOUT_CLASSIFICATION	4.871430225864944E-6	TEST
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999996211594772	WITHOUT_CLASSIFICATION	3.788405228818803E-7	TEST
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999999893244276	WITHOUT_CLASSIFICATION	1.0675572353164913E-8	TEST
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999999718074873	WITHOUT_CLASSIFICATION	2.8192512634978063E-8	TEST
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999996026714795	WITHOUT_CLASSIFICATION	3.973285205603193E-7	TEST
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999993873924837	WITHOUT_CLASSIFICATION	6.126075162682168E-7	TEST
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999994924753901	WITHOUT_CLASSIFICATION	5.075246098916194E-7	TEST
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999994925626551	WITHOUT_CLASSIFICATION	5.074373449365257E-7	TEST
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999992718527008	WITHOUT_CLASSIFICATION	7.281472992590501E-7	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999999334906281	WITHOUT_CLASSIFICATION	6.650937190126774E-8	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999999334906281	WITHOUT_CLASSIFICATION	6.650937190126774E-8	TEST
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999842295937549	WITHOUT_CLASSIFICATION	1.577040624503797E-5	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999999870115494	WITHOUT_CLASSIFICATION	1.2988450565942996E-8	TEST
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999999408408046	WITHOUT_CLASSIFICATION	5.915919538906514E-8	TEST
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999996806919997	WITHOUT_CLASSIFICATION	3.1930800027875147E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999998408277926	WITHOUT_CLASSIFICATION	1.591722074962046E-7	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999998535964137	WITHOUT_CLASSIFICATION	1.4640358624523343E-7	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999999793232485	WITHOUT_CLASSIFICATION	2.0676751538701404E-8	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999998535964137	WITHOUT_CLASSIFICATION	1.4640358624523343E-7	TEST
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999909942765816	WITHOUT_CLASSIFICATION	9.005723418485342E-6	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999691449025	WITHOUT_CLASSIFICATION	3.085509736563944E-8	TEST
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.999999699987416	WITHOUT_CLASSIFICATION	3.00012584036597E-7	TEST
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9999992653747442	WITHOUT_CLASSIFICATION	7.346252557887792E-7	TEST
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9999998598192875	WITHOUT_CLASSIFICATION	1.4018071242495782E-7	TEST
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999996544571471	WITHOUT_CLASSIFICATION	3.4554285290488925E-7	TEST
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999998777493943	WITHOUT_CLASSIFICATION	1.2225060574995243E-7	TEST
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999988462401871	WITHOUT_CLASSIFICATION	1.153759812970123E-6	TEST
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999990638360534	WITHOUT_CLASSIFICATION	9.361639465138536E-7	TEST
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999988603983635	WITHOUT_CLASSIFICATION	1.1396016364779966E-6	TEST
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999997305183959	WITHOUT_CLASSIFICATION	2.6948160405488434E-7	TEST
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999931716240514	WITHOUT_CLASSIFICATION	6.828375948522773E-6	TEST
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999877428680284	WITHOUT_CLASSIFICATION	1.2257131971723778E-5	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999966726158128	WITHOUT_CLASSIFICATION	3.3273841871440337E-6	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999985792364157	WITHOUT_CLASSIFICATION	1.4207635843587007E-6	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999985792364157	WITHOUT_CLASSIFICATION	1.4207635843587007E-6	TEST
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999999844257037	WITHOUT_CLASSIFICATION	1.55742963050702E-8	TEST
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999993610406692	WITHOUT_CLASSIFICATION	6.389593306916548E-7	TEST
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999999689073188	WITHOUT_CLASSIFICATION	3.1092681282006934E-8	TEST
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999999307416437	WITHOUT_CLASSIFICATION	6.925835625361254E-8	TEST
// required and optional only	WITHOUT_CLASSIFICATION	0.9999999902719717	WITHOUT_CLASSIFICATION	9.728028189139106E-9	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999998535964137	WITHOUT_CLASSIFICATION	1.4640358624523343E-7	TEST
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999999848190914	WITHOUT_CLASSIFICATION	1.5180908625429824E-8	TEST
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999999992924451	WITHOUT_CLASSIFICATION	7.0755496041971E-10	TEST
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.999996478442516	WITHOUT_CLASSIFICATION	3.5215574839057543E-6	TEST
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999999926821286	WITHOUT_CLASSIFICATION	7.317871475669865E-9	TEST
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999999977335023	WITHOUT_CLASSIFICATION	2.266497718115147E-9	TEST
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999999906442909	WITHOUT_CLASSIFICATION	9.355709198203826E-9	TEST
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999998865998228	WITHOUT_CLASSIFICATION	1.1340017719599265E-7	TEST
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999996747442741	WITHOUT_CLASSIFICATION	3.252557259371101E-7	TEST
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999999990183412	WITHOUT_CLASSIFICATION	9.81658821427357E-10	TEST
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999997090041418	WITHOUT_CLASSIFICATION	2.909958581220036E-7	TEST
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999999688330953	WITHOUT_CLASSIFICATION	3.116690464317696E-8	TEST
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999999871570089	WITHOUT_CLASSIFICATION	1.2842991104869791E-8	TEST
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999884059756616	WITHOUT_CLASSIFICATION	1.1594024338349366E-5	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999988592206923	WITHOUT_CLASSIFICATION	1.1407793077580409E-6	TEST
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9999999064474558	WITHOUT_CLASSIFICATION	9.355254416301167E-8	TEST
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999909922065803	WITHOUT_CLASSIFICATION	9.007793419693156E-6	TEST
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999999726989297	WITHOUT_CLASSIFICATION	2.7301070318455007E-8	TEST
// id must always be even	WITHOUT_CLASSIFICATION	0.9999998550038414	WITHOUT_CLASSIFICATION	1.4499615852097706E-7	TEST
// with block pass	WITHOUT_CLASSIFICATION	0.9999993392365423	WITHOUT_CLASSIFICATION	6.607634576119375E-7	TEST
// no block	WITHOUT_CLASSIFICATION	0.9999998640523532	WITHOUT_CLASSIFICATION	1.359476467487825E-7	TEST
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999996711796554	WITHOUT_CLASSIFICATION	3.288203446126859E-7	TEST
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999972716383615	WITHOUT_CLASSIFICATION	2.7283616384181556E-6	TEST
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999998810972976	WITHOUT_CLASSIFICATION	1.1890270224255754E-7	TEST
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999998642580189	WITHOUT_CLASSIFICATION	1.3574198118413592E-7	TEST
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.999999969608363	WITHOUT_CLASSIFICATION	3.0391637113799874E-8	TEST
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999996521600681	WITHOUT_CLASSIFICATION	3.4783993188017744E-7	TEST
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.99999999638634	WITHOUT_CLASSIFICATION	3.6136600297357882E-9	TEST
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999999863563865	WITHOUT_CLASSIFICATION	1.3643613559828745E-8	TEST
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9999922411279363	WITHOUT_CLASSIFICATION	7.758872063717982E-6	TEST
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.999999908138965	WITHOUT_CLASSIFICATION	9.186103497805222E-8	TEST
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999998450814717	WITHOUT_CLASSIFICATION	1.5491852832673665E-7	TEST
// Lastline	WITHOUT_CLASSIFICATION	0.9999998334382879	WITHOUT_CLASSIFICATION	1.6656171200908048E-7	TEST
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999991325049394	WITHOUT_CLASSIFICATION	8.674950605133915E-7	TEST
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999999605804777	WITHOUT_CLASSIFICATION	3.941952224073069E-8	TEST
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999999688046296	WITHOUT_CLASSIFICATION	3.119537047631368E-8	TEST
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999999948007076	WITHOUT_CLASSIFICATION	5.199292438621008E-9	TEST
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999999732975028	WITHOUT_CLASSIFICATION	2.6702497281534693E-8	TEST
// silently ignore	WITHOUT_CLASSIFICATION	0.9999999848016949	WITHOUT_CLASSIFICATION	1.5198305027827623E-8	TEST
// used by compiler	WITHOUT_CLASSIFICATION	0.9999999265266087	WITHOUT_CLASSIFICATION	7.347339124133646E-8	TEST
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999999995478089	WITHOUT_CLASSIFICATION	4.5219106987819675E-10	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999825070254916	WITHOUT_CLASSIFICATION	1.749297450842837E-5	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999910140607499	WITHOUT_CLASSIFICATION	8.985939250167042E-6	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999998603023633	WITHOUT_CLASSIFICATION	1.3969763672271002E-7	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999998423596784	WITHOUT_CLASSIFICATION	1.5764032166806182E-7	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999165455439	WITHOUT_CLASSIFICATION	8.345445610441017E-8	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999691449025	WITHOUT_CLASSIFICATION	3.085509736563944E-8	TEST
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999998887658459	WITHOUT_CLASSIFICATION	1.1123415415629724E-7	TEST
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999999981959201	WITHOUT_CLASSIFICATION	1.8040799262913766E-9	TEST
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999999751309382	WITHOUT_CLASSIFICATION	2.486906168983898E-8	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999895238155	WITHOUT_CLASSIFICATION	1.0476184488396216E-8	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999895238155	WITHOUT_CLASSIFICATION	1.0476184488396216E-8	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999999918162863	WITHOUT_CLASSIFICATION	8.183713759225077E-9	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999999918162863	WITHOUT_CLASSIFICATION	8.183713759225077E-9	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999999918162863	WITHOUT_CLASSIFICATION	8.183713759225077E-9	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999991494305802	WITHOUT_CLASSIFICATION	8.505694197524978E-7	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999991494305802	WITHOUT_CLASSIFICATION	8.505694197524978E-7	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.999997340743164	WITHOUT_CLASSIFICATION	2.6592568360581927E-6	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.999997340743164	WITHOUT_CLASSIFICATION	2.6592568360581927E-6	TEST
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999901455651262	WITHOUT_CLASSIFICATION	9.854434873707748E-6	TEST
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999996863710279	WITHOUT_CLASSIFICATION	3.136289721297188E-7	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.9999998160631136	WITHOUT_CLASSIFICATION	1.839368863431068E-7	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.9999998160631136	WITHOUT_CLASSIFICATION	1.839368863431068E-7	TEST
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999999748034616	WITHOUT_CLASSIFICATION	2.5196538442625122E-8	TEST
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999999226838747	WITHOUT_CLASSIFICATION	7.73161252588392E-8	TEST
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999995269463152	WITHOUT_CLASSIFICATION	4.7305368484496263E-7	TEST
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999999083588306	WITHOUT_CLASSIFICATION	9.164116943444293E-8	TEST
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999998832744682	WITHOUT_CLASSIFICATION	1.1672553175827787E-7	TEST
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999999895292319	WITHOUT_CLASSIFICATION	1.0470768152682259E-8	TEST
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999987053120911	WITHOUT_CLASSIFICATION	1.2946879089496085E-6	TEST
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999998073423543	WITHOUT_CLASSIFICATION	1.9265764564470117E-7	TEST
// caller	WITHOUT_CLASSIFICATION	0.999999941088069	WITHOUT_CLASSIFICATION	5.891193089333386E-8	TEST
// calltype // block	WITHOUT_CLASSIFICATION	0.9999999614814343	WITHOUT_CLASSIFICATION	3.851856560762145E-8	TEST
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999999774071867	WITHOUT_CLASSIFICATION	2.2592813318527014E-8	TEST
// load arity for check	WITHOUT_CLASSIFICATION	0.999999856169358	WITHOUT_CLASSIFICATION	1.438306420290591E-7	TEST
// throw	WITHOUT_CLASSIFICATION	0.9999983002640577	WITHOUT_CLASSIFICATION	1.6997359422746516E-6	TEST
// load arity for error	WITHOUT_CLASSIFICATION	0.9999998544774592	WITHOUT_CLASSIFICATION	1.4552254078589448E-7	TEST
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999999784096268	WITHOUT_CLASSIFICATION	2.1590373069012287E-8	TEST
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999988467982092	WITHOUT_CLASSIFICATION	1.1532017907460719E-6	TEST
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9999990862757503	WITHOUT_CLASSIFICATION	9.137242497478015E-7	TEST
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999997335848155	WITHOUT_CLASSIFICATION	2.66415184503168E-7	TEST
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999998853255747	WITHOUT_CLASSIFICATION	1.1467442519352097E-7	TEST
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999927866999938	WITHOUT_CLASSIFICATION	7.2133000061158956E-6	TEST
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.999999962401497	WITHOUT_CLASSIFICATION	3.759850297944428E-8	TEST
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999998907555189	WITHOUT_CLASSIFICATION	1.0924448108479936E-7	TEST
// load the encoding	WITHOUT_CLASSIFICATION	0.9999999504124613	WITHOUT_CLASSIFICATION	4.9587538700199957E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.999999993140612	WITHOUT_CLASSIFICATION	6.859388005404125E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999947778381	WITHOUT_CLASSIFICATION	5.222161958811467E-9	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999793729818	WITHOUT_CLASSIFICATION	2.0627018293558865E-8	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999999975237004	WITHOUT_CLASSIFICATION	2.4762995934197872E-8	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999884742202	WITHOUT_CLASSIFICATION	1.1525779768227628E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999929902089	WITHOUT_CLASSIFICATION	7.009791089454416E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999946633337	WITHOUT_CLASSIFICATION	5.336666235973036E-9	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999789207014	WITHOUT_CLASSIFICATION	2.1079298747736425E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999959838748	WITHOUT_CLASSIFICATION	4.016125193132983E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999969424597	WITHOUT_CLASSIFICATION	3.0575404357716984E-9	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999907309198	WITHOUT_CLASSIFICATION	9.269080121768789E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999969424597	WITHOUT_CLASSIFICATION	3.0575404357716984E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999969424597	WITHOUT_CLASSIFICATION	3.0575404357716984E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999969424597	WITHOUT_CLASSIFICATION	3.0575404357716984E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999969424597	WITHOUT_CLASSIFICATION	3.0575404357716984E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999969424597	WITHOUT_CLASSIFICATION	3.0575404357716984E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999969424597	WITHOUT_CLASSIFICATION	3.0575404357716984E-9	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999907309198	WITHOUT_CLASSIFICATION	9.269080121768789E-9	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999907309198	WITHOUT_CLASSIFICATION	9.269080121768789E-9	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999907309198	WITHOUT_CLASSIFICATION	9.269080121768789E-9	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999907309198	WITHOUT_CLASSIFICATION	9.269080121768789E-9	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999907309198	WITHOUT_CLASSIFICATION	9.269080121768789E-9	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999907309198	WITHOUT_CLASSIFICATION	9.269080121768789E-9	TEST
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999999540206846	WITHOUT_CLASSIFICATION	4.597931533492269E-8	TEST
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999999331689693	WITHOUT_CLASSIFICATION	6.683103077524828E-8	TEST
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999999092031959	WITHOUT_CLASSIFICATION	9.079680413289298E-8	TEST
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999693618523	WITHOUT_CLASSIFICATION	3.063814768702317E-8	TEST
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999999985621727	WITHOUT_CLASSIFICATION	1.4378272565922835E-9	TEST
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.999999968628868	WITHOUT_CLASSIFICATION	3.13711319961106E-8	TEST
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999999795846394	WITHOUT_CLASSIFICATION	2.0415360687622088E-8	TEST
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999999982978469	WITHOUT_CLASSIFICATION	1.702153116194928E-9	TEST
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999999940357251	WITHOUT_CLASSIFICATION	5.964274859401707E-9	TEST
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999995097300903	WITHOUT_CLASSIFICATION	4.902699095636728E-7	TEST
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9999792731949064	WITHOUT_CLASSIFICATION	2.0726805093653743E-5	TEST
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.999999994836162	WITHOUT_CLASSIFICATION	5.163838049225509E-9	TEST
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999994416560919	WITHOUT_CLASSIFICATION	5.58343908202199E-7	TEST
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999999938032018	WITHOUT_CLASSIFICATION	6.1967982156226056E-9	TEST
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999999194217478	WITHOUT_CLASSIFICATION	8.057825213420555E-8	TEST
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9999970478907488	WITHOUT_CLASSIFICATION	2.952109251117545E-6	TEST
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999997930137005	WITHOUT_CLASSIFICATION	2.0698629946945596E-7	TEST
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999999813193979	WITHOUT_CLASSIFICATION	1.868060209050086E-8	TEST
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999999902186975	WITHOUT_CLASSIFICATION	9.781302515664803E-9	TEST
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999999980103371	WITHOUT_CLASSIFICATION	1.989662844681156E-9	TEST
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999996910339964	WITHOUT_CLASSIFICATION	3.0896600354662207E-7	TEST
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999998182424683	WITHOUT_CLASSIFICATION	1.8175753173677202E-7	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999999793232485	WITHOUT_CLASSIFICATION	2.0676751538701404E-8	TEST
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9999993706686671	WITHOUT_CLASSIFICATION	6.293313329551775E-7	TEST
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999989025784279	WITHOUT_CLASSIFICATION	1.0974215719466208E-6	TEST
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.999999992970116	WITHOUT_CLASSIFICATION	7.029884121720395E-9	TEST
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999999891644412	WITHOUT_CLASSIFICATION	1.083555876078292E-8	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999999373734076	WITHOUT_CLASSIFICATION	6.262659232513375E-8	TEST
// extension extensions	WITHOUT_CLASSIFICATION	0.9999997265802686	WITHOUT_CLASSIFICATION	2.7341973143748833E-7	TEST
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.999999984330434	WITHOUT_CLASSIFICATION	1.5669565954877087E-8	TEST
// try all extensions	WITHOUT_CLASSIFICATION	0.9999999597714225	WITHOUT_CLASSIFICATION	4.0228577448080743E-8	TEST
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999999958781923	WITHOUT_CLASSIFICATION	4.1218076530375325E-9	TEST
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999999954989347	WITHOUT_CLASSIFICATION	4.501065259915789E-9	TEST
// try only literal search	WITHOUT_CLASSIFICATION	0.9999999798036431	WITHOUT_CLASSIFICATION	2.0196356951003537E-8	TEST
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999999813794836	WITHOUT_CLASSIFICATION	1.8620516308137017E-8	TEST
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999998989824772	WITHOUT_CLASSIFICATION	1.0101752279390246E-7	TEST
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.999999982623202	WITHOUT_CLASSIFICATION	1.737679808943966E-8	TEST
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999999333647506	WITHOUT_CLASSIFICATION	6.663524942272876E-8	TEST
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999999999637847	WITHOUT_CLASSIFICATION	3.6215303986006445E-11	TEST
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999999970946536	WITHOUT_CLASSIFICATION	2.905346407863712E-9	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999997588374298	WITHOUT_CLASSIFICATION	2.4116257023508794E-7	TEST
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999998951614658	WITHOUT_CLASSIFICATION	1.0483853415755138E-7	TEST
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999996848573464	WITHOUT_CLASSIFICATION	3.151426536489369E-7	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999986791159943	WITHOUT_CLASSIFICATION	1.3208840057000512E-6	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999986791159943	WITHOUT_CLASSIFICATION	1.3208840057000512E-6	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999997816740541	WITHOUT_CLASSIFICATION	2.1832594592258398E-7	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999997816740541	WITHOUT_CLASSIFICATION	2.1832594592258398E-7	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999997623567262	WITHOUT_CLASSIFICATION	2.3764327393400292E-7	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999997623567262	WITHOUT_CLASSIFICATION	2.3764327393400292E-7	TEST
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999999514237343	WITHOUT_CLASSIFICATION	4.857626565740761E-8	TEST
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999999966057302	WITHOUT_CLASSIFICATION	3.3942697503094065E-9	TEST
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999998352655126	WITHOUT_CLASSIFICATION	1.6473448737072E-7	TEST
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999999841022137	WITHOUT_CLASSIFICATION	1.5897786369454903E-8	TEST
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999999871900505	WITHOUT_CLASSIFICATION	1.2809949481654572E-8	TEST
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.999998444188725	WITHOUT_CLASSIFICATION	1.55581127500942E-6	TEST
// signed short, native	WITHOUT_CLASSIFICATION	0.9999997184166863	WITHOUT_CLASSIFICATION	2.815833136785048E-7	TEST
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999983680711	WITHOUT_CLASSIFICATION	1.6319289157502557E-9	TEST
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.999999941459908	WITHOUT_CLASSIFICATION	5.854009199603509E-8	TEST
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999999775732111	WITHOUT_CLASSIFICATION	2.2426788896515545E-8	TEST
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999993886321877	WITHOUT_CLASSIFICATION	6.113678122833063E-7	TEST
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999998440818072	WITHOUT_CLASSIFICATION	1.559181928597939E-7	TEST
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.99999999449014	WITHOUT_CLASSIFICATION	5.509860019558213E-9	TEST
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999999990535178	WITHOUT_CLASSIFICATION	9.464822473497569E-10	TEST
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.999999315789031	WITHOUT_CLASSIFICATION	6.842109689239969E-7	TEST
//            write('S');	WITHOUT_CLASSIFICATION	0.9999995273801079	WITHOUT_CLASSIFICATION	4.726198921240058E-7	TEST
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999999995549075	WITHOUT_CLASSIFICATION	4.4509252913904086E-10	TEST
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999998757804841	WITHOUT_CLASSIFICATION	1.2421951585505871E-7	TEST
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999999352789073	WITHOUT_CLASSIFICATION	6.472109272909641E-8	TEST
// w_symbol	WITHOUT_CLASSIFICATION	0.9999991392257007	WITHOUT_CLASSIFICATION	8.60774299193344E-7	TEST
// w_unique	WITHOUT_CLASSIFICATION	0.9999993885326299	WITHOUT_CLASSIFICATION	6.114673701106375E-7	TEST
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999996225476219	WITHOUT_CLASSIFICATION	3.7745237815517064E-7	TEST
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999992049974893	WITHOUT_CLASSIFICATION	7.950025106869264E-7	TEST
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999999893887868	WITHOUT_CLASSIFICATION	1.0611213194422721E-8	TEST
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999998284371899	WITHOUT_CLASSIFICATION	1.7156281009990622E-7	TEST
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999999938814036	WITHOUT_CLASSIFICATION	6.1185963713573654E-9	TEST
// sic	WITHOUT_CLASSIFICATION	0.9999994610652198	WITHOUT_CLASSIFICATION	5.389347803266254E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999999905082896	WITHOUT_CLASSIFICATION	9.491710397869917E-8	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999999905082896	WITHOUT_CLASSIFICATION	9.491710397869917E-8	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999999905082896	WITHOUT_CLASSIFICATION	9.491710397869917E-8	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999993512375	WITHOUT_CLASSIFICATION	6.487625054291968E-10	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999993512375	WITHOUT_CLASSIFICATION	6.487625054291968E-10	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999988592206923	WITHOUT_CLASSIFICATION	1.1407793077580409E-6	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999988592206923	WITHOUT_CLASSIFICATION	1.1407793077580409E-6	TEST
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999999588116047	WITHOUT_CLASSIFICATION	4.1188395189596237E-8	TEST
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9999969536339337	WITHOUT_CLASSIFICATION	3.0463660663481506E-6	TEST
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999998209922698	WITHOUT_CLASSIFICATION	1.7900773016744834E-7	TEST
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999998794576966	WITHOUT_CLASSIFICATION	1.2054230327450933E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999999905082896	WITHOUT_CLASSIFICATION	9.491710397869917E-8	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999999905082896	WITHOUT_CLASSIFICATION	9.491710397869917E-8	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999999905082896	WITHOUT_CLASSIFICATION	9.491710397869917E-8	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999993512375	WITHOUT_CLASSIFICATION	6.487625054291968E-10	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999993512375	WITHOUT_CLASSIFICATION	6.487625054291968E-10	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999993512375	WITHOUT_CLASSIFICATION	6.487625054291968E-10	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999988592206923	WITHOUT_CLASSIFICATION	1.1407793077580409E-6	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999988592206923	WITHOUT_CLASSIFICATION	1.1407793077580409E-6	TEST
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999998610371718	WITHOUT_CLASSIFICATION	1.389628282625737E-7	TEST
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999999714484427	WITHOUT_CLASSIFICATION	2.8551557266249723E-8	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999997169250188	WITHOUT_CLASSIFICATION	2.830749813067418E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999997169250188	WITHOUT_CLASSIFICATION	2.830749813067418E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999997169250188	WITHOUT_CLASSIFICATION	2.830749813067418E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999997169250188	WITHOUT_CLASSIFICATION	2.830749813067418E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999997169250188	WITHOUT_CLASSIFICATION	2.830749813067418E-7	TEST
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999999715963467	WITHOUT_CLASSIFICATION	2.8403653268625222E-8	TEST
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999997586755901	WITHOUT_CLASSIFICATION	2.4132440988127997E-7	TEST
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9999997503654391	WITHOUT_CLASSIFICATION	2.496345608308286E-7	TEST
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999992313916328	WITHOUT_CLASSIFICATION	7.686083671523359E-7	TEST
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999997362392785	WITHOUT_CLASSIFICATION	2.6376072146684776E-7	TEST
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.999988410016049	WITHOUT_CLASSIFICATION	1.1589983951006109E-5	TEST
// not enough bytes	WITHOUT_CLASSIFICATION	0.9999944754159399	WITHOUT_CLASSIFICATION	5.524584060080649E-6	TEST
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999999194507944	WITHOUT_CLASSIFICATION	8.05492056236362E-8	TEST
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999999121202793	WITHOUT_CLASSIFICATION	8.787972068765206E-8	TEST
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999988367746494	WITHOUT_CLASSIFICATION	1.1632253506387702E-6	TEST
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999993551776613	WITHOUT_CLASSIFICATION	6.448223387397507E-7	TEST
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999986828018282	WITHOUT_CLASSIFICATION	1.3171981717280035E-6	TEST
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999986875229453	WITHOUT_CLASSIFICATION	1.3124770547567053E-6	TEST
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999999077486209	WITHOUT_CLASSIFICATION	9.225137904444569E-8	TEST
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999992324860298	WITHOUT_CLASSIFICATION	7.675139702029902E-7	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999895053734837	WITHOUT_CLASSIFICATION	1.0494626516246126E-5	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999895053734837	WITHOUT_CLASSIFICATION	1.0494626516246126E-5	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999895053734837	WITHOUT_CLASSIFICATION	1.0494626516246126E-5	TEST
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9998942183096851	WITHOUT_CLASSIFICATION	1.0578169031496225E-4	TEST
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9998942337815153	WITHOUT_CLASSIFICATION	1.0576621848464668E-4	TEST
// SimpleSampler	WITHOUT_CLASSIFICATION	0.999999813106515	WITHOUT_CLASSIFICATION	1.8689348506546124E-7	TEST
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999999987461768	WITHOUT_CLASSIFICATION	1.2538231619612669E-9	TEST
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999999165841295	WITHOUT_CLASSIFICATION	8.34158706075412E-8	TEST
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999998931596037	WITHOUT_CLASSIFICATION	1.068403963211237E-7	TEST
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999998339773585	WITHOUT_CLASSIFICATION	1.6602264156563682E-7	TEST
// single precision, native	WITHOUT_CLASSIFICATION	0.9999998853784722	WITHOUT_CLASSIFICATION	1.1462152773642481E-7	TEST
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999995192396488	WITHOUT_CLASSIFICATION	4.807603511747316E-7	TEST
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999999632617503	WITHOUT_CLASSIFICATION	3.6738249621475867E-8	TEST
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999999319898989	WITHOUT_CLASSIFICATION	6.801010108903826E-8	TEST
// double precision, native	WITHOUT_CLASSIFICATION	0.999999968644843	WITHOUT_CLASSIFICATION	3.135515700603247E-8	TEST
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999998959721504	WITHOUT_CLASSIFICATION	1.0402784951427758E-7	TEST
// signed char	WITHOUT_CLASSIFICATION	0.9999999097854203	WITHOUT_CLASSIFICATION	9.021457974593526E-8	TEST
// unsigned char	WITHOUT_CLASSIFICATION	0.999999936190477	WITHOUT_CLASSIFICATION	6.380952301565534E-8	TEST
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999999163212105	WITHOUT_CLASSIFICATION	8.367878940651204E-8	TEST
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999999161933921	WITHOUT_CLASSIFICATION	8.380660797283592E-8	TEST
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999999234776228	WITHOUT_CLASSIFICATION	7.652237717877903E-8	TEST
// int, native	WITHOUT_CLASSIFICATION	0.9999999345176895	WITHOUT_CLASSIFICATION	6.54823104525933E-8	TEST
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999997835554955	WITHOUT_CLASSIFICATION	2.164445044923186E-7	TEST
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999999096852369	WITHOUT_CLASSIFICATION	9.031476310789512E-8	TEST
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999998267172261	WITHOUT_CLASSIFICATION	1.732827739239498E-7	TEST
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9999999374562756	WITHOUT_CLASSIFICATION	6.254372446230562E-8	TEST
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999999156740083	WITHOUT_CLASSIFICATION	8.432599169369474E-8	TEST
// obtain a	WITHOUT_CLASSIFICATION	0.9999998237938603	WITHOUT_CLASSIFICATION	1.7620613959166544E-7	TEST
// obtain b	WITHOUT_CLASSIFICATION	0.9999998424693047	WITHOUT_CLASSIFICATION	1.5753069533369444E-7	TEST
// obtain c	WITHOUT_CLASSIFICATION	0.9999999066376042	WITHOUT_CLASSIFICATION	9.33623957936498E-8	TEST
// obtain d	WITHOUT_CLASSIFICATION	0.9999998409562194	WITHOUT_CLASSIFICATION	1.5904378058888907E-7	TEST
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999993585638874	WITHOUT_CLASSIFICATION	6.414361126353781E-7	TEST
/* 1 */	WITHOUT_CLASSIFICATION	0.9999935605911147	WITHOUT_CLASSIFICATION	6.439408885365067E-6	TEST
/* 2 */	WITHOUT_CLASSIFICATION	0.9999925078677125	WITHOUT_CLASSIFICATION	7.492132287506344E-6	TEST
/* 3 */	WITHOUT_CLASSIFICATION	0.9999859094768444	WITHOUT_CLASSIFICATION	1.4090523155489755E-5	TEST
/* 4 */	WITHOUT_CLASSIFICATION	0.9999934581099114	WITHOUT_CLASSIFICATION	6.541890088681046E-6	TEST
/* 5 */	WITHOUT_CLASSIFICATION	0.9999922869710003	WITHOUT_CLASSIFICATION	7.713028999748516E-6	TEST
/* 6 */	WITHOUT_CLASSIFICATION	0.9999933922584889	WITHOUT_CLASSIFICATION	6.6077415110888866E-6	TEST
/* 7 */	WITHOUT_CLASSIFICATION	0.9999935292449084	WITHOUT_CLASSIFICATION	6.470755091599542E-6	TEST
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999999207163401	WITHOUT_CLASSIFICATION	7.92836597659593E-8	TEST
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999999724944465	WITHOUT_CLASSIFICATION	2.750555350886596E-8	TEST
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999958735205886	WITHOUT_CLASSIFICATION	4.1264794113651146E-6	TEST
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.6141053572908182	WITHOUT_CLASSIFICATION	0.38589464270918195	TEST
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999804039455152	WITHOUT_CLASSIFICATION	1.9596054484857825E-5	TEST
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999999935180189	WITHOUT_CLASSIFICATION	6.481981107934229E-9	TEST
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.99999745287044	WITHOUT_CLASSIFICATION	2.5471295599707047E-6	TEST
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999999846488594	WITHOUT_CLASSIFICATION	1.535114061706885E-8	TEST
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999480820717533	WITHOUT_CLASSIFICATION	5.1917928246665714E-5	TEST
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999982504449393	WITHOUT_CLASSIFICATION	1.7495550607540012E-6	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9998682476005699	WITHOUT_CLASSIFICATION	1.3175239943004325E-4	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9998682476005699	WITHOUT_CLASSIFICATION	1.3175239943004325E-4	TEST
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9999938607780791	WITHOUT_CLASSIFICATION	6.139221920940625E-6	TEST
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999999954499095	WITHOUT_CLASSIFICATION	4.550090487211621E-9	TEST
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999992271404928	WITHOUT_CLASSIFICATION	7.728595072649938E-7	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9978214205580868	WITHOUT_CLASSIFICATION	0.0021785794419132277	TEST
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9999931243838437	WITHOUT_CLASSIFICATION	6.875616156238833E-6	TEST
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999992600212968	WITHOUT_CLASSIFICATION	7.399787032242782E-7	TEST
// are we recursing?	WITHOUT_CLASSIFICATION	0.9999999092252115	WITHOUT_CLASSIFICATION	9.07747884323512E-8	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999999843157626	WITHOUT_CLASSIFICATION	1.5684237339436204E-8	TEST
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999999332279866	WITHOUT_CLASSIFICATION	6.677201345860036E-8	TEST
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999999288777576	WITHOUT_CLASSIFICATION	7.112224246254762E-8	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999934232845	WITHOUT_CLASSIFICATION	6.576715512489987E-9	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999934232845	WITHOUT_CLASSIFICATION	6.576715512489987E-9	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999934232845	WITHOUT_CLASSIFICATION	6.576715512489987E-9	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999934232845	WITHOUT_CLASSIFICATION	6.576715512489987E-9	TEST
// try both	WITHOUT_CLASSIFICATION	0.9999994420522659	WITHOUT_CLASSIFICATION	5.579477341069058E-7	TEST
// just unix	WITHOUT_CLASSIFICATION	0.9999995515135395	WITHOUT_CLASSIFICATION	4.4848646059497165E-7	TEST
// just windows	WITHOUT_CLASSIFICATION	0.9999974579624749	WITHOUT_CLASSIFICATION	2.5420375251831976E-6	TEST
// neither	WITHOUT_CLASSIFICATION	0.9999995795413043	WITHOUT_CLASSIFICATION	4.204586957230163E-7	TEST
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999982101327601	WITHOUT_CLASSIFICATION	1.789867239869114E-6	TEST
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999999711432155	WITHOUT_CLASSIFICATION	2.8856784510260862E-8	TEST
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999999200113797	WITHOUT_CLASSIFICATION	7.998862032763728E-8	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999999788747831	WITHOUT_CLASSIFICATION	2.1125216892977852E-8	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999999788747831	WITHOUT_CLASSIFICATION	2.1125216892977852E-8	TEST
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999999747913695	WITHOUT_CLASSIFICATION	2.520863051675517E-8	TEST
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999999380316892	WITHOUT_CLASSIFICATION	6.196831075681502E-8	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.999975610336594	WITHOUT_CLASSIFICATION	2.4389663406096702E-5	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999993555109	WITHOUT_CLASSIFICATION	6.444890658180299E-10	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999993555109	WITHOUT_CLASSIFICATION	6.444890658180299E-10	TEST
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999999973123471	WITHOUT_CLASSIFICATION	2.6876529023922295E-9	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999974648693513	WITHOUT_CLASSIFICATION	2.535130648726875E-6	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999974648693513	WITHOUT_CLASSIFICATION	2.535130648726875E-6	TEST
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999973919268638	WITHOUT_CLASSIFICATION	2.6080731362949653E-6	TEST
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999940833492441	WITHOUT_CLASSIFICATION	5.916650755955485E-6	TEST
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999999948508856	WITHOUT_CLASSIFICATION	5.1491142703018126E-9	TEST
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999956195885531	WITHOUT_CLASSIFICATION	4.38041144688504E-6	TEST
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999970446921376	WITHOUT_CLASSIFICATION	2.955307862407112E-6	TEST
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999999968593629	WITHOUT_CLASSIFICATION	3.1406371342379274E-9	TEST
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.999996091673938	WITHOUT_CLASSIFICATION	3.9083260619965435E-6	TEST
//sequential	WITHOUT_CLASSIFICATION	0.9999984025174334	WITHOUT_CLASSIFICATION	1.5974825666015296E-6	TEST
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999999812177638	WITHOUT_CLASSIFICATION	1.8782236219119984E-8	TEST
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.999999834714541	WITHOUT_CLASSIFICATION	1.6528545904183163E-7	TEST
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999990828452122	WITHOUT_CLASSIFICATION	9.171547878704643E-7	TEST
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999999604672437	WITHOUT_CLASSIFICATION	3.9532756327825324E-8	TEST
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9924816581365974	WITHOUT_CLASSIFICATION	0.007518341863402642	TEST
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9891430364338886	WITHOUT_CLASSIFICATION	0.010856963566111363	TEST
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999999471679795	WITHOUT_CLASSIFICATION	5.283202057750692E-8	TEST
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999999785029224	WITHOUT_CLASSIFICATION	2.149707749191732E-8	TEST
// Args	WITHOUT_CLASSIFICATION	0.9999995113182991	WITHOUT_CLASSIFICATION	4.886817009693442E-7	TEST
// static methods only	WITHOUT_CLASSIFICATION	0.9999999811733852	WITHOUT_CLASSIFICATION	1.8826614915718028E-8	TEST
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999996983859274	WITHOUT_CLASSIFICATION	3.0161407265643636E-7	TEST
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.99999983478542	WITHOUT_CLASSIFICATION	1.6521457995654787E-7	TEST
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999983096877694	WITHOUT_CLASSIFICATION	1.6903122305942618E-6	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999999467004639	WITHOUT_CLASSIFICATION	5.3299536126617825E-8	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999999371419951	WITHOUT_CLASSIFICATION	6.285800488198209E-8	TEST
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999477777395669	WITHOUT_CLASSIFICATION	5.22222604331713E-5	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999966168666274	WITHOUT_CLASSIFICATION	3.38313337263186E-6	TEST
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9999949759481166	WITHOUT_CLASSIFICATION	5.024051883352884E-6	TEST
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.999999959475458	WITHOUT_CLASSIFICATION	4.052454197025932E-8	TEST
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999986399385701	WITHOUT_CLASSIFICATION	1.360061429952772E-6	TEST
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999999994938772	WITHOUT_CLASSIFICATION	5.06122683155532E-10	TEST
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999992415399968	WITHOUT_CLASSIFICATION	7.584600031607469E-7	TEST
// ..	WITHOUT_CLASSIFICATION	0.9999984158511501	WITHOUT_CLASSIFICATION	1.584148849846738E-6	TEST
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.999999586677812	WITHOUT_CLASSIFICATION	4.133221881247981E-7	TEST
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9981625043080796	WITHOUT_CLASSIFICATION	0.001837495691920359	TEST
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999989786914635	WITHOUT_CLASSIFICATION	1.021308536525871E-6	TEST
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999999903579566	WITHOUT_CLASSIFICATION	9.642043367490042E-9	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999976052816859	WITHOUT_CLASSIFICATION	2.3947183140036264E-6	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999988602812563	WITHOUT_CLASSIFICATION	1.1397187436389976E-6	TEST
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999997561012144	WITHOUT_CLASSIFICATION	2.438987856460212E-7	TEST
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999973577061849	WITHOUT_CLASSIFICATION	2.6422938150787213E-6	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999976052816859	WITHOUT_CLASSIFICATION	2.3947183140036264E-6	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999988602812563	WITHOUT_CLASSIFICATION	1.1397187436389976E-6	TEST
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999999158325675	WITHOUT_CLASSIFICATION	8.416743250471041E-8	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999985870432012	WITHOUT_CLASSIFICATION	1.4129567987518256E-6	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999985870432012	WITHOUT_CLASSIFICATION	1.4129567987518256E-6	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.999999241173256	WITHOUT_CLASSIFICATION	7.588267440765211E-7	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999056319725	WITHOUT_CLASSIFICATION	9.436802747493494E-8	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999996320968261	WITHOUT_CLASSIFICATION	3.679031739465198E-7	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999997904511274	WITHOUT_CLASSIFICATION	2.0954887267750156E-7	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999975290618687	WITHOUT_CLASSIFICATION	2.470938131363757E-6	TEST
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999843216796549	WITHOUT_CLASSIFICATION	1.567832034514645E-5	TEST
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999980600081826	WITHOUT_CLASSIFICATION	1.9399918173314473E-6	TEST
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.999999905532449	WITHOUT_CLASSIFICATION	9.44675509245499E-8	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999998797301924	WITHOUT_CLASSIFICATION	1.2026980749201089E-7	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9999976425704812	WITHOUT_CLASSIFICATION	2.357429518854299E-6	TEST
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999999563117629	WITHOUT_CLASSIFICATION	4.3688237146368134E-8	TEST
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999996662434328	WITHOUT_CLASSIFICATION	3.337565671284133E-7	TEST
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999989580470483	WITHOUT_CLASSIFICATION	1.0419529516377456E-6	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999999137825074	WITHOUT_CLASSIFICATION	8.621749267083999E-8	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999999137825074	WITHOUT_CLASSIFICATION	8.621749267083999E-8	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999935408003634	WITHOUT_CLASSIFICATION	6.459199636554365E-6	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999935408003634	WITHOUT_CLASSIFICATION	6.459199636554365E-6	TEST
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999997766906242	WITHOUT_CLASSIFICATION	2.2330937587424662E-7	TEST
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999999648975396	WITHOUT_CLASSIFICATION	3.510246046483022E-8	TEST
// (1|intlen)	WITHOUT_CLASSIFICATION	0.999999868401072	WITHOUT_CLASSIFICATION	1.3159892799739465E-7	TEST
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999997747045305	WITHOUT_CLASSIFICATION	2.2529546952435118E-7	TEST
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999837054795842	WITHOUT_CLASSIFICATION	1.6294520415843137E-5	TEST
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999979867889729	WITHOUT_CLASSIFICATION	2.013211027136588E-6	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999996320968261	WITHOUT_CLASSIFICATION	3.679031739465198E-7	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999997904511274	WITHOUT_CLASSIFICATION	2.0954887267750156E-7	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999998797301924	WITHOUT_CLASSIFICATION	1.2026980749201089E-7	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9999976425704812	WITHOUT_CLASSIFICATION	2.357429518854299E-6	TEST
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999999568633484	WITHOUT_CLASSIFICATION	4.313665157546739E-8	TEST
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999999007021306	WITHOUT_CLASSIFICATION	9.92978693195042E-8	TEST
// \v	WITHOUT_CLASSIFICATION	0.9999977711388688	WITHOUT_CLASSIFICATION	2.2288611312478513E-6	TEST
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999997930705147	WITHOUT_CLASSIFICATION	2.0692948526029198E-7	TEST
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999999024958841	WITHOUT_CLASSIFICATION	9.750411587262953E-8	TEST
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999993493803507	WITHOUT_CLASSIFICATION	6.506196492529529E-7	TEST
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999990192968576	WITHOUT_CLASSIFICATION	9.807031423758812E-7	TEST
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999972463327369	WITHOUT_CLASSIFICATION	2.7536672630124623E-6	TEST
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999985544512953	WITHOUT_CLASSIFICATION	1.445548704799647E-6	TEST
// negative values	WITHOUT_CLASSIFICATION	0.9999997661822573	WITHOUT_CLASSIFICATION	2.3381774282437466E-7	TEST
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999999922778802	WITHOUT_CLASSIFICATION	7.722119800608884E-9	TEST
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9998523763951168	WITHOUT_CLASSIFICATION	1.4762360488313739E-4	TEST
// no such luck...	WITHOUT_CLASSIFICATION	0.9999999157365614	WITHOUT_CLASSIFICATION	8.426343856441181E-8	TEST
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999984291715628	WITHOUT_CLASSIFICATION	1.5708284371998227E-6	TEST
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999995228241421	WITHOUT_CLASSIFICATION	4.771758579330294E-7	TEST
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999991061910638	WITHOUT_CLASSIFICATION	8.938089361440448E-7	TEST
/* constant vector a */	WITHOUT_CLASSIFICATION	0.999999923957869	WITHOUT_CLASSIFICATION	7.604213100575789E-8	TEST
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.999998825439549	WITHOUT_CLASSIFICATION	1.1745604510049602E-6	TEST
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.999999817043576	WITHOUT_CLASSIFICATION	1.829564240136295E-7	TEST
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999992362334078	WITHOUT_CLASSIFICATION	7.637665920796749E-7	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999992383327048	WITHOUT_CLASSIFICATION	7.61667295291199E-7	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999992383327048	WITHOUT_CLASSIFICATION	7.61667295291199E-7	TEST
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999996097977354	WITHOUT_CLASSIFICATION	3.902022645916332E-7	TEST
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999952871779142	WITHOUT_CLASSIFICATION	4.712822085845825E-6	TEST
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999989897924048	WITHOUT_CLASSIFICATION	1.0102075952728969E-6	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999992454748425	WITHOUT_CLASSIFICATION	7.545251575242009E-7	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999992454748425	WITHOUT_CLASSIFICATION	7.545251575242009E-7	TEST
// \v	WITHOUT_CLASSIFICATION	0.9999977711388688	WITHOUT_CLASSIFICATION	2.2288611312478513E-6	TEST
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999957301209527	WITHOUT_CLASSIFICATION	4.269879047275975E-6	TEST
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999984400618668	WITHOUT_CLASSIFICATION	1.5599381332198817E-6	TEST
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999987194607595	WITHOUT_CLASSIFICATION	1.2805392405265084E-6	TEST
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999990837067332	WITHOUT_CLASSIFICATION	9.16293266859541E-7	TEST
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999996227007708	WITHOUT_CLASSIFICATION	3.7729922922994417E-7	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999865444151652	WITHOUT_CLASSIFICATION	1.3455584834739655E-5	TEST
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999987408891909	WITHOUT_CLASSIFICATION	1.2591108089682628E-6	TEST
// no number	WITHOUT_CLASSIFICATION	0.9999998440780717	WITHOUT_CLASSIFICATION	1.559219282801074E-7	TEST
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999998059221603	WITHOUT_CLASSIFICATION	1.9407783971390155E-7	TEST
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999961774566832	WITHOUT_CLASSIFICATION	3.82254331683193E-6	TEST
// it was not found at all!	WITHOUT_CLASSIFICATION	0.999999342321202	WITHOUT_CLASSIFICATION	6.57678798036255E-7	TEST
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999999612651628	WITHOUT_CLASSIFICATION	3.873483718475881E-8	TEST
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999999783137083	WITHOUT_CLASSIFICATION	2.1686291572851535E-8	TEST
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999999469440699	WITHOUT_CLASSIFICATION	5.305593007782707E-8	TEST
// we reached the end	WITHOUT_CLASSIFICATION	0.9999999341800698	WITHOUT_CLASSIFICATION	6.581993019331294E-8	TEST
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999999360835041	WITHOUT_CLASSIFICATION	6.391649588597327E-8	TEST
// states	WITHOUT_CLASSIFICATION	0.9999957343584339	WITHOUT_CLASSIFICATION	4.26564156598651E-6	TEST
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999997403655327	WITHOUT_CLASSIFICATION	2.5963446718786763E-7	TEST
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999999859940799	WITHOUT_CLASSIFICATION	1.4005920092696456E-8	TEST
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999999970668911	WITHOUT_CLASSIFICATION	2.9331088062348222E-9	TEST
// drop through for sign	WITHOUT_CLASSIFICATION	0.999999288350301	WITHOUT_CLASSIFICATION	7.116496988685371E-7	TEST
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999999196851096	WITHOUT_CLASSIFICATION	8.031489040797015E-8	TEST
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999992323481407	WITHOUT_CLASSIFICATION	7.676518593013621E-7	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999963431006	WITHOUT_CLASSIFICATION	3.656899417235067E-9	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999995508537342	WITHOUT_CLASSIFICATION	4.491462657839264E-7	TEST
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999999969095229	WITHOUT_CLASSIFICATION	3.090477016249608E-9	TEST
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999996523999323	WITHOUT_CLASSIFICATION	3.47600067830023E-7	TEST
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999995672623	WITHOUT_CLASSIFICATION	4.3273776341336907E-10	TEST
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999998744014592	WITHOUT_CLASSIFICATION	1.2559854068738003E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999704492177	WITHOUT_CLASSIFICATION	2.955078226195031E-8	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999704492177	WITHOUT_CLASSIFICATION	2.955078226195031E-8	TEST
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.999999967038033	WITHOUT_CLASSIFICATION	3.296196697055372E-8	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999999329863115	WITHOUT_CLASSIFICATION	6.701368842198657E-8	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999999329863115	WITHOUT_CLASSIFICATION	6.701368842198657E-8	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999952413116	WITHOUT_CLASSIFICATION	4.758688510941583E-9	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999952413116	WITHOUT_CLASSIFICATION	4.758688510941583E-9	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999994366130668	WITHOUT_CLASSIFICATION	5.633869331713445E-7	TEST
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999999881722432	WITHOUT_CLASSIFICATION	1.1827756747007384E-8	TEST
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999990256546	WITHOUT_CLASSIFICATION	9.743454702545857E-10	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999992264013489	WITHOUT_CLASSIFICATION	7.735986511838698E-7	TEST
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999999927969384	WITHOUT_CLASSIFICATION	7.2030616047027425E-9	TEST
// block	WITHOUT_CLASSIFICATION	0.9999996260268498	WITHOUT_CLASSIFICATION	3.739731502010423E-7	TEST
// block	WITHOUT_CLASSIFICATION	0.9999996260268498	WITHOUT_CLASSIFICATION	3.739731502010423E-7	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999963431006	WITHOUT_CLASSIFICATION	3.656899417235067E-9	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999963431006	WITHOUT_CLASSIFICATION	3.656899417235067E-9	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999963431006	WITHOUT_CLASSIFICATION	3.656899417235067E-9	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999995508537342	WITHOUT_CLASSIFICATION	4.491462657839264E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999704492177	WITHOUT_CLASSIFICATION	2.955078226195031E-8	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999704492177	WITHOUT_CLASSIFICATION	2.955078226195031E-8	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999704492177	WITHOUT_CLASSIFICATION	2.955078226195031E-8	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999994366130668	WITHOUT_CLASSIFICATION	5.633869331713445E-7	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999994366130668	WITHOUT_CLASSIFICATION	5.633869331713445E-7	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999994366130668	WITHOUT_CLASSIFICATION	5.633869331713445E-7	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999992264013489	WITHOUT_CLASSIFICATION	7.735986511838698E-7	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999992264013489	WITHOUT_CLASSIFICATION	7.735986511838698E-7	TEST
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999999743209025	WITHOUT_CLASSIFICATION	2.567909755288349E-8	TEST
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999999225608622	WITHOUT_CLASSIFICATION	7.743913778919536E-8	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.999999865941305	WITHOUT_CLASSIFICATION	1.3405869494280262E-7	TEST
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9999159163796112	WITHOUT_CLASSIFICATION	8.408362038885132E-5	TEST
// no digits, error	WITHOUT_CLASSIFICATION	0.999999986380597	WITHOUT_CLASSIFICATION	1.361940300989501E-8	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999999023986063	WITHOUT_CLASSIFICATION	9.760139378161642E-8	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999999023986063	WITHOUT_CLASSIFICATION	9.760139378161642E-8	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999999280781827	WITHOUT_CLASSIFICATION	7.192181732273142E-8	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999865444151652	WITHOUT_CLASSIFICATION	1.3455584834739655E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999865444151652	WITHOUT_CLASSIFICATION	1.3455584834739655E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999865444151652	WITHOUT_CLASSIFICATION	1.3455584834739655E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999865444151652	WITHOUT_CLASSIFICATION	1.3455584834739655E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999865444151652	WITHOUT_CLASSIFICATION	1.3455584834739655E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.999999513650299	WITHOUT_CLASSIFICATION	4.863497009642585E-7	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.999999513650299	WITHOUT_CLASSIFICATION	4.863497009642585E-7	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.999999513650299	WITHOUT_CLASSIFICATION	4.863497009642585E-7	TEST
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999999872361862	WITHOUT_CLASSIFICATION	1.2763813652295119E-8	TEST
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999998039814094	WITHOUT_CLASSIFICATION	1.9601859047330232E-7	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999995508537342	WITHOUT_CLASSIFICATION	4.491462657839264E-7	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999994366130668	WITHOUT_CLASSIFICATION	5.633869331713445E-7	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999994366130668	WITHOUT_CLASSIFICATION	5.633869331713445E-7	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999865444151652	WITHOUT_CLASSIFICATION	1.3455584834739655E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999865444151652	WITHOUT_CLASSIFICATION	1.3455584834739655E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.999999513650299	WITHOUT_CLASSIFICATION	4.863497009642585E-7	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999999280781827	WITHOUT_CLASSIFICATION	7.192181732273142E-8	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999984644468708	WITHOUT_CLASSIFICATION	1.535553129320022E-6	TEST
// switch //while	WITHOUT_CLASSIFICATION	0.9999995578796863	WITHOUT_CLASSIFICATION	4.421203136291504E-7	TEST
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.999999977695061	WITHOUT_CLASSIFICATION	2.230493891492149E-8	TEST
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999999671603143	WITHOUT_CLASSIFICATION	3.283968582353525E-8	TEST
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999999099945344	WITHOUT_CLASSIFICATION	9.00054656271171E-8	TEST
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999999204497495	WITHOUT_CLASSIFICATION	7.955025057072103E-8	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999885500861659	WITHOUT_CLASSIFICATION	1.1449913834130671E-5	TEST
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999999224411273	WITHOUT_CLASSIFICATION	7.755887260089919E-8	TEST
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999999837422318	WITHOUT_CLASSIFICATION	1.6257768277687554E-8	TEST
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999999121236745	WITHOUT_CLASSIFICATION	8.787632561446455E-8	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999999254984667	WITHOUT_CLASSIFICATION	7.45015333356985E-8	TEST
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999994655213683	WITHOUT_CLASSIFICATION	5.344786316677842E-7	TEST
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999997903844191	WITHOUT_CLASSIFICATION	2.0961558103124194E-7	TEST
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999948266383623	WITHOUT_CLASSIFICATION	5.173361637693632E-6	TEST
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999992452947689	WITHOUT_CLASSIFICATION	7.547052311168402E-7	TEST
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999999892256235	WITHOUT_CLASSIFICATION	1.0774376529884324E-8	TEST
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999999984079428	WITHOUT_CLASSIFICATION	1.5920571173873957E-9	TEST
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999886701787843	WITHOUT_CLASSIFICATION	1.1329821215613248E-5	TEST
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9999933366533794	WITHOUT_CLASSIFICATION	6.663346620530091E-6	TEST
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999999971457313	WITHOUT_CLASSIFICATION	2.854268690619053E-9	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999997370536226	WITHOUT_CLASSIFICATION	2.629463774683385E-7	TEST
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999998989620109	WITHOUT_CLASSIFICATION	1.0103798905535358E-7	TEST
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999614594447	WITHOUT_CLASSIFICATION	3.854055536751571E-8	TEST
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999999977863309	WITHOUT_CLASSIFICATION	2.213669105033436E-9	TEST
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999998156920905	WITHOUT_CLASSIFICATION	1.8430790952476386E-7	TEST
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999966561268815	WITHOUT_CLASSIFICATION	3.3438731185247983E-6	TEST
// unread back	WITHOUT_CLASSIFICATION	0.9999999080285188	WITHOUT_CLASSIFICATION	9.197148122467163E-8	TEST
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999999428118739	WITHOUT_CLASSIFICATION	5.7188126180839095E-8	TEST
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.99999994947828	WITHOUT_CLASSIFICATION	5.0521720078575274E-8	TEST
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999999925476318	WITHOUT_CLASSIFICATION	7.452368085770407E-9	TEST
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999998452465945	WITHOUT_CLASSIFICATION	1.547534054439463E-7	TEST
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999999952201005	WITHOUT_CLASSIFICATION	4.779899565849479E-9	TEST
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.999999976210273	WITHOUT_CLASSIFICATION	2.37897270399376E-8	TEST
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999999908851636	WITHOUT_CLASSIFICATION	9.114836311852775E-9	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999984644468708	WITHOUT_CLASSIFICATION	1.535553129320022E-6	TEST
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999999608982201	WITHOUT_CLASSIFICATION	3.910177993034314E-8	TEST
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999999517474891	WITHOUT_CLASSIFICATION	4.8252510917463186E-8	TEST
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999988972416344	WITHOUT_CLASSIFICATION	1.1027583656289619E-6	TEST
// silence	WITHOUT_CLASSIFICATION	0.9999999302541803	WITHOUT_CLASSIFICATION	6.974581958914142E-8	TEST
// silence	WITHOUT_CLASSIFICATION	0.9999999302541803	WITHOUT_CLASSIFICATION	6.974581958914142E-8	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.999999802175189	WITHOUT_CLASSIFICATION	1.978248110173655E-7	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.999999802175189	WITHOUT_CLASSIFICATION	1.978248110173655E-7	TEST
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999998106373301	WITHOUT_CLASSIFICATION	1.8936266989045267E-7	TEST
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999998692452736	WITHOUT_CLASSIFICATION	1.3075472628921802E-7	TEST
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999999135360709	WITHOUT_CLASSIFICATION	8.646392905760279E-8	TEST
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.999999734199135	WITHOUT_CLASSIFICATION	2.6580086507970477E-7	TEST
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999999786829291	WITHOUT_CLASSIFICATION	2.1317070922241847E-8	TEST
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999999427527945	WITHOUT_CLASSIFICATION	5.7247205577083824E-8	TEST
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999999772329504	WITHOUT_CLASSIFICATION	2.2767049617505306E-8	TEST
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999999966657059	WITHOUT_CLASSIFICATION	3.3342941800919127E-9	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999999998649899	WITHOUT_CLASSIFICATION	1.3501011419965318E-10	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999997991235946	WITHOUT_CLASSIFICATION	2.0087640541005693E-7	TEST
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999999965897455	WITHOUT_CLASSIFICATION	3.4102544982701367E-9	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999968150738578	WITHOUT_CLASSIFICATION	3.1849261422528753E-6	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999968150738578	WITHOUT_CLASSIFICATION	3.1849261422528753E-6	TEST
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999998870249666	WITHOUT_CLASSIFICATION	1.1297503350577865E-7	TEST
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999993430685211	WITHOUT_CLASSIFICATION	6.569314789439217E-7	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999998521945088	WITHOUT_CLASSIFICATION	1.4780549116309932E-7	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999998521945088	WITHOUT_CLASSIFICATION	1.4780549116309932E-7	TEST
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999983504062356	WITHOUT_CLASSIFICATION	1.6495937643994034E-6	TEST
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999999985399344	WITHOUT_CLASSIFICATION	1.4600655506768394E-9	TEST
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999991408076733	WITHOUT_CLASSIFICATION	8.591923268024989E-7	TEST
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999998558292633	WITHOUT_CLASSIFICATION	1.441707366494178E-7	TEST
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999999493331264	WITHOUT_CLASSIFICATION	5.066687362524701E-8	TEST
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999997399792585	WITHOUT_CLASSIFICATION	2.600207415578231E-7	TEST
// save the ungot	WITHOUT_CLASSIFICATION	0.99999963072596	WITHOUT_CLASSIFICATION	3.692740399324689E-7	TEST
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999999538808632	WITHOUT_CLASSIFICATION	4.611913672149001E-8	TEST
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999961891412138	WITHOUT_CLASSIFICATION	3.810858786170641E-6	TEST
// flush first	WITHOUT_CLASSIFICATION	0.9999998171986726	WITHOUT_CLASSIFICATION	1.828013273314087E-7	TEST
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999996587363668	WITHOUT_CLASSIFICATION	3.412636333121127E-7	TEST
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999755033025907	WITHOUT_CLASSIFICATION	2.4496697409282712E-5	TEST
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999998766124045	WITHOUT_CLASSIFICATION	1.2338759539104965E-7	TEST
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999994532993126	WITHOUT_CLASSIFICATION	5.467006873321511E-7	TEST
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999999830487398	WITHOUT_CLASSIFICATION	1.695126022447876E-8	TEST
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999988094828317	WITHOUT_CLASSIFICATION	1.1905171683399172E-6	TEST
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999999428891252	WITHOUT_CLASSIFICATION	5.71108747040232E-8	TEST
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999999849736356	WITHOUT_CLASSIFICATION	1.5026364393878998E-8	TEST
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999757638454648	WITHOUT_CLASSIFICATION	2.423615453512631E-5	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.999999996754733	WITHOUT_CLASSIFICATION	3.2452671685823133E-9	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9912382839216085	WITHOUT_CLASSIFICATION	0.008761716078391484	TEST
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.999999952972865	WITHOUT_CLASSIFICATION	4.702713499721274E-8	TEST
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999999784931017	WITHOUT_CLASSIFICATION	2.1506898366857602E-8	TEST
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999999489333932	WITHOUT_CLASSIFICATION	5.1066606932398427E-8	TEST
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999999713105168	WITHOUT_CLASSIFICATION	2.8689483316279014E-8	TEST
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.999999996741956	WITHOUT_CLASSIFICATION	3.2580439521583157E-9	TEST
// else leave it null	WITHOUT_CLASSIFICATION	0.9999998984757925	WITHOUT_CLASSIFICATION	1.0152420738295515E-7	TEST
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999998160575019	WITHOUT_CLASSIFICATION	1.839424981122079E-7	TEST
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999995224571872	WITHOUT_CLASSIFICATION	4.775428128135552E-7	TEST
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999993378323758	WITHOUT_CLASSIFICATION	6.621676243031138E-7	TEST
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999999654911443	WITHOUT_CLASSIFICATION	3.4508855735180643E-8	TEST
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999998842192162	WITHOUT_CLASSIFICATION	1.1578078384434647E-7	TEST
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.99999999138915	WITHOUT_CLASSIFICATION	8.610849935133337E-9	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999999944844701	WITHOUT_CLASSIFICATION	5.51552990669284E-9	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999999944844701	WITHOUT_CLASSIFICATION	5.51552990669284E-9	TEST
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999999756796787	WITHOUT_CLASSIFICATION	2.432032129024073E-8	TEST
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999999976994863	WITHOUT_CLASSIFICATION	2.300513752946345E-9	TEST
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999757094446067	WITHOUT_CLASSIFICATION	2.4290555393316765E-5	TEST
// Init	WITHOUT_CLASSIFICATION	0.9999996133425435	WITHOUT_CLASSIFICATION	3.866574564864586E-7	TEST
// Block	WITHOUT_CLASSIFICATION	0.99999944115791	WITHOUT_CLASSIFICATION	5.588420901450092E-7	TEST
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999999419324542	WITHOUT_CLASSIFICATION	5.8067545815646953E-8	TEST
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999644383832462	WITHOUT_CLASSIFICATION	3.55616167537746E-5	TEST
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999672961228387	WITHOUT_CLASSIFICATION	3.2703877161260356E-5	TEST
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999927359098713	WITHOUT_CLASSIFICATION	7.264090128703407E-6	TEST
// ok	WITHOUT_CLASSIFICATION	0.9999978934408509	WITHOUT_CLASSIFICATION	2.106559149006098E-6	TEST
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.999999995880887	WITHOUT_CLASSIFICATION	4.11911301274516E-9	TEST
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9999983850711103	WITHOUT_CLASSIFICATION	1.6149288897142496E-6	TEST
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999495874064744	WITHOUT_CLASSIFICATION	5.041259352559317E-5	TEST
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999983496329674	WITHOUT_CLASSIFICATION	1.6503670326077666E-6	TEST
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999999740007531	WITHOUT_CLASSIFICATION	2.5999246833896302E-8	TEST
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999998988134902	WITHOUT_CLASSIFICATION	1.0118650989364174E-7	TEST
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999999664373664	WITHOUT_CLASSIFICATION	3.356263350622397E-8	TEST
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999999304038857	WITHOUT_CLASSIFICATION	6.95961142510103E-8	TEST
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9999997038812712	WITHOUT_CLASSIFICATION	2.961187287725334E-7	TEST
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999988882445244	WITHOUT_CLASSIFICATION	1.1117554756092224E-6	TEST
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.99999988497567	WITHOUT_CLASSIFICATION	1.1502432996616281E-7	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999993774941692	WITHOUT_CLASSIFICATION	6.225058307572364E-7	TEST
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999999016115162	WITHOUT_CLASSIFICATION	9.838848373706582E-8	TEST
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.999999951558154	WITHOUT_CLASSIFICATION	4.844184594119749E-8	TEST
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999993044535307	WITHOUT_CLASSIFICATION	6.955464693530423E-7	TEST
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999999734747165	WITHOUT_CLASSIFICATION	2.6525283580790625E-8	TEST
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999955223462	WITHOUT_CLASSIFICATION	4.477653776047415E-9	TEST
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999986096362623	WITHOUT_CLASSIFICATION	1.3903637376803063E-6	TEST
// void methods should work	WITHOUT_CLASSIFICATION	0.9999997216482444	WITHOUT_CLASSIFICATION	2.7835175573061135E-7	TEST
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999999408478769	WITHOUT_CLASSIFICATION	5.915212309695623E-8	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999761091702218	WITHOUT_CLASSIFICATION	2.3890829778089925E-5	TEST
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9954123766021205	WITHOUT_CLASSIFICATION	0.004587623397879558	TEST
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999992676337595	WITHOUT_CLASSIFICATION	7.323662404745117E-7	TEST
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999996101789879	WITHOUT_CLASSIFICATION	3.898210120662425E-7	TEST
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999997225968011	WITHOUT_CLASSIFICATION	2.774031988090404E-7	TEST
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9998451802433419	WITHOUT_CLASSIFICATION	1.5481975665803787E-4	TEST
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999975935002258	WITHOUT_CLASSIFICATION	2.406499774222397E-6	TEST
// value equality	WITHOUT_CLASSIFICATION	0.9999999144104125	WITHOUT_CLASSIFICATION	8.558958749698841E-8	TEST
// identity equality	WITHOUT_CLASSIFICATION	0.9999999703658395	WITHOUT_CLASSIFICATION	2.963416035967287E-8	TEST
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999999109846253	WITHOUT_CLASSIFICATION	8.901537465195055E-8	TEST
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999999213865172	WITHOUT_CLASSIFICATION	7.861348281890075E-8	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999997673773455	WITHOUT_CLASSIFICATION	2.326226545391961E-7	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999997673773455	WITHOUT_CLASSIFICATION	2.326226545391961E-7	TEST
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999996558721326	WITHOUT_CLASSIFICATION	3.441278674164156E-7	TEST
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999998465182076	WITHOUT_CLASSIFICATION	1.5348179243956021E-7	TEST
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999994995734689	WITHOUT_CLASSIFICATION	5.004265311755213E-7	TEST
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999990249256334	WITHOUT_CLASSIFICATION	9.750743666065124E-7	TEST
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999994667252873	WITHOUT_CLASSIFICATION	5.332747127393409E-7	TEST
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999999962712462	WITHOUT_CLASSIFICATION	3.728753717624881E-9	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999925819352	WITHOUT_CLASSIFICATION	7.418064748169088E-9	TEST
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999999926535825	WITHOUT_CLASSIFICATION	7.346417438303219E-9	TEST
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999999149578556	WITHOUT_CLASSIFICATION	8.504214448147458E-8	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999999994834865	WITHOUT_CLASSIFICATION	5.165135348515545E-10	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999966223356103	WITHOUT_CLASSIFICATION	3.3776643896751426E-6	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999999556416385	WITHOUT_CLASSIFICATION	4.435836160985226E-8	TEST
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999997643841988	WITHOUT_CLASSIFICATION	2.3561580110195786E-7	TEST
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999999725923754	WITHOUT_CLASSIFICATION	2.7407624654534478E-8	TEST
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999999951182285	WITHOUT_CLASSIFICATION	4.881771637071266E-9	TEST
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9999958250506237	WITHOUT_CLASSIFICATION	4.174949376321635E-6	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999999995469885	WITHOUT_CLASSIFICATION	4.530115134759274E-10	TEST
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999967120376532	WITHOUT_CLASSIFICATION	3.287962346732439E-6	TEST
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999999961705458	WITHOUT_CLASSIFICATION	3.8294542065828794E-9	TEST
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9999923294040451	WITHOUT_CLASSIFICATION	7.67059595491251E-6	TEST
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999998139219459	WITHOUT_CLASSIFICATION	1.8607805416768782E-7	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999996155063835	WITHOUT_CLASSIFICATION	3.844936165459231E-7	TEST
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999999999148617	WITHOUT_CLASSIFICATION	8.513834960272947E-11	TEST
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999999857925932	WITHOUT_CLASSIFICATION	1.4207406783485964E-8	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999999582306354	WITHOUT_CLASSIFICATION	4.176936465500786E-8	TEST
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999994566646757	WITHOUT_CLASSIFICATION	5.433353243041626E-7	TEST
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999998489764561	WITHOUT_CLASSIFICATION	1.510235439083542E-7	TEST
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999997968796795	WITHOUT_CLASSIFICATION	2.0312032038807437E-7	TEST
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999536072762	WITHOUT_CLASSIFICATION	4.6392723754362545E-8	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999998907197091	WITHOUT_CLASSIFICATION	1.0928029092229638E-7	TEST
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999523221611	WITHOUT_CLASSIFICATION	4.7677838871325594E-8	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999999946801772	WITHOUT_CLASSIFICATION	5.319822777865227E-9	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999998907197091	WITHOUT_CLASSIFICATION	1.0928029092229638E-7	TEST
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999845313345547	WITHOUT_CLASSIFICATION	1.5468665445327803E-5	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999966168666274	WITHOUT_CLASSIFICATION	3.38313337263186E-6	TEST
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9999999512482717	WITHOUT_CLASSIFICATION	4.8751728403362884E-8	TEST
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9979706984510702	WITHOUT_CLASSIFICATION	0.0020293015489297505	TEST
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999998044126206	WITHOUT_CLASSIFICATION	1.955873794716041E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999997169250188	WITHOUT_CLASSIFICATION	2.830749813067418E-7	TEST
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999998660020599	WITHOUT_CLASSIFICATION	1.3399794005390854E-7	TEST
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999892700330637	WITHOUT_CLASSIFICATION	1.0729966936243009E-5	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999056319725	WITHOUT_CLASSIFICATION	9.436802747493494E-8	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.999999996754733	WITHOUT_CLASSIFICATION	3.2452671685823133E-9	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.999999865941305	WITHOUT_CLASSIFICATION	1.3405869494280262E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999658741177	WITHOUT_CLASSIFICATION	3.4125882455610684E-8	TEST
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.999999438148746	WITHOUT_CLASSIFICATION	5.618512538763407E-7	TEST
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999999924231682	WITHOUT_CLASSIFICATION	7.576831847223195E-9	TEST
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999880984423825	WITHOUT_CLASSIFICATION	1.1901557617625922E-5	TEST
// switch // while	WITHOUT_CLASSIFICATION	0.9999996320886673	WITHOUT_CLASSIFICATION	3.6791133267262503E-7	TEST
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9999876488445654	WITHOUT_CLASSIFICATION	1.235115543472212E-5	TEST
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999995981161014	WITHOUT_CLASSIFICATION	4.018838986003631E-7	TEST
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999999938494736	WITHOUT_CLASSIFICATION	6.150526417800027E-9	TEST
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999997049854451	WITHOUT_CLASSIFICATION	2.9501455499345577E-7	TEST
// expected	WITHOUT_CLASSIFICATION	0.9999991942269756	WITHOUT_CLASSIFICATION	8.057730243334057E-7	TEST
// Do nothing	WITHOUT_CLASSIFICATION	0.9999988902414096	WITHOUT_CLASSIFICATION	1.1097585902567578E-6	TEST
// constructor	WITHOUT_CLASSIFICATION	0.9999999419616922	WITHOUT_CLASSIFICATION	5.8038307913208483E-8	TEST
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999994851562236	WITHOUT_CLASSIFICATION	5.148437763165058E-7	TEST
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999998761526147	WITHOUT_CLASSIFICATION	1.2384738527636494E-7	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999996729224221	WITHOUT_CLASSIFICATION	3.270775778376156E-7	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999997592594775	WITHOUT_CLASSIFICATION	2.407405224766303E-7	TEST
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999999867316182	WITHOUT_CLASSIFICATION	1.3268381822741276E-8	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999480445173	WITHOUT_CLASSIFICATION	5.195548274120755E-8	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.999999898330324	WITHOUT_CLASSIFICATION	1.0166967608233982E-7	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.999999898330324	WITHOUT_CLASSIFICATION	1.0166967608233982E-7	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999618071893	WITHOUT_CLASSIFICATION	3.819281069717118E-8	TEST
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999999979750634	WITHOUT_CLASSIFICATION	2.0249365256827983E-9	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999999982441486	WITHOUT_CLASSIFICATION	1.7558513432102725E-9	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9982278027226413	WITHOUT_CLASSIFICATION	0.001772197277358725	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9982278027226413	WITHOUT_CLASSIFICATION	0.001772197277358725	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9982278027226413	WITHOUT_CLASSIFICATION	0.001772197277358725	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9982278027226413	WITHOUT_CLASSIFICATION	0.001772197277358725	TEST
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999999503589279	WITHOUT_CLASSIFICATION	4.964107206135354E-8	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999999198512918	WITHOUT_CLASSIFICATION	8.014870824099014E-8	TEST
// "else" body	WITHOUT_CLASSIFICATION	0.9999996583928205	WITHOUT_CLASSIFICATION	3.41607179558192E-7	TEST
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9999884171172364	WITHOUT_CLASSIFICATION	1.1582882763631693E-5	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.999999987945185	WITHOUT_CLASSIFICATION	1.2054814948286223E-8	TEST
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999941971944922	WITHOUT_CLASSIFICATION	5.802805507767839E-6	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999929488943408	WITHOUT_CLASSIFICATION	7.051105659252575E-6	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999929488943408	WITHOUT_CLASSIFICATION	7.051105659252575E-6	TEST
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999999612308494	WITHOUT_CLASSIFICATION	3.876915058215408E-8	TEST
/* 10! */	WITHOUT_CLASSIFICATION	0.9999914206500187	WITHOUT_CLASSIFICATION	8.579349981392773E-6	TEST
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999997226111697	WITHOUT_CLASSIFICATION	2.7738883036230343E-7	TEST
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9998788071173624	WITHOUT_CLASSIFICATION	1.2119288263754251E-4	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999999558079281	WITHOUT_CLASSIFICATION	4.419207174338399E-8	TEST
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999997607810223	WITHOUT_CLASSIFICATION	2.392189777623796E-7	TEST
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999999178503638	WITHOUT_CLASSIFICATION	8.214963624620247E-8	TEST
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999950791387942	WITHOUT_CLASSIFICATION	4.920861205855038E-6	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999858059131049	WITHOUT_CLASSIFICATION	1.419408689511298E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999858059131049	WITHOUT_CLASSIFICATION	1.419408689511298E-5	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999999946801772	WITHOUT_CLASSIFICATION	5.319822777865227E-9	TEST
// line 449	WITHOUT_CLASSIFICATION	0.9999997412822129	WITHOUT_CLASSIFICATION	2.5871778700885223E-7	TEST
// line 495	WITHOUT_CLASSIFICATION	0.9999997461976645	WITHOUT_CLASSIFICATION	2.5380233549835544E-7	TEST
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999998952767745	WITHOUT_CLASSIFICATION	1.0472322551820345E-7	TEST
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999998553134478	WITHOUT_CLASSIFICATION	1.4468655218278298E-7	TEST
/* 14! */	WITHOUT_CLASSIFICATION	0.9999916445420932	WITHOUT_CLASSIFICATION	8.355457906702933E-6	TEST
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999991819579352	WITHOUT_CLASSIFICATION	8.180420648018708E-7	TEST
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.99999990413036	WITHOUT_CLASSIFICATION	9.586963996006454E-8	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999999072263895	WITHOUT_CLASSIFICATION	9.277361054884922E-8	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999999072263895	WITHOUT_CLASSIFICATION	9.277361054884922E-8	TEST
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.999999968581422	WITHOUT_CLASSIFICATION	3.141857797278328E-8	TEST
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999999992258207	WITHOUT_CLASSIFICATION	7.741791982892994E-10	TEST
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999976880345001	WITHOUT_CLASSIFICATION	2.311965499971702E-6	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999997673553955	WITHOUT_CLASSIFICATION	2.326446044286485E-7	TEST
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999999818484755	WITHOUT_CLASSIFICATION	1.815152449359831E-8	TEST
/* 18! */	WITHOUT_CLASSIFICATION	0.9999918338759319	WITHOUT_CLASSIFICATION	8.166124067961548E-6	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999999245914036	WITHOUT_CLASSIFICATION	7.540859634614267E-8	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999878486162	WITHOUT_CLASSIFICATION	1.215138374827615E-8	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999878486162	WITHOUT_CLASSIFICATION	1.215138374827615E-8	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999878486162	WITHOUT_CLASSIFICATION	1.215138374827615E-8	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999878486162	WITHOUT_CLASSIFICATION	1.215138374827615E-8	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999584851419	WITHOUT_CLASSIFICATION	4.151485803232368E-8	TEST
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999999758502186	WITHOUT_CLASSIFICATION	2.414978136953836E-8	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999663426736317	WITHOUT_CLASSIFICATION	3.365732636829668E-5	TEST
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999999442365385	WITHOUT_CLASSIFICATION	5.576346154560746E-8	TEST
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999995535047405	WITHOUT_CLASSIFICATION	4.4649525952105067E-7	TEST
/* 22! */	WITHOUT_CLASSIFICATION	0.9999897067004108	WITHOUT_CLASSIFICATION	1.0293299589292388E-5	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999999265218763	WITHOUT_CLASSIFICATION	7.34781237463651E-8	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999995005283551	WITHOUT_CLASSIFICATION	4.994716448219608E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999995005283551	WITHOUT_CLASSIFICATION	4.994716448219608E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999995005283551	WITHOUT_CLASSIFICATION	4.994716448219608E-7	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999999372125501	WITHOUT_CLASSIFICATION	6.278744991582926E-8	TEST
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999999902112832	WITHOUT_CLASSIFICATION	9.788716760950603E-9	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999621833854	WITHOUT_CLASSIFICATION	3.781661449428152E-8	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999621833854	WITHOUT_CLASSIFICATION	3.781661449428152E-8	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.999998568057435	WITHOUT_CLASSIFICATION	1.4319425649849797E-6	TEST
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999999998944	WITHOUT_CLASSIFICATION	1.0558037334898072E-13	TEST
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999999012041593	WITHOUT_CLASSIFICATION	9.87958408209945E-8	TEST
// BASE64	WITHOUT_CLASSIFICATION	0.9999986046558953	WITHOUT_CLASSIFICATION	1.395344104818292E-6	TEST
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999836544509	WITHOUT_CLASSIFICATION	1.6345549166118862E-8	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999999642904543	WITHOUT_CLASSIFICATION	3.5709545680395624E-8	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999999441694294	WITHOUT_CLASSIFICATION	5.5830570506579205E-8	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999999441694294	WITHOUT_CLASSIFICATION	5.5830570506579205E-8	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999181328179	WITHOUT_CLASSIFICATION	8.186718214217967E-8	TEST
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999999669385039	WITHOUT_CLASSIFICATION	3.3061496095358566E-8	TEST
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999999773155348	WITHOUT_CLASSIFICATION	2.2684465192643306E-8	TEST
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999993885934363	WITHOUT_CLASSIFICATION	6.114065636867043E-7	TEST
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9999995120695867	WITHOUT_CLASSIFICATION	4.879304132654759E-7	TEST
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999999949291847	WITHOUT_CLASSIFICATION	5.0708152873848945E-9	TEST
// carriage return	WITHOUT_CLASSIFICATION	0.9999999932306854	WITHOUT_CLASSIFICATION	6.769314535307633E-9	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999865500502579	WITHOUT_CLASSIFICATION	1.3449949742069895E-5	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999983931577373	WITHOUT_CLASSIFICATION	1.6068422627706276E-6	TEST
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999999339847855	WITHOUT_CLASSIFICATION	6.601521451233072E-8	TEST
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.999999984058251	WITHOUT_CLASSIFICATION	1.5941749003329687E-8	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.999999998706194	WITHOUT_CLASSIFICATION	1.2938059490181236E-9	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999916454313	WITHOUT_CLASSIFICATION	8.354568707252446E-9	TEST
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999998961586121	WITHOUT_CLASSIFICATION	1.0384138802384283E-7	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999999533807412	WITHOUT_CLASSIFICATION	4.66192588221203E-8	TEST
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999999994025074	WITHOUT_CLASSIFICATION	5.974926528586112E-10	TEST
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999999191529373	WITHOUT_CLASSIFICATION	8.084706260959228E-8	TEST
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999999872595445	WITHOUT_CLASSIFICATION	1.2740455538559095E-8	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999999958357386	WITHOUT_CLASSIFICATION	4.164261440712298E-9	TEST
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999999974947518	WITHOUT_CLASSIFICATION	2.5052481607268604E-9	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999999907228576	WITHOUT_CLASSIFICATION	9.27714236630018E-9	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999999943595836	WITHOUT_CLASSIFICATION	5.640416357891907E-9	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999997946067545	WITHOUT_CLASSIFICATION	2.0539324547221852E-7	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999997946067545	WITHOUT_CLASSIFICATION	2.0539324547221852E-7	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999997946067545	WITHOUT_CLASSIFICATION	2.0539324547221852E-7	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999997946067545	WITHOUT_CLASSIFICATION	2.0539324547221852E-7	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999997946067545	WITHOUT_CLASSIFICATION	2.0539324547221852E-7	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999997946067545	WITHOUT_CLASSIFICATION	2.0539324547221852E-7	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999997946067545	WITHOUT_CLASSIFICATION	2.0539324547221852E-7	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999997946067545	WITHOUT_CLASSIFICATION	2.0539324547221852E-7	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999999969070507	WITHOUT_CLASSIFICATION	3.092949308216017E-9	TEST
/* fall through */	WITHOUT_CLASSIFICATION	0.9999972556546183	WITHOUT_CLASSIFICATION	2.7443453816898837E-6	TEST
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999970244745217	WITHOUT_CLASSIFICATION	2.9755254784370894E-6	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999999601825604	WITHOUT_CLASSIFICATION	3.981743948376411E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999925819352	WITHOUT_CLASSIFICATION	7.418064748169088E-9	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999925819352	WITHOUT_CLASSIFICATION	7.418064748169088E-9	TEST
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999999089936445	WITHOUT_CLASSIFICATION	9.100635545785954E-8	TEST
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999999446547002	WITHOUT_CLASSIFICATION	5.5345299864226104E-8	TEST
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999999260291796	WITHOUT_CLASSIFICATION	7.397082042321824E-8	TEST
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999989679879527	WITHOUT_CLASSIFICATION	1.0320120472725813E-6	TEST
// get current context	WITHOUT_CLASSIFICATION	0.999999917712282	WITHOUT_CLASSIFICATION	8.228771801006841E-8	TEST
// octal constant	WITHOUT_CLASSIFICATION	0.999999938994409	WITHOUT_CLASSIFICATION	6.100559099587268E-8	TEST
// read	WITHOUT_CLASSIFICATION	0.9999997774503963	WITHOUT_CLASSIFICATION	2.2254960377575135E-7	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999994298232847	WITHOUT_CLASSIFICATION	5.701767154143185E-7	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999997346624796	WITHOUT_CLASSIFICATION	2.653375204123987E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999772951707	WITHOUT_CLASSIFICATION	2.270482933355591E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999772951707	WITHOUT_CLASSIFICATION	2.270482933355591E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999772951707	WITHOUT_CLASSIFICATION	2.270482933355591E-8	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999890188368848	WITHOUT_CLASSIFICATION	1.0981163115107366E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999890188368848	WITHOUT_CLASSIFICATION	1.0981163115107366E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999890188368848	WITHOUT_CLASSIFICATION	1.0981163115107366E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999890188368848	WITHOUT_CLASSIFICATION	1.0981163115107366E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999890188368848	WITHOUT_CLASSIFICATION	1.0981163115107366E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999890188368848	WITHOUT_CLASSIFICATION	1.0981163115107366E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999890188368848	WITHOUT_CLASSIFICATION	1.0981163115107366E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999890188368848	WITHOUT_CLASSIFICATION	1.0981163115107366E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999890188368848	WITHOUT_CLASSIFICATION	1.0981163115107366E-5	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999864665167	WITHOUT_CLASSIFICATION	1.3533483330026752E-8	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999997733869248	WITHOUT_CLASSIFICATION	2.2661307527931883E-7	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999992343473401	WITHOUT_CLASSIFICATION	7.656526600077267E-7	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999997875495173	WITHOUT_CLASSIFICATION	2.1245048255737735E-7	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999890188368848	WITHOUT_CLASSIFICATION	1.0981163115107366E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999890188368848	WITHOUT_CLASSIFICATION	1.0981163115107366E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999890188368848	WITHOUT_CLASSIFICATION	1.0981163115107366E-5	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999999795908961	WITHOUT_CLASSIFICATION	2.040910375773466E-8	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999985439805621	WITHOUT_CLASSIFICATION	1.4560194378950097E-6	TEST
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999999978187074	WITHOUT_CLASSIFICATION	2.1812925319519174E-9	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999998884198098	WITHOUT_CLASSIFICATION	1.1158019016909076E-7	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999998884198098	WITHOUT_CLASSIFICATION	1.1158019016909076E-7	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999998915910359	WITHOUT_CLASSIFICATION	1.0840896413794095E-7	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999999369789253	WITHOUT_CLASSIFICATION	6.302107465693404E-8	TEST
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999999975374084	WITHOUT_CLASSIFICATION	2.462591677630198E-9	TEST
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999999441272468	WITHOUT_CLASSIFICATION	5.587275314648401E-8	TEST
// block given	WITHOUT_CLASSIFICATION	0.999999851468722	WITHOUT_CLASSIFICATION	1.485312780149335E-7	TEST
// block given	WITHOUT_CLASSIFICATION	0.999999851468722	WITHOUT_CLASSIFICATION	1.485312780149335E-7	TEST
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999977835154986	WITHOUT_CLASSIFICATION	2.2164845013349396E-6	TEST
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999999846713615	WITHOUT_CLASSIFICATION	1.532863843893847E-8	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999992395598483	WITHOUT_CLASSIFICATION	7.60440151777126E-7	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999826155446473	WITHOUT_CLASSIFICATION	1.7384455352680348E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999826155446473	WITHOUT_CLASSIFICATION	1.7384455352680348E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999826155446473	WITHOUT_CLASSIFICATION	1.7384455352680348E-5	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999999238200066	WITHOUT_CLASSIFICATION	7.617999347880909E-8	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999999513937673	WITHOUT_CLASSIFICATION	4.86062326190325E-8	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999999513937673	WITHOUT_CLASSIFICATION	4.86062326190325E-8	TEST
// check arity	WITHOUT_CLASSIFICATION	0.9999999723519044	WITHOUT_CLASSIFICATION	2.7648095705502934E-8	TEST
// check arity	WITHOUT_CLASSIFICATION	0.9999999723519044	WITHOUT_CLASSIFICATION	2.7648095705502934E-8	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999999441240147	WITHOUT_CLASSIFICATION	5.587598516123209E-8	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999919979687	WITHOUT_CLASSIFICATION	8.002031212488619E-9	TEST
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.999999184653409	WITHOUT_CLASSIFICATION	8.15346591014377E-7	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.999997483328542	WITHOUT_CLASSIFICATION	2.5166714580043093E-6	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999993324154782	WITHOUT_CLASSIFICATION	6.675845216591734E-7	TEST
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999999772614082	WITHOUT_CLASSIFICATION	2.2738591726010175E-8	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999990833307	WITHOUT_CLASSIFICATION	9.166692432444702E-10	TEST
// block	WITHOUT_CLASSIFICATION	0.9999996260268498	WITHOUT_CLASSIFICATION	3.739731502010423E-7	TEST
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999998546744564	WITHOUT_CLASSIFICATION	1.4532554350448949E-7	TEST
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999955133934	WITHOUT_CLASSIFICATION	4.486606638747033E-9	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999776848485266	WITHOUT_CLASSIFICATION	2.231515147348822E-5	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999997422763731	WITHOUT_CLASSIFICATION	2.577236269677167E-7	TEST
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999996559987758	WITHOUT_CLASSIFICATION	3.4400122419664013E-7	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999999393460055	WITHOUT_CLASSIFICATION	6.065399456471316E-8	TEST
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.999999996872408	WITHOUT_CLASSIFICATION	3.1275920182298503E-9	TEST
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999997220696824	WITHOUT_CLASSIFICATION	2.779303176413338E-7	TEST
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999987102015768	WITHOUT_CLASSIFICATION	1.2897984230887716E-6	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999992271588	WITHOUT_CLASSIFICATION	7.728412720064971E-10	TEST
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999867239742533	WITHOUT_CLASSIFICATION	1.3276025746702143E-5	TEST
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.999999456545622	WITHOUT_CLASSIFICATION	5.434543779330596E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999658741177	WITHOUT_CLASSIFICATION	3.4125882455610684E-8	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9999702794043396	WITHOUT_CLASSIFICATION	2.9720595660480176E-5	TEST
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999997800170205	WITHOUT_CLASSIFICATION	2.199829794298229E-7	TEST
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999999967882872	WITHOUT_CLASSIFICATION	3.211712630029697E-9	TEST
// coerce arguments	WITHOUT_CLASSIFICATION	0.999999977715773	WITHOUT_CLASSIFICATION	2.228422699148894E-8	TEST
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999745613153341	WITHOUT_CLASSIFICATION	2.5438684665890754E-5	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999983554754219	WITHOUT_CLASSIFICATION	1.644524578112942E-6	TEST
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999999691351171	WITHOUT_CLASSIFICATION	3.0864882982832175E-8	TEST
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.999999928493732	WITHOUT_CLASSIFICATION	7.150626805134446E-8	TEST
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999999997414586	WITHOUT_CLASSIFICATION	2.5854141342799486E-10	TEST
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999995052366727	WITHOUT_CLASSIFICATION	4.947633272931779E-7	TEST
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999999826277541	WITHOUT_CLASSIFICATION	1.7372245856967053E-8	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999999469041193	WITHOUT_CLASSIFICATION	5.3095880702247424E-8	TEST
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999999858593411	WITHOUT_CLASSIFICATION	1.4140658766082448E-8	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.999999957954027	WITHOUT_CLASSIFICATION	4.2045973135790776E-8	TEST
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999947845898469	WITHOUT_CLASSIFICATION	5.215410153130616E-6	TEST
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999999143136582	WITHOUT_CLASSIFICATION	8.568634186119351E-8	TEST
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999999800558522	WITHOUT_CLASSIFICATION	1.9944147741087364E-8	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999997232472702	WITHOUT_CLASSIFICATION	2.7675272982225706E-7	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999994427585	WITHOUT_CLASSIFICATION	5.572415038634542E-10	TEST
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999999437772626	WITHOUT_CLASSIFICATION	5.622273729883707E-8	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999996990403399	WITHOUT_CLASSIFICATION	3.0095966009810076E-7	TEST
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.999992459085487	WITHOUT_CLASSIFICATION	7.540914512960694E-6	TEST
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999999651522716	WITHOUT_CLASSIFICATION	3.484772837248285E-8	TEST
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999997502890015	WITHOUT_CLASSIFICATION	2.4971099856057276E-7	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999966445937015	WITHOUT_CLASSIFICATION	3.3554062984991996E-6	TEST
// specific arity	WITHOUT_CLASSIFICATION	0.999999987352046	WITHOUT_CLASSIFICATION	1.2647953940756122E-8	TEST
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999973860183	WITHOUT_CLASSIFICATION	2.613981653392724E-9	TEST
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999999258610105	WITHOUT_CLASSIFICATION	7.413898951262077E-8	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999872306673853	WITHOUT_CLASSIFICATION	1.276933261478425E-5	TEST
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999999950156667	WITHOUT_CLASSIFICATION	4.98433327835067E-9	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999999694313895	WITHOUT_CLASSIFICATION	3.0568610512140434E-8	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999999694313895	WITHOUT_CLASSIFICATION	3.0568610512140434E-8	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999786248224	WITHOUT_CLASSIFICATION	2.137517756561001E-8	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999786248224	WITHOUT_CLASSIFICATION	2.137517756561001E-8	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998973378579032	WITHOUT_CLASSIFICATION	1.0266214209680885E-4	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998973378579032	WITHOUT_CLASSIFICATION	1.0266214209680885E-4	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999996695605045	WITHOUT_CLASSIFICATION	3.3043949554806383E-7	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999996695605045	WITHOUT_CLASSIFICATION	3.3043949554806383E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.999999970944616	WITHOUT_CLASSIFICATION	2.9055383965949406E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.999999970944616	WITHOUT_CLASSIFICATION	2.9055383965949406E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.999999970944616	WITHOUT_CLASSIFICATION	2.9055383965949406E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.999999970944616	WITHOUT_CLASSIFICATION	2.9055383965949406E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.999999970944616	WITHOUT_CLASSIFICATION	2.9055383965949406E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.999999970944616	WITHOUT_CLASSIFICATION	2.9055383965949406E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.999999970944616	WITHOUT_CLASSIFICATION	2.9055383965949406E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.999999970944616	WITHOUT_CLASSIFICATION	2.9055383965949406E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.999999970944616	WITHOUT_CLASSIFICATION	2.9055383965949406E-8	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999999127707281	WITHOUT_CLASSIFICATION	8.722927185308636E-8	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999999127707281	WITHOUT_CLASSIFICATION	8.722927185308636E-8	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999999127707281	WITHOUT_CLASSIFICATION	8.722927185308636E-8	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999998824336669	WITHOUT_CLASSIFICATION	1.1756633311923855E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999999394748864	WITHOUT_CLASSIFICATION	6.052511352391223E-8	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999999394748864	WITHOUT_CLASSIFICATION	6.052511352391223E-8	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999999394748864	WITHOUT_CLASSIFICATION	6.052511352391223E-8	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999997996917732	WITHOUT_CLASSIFICATION	2.003082268420423E-7	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999997996917732	WITHOUT_CLASSIFICATION	2.003082268420423E-7	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999997996917732	WITHOUT_CLASSIFICATION	2.003082268420423E-7	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999833834432472	WITHOUT_CLASSIFICATION	1.6616556752767236E-5	TEST
// backspace	WITHOUT_CLASSIFICATION	0.9999999362353055	WITHOUT_CLASSIFICATION	6.376469449620433E-8	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999949567310014	WITHOUT_CLASSIFICATION	5.043268998587585E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999947674030546	WITHOUT_CLASSIFICATION	5.232596945361884E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999947674030546	WITHOUT_CLASSIFICATION	5.232596945361884E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999947674030546	WITHOUT_CLASSIFICATION	5.232596945361884E-6	TEST
/* package-private */	WITHOUT_CLASSIFICATION	0.9999995951269692	WITHOUT_CLASSIFICATION	4.048730307834367E-7	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999995416021177	WITHOUT_CLASSIFICATION	4.5839788220417085E-7	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999995416021177	WITHOUT_CLASSIFICATION	4.5839788220417085E-7	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999989607550526	WITHOUT_CLASSIFICATION	1.0392449474684088E-6	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999999246554786	WITHOUT_CLASSIFICATION	7.534452146450898E-8	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999999246554786	WITHOUT_CLASSIFICATION	7.534452146450898E-8	TEST
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9941506455466006	WITHOUT_CLASSIFICATION	0.005849354453399334	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999910140607499	WITHOUT_CLASSIFICATION	8.985939250167042E-6	TEST
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999998970472951	WITHOUT_CLASSIFICATION	1.0295270490339719E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999994344204556	WITHOUT_CLASSIFICATION	5.655795444068663E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999994344204556	WITHOUT_CLASSIFICATION	5.655795444068663E-7	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999998644039669	WITHOUT_CLASSIFICATION	1.3559603297345818E-7	TEST
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999947135938846	WITHOUT_CLASSIFICATION	5.286406115429257E-6	TEST
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999995967124071	WITHOUT_CLASSIFICATION	4.03287592822464E-7	TEST
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999999764686575	WITHOUT_CLASSIFICATION	2.3531342533290657E-8	TEST
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999999061102185	WITHOUT_CLASSIFICATION	9.388978154367967E-8	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999994344204556	WITHOUT_CLASSIFICATION	5.655795444068663E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999994344204556	WITHOUT_CLASSIFICATION	5.655795444068663E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999994344204556	WITHOUT_CLASSIFICATION	5.655795444068663E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999994344204556	WITHOUT_CLASSIFICATION	5.655795444068663E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999994344204556	WITHOUT_CLASSIFICATION	5.655795444068663E-7	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.999999927103858	WITHOUT_CLASSIFICATION	7.289614204416964E-8	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999998538370575	WITHOUT_CLASSIFICATION	1.4616294254916797E-7	TEST
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999999988186408	WITHOUT_CLASSIFICATION	1.1813592293248163E-9	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999995623827108	WITHOUT_CLASSIFICATION	4.376172892587423E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908085288	WITHOUT_CLASSIFICATION	1.0919147120033145E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908085288	WITHOUT_CLASSIFICATION	1.0919147120033145E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908085288	WITHOUT_CLASSIFICATION	1.0919147120033145E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908085288	WITHOUT_CLASSIFICATION	1.0919147120033145E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908085288	WITHOUT_CLASSIFICATION	1.0919147120033145E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908085288	WITHOUT_CLASSIFICATION	1.0919147120033145E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908085288	WITHOUT_CLASSIFICATION	1.0919147120033145E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908085288	WITHOUT_CLASSIFICATION	1.0919147120033145E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908085288	WITHOUT_CLASSIFICATION	1.0919147120033145E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908085288	WITHOUT_CLASSIFICATION	1.0919147120033145E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908085288	WITHOUT_CLASSIFICATION	1.0919147120033145E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908085288	WITHOUT_CLASSIFICATION	1.0919147120033145E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908085288	WITHOUT_CLASSIFICATION	1.0919147120033145E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908085288	WITHOUT_CLASSIFICATION	1.0919147120033145E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908085288	WITHOUT_CLASSIFICATION	1.0919147120033145E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908085288	WITHOUT_CLASSIFICATION	1.0919147120033145E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908085288	WITHOUT_CLASSIFICATION	1.0919147120033145E-7	TEST
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999997001340231	WITHOUT_CLASSIFICATION	2.9986597697730705E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908085288	WITHOUT_CLASSIFICATION	1.0919147120033145E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908085288	WITHOUT_CLASSIFICATION	1.0919147120033145E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908085288	WITHOUT_CLASSIFICATION	1.0919147120033145E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908085288	WITHOUT_CLASSIFICATION	1.0919147120033145E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908085288	WITHOUT_CLASSIFICATION	1.0919147120033145E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908085288	WITHOUT_CLASSIFICATION	1.0919147120033145E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908085288	WITHOUT_CLASSIFICATION	1.0919147120033145E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908085288	WITHOUT_CLASSIFICATION	1.0919147120033145E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908085288	WITHOUT_CLASSIFICATION	1.0919147120033145E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908085288	WITHOUT_CLASSIFICATION	1.0919147120033145E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908085288	WITHOUT_CLASSIFICATION	1.0919147120033145E-7	TEST
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.999992530374838	WITHOUT_CLASSIFICATION	7.469625162000365E-6	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999996634757062	WITHOUT_CLASSIFICATION	3.3652429375808216E-7	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999999269476872	WITHOUT_CLASSIFICATION	7.30523127063625E-8	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999997703990327	WITHOUT_CLASSIFICATION	2.2960096730884023E-7	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999999692470221	WITHOUT_CLASSIFICATION	3.075297796696935E-8	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999996155063835	WITHOUT_CLASSIFICATION	3.844936165459231E-7	TEST
// only public methods	WITHOUT_CLASSIFICATION	0.9999999745407252	WITHOUT_CLASSIFICATION	2.5459274912734263E-8	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999974327480364	WITHOUT_CLASSIFICATION	2.567251963565425E-6	TEST
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999999821577881	WITHOUT_CLASSIFICATION	1.7842211840948203E-8	TEST
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9999999982284007	WITHOUT_CLASSIFICATION	1.771599245824342E-9	TEST
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999999699997486	WITHOUT_CLASSIFICATION	3.0000251424256854E-8	TEST
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999999999416453	WITHOUT_CLASSIFICATION	5.835466259763101E-11	TEST
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999999667502473	WITHOUT_CLASSIFICATION	3.324975269227145E-8	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999997484965377	WITHOUT_CLASSIFICATION	2.515034622244254E-7	TEST
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999929905695082	WITHOUT_CLASSIFICATION	7.009430491800857E-6	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999997183810106	WITHOUT_CLASSIFICATION	2.8161898927240245E-7	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999999994834865	WITHOUT_CLASSIFICATION	5.165135348515545E-10	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999997359363709	WITHOUT_CLASSIFICATION	2.640636290852049E-7	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999997359363709	WITHOUT_CLASSIFICATION	2.640636290852049E-7	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999997359363709	WITHOUT_CLASSIFICATION	2.640636290852049E-7	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999997359363709	WITHOUT_CLASSIFICATION	2.640636290852049E-7	TEST
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.999999945613816	WITHOUT_CLASSIFICATION	5.438618397776241E-8	TEST
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999998135347868	WITHOUT_CLASSIFICATION	1.8646521309179323E-7	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999999804474791	WITHOUT_CLASSIFICATION	1.9552520975834338E-8	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999999804474791	WITHOUT_CLASSIFICATION	1.9552520975834338E-8	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.999999988446609	WITHOUT_CLASSIFICATION	1.1553391011643164E-8	TEST
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999996042019137	WITHOUT_CLASSIFICATION	3.9579808640312784E-7	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999978793599684	WITHOUT_CLASSIFICATION	2.120640031608748E-6	TEST
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.999999956766452	WITHOUT_CLASSIFICATION	4.323354787097527E-8	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999996106271952	WITHOUT_CLASSIFICATION	3.8937280474665087E-7	TEST
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999997983193579	WITHOUT_CLASSIFICATION	2.0168064212347884E-7	TEST
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999996490181844	WITHOUT_CLASSIFICATION	3.5098181568937E-7	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999989302431253	WITHOUT_CLASSIFICATION	1.0697568748041203E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999989302431253	WITHOUT_CLASSIFICATION	1.0697568748041203E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999989302431253	WITHOUT_CLASSIFICATION	1.0697568748041203E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999989302431253	WITHOUT_CLASSIFICATION	1.0697568748041203E-6	TEST
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999999957570553	WITHOUT_CLASSIFICATION	4.2429446621202615E-9	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999998833888093	WITHOUT_CLASSIFICATION	1.1661119076074135E-7	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999998833888093	WITHOUT_CLASSIFICATION	1.1661119076074135E-7	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999998833888093	WITHOUT_CLASSIFICATION	1.1661119076074135E-7	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999999246323297	WITHOUT_CLASSIFICATION	7.536767027622664E-8	TEST
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999998588341742	WITHOUT_CLASSIFICATION	1.411658257707033E-7	TEST
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999993549016016	WITHOUT_CLASSIFICATION	6.450983983606423E-7	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9982278027226413	WITHOUT_CLASSIFICATION	0.001772197277358725	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9982278027226413	WITHOUT_CLASSIFICATION	0.001772197277358725	TEST
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999999994523016	WITHOUT_CLASSIFICATION	5.476985534351377E-10	TEST
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999999448086568	WITHOUT_CLASSIFICATION	5.5191343146308975E-8	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.9999997167174896	WITHOUT_CLASSIFICATION	2.832825104774831E-7	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.9999997167174896	WITHOUT_CLASSIFICATION	2.832825104774831E-7	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999996333005211	WITHOUT_CLASSIFICATION	3.666994788597982E-7	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999996333005211	WITHOUT_CLASSIFICATION	3.666994788597982E-7	TEST
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999998124507113	WITHOUT_CLASSIFICATION	1.8754928860391283E-7	TEST
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999998272396493	WITHOUT_CLASSIFICATION	1.7276035076786162E-7	TEST
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999997003639732	WITHOUT_CLASSIFICATION	2.9963602675054725E-7	TEST
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.999998503620959	WITHOUT_CLASSIFICATION	1.4963790409125653E-6	TEST
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999873310435083	WITHOUT_CLASSIFICATION	1.2668956491562721E-5	TEST
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999998804075485	WITHOUT_CLASSIFICATION	1.1959245144252161E-7	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999999501841577	WITHOUT_CLASSIFICATION	4.981584228072493E-8	TEST
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999996102703783	WITHOUT_CLASSIFICATION	3.897296216186505E-7	TEST
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.999997580273377	WITHOUT_CLASSIFICATION	2.419726622948358E-6	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999904373047	WITHOUT_CLASSIFICATION	9.562695301431145E-9	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999904373047	WITHOUT_CLASSIFICATION	9.562695301431145E-9	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999999475860172	WITHOUT_CLASSIFICATION	5.2413982751333765E-8	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999999475860172	WITHOUT_CLASSIFICATION	5.2413982751333765E-8	TEST
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999999349641684	WITHOUT_CLASSIFICATION	6.50358315620556E-8	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999998978967185	WITHOUT_CLASSIFICATION	1.0210328147920891E-7	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999956298827986	WITHOUT_CLASSIFICATION	4.3701172014882365E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999987261912356	WITHOUT_CLASSIFICATION	1.2738087644016302E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999987261912356	WITHOUT_CLASSIFICATION	1.2738087644016302E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999987261912356	WITHOUT_CLASSIFICATION	1.2738087644016302E-6	TEST
// line 286	WITHOUT_CLASSIFICATION	0.9999997397021151	WITHOUT_CLASSIFICATION	2.6029788492937325E-7	TEST
// line 476	WITHOUT_CLASSIFICATION	0.9999997810482293	WITHOUT_CLASSIFICATION	2.189517707344991E-7	TEST
// line 513	WITHOUT_CLASSIFICATION	0.9999997313303387	WITHOUT_CLASSIFICATION	2.6866966132584735E-7	TEST
// line 530	WITHOUT_CLASSIFICATION	0.9999996926298803	WITHOUT_CLASSIFICATION	3.073701196655671E-7	TEST
// line 533	WITHOUT_CLASSIFICATION	0.9999996970455435	WITHOUT_CLASSIFICATION	3.0295445654136963E-7	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999997167250807	WITHOUT_CLASSIFICATION	2.8327491934227815E-7	TEST
// line 551	WITHOUT_CLASSIFICATION	0.9999997505363546	WITHOUT_CLASSIFICATION	2.4946364544016877E-7	TEST
// end loop	WITHOUT_CLASSIFICATION	0.999999771564995	WITHOUT_CLASSIFICATION	2.2843500510572746E-7	TEST
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999999885749487	WITHOUT_CLASSIFICATION	1.1425051261234605E-8	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999999978679023	WITHOUT_CLASSIFICATION	2.1320977521693343E-9	TEST
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9999998685866518	WITHOUT_CLASSIFICATION	1.3141334822147082E-7	TEST
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999998528874258	WITHOUT_CLASSIFICATION	1.4711257423487233E-7	TEST
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999997569532665	WITHOUT_CLASSIFICATION	2.4304673351379457E-7	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9982278027226413	WITHOUT_CLASSIFICATION	0.001772197277358725	TEST
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.999999986844701	WITHOUT_CLASSIFICATION	1.315529902952781E-8	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.999997977779828	WITHOUT_CLASSIFICATION	2.0222201721037634E-6	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.999999898330324	WITHOUT_CLASSIFICATION	1.0166967608233982E-7	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999782236918784	WITHOUT_CLASSIFICATION	2.1776308121581048E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999782236918784	WITHOUT_CLASSIFICATION	2.1776308121581048E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999782236918784	WITHOUT_CLASSIFICATION	2.1776308121581048E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999782236918784	WITHOUT_CLASSIFICATION	2.1776308121581048E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999782236918784	WITHOUT_CLASSIFICATION	2.1776308121581048E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999854213075741	WITHOUT_CLASSIFICATION	1.4578692425935957E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999782236918784	WITHOUT_CLASSIFICATION	2.1776308121581048E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999782236918784	WITHOUT_CLASSIFICATION	2.1776308121581048E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999782236918784	WITHOUT_CLASSIFICATION	2.1776308121581048E-5	TEST
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999999883671185	WITHOUT_CLASSIFICATION	1.1632881666305123E-8	TEST
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999995925050031	WITHOUT_CLASSIFICATION	4.0749499685663176E-7	TEST
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999233765421313	WITHOUT_CLASSIFICATION	7.662345786873974E-5	TEST
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.999998434344921	WITHOUT_CLASSIFICATION	1.5656550789821959E-6	TEST
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999987256014707	WITHOUT_CLASSIFICATION	1.2743985292108217E-6	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999993842401117	WITHOUT_CLASSIFICATION	6.157598882597092E-7	TEST
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999999830604539	WITHOUT_CLASSIFICATION	1.6939546076957257E-8	TEST
// line 572	WITHOUT_CLASSIFICATION	0.9999997594390129	WITHOUT_CLASSIFICATION	2.405609870569153E-7	TEST
// line 601	WITHOUT_CLASSIFICATION	0.999999745359278	WITHOUT_CLASSIFICATION	2.5464072189928813E-7	TEST
// line 601	WITHOUT_CLASSIFICATION	0.999999745359278	WITHOUT_CLASSIFICATION	2.5464072189928813E-7	TEST
// line 625	WITHOUT_CLASSIFICATION	0.9999997443983333	WITHOUT_CLASSIFICATION	2.5560166673333973E-7	TEST
// line 649	WITHOUT_CLASSIFICATION	0.9999997421995822	WITHOUT_CLASSIFICATION	2.578004178369315E-7	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999997351981161	WITHOUT_CLASSIFICATION	2.648018839439475E-7	TEST
// line 723	WITHOUT_CLASSIFICATION	0.999999686742436	WITHOUT_CLASSIFICATION	3.1325756395802967E-7	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999996903084206	WITHOUT_CLASSIFICATION	3.096915794441796E-7	TEST
// line 745	WITHOUT_CLASSIFICATION	0.9999997730630775	WITHOUT_CLASSIFICATION	2.269369225580907E-7	TEST
// line 766	WITHOUT_CLASSIFICATION	0.9999997722274063	WITHOUT_CLASSIFICATION	2.2777259378390527E-7	TEST
// line 785	WITHOUT_CLASSIFICATION	0.9999997685887968	WITHOUT_CLASSIFICATION	2.3141120309899343E-7	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999997458842588	WITHOUT_CLASSIFICATION	2.541157412300931E-7	TEST
// line 800	WITHOUT_CLASSIFICATION	0.9999997276284055	WITHOUT_CLASSIFICATION	2.7237159455197146E-7	TEST
// line 812	WITHOUT_CLASSIFICATION	0.999999758818085	WITHOUT_CLASSIFICATION	2.4118191499553286E-7	TEST
// line 827	WITHOUT_CLASSIFICATION	0.9999997414837024	WITHOUT_CLASSIFICATION	2.585162976256058E-7	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999996519355324	WITHOUT_CLASSIFICATION	3.480644676883881E-7	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999997504495525	WITHOUT_CLASSIFICATION	2.4955044757663164E-7	TEST
// line 864	WITHOUT_CLASSIFICATION	0.99999975101574	WITHOUT_CLASSIFICATION	2.4898425999272176E-7	TEST
// line 886	WITHOUT_CLASSIFICATION	0.999999751099323	WITHOUT_CLASSIFICATION	2.489006769712161E-7	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999997343245184	WITHOUT_CLASSIFICATION	2.656754815405887E-7	TEST
// line 911	WITHOUT_CLASSIFICATION	0.9999997301109188	WITHOUT_CLASSIFICATION	2.698890811956E-7	TEST
// line 929	WITHOUT_CLASSIFICATION	0.9999996606434088	WITHOUT_CLASSIFICATION	3.393565911726793E-7	TEST
// line 952	WITHOUT_CLASSIFICATION	0.9999997184227314	WITHOUT_CLASSIFICATION	2.81577268620065E-7	TEST
// line 970	WITHOUT_CLASSIFICATION	0.9999997476662058	WITHOUT_CLASSIFICATION	2.523337941756776E-7	TEST
// line 972	WITHOUT_CLASSIFICATION	0.9999997288090103	WITHOUT_CLASSIFICATION	2.711909896787802E-7	TEST
// line 991	WITHOUT_CLASSIFICATION	0.9999997162590114	WITHOUT_CLASSIFICATION	2.8374098865853297E-7	TEST
// line 1011	WITHOUT_CLASSIFICATION	0.9999997725791744	WITHOUT_CLASSIFICATION	2.274208255543806E-7	TEST
// line 1026	WITHOUT_CLASSIFICATION	0.999999760645416	WITHOUT_CLASSIFICATION	2.3935458406823707E-7	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999996718259971	WITHOUT_CLASSIFICATION	3.2817400276440014E-7	TEST
// line 1067	WITHOUT_CLASSIFICATION	0.9999997977940024	WITHOUT_CLASSIFICATION	2.022059975853416E-7	TEST
// line 1085	WITHOUT_CLASSIFICATION	0.9999997526535122	WITHOUT_CLASSIFICATION	2.473464879061428E-7	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999997748997271	WITHOUT_CLASSIFICATION	2.2510027278381939E-7	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999997788241192	WITHOUT_CLASSIFICATION	2.2117588086379436E-7	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999997724300609	WITHOUT_CLASSIFICATION	2.2756993914705178E-7	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999997336555827	WITHOUT_CLASSIFICATION	2.6634441726565295E-7	TEST
// line 1145	WITHOUT_CLASSIFICATION	0.9999997951906999	WITHOUT_CLASSIFICATION	2.0480930017826316E-7	TEST
// line 1169	WITHOUT_CLASSIFICATION	0.9999997777428429	WITHOUT_CLASSIFICATION	2.2225715717452771E-7	TEST
// line 1201	WITHOUT_CLASSIFICATION	0.9999996912751554	WITHOUT_CLASSIFICATION	3.087248446221827E-7	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999997763030131	WITHOUT_CLASSIFICATION	2.236969869548195E-7	TEST
// line 1229	WITHOUT_CLASSIFICATION	0.9999997080343175	WITHOUT_CLASSIFICATION	2.919656825262708E-7	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999997294257895	WITHOUT_CLASSIFICATION	2.7057421053159506E-7	TEST
// line 1287	WITHOUT_CLASSIFICATION	0.999999769138	WITHOUT_CLASSIFICATION	2.308619999086094E-7	TEST
// line 1293	WITHOUT_CLASSIFICATION	0.9999996458857985	WITHOUT_CLASSIFICATION	3.541142015399882E-7	TEST
// line 1307	WITHOUT_CLASSIFICATION	0.9999997398847655	WITHOUT_CLASSIFICATION	2.6011523449909166E-7	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999996624332632	WITHOUT_CLASSIFICATION	3.375667367865597E-7	TEST
// line 1325	WITHOUT_CLASSIFICATION	0.9999997038649887	WITHOUT_CLASSIFICATION	2.961350112749083E-7	TEST
// line 1363	WITHOUT_CLASSIFICATION	0.9999997322820517	WITHOUT_CLASSIFICATION	2.677179482520037E-7	TEST
// line 1398	WITHOUT_CLASSIFICATION	0.9999996907135922	WITHOUT_CLASSIFICATION	3.0928640788628443E-7	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.99999977300885	WITHOUT_CLASSIFICATION	2.269911501181293E-7	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999998002093459	WITHOUT_CLASSIFICATION	1.9979065414784416E-7	TEST
// line 1473	WITHOUT_CLASSIFICATION	0.9999997445401424	WITHOUT_CLASSIFICATION	2.5545985753800917E-7	TEST
// line 1492	WITHOUT_CLASSIFICATION	0.9999997507952046	WITHOUT_CLASSIFICATION	2.492047952948179E-7	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999997288894944	WITHOUT_CLASSIFICATION	2.71110505505856E-7	TEST
// line 1523	WITHOUT_CLASSIFICATION	0.9999997136872191	WITHOUT_CLASSIFICATION	2.863127809897291E-7	TEST
// line 1562	WITHOUT_CLASSIFICATION	0.999999782744145	WITHOUT_CLASSIFICATION	2.1725585501661656E-7	TEST
// line 1582	WITHOUT_CLASSIFICATION	0.9999997722708254	WITHOUT_CLASSIFICATION	2.2772917461612376E-7	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999996653744757	WITHOUT_CLASSIFICATION	3.3462552424542413E-7	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999996653744757	WITHOUT_CLASSIFICATION	3.3462552424542413E-7	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999997891448493	WITHOUT_CLASSIFICATION	2.1085515061124153E-7	TEST
// line 1620	WITHOUT_CLASSIFICATION	0.9999997398952796	WITHOUT_CLASSIFICATION	2.6010472041870144E-7	TEST
// line 1635	WITHOUT_CLASSIFICATION	0.9999997372319436	WITHOUT_CLASSIFICATION	2.627680564676698E-7	TEST
// line 1652	WITHOUT_CLASSIFICATION	0.9999997828628261	WITHOUT_CLASSIFICATION	2.1713717388582606E-7	TEST
// line 1681	WITHOUT_CLASSIFICATION	0.9999997461500751	WITHOUT_CLASSIFICATION	2.5384992485790943E-7	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999997571713993	WITHOUT_CLASSIFICATION	2.428286006944846E-7	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999997991733279	WITHOUT_CLASSIFICATION	2.00826672049568E-7	TEST
// line 1755	WITHOUT_CLASSIFICATION	0.9999997955251716	WITHOUT_CLASSIFICATION	2.044748283283067E-7	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999997778018734	WITHOUT_CLASSIFICATION	2.2219812652773347E-7	TEST
// line 1789	WITHOUT_CLASSIFICATION	0.9999997743987756	WITHOUT_CLASSIFICATION	2.2560122428830326E-7	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999976386974558	WITHOUT_CLASSIFICATION	2.3613025441497402E-6	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999976386974558	WITHOUT_CLASSIFICATION	2.3613025441497402E-6	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999995887218711	WITHOUT_CLASSIFICATION	4.1127812886747127E-7	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999988246451363	WITHOUT_CLASSIFICATION	1.1753548637017846E-6	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999992802278089	WITHOUT_CLASSIFICATION	7.197721909784944E-7	TEST
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999998819765774	WITHOUT_CLASSIFICATION	1.1802342247485227E-7	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999861847484	WITHOUT_CLASSIFICATION	1.381525152204668E-8	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999861847484	WITHOUT_CLASSIFICATION	1.381525152204668E-8	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999861847484	WITHOUT_CLASSIFICATION	1.381525152204668E-8	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999861847484	WITHOUT_CLASSIFICATION	1.381525152204668E-8	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9930601361718739	WITHOUT_CLASSIFICATION	0.0069398638281260765	TEST
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999966977982849	WITHOUT_CLASSIFICATION	3.302201715145976E-6	TEST
// line 313	WITHOUT_CLASSIFICATION	0.99999966423606	WITHOUT_CLASSIFICATION	3.357639399126612E-7	TEST
// line 339	WITHOUT_CLASSIFICATION	0.9999995900242001	WITHOUT_CLASSIFICATION	4.0997579976794736E-7	TEST
// line 361	WITHOUT_CLASSIFICATION	0.9999996303123208	WITHOUT_CLASSIFICATION	3.696876792013195E-7	TEST
// line 413	WITHOUT_CLASSIFICATION	0.9999997317160334	WITHOUT_CLASSIFICATION	2.682839665691306E-7	TEST
// line 451	WITHOUT_CLASSIFICATION	0.9999997608684451	WITHOUT_CLASSIFICATION	2.391315549658239E-7	TEST
// line 472	WITHOUT_CLASSIFICATION	0.9999997593670237	WITHOUT_CLASSIFICATION	2.406329763319551E-7	TEST
// line 500	WITHOUT_CLASSIFICATION	0.9999997385291981	WITHOUT_CLASSIFICATION	2.614708018230789E-7	TEST
// line 515	WITHOUT_CLASSIFICATION	0.9999997814801079	WITHOUT_CLASSIFICATION	2.185198919810845E-7	TEST
// line 555	WITHOUT_CLASSIFICATION	0.9999997509863727	WITHOUT_CLASSIFICATION	2.4901362729945135E-7	TEST
// line 582	WITHOUT_CLASSIFICATION	0.9999997435318774	WITHOUT_CLASSIFICATION	2.564681227145988E-7	TEST
// line 619	WITHOUT_CLASSIFICATION	0.9999997708530505	WITHOUT_CLASSIFICATION	2.2914694950653744E-7	TEST
// line 636	WITHOUT_CLASSIFICATION	0.9999996981216352	WITHOUT_CLASSIFICATION	3.018783647749717E-7	TEST
// line 669	WITHOUT_CLASSIFICATION	0.9999997367040742	WITHOUT_CLASSIFICATION	2.632959258669124E-7	TEST
// line 703	WITHOUT_CLASSIFICATION	0.9999996555236577	WITHOUT_CLASSIFICATION	3.4447634227247477E-7	TEST
// line 776	WITHOUT_CLASSIFICATION	0.9999997720406122	WITHOUT_CLASSIFICATION	2.2795938775570984E-7	TEST
// line 814	WITHOUT_CLASSIFICATION	0.9999997739031278	WITHOUT_CLASSIFICATION	2.260968720932185E-7	TEST
// line 823	WITHOUT_CLASSIFICATION	0.9999996606561101	WITHOUT_CLASSIFICATION	3.3934388992426297E-7	TEST
// line 854	WITHOUT_CLASSIFICATION	0.999999750147392	WITHOUT_CLASSIFICATION	2.498526080202078E-7	TEST
// line 872	WITHOUT_CLASSIFICATION	0.9999997461493465	WITHOUT_CLASSIFICATION	2.5385065346787527E-7	TEST
// line 905	WITHOUT_CLASSIFICATION	0.9999996820463488	WITHOUT_CLASSIFICATION	3.1795365112738684E-7	TEST
// line 925	WITHOUT_CLASSIFICATION	0.9999997048235368	WITHOUT_CLASSIFICATION	2.9517646312959255E-7	TEST
// line 958	WITHOUT_CLASSIFICATION	0.9999997240010903	WITHOUT_CLASSIFICATION	2.7599890967609174E-7	TEST
// line 992	WITHOUT_CLASSIFICATION	0.9999997039020281	WITHOUT_CLASSIFICATION	2.9609797196408545E-7	TEST
// line 1047	WITHOUT_CLASSIFICATION	0.999999793369864	WITHOUT_CLASSIFICATION	2.066301359035151E-7	TEST
// line 1072	WITHOUT_CLASSIFICATION	0.9999997897688927	WITHOUT_CLASSIFICATION	2.1023110730608164E-7	TEST
// line 1081	WITHOUT_CLASSIFICATION	0.9999997067292862	WITHOUT_CLASSIFICATION	2.932707139020054E-7	TEST
// line 1108	WITHOUT_CLASSIFICATION	0.9999997639167301	WITHOUT_CLASSIFICATION	2.3608326992292012E-7	TEST
// line 1136	WITHOUT_CLASSIFICATION	0.9999997440022851	WITHOUT_CLASSIFICATION	2.5599771489998885E-7	TEST
// line 1168	WITHOUT_CLASSIFICATION	0.9999997887754991	WITHOUT_CLASSIFICATION	2.1122450086309333E-7	TEST
// line 1192	WITHOUT_CLASSIFICATION	0.999999757108459	WITHOUT_CLASSIFICATION	2.4289154100797995E-7	TEST
// line 1241	WITHOUT_CLASSIFICATION	0.9999997212808495	WITHOUT_CLASSIFICATION	2.787191504481528E-7	TEST
// line 1267	WITHOUT_CLASSIFICATION	0.9999997831097436	WITHOUT_CLASSIFICATION	2.1689025649249024E-7	TEST
// line 1286	WITHOUT_CLASSIFICATION	0.999999760806022	WITHOUT_CLASSIFICATION	2.391939780502913E-7	TEST
// line 1301	WITHOUT_CLASSIFICATION	0.9999996746037932	WITHOUT_CLASSIFICATION	3.25396206853626E-7	TEST
// line 1314	WITHOUT_CLASSIFICATION	0.9999997219878342	WITHOUT_CLASSIFICATION	2.780121658694378E-7	TEST
// line 1333	WITHOUT_CLASSIFICATION	0.9999997198026217	WITHOUT_CLASSIFICATION	2.8019737827428335E-7	TEST
// line 1362	WITHOUT_CLASSIFICATION	0.9999997179144491	WITHOUT_CLASSIFICATION	2.820855509521274E-7	TEST
// line 1395	WITHOUT_CLASSIFICATION	0.9999997070046583	WITHOUT_CLASSIFICATION	2.9299534168604627E-7	TEST
// line 1420	WITHOUT_CLASSIFICATION	0.9999997307818275	WITHOUT_CLASSIFICATION	2.692181726197655E-7	TEST
// line 1439	WITHOUT_CLASSIFICATION	0.9999997013584805	WITHOUT_CLASSIFICATION	2.9864151950777993E-7	TEST
// line 1476	WITHOUT_CLASSIFICATION	0.9999998018133032	WITHOUT_CLASSIFICATION	1.9818669681526332E-7	TEST
// line 1535	WITHOUT_CLASSIFICATION	0.9999997257462132	WITHOUT_CLASSIFICATION	2.7425378679462234E-7	TEST
// line 1588	WITHOUT_CLASSIFICATION	0.9999997769124731	WITHOUT_CLASSIFICATION	2.230875269071323E-7	TEST
// line 1618	WITHOUT_CLASSIFICATION	0.9999997895293922	WITHOUT_CLASSIFICATION	2.104706078782986E-7	TEST
// line 1643	WITHOUT_CLASSIFICATION	0.9999997339138097	WITHOUT_CLASSIFICATION	2.6608619039383434E-7	TEST
// line 1669	WITHOUT_CLASSIFICATION	0.9999997653755475	WITHOUT_CLASSIFICATION	2.3462445258140688E-7	TEST
// line 1728	WITHOUT_CLASSIFICATION	0.9999997654589942	WITHOUT_CLASSIFICATION	2.3454100585229776E-7	TEST
// line 1753	WITHOUT_CLASSIFICATION	0.9999997494056785	WITHOUT_CLASSIFICATION	2.505943215723148E-7	TEST
// line 1779	WITHOUT_CLASSIFICATION	0.9999997727458761	WITHOUT_CLASSIFICATION	2.27254123705929E-7	TEST
// line 1794	WITHOUT_CLASSIFICATION	0.9999997747273243	WITHOUT_CLASSIFICATION	2.2527267581226388E-7	TEST
// line 1812	WITHOUT_CLASSIFICATION	0.9999997698937659	WITHOUT_CLASSIFICATION	2.3010623392497277E-7	TEST
// line 1837	WITHOUT_CLASSIFICATION	0.99999974846566	WITHOUT_CLASSIFICATION	2.5153434002279604E-7	TEST
// line 1895	WITHOUT_CLASSIFICATION	0.9999997740712754	WITHOUT_CLASSIFICATION	2.2592872460685502E-7	TEST
// line 1925	WITHOUT_CLASSIFICATION	0.9999997451805942	WITHOUT_CLASSIFICATION	2.548194058064464E-7	TEST
// line 1950	WITHOUT_CLASSIFICATION	0.9999997587312697	WITHOUT_CLASSIFICATION	2.412687302533906E-7	TEST
// line 1992	WITHOUT_CLASSIFICATION	0.9999997451789445	WITHOUT_CLASSIFICATION	2.548210555038735E-7	TEST
// line 2014	WITHOUT_CLASSIFICATION	0.9999997269626283	WITHOUT_CLASSIFICATION	2.730373717853187E-7	TEST
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999993994647332	WITHOUT_CLASSIFICATION	6.005352668275889E-7	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999999870115494	WITHOUT_CLASSIFICATION	1.2988450565942996E-8	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999998408277926	WITHOUT_CLASSIFICATION	1.591722074962046E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999998408277926	WITHOUT_CLASSIFICATION	1.591722074962046E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999998408277926	WITHOUT_CLASSIFICATION	1.591722074962046E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999998408277926	WITHOUT_CLASSIFICATION	1.591722074962046E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999998408277926	WITHOUT_CLASSIFICATION	1.591722074962046E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999998408277926	WITHOUT_CLASSIFICATION	1.591722074962046E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999998408277926	WITHOUT_CLASSIFICATION	1.591722074962046E-7	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999691449025	WITHOUT_CLASSIFICATION	3.085509736563944E-8	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999691449025	WITHOUT_CLASSIFICATION	3.085509736563944E-8	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999691449025	WITHOUT_CLASSIFICATION	3.085509736563944E-8	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999691449025	WITHOUT_CLASSIFICATION	3.085509736563944E-8	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999966726158128	WITHOUT_CLASSIFICATION	3.3273841871440337E-6	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999966726158128	WITHOUT_CLASSIFICATION	3.3273841871440337E-6	TEST
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999998750371244	WITHOUT_CLASSIFICATION	1.2496287558472469E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999895238155	WITHOUT_CLASSIFICATION	1.0476184488396216E-8	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999895238155	WITHOUT_CLASSIFICATION	1.0476184488396216E-8	TEST
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999999433669773	WITHOUT_CLASSIFICATION	5.663302270717428E-8	TEST
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999999568052624	WITHOUT_CLASSIFICATION	4.3194737499105075E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999959838748	WITHOUT_CLASSIFICATION	4.016125193132983E-9	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999959838748	WITHOUT_CLASSIFICATION	4.016125193132983E-9	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999959838748	WITHOUT_CLASSIFICATION	4.016125193132983E-9	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999959838748	WITHOUT_CLASSIFICATION	4.016125193132983E-9	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999959838748	WITHOUT_CLASSIFICATION	4.016125193132983E-9	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999959838748	WITHOUT_CLASSIFICATION	4.016125193132983E-9	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999959838748	WITHOUT_CLASSIFICATION	4.016125193132983E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999969424597	WITHOUT_CLASSIFICATION	3.0575404357716984E-9	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999907309198	WITHOUT_CLASSIFICATION	9.269080121768789E-9	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999999373734076	WITHOUT_CLASSIFICATION	6.262659232513375E-8	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999999373734076	WITHOUT_CLASSIFICATION	6.262659232513375E-8	TEST
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999923281059	WITHOUT_CLASSIFICATION	7.671894151449145E-9	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999997588374298	WITHOUT_CLASSIFICATION	2.4116257023508794E-7	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999997588374298	WITHOUT_CLASSIFICATION	2.4116257023508794E-7	TEST
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999999096423606	WITHOUT_CLASSIFICATION	9.035763931413053E-8	TEST
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9962523299474944	WITHOUT_CLASSIFICATION	0.003747670052505631	TEST
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999999444074342	WITHOUT_CLASSIFICATION	5.5592565819287335E-8	TEST
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999999856126454	WITHOUT_CLASSIFICATION	1.4387354588456222E-8	TEST
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999998684861334	WITHOUT_CLASSIFICATION	1.3151386655300252E-7	TEST
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999998917429259	WITHOUT_CLASSIFICATION	1.0825707407669931E-7	TEST
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.999999362011082	WITHOUT_CLASSIFICATION	6.379889179736875E-7	TEST
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999999872810703	WITHOUT_CLASSIFICATION	1.2718929640461408E-8	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.999975610336594	WITHOUT_CLASSIFICATION	2.4389663406096702E-5	TEST
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9999970876336622	WITHOUT_CLASSIFICATION	2.912366337692711E-6	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9978214205580868	WITHOUT_CLASSIFICATION	0.0021785794419132277	TEST
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999999994838628	WITHOUT_CLASSIFICATION	5.161371500578166E-10	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999999843157626	WITHOUT_CLASSIFICATION	1.5684237339436204E-8	TEST
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999938768648052	WITHOUT_CLASSIFICATION	6.123135194811625E-6	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.999999241173256	WITHOUT_CLASSIFICATION	7.588267440765211E-7	TEST
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999999930089811	WITHOUT_CLASSIFICATION	6.991018876183512E-9	TEST
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999999249935821	WITHOUT_CLASSIFICATION	7.500641785112942E-8	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999975290618687	WITHOUT_CLASSIFICATION	2.470938131363757E-6	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999998797301924	WITHOUT_CLASSIFICATION	1.2026980749201089E-7	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999998797301924	WITHOUT_CLASSIFICATION	1.2026980749201089E-7	TEST
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999996574694937	WITHOUT_CLASSIFICATION	3.425305063559369E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999704492177	WITHOUT_CLASSIFICATION	2.955078226195031E-8	TEST
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999999799991828	WITHOUT_CLASSIFICATION	2.000081720967009E-8	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999865444151652	WITHOUT_CLASSIFICATION	1.3455584834739655E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999885500861659	WITHOUT_CLASSIFICATION	1.1449913834130671E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999885500861659	WITHOUT_CLASSIFICATION	1.1449913834130671E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999885500861659	WITHOUT_CLASSIFICATION	1.1449913834130671E-5	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999999254984667	WITHOUT_CLASSIFICATION	7.45015333356985E-8	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999997370536226	WITHOUT_CLASSIFICATION	2.629463774683385E-7	TEST
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999999861155864	WITHOUT_CLASSIFICATION	1.388441361096574E-8	TEST
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.999999986854666	WITHOUT_CLASSIFICATION	1.3145334068712296E-8	TEST
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999997759675873	WITHOUT_CLASSIFICATION	2.24032412790646E-7	TEST
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.999999981818805	WITHOUT_CLASSIFICATION	1.8181195085580862E-8	TEST
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999999482000743	WITHOUT_CLASSIFICATION	5.179992576642816E-8	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999997991235946	WITHOUT_CLASSIFICATION	2.0087640541005693E-7	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999999998649899	WITHOUT_CLASSIFICATION	1.3501011419965318E-10	TEST
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999998826240545	WITHOUT_CLASSIFICATION	1.1737594559342773E-7	TEST
// reset buffer	WITHOUT_CLASSIFICATION	0.9999999283118506	WITHOUT_CLASSIFICATION	7.168814948539638E-8	TEST
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.999999996028263	WITHOUT_CLASSIFICATION	3.971736992664133E-9	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9912382839216085	WITHOUT_CLASSIFICATION	0.008761716078391484	TEST
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999985199570219	WITHOUT_CLASSIFICATION	1.4800429780463055E-6	TEST
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999994767970307	WITHOUT_CLASSIFICATION	5.232029692232126E-7	TEST
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999433051215767	WITHOUT_CLASSIFICATION	5.669487842330554E-5	TEST
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999999547980107	WITHOUT_CLASSIFICATION	4.5201989193998355E-8	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999761091702218	WITHOUT_CLASSIFICATION	2.3890829778089925E-5	TEST
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999999990132198	WITHOUT_CLASSIFICATION	9.867802236709743E-10	TEST
