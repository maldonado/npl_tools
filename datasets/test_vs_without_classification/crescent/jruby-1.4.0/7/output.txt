// ?R  | boolean | True if file is readable by the real uid/gid of the caller // FIXME: Need to implement an readable_real_p in FileTest	TEST	0.9999701634688074	WITHOUT_CLASSIFICATION	2.9836531192686202E-5	TEST
// TODO make an assert here	TEST	0.9956841716828075	WITHOUT_CLASSIFICATION	0.0043158283171925455	TEST
// TODO add test methods here. The name must begin with 'test'. For example:	TEST	0.8285086071201302	WITHOUT_CLASSIFICATION	0.17149139287986984	TEST
// TODO: Make into an assert once I get things like blockbodynodes to be implicit nil	TEST	0.9994263591400843	WITHOUT_CLASSIFICATION	5.736408599157153E-4	TEST
// if the method is extending something, then we have // to test if the handler is initialized...	TEST	0.9999886560248339	WITHOUT_CLASSIFICATION	1.1343975166099089E-5	TEST
// ?W  | boolean | True if file1 exists and is writable by the real uid/gid // FIXME: Need to implement an writable_real_p in FileTest	TEST	0.9999412042956386	WITHOUT_CLASSIFICATION	5.879570436129805E-5	TEST
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999999915951863	WITHOUT_CLASSIFICATION	8.404813631720095E-9	TEST
// line 335	WITHOUT_CLASSIFICATION	0.9999982314835234	WITHOUT_CLASSIFICATION	1.7685164766798616E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999893399466605	WITHOUT_CLASSIFICATION	1.066005333945787E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999893399466605	WITHOUT_CLASSIFICATION	1.066005333945787E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999656069832941	WITHOUT_CLASSIFICATION	3.439301670587924E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999656069832941	WITHOUT_CLASSIFICATION	3.439301670587924E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999741879485811	WITHOUT_CLASSIFICATION	2.581205141893803E-5	TEST
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999988556580772	WITHOUT_CLASSIFICATION	1.1443419227625662E-6	TEST
// line 362	WITHOUT_CLASSIFICATION	0.9999982167103147	WITHOUT_CLASSIFICATION	1.7832896852182985E-6	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999981704927661	WITHOUT_CLASSIFICATION	1.829507233894992E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999913108905886	WITHOUT_CLASSIFICATION	8.689109411469728E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999913108905886	WITHOUT_CLASSIFICATION	8.689109411469728E-6	TEST
// line 391	WITHOUT_CLASSIFICATION	0.9999982288666036	WITHOUT_CLASSIFICATION	1.77113339638839E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999918399168775	WITHOUT_CLASSIFICATION	8.160083122439936E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999918399168775	WITHOUT_CLASSIFICATION	8.160083122439936E-6	TEST
/* ^D */	WITHOUT_CLASSIFICATION	0.9999840125549883	WITHOUT_CLASSIFICATION	1.598744501181436E-5	TEST
/* ^Z */	WITHOUT_CLASSIFICATION	0.999989205985903	WITHOUT_CLASSIFICATION	1.0794014097043372E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999906760975131	WITHOUT_CLASSIFICATION	9.323902486848298E-6	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999906760975131	WITHOUT_CLASSIFICATION	9.323902486848298E-6	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999906760975131	WITHOUT_CLASSIFICATION	9.323902486848298E-6	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999906760975131	WITHOUT_CLASSIFICATION	9.323902486848298E-6	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999906760975131	WITHOUT_CLASSIFICATION	9.323902486848298E-6	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999906760975131	WITHOUT_CLASSIFICATION	9.323902486848298E-6	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999906760975131	WITHOUT_CLASSIFICATION	9.323902486848298E-6	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999641574150702	WITHOUT_CLASSIFICATION	3.584258492991815E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999641574150702	WITHOUT_CLASSIFICATION	3.584258492991815E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999641574150702	WITHOUT_CLASSIFICATION	3.584258492991815E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999641574150702	WITHOUT_CLASSIFICATION	3.584258492991815E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999641574150702	WITHOUT_CLASSIFICATION	3.584258492991815E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999641574150702	WITHOUT_CLASSIFICATION	3.584258492991815E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999641574150702	WITHOUT_CLASSIFICATION	3.584258492991815E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999726928272661	WITHOUT_CLASSIFICATION	2.7307172733932587E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999726928272661	WITHOUT_CLASSIFICATION	2.7307172733932587E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999726928272661	WITHOUT_CLASSIFICATION	2.7307172733932587E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999726928272661	WITHOUT_CLASSIFICATION	2.7307172733932587E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999726928272661	WITHOUT_CLASSIFICATION	2.7307172733932587E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999726928272661	WITHOUT_CLASSIFICATION	2.7307172733932587E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999909343526326	WITHOUT_CLASSIFICATION	9.065647367352513E-6	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999909343526326	WITHOUT_CLASSIFICATION	9.065647367352513E-6	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999909343526326	WITHOUT_CLASSIFICATION	9.065647367352513E-6	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999909343526326	WITHOUT_CLASSIFICATION	9.065647367352513E-6	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999909343526326	WITHOUT_CLASSIFICATION	9.065647367352513E-6	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999909343526326	WITHOUT_CLASSIFICATION	9.065647367352513E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999914863038006	WITHOUT_CLASSIFICATION	8.513696199360275E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999914863038006	WITHOUT_CLASSIFICATION	8.513696199360275E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999914863038006	WITHOUT_CLASSIFICATION	8.513696199360275E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999914863038006	WITHOUT_CLASSIFICATION	8.513696199360275E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999914863038006	WITHOUT_CLASSIFICATION	8.513696199360275E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999914863038006	WITHOUT_CLASSIFICATION	8.513696199360275E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999914863038006	WITHOUT_CLASSIFICATION	8.513696199360275E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999904119835875	WITHOUT_CLASSIFICATION	9.588016412558113E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999904119835875	WITHOUT_CLASSIFICATION	9.588016412558113E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999904119835875	WITHOUT_CLASSIFICATION	9.588016412558113E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999904119835875	WITHOUT_CLASSIFICATION	9.588016412558113E-6	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9999686264071624	WITHOUT_CLASSIFICATION	3.1373592837591524E-5	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9999686264071624	WITHOUT_CLASSIFICATION	3.1373592837591524E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992409614953	WITHOUT_CLASSIFICATION	7.59038504790596E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992409614953	WITHOUT_CLASSIFICATION	7.59038504790596E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992409614953	WITHOUT_CLASSIFICATION	7.59038504790596E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992409614953	WITHOUT_CLASSIFICATION	7.59038504790596E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992409614953	WITHOUT_CLASSIFICATION	7.59038504790596E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992409614953	WITHOUT_CLASSIFICATION	7.59038504790596E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992409614953	WITHOUT_CLASSIFICATION	7.59038504790596E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992409614953	WITHOUT_CLASSIFICATION	7.59038504790596E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992409614953	WITHOUT_CLASSIFICATION	7.59038504790596E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992409614953	WITHOUT_CLASSIFICATION	7.59038504790596E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992409614953	WITHOUT_CLASSIFICATION	7.59038504790596E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992409614953	WITHOUT_CLASSIFICATION	7.59038504790596E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992409614953	WITHOUT_CLASSIFICATION	7.59038504790596E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992409614953	WITHOUT_CLASSIFICATION	7.59038504790596E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992409614953	WITHOUT_CLASSIFICATION	7.59038504790596E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992409614953	WITHOUT_CLASSIFICATION	7.59038504790596E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992409614953	WITHOUT_CLASSIFICATION	7.59038504790596E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992409614953	WITHOUT_CLASSIFICATION	7.59038504790596E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992409614953	WITHOUT_CLASSIFICATION	7.59038504790596E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992409614953	WITHOUT_CLASSIFICATION	7.59038504790596E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992409614953	WITHOUT_CLASSIFICATION	7.59038504790596E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992409614953	WITHOUT_CLASSIFICATION	7.59038504790596E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992409614953	WITHOUT_CLASSIFICATION	7.59038504790596E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992409614953	WITHOUT_CLASSIFICATION	7.59038504790596E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992409614953	WITHOUT_CLASSIFICATION	7.59038504790596E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992409614953	WITHOUT_CLASSIFICATION	7.59038504790596E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992409614953	WITHOUT_CLASSIFICATION	7.59038504790596E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992409614953	WITHOUT_CLASSIFICATION	7.59038504790596E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992409614953	WITHOUT_CLASSIFICATION	7.59038504790596E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992409614953	WITHOUT_CLASSIFICATION	7.59038504790596E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992409614953	WITHOUT_CLASSIFICATION	7.59038504790596E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992409614953	WITHOUT_CLASSIFICATION	7.59038504790596E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992409614953	WITHOUT_CLASSIFICATION	7.59038504790596E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992409614953	WITHOUT_CLASSIFICATION	7.59038504790596E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992409614953	WITHOUT_CLASSIFICATION	7.59038504790596E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992409614953	WITHOUT_CLASSIFICATION	7.59038504790596E-7	TEST
// return result	WITHOUT_CLASSIFICATION	0.9999995152950448	WITHOUT_CLASSIFICATION	4.847049551193551E-7	TEST
// name	WITHOUT_CLASSIFICATION	0.9999977414073683	WITHOUT_CLASSIFICATION	2.258592631755872E-6	TEST
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999976257345775	WITHOUT_CLASSIFICATION	2.374265422493399E-6	TEST
// Accessor methods.	WITHOUT_CLASSIFICATION	0.999999864489407	WITHOUT_CLASSIFICATION	1.3551059300634704E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999981653924781	WITHOUT_CLASSIFICATION	1.8346075218571898E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999981653924781	WITHOUT_CLASSIFICATION	1.8346075218571898E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999981653924781	WITHOUT_CLASSIFICATION	1.8346075218571898E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999981653924781	WITHOUT_CLASSIFICATION	1.8346075218571898E-6	TEST
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999997633555231	WITHOUT_CLASSIFICATION	2.3664447681383097E-7	TEST
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999998868967322	WITHOUT_CLASSIFICATION	1.1310326779707016E-7	TEST
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999997057294412	WITHOUT_CLASSIFICATION	2.942705588559006E-7	TEST
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999992976796405	WITHOUT_CLASSIFICATION	7.023203594818269E-7	TEST
// Version information:	WITHOUT_CLASSIFICATION	0.9999993585848265	WITHOUT_CLASSIFICATION	6.414151736214385E-7	TEST
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999991679376395	WITHOUT_CLASSIFICATION	8.320623604380726E-7	TEST
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999997767248632	WITHOUT_CLASSIFICATION	2.2327513680248162E-7	TEST
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999999380017549	WITHOUT_CLASSIFICATION	6.199824509487943E-8	TEST
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999999573277577	WITHOUT_CLASSIFICATION	4.2672242397050166E-8	TEST
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.999998721666618	WITHOUT_CLASSIFICATION	1.2783333821391178E-6	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999999617502536	WITHOUT_CLASSIFICATION	3.824974640990669E-8	TEST
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999992406030517	WITHOUT_CLASSIFICATION	7.593969483382435E-7	TEST
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9999764981174802	WITHOUT_CLASSIFICATION	2.3501882519780928E-5	TEST
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999999613496148	WITHOUT_CLASSIFICATION	3.865038527283196E-8	TEST
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999995662642335	WITHOUT_CLASSIFICATION	4.3373576649628916E-7	TEST
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.999988735919121	WITHOUT_CLASSIFICATION	1.1264080878918188E-5	TEST
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.999999943412665	WITHOUT_CLASSIFICATION	5.658733506456177E-8	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999981653924781	WITHOUT_CLASSIFICATION	1.8346075218571898E-6	TEST
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999998634413506	WITHOUT_CLASSIFICATION	1.365586494847265E-7	TEST
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999987387370649	WITHOUT_CLASSIFICATION	1.2612629351179004E-6	TEST
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999991370784158	WITHOUT_CLASSIFICATION	8.629215841965637E-7	TEST
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9999940115786856	WITHOUT_CLASSIFICATION	5.988421314346147E-6	TEST
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9999995955820936	WITHOUT_CLASSIFICATION	4.044179064371892E-7	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.9999995609046818	WITHOUT_CLASSIFICATION	4.3909531818780353E-7	TEST
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999994609328382	WITHOUT_CLASSIFICATION	5.39067161851114E-7	TEST
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999993835066592	WITHOUT_CLASSIFICATION	6.164933408548939E-7	TEST
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999996866587054	WITHOUT_CLASSIFICATION	3.133412945920204E-7	TEST
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999997655929307	WITHOUT_CLASSIFICATION	2.3440706919160603E-7	TEST
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999506769785058	WITHOUT_CLASSIFICATION	4.932302149420834E-5	TEST
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999994363055436	WITHOUT_CLASSIFICATION	5.636944564584493E-7	TEST
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999937501972282	WITHOUT_CLASSIFICATION	6.249802771809088E-6	TEST
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999920621634706	WITHOUT_CLASSIFICATION	7.937836529434556E-6	TEST
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999887334162885	WITHOUT_CLASSIFICATION	1.1266583711488794E-5	TEST
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999976492024687	WITHOUT_CLASSIFICATION	2.3507975313954048E-6	TEST
// RubySignal	WITHOUT_CLASSIFICATION	0.9999994504034373	WITHOUT_CLASSIFICATION	5.495965627436058E-7	TEST
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999998780627203	WITHOUT_CLASSIFICATION	1.219372796702976E-7	TEST
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9955329476729979	WITHOUT_CLASSIFICATION	0.004467052327002095	TEST
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999948312058122	WITHOUT_CLASSIFICATION	5.168794187756471E-6	TEST
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999977876865256	WITHOUT_CLASSIFICATION	2.2123134743596747E-6	TEST
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999981536528326	WITHOUT_CLASSIFICATION	1.8463471672873258E-6	TEST
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999989473285955	WITHOUT_CLASSIFICATION	1.052671404414415E-6	TEST
//io.finish();	WITHOUT_CLASSIFICATION	0.9999746093804497	WITHOUT_CLASSIFICATION	2.5390619550264108E-5	TEST
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9999990132042907	WITHOUT_CLASSIFICATION	9.867957092042394E-7	TEST
// hmm...	WITHOUT_CLASSIFICATION	0.9999961925719754	WITHOUT_CLASSIFICATION	3.8074280245801597E-6	TEST
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.999994234641552	WITHOUT_CLASSIFICATION	5.765358447960753E-6	TEST
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999998894044291	WITHOUT_CLASSIFICATION	1.1059557088453996E-7	TEST
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999998066687233	WITHOUT_CLASSIFICATION	1.9333127651576603E-7	TEST
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999999330765594	WITHOUT_CLASSIFICATION	6.692344056237267E-8	TEST
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999992509525601	WITHOUT_CLASSIFICATION	7.49047439972052E-7	TEST
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999994727634534	WITHOUT_CLASSIFICATION	5.272365465694476E-7	TEST
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999989944520254	WITHOUT_CLASSIFICATION	1.0055479744920396E-6	TEST
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999997520119667	WITHOUT_CLASSIFICATION	2.479880333150413E-7	TEST
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999998090672797	WITHOUT_CLASSIFICATION	1.9093272040279632E-7	TEST
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999993916457035	WITHOUT_CLASSIFICATION	6.083542966124836E-7	TEST
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.999999778721027	WITHOUT_CLASSIFICATION	2.212789731356828E-7	TEST
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.999996704143974	WITHOUT_CLASSIFICATION	3.2958560260048853E-6	TEST
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999989144583967	WITHOUT_CLASSIFICATION	1.08554160325913E-6	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999995907448174	WITHOUT_CLASSIFICATION	4.0925518268785914E-7	TEST
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999998408383955	WITHOUT_CLASSIFICATION	1.591616044322345E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999997945575428	WITHOUT_CLASSIFICATION	2.0544245725599041E-7	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.999996114534869	WITHOUT_CLASSIFICATION	3.8854651309567735E-6	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999968595675053	WITHOUT_CLASSIFICATION	3.1404324947740144E-6	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999968595675053	WITHOUT_CLASSIFICATION	3.1404324947740144E-6	TEST
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9999877862650616	WITHOUT_CLASSIFICATION	1.2213734938419999E-5	TEST
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.999999986801674	WITHOUT_CLASSIFICATION	1.3198326042604305E-8	TEST
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999983338489981	WITHOUT_CLASSIFICATION	1.6661510018691213E-6	TEST
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999998454019109	WITHOUT_CLASSIFICATION	1.5459808902041098E-7	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.999999564601932	WITHOUT_CLASSIFICATION	4.3539806802344415E-7	TEST
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999942223997655	WITHOUT_CLASSIFICATION	5.777600234403969E-6	TEST
// ???	WITHOUT_CLASSIFICATION	0.9999959473917693	WITHOUT_CLASSIFICATION	4.052608230663656E-6	TEST
// PID	WITHOUT_CLASSIFICATION	0.9999955598556037	WITHOUT_CLASSIFICATION	4.44014439627164E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999997945575428	WITHOUT_CLASSIFICATION	2.0544245725599041E-7	TEST
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999996056830109	WITHOUT_CLASSIFICATION	3.9431698903876773E-7	TEST
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.999997418594941	WITHOUT_CLASSIFICATION	2.581405058996808E-6	TEST
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.999999982929145	WITHOUT_CLASSIFICATION	1.7070855003134797E-8	TEST
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999999877469752	WITHOUT_CLASSIFICATION	1.2253024862952574E-8	TEST
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999995273312369	WITHOUT_CLASSIFICATION	4.726687631602073E-7	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999992572221009	WITHOUT_CLASSIFICATION	7.427778990261019E-7	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999992572221009	WITHOUT_CLASSIFICATION	7.427778990261019E-7	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999992572221009	WITHOUT_CLASSIFICATION	7.427778990261019E-7	TEST
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999999055983538	WITHOUT_CLASSIFICATION	9.440164617076998E-8	TEST
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999947602416016	WITHOUT_CLASSIFICATION	5.239758398439299E-6	TEST
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.999999840196973	WITHOUT_CLASSIFICATION	1.5980302701507288E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999996564434158	WITHOUT_CLASSIFICATION	3.435565841014658E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999996564434158	WITHOUT_CLASSIFICATION	3.435565841014658E-7	TEST
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9999717852791946	WITHOUT_CLASSIFICATION	2.821472080538777E-5	TEST
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999995568028582	WITHOUT_CLASSIFICATION	4.4319714184958903E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999996564434158	WITHOUT_CLASSIFICATION	3.435565841014658E-7	TEST
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999994269291722	WITHOUT_CLASSIFICATION	5.730708278438447E-7	TEST
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999995997238226	WITHOUT_CLASSIFICATION	4.00276177347205E-7	TEST
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999999345545297	WITHOUT_CLASSIFICATION	6.544547021641434E-8	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999992932476863	WITHOUT_CLASSIFICATION	7.067523137096681E-7	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999992932476863	WITHOUT_CLASSIFICATION	7.067523137096681E-7	TEST
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999958758152634	WITHOUT_CLASSIFICATION	4.12418473668031E-6	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999975347595734	WITHOUT_CLASSIFICATION	2.4652404265122326E-6	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.999999267553475	WITHOUT_CLASSIFICATION	7.324465249020388E-7	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.999999267553475	WITHOUT_CLASSIFICATION	7.324465249020388E-7	TEST
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.999999925785432	WITHOUT_CLASSIFICATION	7.421456801262217E-8	TEST
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999992471022726	WITHOUT_CLASSIFICATION	7.528977274679874E-7	TEST
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999919623629447	WITHOUT_CLASSIFICATION	8.037637055275963E-6	TEST
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999997219297583	WITHOUT_CLASSIFICATION	2.78070241778986E-7	TEST
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999977154277091	WITHOUT_CLASSIFICATION	2.2845722907852984E-6	TEST
// extras flag	WITHOUT_CLASSIFICATION	0.9999997873075834	WITHOUT_CLASSIFICATION	2.1269241644544553E-7	TEST
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999964056903416	WITHOUT_CLASSIFICATION	3.594309658318874E-6	TEST
// ...nothing	WITHOUT_CLASSIFICATION	0.9999975082013904	WITHOUT_CLASSIFICATION	2.4917986095297335E-6	TEST
// utility method	WITHOUT_CLASSIFICATION	0.9999998382791196	WITHOUT_CLASSIFICATION	1.6172088032943047E-7	TEST
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999995103531967	WITHOUT_CLASSIFICATION	4.896468032845487E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999997945575428	WITHOUT_CLASSIFICATION	2.0544245725599041E-7	TEST
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999891411089117	WITHOUT_CLASSIFICATION	1.0858891088217528E-5	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999997904094485	WITHOUT_CLASSIFICATION	2.0959055154419776E-7	TEST
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999997243391183	WITHOUT_CLASSIFICATION	2.7566088175788393E-7	TEST
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9999963713575795	WITHOUT_CLASSIFICATION	3.62864242063077E-6	TEST
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999999064651316	WITHOUT_CLASSIFICATION	9.353486843552267E-8	TEST
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999935408442954	WITHOUT_CLASSIFICATION	6.459155704539315E-6	TEST
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999966237510396	WITHOUT_CLASSIFICATION	3.3762489603750858E-6	TEST
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999972430438265	WITHOUT_CLASSIFICATION	2.7569561734744644E-6	TEST
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999998280498812	WITHOUT_CLASSIFICATION	1.7195011875390422E-7	TEST
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9999997698032215	WITHOUT_CLASSIFICATION	2.301967785511594E-7	TEST
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999998852210127	WITHOUT_CLASSIFICATION	1.1477898732302133E-7	TEST
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999998569487042	WITHOUT_CLASSIFICATION	1.4305129570870028E-7	TEST
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999993765544278	WITHOUT_CLASSIFICATION	6.234455722216757E-7	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999997981423012	WITHOUT_CLASSIFICATION	2.0185769869978632E-7	TEST
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999693990871037	WITHOUT_CLASSIFICATION	3.060091289626468E-5	TEST
// recheck condition	WITHOUT_CLASSIFICATION	0.9999999415182309	WITHOUT_CLASSIFICATION	5.848176911257483E-8	TEST
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999999814830934	WITHOUT_CLASSIFICATION	1.8516906617239218E-8	TEST
// Construct key services	WITHOUT_CLASSIFICATION	0.9999997042309865	WITHOUT_CLASSIFICATION	2.957690134429456E-7	TEST
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999997845267802	WITHOUT_CLASSIFICATION	2.1547321977456845E-7	TEST
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999999917794432	WITHOUT_CLASSIFICATION	8.220556773415901E-9	TEST
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999998525256601	WITHOUT_CLASSIFICATION	1.4747433986275012E-7	TEST
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.999999972935126	WITHOUT_CLASSIFICATION	2.7064874106967252E-8	TEST
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.99999999186171	WITHOUT_CLASSIFICATION	8.138290047914053E-9	TEST
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999988343984337	WITHOUT_CLASSIFICATION	1.1656015663085856E-6	TEST
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999995516807086	WITHOUT_CLASSIFICATION	4.4831929132280537E-7	TEST
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999998698488022	WITHOUT_CLASSIFICATION	1.3015119769245808E-7	TEST
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999977096687424	WITHOUT_CLASSIFICATION	2.2903312576717485E-6	TEST
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999999369974322	WITHOUT_CLASSIFICATION	6.30025678983843E-8	TEST
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999999690205658	WITHOUT_CLASSIFICATION	3.097943437019771E-8	TEST
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999993353011087	WITHOUT_CLASSIFICATION	6.64698891396708E-7	TEST
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999999689036416	WITHOUT_CLASSIFICATION	3.109635827362674E-8	TEST
// determine spacing	WITHOUT_CLASSIFICATION	0.9999997128053871	WITHOUT_CLASSIFICATION	2.871946129087471E-7	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999777219279679	WITHOUT_CLASSIFICATION	2.2278072032244375E-5	TEST
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999995785037837	WITHOUT_CLASSIFICATION	4.2149621626341004E-7	TEST
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999981307313528	WITHOUT_CLASSIFICATION	1.8692686471751496E-6	TEST
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.999991491251069	WITHOUT_CLASSIFICATION	8.508748930975967E-6	TEST
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999997670100138	WITHOUT_CLASSIFICATION	2.329899862703203E-7	TEST
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999832541950995	WITHOUT_CLASSIFICATION	1.6745804900537046E-5	TEST
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.999999723467712	WITHOUT_CLASSIFICATION	2.765322879607902E-7	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999992771581097	WITHOUT_CLASSIFICATION	7.228418903105005E-7	TEST
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999999777603412	WITHOUT_CLASSIFICATION	2.2239658775975624E-8	TEST
// Default objects	WITHOUT_CLASSIFICATION	0.9999997875250292	WITHOUT_CLASSIFICATION	2.1247497072813136E-7	TEST
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999983993371478	WITHOUT_CLASSIFICATION	1.600662852109109E-6	TEST
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.999999845957762	WITHOUT_CLASSIFICATION	1.5404223808912477E-7	TEST
// Java support	WITHOUT_CLASSIFICATION	0.9999992904796045	WITHOUT_CLASSIFICATION	7.095203956418333E-7	TEST
// Parser stats	WITHOUT_CLASSIFICATION	0.9999996735646984	WITHOUT_CLASSIFICATION	3.2643530147048107E-7	TEST
// Compilation	WITHOUT_CLASSIFICATION	0.9999997365557051	WITHOUT_CLASSIFICATION	2.634442949944462E-7	TEST
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999994596394276	WITHOUT_CLASSIFICATION	5.403605723954669E-7	TEST
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999996625552241	WITHOUT_CLASSIFICATION	3.374447758640219E-7	TEST
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999999771181348	WITHOUT_CLASSIFICATION	2.2881865151092416E-8	TEST
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999999772614454	WITHOUT_CLASSIFICATION	2.27385545710353E-8	TEST
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999998958355804	WITHOUT_CLASSIFICATION	1.0416441967567793E-7	TEST
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999998150758156	WITHOUT_CLASSIFICATION	1.8492418446418422E-7	TEST
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.999999805559313	WITHOUT_CLASSIFICATION	1.9444068710101515E-7	TEST
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.999998547442352	WITHOUT_CLASSIFICATION	1.4525576481030852E-6	TEST
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.99999996331133	WITHOUT_CLASSIFICATION	3.6688669948794316E-8	TEST
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999976051576558	WITHOUT_CLASSIFICATION	2.3948423441509017E-6	TEST
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999999688625539	WITHOUT_CLASSIFICATION	3.113744605390023E-8	TEST
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999997789881029	WITHOUT_CLASSIFICATION	2.2101189719851534E-7	TEST
// default options	WITHOUT_CLASSIFICATION	0.9999998690248042	WITHOUT_CLASSIFICATION	1.3097519585643137E-7	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999967513474146	WITHOUT_CLASSIFICATION	3.2486525853760824E-6	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999967513474146	WITHOUT_CLASSIFICATION	3.2486525853760824E-6	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999981715289762	WITHOUT_CLASSIFICATION	1.8284710238216514E-6	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999981715289762	WITHOUT_CLASSIFICATION	1.8284710238216514E-6	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999983588168242	WITHOUT_CLASSIFICATION	1.641183175765982E-6	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999983588168242	WITHOUT_CLASSIFICATION	1.641183175765982E-6	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.999996455925409	WITHOUT_CLASSIFICATION	3.5440745910366273E-6	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.999996455925409	WITHOUT_CLASSIFICATION	3.5440745910366273E-6	TEST
// long name option	WITHOUT_CLASSIFICATION	0.9999985852376854	WITHOUT_CLASSIFICATION	1.4147623146883105E-6	TEST
// conversion	WITHOUT_CLASSIFICATION	0.9999997294707461	WITHOUT_CLASSIFICATION	2.705292539082094E-7	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999994877196705	WITHOUT_CLASSIFICATION	5.122803295196442E-7	TEST
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999981340693195	WITHOUT_CLASSIFICATION	1.8659306805646147E-6	TEST
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999997510343371	WITHOUT_CLASSIFICATION	2.489656628793479E-7	TEST
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999914120392304	WITHOUT_CLASSIFICATION	8.587960769696763E-6	TEST
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999942951917419	WITHOUT_CLASSIFICATION	5.704808258170347E-6	TEST
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999998555464706	WITHOUT_CLASSIFICATION	1.444535294219604E-7	TEST
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999998477491843	WITHOUT_CLASSIFICATION	1.5225081579497755E-7	TEST
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999990549662795	WITHOUT_CLASSIFICATION	9.450337205167649E-7	TEST
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999998367855462	WITHOUT_CLASSIFICATION	1.632144539186267E-7	TEST
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999996052730379	WITHOUT_CLASSIFICATION	3.947269620232087E-7	TEST
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999978087048697	WITHOUT_CLASSIFICATION	2.1912951303339804E-6	TEST
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999994216891452	WITHOUT_CLASSIFICATION	5.78310854738552E-7	TEST
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999998523015959	WITHOUT_CLASSIFICATION	1.4769840404484585E-7	TEST
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999961788978262	WITHOUT_CLASSIFICATION	3.821102173756077E-6	TEST
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999999983695417	WITHOUT_CLASSIFICATION	1.6304582842552873E-9	TEST
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999994981470083	WITHOUT_CLASSIFICATION	5.018529917474353E-7	TEST
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999902722994594	WITHOUT_CLASSIFICATION	9.727700540649978E-6	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999933989395898	WITHOUT_CLASSIFICATION	6.60106041024953E-6	TEST
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999997414968671	WITHOUT_CLASSIFICATION	2.5850313283192624E-7	TEST
// Illegal combination	WITHOUT_CLASSIFICATION	0.99999890350892	WITHOUT_CLASSIFICATION	1.0964910800229318E-6	TEST
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999987720457163	WITHOUT_CLASSIFICATION	1.2279542837072941E-6	TEST
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999981444734463	WITHOUT_CLASSIFICATION	1.8555265537260687E-6	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.999998609669691	WITHOUT_CLASSIFICATION	1.3903303089600395E-6	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999986505803888	WITHOUT_CLASSIFICATION	1.3494196112261396E-6	TEST
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999982686425467	WITHOUT_CLASSIFICATION	1.7313574532135228E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999991776786451	WITHOUT_CLASSIFICATION	8.223213548987537E-7	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999991776786451	WITHOUT_CLASSIFICATION	8.223213548987537E-7	TEST
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.999998299051214	WITHOUT_CLASSIFICATION	1.700948786031339E-6	TEST
// string given	WITHOUT_CLASSIFICATION	0.999998903076773	WITHOUT_CLASSIFICATION	1.096923227018926E-6	TEST
// hash given	WITHOUT_CLASSIFICATION	0.999996742574012	WITHOUT_CLASSIFICATION	3.2574259879795265E-6	TEST
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999968659142165	WITHOUT_CLASSIFICATION	3.1340857833723785E-6	TEST
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999983351799823	WITHOUT_CLASSIFICATION	1.6648200176829265E-6	TEST
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999965959044972	WITHOUT_CLASSIFICATION	3.4040955029486046E-6	TEST
// nothing	WITHOUT_CLASSIFICATION	0.9999975274957918	WITHOUT_CLASSIFICATION	2.472504208045274E-6	TEST
// nothing	WITHOUT_CLASSIFICATION	0.9999975274957918	WITHOUT_CLASSIFICATION	2.472504208045274E-6	TEST
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999989087664203	WITHOUT_CLASSIFICATION	1.0912335797107457E-6	TEST
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9971980685568018	WITHOUT_CLASSIFICATION	0.002801931443198096	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999982686831448	WITHOUT_CLASSIFICATION	1.731316855196226E-6	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999982686831448	WITHOUT_CLASSIFICATION	1.731316855196226E-6	TEST
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999998028024102	WITHOUT_CLASSIFICATION	1.9719758977350277E-7	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999979623980136	WITHOUT_CLASSIFICATION	2.0376019862692214E-6	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999979623980136	WITHOUT_CLASSIFICATION	2.0376019862692214E-6	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999959007299162	WITHOUT_CLASSIFICATION	4.0992700839068655E-6	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999959007299162	WITHOUT_CLASSIFICATION	4.0992700839068655E-6	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999955549701094	WITHOUT_CLASSIFICATION	4.445029890654253E-6	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999955549701094	WITHOUT_CLASSIFICATION	4.445029890654253E-6	TEST
// QTRUE	WITHOUT_CLASSIFICATION	0.9999965138824697	WITHOUT_CLASSIFICATION	3.4861175303271506E-6	TEST
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999986713799794	WITHOUT_CLASSIFICATION	1.3286200205138325E-6	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.999999868497464	WITHOUT_CLASSIFICATION	1.3150253601946394E-7	TEST
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999996665604999	WITHOUT_CLASSIFICATION	3.334395000623804E-7	TEST
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999999677813519	WITHOUT_CLASSIFICATION	3.221864800995115E-8	TEST
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999999263345924	WITHOUT_CLASSIFICATION	7.366540755926927E-8	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999996824915397	WITHOUT_CLASSIFICATION	3.1750846031010137E-7	TEST
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999999041022849	WITHOUT_CLASSIFICATION	9.589771512452139E-8	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999996824915397	WITHOUT_CLASSIFICATION	3.1750846031010137E-7	TEST
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.999497270013308	WITHOUT_CLASSIFICATION	5.027299866919738E-4	TEST
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.999998829328095	WITHOUT_CLASSIFICATION	1.1706719049910519E-6	TEST
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999995374292424	WITHOUT_CLASSIFICATION	4.6257075763387995E-7	TEST
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999965738807561	WITHOUT_CLASSIFICATION	3.426119243815952E-6	TEST
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999996596774536	WITHOUT_CLASSIFICATION	3.4032254646178965E-7	TEST
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999995230717682	WITHOUT_CLASSIFICATION	4.769282317403333E-7	TEST
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.999996885462704	WITHOUT_CLASSIFICATION	3.1145372960475153E-6	TEST
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999931599986879	WITHOUT_CLASSIFICATION	6.840001312192588E-6	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999871612195	WITHOUT_CLASSIFICATION	1.2838780601210196E-8	TEST
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999999087851457	WITHOUT_CLASSIFICATION	9.121485437140746E-8	TEST
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.999999544503422	WITHOUT_CLASSIFICATION	4.554965780674519E-7	TEST
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999861141646823	WITHOUT_CLASSIFICATION	1.3885835317755732E-5	TEST
// file not given	WITHOUT_CLASSIFICATION	0.9999994048237925	WITHOUT_CLASSIFICATION	5.951762075672993E-7	TEST
// string to eval	WITHOUT_CLASSIFICATION	0.9999998015276774	WITHOUT_CLASSIFICATION	1.9847232260394842E-7	TEST
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999977644126476	WITHOUT_CLASSIFICATION	2.2355873524004858E-6	TEST
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999998785519768	WITHOUT_CLASSIFICATION	1.2144802309750182E-7	TEST
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999982704302848	WITHOUT_CLASSIFICATION	1.729569715181723E-6	TEST
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.999999746251076	WITHOUT_CLASSIFICATION	2.537489240440064E-7	TEST
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9999986414155273	WITHOUT_CLASSIFICATION	1.3585844727265836E-6	TEST
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.999993519267223	WITHOUT_CLASSIFICATION	6.480732776982548E-6	TEST
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999988704337391	WITHOUT_CLASSIFICATION	1.129566260799325E-6	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999990649524092	WITHOUT_CLASSIFICATION	9.350475907416142E-7	TEST
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.999998795244058	WITHOUT_CLASSIFICATION	1.204755942104774E-6	TEST
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999991774154522	WITHOUT_CLASSIFICATION	8.225845477271919E-7	TEST
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.999998375142123	WITHOUT_CLASSIFICATION	1.624857876958464E-6	TEST
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999998400179699	WITHOUT_CLASSIFICATION	1.5998203016658222E-7	TEST
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999996741029994	WITHOUT_CLASSIFICATION	3.2589700063479015E-7	TEST
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999991850647708	WITHOUT_CLASSIFICATION	8.149352293130276E-7	TEST
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999998714176767	WITHOUT_CLASSIFICATION	1.2858232333717215E-7	TEST
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999997357293161	WITHOUT_CLASSIFICATION	2.642706839612184E-7	TEST
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.999999666642912	WITHOUT_CLASSIFICATION	3.3335708811344083E-7	TEST
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999999751551834	WITHOUT_CLASSIFICATION	2.4844816647592997E-8	TEST
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999999281374086	WITHOUT_CLASSIFICATION	7.186259141173855E-8	TEST
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999991964360798	WITHOUT_CLASSIFICATION	8.035639201960412E-7	TEST
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999997106569712	WITHOUT_CLASSIFICATION	2.8934302873199147E-7	TEST
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999990541854507	WITHOUT_CLASSIFICATION	9.45814549218462E-7	TEST
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999992907017873	WITHOUT_CLASSIFICATION	7.092982128199675E-7	TEST
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999999506102099	WITHOUT_CLASSIFICATION	4.938979017947643E-8	TEST
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999999834591025	WITHOUT_CLASSIFICATION	1.6540897559989515E-8	TEST
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999995920387115	WITHOUT_CLASSIFICATION	4.0796128862326036E-7	TEST
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999997352321405	WITHOUT_CLASSIFICATION	2.6476785950300556E-7	TEST
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.999999724299597	WITHOUT_CLASSIFICATION	2.757004029515255E-7	TEST
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999995878533033	WITHOUT_CLASSIFICATION	4.1214669659902543E-7	TEST
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999997093139887	WITHOUT_CLASSIFICATION	2.906860112366444E-7	TEST
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999999603968305	WITHOUT_CLASSIFICATION	3.960316947591138E-8	TEST
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999999518742803	WITHOUT_CLASSIFICATION	4.812571964189632E-8	TEST
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999992457609642	WITHOUT_CLASSIFICATION	7.542390358554277E-7	TEST
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999999721708004	WITHOUT_CLASSIFICATION	2.7829199578458054E-8	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999998052303326	WITHOUT_CLASSIFICATION	1.947696672790068E-7	TEST
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999993076170816	WITHOUT_CLASSIFICATION	6.923829183311468E-7	TEST
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999999218600358	WITHOUT_CLASSIFICATION	7.813996425112834E-8	TEST
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999999847600527	WITHOUT_CLASSIFICATION	1.5239947237089296E-8	TEST
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999769336241884	WITHOUT_CLASSIFICATION	2.306637581166001E-5	TEST
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999997443044233	WITHOUT_CLASSIFICATION	2.5569557667703633E-7	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999999166160767	WITHOUT_CLASSIFICATION	8.338392333187035E-8	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999999166160767	WITHOUT_CLASSIFICATION	8.338392333187035E-8	TEST
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999974620381166	WITHOUT_CLASSIFICATION	2.5379618834090305E-6	TEST
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999964396101956	WITHOUT_CLASSIFICATION	3.560389804331246E-6	TEST
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999996844392158	WITHOUT_CLASSIFICATION	3.1556078410054783E-7	TEST
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999999580879488	WITHOUT_CLASSIFICATION	4.191205111414262E-8	TEST
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999997632832017	WITHOUT_CLASSIFICATION	2.367167982193322E-7	TEST
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999977881483347	WITHOUT_CLASSIFICATION	2.211851665254288E-6	TEST
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999952400524945	WITHOUT_CLASSIFICATION	4.75994750546259E-6	TEST
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999999912697116	WITHOUT_CLASSIFICATION	8.730288419826233E-9	TEST
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999992426913008	WITHOUT_CLASSIFICATION	7.573086991168351E-7	TEST
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999975541843487	WITHOUT_CLASSIFICATION	2.4458156512771797E-6	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999999194115831	WITHOUT_CLASSIFICATION	8.058841687339065E-8	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999999194115831	WITHOUT_CLASSIFICATION	8.058841687339065E-8	TEST
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9999978580942336	WITHOUT_CLASSIFICATION	2.141905766300848E-6	TEST
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999999372050659	WITHOUT_CLASSIFICATION	6.279493416601564E-8	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9997160991345054	WITHOUT_CLASSIFICATION	2.8390086549458E-4	TEST
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999999100720153	WITHOUT_CLASSIFICATION	8.992798481895505E-8	TEST
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999997247240687	WITHOUT_CLASSIFICATION	2.752759312989756E-7	TEST
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999999237487075	WITHOUT_CLASSIFICATION	7.625129253747899E-8	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999998049455049	WITHOUT_CLASSIFICATION	1.9505449511221407E-7	TEST
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999994766567997	WITHOUT_CLASSIFICATION	5.233432003332636E-7	TEST
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999997011922674	WITHOUT_CLASSIFICATION	2.9880773250225215E-7	TEST
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999996537190551	WITHOUT_CLASSIFICATION	3.462809448620125E-7	TEST
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999999076045147	WITHOUT_CLASSIFICATION	9.239548519424308E-8	TEST
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999983302305175	WITHOUT_CLASSIFICATION	1.6697694825155031E-6	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999997935776337	WITHOUT_CLASSIFICATION	2.0642236623838887E-7	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999997935776337	WITHOUT_CLASSIFICATION	2.0642236623838887E-7	TEST
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999999347131344	WITHOUT_CLASSIFICATION	6.528686559248619E-8	TEST
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999996019222029	WITHOUT_CLASSIFICATION	3.9807779695459435E-7	TEST
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999996605959234	WITHOUT_CLASSIFICATION	3.3940407668117913E-7	TEST
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999778456533486	WITHOUT_CLASSIFICATION	2.2154346651469518E-5	TEST
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999993785480508	WITHOUT_CLASSIFICATION	6.214519492604467E-7	TEST
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999994908968518	WITHOUT_CLASSIFICATION	5.091031481319789E-7	TEST
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999994889306875	WITHOUT_CLASSIFICATION	5.110693124754535E-7	TEST
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.999999231027767	WITHOUT_CLASSIFICATION	7.689722329849584E-7	TEST
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999987968482453	WITHOUT_CLASSIFICATION	1.203151754645791E-6	TEST
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999998360873605	WITHOUT_CLASSIFICATION	1.639126394179903E-7	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9997160991345054	WITHOUT_CLASSIFICATION	2.8390086549458E-4	TEST
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999995758089412	WITHOUT_CLASSIFICATION	4.241910587270167E-7	TEST
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999976118366825	WITHOUT_CLASSIFICATION	2.3881633175901995E-6	TEST
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999979266166357	WITHOUT_CLASSIFICATION	2.0733833643526504E-6	TEST
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999999409849931	WITHOUT_CLASSIFICATION	5.901500681931497E-8	TEST
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.999999871978733	WITHOUT_CLASSIFICATION	1.2802126701526265E-7	TEST
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999999337171738	WITHOUT_CLASSIFICATION	6.628282623769146E-8	TEST
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999988938893988	WITHOUT_CLASSIFICATION	1.1061106012281497E-6	TEST
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999995218445343	WITHOUT_CLASSIFICATION	4.781554656404374E-7	TEST
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999999649391237	WITHOUT_CLASSIFICATION	3.506087623594924E-8	TEST
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999998226668888	WITHOUT_CLASSIFICATION	1.7733311115595274E-7	TEST
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999996967003861	WITHOUT_CLASSIFICATION	3.032996138351784E-7	TEST
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999999607666352	WITHOUT_CLASSIFICATION	3.92333648373882E-8	TEST
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999995933040412	WITHOUT_CLASSIFICATION	4.066959587864431E-7	TEST
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999981841827367	WITHOUT_CLASSIFICATION	1.815817263301054E-6	TEST
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999944469222067	WITHOUT_CLASSIFICATION	5.553077793260084E-6	TEST
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999998307957169	WITHOUT_CLASSIFICATION	1.6920428321879513E-7	TEST
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999978652800415	WITHOUT_CLASSIFICATION	2.1347199584149062E-6	TEST
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999976818347822	WITHOUT_CLASSIFICATION	2.3181652177904435E-6	TEST
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999980378224799	WITHOUT_CLASSIFICATION	1.9621775201483093E-6	TEST
// rename is successful	WITHOUT_CLASSIFICATION	0.9999981443076649	WITHOUT_CLASSIFICATION	1.8556923350687574E-6	TEST
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999998614581999	WITHOUT_CLASSIFICATION	1.3854180017048795E-7	TEST
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999970072008223	WITHOUT_CLASSIFICATION	2.992799177608886E-6	TEST
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999994971698731	WITHOUT_CLASSIFICATION	5.028301267904162E-7	TEST
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999994711044556	WITHOUT_CLASSIFICATION	5.288955444374643E-7	TEST
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999998103178847	WITHOUT_CLASSIFICATION	1.896821154476957E-7	TEST
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999996744466789	WITHOUT_CLASSIFICATION	3.255533210276971E-7	TEST
// 16 ?	WITHOUT_CLASSIFICATION	0.9999954707703343	WITHOUT_CLASSIFICATION	4.529229665661322E-6	TEST
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999997937596455	WITHOUT_CLASSIFICATION	2.062403544524199E-7	TEST
// size + 1;	WITHOUT_CLASSIFICATION	0.9999991727755685	WITHOUT_CLASSIFICATION	8.27224431583078E-7	TEST
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999996972850012	WITHOUT_CLASSIFICATION	3.0271499886242344E-7	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999888224992903	WITHOUT_CLASSIFICATION	1.1177500709561173E-5	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999888224992903	WITHOUT_CLASSIFICATION	1.1177500709561173E-5	TEST
// put implementation	WITHOUT_CLASSIFICATION	0.9999990312563374	WITHOUT_CLASSIFICATION	9.687436625818391E-7	TEST
// get implementation	WITHOUT_CLASSIFICATION	0.9999991813044846	WITHOUT_CLASSIFICATION	8.186955153998545E-7	TEST
// specialized for value	WITHOUT_CLASSIFICATION	0.9999997305886992	WITHOUT_CLASSIFICATION	2.6941130086560894E-7	TEST
// delete implementation	WITHOUT_CLASSIFICATION	0.9999991547114296	WITHOUT_CLASSIFICATION	8.452885703729021E-7	TEST
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999919474426134	WITHOUT_CLASSIFICATION	8.052557386489144E-6	TEST
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.999998909662814	WITHOUT_CLASSIFICATION	1.0903371859223446E-6	TEST
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999997945575428	WITHOUT_CLASSIFICATION	2.0544245725599041E-7	TEST
// update the hash value	WITHOUT_CLASSIFICATION	0.9999963998693316	WITHOUT_CLASSIFICATION	3.6001306684606385E-6	TEST
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999978887802964	WITHOUT_CLASSIFICATION	2.1112197036398006E-6	TEST
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999991680572793	WITHOUT_CLASSIFICATION	8.319427207650033E-7	TEST
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999999569996117	WITHOUT_CLASSIFICATION	4.300038829366065E-8	TEST
// remain where we are	WITHOUT_CLASSIFICATION	0.9999994192507854	WITHOUT_CLASSIFICATION	5.807492145026061E-7	TEST
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999961774637751	WITHOUT_CLASSIFICATION	3.82253622483065E-6	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999992771581097	WITHOUT_CLASSIFICATION	7.228418903105005E-7	TEST
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999999636653685	WITHOUT_CLASSIFICATION	3.633463146969142E-8	TEST
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999699990780074	WITHOUT_CLASSIFICATION	3.0000921992596545E-5	TEST
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999999953179636	WITHOUT_CLASSIFICATION	4.682036427165001E-9	TEST
// first try as directory	WITHOUT_CLASSIFICATION	0.9999997685093868	WITHOUT_CLASSIFICATION	2.314906130941143E-7	TEST
// next as regular file	WITHOUT_CLASSIFICATION	0.9999999555539384	WITHOUT_CLASSIFICATION	4.444606161317249E-8	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999990742647288	WITHOUT_CLASSIFICATION	9.25735271296653E-7	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999963178352739	WITHOUT_CLASSIFICATION	3.6821647261150985E-6	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999963178352739	WITHOUT_CLASSIFICATION	3.6821647261150985E-6	TEST
// Stream-based	WITHOUT_CLASSIFICATION	0.9999997327881547	WITHOUT_CLASSIFICATION	2.672118452630592E-7	TEST
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999999741405113	WITHOUT_CLASSIFICATION	2.5859488682219192E-8	TEST
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999985475703045	WITHOUT_CLASSIFICATION	1.4524296954421335E-6	TEST
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999990949045806	WITHOUT_CLASSIFICATION	9.050954194567466E-7	TEST
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.999999627225622	WITHOUT_CLASSIFICATION	3.7277437799016073E-7	TEST
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999998609918017	WITHOUT_CLASSIFICATION	1.39008198304617E-7	TEST
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999999846431439	WITHOUT_CLASSIFICATION	1.5356856139183147E-8	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.99999990611184	WITHOUT_CLASSIFICATION	9.388815999027654E-8	TEST
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999985434966856	WITHOUT_CLASSIFICATION	1.456503314338913E-6	TEST
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999993589992102	WITHOUT_CLASSIFICATION	6.410007898333728E-7	TEST
// re-register	WITHOUT_CLASSIFICATION	0.9999986492502623	WITHOUT_CLASSIFICATION	1.3507497377840662E-6	TEST
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.999994551717916	WITHOUT_CLASSIFICATION	5.44828208404137E-6	TEST
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999898543531638	WITHOUT_CLASSIFICATION	1.0145646836252899E-5	TEST
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999990561650772	WITHOUT_CLASSIFICATION	9.438349227143396E-7	TEST
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999995601366998	WITHOUT_CLASSIFICATION	4.3986330019771933E-7	TEST
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999923024447702	WITHOUT_CLASSIFICATION	7.697555229793195E-6	TEST
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999995298439129	WITHOUT_CLASSIFICATION	4.701560870572554E-7	TEST
// use original modes	WITHOUT_CLASSIFICATION	0.9999991713038088	WITHOUT_CLASSIFICATION	8.286961912781964E-7	TEST
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999999265941619	WITHOUT_CLASSIFICATION	7.340583799314476E-8	TEST
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999993808209933	WITHOUT_CLASSIFICATION	6.19179006783832E-7	TEST
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999995708694477	WITHOUT_CLASSIFICATION	4.2913055229763565E-7	TEST
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999981143954414	WITHOUT_CLASSIFICATION	1.8856045586042244E-6	TEST
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999997627907222	WITHOUT_CLASSIFICATION	2.37209277684323E-7	TEST
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999678706206614	WITHOUT_CLASSIFICATION	3.212937933860586E-5	TEST
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999998839597967	WITHOUT_CLASSIFICATION	1.1604020338630496E-7	TEST
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999999263007608	WITHOUT_CLASSIFICATION	7.369923912265443E-8	TEST
//Everything written	WITHOUT_CLASSIFICATION	0.9999891908222538	WITHOUT_CLASSIFICATION	1.0809177746253005E-5	TEST
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999996586951581	WITHOUT_CLASSIFICATION	3.4130484191358703E-7	TEST
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999995654875545	WITHOUT_CLASSIFICATION	4.345124454852383E-7	TEST
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9999895793125101	WITHOUT_CLASSIFICATION	1.0420687489912365E-5	TEST
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999997617999478	WITHOUT_CLASSIFICATION	2.3820005218666365E-7	TEST
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999987444268738	WITHOUT_CLASSIFICATION	1.255573126275244E-6	TEST
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999996623328516	WITHOUT_CLASSIFICATION	3.376671483895171E-7	TEST
// hmmmm	WITHOUT_CLASSIFICATION	0.9999943205704266	WITHOUT_CLASSIFICATION	5.679429573416923E-6	TEST
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999980649420165	WITHOUT_CLASSIFICATION	1.9350579835297743E-6	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999998195517567	WITHOUT_CLASSIFICATION	1.8044824338921022E-7	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999999489224988	WITHOUT_CLASSIFICATION	5.1077501092215536E-8	TEST
// Length to read	WITHOUT_CLASSIFICATION	0.9999997647054253	WITHOUT_CLASSIFICATION	2.3529457477133158E-7	TEST
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999999378594874	WITHOUT_CLASSIFICATION	6.214051263299901E-8	TEST
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999996328097845	WITHOUT_CLASSIFICATION	3.671902153649719E-7	TEST
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999997254693571	WITHOUT_CLASSIFICATION	2.7453064284299923E-7	TEST
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999994629441209	WITHOUT_CLASSIFICATION	5.370558792152598E-7	TEST
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999993525591009	WITHOUT_CLASSIFICATION	6.474408991229686E-7	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999984639823037	WITHOUT_CLASSIFICATION	1.5360176963455753E-6	TEST
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999987722675753	WITHOUT_CLASSIFICATION	1.2277324247579427E-6	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999984639823037	WITHOUT_CLASSIFICATION	1.5360176963455753E-6	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999999748793064	WITHOUT_CLASSIFICATION	2.512069365070108E-8	TEST
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9999924755673489	WITHOUT_CLASSIFICATION	7.524432651016736E-6	TEST
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999995617972731	WITHOUT_CLASSIFICATION	4.3820272687212665E-7	TEST
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.994920765414172	WITHOUT_CLASSIFICATION	0.005079234585828046	TEST
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999972740236956	WITHOUT_CLASSIFICATION	2.725976304330224E-6	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999994995926386	WITHOUT_CLASSIFICATION	5.004073614200288E-7	TEST
// write	WITHOUT_CLASSIFICATION	0.9999994236265183	WITHOUT_CLASSIFICATION	5.763734816224475E-7	TEST
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999958343113392	WITHOUT_CLASSIFICATION	4.165688660776158E-6	TEST
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999999768766631	WITHOUT_CLASSIFICATION	2.312333696500957E-8	TEST
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9999856641336305	WITHOUT_CLASSIFICATION	1.4335866369458326E-5	TEST
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9999991211248592	WITHOUT_CLASSIFICATION	8.78875140699502E-7	TEST
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999960182167107	WITHOUT_CLASSIFICATION	3.981783289304735E-6	TEST
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9999997107006361	WITHOUT_CLASSIFICATION	2.892993639293009E-7	TEST
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999999394760121	WITHOUT_CLASSIFICATION	6.052398801768855E-8	TEST
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9999658759247868	WITHOUT_CLASSIFICATION	3.4124075213319724E-5	TEST
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9995044414014873	WITHOUT_CLASSIFICATION	4.955585985126261E-4	TEST
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999999625947672	WITHOUT_CLASSIFICATION	3.7405232712085926E-8	TEST
// The class of this object	WITHOUT_CLASSIFICATION	0.9999980437729511	WITHOUT_CLASSIFICATION	1.956227048923055E-6	TEST
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999933269246829	WITHOUT_CLASSIFICATION	6.673075317040575E-6	TEST
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999977455627184	WITHOUT_CLASSIFICATION	2.254437281615245E-6	TEST
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999997321274565	WITHOUT_CLASSIFICATION	2.678725435173648E-7	TEST
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999995277535777	WITHOUT_CLASSIFICATION	4.722464222407106E-7	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999969772693542	WITHOUT_CLASSIFICATION	3.022730645824862E-6	TEST
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999995810281685	WITHOUT_CLASSIFICATION	4.189718314476392E-7	TEST
// for interface impls	WITHOUT_CLASSIFICATION	0.9999995342825031	WITHOUT_CLASSIFICATION	4.6571749692471104E-7	TEST
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999992266622572	WITHOUT_CLASSIFICATION	7.733377428315354E-7	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999997936619777	WITHOUT_CLASSIFICATION	2.0633802230801205E-7	TEST
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999997825055074	WITHOUT_CLASSIFICATION	2.1749449256657355E-7	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999999617502536	WITHOUT_CLASSIFICATION	3.824974640990669E-8	TEST
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999996566291398	WITHOUT_CLASSIFICATION	3.4337086013434523E-7	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999918706475837	WITHOUT_CLASSIFICATION	8.129352416352612E-6	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999833983733517	WITHOUT_CLASSIFICATION	1.6601626648349973E-5	TEST
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999896155553586	WITHOUT_CLASSIFICATION	1.0384444641397741E-5	TEST
// Struct methods	WITHOUT_CLASSIFICATION	0.9999999339271571	WITHOUT_CLASSIFICATION	6.607284279868815E-8	TEST
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.99999990820332	WITHOUT_CLASSIFICATION	9.179668010009731E-8	TEST
// define access methods.	WITHOUT_CLASSIFICATION	0.9999998049205706	WITHOUT_CLASSIFICATION	1.9507942932316802E-7	TEST
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999995515484706	WITHOUT_CLASSIFICATION	4.4845152944005925E-7	TEST
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999298892788	WITHOUT_CLASSIFICATION	7.011072119634766E-8	TEST
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.999999066110869	WITHOUT_CLASSIFICATION	9.338891309746257E-7	TEST
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999936677942426	WITHOUT_CLASSIFICATION	6.332205757343367E-6	TEST
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999998869695348	WITHOUT_CLASSIFICATION	1.1303046513265811E-7	TEST
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999996017138278	WITHOUT_CLASSIFICATION	3.982861721133552E-7	TEST
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999995945868251	WITHOUT_CLASSIFICATION	4.054131749073919E-7	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999988965005994	WITHOUT_CLASSIFICATION	1.1034994006346128E-6	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999988965005994	WITHOUT_CLASSIFICATION	1.1034994006346128E-6	TEST
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999938389611522	WITHOUT_CLASSIFICATION	6.1610388477129535E-6	TEST
// superClass may be null.	WITHOUT_CLASSIFICATION	0.999998524946398	WITHOUT_CLASSIFICATION	1.4750536020286283E-6	TEST
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999997811145165	WITHOUT_CLASSIFICATION	2.1888548361051366E-7	TEST
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999988889518208	WITHOUT_CLASSIFICATION	1.1110481792021885E-6	TEST
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999999506786081	WITHOUT_CLASSIFICATION	4.9321391773707956E-8	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999996974206001	WITHOUT_CLASSIFICATION	3.0257939993781565E-7	TEST
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999995945470685	WITHOUT_CLASSIFICATION	4.0545293151727525E-7	TEST
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999992736951175	WITHOUT_CLASSIFICATION	7.263048824800015E-7	TEST
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999980545832537	WITHOUT_CLASSIFICATION	1.945416746170961E-6	TEST
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.999999973668578	WITHOUT_CLASSIFICATION	2.633142200835E-8	TEST
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.999999857942501	WITHOUT_CLASSIFICATION	1.4205749892199464E-7	TEST
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999999734608697	WITHOUT_CLASSIFICATION	2.6539130382972655E-8	TEST
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999995489060735	WITHOUT_CLASSIFICATION	4.510939265234412E-7	TEST
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.99999781388111	WITHOUT_CLASSIFICATION	2.1861188900985614E-6	TEST
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999998455223289	WITHOUT_CLASSIFICATION	1.544776710638285E-7	TEST
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999995184878888	WITHOUT_CLASSIFICATION	4.815121111505817E-7	TEST
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999997860223114	WITHOUT_CLASSIFICATION	2.139776886318465E-7	TEST
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999998682895884	WITHOUT_CLASSIFICATION	1.3171041157349482E-7	TEST
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999995578989525	WITHOUT_CLASSIFICATION	4.421010475999966E-7	TEST
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999996660634655	WITHOUT_CLASSIFICATION	3.339365345771286E-7	TEST
//FIXME warning	WITHOUT_CLASSIFICATION	0.9999604360528084	WITHOUT_CLASSIFICATION	3.956394719157784E-5	TEST
// FIXME warning	WITHOUT_CLASSIFICATION	0.9999884447769781	WITHOUT_CLASSIFICATION	1.155522302181877E-5	TEST
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9999999490170097	WITHOUT_CLASSIFICATION	5.0982990260924864E-8	TEST
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999999860175407	WITHOUT_CLASSIFICATION	1.3982459253500298E-8	TEST
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999929126640695	WITHOUT_CLASSIFICATION	7.087335930398368E-6	TEST
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999437779965	WITHOUT_CLASSIFICATION	5.62220034722521E-8	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999994539659911	WITHOUT_CLASSIFICATION	5.460340089589228E-7	TEST
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999988152624308	WITHOUT_CLASSIFICATION	1.1847375692028395E-6	TEST
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999995129945616	WITHOUT_CLASSIFICATION	4.870054384906661E-7	TEST
/* Module class methods */	WITHOUT_CLASSIFICATION	0.999999441863214	WITHOUT_CLASSIFICATION	5.581367859695944E-7	TEST
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999999560762891	WITHOUT_CLASSIFICATION	4.392371102410108E-8	TEST
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999999439401286	WITHOUT_CLASSIFICATION	5.6059871312741765E-8	TEST
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999999850550152	WITHOUT_CLASSIFICATION	1.4944984749844096E-8	TEST
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999999668920229	WITHOUT_CLASSIFICATION	3.3107977155750476E-8	TEST
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999997315688377	WITHOUT_CLASSIFICATION	2.6843116227177175E-7	TEST
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999999920230473	WITHOUT_CLASSIFICATION	7.976952770629767E-9	TEST
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999936400790005	WITHOUT_CLASSIFICATION	6.359920999474517E-6	TEST
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999990071812529	WITHOUT_CLASSIFICATION	9.928187471007336E-6	TEST
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999978786456618	WITHOUT_CLASSIFICATION	2.121354338197722E-6	TEST
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999944351799144	WITHOUT_CLASSIFICATION	5.564820085666868E-6	TEST
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999960529404398	WITHOUT_CLASSIFICATION	3.9470595602703845E-6	TEST
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9999987164273971	WITHOUT_CLASSIFICATION	1.2835726029490195E-6	TEST
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9999951129987804	WITHOUT_CLASSIFICATION	4.887001219560537E-6	TEST
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999999902886384	WITHOUT_CLASSIFICATION	9.71136169545159E-9	TEST
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999998393923588	WITHOUT_CLASSIFICATION	1.6060764112623673E-7	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999969196798755	WITHOUT_CLASSIFICATION	3.080320124565383E-6	TEST
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.999998326170249	WITHOUT_CLASSIFICATION	1.6738297510425407E-6	TEST
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999991034073921	WITHOUT_CLASSIFICATION	8.965926079400786E-7	TEST
//reopen	WITHOUT_CLASSIFICATION	0.9999723594460855	WITHOUT_CLASSIFICATION	2.7640553914355467E-5	TEST
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999997836949771	WITHOUT_CLASSIFICATION	2.163050229053173E-7	TEST
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999999880464014	WITHOUT_CLASSIFICATION	1.1953598608766927E-8	TEST
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999994280736585	WITHOUT_CLASSIFICATION	5.71926341561088E-7	TEST
// one optional and no required args	WITHOUT_CLASSIFICATION	0.999999812377539	WITHOUT_CLASSIFICATION	1.8762246095760948E-7	TEST
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.999999971337259	WITHOUT_CLASSIFICATION	2.8662740952324615E-8	TEST
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999998564638977	WITHOUT_CLASSIFICATION	1.4353610238472747E-7	TEST
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999999219087914	WITHOUT_CLASSIFICATION	7.8091208553566E-8	TEST
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999999211719999	WITHOUT_CLASSIFICATION	7.882800010776327E-8	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999988020307983	WITHOUT_CLASSIFICATION	1.1979692017166492E-6	TEST
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999999705975683	WITHOUT_CLASSIFICATION	2.9402431630423702E-8	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999998399870998	WITHOUT_CLASSIFICATION	1.6001290006431804E-7	TEST
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999999341242646	WITHOUT_CLASSIFICATION	6.587573540887598E-8	TEST
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999989131775103	WITHOUT_CLASSIFICATION	1.0868224897522115E-6	TEST
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999995766571352	WITHOUT_CLASSIFICATION	4.233428647319234E-7	TEST
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999998120988675	WITHOUT_CLASSIFICATION	1.8790113259135696E-7	TEST
// ignore error	WITHOUT_CLASSIFICATION	0.9999992502389699	WITHOUT_CLASSIFICATION	7.497610301076392E-7	TEST
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999891990694784	WITHOUT_CLASSIFICATION	1.0800930521661633E-5	TEST
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999910612542573	WITHOUT_CLASSIFICATION	8.938745742674903E-6	TEST
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999997076838945	WITHOUT_CLASSIFICATION	2.9231610555728084E-7	TEST
// odd	WITHOUT_CLASSIFICATION	0.9999962475672483	WITHOUT_CLASSIFICATION	3.752432751638838E-6	TEST
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999996229528211	WITHOUT_CLASSIFICATION	3.770471789720384E-7	TEST
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999976247981892	WITHOUT_CLASSIFICATION	2.3752018108034973E-6	TEST
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999999169166292	WITHOUT_CLASSIFICATION	8.308337081220878E-8	TEST
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999998551588193	WITHOUT_CLASSIFICATION	1.448411806446443E-7	TEST
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999801214373617	WITHOUT_CLASSIFICATION	1.9878562638318783E-5	TEST
/*  0! */	WITHOUT_CLASSIFICATION	0.9999900980066296	WITHOUT_CLASSIFICATION	9.901993370367066E-6	TEST
/*  1! */	WITHOUT_CLASSIFICATION	0.9999899837849165	WITHOUT_CLASSIFICATION	1.0016215083416557E-5	TEST
/*  2! */	WITHOUT_CLASSIFICATION	0.9999884206348507	WITHOUT_CLASSIFICATION	1.1579365149221737E-5	TEST
/*  3! */	WITHOUT_CLASSIFICATION	0.9999869863551554	WITHOUT_CLASSIFICATION	1.3013644844710634E-5	TEST
/*  4! */	WITHOUT_CLASSIFICATION	0.9999899615239238	WITHOUT_CLASSIFICATION	1.0038476076177395E-5	TEST
/*  5! */	WITHOUT_CLASSIFICATION	0.9999893522894737	WITHOUT_CLASSIFICATION	1.0647710526369662E-5	TEST
/*  6! */	WITHOUT_CLASSIFICATION	0.9999895809047595	WITHOUT_CLASSIFICATION	1.0419095240496909E-5	TEST
/*  7! */	WITHOUT_CLASSIFICATION	0.9999893999147959	WITHOUT_CLASSIFICATION	1.0600085204151972E-5	TEST
/*  8! */	WITHOUT_CLASSIFICATION	0.9999894374688469	WITHOUT_CLASSIFICATION	1.0562531153108121E-5	TEST
/*  9! */	WITHOUT_CLASSIFICATION	0.9999897523518791	WITHOUT_CLASSIFICATION	1.0247648120871474E-5	TEST
/* 11! */	WITHOUT_CLASSIFICATION	0.9999888981986459	WITHOUT_CLASSIFICATION	1.1101801354160927E-5	TEST
/* 12! */	WITHOUT_CLASSIFICATION	0.9999883859060381	WITHOUT_CLASSIFICATION	1.1614093961903427E-5	TEST
/* 13! */	WITHOUT_CLASSIFICATION	0.9999873714382832	WITHOUT_CLASSIFICATION	1.2628561716818692E-5	TEST
/* 15! */	WITHOUT_CLASSIFICATION	0.999988964891756	WITHOUT_CLASSIFICATION	1.1035108243899746E-5	TEST
/* 16! */	WITHOUT_CLASSIFICATION	0.9999892181930229	WITHOUT_CLASSIFICATION	1.078180697715394E-5	TEST
/* 17! */	WITHOUT_CLASSIFICATION	0.9999890088060852	WITHOUT_CLASSIFICATION	1.0991193914831736E-5	TEST
/* 19! */	WITHOUT_CLASSIFICATION	0.9999894024770571	WITHOUT_CLASSIFICATION	1.0597522942827505E-5	TEST
/* 20! */	WITHOUT_CLASSIFICATION	0.9999858358128361	WITHOUT_CLASSIFICATION	1.4164187163837963E-5	TEST
/* 21! */	WITHOUT_CLASSIFICATION	0.9999887662686607	WITHOUT_CLASSIFICATION	1.1233731339264033E-5	TEST
// Static constants	WITHOUT_CLASSIFICATION	0.9999999644267101	WITHOUT_CLASSIFICATION	3.557328983847943E-8	TEST
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9999982718857761	WITHOUT_CLASSIFICATION	1.7281142240092697E-6	TEST
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999986474121677	WITHOUT_CLASSIFICATION	1.3525878323105169E-6	TEST
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999989659215192	WITHOUT_CLASSIFICATION	1.0340784808798661E-6	TEST
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999974181408002	WITHOUT_CLASSIFICATION	2.5818591997128317E-6	TEST
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999999620477247	WITHOUT_CLASSIFICATION	3.795227531692246E-8	TEST
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999999491303019	WITHOUT_CLASSIFICATION	5.086969817818948E-8	TEST
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9999996240966926	WITHOUT_CLASSIFICATION	3.759033073595822E-7	TEST
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999998624416382	WITHOUT_CLASSIFICATION	1.3755836178918584E-7	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999978485597272	WITHOUT_CLASSIFICATION	2.15144027286971E-6	TEST
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9631093987174367	WITHOUT_CLASSIFICATION	0.0368906012825633	TEST
// integer division	WITHOUT_CLASSIFICATION	0.9999996617432904	WITHOUT_CLASSIFICATION	3.382567096141572E-7	TEST
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999751459689196	WITHOUT_CLASSIFICATION	2.4854031080549714E-5	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999994373344875	WITHOUT_CLASSIFICATION	5.626655126516584E-7	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999994373344875	WITHOUT_CLASSIFICATION	5.626655126516584E-7	TEST
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999999205503141	WITHOUT_CLASSIFICATION	7.94496860225447E-8	TEST
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9999995556999847	WITHOUT_CLASSIFICATION	4.4430001537353727E-7	TEST
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999999249558181	WITHOUT_CLASSIFICATION	7.504418175696951E-8	TEST
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999997590853706	WITHOUT_CLASSIFICATION	2.409146293901723E-7	TEST
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999996752380732	WITHOUT_CLASSIFICATION	3.2476192682465085E-7	TEST
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999997935702707	WITHOUT_CLASSIFICATION	2.0642972940489334E-7	TEST
// sign	WITHOUT_CLASSIFICATION	0.9999988400549192	WITHOUT_CLASSIFICATION	1.1599450808481059E-6	TEST
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999998317461921	WITHOUT_CLASSIFICATION	1.6825380784845097E-7	TEST
// normalize the value	WITHOUT_CLASSIFICATION	0.9999997692185798	WITHOUT_CLASSIFICATION	2.3078142032483297E-7	TEST
// base	WITHOUT_CLASSIFICATION	0.9999991043970925	WITHOUT_CLASSIFICATION	8.95602907630359E-7	TEST
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9998708099893162	WITHOUT_CLASSIFICATION	1.2919001068371132E-4	TEST
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999999662987737	WITHOUT_CLASSIFICATION	3.3701226243173945E-8	TEST
// eh?!	WITHOUT_CLASSIFICATION	0.9999967851026966	WITHOUT_CLASSIFICATION	3.214897303404773E-6	TEST
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999975086436089	WITHOUT_CLASSIFICATION	2.491356391133699E-6	TEST
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999998331018	WITHOUT_CLASSIFICATION	1.6689820007765132E-7	TEST
// the requested precision	WITHOUT_CLASSIFICATION	0.9999869035477904	WITHOUT_CLASSIFICATION	1.3096452209598958E-5	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.9999995609046818	WITHOUT_CLASSIFICATION	4.3909531818780353E-7	TEST
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999992086165946	WITHOUT_CLASSIFICATION	7.91383405466057E-7	TEST
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999986690368454	WITHOUT_CLASSIFICATION	1.3309631546236797E-6	TEST
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999915596794299	WITHOUT_CLASSIFICATION	8.44032057006782E-6	TEST
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999993075610426	WITHOUT_CLASSIFICATION	6.92438957386117E-7	TEST
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999999593904993	WITHOUT_CLASSIFICATION	4.060950059230702E-8	TEST
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999987709631277	WITHOUT_CLASSIFICATION	1.2290368723027742E-6	TEST
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999993207846318	WITHOUT_CLASSIFICATION	6.792153681484046E-7	TEST
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.999999893891306	WITHOUT_CLASSIFICATION	1.0610869402113951E-7	TEST
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999996269649261	WITHOUT_CLASSIFICATION	3.73035073918693E-7	TEST
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999998984294247	WITHOUT_CLASSIFICATION	1.015705752825194E-7	TEST
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999983976965048	WITHOUT_CLASSIFICATION	1.6023034952576765E-6	TEST
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999996465748419	WITHOUT_CLASSIFICATION	3.5342515809793566E-7	TEST
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999957398228438	WITHOUT_CLASSIFICATION	4.260177156139822E-6	TEST
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999992692742672	WITHOUT_CLASSIFICATION	7.307257328917168E-7	TEST
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999990368136538	WITHOUT_CLASSIFICATION	9.631863462067692E-7	TEST
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999947175460565	WITHOUT_CLASSIFICATION	5.282453943446851E-6	TEST
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999982219295114	WITHOUT_CLASSIFICATION	1.7780704886370548E-6	TEST
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999998435087718	WITHOUT_CLASSIFICATION	1.564912282868956E-7	TEST
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999992915581686	WITHOUT_CLASSIFICATION	7.084418313289892E-7	TEST
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999991444170597	WITHOUT_CLASSIFICATION	8.555829402096458E-7	TEST
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999998786481525	WITHOUT_CLASSIFICATION	1.2135184744067327E-7	TEST
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999994776211699	WITHOUT_CLASSIFICATION	5.223788300824585E-7	TEST
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999999385113038	WITHOUT_CLASSIFICATION	6.148869617301582E-8	TEST
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9999997749924916	WITHOUT_CLASSIFICATION	2.2500750838623775E-7	TEST
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999996112553026	WITHOUT_CLASSIFICATION	3.8874469747314987E-7	TEST
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999987867059633	WITHOUT_CLASSIFICATION	1.2132940366714628E-6	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999991608374789	WITHOUT_CLASSIFICATION	8.39162521105695E-7	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999991608374789	WITHOUT_CLASSIFICATION	8.39162521105695E-7	TEST
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999993862627289	WITHOUT_CLASSIFICATION	6.137372710451229E-7	TEST
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999994805325891	WITHOUT_CLASSIFICATION	5.194674107655643E-7	TEST
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.999999562653664	WITHOUT_CLASSIFICATION	4.3734633599468935E-7	TEST
//consume the file name	WITHOUT_CLASSIFICATION	0.9999995466990719	WITHOUT_CLASSIFICATION	4.533009281735514E-7	TEST
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999893999039146	WITHOUT_CLASSIFICATION	1.0600096085473437E-5	TEST
// try cwd first	WITHOUT_CLASSIFICATION	0.9999991414443649	WITHOUT_CLASSIFICATION	8.585556350545863E-7	TEST
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999999066828694	WITHOUT_CLASSIFICATION	9.331713059394903E-8	TEST
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999948760217321	WITHOUT_CLASSIFICATION	5.123978267932842E-6	TEST
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999992934064518	WITHOUT_CLASSIFICATION	7.065935481585254E-7	TEST
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.999999289911352	WITHOUT_CLASSIFICATION	7.100886480375324E-7	TEST
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.999999434474706	WITHOUT_CLASSIFICATION	5.655252940550536E-7	TEST
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999995227199203	WITHOUT_CLASSIFICATION	4.772800796681197E-7	TEST
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999928675690607	WITHOUT_CLASSIFICATION	7.13243093930567E-6	TEST
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999993035409527	WITHOUT_CLASSIFICATION	6.964590472432555E-7	TEST
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9984233185783962	WITHOUT_CLASSIFICATION	0.0015766814216038464	TEST
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9999428447773653	WITHOUT_CLASSIFICATION	5.715522263473211E-5	TEST
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999998467684932	WITHOUT_CLASSIFICATION	1.5323150684251624E-7	TEST
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999987404425876	WITHOUT_CLASSIFICATION	1.2595574123779477E-6	TEST
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999998653116767	WITHOUT_CLASSIFICATION	1.3468832322565482E-7	TEST
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999832541950995	WITHOUT_CLASSIFICATION	1.6745804900537046E-5	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999998218653581	WITHOUT_CLASSIFICATION	1.7813464183073695E-7	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999998218653581	WITHOUT_CLASSIFICATION	1.7813464183073695E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999056952482	WITHOUT_CLASSIFICATION	9.430475181910605E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999056952482	WITHOUT_CLASSIFICATION	9.430475181910605E-8	TEST
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999999691534652	WITHOUT_CLASSIFICATION	3.084653474239798E-8	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999994998102256	WITHOUT_CLASSIFICATION	5.001897742742308E-7	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999998208859103	WITHOUT_CLASSIFICATION	1.7911408961901285E-7	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999998038797623	WITHOUT_CLASSIFICATION	1.9612023761850065E-7	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.999999868497464	WITHOUT_CLASSIFICATION	1.3150253601946394E-7	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999063328808	WITHOUT_CLASSIFICATION	9.366711917570527E-8	TEST
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9999980818639203	WITHOUT_CLASSIFICATION	1.9181360797609287E-6	TEST
// Profile	WITHOUT_CLASSIFICATION	0.9999996266549258	WITHOUT_CLASSIFICATION	3.7334507414591473E-7	TEST
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999990623154584	WITHOUT_CLASSIFICATION	9.376845415922347E-7	TEST
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999996777301315	WITHOUT_CLASSIFICATION	3.2226986848771504E-7	TEST
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.999999731896175	WITHOUT_CLASSIFICATION	2.681038250272031E-7	TEST
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999998020348879	WITHOUT_CLASSIFICATION	1.9796511211399769E-7	TEST
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999993521078032	WITHOUT_CLASSIFICATION	6.47892196725789E-7	TEST
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9999769146800318	WITHOUT_CLASSIFICATION	2.308531996825651E-5	TEST
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999997496674891	WITHOUT_CLASSIFICATION	2.5033251091418476E-7	TEST
// reset the state	WITHOUT_CLASSIFICATION	0.9999994063844195	WITHOUT_CLASSIFICATION	5.936155804717932E-7	TEST
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9999990946202332	WITHOUT_CLASSIFICATION	9.053797667960145E-7	TEST
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999996680420684	WITHOUT_CLASSIFICATION	3.3195793158824255E-7	TEST
//str is frozen	WITHOUT_CLASSIFICATION	0.9999776153370064	WITHOUT_CLASSIFICATION	2.2384662993611513E-5	TEST
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999986743388798	WITHOUT_CLASSIFICATION	1.3256611201718025E-6	TEST
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999990724080641	WITHOUT_CLASSIFICATION	9.275919359282857E-7	TEST
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999996172509531	WITHOUT_CLASSIFICATION	3.827490468840004E-7	TEST
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999986426583408	WITHOUT_CLASSIFICATION	1.3573416591672453E-6	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999997936619777	WITHOUT_CLASSIFICATION	2.0633802230801205E-7	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999996974206001	WITHOUT_CLASSIFICATION	3.0257939993781565E-7	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999990557657137	WITHOUT_CLASSIFICATION	9.442342862330777E-7	TEST
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999999702824097	WITHOUT_CLASSIFICATION	2.9717590338361873E-8	TEST
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999991423627117	WITHOUT_CLASSIFICATION	8.576372883479472E-7	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999981818252235	WITHOUT_CLASSIFICATION	1.818174776505248E-6	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999997436696891	WITHOUT_CLASSIFICATION	2.563303109469826E-7	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999997436696891	WITHOUT_CLASSIFICATION	2.563303109469826E-7	TEST
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999995556104971	WITHOUT_CLASSIFICATION	4.443895028270468E-7	TEST
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999973019933125	WITHOUT_CLASSIFICATION	2.698006687507622E-6	TEST
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999994937709485	WITHOUT_CLASSIFICATION	5.062290514934837E-7	TEST
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999992157989217	WITHOUT_CLASSIFICATION	7.842010782663536E-7	TEST
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999995399855118	WITHOUT_CLASSIFICATION	4.6001448813947777E-7	TEST
// static initializing method	WITHOUT_CLASSIFICATION	0.9999999603699	WITHOUT_CLASSIFICATION	3.963009999885458E-8	TEST
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999999799040804	WITHOUT_CLASSIFICATION	2.0095919542992348E-8	TEST
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999999866806656	WITHOUT_CLASSIFICATION	1.3319334511127964E-8	TEST
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999995240365203	WITHOUT_CLASSIFICATION	4.759634797462694E-7	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999981390817485	WITHOUT_CLASSIFICATION	1.8609182515075623E-6	TEST
// self // method name	WITHOUT_CLASSIFICATION	0.9999996855687655	WITHOUT_CLASSIFICATION	3.144312344897964E-7	TEST
// the default allocator	WITHOUT_CLASSIFICATION	0.9999999242310665	WITHOUT_CLASSIFICATION	7.576893347869329E-8	TEST
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999993202559606	WITHOUT_CLASSIFICATION	6.79744039278933E-7	TEST
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999991910037016	WITHOUT_CLASSIFICATION	8.08996298315483E-7	TEST
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999997980026386	WITHOUT_CLASSIFICATION	2.0199736141760285E-7	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999994877196705	WITHOUT_CLASSIFICATION	5.122803295196442E-7	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999992551452412	WITHOUT_CLASSIFICATION	7.448547587033802E-7	TEST
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999995060503407	WITHOUT_CLASSIFICATION	4.939496592830987E-7	TEST
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999998427229022	WITHOUT_CLASSIFICATION	1.5727709784276887E-7	TEST
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.999833138310814	WITHOUT_CLASSIFICATION	1.668616891858893E-4	TEST
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999987305674647	WITHOUT_CLASSIFICATION	1.269432535302091E-6	TEST
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999947407508114	WITHOUT_CLASSIFICATION	5.259249188584575E-6	TEST
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999954601479268	WITHOUT_CLASSIFICATION	4.5398520730918485E-6	TEST
// a gotcha	WITHOUT_CLASSIFICATION	0.999998159776983	WITHOUT_CLASSIFICATION	1.840223016950973E-6	TEST
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999995391404793	WITHOUT_CLASSIFICATION	4.608595205937757E-7	TEST
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999988251097011	WITHOUT_CLASSIFICATION	1.174890298944061E-6	TEST
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.999999531678122	WITHOUT_CLASSIFICATION	4.6832187805296977E-7	TEST
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999997630042674	WITHOUT_CLASSIFICATION	2.3699573257288067E-7	TEST
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999998416168688	WITHOUT_CLASSIFICATION	1.5838313119836307E-7	TEST
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999986743480791	WITHOUT_CLASSIFICATION	1.3256519208925044E-6	TEST
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999995794256834	WITHOUT_CLASSIFICATION	4.205743167002206E-7	TEST
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999980101214112	WITHOUT_CLASSIFICATION	1.9898785889110115E-6	TEST
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999994965988607	WITHOUT_CLASSIFICATION	5.034011393440403E-7	TEST
// provider is not available	WITHOUT_CLASSIFICATION	0.999999233570134	WITHOUT_CLASSIFICATION	7.664298661085226E-7	TEST
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999941733192614	WITHOUT_CLASSIFICATION	5.826680738529162E-6	TEST
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999998346595151	WITHOUT_CLASSIFICATION	1.6534048479160325E-7	TEST
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999938944040503	WITHOUT_CLASSIFICATION	6.105595949771482E-6	TEST
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999917144563027	WITHOUT_CLASSIFICATION	8.285543697280576E-6	TEST
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999996702515558	WITHOUT_CLASSIFICATION	3.297484442746475E-7	TEST
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999998732237629	WITHOUT_CLASSIFICATION	1.2677623712377677E-7	TEST
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999999716701983	WITHOUT_CLASSIFICATION	2.8329801820322894E-8	TEST
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999994478088169	WITHOUT_CLASSIFICATION	5.521911831939202E-7	TEST
// JRubyService	WITHOUT_CLASSIFICATION	0.9999996109676121	WITHOUT_CLASSIFICATION	3.890323879738061E-7	TEST
// while	WITHOUT_CLASSIFICATION	0.9999987460863253	WITHOUT_CLASSIFICATION	1.2539136746572849E-6	TEST
/* \OOO */	WITHOUT_CLASSIFICATION	0.999975574255471	WITHOUT_CLASSIFICATION	2.442574452891737E-5	TEST
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999998352993058	WITHOUT_CLASSIFICATION	1.6470069409290428E-7	TEST
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999997428046079	WITHOUT_CLASSIFICATION	2.571953920366157E-7	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999695218753	WITHOUT_CLASSIFICATION	3.047812469452538E-8	TEST
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999999360507836	WITHOUT_CLASSIFICATION	6.394921641318982E-8	TEST
// silent ?	WITHOUT_CLASSIFICATION	0.9999996291679626	WITHOUT_CLASSIFICATION	3.7083203738903903E-7	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999920320864387	WITHOUT_CLASSIFICATION	7.96791356126044E-6	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999897356082477	WITHOUT_CLASSIFICATION	1.0264391752252734E-5	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999887107775596	WITHOUT_CLASSIFICATION	1.1289222440443972E-5	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999922292559674	WITHOUT_CLASSIFICATION	7.770744032567923E-6	TEST
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999947609254296	WITHOUT_CLASSIFICATION	5.239074570363335E-6	TEST
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999937219326888	WITHOUT_CLASSIFICATION	6.278067311275306E-6	TEST
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999973375894314	WITHOUT_CLASSIFICATION	2.6624105686648445E-6	TEST
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999999744087565	WITHOUT_CLASSIFICATION	2.5591243474463827E-8	TEST
/* Surrogates */	WITHOUT_CLASSIFICATION	0.999978707312299	WITHOUT_CLASSIFICATION	2.1292687700976642E-5	TEST
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999995443940054	WITHOUT_CLASSIFICATION	4.556059946382493E-7	TEST
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.999977038513894	WITHOUT_CLASSIFICATION	2.2961486106026457E-5	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999920320864387	WITHOUT_CLASSIFICATION	7.96791356126044E-6	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999887107775596	WITHOUT_CLASSIFICATION	1.1289222440443972E-5	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999897356082477	WITHOUT_CLASSIFICATION	1.0264391752252734E-5	TEST
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999863571963413	WITHOUT_CLASSIFICATION	1.3642803658664318E-5	TEST
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999924404171674	WITHOUT_CLASSIFICATION	7.559582832701559E-6	TEST
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999980432644374	WITHOUT_CLASSIFICATION	1.9567355625199138E-6	TEST
// inner switch	WITHOUT_CLASSIFICATION	0.9999998348248414	WITHOUT_CLASSIFICATION	1.6517515846818278E-7	TEST
// newInstance here	WITHOUT_CLASSIFICATION	0.9999997744150887	WITHOUT_CLASSIFICATION	2.2558491124603037E-7	TEST
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999995562050005	WITHOUT_CLASSIFICATION	4.4379499943290293E-7	TEST
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999993992883714	WITHOUT_CLASSIFICATION	6.007116285155212E-7	TEST
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999998474941665	WITHOUT_CLASSIFICATION	1.5250583347416585E-7	TEST
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999993256704399	WITHOUT_CLASSIFICATION	6.743295600179014E-7	TEST
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999998764789851	WITHOUT_CLASSIFICATION	1.2352101487003189E-7	TEST
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999999393696501	WITHOUT_CLASSIFICATION	6.063034981755162E-8	TEST
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.999999423205024	WITHOUT_CLASSIFICATION	5.767949759207574E-7	TEST
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999992854643531	WITHOUT_CLASSIFICATION	7.14535646926763E-7	TEST
// option_to_str	WITHOUT_CLASSIFICATION	0.9999989418790141	WITHOUT_CLASSIFICATION	1.0581209859370273E-6	TEST
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999998737158944	WITHOUT_CLASSIFICATION	1.262841056910736E-7	TEST
// args should be before block	WITHOUT_CLASSIFICATION	0.9999970443749427	WITHOUT_CLASSIFICATION	2.955625057200935E-6	TEST
// args should be at end	WITHOUT_CLASSIFICATION	0.9999990090429016	WITHOUT_CLASSIFICATION	9.909570984685923E-7	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999966259755418	WITHOUT_CLASSIFICATION	3.3740244582491567E-6	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999966259755418	WITHOUT_CLASSIFICATION	3.3740244582491567E-6	TEST
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.999999539516265	WITHOUT_CLASSIFICATION	4.604837350419383E-7	TEST
// start a new populator	WITHOUT_CLASSIFICATION	0.9999996592923175	WITHOUT_CLASSIFICATION	3.4070768260184755E-7	TEST
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999959696807297	WITHOUT_CLASSIFICATION	4.030319270340124E-6	TEST
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999869711177384	WITHOUT_CLASSIFICATION	1.3028882261656645E-5	TEST
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999995786252711	WITHOUT_CLASSIFICATION	4.2137472892246723E-7	TEST
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999999951824017	WITHOUT_CLASSIFICATION	4.817598297561896E-9	TEST
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999999414669148	WITHOUT_CLASSIFICATION	5.853308511458712E-8	TEST
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999998514174046	WITHOUT_CLASSIFICATION	1.4858259541544964E-7	TEST
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999992914285605	WITHOUT_CLASSIFICATION	7.085714394603139E-7	TEST
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999999613826485	WITHOUT_CLASSIFICATION	3.861735146477973E-8	TEST
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999992802551011	WITHOUT_CLASSIFICATION	7.197448988705432E-7	TEST
//                }	WITHOUT_CLASSIFICATION	0.9999976038227141	WITHOUT_CLASSIFICATION	2.3961772859018204E-6	TEST
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999998368700759	WITHOUT_CLASSIFICATION	1.6312992401939461E-7	TEST
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999984938385832	WITHOUT_CLASSIFICATION	1.5061614168030157E-6	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999996981874926	WITHOUT_CLASSIFICATION	3.018125073481592E-7	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999997525364629	WITHOUT_CLASSIFICATION	2.4746353716966683E-7	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999996039989149	WITHOUT_CLASSIFICATION	3.9600108512183263E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999998783554163	WITHOUT_CLASSIFICATION	1.2164458383926052E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999998783554163	WITHOUT_CLASSIFICATION	1.2164458383926052E-7	TEST
// colon3	WITHOUT_CLASSIFICATION	0.9999993260651933	WITHOUT_CLASSIFICATION	6.739348067555632E-7	TEST
// Colon3	WITHOUT_CLASSIFICATION	0.9999988386439251	WITHOUT_CLASSIFICATION	1.161356074861656E-6	TEST
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999776150597268	WITHOUT_CLASSIFICATION	2.2384940273168362E-5	TEST
// For b.foo	WITHOUT_CLASSIFICATION	0.9999969493572234	WITHOUT_CLASSIFICATION	3.0506427766274683E-6	TEST
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999999665539453	WITHOUT_CLASSIFICATION	3.344605471218481E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999998783554163	WITHOUT_CLASSIFICATION	1.2164458383926052E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999998783554163	WITHOUT_CLASSIFICATION	1.2164458383926052E-7	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999965024252	WITHOUT_CLASSIFICATION	3.4975748093334166E-9	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999965024252	WITHOUT_CLASSIFICATION	3.4975748093334166E-9	TEST
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999985720260689	WITHOUT_CLASSIFICATION	1.427973931118616E-6	TEST
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999963435209419	WITHOUT_CLASSIFICATION	3.6564790581529683E-6	TEST
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999999624836862	WITHOUT_CLASSIFICATION	3.751631387491384E-8	TEST
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.999999570572289	WITHOUT_CLASSIFICATION	4.29427710869205E-7	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999999500512506	WITHOUT_CLASSIFICATION	4.9948749324916084E-8	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999999500512506	WITHOUT_CLASSIFICATION	4.9948749324916084E-8	TEST
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999997953116794	WITHOUT_CLASSIFICATION	2.0468832070039432E-7	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999995862260861	WITHOUT_CLASSIFICATION	4.137739138517485E-7	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999990997180135	WITHOUT_CLASSIFICATION	9.002819865208756E-7	TEST
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.999995776921656	WITHOUT_CLASSIFICATION	4.2230783439823475E-6	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999964538349	WITHOUT_CLASSIFICATION	3.5461651491481244E-9	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999985087722482	WITHOUT_CLASSIFICATION	1.4912277518444124E-6	TEST
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999926588147173	WITHOUT_CLASSIFICATION	7.341185282613986E-6	TEST
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999999150869563	WITHOUT_CLASSIFICATION	8.491304367831469E-8	TEST
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999992092319316	WITHOUT_CLASSIFICATION	7.907680683404758E-7	TEST
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999999244030954	WITHOUT_CLASSIFICATION	7.559690459957824E-8	TEST
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999973718223156	WITHOUT_CLASSIFICATION	2.6281776843745656E-6	TEST
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999999472416818	WITHOUT_CLASSIFICATION	5.275831816927806E-8	TEST
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999987675333378	WITHOUT_CLASSIFICATION	1.232466662146957E-6	TEST
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999995078283372	WITHOUT_CLASSIFICATION	4.9217166267325E-7	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999997525364629	WITHOUT_CLASSIFICATION	2.4746353716966683E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999998783554163	WITHOUT_CLASSIFICATION	1.2164458383926052E-7	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999965024252	WITHOUT_CLASSIFICATION	3.4975748093334166E-9	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999985087722482	WITHOUT_CLASSIFICATION	1.4912277518444124E-6	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999256366088	WITHOUT_CLASSIFICATION	7.436339117676408E-8	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999256366088	WITHOUT_CLASSIFICATION	7.436339117676408E-8	TEST
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999984365104968	WITHOUT_CLASSIFICATION	1.5634895031803688E-6	TEST
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999994790176043	WITHOUT_CLASSIFICATION	5.209823956803149E-7	TEST
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999999845085005	WITHOUT_CLASSIFICATION	1.549149946176938E-8	TEST
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999999458275797	WITHOUT_CLASSIFICATION	5.417242033156709E-8	TEST
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999947253392265	WITHOUT_CLASSIFICATION	5.274660773452189E-6	TEST
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999999233908591	WITHOUT_CLASSIFICATION	7.660914091076858E-8	TEST
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999984186707559	WITHOUT_CLASSIFICATION	1.5813292441029513E-6	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999922450359111	WITHOUT_CLASSIFICATION	7.754964088918555E-6	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999997979892957	WITHOUT_CLASSIFICATION	2.0201070422015848E-7	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999996985755716	WITHOUT_CLASSIFICATION	3.0142442834562044E-7	TEST
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.999992981517544	WITHOUT_CLASSIFICATION	7.018482456007375E-6	TEST
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999999594880679	WITHOUT_CLASSIFICATION	4.0511932059354455E-8	TEST
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999998529169681	WITHOUT_CLASSIFICATION	1.470830317929916E-7	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999996039989149	WITHOUT_CLASSIFICATION	3.9600108512183263E-7	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999965024252	WITHOUT_CLASSIFICATION	3.4975748093334166E-9	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999995862260861	WITHOUT_CLASSIFICATION	4.137739138517485E-7	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999990997180135	WITHOUT_CLASSIFICATION	9.002819865208756E-7	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999990997180135	WITHOUT_CLASSIFICATION	9.002819865208756E-7	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999964538349	WITHOUT_CLASSIFICATION	3.5461651491481244E-9	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999985087722482	WITHOUT_CLASSIFICATION	1.4912277518444124E-6	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999985087722482	WITHOUT_CLASSIFICATION	1.4912277518444124E-6	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999256366088	WITHOUT_CLASSIFICATION	7.436339117676408E-8	TEST
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999997962404723	WITHOUT_CLASSIFICATION	2.0375952768132262E-7	TEST
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999948065186507	WITHOUT_CLASSIFICATION	5.193481349353683E-6	TEST
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999997469236832	WITHOUT_CLASSIFICATION	2.530763168084411E-7	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.99999937791537	WITHOUT_CLASSIFICATION	6.220846300354241E-7	TEST
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999975437204688	WITHOUT_CLASSIFICATION	2.4562795311973215E-6	TEST
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999866467959939	WITHOUT_CLASSIFICATION	1.3353204006198765E-5	TEST
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999994771093702	WITHOUT_CLASSIFICATION	5.22890629814729E-7	TEST
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999999959687762	WITHOUT_CLASSIFICATION	4.031223818072171E-9	TEST
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999997436210496	WITHOUT_CLASSIFICATION	2.563789503526246E-7	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999995862260861	WITHOUT_CLASSIFICATION	4.137739138517485E-7	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999990997180135	WITHOUT_CLASSIFICATION	9.002819865208756E-7	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999990997180135	WITHOUT_CLASSIFICATION	9.002819865208756E-7	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999964538349	WITHOUT_CLASSIFICATION	3.5461651491481244E-9	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999922450359111	WITHOUT_CLASSIFICATION	7.754964088918555E-6	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999996985755716	WITHOUT_CLASSIFICATION	3.0142442834562044E-7	TEST
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9997967367826365	WITHOUT_CLASSIFICATION	2.0326321736364962E-4	TEST
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999998403286289	WITHOUT_CLASSIFICATION	1.5967137118445558E-7	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999962864328185	WITHOUT_CLASSIFICATION	3.713567181586408E-6	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999962864328185	WITHOUT_CLASSIFICATION	3.713567181586408E-6	TEST
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999989657307824	WITHOUT_CLASSIFICATION	1.0342692175831782E-6	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999996802981898	WITHOUT_CLASSIFICATION	3.197018102558129E-7	TEST
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999999473730711	WITHOUT_CLASSIFICATION	5.262692906810534E-8	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999998829537524	WITHOUT_CLASSIFICATION	1.1704624769004943E-7	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.9999993380695947	WITHOUT_CLASSIFICATION	6.619304052359753E-7	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.9999993380695947	WITHOUT_CLASSIFICATION	6.619304052359753E-7	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999998425039839	WITHOUT_CLASSIFICATION	1.574960160678426E-7	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999998425039839	WITHOUT_CLASSIFICATION	1.574960160678426E-7	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999998439297033	WITHOUT_CLASSIFICATION	1.5607029671065157E-7	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999998439297033	WITHOUT_CLASSIFICATION	1.5607029671065157E-7	TEST
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999993706100303	WITHOUT_CLASSIFICATION	6.293899696867274E-7	TEST
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999995705769773	WITHOUT_CLASSIFICATION	4.294230226477597E-7	TEST
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999983579091585	WITHOUT_CLASSIFICATION	1.642090841476555E-6	TEST
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999999228308714	WITHOUT_CLASSIFICATION	7.716912863643092E-8	TEST
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999999072260446	WITHOUT_CLASSIFICATION	9.277395545772773E-8	TEST
// pragmas	WITHOUT_CLASSIFICATION	0.9999980602875133	WITHOUT_CLASSIFICATION	1.939712486641896E-6	TEST
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999989959811718	WITHOUT_CLASSIFICATION	1.0040188282593447E-6	TEST
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999998501569888	WITHOUT_CLASSIFICATION	1.498430111018366E-7	TEST
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999936304574979	WITHOUT_CLASSIFICATION	6.369542502105888E-6	TEST
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999873941921901	WITHOUT_CLASSIFICATION	1.2605807809887543E-5	TEST
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999999261022022	WITHOUT_CLASSIFICATION	7.389779769991145E-8	TEST
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999998980704408	WITHOUT_CLASSIFICATION	1.0192955929835267E-7	TEST
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999994752502248	WITHOUT_CLASSIFICATION	5.247497751474728E-7	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999975241235988	WITHOUT_CLASSIFICATION	2.475876401204904E-6	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999975241235988	WITHOUT_CLASSIFICATION	2.475876401204904E-6	TEST
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999984772812849	WITHOUT_CLASSIFICATION	1.522718715049865E-6	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999063328808	WITHOUT_CLASSIFICATION	9.366711917570527E-8	TEST
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9999998948508978	WITHOUT_CLASSIFICATION	1.05149102293977E-7	TEST
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999999477296554	WITHOUT_CLASSIFICATION	5.2270344637428717E-8	TEST
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999999185923143	WITHOUT_CLASSIFICATION	8.140768576185679E-8	TEST
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999985100986065	WITHOUT_CLASSIFICATION	1.4899013935577555E-6	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999993643957452	WITHOUT_CLASSIFICATION	6.356042547897938E-7	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999997840597035	WITHOUT_CLASSIFICATION	2.159402966095413E-7	TEST
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999999529369756	WITHOUT_CLASSIFICATION	4.706302440731957E-8	TEST
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999997580146986	WITHOUT_CLASSIFICATION	2.419853014425696E-7	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999999473804995	WITHOUT_CLASSIFICATION	5.261950048371326E-8	TEST
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999990107574124	WITHOUT_CLASSIFICATION	9.892425876648133E-7	TEST
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999998937784836	WITHOUT_CLASSIFICATION	1.0622151630509629E-7	TEST
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999987905134402	WITHOUT_CLASSIFICATION	1.20948655977703E-6	TEST
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999847244107128	WITHOUT_CLASSIFICATION	1.527558928717832E-5	TEST
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999994305509768	WITHOUT_CLASSIFICATION	5.694490231521255E-7	TEST
// can't do it	WITHOUT_CLASSIFICATION	0.99999963676207	WITHOUT_CLASSIFICATION	3.632379299493463E-7	TEST
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999998701290539	WITHOUT_CLASSIFICATION	1.2987094609664998E-7	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999045486769	WITHOUT_CLASSIFICATION	9.545132305628267E-8	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999045486769	WITHOUT_CLASSIFICATION	9.545132305628267E-8	TEST
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999984256153975	WITHOUT_CLASSIFICATION	1.5743846023744222E-6	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999982196371121	WITHOUT_CLASSIFICATION	1.780362887883069E-6	TEST
//[]	WITHOUT_CLASSIFICATION	0.9999222750843243	WITHOUT_CLASSIFICATION	7.772491567577937E-5	TEST
//[]	WITHOUT_CLASSIFICATION	0.9999222750843243	WITHOUT_CLASSIFICATION	7.772491567577937E-5	TEST
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999998687578835	WITHOUT_CLASSIFICATION	1.3124211657336883E-7	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999920808643523	WITHOUT_CLASSIFICATION	7.919135647711994E-6	TEST
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9999843925006848	WITHOUT_CLASSIFICATION	1.560749931512854E-5	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999843370129727	WITHOUT_CLASSIFICATION	1.5662987027278076E-5	TEST
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999997468819226	WITHOUT_CLASSIFICATION	2.5311807739150873E-7	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999998553685763	WITHOUT_CLASSIFICATION	1.4463142367932436E-7	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999998553685763	WITHOUT_CLASSIFICATION	1.4463142367932436E-7	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999999677614904	WITHOUT_CLASSIFICATION	3.223850960340107E-8	TEST
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.999999634121035	WITHOUT_CLASSIFICATION	3.658789650134409E-7	TEST
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999999459463158	WITHOUT_CLASSIFICATION	5.405368417049041E-8	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999983305911482	WITHOUT_CLASSIFICATION	1.6694088518491707E-6	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999982196371121	WITHOUT_CLASSIFICATION	1.780362887883069E-6	TEST
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999937266459763	WITHOUT_CLASSIFICATION	6.273354023731903E-6	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999983206445895	WITHOUT_CLASSIFICATION	1.6793554105515326E-6	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999983206445895	WITHOUT_CLASSIFICATION	1.6793554105515326E-6	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999985768586874	WITHOUT_CLASSIFICATION	1.423141312493442E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999998134885119	WITHOUT_CLASSIFICATION	1.8651148815389603E-7	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999998134885119	WITHOUT_CLASSIFICATION	1.8651148815389603E-7	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999999486519302	WITHOUT_CLASSIFICATION	5.134806983711725E-8	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999999486519302	WITHOUT_CLASSIFICATION	5.134806983711725E-8	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999999486519302	WITHOUT_CLASSIFICATION	5.134806983711725E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999998134885119	WITHOUT_CLASSIFICATION	1.8651148815389603E-7	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999998134885119	WITHOUT_CLASSIFICATION	1.8651148815389603E-7	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999985768586874	WITHOUT_CLASSIFICATION	1.423141312493442E-6	TEST
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999997185188765	WITHOUT_CLASSIFICATION	2.814811235127222E-7	TEST
// always false or nil	WITHOUT_CLASSIFICATION	0.9999991762000244	WITHOUT_CLASSIFICATION	8.237999756029928E-7	TEST
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999995880836785	WITHOUT_CLASSIFICATION	4.119163214653885E-7	TEST
// normal	WITHOUT_CLASSIFICATION	0.9999992788104093	WITHOUT_CLASSIFICATION	7.211895906905152E-7	TEST
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999999761270596	WITHOUT_CLASSIFICATION	2.38729404747917E-8	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999972295991923	WITHOUT_CLASSIFICATION	2.770400807697617E-6	TEST
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999990960306991	WITHOUT_CLASSIFICATION	9.039693010039805E-7	TEST
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999998085743699	WITHOUT_CLASSIFICATION	1.9142563015218463E-7	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999999473804995	WITHOUT_CLASSIFICATION	5.261950048371326E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999998134885119	WITHOUT_CLASSIFICATION	1.8651148815389603E-7	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999998134885119	WITHOUT_CLASSIFICATION	1.8651148815389603E-7	TEST
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999996986895149	WITHOUT_CLASSIFICATION	3.013104851280424E-7	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999993901727309	WITHOUT_CLASSIFICATION	6.098272691427087E-7	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999991199498732	WITHOUT_CLASSIFICATION	8.800501267126643E-7	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.999999925429004	WITHOUT_CLASSIFICATION	7.457099604746213E-8	TEST
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999998109137108	WITHOUT_CLASSIFICATION	1.8908628907269887E-7	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999994065585612	WITHOUT_CLASSIFICATION	5.934414386506165E-7	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999026571118	WITHOUT_CLASSIFICATION	9.734288820404808E-8	TEST
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999996473398002	WITHOUT_CLASSIFICATION	3.5266019989872156E-7	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999994197331951	WITHOUT_CLASSIFICATION	5.802668048354863E-7	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999259695969	WITHOUT_CLASSIFICATION	7.403040316377837E-8	TEST
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999826742888923	WITHOUT_CLASSIFICATION	1.7325711107681712E-5	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.9999922714740827	WITHOUT_CLASSIFICATION	7.728525917379204E-6	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999997451654125	WITHOUT_CLASSIFICATION	2.5483458746261846E-7	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999990955749428	WITHOUT_CLASSIFICATION	9.04425057169589E-7	TEST
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999999747447075	WITHOUT_CLASSIFICATION	2.5255292626306548E-8	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999992251542468	WITHOUT_CLASSIFICATION	7.748457531982723E-7	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999992251542468	WITHOUT_CLASSIFICATION	7.748457531982723E-7	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999992251542468	WITHOUT_CLASSIFICATION	7.748457531982723E-7	TEST
// compile into array	WITHOUT_CLASSIFICATION	0.9999999725875406	WITHOUT_CLASSIFICATION	2.741245933916145E-8	TEST
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.999999946961032	WITHOUT_CLASSIFICATION	5.3038968102694955E-8	TEST
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999995949651789	WITHOUT_CLASSIFICATION	4.0503482116220425E-7	TEST
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999997202366533	WITHOUT_CLASSIFICATION	2.7976334672674064E-7	TEST
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999999879244746	WITHOUT_CLASSIFICATION	1.207552539981002E-8	TEST
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999996703258269	WITHOUT_CLASSIFICATION	3.296741730908518E-7	TEST
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999999925096397	WITHOUT_CLASSIFICATION	7.49036032342923E-9	TEST
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999995109728149	WITHOUT_CLASSIFICATION	4.890271851265008E-7	TEST
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999996360961468	WITHOUT_CLASSIFICATION	3.639038531376662E-7	TEST
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999992258460305	WITHOUT_CLASSIFICATION	7.741539695204239E-7	TEST
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.999997957889929	WITHOUT_CLASSIFICATION	2.042110071120914E-6	TEST
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999966083870303	WITHOUT_CLASSIFICATION	3.391612969677115E-6	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999999677614904	WITHOUT_CLASSIFICATION	3.223850960340107E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999998134885119	WITHOUT_CLASSIFICATION	1.8651148815389603E-7	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999998134885119	WITHOUT_CLASSIFICATION	1.8651148815389603E-7	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999985768586874	WITHOUT_CLASSIFICATION	1.423141312493442E-6	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999972295991923	WITHOUT_CLASSIFICATION	2.770400807697617E-6	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999993901727309	WITHOUT_CLASSIFICATION	6.098272691427087E-7	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.999999925429004	WITHOUT_CLASSIFICATION	7.457099604746213E-8	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999994065585612	WITHOUT_CLASSIFICATION	5.934414386506165E-7	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999991199498732	WITHOUT_CLASSIFICATION	8.800501267126643E-7	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999026571118	WITHOUT_CLASSIFICATION	9.734288820404808E-8	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999259695969	WITHOUT_CLASSIFICATION	7.403040316377837E-8	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999994197331951	WITHOUT_CLASSIFICATION	5.802668048354863E-7	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.9999922714740827	WITHOUT_CLASSIFICATION	7.728525917379204E-6	TEST
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999999120781351	WITHOUT_CLASSIFICATION	8.792186490451436E-8	TEST
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999994643044774	WITHOUT_CLASSIFICATION	5.356955225743529E-7	TEST
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999977899793522	WITHOUT_CLASSIFICATION	2.210020647791227E-6	TEST
// finally, grab the script	WITHOUT_CLASSIFICATION	0.999999868492597	WITHOUT_CLASSIFICATION	1.3150740302375247E-7	TEST
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999999812328159	WITHOUT_CLASSIFICATION	1.876718416246779E-8	TEST
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999995234754097	WITHOUT_CLASSIFICATION	4.7652459036104505E-7	TEST
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999997352536925	WITHOUT_CLASSIFICATION	2.647463075070009E-7	TEST
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.999999331159645	WITHOUT_CLASSIFICATION	6.688403549836936E-7	TEST
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999999010105404	WITHOUT_CLASSIFICATION	9.898945964171324E-8	TEST
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999995949766749	WITHOUT_CLASSIFICATION	4.0502332507591914E-7	TEST
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999999204118282	WITHOUT_CLASSIFICATION	7.958817184590631E-8	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.99999983710433	WITHOUT_CLASSIFICATION	1.6289566987922234E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999988754005796	WITHOUT_CLASSIFICATION	1.1245994204336197E-6	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999998470783477	WITHOUT_CLASSIFICATION	1.5292165239416411E-7	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.999999934704548	WITHOUT_CLASSIFICATION	6.529545211883317E-8	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999997694129439	WITHOUT_CLASSIFICATION	2.3058705613823913E-7	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999990767122593	WITHOUT_CLASSIFICATION	9.232877407953547E-7	TEST
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999997938087826	WITHOUT_CLASSIFICATION	2.0619121746505554E-7	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999999612339705	WITHOUT_CLASSIFICATION	3.876602956657678E-8	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999998082797551	WITHOUT_CLASSIFICATION	1.9172024483868193E-7	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999999093578706	WITHOUT_CLASSIFICATION	9.064212937063118E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999594314348	WITHOUT_CLASSIFICATION	4.0568565209353856E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999594314348	WITHOUT_CLASSIFICATION	4.0568565209353856E-8	TEST
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999992366656912	WITHOUT_CLASSIFICATION	7.633343087076251E-7	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999999632562712	WITHOUT_CLASSIFICATION	3.6743728879962194E-8	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999823149306708	WITHOUT_CLASSIFICATION	1.7685069329188838E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999823149306708	WITHOUT_CLASSIFICATION	1.7685069329188838E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999823149306708	WITHOUT_CLASSIFICATION	1.7685069329188838E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999722106765548	WITHOUT_CLASSIFICATION	2.778932344520835E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999722106765548	WITHOUT_CLASSIFICATION	2.778932344520835E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999722106765548	WITHOUT_CLASSIFICATION	2.778932344520835E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999722106765548	WITHOUT_CLASSIFICATION	2.778932344520835E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999597438111574	WITHOUT_CLASSIFICATION	4.025618884256159E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999597438111574	WITHOUT_CLASSIFICATION	4.025618884256159E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999597438111574	WITHOUT_CLASSIFICATION	4.025618884256159E-5	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999617741393101	WITHOUT_CLASSIFICATION	3.822586068993057E-5	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999617741393101	WITHOUT_CLASSIFICATION	3.822586068993057E-5	TEST
/*arg2*/	WITHOUT_CLASSIFICATION	0.9999542472300973	WITHOUT_CLASSIFICATION	4.5752769902722404E-5	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9999648854358266	WITHOUT_CLASSIFICATION	3.511456417342753E-5	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999999632562712	WITHOUT_CLASSIFICATION	3.6743728879962194E-8	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999996816250089	WITHOUT_CLASSIFICATION	3.183749910724376E-7	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999823149306708	WITHOUT_CLASSIFICATION	1.7685069329188838E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999823149306708	WITHOUT_CLASSIFICATION	1.7685069329188838E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999722106765548	WITHOUT_CLASSIFICATION	2.778932344520835E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999722106765548	WITHOUT_CLASSIFICATION	2.778932344520835E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999722106765548	WITHOUT_CLASSIFICATION	2.778932344520835E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999597438111574	WITHOUT_CLASSIFICATION	4.025618884256159E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999597438111574	WITHOUT_CLASSIFICATION	4.025618884256159E-5	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999617741393101	WITHOUT_CLASSIFICATION	3.822586068993057E-5	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9999648854358266	WITHOUT_CLASSIFICATION	3.511456417342753E-5	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999999269276786	WITHOUT_CLASSIFICATION	7.307232138588936E-8	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999999269276786	WITHOUT_CLASSIFICATION	7.307232138588936E-8	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999995667351874	WITHOUT_CLASSIFICATION	4.3326481265620896E-7	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999995667351874	WITHOUT_CLASSIFICATION	4.3326481265620896E-7	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9999989854663581	WITHOUT_CLASSIFICATION	1.014533641909491E-6	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9999989854663581	WITHOUT_CLASSIFICATION	1.014533641909491E-6	TEST
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999993086220438	WITHOUT_CLASSIFICATION	6.913779562909814E-7	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999983816545756	WITHOUT_CLASSIFICATION	1.618345424451318E-6	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999983816545756	WITHOUT_CLASSIFICATION	1.618345424451318E-6	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999998540825777	WITHOUT_CLASSIFICATION	1.4591742232156123E-7	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999998540825777	WITHOUT_CLASSIFICATION	1.4591742232156123E-7	TEST
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999993993678465	WITHOUT_CLASSIFICATION	6.00632153471578E-7	TEST
// call site	WITHOUT_CLASSIFICATION	0.9999998343153327	WITHOUT_CLASSIFICATION	1.6568466742395402E-7	TEST
// call site	WITHOUT_CLASSIFICATION	0.9999998343153327	WITHOUT_CLASSIFICATION	1.6568466742395402E-7	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999999552956922	WITHOUT_CLASSIFICATION	4.470430785499879E-8	TEST
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999990421798782	WITHOUT_CLASSIFICATION	9.578201217140553E-7	TEST
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999995366096102	WITHOUT_CLASSIFICATION	4.6339038980886877E-7	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999722106765548	WITHOUT_CLASSIFICATION	2.778932344520835E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999722106765548	WITHOUT_CLASSIFICATION	2.778932344520835E-5	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999999552956922	WITHOUT_CLASSIFICATION	4.470430785499879E-8	TEST
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999992698773118	WITHOUT_CLASSIFICATION	7.30122688307641E-7	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999991049820119	WITHOUT_CLASSIFICATION	8.950179881966285E-7	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999991049820119	WITHOUT_CLASSIFICATION	8.950179881966285E-7	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999991049820119	WITHOUT_CLASSIFICATION	8.950179881966285E-7	TEST
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999997491025876	WITHOUT_CLASSIFICATION	2.508974124861873E-7	TEST
// args	WITHOUT_CLASSIFICATION	0.9999986939923613	WITHOUT_CLASSIFICATION	1.306007638625818E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.999998765793395	WITHOUT_CLASSIFICATION	1.2342066050112805E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.999998765793395	WITHOUT_CLASSIFICATION	1.2342066050112805E-6	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999999127257626	WITHOUT_CLASSIFICATION	8.727423740259361E-8	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999998417361974	WITHOUT_CLASSIFICATION	1.582638026356962E-7	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.9999998435663198	WITHOUT_CLASSIFICATION	1.5643368025910644E-7	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.9999995106387436	WITHOUT_CLASSIFICATION	4.893612563630225E-7	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999994523571676	WITHOUT_CLASSIFICATION	5.47642832463298E-7	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999997994952674	WITHOUT_CLASSIFICATION	2.0050473254115748E-7	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999997994952674	WITHOUT_CLASSIFICATION	2.0050473254115748E-7	TEST
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999999021199398	WITHOUT_CLASSIFICATION	9.78800601833381E-8	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9999561892746501	WITHOUT_CLASSIFICATION	4.381072534986893E-5	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9999561892746501	WITHOUT_CLASSIFICATION	4.381072534986893E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999722106765548	WITHOUT_CLASSIFICATION	2.778932344520835E-5	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999991049820119	WITHOUT_CLASSIFICATION	8.950179881966285E-7	TEST
// args	WITHOUT_CLASSIFICATION	0.9999986939923613	WITHOUT_CLASSIFICATION	1.306007638625818E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.999998765793395	WITHOUT_CLASSIFICATION	1.2342066050112805E-6	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999999127257626	WITHOUT_CLASSIFICATION	8.727423740259361E-8	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999998417361974	WITHOUT_CLASSIFICATION	1.582638026356962E-7	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.9999998435663198	WITHOUT_CLASSIFICATION	1.5643368025910644E-7	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.9999995106387436	WITHOUT_CLASSIFICATION	4.893612563630225E-7	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9999561892746501	WITHOUT_CLASSIFICATION	4.381072534986893E-5	TEST
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999990597221969	WITHOUT_CLASSIFICATION	9.402778030236947E-7	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.999999887068316	WITHOUT_CLASSIFICATION	1.1293168400823766E-7	TEST
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999992412020328	WITHOUT_CLASSIFICATION	7.587979671486844E-7	TEST
// add name to call site list	WITHOUT_CLASSIFICATION	0.999999669793817	WITHOUT_CLASSIFICATION	3.302061828473679E-7	TEST
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999994646825026	WITHOUT_CLASSIFICATION	5.353174974691868E-7	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999995884854768	WITHOUT_CLASSIFICATION	4.1151452323935595E-7	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999997451324033	WITHOUT_CLASSIFICATION	2.5486759666312337E-7	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999997451324033	WITHOUT_CLASSIFICATION	2.5486759666312337E-7	TEST
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999998902339491	WITHOUT_CLASSIFICATION	1.0976605092341007E-7	TEST
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999999196514	WITHOUT_CLASSIFICATION	8.034859998128317E-8	TEST
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999999636749007	WITHOUT_CLASSIFICATION	3.6325099306159044E-8	TEST
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999999779048205	WITHOUT_CLASSIFICATION	2.2095179523576897E-8	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999999482762938	WITHOUT_CLASSIFICATION	5.172370615560537E-8	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999999482762938	WITHOUT_CLASSIFICATION	5.172370615560537E-8	TEST
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.99999994912684	WITHOUT_CLASSIFICATION	5.087315995274513E-8	TEST
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.999999930877028	WITHOUT_CLASSIFICATION	6.912297199915945E-8	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.999999924055181	WITHOUT_CLASSIFICATION	7.59448189540137E-8	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.999999924055181	WITHOUT_CLASSIFICATION	7.59448189540137E-8	TEST
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999997886947584	WITHOUT_CLASSIFICATION	2.113052417249132E-7	TEST
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999999755617571	WITHOUT_CLASSIFICATION	2.4438242937751302E-8	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999994523571676	WITHOUT_CLASSIFICATION	5.47642832463298E-7	TEST
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999997517548616	WITHOUT_CLASSIFICATION	2.4824513841784364E-7	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.999999897879592	WITHOUT_CLASSIFICATION	1.0212040803393571E-7	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999997390709818	WITHOUT_CLASSIFICATION	2.6092901821508155E-7	TEST
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999994960685156	WITHOUT_CLASSIFICATION	5.039314844561096E-7	TEST
// load Object under value	WITHOUT_CLASSIFICATION	0.9999990875754282	WITHOUT_CLASSIFICATION	9.124245718424999E-7	TEST
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999995122543532	WITHOUT_CLASSIFICATION	4.877456467760298E-7	TEST
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999999211695942	WITHOUT_CLASSIFICATION	7.883040567470331E-8	TEST
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.999997176469055	WITHOUT_CLASSIFICATION	2.8235309450693865E-6	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999999977384204	WITHOUT_CLASSIFICATION	2.2615796569331204E-9	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999999977384204	WITHOUT_CLASSIFICATION	2.2615796569331204E-9	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999999370124153	WITHOUT_CLASSIFICATION	6.298758475087664E-8	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999999370124153	WITHOUT_CLASSIFICATION	6.298758475087664E-8	TEST
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999998438865735	WITHOUT_CLASSIFICATION	1.5611342641982436E-7	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999995123633095	WITHOUT_CLASSIFICATION	4.876366905192477E-7	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999995123633095	WITHOUT_CLASSIFICATION	4.876366905192477E-7	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999995123633095	WITHOUT_CLASSIFICATION	4.876366905192477E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999991084702473	WITHOUT_CLASSIFICATION	8.91529752647484E-7	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999998021619116	WITHOUT_CLASSIFICATION	1.9783808832424003E-7	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999998021619116	WITHOUT_CLASSIFICATION	1.9783808832424003E-7	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999988045566837	WITHOUT_CLASSIFICATION	1.1954433163250707E-6	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.9999998994134909	WITHOUT_CLASSIFICATION	1.005865090880145E-7	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999992926824482	WITHOUT_CLASSIFICATION	7.073175516813501E-7	TEST
// skip catch block	WITHOUT_CLASSIFICATION	0.9999997383766311	WITHOUT_CLASSIFICATION	2.616233688923098E-7	TEST
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999997382493515	WITHOUT_CLASSIFICATION	2.6175064845232125E-7	TEST
// next jump	WITHOUT_CLASSIFICATION	0.9999994183755384	WITHOUT_CLASSIFICATION	5.816244616864589E-7	TEST
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999893983775654	WITHOUT_CLASSIFICATION	1.0601622434606582E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999988754005796	WITHOUT_CLASSIFICATION	1.1245994204336197E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999988754005796	WITHOUT_CLASSIFICATION	1.1245994204336197E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999991084702473	WITHOUT_CLASSIFICATION	8.91529752647484E-7	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999988045566837	WITHOUT_CLASSIFICATION	1.1954433163250707E-6	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999998494184268	WITHOUT_CLASSIFICATION	1.505815732411746E-7	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.9999998994134909	WITHOUT_CLASSIFICATION	1.005865090880145E-7	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999992926824482	WITHOUT_CLASSIFICATION	7.073175516813501E-7	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999999587930594	WITHOUT_CLASSIFICATION	4.12069406444331E-8	TEST
// break jump	WITHOUT_CLASSIFICATION	0.9999993988721817	WITHOUT_CLASSIFICATION	6.011278183694348E-7	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999995314774548	WITHOUT_CLASSIFICATION	4.6852254515191794E-7	TEST
//[reg]	WITHOUT_CLASSIFICATION	0.9999706331892508	WITHOUT_CLASSIFICATION	2.936681074911943E-5	TEST
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999995227836902	WITHOUT_CLASSIFICATION	4.772163098279827E-7	TEST
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999999589605082	WITHOUT_CLASSIFICATION	4.10394917741863E-8	TEST
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999999877617045	WITHOUT_CLASSIFICATION	1.2238295588023144E-8	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999999587930594	WITHOUT_CLASSIFICATION	4.12069406444331E-8	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999965196696372	WITHOUT_CLASSIFICATION	3.480330362913057E-6	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999965196696372	WITHOUT_CLASSIFICATION	3.480330362913057E-6	TEST
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.999998822802951	WITHOUT_CLASSIFICATION	1.1771970489467965E-6	TEST
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999998935416607	WITHOUT_CLASSIFICATION	1.0645833926843096E-7	TEST
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999996707199036	WITHOUT_CLASSIFICATION	3.292800963877261E-7	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999980366871872	WITHOUT_CLASSIFICATION	1.9633128128313216E-6	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999976620545961	WITHOUT_CLASSIFICATION	2.3379454038317962E-6	TEST
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999998592232482	WITHOUT_CLASSIFICATION	1.4077675181692454E-7	TEST
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999995504557431	WITHOUT_CLASSIFICATION	4.495442569255785E-7	TEST
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999999039044911	WITHOUT_CLASSIFICATION	9.609550887818259E-8	TEST
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999999654373004	WITHOUT_CLASSIFICATION	3.456269964860334E-8	TEST
// false // zero	WITHOUT_CLASSIFICATION	0.999998954256003	WITHOUT_CLASSIFICATION	1.045743996934152E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999999538228716	WITHOUT_CLASSIFICATION	4.6177128387840745E-7	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999980366871872	WITHOUT_CLASSIFICATION	1.9633128128313216E-6	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999976620545961	WITHOUT_CLASSIFICATION	2.3379454038317962E-6	TEST
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999998960166654	WITHOUT_CLASSIFICATION	1.0398333467181754E-7	TEST
// push false	WITHOUT_CLASSIFICATION	0.999998868930933	WITHOUT_CLASSIFICATION	1.1310690669930194E-6	TEST
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999996214524346	WITHOUT_CLASSIFICATION	3.785475654308737E-7	TEST
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999979491934397	WITHOUT_CLASSIFICATION	2.0508065603103575E-6	TEST
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.999998463147422	WITHOUT_CLASSIFICATION	1.5368525778992897E-6	TEST
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999966584785234	WITHOUT_CLASSIFICATION	3.3415214766766553E-6	TEST
//[C]	WITHOUT_CLASSIFICATION	0.9999364441204798	WITHOUT_CLASSIFICATION	6.355587952029706E-5	TEST
// push true	WITHOUT_CLASSIFICATION	0.9999985012797199	WITHOUT_CLASSIFICATION	1.4987202800720095E-6	TEST
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999980860733632	WITHOUT_CLASSIFICATION	1.9139266368621297E-6	TEST
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999930235214304	WITHOUT_CLASSIFICATION	6.9764785695758855E-6	TEST
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999967724174489	WITHOUT_CLASSIFICATION	3.2275825510190978E-6	TEST
//[boolean]	WITHOUT_CLASSIFICATION	0.9999877698631177	WITHOUT_CLASSIFICATION	1.2230136882202308E-5	TEST
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999997382579611	WITHOUT_CLASSIFICATION	2.617420389329488E-7	TEST
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999995543150645	WITHOUT_CLASSIFICATION	4.456849354926726E-7	TEST
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999874108693314	WITHOUT_CLASSIFICATION	1.2589130668553088E-5	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999999471427315	WITHOUT_CLASSIFICATION	5.285726842439916E-8	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999944766549544	WITHOUT_CLASSIFICATION	5.523345045605625E-6	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999997842704951	WITHOUT_CLASSIFICATION	2.1572950495190406E-7	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999998758121856	WITHOUT_CLASSIFICATION	1.2418781434025598E-7	TEST
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.999999924293952	WITHOUT_CLASSIFICATION	7.570604804177026E-8	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999944766549544	WITHOUT_CLASSIFICATION	5.523345045605625E-6	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999997842704951	WITHOUT_CLASSIFICATION	2.1572950495190406E-7	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999998758121856	WITHOUT_CLASSIFICATION	1.2418781434025598E-7	TEST
// finally with exception	WITHOUT_CLASSIFICATION	0.9999994981999607	WITHOUT_CLASSIFICATION	5.018000392947046E-7	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999999696318544	WITHOUT_CLASSIFICATION	3.0368145549520216E-8	TEST
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999999586821835	WITHOUT_CLASSIFICATION	4.131781662516397E-8	TEST
// original exception is on stack	WITHOUT_CLASSIFICATION	0.999999269158883	WITHOUT_CLASSIFICATION	7.308411169813573E-7	TEST
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999996654352088	WITHOUT_CLASSIFICATION	3.345647911232339E-7	TEST
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999994941092204	WITHOUT_CLASSIFICATION	5.058907795625263E-7	TEST
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999999333157893	WITHOUT_CLASSIFICATION	6.668421076937418E-8	TEST
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999999805422428	WITHOUT_CLASSIFICATION	1.9457757083711707E-8	TEST
// script object	WITHOUT_CLASSIFICATION	0.999999828197383	WITHOUT_CLASSIFICATION	1.7180261707679291E-7	TEST
// arities	WITHOUT_CLASSIFICATION	0.9999996633621469	WITHOUT_CLASSIFICATION	3.3663785312800274E-7	TEST
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9901894284925034	WITHOUT_CLASSIFICATION	0.00981057150749665	TEST
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999996385394408	WITHOUT_CLASSIFICATION	3.6146055915062466E-7	TEST
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999989265908767	WITHOUT_CLASSIFICATION	1.0734091232976371E-6	TEST
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999991559445986	WITHOUT_CLASSIFICATION	8.440554012922299E-7	TEST
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9992145361978536	WITHOUT_CLASSIFICATION	7.854638021464211E-4	TEST
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999996080599886	WITHOUT_CLASSIFICATION	3.9194001152145184E-7	TEST
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999998905202685	WITHOUT_CLASSIFICATION	1.094797315393719E-7	TEST
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999984983377231	WITHOUT_CLASSIFICATION	1.5016622768834222E-6	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.999999356078061	WITHOUT_CLASSIFICATION	6.43921938988576E-7	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999996930082629	WITHOUT_CLASSIFICATION	3.069917372022265E-7	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.999999692295601	WITHOUT_CLASSIFICATION	3.077043989203706E-7	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999993161857871	WITHOUT_CLASSIFICATION	6.838142129013638E-7	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999993161857871	WITHOUT_CLASSIFICATION	6.838142129013638E-7	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999967849756228	WITHOUT_CLASSIFICATION	3.2150243771560615E-6	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999967849756228	WITHOUT_CLASSIFICATION	3.2150243771560615E-6	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999987883915631	WITHOUT_CLASSIFICATION	1.2116084368386855E-6	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999987883915631	WITHOUT_CLASSIFICATION	1.2116084368386855E-6	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999997510484615	WITHOUT_CLASSIFICATION	2.489515384902593E-7	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999784996285	WITHOUT_CLASSIFICATION	2.150037154207225E-8	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999998117300478	WITHOUT_CLASSIFICATION	1.882699521164389E-7	TEST
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.999999285862806	WITHOUT_CLASSIFICATION	7.141371940756883E-7	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999967195602665	WITHOUT_CLASSIFICATION	3.280439733427073E-6	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999998932901933	WITHOUT_CLASSIFICATION	1.067098065901656E-7	TEST
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999977419804075	WITHOUT_CLASSIFICATION	2.258019592450944E-6	TEST
// then optional args	WITHOUT_CLASSIFICATION	0.9999995153191801	WITHOUT_CLASSIFICATION	4.84680819939348E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999988754005796	WITHOUT_CLASSIFICATION	1.1245994204336197E-6	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999997510484615	WITHOUT_CLASSIFICATION	2.489515384902593E-7	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999784996285	WITHOUT_CLASSIFICATION	2.150037154207225E-8	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999998117300478	WITHOUT_CLASSIFICATION	1.882699521164389E-7	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999967195602665	WITHOUT_CLASSIFICATION	3.280439733427073E-6	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999998932901933	WITHOUT_CLASSIFICATION	1.067098065901656E-7	TEST
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999994477103148	WITHOUT_CLASSIFICATION	5.522896853044774E-7	TEST
// finally, post args	WITHOUT_CLASSIFICATION	0.9999989978833758	WITHOUT_CLASSIFICATION	1.0021166242523028E-6	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999989786606793	WITHOUT_CLASSIFICATION	1.0213393207413692E-6	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999989786606793	WITHOUT_CLASSIFICATION	1.0213393207413692E-6	TEST
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999993688767037	WITHOUT_CLASSIFICATION	6.311232962650258E-7	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999998317366322	WITHOUT_CLASSIFICATION	1.6826336780402253E-7	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999999617705958	WITHOUT_CLASSIFICATION	3.8229404121112524E-8	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.999998050012876	WITHOUT_CLASSIFICATION	1.9499871240327474E-6	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.999998050012876	WITHOUT_CLASSIFICATION	1.9499871240327474E-6	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999988585523275	WITHOUT_CLASSIFICATION	1.1414476725071732E-6	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999996326616053	WITHOUT_CLASSIFICATION	3.673383947399118E-7	TEST
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999998406425323	WITHOUT_CLASSIFICATION	1.5935746769831206E-7	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999994489738486	WITHOUT_CLASSIFICATION	5.510261514036513E-7	TEST
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999999260534662	WITHOUT_CLASSIFICATION	7.394653380299436E-8	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999998470783477	WITHOUT_CLASSIFICATION	1.5292165239416411E-7	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.999999934704548	WITHOUT_CLASSIFICATION	6.529545211883317E-8	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999997694129439	WITHOUT_CLASSIFICATION	2.3058705613823913E-7	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999990767122593	WITHOUT_CLASSIFICATION	9.232877407953547E-7	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999998082797551	WITHOUT_CLASSIFICATION	1.9172024483868193E-7	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999999093578706	WITHOUT_CLASSIFICATION	9.064212937063118E-8	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999988585523275	WITHOUT_CLASSIFICATION	1.1414476725071732E-6	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999996326616053	WITHOUT_CLASSIFICATION	3.673383947399118E-7	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999994489738486	WITHOUT_CLASSIFICATION	5.510261514036513E-7	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999999791333352	WITHOUT_CLASSIFICATION	2.0866664766696765E-8	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999999617705958	WITHOUT_CLASSIFICATION	3.8229404121112524E-8	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999999617705958	WITHOUT_CLASSIFICATION	3.8229404121112524E-8	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999999538228716	WITHOUT_CLASSIFICATION	4.6177128387840745E-7	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999999538228716	WITHOUT_CLASSIFICATION	4.6177128387840745E-7	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999973196407	WITHOUT_CLASSIFICATION	2.680359226019416E-9	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999973196407	WITHOUT_CLASSIFICATION	2.680359226019416E-9	TEST
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.999999906540478	WITHOUT_CLASSIFICATION	9.345952199669218E-8	TEST
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999997044881148	WITHOUT_CLASSIFICATION	2.955118851258739E-7	TEST
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999999018810504	WITHOUT_CLASSIFICATION	9.811894960027921E-8	TEST
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999777259284724	WITHOUT_CLASSIFICATION	2.2274071527544078E-5	TEST
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999995014998468	WITHOUT_CLASSIFICATION	4.985001530663773E-7	TEST
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999998220413082	WITHOUT_CLASSIFICATION	1.7795869185558176E-7	TEST
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999999527937463	WITHOUT_CLASSIFICATION	4.720625367007173E-8	TEST
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999999726354135	WITHOUT_CLASSIFICATION	2.7364586514980604E-8	TEST
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999999206429299	WITHOUT_CLASSIFICATION	7.935707018583959E-8	TEST
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999998408138491	WITHOUT_CLASSIFICATION	1.591861509998113E-7	TEST
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999997715011971	WITHOUT_CLASSIFICATION	2.284988029763362E-7	TEST
// verify the class	WITHOUT_CLASSIFICATION	0.9999998871253486	WITHOUT_CLASSIFICATION	1.1287465142480378E-7	TEST
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999998417621039	WITHOUT_CLASSIFICATION	1.5823789615755505E-7	TEST
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999999243731567	WITHOUT_CLASSIFICATION	7.562684335459865E-8	TEST
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999993508493215	WITHOUT_CLASSIFICATION	6.49150678600469E-7	TEST
// thread context	WITHOUT_CLASSIFICATION	0.9999998565506353	WITHOUT_CLASSIFICATION	1.4344936466179214E-7	TEST
// line number	WITHOUT_CLASSIFICATION	0.9999994559707318	WITHOUT_CLASSIFICATION	5.440292682659088E-7	TEST
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.999999969571996	WITHOUT_CLASSIFICATION	3.042800390499017E-8	TEST
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.999999931722852	WITHOUT_CLASSIFICATION	6.827714811622597E-8	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.999999934704548	WITHOUT_CLASSIFICATION	6.529545211883317E-8	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999990767122593	WITHOUT_CLASSIFICATION	9.232877407953547E-7	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999594314348	WITHOUT_CLASSIFICATION	4.0568565209353856E-8	TEST
// block	WITHOUT_CLASSIFICATION	0.999998765793395	WITHOUT_CLASSIFICATION	1.2342066050112805E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.999998765793395	WITHOUT_CLASSIFICATION	1.2342066050112805E-6	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999999791333352	WITHOUT_CLASSIFICATION	2.0866664766696765E-8	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999999617705958	WITHOUT_CLASSIFICATION	3.8229404121112524E-8	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999999538228716	WITHOUT_CLASSIFICATION	4.6177128387840745E-7	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999973196407	WITHOUT_CLASSIFICATION	2.680359226019416E-9	TEST
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999999353754425	WITHOUT_CLASSIFICATION	6.462455743794003E-8	TEST
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999998941575631	WITHOUT_CLASSIFICATION	1.0584243686457208E-7	TEST
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999999274585079	WITHOUT_CLASSIFICATION	7.254149222885463E-8	TEST
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999991794843063	WITHOUT_CLASSIFICATION	8.205156936754352E-7	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999998394883601	WITHOUT_CLASSIFICATION	1.6051163980545617E-7	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999998394883601	WITHOUT_CLASSIFICATION	1.6051163980545617E-7	TEST
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999999426656245	WITHOUT_CLASSIFICATION	5.7334375358960254E-8	TEST
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999995770266814	WITHOUT_CLASSIFICATION	4.2297331858046766E-7	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999999199813229	WITHOUT_CLASSIFICATION	8.001867713346709E-8	TEST
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999998579134771	WITHOUT_CLASSIFICATION	1.4208652285270537E-7	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999997945461466	WITHOUT_CLASSIFICATION	2.054538534300724E-7	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999997945461466	WITHOUT_CLASSIFICATION	2.054538534300724E-7	TEST
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999997782277394	WITHOUT_CLASSIFICATION	2.217722606406536E-7	TEST
// normal closure	WITHOUT_CLASSIFICATION	0.9999998737436742	WITHOUT_CLASSIFICATION	1.2625632585815635E-7	TEST
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999990377348655	WITHOUT_CLASSIFICATION	9.622651344537774E-7	TEST
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9999995325071296	WITHOUT_CLASSIFICATION	4.674928704734651E-7	TEST
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999950099517861	WITHOUT_CLASSIFICATION	4.990048213878468E-6	TEST
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999999033704216	WITHOUT_CLASSIFICATION	9.662957839146E-8	TEST
// Ruby name 	WITHOUT_CLASSIFICATION	0.999998705952558	WITHOUT_CLASSIFICATION	1.2940474419646738E-6	TEST
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999999611915475	WITHOUT_CLASSIFICATION	3.880845244338376E-8	TEST
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9999985252336598	WITHOUT_CLASSIFICATION	1.4747663401180748E-6	TEST
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9999924145550994	WITHOUT_CLASSIFICATION	7.585444900617018E-6	TEST
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.999999434918015	WITHOUT_CLASSIFICATION	5.650819849678369E-7	TEST
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999998337257608	WITHOUT_CLASSIFICATION	1.662742391811062E-7	TEST
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999983789636193	WITHOUT_CLASSIFICATION	1.6210363806814567E-6	TEST
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999998737987875	WITHOUT_CLASSIFICATION	1.2620121243450226E-7	TEST
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999987749973952	WITHOUT_CLASSIFICATION	1.2250026048646714E-6	TEST
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999991549174742	WITHOUT_CLASSIFICATION	8.450825258743404E-7	TEST
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.999999857642544	WITHOUT_CLASSIFICATION	1.4235745600868923E-7	TEST
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999999122200988	WITHOUT_CLASSIFICATION	8.777990129901068E-8	TEST
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999992621279906	WITHOUT_CLASSIFICATION	7.378720093394814E-7	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999992382585132	WITHOUT_CLASSIFICATION	7.617414868440668E-7	TEST
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999944549460088	WITHOUT_CLASSIFICATION	5.5450539912966895E-6	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999998986875337	WITHOUT_CLASSIFICATION	1.0131246638688234E-7	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999998986875337	WITHOUT_CLASSIFICATION	1.0131246638688234E-7	TEST
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999997977885965	WITHOUT_CLASSIFICATION	2.022114034797326E-7	TEST
// Build the class body!	WITHOUT_CLASSIFICATION	0.999999488414228	WITHOUT_CLASSIFICATION	5.115857719459966E-7	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999997840597035	WITHOUT_CLASSIFICATION	2.159402966095413E-7	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999997840597035	WITHOUT_CLASSIFICATION	2.159402966095413E-7	TEST
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9999860079667283	WITHOUT_CLASSIFICATION	1.399203327177902E-5	TEST
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999995098201354	WITHOUT_CLASSIFICATION	4.901798646251941E-7	TEST
// done // done // done // done	WITHOUT_CLASSIFICATION	0.999985516708373	WITHOUT_CLASSIFICATION	1.4483291626917842E-5	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999991248412662	WITHOUT_CLASSIFICATION	8.751587337207198E-7	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999991248412662	WITHOUT_CLASSIFICATION	8.751587337207198E-7	TEST
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999996267512107	WITHOUT_CLASSIFICATION	3.732487892498039E-7	TEST
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999994751413852	WITHOUT_CLASSIFICATION	5.248586149177537E-7	TEST
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999999460198664	WITHOUT_CLASSIFICATION	5.3980133615880075E-8	TEST
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999999539522201	WITHOUT_CLASSIFICATION	4.604777989539845E-8	TEST
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999997771844414	WITHOUT_CLASSIFICATION	2.228155586506086E-7	TEST
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999995511368857	WITHOUT_CLASSIFICATION	4.488631142982152E-7	TEST
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999999451509304	WITHOUT_CLASSIFICATION	5.48490696852841E-8	TEST
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999832139677908	WITHOUT_CLASSIFICATION	1.6786032209216446E-5	TEST
// build each "when"	WITHOUT_CLASSIFICATION	0.9999997610743102	WITHOUT_CLASSIFICATION	2.389256898122123E-7	TEST
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999993757800297	WITHOUT_CLASSIFICATION	6.242199702513157E-7	TEST
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999994961957428	WITHOUT_CLASSIFICATION	5.038042572009765E-7	TEST
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999995294543439	WITHOUT_CLASSIFICATION	4.7054565605413E-7	TEST
// close it out	WITHOUT_CLASSIFICATION	0.999999837879308	WITHOUT_CLASSIFICATION	1.6212069194678541E-7	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999991388405527	WITHOUT_CLASSIFICATION	8.611594474137817E-7	TEST
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9999997741562213	WITHOUT_CLASSIFICATION	2.2584377872784025E-7	TEST
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999999811027501	WITHOUT_CLASSIFICATION	1.889724986817049E-8	TEST
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999999583876131	WITHOUT_CLASSIFICATION	4.161238676769506E-8	TEST
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999990952229554	WITHOUT_CLASSIFICATION	9.047770445471765E-7	TEST
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999979633849054	WITHOUT_CLASSIFICATION	2.0366150945363985E-6	TEST
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999996488447241	WITHOUT_CLASSIFICATION	3.5115527586963326E-7	TEST
// Instance method	WITHOUT_CLASSIFICATION	0.9999999133244304	WITHOUT_CLASSIFICATION	8.667556963248566E-8	TEST
// Class method	WITHOUT_CLASSIFICATION	0.999999751011546	WITHOUT_CLASSIFICATION	2.489884539292973E-7	TEST
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999997666401059	WITHOUT_CLASSIFICATION	2.3335989407787714E-7	TEST
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999993361141963	WITHOUT_CLASSIFICATION	6.638858036566092E-7	TEST
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999857143146498	WITHOUT_CLASSIFICATION	1.4285685350241893E-5	TEST
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999985774086202	WITHOUT_CLASSIFICATION	1.422591379794235E-6	TEST
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999910120477946	WITHOUT_CLASSIFICATION	8.987952205319184E-6	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999998628338185	WITHOUT_CLASSIFICATION	1.3716618152449015E-7	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999993223056881	WITHOUT_CLASSIFICATION	6.776943119574023E-7	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999997392041597	WITHOUT_CLASSIFICATION	2.6079584021576164E-7	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999929529587	WITHOUT_CLASSIFICATION	7.047041347763671E-9	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999991388405527	WITHOUT_CLASSIFICATION	8.611594474137817E-7	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999998628338185	WITHOUT_CLASSIFICATION	1.3716618152449015E-7	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999993223056881	WITHOUT_CLASSIFICATION	6.776943119574023E-7	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999929529587	WITHOUT_CLASSIFICATION	7.047041347763671E-9	TEST
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999995716508849	WITHOUT_CLASSIFICATION	4.2834911512672E-7	TEST
// Build the new module	WITHOUT_CLASSIFICATION	0.9999986955016019	WITHOUT_CLASSIFICATION	1.3044983980742048E-6	TEST
// Build the module body	WITHOUT_CLASSIFICATION	0.999997517357608	WITHOUT_CLASSIFICATION	2.48264239190068E-6	TEST
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.999996938428307	WITHOUT_CLASSIFICATION	3.0615716930912557E-6	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.999998515584789	WITHOUT_CLASSIFICATION	1.4844152109659725E-6	TEST
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999999867888284	WITHOUT_CLASSIFICATION	1.321117148547185E-8	TEST
// get attr	WITHOUT_CLASSIFICATION	0.9999995116035023	WITHOUT_CLASSIFICATION	4.883964976148618E-7	TEST
// call operator	WITHOUT_CLASSIFICATION	0.9999996943964977	WITHOUT_CLASSIFICATION	3.0560350233389486E-7	TEST
// set attr	WITHOUT_CLASSIFICATION	0.9999998038845168	WITHOUT_CLASSIFICATION	1.9611548316572749E-7	TEST
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999994132507343	WITHOUT_CLASSIFICATION	5.867492656853146E-7	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999807687278492	WITHOUT_CLASSIFICATION	1.9231272150804774E-5	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999807687278492	WITHOUT_CLASSIFICATION	1.9231272150804774E-5	TEST
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999989772078719	WITHOUT_CLASSIFICATION	1.0227921280542709E-6	TEST
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999999233623881	WITHOUT_CLASSIFICATION	7.663761197060614E-8	TEST
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999999188849175	WITHOUT_CLASSIFICATION	8.111508260404628E-8	TEST
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999989188963795	WITHOUT_CLASSIFICATION	1.081103620538123E-6	TEST
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999999547645989	WITHOUT_CLASSIFICATION	4.5235401119870375E-8	TEST
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999984348035088	WITHOUT_CLASSIFICATION	1.5651964911917282E-6	TEST
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999996237610442	WITHOUT_CLASSIFICATION	3.7623895569767193E-7	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999998595665515	WITHOUT_CLASSIFICATION	1.4043344850207476E-7	TEST
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999998991361166	WITHOUT_CLASSIFICATION	1.0086388333629964E-7	TEST
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999989548576	WITHOUT_CLASSIFICATION	1.0451424325896178E-9	TEST
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999997403982791	WITHOUT_CLASSIFICATION	2.596017208556055E-7	TEST
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999992634802	WITHOUT_CLASSIFICATION	7.365198784714723E-10	TEST
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999988663206912	WITHOUT_CLASSIFICATION	1.1336793087792906E-6	TEST
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999998281931518	WITHOUT_CLASSIFICATION	1.7180684810906272E-7	TEST
// alu operations	WITHOUT_CLASSIFICATION	0.9999998634574951	WITHOUT_CLASSIFICATION	1.3654250492348088E-7	TEST
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999999897341494	WITHOUT_CLASSIFICATION	1.0265850538950126E-8	TEST
// closure instructions	WITHOUT_CLASSIFICATION	0.999999890799244	WITHOUT_CLASSIFICATION	1.0920075600390595E-7	TEST
// eval instructions	WITHOUT_CLASSIFICATION	0.9999999550617102	WITHOUT_CLASSIFICATION	4.493828977235557E-8	TEST
// def instructions	WITHOUT_CLASSIFICATION	0.9999999523899387	WITHOUT_CLASSIFICATION	4.761006131751911E-8	TEST
// exception instructions	WITHOUT_CLASSIFICATION	0.9999999414438241	WITHOUT_CLASSIFICATION	5.855617604348817E-8	TEST
// Loads	WITHOUT_CLASSIFICATION	0.999998652795745	WITHOUT_CLASSIFICATION	1.3472042550369917E-6	TEST
// Stores	WITHOUT_CLASSIFICATION	0.9999990993818182	WITHOUT_CLASSIFICATION	9.006181818678404E-7	TEST
// jump and branch operations	WITHOUT_CLASSIFICATION	0.999999845540677	WITHOUT_CLASSIFICATION	1.5445932301875646E-7	TEST
// others	WITHOUT_CLASSIFICATION	0.9999989275091026	WITHOUT_CLASSIFICATION	1.0724908974803624E-6	TEST
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999996598786507	WITHOUT_CLASSIFICATION	3.401213492553404E-7	TEST
// optimization guards	WITHOUT_CLASSIFICATION	0.9999995216689009	WITHOUT_CLASSIFICATION	4.783310991160944E-7	TEST
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999984623965955	WITHOUT_CLASSIFICATION	1.5376034044397797E-6	TEST
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999999477308957	WITHOUT_CLASSIFICATION	5.226910422632545E-8	TEST
// scripts	WITHOUT_CLASSIFICATION	0.9999995101961355	WITHOUT_CLASSIFICATION	4.898038644521367E-7	TEST
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999996458005709	WITHOUT_CLASSIFICATION	3.5419942907106223E-7	TEST
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999997071031507	WITHOUT_CLASSIFICATION	2.9289684934470386E-7	TEST
// methods and closures	WITHOUT_CLASSIFICATION	0.9999999174589385	WITHOUT_CLASSIFICATION	8.254106152076157E-8	TEST
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999985919994411	WITHOUT_CLASSIFICATION	1.408000558860564E-6	TEST
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999984894544938	WITHOUT_CLASSIFICATION	1.510545506320062E-6	TEST
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999998823117439	WITHOUT_CLASSIFICATION	1.1768825607265257E-7	TEST
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.999999209556216	WITHOUT_CLASSIFICATION	7.904437840823946E-7	TEST
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.999999923128535	WITHOUT_CLASSIFICATION	7.687146491684044E-8	TEST
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999994307782442	WITHOUT_CLASSIFICATION	5.692217558102422E-7	TEST
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999998390785969	WITHOUT_CLASSIFICATION	1.609214030428062E-7	TEST
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999926812258975	WITHOUT_CLASSIFICATION	7.318774102452198E-6	TEST
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999992337807715	WITHOUT_CLASSIFICATION	7.662192285688486E-7	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999536466079236	WITHOUT_CLASSIFICATION	4.635339207636138E-5	TEST
// Readline	WITHOUT_CLASSIFICATION	0.999999607381804	WITHOUT_CLASSIFICATION	3.926181959505713E-7	TEST
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999997958879921	WITHOUT_CLASSIFICATION	2.0411200782058905E-7	TEST
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999995668474224	WITHOUT_CLASSIFICATION	4.3315257762329006E-7	TEST
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999998518683239	WITHOUT_CLASSIFICATION	1.4813167617077037E-7	TEST
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9999999348767037	WITHOUT_CLASSIFICATION	6.51232964126746E-8	TEST
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999999365392745	WITHOUT_CLASSIFICATION	6.346072538918645E-8	TEST
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999994084182428	WITHOUT_CLASSIFICATION	5.915817573194024E-7	TEST
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999997305009664	WITHOUT_CLASSIFICATION	2.6949903357629047E-7	TEST
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999999144346611	WITHOUT_CLASSIFICATION	8.556533896819384E-8	TEST
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.999999940171974	WITHOUT_CLASSIFICATION	5.982802599798194E-8	TEST
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.999990979390876	WITHOUT_CLASSIFICATION	9.02060912402172E-6	TEST
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999960196864441	WITHOUT_CLASSIFICATION	3.980313555861538E-6	TEST
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999974851034807	WITHOUT_CLASSIFICATION	2.5148965193324503E-6	TEST
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999995059841167	WITHOUT_CLASSIFICATION	4.940158833216142E-7	TEST
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999999804807354	WITHOUT_CLASSIFICATION	1.9519264634319524E-8	TEST
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999998004715697	WITHOUT_CLASSIFICATION	1.9952843040200762E-7	TEST
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9999996512676396	WITHOUT_CLASSIFICATION	3.487323604552699E-7	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999915580356173	WITHOUT_CLASSIFICATION	8.44196438266855E-6	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999915580356173	WITHOUT_CLASSIFICATION	8.44196438266855E-6	TEST
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999988755492552	WITHOUT_CLASSIFICATION	1.124450744850617E-6	TEST
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.999996429387066	WITHOUT_CLASSIFICATION	3.5706129340774873E-6	TEST
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999985709876538	WITHOUT_CLASSIFICATION	1.42901234630223E-6	TEST
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999984467407457	WITHOUT_CLASSIFICATION	1.5532592543706718E-6	TEST
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999997472396561	WITHOUT_CLASSIFICATION	2.5276034397095024E-7	TEST
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999973437101688	WITHOUT_CLASSIFICATION	2.6562898312058476E-6	TEST
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999487290661259	WITHOUT_CLASSIFICATION	5.127093387414456E-5	TEST
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999970423686372	WITHOUT_CLASSIFICATION	2.957631362722954E-6	TEST
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999997965627091	WITHOUT_CLASSIFICATION	2.0343729086029308E-7	TEST
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999999955589173	WITHOUT_CLASSIFICATION	4.441082733196274E-9	TEST
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999995151032316	WITHOUT_CLASSIFICATION	4.848967683097524E-7	TEST
// class or module	WITHOUT_CLASSIFICATION	0.9999995714226121	WITHOUT_CLASSIFICATION	4.285773879305878E-7	TEST
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999972071714198	WITHOUT_CLASSIFICATION	2.7928285801856845E-6	TEST
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999996831121162	WITHOUT_CLASSIFICATION	3.168878837755487E-7	TEST
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999959433404086	WITHOUT_CLASSIFICATION	4.056659591415789E-6	TEST
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999961992713347	WITHOUT_CLASSIFICATION	3.8007286653814524E-6	TEST
// IN changed!	WITHOUT_CLASSIFICATION	0.9999990169359559	WITHOUT_CLASSIFICATION	9.83064044104238E-7	TEST
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999993979387345	WITHOUT_CLASSIFICATION	6.02061265481224E-7	TEST
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999998911741235	WITHOUT_CLASSIFICATION	1.0882587641785533E-7	TEST
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.999999579575404	WITHOUT_CLASSIFICATION	4.2042459606797804E-7	TEST
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999978973143443	WITHOUT_CLASSIFICATION	2.102685655725411E-6	TEST
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999998579504146	WITHOUT_CLASSIFICATION	1.420495854697765E-7	TEST
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999923747660155	WITHOUT_CLASSIFICATION	7.6252339843977115E-6	TEST
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999993105820799	WITHOUT_CLASSIFICATION	6.894179200440988E-7	TEST
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999997934740128	WITHOUT_CLASSIFICATION	2.0652598731693586E-7	TEST
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999990536136254	WITHOUT_CLASSIFICATION	9.463863744838013E-7	TEST
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999992742601861	WITHOUT_CLASSIFICATION	7.257398139256455E-7	TEST
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999999425082965	WITHOUT_CLASSIFICATION	5.749170363576902E-8	TEST
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999998767010223	WITHOUT_CLASSIFICATION	1.2329897760506117E-7	TEST
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999999571263442	WITHOUT_CLASSIFICATION	4.287365596849402E-8	TEST
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999998845649551	WITHOUT_CLASSIFICATION	1.1543504488988714E-7	TEST
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.99999783445555	WITHOUT_CLASSIFICATION	2.1655444501077552E-6	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999183342236	WITHOUT_CLASSIFICATION	8.16657763280513E-8	TEST
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999989842505547	WITHOUT_CLASSIFICATION	1.0157494453078452E-6	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999183342236	WITHOUT_CLASSIFICATION	8.16657763280513E-8	TEST
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999999394478876	WITHOUT_CLASSIFICATION	6.055211237682129E-8	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999848033816643	WITHOUT_CLASSIFICATION	1.5196618335868962E-5	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999848033816643	WITHOUT_CLASSIFICATION	1.5196618335868962E-5	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999848033816643	WITHOUT_CLASSIFICATION	1.5196618335868962E-5	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.999999816435562	WITHOUT_CLASSIFICATION	1.83564437870219E-7	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.999999816435562	WITHOUT_CLASSIFICATION	1.83564437870219E-7	TEST
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.999998556502757	WITHOUT_CLASSIFICATION	1.4434972429595574E-6	TEST
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999999551462437	WITHOUT_CLASSIFICATION	4.485375623912795E-8	TEST
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999998662603335	WITHOUT_CLASSIFICATION	1.3373966654417935E-7	TEST
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9999999328868454	WITHOUT_CLASSIFICATION	6.711315453227498E-8	TEST
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999957202093867	WITHOUT_CLASSIFICATION	4.279790613280104E-6	TEST
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999994134003588	WITHOUT_CLASSIFICATION	5.865996412418447E-7	TEST
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999995777956181	WITHOUT_CLASSIFICATION	4.222043818910532E-7	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999994773809467	WITHOUT_CLASSIFICATION	5.226190532673674E-7	TEST
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999998970559932	WITHOUT_CLASSIFICATION	1.0294400674216093E-7	TEST
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999999386136804	WITHOUT_CLASSIFICATION	6.138631960162378E-8	TEST
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999980654496148	WITHOUT_CLASSIFICATION	1.9345503852558272E-6	TEST
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999998332325684	WITHOUT_CLASSIFICATION	1.6676743174292802E-7	TEST
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999997766739225	WITHOUT_CLASSIFICATION	2.2332607757034004E-7	TEST
// root-level logic	WITHOUT_CLASSIFICATION	0.9999994897292009	WITHOUT_CLASSIFICATION	5.102707991566345E-7	TEST
// root-level methods	WITHOUT_CLASSIFICATION	0.9999995047535978	WITHOUT_CLASSIFICATION	4.952464021881237E-7	TEST
// root-level classes	WITHOUT_CLASSIFICATION	0.9999992553538726	WITHOUT_CLASSIFICATION	7.446461275196137E-7	TEST
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999997632878087	WITHOUT_CLASSIFICATION	2.3671219118196228E-7	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999995089607078	WITHOUT_CLASSIFICATION	4.910392922244979E-7	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999995089607078	WITHOUT_CLASSIFICATION	4.910392922244979E-7	TEST
// receiver	WITHOUT_CLASSIFICATION	0.9999993570638112	WITHOUT_CLASSIFICATION	6.429361888860096E-7	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999997782040164	WITHOUT_CLASSIFICATION	2.2179598364077413E-7	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999997782040164	WITHOUT_CLASSIFICATION	2.2179598364077413E-7	TEST
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999957849521899	WITHOUT_CLASSIFICATION	4.2150478101239615E-6	TEST
// Object[] args	WITHOUT_CLASSIFICATION	0.9999997488722151	WITHOUT_CLASSIFICATION	2.511277849071437E-7	TEST
// load handle	WITHOUT_CLASSIFICATION	0.9999991425459278	WITHOUT_CLASSIFICATION	8.574540721754146E-7	TEST
// args array	WITHOUT_CLASSIFICATION	0.9999985764707396	WITHOUT_CLASSIFICATION	1.4235292603708012E-6	TEST
// i'th argument	WITHOUT_CLASSIFICATION	0.9999996896325231	WITHOUT_CLASSIFICATION	3.103674769687982E-7	TEST
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999999098672846	WITHOUT_CLASSIFICATION	9.013271540965796E-8	TEST
// Object arg0	WITHOUT_CLASSIFICATION	0.999999667662797	WITHOUT_CLASSIFICATION	3.323372029539635E-7	TEST
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.999999943845474	WITHOUT_CLASSIFICATION	5.6154525884671643E-8	TEST
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999986811320917	WITHOUT_CLASSIFICATION	1.3188679083490619E-6	TEST
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999995074026793	WITHOUT_CLASSIFICATION	4.925973207244337E-7	TEST
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999991106699637	WITHOUT_CLASSIFICATION	8.893300362874978E-7	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999996106562684	WITHOUT_CLASSIFICATION	3.893437316506631E-7	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999990557657137	WITHOUT_CLASSIFICATION	9.442342862330777E-7	TEST
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999999045549486	WITHOUT_CLASSIFICATION	9.544505139966273E-8	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999994773809467	WITHOUT_CLASSIFICATION	5.226190532673674E-7	TEST
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999422481204587	WITHOUT_CLASSIFICATION	5.77518795411407E-5	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999997794145878	WITHOUT_CLASSIFICATION	2.2058541219071815E-7	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999995990776849	WITHOUT_CLASSIFICATION	4.0092231510832366E-7	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999995990776849	WITHOUT_CLASSIFICATION	4.0092231510832366E-7	TEST
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999987770590792	WITHOUT_CLASSIFICATION	1.222940920823531E-6	TEST
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999977692007437	WITHOUT_CLASSIFICATION	2.230799256269824E-6	TEST
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999999514042625	WITHOUT_CLASSIFICATION	4.859573765762865E-8	TEST
// restore position	WITHOUT_CLASSIFICATION	0.9999965057724733	WITHOUT_CLASSIFICATION	3.4942275265753264E-6	TEST
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999998463342238	WITHOUT_CLASSIFICATION	1.5366577621158444E-7	TEST
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999990105487344	WITHOUT_CLASSIFICATION	9.894512655913746E-7	TEST
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999999359891583	WITHOUT_CLASSIFICATION	6.401084176940818E-8	TEST
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9999775944296265	WITHOUT_CLASSIFICATION	2.2405570373523667E-5	TEST
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999997433135757	WITHOUT_CLASSIFICATION	2.566864242918838E-7	TEST
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.999999948664743	WITHOUT_CLASSIFICATION	5.133525701894506E-8	TEST
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999989354994651	WITHOUT_CLASSIFICATION	1.0645005349956825E-6	TEST
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999966702992795	WITHOUT_CLASSIFICATION	3.3297007204402294E-6	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999643357933791	WITHOUT_CLASSIFICATION	3.56642066209758E-5	TEST
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999997339504705	WITHOUT_CLASSIFICATION	2.660495295227703E-7	TEST
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999998602666742	WITHOUT_CLASSIFICATION	1.397333258990977E-7	TEST
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999986715716815	WITHOUT_CLASSIFICATION	1.328428318542138E-6	TEST
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999991170547906	WITHOUT_CLASSIFICATION	8.829452093773833E-7	TEST
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999959033861003	WITHOUT_CLASSIFICATION	4.096613899610458E-6	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999996586237857	WITHOUT_CLASSIFICATION	3.4137621430397025E-7	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999999473527166	WITHOUT_CLASSIFICATION	5.264728337912334E-8	TEST
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999999303143329	WITHOUT_CLASSIFICATION	6.968566712527914E-8	TEST
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.999999895185937	WITHOUT_CLASSIFICATION	1.0481406301927605E-7	TEST
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999986929845246	WITHOUT_CLASSIFICATION	1.3070154753240204E-6	TEST
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999999996241162	WITHOUT_CLASSIFICATION	3.758837390590485E-10	TEST
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999999415059742	WITHOUT_CLASSIFICATION	5.849402586720256E-8	TEST
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999991397391392	WITHOUT_CLASSIFICATION	8.602608608744738E-7	TEST
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999545311724314	WITHOUT_CLASSIFICATION	4.546882756855068E-5	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999992043945841	WITHOUT_CLASSIFICATION	7.956054159162408E-7	TEST
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999999549502423	WITHOUT_CLASSIFICATION	4.5049757574885306E-8	TEST
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999974874756159	WITHOUT_CLASSIFICATION	2.51252438409373E-6	TEST
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999997112790021	WITHOUT_CLASSIFICATION	2.887209978295592E-7	TEST
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.999999890890103	WITHOUT_CLASSIFICATION	1.0910989696734782E-7	TEST
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999504645990381	WITHOUT_CLASSIFICATION	4.953540096188283E-5	TEST
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999949692356657	WITHOUT_CLASSIFICATION	5.030764334343445E-6	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.999994837494393	WITHOUT_CLASSIFICATION	5.16250560702995E-6	TEST
// $blah	WITHOUT_CLASSIFICATION	0.9999984441545173	WITHOUT_CLASSIFICATION	1.5558454826277569E-6	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999992043945841	WITHOUT_CLASSIFICATION	7.956054159162408E-7	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999962506557023	WITHOUT_CLASSIFICATION	3.7493442976166352E-6	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.999994837494393	WITHOUT_CLASSIFICATION	5.16250560702995E-6	TEST
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999996108185842	WITHOUT_CLASSIFICATION	3.8918141577342916E-7	TEST
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999999355568809	WITHOUT_CLASSIFICATION	6.44431190011466E-8	TEST
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999854882125025	WITHOUT_CLASSIFICATION	1.4511787497462862E-5	TEST
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999996198891205	WITHOUT_CLASSIFICATION	3.8011087957312996E-7	TEST
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999985257649144	WITHOUT_CLASSIFICATION	1.4742350855412933E-6	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999991937095343	WITHOUT_CLASSIFICATION	8.062904656501172E-7	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999991937095343	WITHOUT_CLASSIFICATION	8.062904656501172E-7	TEST
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9999988085135982	WITHOUT_CLASSIFICATION	1.191486401741196E-6	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.999999963115528	WITHOUT_CLASSIFICATION	3.6884471985018865E-8	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999997192404283	WITHOUT_CLASSIFICATION	2.807595717762808E-7	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999997192404283	WITHOUT_CLASSIFICATION	2.807595717762808E-7	TEST
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999999361844508	WITHOUT_CLASSIFICATION	6.381554919261415E-8	TEST
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9997121299886752	WITHOUT_CLASSIFICATION	2.878700113248883E-4	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9999361031037063	WITHOUT_CLASSIFICATION	6.38968962936176E-5	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9999361031037063	WITHOUT_CLASSIFICATION	6.38968962936176E-5	TEST
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999986638367654	WITHOUT_CLASSIFICATION	1.3361632346631294E-6	TEST
// line 321	WITHOUT_CLASSIFICATION	0.999998095316335	WITHOUT_CLASSIFICATION	1.9046836649347152E-6	TEST
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999994094438864	WITHOUT_CLASSIFICATION	5.905561136297909E-7	TEST
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999998177828417	WITHOUT_CLASSIFICATION	1.8221715837390646E-7	TEST
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.999999583441982	WITHOUT_CLASSIFICATION	4.1655801790220785E-7	TEST
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.999991214377364	WITHOUT_CLASSIFICATION	8.785622635890342E-6	TEST
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999988083245989	WITHOUT_CLASSIFICATION	1.191675401162458E-6	TEST
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999964697571917	WITHOUT_CLASSIFICATION	3.530242808433656E-6	TEST
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999995289937296	WITHOUT_CLASSIFICATION	4.7100627036443487E-7	TEST
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999992666103134	WITHOUT_CLASSIFICATION	7.333896866899501E-7	TEST
// host and port given	WITHOUT_CLASSIFICATION	0.9999952893090134	WITHOUT_CLASSIFICATION	4.710690986586704E-6	TEST
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.999999350064198	WITHOUT_CLASSIFICATION	6.499358019431608E-7	TEST
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999993401825187	WITHOUT_CLASSIFICATION	6.59817481329305E-7	TEST
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999905024765998	WITHOUT_CLASSIFICATION	9.497523400120719E-6	TEST
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999999315792194	WITHOUT_CLASSIFICATION	6.842078058403714E-8	TEST
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999999305417249	WITHOUT_CLASSIFICATION	6.94582752254717E-8	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999648861282199	WITHOUT_CLASSIFICATION	3.511387178019029E-5	TEST
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999997721928621	WITHOUT_CLASSIFICATION	2.2780713788544593E-7	TEST
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999996227793776	WITHOUT_CLASSIFICATION	3.772206223304771E-7	TEST
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9999992168995185	WITHOUT_CLASSIFICATION	7.831004814795134E-7	TEST
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999999035244038	WITHOUT_CLASSIFICATION	9.647559619785263E-8	TEST
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999932794589167	WITHOUT_CLASSIFICATION	6.720541083383886E-6	TEST
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999998559185823	WITHOUT_CLASSIFICATION	1.4408141767928814E-7	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.9999974682706783	WITHOUT_CLASSIFICATION	2.5317293216593273E-6	TEST
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999952672276197	WITHOUT_CLASSIFICATION	4.732772380349199E-6	TEST
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999965111721011	WITHOUT_CLASSIFICATION	3.4888278988720256E-6	TEST
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999973734330541	WITHOUT_CLASSIFICATION	2.6265669458358316E-6	TEST
// line 323	WITHOUT_CLASSIFICATION	0.9999981392028384	WITHOUT_CLASSIFICATION	1.8607971615707403E-6	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999998399870998	WITHOUT_CLASSIFICATION	1.6001290006431804E-7	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999998399870998	WITHOUT_CLASSIFICATION	1.6001290006431804E-7	TEST
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999996795084514	WITHOUT_CLASSIFICATION	3.2049154860991135E-7	TEST
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999998747856536	WITHOUT_CLASSIFICATION	1.2521434636188758E-7	TEST
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999949998393761	WITHOUT_CLASSIFICATION	5.000160623890122E-6	TEST
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999987593522631	WITHOUT_CLASSIFICATION	1.2406477368436236E-6	TEST
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999947027893132	WITHOUT_CLASSIFICATION	5.297210686814971E-6	TEST
// RubySocket	WITHOUT_CLASSIFICATION	0.9999994372944937	WITHOUT_CLASSIFICATION	5.627055063395623E-7	TEST
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999982204279596	WITHOUT_CLASSIFICATION	1.7795720404013235E-6	TEST
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999996385742184	WITHOUT_CLASSIFICATION	3.6142578167448235E-7	TEST
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999997701861384	WITHOUT_CLASSIFICATION	2.2981386167670722E-7	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999998347081767	WITHOUT_CLASSIFICATION	1.6529182331862374E-7	TEST
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999999211656931	WITHOUT_CLASSIFICATION	7.883430691707016E-8	TEST
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999996212252548	WITHOUT_CLASSIFICATION	3.7877474515502604E-7	TEST
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.999996070509261	WITHOUT_CLASSIFICATION	3.929490739032691E-6	TEST
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999998061526312	WITHOUT_CLASSIFICATION	1.938473687902228E-7	TEST
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999999574805284	WITHOUT_CLASSIFICATION	4.251947165397119E-8	TEST
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999999486034964	WITHOUT_CLASSIFICATION	5.1396503518229736E-8	TEST
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999999753613082	WITHOUT_CLASSIFICATION	2.4638691747238408E-8	TEST
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999997535390907	WITHOUT_CLASSIFICATION	2.4646090928803E-7	TEST
// be dead	WITHOUT_CLASSIFICATION	0.9999987716271095	WITHOUT_CLASSIFICATION	1.2283728905143236E-6	TEST
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999999524512604	WITHOUT_CLASSIFICATION	4.754873961932284E-8	TEST
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999997767271344	WITHOUT_CLASSIFICATION	2.2327286558581842E-7	TEST
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999971272422481	WITHOUT_CLASSIFICATION	2.8727577518654813E-6	TEST
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999983898696285	WITHOUT_CLASSIFICATION	1.610130371445985E-6	TEST
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999996112381903	WITHOUT_CLASSIFICATION	3.88761809742319E-7	TEST
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999997736926269	WITHOUT_CLASSIFICATION	2.2630737293802426E-7	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999988136230239	WITHOUT_CLASSIFICATION	1.1863769761275614E-6	TEST
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.999997381568496	WITHOUT_CLASSIFICATION	2.6184315038740294E-6	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999994139158956	WITHOUT_CLASSIFICATION	5.860841044666249E-7	TEST
// main body	WITHOUT_CLASSIFICATION	0.9999991038197134	WITHOUT_CLASSIFICATION	8.96180286599902E-7	TEST
// return jump handling	WITHOUT_CLASSIFICATION	0.9999998874790909	WITHOUT_CLASSIFICATION	1.1252090917866535E-7	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999987679443229	WITHOUT_CLASSIFICATION	1.2320556771796028E-6	TEST
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999992266506578	WITHOUT_CLASSIFICATION	7.733493422883021E-7	TEST
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999997002737852	WITHOUT_CLASSIFICATION	2.997262148982646E-7	TEST
// clear the redo	WITHOUT_CLASSIFICATION	0.9999996999997461	WITHOUT_CLASSIFICATION	3.000002539024565E-7	TEST
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.999999603349597	WITHOUT_CLASSIFICATION	3.9665040299395703E-7	TEST
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999989184736175	WITHOUT_CLASSIFICATION	1.081526382435964E-6	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999989666520763	WITHOUT_CLASSIFICATION	1.0333479237293322E-6	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999994816062652	WITHOUT_CLASSIFICATION	5.18393734867728E-7	TEST
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999997922910853	WITHOUT_CLASSIFICATION	2.077089146823575E-7	TEST
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.99999989717394	WITHOUT_CLASSIFICATION	1.0282605993712473E-7	TEST
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999964437188215	WITHOUT_CLASSIFICATION	3.5562811785885014E-6	TEST
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999998843413392	WITHOUT_CLASSIFICATION	1.1565866075662797E-7	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999999145023905	WITHOUT_CLASSIFICATION	8.549760953467225E-8	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999999145023905	WITHOUT_CLASSIFICATION	8.549760953467225E-8	TEST
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999993026437693	WITHOUT_CLASSIFICATION	6.973562305908191E-7	TEST
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999999735466322	WITHOUT_CLASSIFICATION	2.6453367791266217E-8	TEST
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999969232909511	WITHOUT_CLASSIFICATION	3.0767090487380727E-6	TEST
// return	WITHOUT_CLASSIFICATION	0.9999997000826528	WITHOUT_CLASSIFICATION	2.999173472223891E-7	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.999999356078061	WITHOUT_CLASSIFICATION	6.43921938988576E-7	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999996930082629	WITHOUT_CLASSIFICATION	3.069917372022265E-7	TEST
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999993235240329	WITHOUT_CLASSIFICATION	6.764759670279096E-7	TEST
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999997950509452	WITHOUT_CLASSIFICATION	2.0494905490231418E-7	TEST
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999996830454289	WITHOUT_CLASSIFICATION	3.169545712007453E-7	TEST
// tc	WITHOUT_CLASSIFICATION	0.9999978929173271	WITHOUT_CLASSIFICATION	2.1070826730196794E-6	TEST
// self // name	WITHOUT_CLASSIFICATION	0.9999991426763033	WITHOUT_CLASSIFICATION	8.573236967404662E-7	TEST
// no args	WITHOUT_CLASSIFICATION	0.9999996569206381	WITHOUT_CLASSIFICATION	3.430793619242054E-7	TEST
// variable args with block	WITHOUT_CLASSIFICATION	0.9999994310784802	WITHOUT_CLASSIFICATION	5.689215198116867E-7	TEST
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999997290142204	WITHOUT_CLASSIFICATION	2.7098577960794954E-7	TEST
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999998094148731	WITHOUT_CLASSIFICATION	1.9058512695158491E-7	TEST
// one arg with block	WITHOUT_CLASSIFICATION	0.9999995077949195	WITHOUT_CLASSIFICATION	4.922050805363926E-7	TEST
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999996653255727	WITHOUT_CLASSIFICATION	3.346744272888217E-7	TEST
// two args with block	WITHOUT_CLASSIFICATION	0.9999995605180919	WITHOUT_CLASSIFICATION	4.394819081410205E-7	TEST
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999997957550623	WITHOUT_CLASSIFICATION	2.0424493777283754E-7	TEST
// three args with block	WITHOUT_CLASSIFICATION	0.9999992889136962	WITHOUT_CLASSIFICATION	7.110863038626027E-7	TEST
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999997329935526	WITHOUT_CLASSIFICATION	2.6700644744412625E-7	TEST
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999992616865424	WITHOUT_CLASSIFICATION	7.383134574881114E-7	TEST
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999985652816805	WITHOUT_CLASSIFICATION	1.4347183195428834E-6	TEST
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999994374158478	WITHOUT_CLASSIFICATION	5.625841520745187E-7	TEST
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.999999743080511	WITHOUT_CLASSIFICATION	2.5691948904190473E-7	TEST
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999997709914578	WITHOUT_CLASSIFICATION	2.290085422516965E-7	TEST
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999997158952474	WITHOUT_CLASSIFICATION	2.841047525865468E-7	TEST
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999997790132703	WITHOUT_CLASSIFICATION	2.2098672967204032E-7	TEST
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999997212447038	WITHOUT_CLASSIFICATION	2.787552961701306E-7	TEST
// static invocation	WITHOUT_CLASSIFICATION	0.9999998482118516	WITHOUT_CLASSIFICATION	1.517881484490999E-7	TEST
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999997948161865	WITHOUT_CLASSIFICATION	2.0518381353910386E-7	TEST
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999996414831585	WITHOUT_CLASSIFICATION	3.5851684150937103E-7	TEST
// normal finally and exit	WITHOUT_CLASSIFICATION	0.999999722640495	WITHOUT_CLASSIFICATION	2.773595051244761E-7	TEST
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999963279038987	WITHOUT_CLASSIFICATION	3.672096101234495E-6	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999994816062652	WITHOUT_CLASSIFICATION	5.18393734867728E-7	TEST
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999995853152703	WITHOUT_CLASSIFICATION	4.146847295682229E-7	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999998834502153	WITHOUT_CLASSIFICATION	1.1654978468179256E-7	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999998834502153	WITHOUT_CLASSIFICATION	1.1654978468179256E-7	TEST
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999983818237477	WITHOUT_CLASSIFICATION	1.618176252380113E-6	TEST
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999998766031983	WITHOUT_CLASSIFICATION	1.2339680158621342E-7	TEST
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.999999812443255	WITHOUT_CLASSIFICATION	1.875567451059761E-7	TEST
// never reached	WITHOUT_CLASSIFICATION	0.9999993695985238	WITHOUT_CLASSIFICATION	6.30401476248759E-7	TEST
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9999970805464558	WITHOUT_CLASSIFICATION	2.9194535443052713E-6	TEST
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999976520691953	WITHOUT_CLASSIFICATION	2.3479308046885636E-6	TEST
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9999971977107249	WITHOUT_CLASSIFICATION	2.802289275072326E-6	TEST
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9999976500008193	WITHOUT_CLASSIFICATION	2.349999180662833E-6	TEST
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9999983654033339	WITHOUT_CLASSIFICATION	1.6345966660675513E-6	TEST
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9999981975741966	WITHOUT_CLASSIFICATION	1.8024258033022463E-6	TEST
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9999983639633585	WITHOUT_CLASSIFICATION	1.6360366415893424E-6	TEST
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9999971936631736	WITHOUT_CLASSIFICATION	2.8063368262561687E-6	TEST
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999980874846002	WITHOUT_CLASSIFICATION	1.912515399806637E-6	TEST
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999998480625616	WITHOUT_CLASSIFICATION	1.5193743847724281E-7	TEST
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999996171330182	WITHOUT_CLASSIFICATION	3.828669818484252E-7	TEST
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999999572572975	WITHOUT_CLASSIFICATION	4.274270256334956E-8	TEST
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999970888511727	WITHOUT_CLASSIFICATION	2.911148827376169E-6	TEST
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.999995071963506	WITHOUT_CLASSIFICATION	4.928036493962054E-6	TEST
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999980553280527	WITHOUT_CLASSIFICATION	1.9446719472315976E-6	TEST
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999978556625876	WITHOUT_CLASSIFICATION	2.1443374122926356E-6	TEST
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9999981599725472	WITHOUT_CLASSIFICATION	1.840027452799605E-6	TEST
// promise to implement three	WITHOUT_CLASSIFICATION	0.9999983309181002	WITHOUT_CLASSIFICATION	1.6690818998296916E-6	TEST
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999999063167954	WITHOUT_CLASSIFICATION	9.368320454832992E-8	TEST
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999999030938652	WITHOUT_CLASSIFICATION	9.690613472347696E-8	TEST
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999999796089479	WITHOUT_CLASSIFICATION	2.039105210091262E-8	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.999999852677983	WITHOUT_CLASSIFICATION	1.473220170607133E-7	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999954220346032	WITHOUT_CLASSIFICATION	4.577965396793175E-6	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999999112922044	WITHOUT_CLASSIFICATION	8.870779561909135E-8	TEST
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999990591582549	WITHOUT_CLASSIFICATION	9.40841745126052E-7	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999999351188271	WITHOUT_CLASSIFICATION	6.488117289200473E-8	TEST
// start setup method	WITHOUT_CLASSIFICATION	0.9999997155834293	WITHOUT_CLASSIFICATION	2.844165707719119E-7	TEST
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999998377583679	WITHOUT_CLASSIFICATION	1.6224163221667306E-7	TEST
// set Ruby	WITHOUT_CLASSIFICATION	0.9999995416590715	WITHOUT_CLASSIFICATION	4.5834092854505923E-7	TEST
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999997912922767	WITHOUT_CLASSIFICATION	2.0870772327846853E-7	TEST
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999997914902172	WITHOUT_CLASSIFICATION	2.0850978271501345E-7	TEST
// get current context	WITHOUT_CLASSIFICATION	0.999999831421489	WITHOUT_CLASSIFICATION	1.685785110527056E-7	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999995101107966	WITHOUT_CLASSIFICATION	4.898892034056743E-7	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.999999852677983	WITHOUT_CLASSIFICATION	1.473220170607133E-7	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999954220346032	WITHOUT_CLASSIFICATION	4.577965396793175E-6	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999999112922044	WITHOUT_CLASSIFICATION	8.870779561909135E-8	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999999351188271	WITHOUT_CLASSIFICATION	6.488117289200473E-8	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.999999898846273	WITHOUT_CLASSIFICATION	1.011537269605449E-7	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999999177716464	WITHOUT_CLASSIFICATION	8.222835353889745E-8	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999998098871747	WITHOUT_CLASSIFICATION	1.9011282525710973E-7	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999994342180457	WITHOUT_CLASSIFICATION	5.657819542894189E-7	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999997167526327	WITHOUT_CLASSIFICATION	2.832473673220947E-7	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.999999971947376	WITHOUT_CLASSIFICATION	2.805262397663489E-8	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.9999998401867874	WITHOUT_CLASSIFICATION	1.598132126727693E-7	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999997321663638	WITHOUT_CLASSIFICATION	2.678336361197482E-7	TEST
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999998741488692	WITHOUT_CLASSIFICATION	1.2585113091607834E-7	TEST
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999988260202677	WITHOUT_CLASSIFICATION	1.1739797322404437E-6	TEST
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999967403221469	WITHOUT_CLASSIFICATION	3.259677853077583E-6	TEST
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999971883780447	WITHOUT_CLASSIFICATION	2.8116219553757146E-6	TEST
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999979802647627	WITHOUT_CLASSIFICATION	2.0197352372539004E-6	TEST
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.999999902912932	WITHOUT_CLASSIFICATION	9.708706803985325E-8	TEST
// store it	WITHOUT_CLASSIFICATION	0.9999980766706666	WITHOUT_CLASSIFICATION	1.9233293333449794E-6	TEST
// end of try block	WITHOUT_CLASSIFICATION	0.9999998480829991	WITHOUT_CLASSIFICATION	1.5191700087068973E-7	TEST
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999996819094612	WITHOUT_CLASSIFICATION	3.1809053883583465E-7	TEST
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999998008666083	WITHOUT_CLASSIFICATION	1.9913339159935403E-7	TEST
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999999547299794	WITHOUT_CLASSIFICATION	4.527002064859721E-8	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999995101107966	WITHOUT_CLASSIFICATION	4.898892034056743E-7	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999999177716464	WITHOUT_CLASSIFICATION	8.222835353889745E-8	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999998098871747	WITHOUT_CLASSIFICATION	1.9011282525710973E-7	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999997167526327	WITHOUT_CLASSIFICATION	2.832473673220947E-7	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.999999971947376	WITHOUT_CLASSIFICATION	2.805262397663489E-8	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.9999998401867874	WITHOUT_CLASSIFICATION	1.598132126727693E-7	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999997321663638	WITHOUT_CLASSIFICATION	2.678336361197482E-7	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999998192372074	WITHOUT_CLASSIFICATION	1.8076279263786557E-7	TEST
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.999999620880805	WITHOUT_CLASSIFICATION	3.791191950072068E-7	TEST
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999995120712898	WITHOUT_CLASSIFICATION	4.879287101510007E-7	TEST
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999999833679031	WITHOUT_CLASSIFICATION	1.66320969434465E-8	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999945741260835	WITHOUT_CLASSIFICATION	5.425873916450584E-6	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999945741260835	WITHOUT_CLASSIFICATION	5.425873916450584E-6	TEST
// setup the class	WITHOUT_CLASSIFICATION	0.999999919811681	WITHOUT_CLASSIFICATION	8.018831898373831E-8	TEST
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999999031419959	WITHOUT_CLASSIFICATION	9.685800405001962E-8	TEST
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999995823227339	WITHOUT_CLASSIFICATION	4.176772662234152E-7	TEST
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999992913408444	WITHOUT_CLASSIFICATION	7.086591555571906E-7	TEST
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999997405836986	WITHOUT_CLASSIFICATION	2.5941630143290774E-7	TEST
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999996817447965	WITHOUT_CLASSIFICATION	3.1825520353304054E-7	TEST
// set the full name	WITHOUT_CLASSIFICATION	0.9999993854138503	WITHOUT_CLASSIFICATION	6.145861497412225E-7	TEST
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999999764196109	WITHOUT_CLASSIFICATION	2.3580389097717484E-8	TEST
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999999386416141	WITHOUT_CLASSIFICATION	6.135838590515416E-8	TEST
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999999460635585	WITHOUT_CLASSIFICATION	5.39364415355533E-8	TEST
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999998906266089	WITHOUT_CLASSIFICATION	1.0937339108781737E-7	TEST
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999999681432856	WITHOUT_CLASSIFICATION	3.1856714330352915E-8	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999973599266869	WITHOUT_CLASSIFICATION	2.6400733130445857E-6	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999998818523613	WITHOUT_CLASSIFICATION	1.1814763874056909E-7	TEST
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999999880886282	WITHOUT_CLASSIFICATION	1.1911371764933447E-8	TEST
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999998660453471	WITHOUT_CLASSIFICATION	1.3395465295724378E-7	TEST
// add all static variables	WITHOUT_CLASSIFICATION	0.9999997473184932	WITHOUT_CLASSIFICATION	2.5268150684083825E-7	TEST
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999999829796977	WITHOUT_CLASSIFICATION	1.7020302335857398E-8	TEST
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999997178457964	WITHOUT_CLASSIFICATION	2.82154203587875E-7	TEST
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999999957704759	WITHOUT_CLASSIFICATION	4.229524013415021E-9	TEST
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9999379422038511	WITHOUT_CLASSIFICATION	6.205779614893464E-5	TEST
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999998928529001	WITHOUT_CLASSIFICATION	1.0714709987563442E-7	TEST
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999999156522688	WITHOUT_CLASSIFICATION	8.434773126955868E-8	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9920432932285975	WITHOUT_CLASSIFICATION	0.007956706771402408	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999999432791354	WITHOUT_CLASSIFICATION	5.672086465203982E-8	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999999587404206	WITHOUT_CLASSIFICATION	4.125957953865266E-8	TEST
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999999942091529	WITHOUT_CLASSIFICATION	5.790847043124347E-9	TEST
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999983174593	WITHOUT_CLASSIFICATION	1.6825406999197727E-6	TEST
// line 326	WITHOUT_CLASSIFICATION	0.9999981895454545	WITHOUT_CLASSIFICATION	1.8104545454651463E-6	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999999432791354	WITHOUT_CLASSIFICATION	5.672086465203982E-8	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999999587404206	WITHOUT_CLASSIFICATION	4.125957953865266E-8	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999998818523613	WITHOUT_CLASSIFICATION	1.1814763874056909E-7	TEST
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999999031303339	WITHOUT_CLASSIFICATION	9.686966602185528E-8	TEST
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999998302532142	WITHOUT_CLASSIFICATION	1.697467857263457E-7	TEST
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.999998655369785	WITHOUT_CLASSIFICATION	1.3446302149932252E-6	TEST
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999999669388894	WITHOUT_CLASSIFICATION	3.3061110605070385E-8	TEST
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999997722325809	WITHOUT_CLASSIFICATION	2.2776741921010693E-7	TEST
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999886085072214	WITHOUT_CLASSIFICATION	1.1391492778665131E-5	TEST
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999972898608945	WITHOUT_CLASSIFICATION	2.7101391053501956E-6	TEST
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999991320304408	WITHOUT_CLASSIFICATION	8.67969559180781E-7	TEST
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9999926365049318	WITHOUT_CLASSIFICATION	7.363495068234428E-6	TEST
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999992631274432	WITHOUT_CLASSIFICATION	7.36872556806677E-7	TEST
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999999514608712	WITHOUT_CLASSIFICATION	4.8539128764446E-8	TEST
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999993523995271	WITHOUT_CLASSIFICATION	6.476004729470822E-7	TEST
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.999999197630471	WITHOUT_CLASSIFICATION	8.023695291060088E-7	TEST
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999998342115821	WITHOUT_CLASSIFICATION	1.6578841794373794E-7	TEST
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999999976207713	WITHOUT_CLASSIFICATION	2.3792287747836574E-9	TEST
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999922561345206	WITHOUT_CLASSIFICATION	7.743865479386006E-6	TEST
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999999773039033	WITHOUT_CLASSIFICATION	2.2696096696117634E-8	TEST
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9999999081900046	WITHOUT_CLASSIFICATION	9.18099953350077E-8	TEST
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999998316566472	WITHOUT_CLASSIFICATION	1.6834335279786413E-7	TEST
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.999999863001664	WITHOUT_CLASSIFICATION	1.3699833596568672E-7	TEST
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999999860453643	WITHOUT_CLASSIFICATION	1.3954635544669832E-8	TEST
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999999901008578	WITHOUT_CLASSIFICATION	9.899142171570862E-9	TEST
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999998525515513	WITHOUT_CLASSIFICATION	1.4744844861758538E-7	TEST
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999999986131342	WITHOUT_CLASSIFICATION	1.3868658810910856E-9	TEST
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999999645953564	WITHOUT_CLASSIFICATION	3.5404643596866875E-8	TEST
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999999487885959	WITHOUT_CLASSIFICATION	5.1211404114683825E-8	TEST
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9963122164304978	WITHOUT_CLASSIFICATION	0.0036877835695021902	TEST
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9999996410437213	WITHOUT_CLASSIFICATION	3.58956278664103E-7	TEST
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999994332541396	WITHOUT_CLASSIFICATION	5.667458603382202E-7	TEST
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999999341272081	WITHOUT_CLASSIFICATION	6.58727918811952E-8	TEST
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999998864854084	WITHOUT_CLASSIFICATION	1.1351459159568756E-7	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999986944470867	WITHOUT_CLASSIFICATION	1.3055529132305217E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999986944470867	WITHOUT_CLASSIFICATION	1.3055529132305217E-6	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999973599266869	WITHOUT_CLASSIFICATION	2.6400733130445857E-6	TEST
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999999812361086	WITHOUT_CLASSIFICATION	1.8763891424514292E-8	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999997542605403	WITHOUT_CLASSIFICATION	2.457394596323343E-7	TEST
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999981464132065	WITHOUT_CLASSIFICATION	1.853586793517788E-6	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999920964197	WITHOUT_CLASSIFICATION	7.903580333983663E-9	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999920964197	WITHOUT_CLASSIFICATION	7.903580333983663E-9	TEST
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999789388818	WITHOUT_CLASSIFICATION	2.106111814491964E-8	TEST
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999999638168889	WITHOUT_CLASSIFICATION	3.618311111545616E-8	TEST
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999999748412812	WITHOUT_CLASSIFICATION	2.5158718816979834E-8	TEST
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999996179956802	WITHOUT_CLASSIFICATION	3.820043198177377E-7	TEST
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999993014480408	WITHOUT_CLASSIFICATION	6.985519590695458E-7	TEST
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999999453089166	WITHOUT_CLASSIFICATION	5.4691083380542654E-8	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999999707524622	WITHOUT_CLASSIFICATION	2.9247537825287563E-8	TEST
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999990610949032	WITHOUT_CLASSIFICATION	9.389050968005388E-7	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999999428101167	WITHOUT_CLASSIFICATION	5.7189883234684696E-8	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999986476894436	WITHOUT_CLASSIFICATION	1.3523105563875927E-6	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999989584001605	WITHOUT_CLASSIFICATION	1.0415998395005809E-6	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999990968349334	WITHOUT_CLASSIFICATION	9.031650666987044E-7	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999956954921565	WITHOUT_CLASSIFICATION	4.3045078435667495E-6	TEST
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999998226115312	WITHOUT_CLASSIFICATION	1.7738846879696788E-7	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999992774486719	WITHOUT_CLASSIFICATION	7.22551328063333E-7	TEST
// something?	WITHOUT_CLASSIFICATION	0.9999976580362044	WITHOUT_CLASSIFICATION	2.3419637955403713E-6	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999998321524551	WITHOUT_CLASSIFICATION	1.6784754482308687E-7	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999998321524551	WITHOUT_CLASSIFICATION	1.6784754482308687E-7	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999995751673755	WITHOUT_CLASSIFICATION	4.2483262463174196E-7	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999995751673755	WITHOUT_CLASSIFICATION	4.2483262463174196E-7	TEST
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999999935769747	WITHOUT_CLASSIFICATION	6.423025323893477E-9	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999999701544162	WITHOUT_CLASSIFICATION	2.9845583883008955E-8	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999999652365834	WITHOUT_CLASSIFICATION	3.476341655034928E-8	TEST
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.99999706860606	WITHOUT_CLASSIFICATION	2.9313939400346445E-6	TEST
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.999999709337584	WITHOUT_CLASSIFICATION	2.906624159871144E-7	TEST
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.999999489662277	WITHOUT_CLASSIFICATION	5.103377229339322E-7	TEST
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999999780225104	WITHOUT_CLASSIFICATION	2.1977489649339096E-8	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999990968349334	WITHOUT_CLASSIFICATION	9.031650666987044E-7	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999956954921565	WITHOUT_CLASSIFICATION	4.3045078435667495E-6	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999992774486719	WITHOUT_CLASSIFICATION	7.22551328063333E-7	TEST
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999987752198758	WITHOUT_CLASSIFICATION	1.2247801242284465E-6	TEST
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999991248598565	WITHOUT_CLASSIFICATION	8.75140143386998E-7	TEST
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999999496221496	WITHOUT_CLASSIFICATION	5.037785041913997E-8	TEST
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999982520246911	WITHOUT_CLASSIFICATION	1.747975309023606E-6	TEST
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999999812935375	WITHOUT_CLASSIFICATION	1.870646249183188E-8	TEST
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999977925153904	WITHOUT_CLASSIFICATION	2.207484609574959E-6	TEST
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999995813440996	WITHOUT_CLASSIFICATION	4.1865590035530086E-7	TEST
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999996463337578	WITHOUT_CLASSIFICATION	3.53666242248627E-7	TEST
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999999320610311	WITHOUT_CLASSIFICATION	6.793896886364342E-8	TEST
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.999999970540555	WITHOUT_CLASSIFICATION	2.945944500604652E-8	TEST
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.999999966482681	WITHOUT_CLASSIFICATION	3.351731896700536E-8	TEST
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999982815206007	WITHOUT_CLASSIFICATION	1.71847939931744E-6	TEST
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999986151512396	WITHOUT_CLASSIFICATION	1.3848487604286793E-6	TEST
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999956185345922	WITHOUT_CLASSIFICATION	4.381465407806443E-6	TEST
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9999994402485851	WITHOUT_CLASSIFICATION	5.597514148434361E-7	TEST
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.999999812415633	WITHOUT_CLASSIFICATION	1.875843671173987E-7	TEST
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999994624221181	WITHOUT_CLASSIFICATION	5.375778819528016E-7	TEST
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999999131905744	WITHOUT_CLASSIFICATION	8.680942561179062E-8	TEST
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999998737071953	WITHOUT_CLASSIFICATION	1.2629280474243699E-7	TEST
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999999647421065	WITHOUT_CLASSIFICATION	3.525789352366564E-8	TEST
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999999421422217	WITHOUT_CLASSIFICATION	5.785777835395254E-8	TEST
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999977069790786	WITHOUT_CLASSIFICATION	2.2930209213928288E-6	TEST
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999973733678137	WITHOUT_CLASSIFICATION	2.62663218629618E-6	TEST
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999997956229689	WITHOUT_CLASSIFICATION	2.0437703100058944E-7	TEST
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999983259810488	WITHOUT_CLASSIFICATION	1.6740189512973442E-6	TEST
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999997169366893	WITHOUT_CLASSIFICATION	2.8306331071670426E-7	TEST
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999982174512133	WITHOUT_CLASSIFICATION	1.7825487866953931E-6	TEST
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999879512441858	WITHOUT_CLASSIFICATION	1.2048755814259217E-5	TEST
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999998604324042	WITHOUT_CLASSIFICATION	1.395675957844443E-7	TEST
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999994448512594	WITHOUT_CLASSIFICATION	5.551487405640476E-7	TEST
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.999999984101791	WITHOUT_CLASSIFICATION	1.5898208973719772E-8	TEST
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999988150246887	WITHOUT_CLASSIFICATION	1.1849753112371648E-6	TEST
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999985384923052	WITHOUT_CLASSIFICATION	1.4615076948284578E-6	TEST
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999999268593548	WITHOUT_CLASSIFICATION	7.314064513986776E-8	TEST
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999995637552501	WITHOUT_CLASSIFICATION	4.362447498881164E-7	TEST
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999997293040911	WITHOUT_CLASSIFICATION	2.7069590895602395E-7	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999995162711902	WITHOUT_CLASSIFICATION	4.837288098040615E-7	TEST
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999998656075949	WITHOUT_CLASSIFICATION	1.343924050297681E-7	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999979295630884	WITHOUT_CLASSIFICATION	2.0704369116948057E-6	TEST
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999998082846633	WITHOUT_CLASSIFICATION	1.917153368317443E-7	TEST
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999989144901485	WITHOUT_CLASSIFICATION	1.085509851466424E-6	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999997542605403	WITHOUT_CLASSIFICATION	2.457394596323343E-7	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999995162711902	WITHOUT_CLASSIFICATION	4.837288098040615E-7	TEST
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999829183375223	WITHOUT_CLASSIFICATION	1.7081662477727526E-5	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999999857977356	WITHOUT_CLASSIFICATION	1.4202264283154867E-8	TEST
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999984943336832	WITHOUT_CLASSIFICATION	1.5056663167873737E-6	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999966737300366	WITHOUT_CLASSIFICATION	3.326269963260877E-6	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999966737300366	WITHOUT_CLASSIFICATION	3.326269963260877E-6	TEST
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999980079928893	WITHOUT_CLASSIFICATION	1.992007110614747E-6	TEST
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999998561313257	WITHOUT_CLASSIFICATION	1.4386867436219392E-7	TEST
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999997367000757	WITHOUT_CLASSIFICATION	2.6329992431579233E-7	TEST
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999998936843673	WITHOUT_CLASSIFICATION	1.0631563277456449E-7	TEST
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9999987563983799	WITHOUT_CLASSIFICATION	1.2436016200934866E-6	TEST
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999996208576795	WITHOUT_CLASSIFICATION	3.7914232050143555E-7	TEST
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999983135998456	WITHOUT_CLASSIFICATION	1.686400154464848E-6	TEST
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999999415240772	WITHOUT_CLASSIFICATION	5.8475922837944815E-8	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999998750559754	WITHOUT_CLASSIFICATION	1.2494402452358843E-7	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999998750559754	WITHOUT_CLASSIFICATION	1.2494402452358843E-7	TEST
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999993636143216	WITHOUT_CLASSIFICATION	6.363856784179804E-7	TEST
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.999999593272504	WITHOUT_CLASSIFICATION	4.067274961105403E-7	TEST
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999995747278144	WITHOUT_CLASSIFICATION	4.252721856134426E-7	TEST
// must be a public method	WITHOUT_CLASSIFICATION	0.999999905514932	WITHOUT_CLASSIFICATION	9.448506808611633E-8	TEST
// must be a public class	WITHOUT_CLASSIFICATION	0.9999997145327509	WITHOUT_CLASSIFICATION	2.854672490552724E-7	TEST
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999994244971594	WITHOUT_CLASSIFICATION	5.755028405927391E-7	TEST
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999999986327277	WITHOUT_CLASSIFICATION	1.3672722974125088E-9	TEST
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999999301557008	WITHOUT_CLASSIFICATION	6.984429924451096E-8	TEST
// no matching method found	WITHOUT_CLASSIFICATION	0.9999997851832884	WITHOUT_CLASSIFICATION	2.1481671170126466E-7	TEST
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9997312962659882	WITHOUT_CLASSIFICATION	2.68703734011729E-4	TEST
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999917031428116	WITHOUT_CLASSIFICATION	8.296857188328163E-6	TEST
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999992240695381	WITHOUT_CLASSIFICATION	7.759304617514839E-7	TEST
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999995950247798	WITHOUT_CLASSIFICATION	4.049752202007467E-7	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999946415803629	WITHOUT_CLASSIFICATION	5.35841963709886E-6	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999946415803629	WITHOUT_CLASSIFICATION	5.35841963709886E-6	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999996802981898	WITHOUT_CLASSIFICATION	3.197018102558129E-7	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999997321663638	WITHOUT_CLASSIFICATION	2.678336361197482E-7	TEST
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999010559759268	WITHOUT_CLASSIFICATION	9.894402407320032E-5	TEST
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999999817918236	WITHOUT_CLASSIFICATION	1.8208176429908363E-8	TEST
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999999792445429	WITHOUT_CLASSIFICATION	2.0755457030646145E-8	TEST
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.999999922044222	WITHOUT_CLASSIFICATION	7.795577803774109E-8	TEST
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999993259361512	WITHOUT_CLASSIFICATION	6.740638488132491E-7	TEST
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.99999605823998	WITHOUT_CLASSIFICATION	3.941760020073956E-6	TEST
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999864900343236	WITHOUT_CLASSIFICATION	1.3509965676426583E-5	TEST
/* package scope */	WITHOUT_CLASSIFICATION	0.9999984591480773	WITHOUT_CLASSIFICATION	1.540851922685837E-6	TEST
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999998068084416	WITHOUT_CLASSIFICATION	1.9319155832993957E-7	TEST
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999998694575438	WITHOUT_CLASSIFICATION	1.305424562173344E-7	TEST
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999897081102316	WITHOUT_CLASSIFICATION	1.029188976837967E-5	TEST
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999999858568652	WITHOUT_CLASSIFICATION	1.41431347782489E-8	TEST
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999993721218801	WITHOUT_CLASSIFICATION	6.278781199441371E-7	TEST
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999999562808213	WITHOUT_CLASSIFICATION	4.3719178684097815E-8	TEST
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999999535985733	WITHOUT_CLASSIFICATION	4.640142671951956E-8	TEST
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999995811268021	WITHOUT_CLASSIFICATION	4.1887319794711825E-7	TEST
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999999357905806	WITHOUT_CLASSIFICATION	6.420941935093359E-8	TEST
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999999642757855	WITHOUT_CLASSIFICATION	3.572421448956253E-8	TEST
// should not happen!	WITHOUT_CLASSIFICATION	0.9999983852964263	WITHOUT_CLASSIFICATION	1.6147035736624767E-6	TEST
// start class	WITHOUT_CLASSIFICATION	0.9999995445330608	WITHOUT_CLASSIFICATION	4.554669391846878E-7	TEST
// make getter for handler	WITHOUT_CLASSIFICATION	0.9999940541227955	WITHOUT_CLASSIFICATION	5.945877204509836E-6	TEST
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999939115765832	WITHOUT_CLASSIFICATION	6.088423416838616E-6	TEST
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9982931510261714	WITHOUT_CLASSIFICATION	0.0017068489738285796	TEST
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999998918091969	WITHOUT_CLASSIFICATION	1.0819080313711434E-7	TEST
// create static private method field	WITHOUT_CLASSIFICATION	0.9999995340324507	WITHOUT_CLASSIFICATION	4.6596754925787086E-7	TEST
// load static empty array	WITHOUT_CLASSIFICATION	0.9999998519878303	WITHOUT_CLASSIFICATION	1.4801216977045224E-7	TEST
// box arguments	WITHOUT_CLASSIFICATION	0.9999998334194138	WITHOUT_CLASSIFICATION	1.6658058628203937E-7	TEST
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9999899224669293	WITHOUT_CLASSIFICATION	1.0077533070620769E-5	TEST
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.999999937471996	WITHOUT_CLASSIFICATION	6.252800400198096E-8	TEST
// do a void return	WITHOUT_CLASSIFICATION	0.999999924040854	WITHOUT_CLASSIFICATION	7.595914597970999E-8	TEST
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999999360009437	WITHOUT_CLASSIFICATION	6.399905622917949E-8	TEST
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999982649307737	WITHOUT_CLASSIFICATION	1.735069226320021E-6	TEST
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999995861898876	WITHOUT_CLASSIFICATION	4.1381011236744274E-7	TEST
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999999579475628	WITHOUT_CLASSIFICATION	4.205243715227693E-8	TEST
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999972843327182	WITHOUT_CLASSIFICATION	2.715667281746652E-6	TEST
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999983927629316	WITHOUT_CLASSIFICATION	1.607237068337972E-6	TEST
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999935214648993	WITHOUT_CLASSIFICATION	6.478535100657095E-6	TEST
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999970265634098	WITHOUT_CLASSIFICATION	2.973436590199521E-6	TEST
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999992785950288	WITHOUT_CLASSIFICATION	7.214049712589403E-7	TEST
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9999998444818545	WITHOUT_CLASSIFICATION	1.5551814538817238E-7	TEST
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999912623405038	WITHOUT_CLASSIFICATION	8.73765949623724E-6	TEST
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999999122205386	WITHOUT_CLASSIFICATION	8.777946140511673E-8	TEST
/* NUL */	WITHOUT_CLASSIFICATION	0.9999886182025094	WITHOUT_CLASSIFICATION	1.1381797490540146E-5	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999998208859103	WITHOUT_CLASSIFICATION	1.7911408961901285E-7	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999998038797623	WITHOUT_CLASSIFICATION	1.9612023761850065E-7	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999997979892957	WITHOUT_CLASSIFICATION	2.0201070422015848E-7	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.99999937791537	WITHOUT_CLASSIFICATION	6.220846300354241E-7	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999999432791354	WITHOUT_CLASSIFICATION	5.672086465203982E-8	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999999432791354	WITHOUT_CLASSIFICATION	5.672086465203982E-8	TEST
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999999505788796	WITHOUT_CLASSIFICATION	4.942112052120631E-8	TEST
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.999996703743963	WITHOUT_CLASSIFICATION	3.2962560370801274E-6	TEST
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999967895963155	WITHOUT_CLASSIFICATION	3.2104036844264883E-6	TEST
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999998528184822	WITHOUT_CLASSIFICATION	1.4718151782121818E-7	TEST
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999999300611355	WITHOUT_CLASSIFICATION	6.993886445246208E-8	TEST
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.99999971420628	WITHOUT_CLASSIFICATION	2.8579372007045166E-7	TEST
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999992884304938	WITHOUT_CLASSIFICATION	7.115695061195204E-7	TEST
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999997171453672	WITHOUT_CLASSIFICATION	2.828546328658989E-7	TEST
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999998987864654	WITHOUT_CLASSIFICATION	1.0121353455218635E-7	TEST
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999995385291105	WITHOUT_CLASSIFICATION	4.61470889443911E-7	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999997177996649	WITHOUT_CLASSIFICATION	2.822003351480724E-7	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999997177996649	WITHOUT_CLASSIFICATION	2.822003351480724E-7	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999997177996649	WITHOUT_CLASSIFICATION	2.822003351480724E-7	TEST
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999996730244676	WITHOUT_CLASSIFICATION	3.2697553241590945E-7	TEST
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999998870368612	WITHOUT_CLASSIFICATION	1.129631388943E-7	TEST
// Single node in list	WITHOUT_CLASSIFICATION	0.9999996707410732	WITHOUT_CLASSIFICATION	3.292589268221284E-7	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999999682450128	WITHOUT_CLASSIFICATION	3.175498730666478E-8	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999999682450128	WITHOUT_CLASSIFICATION	3.175498730666478E-8	TEST
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999990182204391	WITHOUT_CLASSIFICATION	9.817795608439523E-7	TEST
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999965376952323	WITHOUT_CLASSIFICATION	3.4623047677698914E-6	TEST
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999987394149356	WITHOUT_CLASSIFICATION	1.2605850644716452E-6	TEST
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999985344672329	WITHOUT_CLASSIFICATION	1.4655327670988447E-6	TEST
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999998090719265	WITHOUT_CLASSIFICATION	1.9092807345751685E-7	TEST
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999983443364852	WITHOUT_CLASSIFICATION	1.6556635148454127E-6	TEST
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999983892485208	WITHOUT_CLASSIFICATION	1.6107514792433356E-6	TEST
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999983501516484	WITHOUT_CLASSIFICATION	1.6498483515868649E-6	TEST
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999996336681519	WITHOUT_CLASSIFICATION	3.6633184803711207E-7	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999998448874681	WITHOUT_CLASSIFICATION	1.5511253188884327E-7	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999998448874681	WITHOUT_CLASSIFICATION	1.5511253188884327E-7	TEST
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999984362789287	WITHOUT_CLASSIFICATION	1.5637210714073128E-6	TEST
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999981407767994	WITHOUT_CLASSIFICATION	1.859223200679458E-6	TEST
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999983659900813	WITHOUT_CLASSIFICATION	1.634009918780976E-6	TEST
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.999999297540216	WITHOUT_CLASSIFICATION	7.024597839775555E-7	TEST
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999997680836259	WITHOUT_CLASSIFICATION	2.3191637406198566E-7	TEST
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999982128209243	WITHOUT_CLASSIFICATION	1.787179075730251E-6	TEST
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999997497093446	WITHOUT_CLASSIFICATION	2.502906553466069E-7	TEST
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999997850204307	WITHOUT_CLASSIFICATION	2.1497956933685265E-7	TEST
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999978220675021	WITHOUT_CLASSIFICATION	2.1779324978083697E-6	TEST
// POP	WITHOUT_CLASSIFICATION	0.9999958933128174	WITHOUT_CLASSIFICATION	4.1066871825929174E-6	TEST
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999998406481165	WITHOUT_CLASSIFICATION	1.5935188347672746E-7	TEST
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999964719847418	WITHOUT_CLASSIFICATION	3.5280152581534464E-6	TEST
// SET_P	WITHOUT_CLASSIFICATION	0.9999973163060669	WITHOUT_CLASSIFICATION	2.6836939331228305E-6	TEST
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999992099030417	WITHOUT_CLASSIFICATION	7.900969583044871E-7	TEST
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9999916948525139	WITHOUT_CLASSIFICATION	8.305147486095793E-6	TEST
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999998323259769	WITHOUT_CLASSIFICATION	1.6767402317666037E-7	TEST
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999994906519575	WITHOUT_CLASSIFICATION	5.093480425558111E-7	TEST
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999901030087701	WITHOUT_CLASSIFICATION	9.896991229888409E-6	TEST
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999998944870251	WITHOUT_CLASSIFICATION	1.0551297483351006E-7	TEST
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999998856125416	WITHOUT_CLASSIFICATION	1.1438745834009695E-7	TEST
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9999788933566759	WITHOUT_CLASSIFICATION	2.110664332409733E-5	TEST
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999992608944757	WITHOUT_CLASSIFICATION	7.391055243823809E-7	TEST
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999997844324904	WITHOUT_CLASSIFICATION	2.1556750953407953E-7	TEST
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999948582162536	WITHOUT_CLASSIFICATION	5.141783746502313E-6	TEST
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999989506369537	WITHOUT_CLASSIFICATION	1.0493630463561298E-6	TEST
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999990064405492	WITHOUT_CLASSIFICATION	9.935594508175102E-7	TEST
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999989624521963	WITHOUT_CLASSIFICATION	1.0375478036668198E-6	TEST
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999979632204308	WITHOUT_CLASSIFICATION	2.036779569211969E-6	TEST
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999990724768196	WITHOUT_CLASSIFICATION	9.275231804732642E-7	TEST
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999981983526183	WITHOUT_CLASSIFICATION	1.8016473816603065E-6	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999861663905504	WITHOUT_CLASSIFICATION	1.3833609449558177E-5	TEST
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999995209302188	WITHOUT_CLASSIFICATION	4.790697811795535E-7	TEST
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999970423273562	WITHOUT_CLASSIFICATION	2.957672643868074E-6	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999861663905504	WITHOUT_CLASSIFICATION	1.3833609449558177E-5	TEST
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999996203081065	WITHOUT_CLASSIFICATION	3.796918934380255E-7	TEST
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999987463610653	WITHOUT_CLASSIFICATION	1.2536389346626088E-6	TEST
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999922152776247	WITHOUT_CLASSIFICATION	7.784722375307448E-6	TEST
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999954662524448	WITHOUT_CLASSIFICATION	4.53374755513343E-6	TEST
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999999184904661	WITHOUT_CLASSIFICATION	8.150953392087485E-8	TEST
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999990703818563	WITHOUT_CLASSIFICATION	9.296181436041169E-7	TEST
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999998166117138	WITHOUT_CLASSIFICATION	1.833882863434343E-7	TEST
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999977637916623	WITHOUT_CLASSIFICATION	2.236208337730965E-6	TEST
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999957053759597	WITHOUT_CLASSIFICATION	4.294624040262987E-6	TEST
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999916410934178	WITHOUT_CLASSIFICATION	8.35890658213745E-6	TEST
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999774104382281	WITHOUT_CLASSIFICATION	2.2589561771871073E-5	TEST
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999937302741099	WITHOUT_CLASSIFICATION	6.269725890120856E-6	TEST
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999953206169675	WITHOUT_CLASSIFICATION	4.67938303243999E-6	TEST
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999978109995927	WITHOUT_CLASSIFICATION	2.1890004072633303E-6	TEST
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999940465336496	WITHOUT_CLASSIFICATION	5.953466350291365E-6	TEST
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.999940262940129	WITHOUT_CLASSIFICATION	5.973705987093502E-5	TEST
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999175462766278	WITHOUT_CLASSIFICATION	8.245372337219792E-5	TEST
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.999997398877805	WITHOUT_CLASSIFICATION	2.6011221949597178E-6	TEST
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999983978869921	WITHOUT_CLASSIFICATION	1.602113007880237E-6	TEST
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999791595108466	WITHOUT_CLASSIFICATION	2.0840489153446515E-5	TEST
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999970925255982	WITHOUT_CLASSIFICATION	2.9074744018966605E-6	TEST
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999983164579206	WITHOUT_CLASSIFICATION	1.6835420793305687E-6	TEST
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999917299955193	WITHOUT_CLASSIFICATION	8.270004480624082E-6	TEST
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999925794511076	WITHOUT_CLASSIFICATION	7.42054889232953E-6	TEST
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999848140331464	WITHOUT_CLASSIFICATION	1.5185966853558213E-5	TEST
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999995035999005	WITHOUT_CLASSIFICATION	4.964000995143011E-7	TEST
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.999988732753962	WITHOUT_CLASSIFICATION	1.1267246037967554E-5	TEST
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999995740888987	WITHOUT_CLASSIFICATION	4.2591110120722545E-7	TEST
// block (primary)	WITHOUT_CLASSIFICATION	0.9999996528493262	WITHOUT_CLASSIFICATION	3.471506737131138E-7	TEST
// block (expr)	WITHOUT_CLASSIFICATION	0.9999995675538972	WITHOUT_CLASSIFICATION	4.3244610292914626E-7	TEST
// hash	WITHOUT_CLASSIFICATION	0.9999964767478089	WITHOUT_CLASSIFICATION	3.5232521910009924E-6	TEST
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9999769808310137	WITHOUT_CLASSIFICATION	2.301916898639107E-5	TEST
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9998384170716509	WITHOUT_CLASSIFICATION	1.6158292834907135E-4	TEST
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999997464344147	WITHOUT_CLASSIFICATION	2.535655853063122E-7	TEST
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999996569650085	WITHOUT_CLASSIFICATION	3.430349915886401E-7	TEST
// binary	WITHOUT_CLASSIFICATION	0.9999988450021987	WITHOUT_CLASSIFICATION	1.154997801317063E-6	TEST
// decimal	WITHOUT_CLASSIFICATION	0.9999997079167506	WITHOUT_CLASSIFICATION	2.92083249395493E-7	TEST
//Octal	WITHOUT_CLASSIFICATION	0.9999840805131626	WITHOUT_CLASSIFICATION	1.5919486837467544E-5	TEST
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999996119953393	WITHOUT_CLASSIFICATION	3.8800466069821016E-7	TEST
// backslash	WITHOUT_CLASSIFICATION	0.9999992769851067	WITHOUT_CLASSIFICATION	7.230148931943422E-7	TEST
// newline	WITHOUT_CLASSIFICATION	0.9999987674540295	WITHOUT_CLASSIFICATION	1.2325459705026505E-6	TEST
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999989243649716	WITHOUT_CLASSIFICATION	1.0756350283975944E-6	TEST
// form feed	WITHOUT_CLASSIFICATION	0.9999932654222777	WITHOUT_CLASSIFICATION	6.734577722228083E-6	TEST
// vertical tab	WITHOUT_CLASSIFICATION	0.999999673574642	WITHOUT_CLASSIFICATION	3.2642535797069567E-7	TEST
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999993379567985	WITHOUT_CLASSIFICATION	6.62043201476372E-7	TEST
// escape	WITHOUT_CLASSIFICATION	0.9999991413994723	WITHOUT_CLASSIFICATION	8.586005275682497E-7	TEST
// hex constant	WITHOUT_CLASSIFICATION	0.9999998767557919	WITHOUT_CLASSIFICATION	1.2324420807176304E-7	TEST
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999993808543367	WITHOUT_CLASSIFICATION	6.191456632429817E-7	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999967185317623	WITHOUT_CLASSIFICATION	3.281468237661192E-6	TEST
// space	WITHOUT_CLASSIFICATION	0.9999995498325864	WITHOUT_CLASSIFICATION	4.5016741359175823E-7	TEST
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999723893237201	WITHOUT_CLASSIFICATION	2.7610676279787167E-5	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999983472284907	WITHOUT_CLASSIFICATION	1.6527715093968762E-6	TEST
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999977768774942	WITHOUT_CLASSIFICATION	2.2231225057867337E-6	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999967185317623	WITHOUT_CLASSIFICATION	3.281468237661192E-6	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9998728219464481	WITHOUT_CLASSIFICATION	1.2717805355197138E-4	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9998728219464481	WITHOUT_CLASSIFICATION	1.2717805355197138E-4	TEST
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999939566462073	WITHOUT_CLASSIFICATION	6.043353792689879E-6	TEST
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999993911767847	WITHOUT_CLASSIFICATION	6.088232152343065E-7	TEST
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.999999856561558	WITHOUT_CLASSIFICATION	1.4343844196987523E-7	TEST
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999936043087947	WITHOUT_CLASSIFICATION	6.3956912052972906E-6	TEST
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999972807813325	WITHOUT_CLASSIFICATION	2.719218667480036E-6	TEST
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999992084890118	WITHOUT_CLASSIFICATION	7.915109881006767E-7	TEST
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.999999695417949	WITHOUT_CLASSIFICATION	3.045820509949444E-7	TEST
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9969888178173452	WITHOUT_CLASSIFICATION	0.0030111821826549075	TEST
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999995991160213	WITHOUT_CLASSIFICATION	4.008839787308402E-7	TEST
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999846946029016	WITHOUT_CLASSIFICATION	1.53053970983606E-5	TEST
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.999999683377909	WITHOUT_CLASSIFICATION	3.166220909875499E-7	TEST
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999999325490498	WITHOUT_CLASSIFICATION	6.745095024489744E-8	TEST
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999989557108789	WITHOUT_CLASSIFICATION	1.0442891210917175E-6	TEST
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999977521941891	WITHOUT_CLASSIFICATION	2.2478058109997217E-6	TEST
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999939603886185	WITHOUT_CLASSIFICATION	6.039611381499259E-6	TEST
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999925178626609	WITHOUT_CLASSIFICATION	7.482137339089877E-6	TEST
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999996071530421	WITHOUT_CLASSIFICATION	3.928469579446666E-7	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999755621598243	WITHOUT_CLASSIFICATION	2.4437840175778603E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999755621598243	WITHOUT_CLASSIFICATION	2.4437840175778603E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999755621598243	WITHOUT_CLASSIFICATION	2.4437840175778603E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999755621598243	WITHOUT_CLASSIFICATION	2.4437840175778603E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999755621598243	WITHOUT_CLASSIFICATION	2.4437840175778603E-5	TEST
// line 329	WITHOUT_CLASSIFICATION	0.9999982209651792	WITHOUT_CLASSIFICATION	1.7790348208849977E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999984341315402	WITHOUT_CLASSIFICATION	1.5658684597346509E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999909363175934	WITHOUT_CLASSIFICATION	9.063682406632527E-6	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999998441097782	WITHOUT_CLASSIFICATION	1.5589022186533922E-7	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999972328414601	WITHOUT_CLASSIFICATION	2.7671585398732E-6	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999998481605641	WITHOUT_CLASSIFICATION	1.518394358293568E-7	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999988622279204	WITHOUT_CLASSIFICATION	1.1377720795748512E-6	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999995333058488	WITHOUT_CLASSIFICATION	4.6669415118294967E-7	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999996315781762	WITHOUT_CLASSIFICATION	3.6842182372608014E-7	TEST
// line 271	WITHOUT_CLASSIFICATION	0.99999859399433	WITHOUT_CLASSIFICATION	1.4060056699781182E-6	TEST
// line 274	WITHOUT_CLASSIFICATION	0.9999987120210009	WITHOUT_CLASSIFICATION	1.287978999135947E-6	TEST
// line 303	WITHOUT_CLASSIFICATION	0.9999982403144503	WITHOUT_CLASSIFICATION	1.7596855496487453E-6	TEST
// line 311	WITHOUT_CLASSIFICATION	0.9999981575382636	WITHOUT_CLASSIFICATION	1.8424617363378188E-6	TEST
// line 314	WITHOUT_CLASSIFICATION	0.9999985215044613	WITHOUT_CLASSIFICATION	1.4784955386825506E-6	TEST
// line 317	WITHOUT_CLASSIFICATION	0.9999984631971988	WITHOUT_CLASSIFICATION	1.5368028012963628E-6	TEST
// line 332	WITHOUT_CLASSIFICATION	0.9999981608889806	WITHOUT_CLASSIFICATION	1.8391110193146242E-6	TEST
// line 338	WITHOUT_CLASSIFICATION	0.9999982734609378	WITHOUT_CLASSIFICATION	1.726539062208677E-6	TEST
// line 341	WITHOUT_CLASSIFICATION	0.9999982541457684	WITHOUT_CLASSIFICATION	1.745854231624247E-6	TEST
// line 344	WITHOUT_CLASSIFICATION	0.9999983114980363	WITHOUT_CLASSIFICATION	1.688501963661437E-6	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999981604367142	WITHOUT_CLASSIFICATION	1.8395632858335745E-6	TEST
// line 358	WITHOUT_CLASSIFICATION	0.999998251502191	WITHOUT_CLASSIFICATION	1.7484978090125188E-6	TEST
// line 367	WITHOUT_CLASSIFICATION	0.9999983101568327	WITHOUT_CLASSIFICATION	1.6898431672177579E-6	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999981704927661	WITHOUT_CLASSIFICATION	1.829507233894992E-6	TEST
// line 378	WITHOUT_CLASSIFICATION	0.9999982750840696	WITHOUT_CLASSIFICATION	1.7249159305271753E-6	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999982775393375	WITHOUT_CLASSIFICATION	1.7224606625393862E-6	TEST
// line 407	WITHOUT_CLASSIFICATION	0.9999989253283353	WITHOUT_CLASSIFICATION	1.0746716645703293E-6	TEST
// line 411	WITHOUT_CLASSIFICATION	0.9999987597284646	WITHOUT_CLASSIFICATION	1.2402715354504316E-6	TEST
// line 414	WITHOUT_CLASSIFICATION	0.9999989432354597	WITHOUT_CLASSIFICATION	1.0567645403846956E-6	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999989654827276	WITHOUT_CLASSIFICATION	1.034517272424331E-6	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999987379323664	WITHOUT_CLASSIFICATION	1.2620676335691674E-6	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999987776521374	WITHOUT_CLASSIFICATION	1.2223478625960636E-6	TEST
// line 434	WITHOUT_CLASSIFICATION	0.9999986380481392	WITHOUT_CLASSIFICATION	1.3619518608786312E-6	TEST
// line 443	WITHOUT_CLASSIFICATION	0.9999986527196754	WITHOUT_CLASSIFICATION	1.347280324676312E-6	TEST
// line 446	WITHOUT_CLASSIFICATION	0.999998841222748	WITHOUT_CLASSIFICATION	1.158777252029341E-6	TEST
// line 452	WITHOUT_CLASSIFICATION	0.9999987633719075	WITHOUT_CLASSIFICATION	1.2366280924142419E-6	TEST
// line 457	WITHOUT_CLASSIFICATION	0.9999988333871573	WITHOUT_CLASSIFICATION	1.1666128426410167E-6	TEST
// line 464	WITHOUT_CLASSIFICATION	0.9999988320518869	WITHOUT_CLASSIFICATION	1.167948113130178E-6	TEST
// line 467	WITHOUT_CLASSIFICATION	0.9999988618922238	WITHOUT_CLASSIFICATION	1.138107776242345E-6	TEST
// line 470	WITHOUT_CLASSIFICATION	0.9999989062069612	WITHOUT_CLASSIFICATION	1.0937930388699312E-6	TEST
// line 479	WITHOUT_CLASSIFICATION	0.9999988726641403	WITHOUT_CLASSIFICATION	1.1273358595890205E-6	TEST
// line 484	WITHOUT_CLASSIFICATION	0.9999988119102934	WITHOUT_CLASSIFICATION	1.1880897066229134E-6	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999988584258677	WITHOUT_CLASSIFICATION	1.1415741323668171E-6	TEST
// line 492	WITHOUT_CLASSIFICATION	0.9999988152345539	WITHOUT_CLASSIFICATION	1.184765446141593E-6	TEST
// line 498	WITHOUT_CLASSIFICATION	0.9999988799957426	WITHOUT_CLASSIFICATION	1.1200042573653333E-6	TEST
// line 501	WITHOUT_CLASSIFICATION	0.9999987782870754	WITHOUT_CLASSIFICATION	1.2217129245727069E-6	TEST
// line 504	WITHOUT_CLASSIFICATION	0.9999988893860047	WITHOUT_CLASSIFICATION	1.1106139953710668E-6	TEST
// line 507	WITHOUT_CLASSIFICATION	0.9999988356804593	WITHOUT_CLASSIFICATION	1.1643195407161398E-6	TEST
// line 510	WITHOUT_CLASSIFICATION	0.999998982862017	WITHOUT_CLASSIFICATION	1.0171379829102037E-6	TEST
// line 519	WITHOUT_CLASSIFICATION	0.9999989436370704	WITHOUT_CLASSIFICATION	1.0563629295519678E-6	TEST
// line 525	WITHOUT_CLASSIFICATION	0.9999986487550451	WITHOUT_CLASSIFICATION	1.3512449549054586E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999909363175934	WITHOUT_CLASSIFICATION	9.063682406632527E-6	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999985851994014	WITHOUT_CLASSIFICATION	1.4148005985252272E-6	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999988890105928	WITHOUT_CLASSIFICATION	1.110989407229008E-6	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999986398785007	WITHOUT_CLASSIFICATION	1.360121499343226E-6	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999988302710219	WITHOUT_CLASSIFICATION	1.1697289780716381E-6	TEST
// line 556	WITHOUT_CLASSIFICATION	0.9999987732623034	WITHOUT_CLASSIFICATION	1.2267376966806733E-6	TEST
// line 559	WITHOUT_CLASSIFICATION	0.9999987867933225	WITHOUT_CLASSIFICATION	1.2132066774086287E-6	TEST
// line 563	WITHOUT_CLASSIFICATION	0.9999986209303157	WITHOUT_CLASSIFICATION	1.3790696844152803E-6	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999987681876861	WITHOUT_CLASSIFICATION	1.231812314020029E-6	TEST
// line 569	WITHOUT_CLASSIFICATION	0.9999988283662387	WITHOUT_CLASSIFICATION	1.1716337613731643E-6	TEST
// line 575	WITHOUT_CLASSIFICATION	0.9999987287924185	WITHOUT_CLASSIFICATION	1.2712075815491868E-6	TEST
// line 578	WITHOUT_CLASSIFICATION	0.9999987666322738	WITHOUT_CLASSIFICATION	1.2333677261154054E-6	TEST
// line 587	WITHOUT_CLASSIFICATION	0.9999987746040092	WITHOUT_CLASSIFICATION	1.2253959907949074E-6	TEST
// line 596	WITHOUT_CLASSIFICATION	0.9999988282602096	WITHOUT_CLASSIFICATION	1.1717397904501172E-6	TEST
// line 604	WITHOUT_CLASSIFICATION	0.9999989133361502	WITHOUT_CLASSIFICATION	1.0866638497697418E-6	TEST
// line 607	WITHOUT_CLASSIFICATION	0.9999988612527546	WITHOUT_CLASSIFICATION	1.138747245340606E-6	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999990052579542	WITHOUT_CLASSIFICATION	9.947420459346135E-7	TEST
// line 613	WITHOUT_CLASSIFICATION	0.9999987689141788	WITHOUT_CLASSIFICATION	1.2310858212542078E-6	TEST
// line 616	WITHOUT_CLASSIFICATION	0.9999989024634122	WITHOUT_CLASSIFICATION	1.0975365877863855E-6	TEST
// line 634	WITHOUT_CLASSIFICATION	0.9999986663526538	WITHOUT_CLASSIFICATION	1.3336473462994203E-6	TEST
// line 638	WITHOUT_CLASSIFICATION	0.9999986272198428	WITHOUT_CLASSIFICATION	1.372780157232634E-6	TEST
// line 643	WITHOUT_CLASSIFICATION	0.9999986765766863	WITHOUT_CLASSIFICATION	1.323423313719177E-6	TEST
// line 646	WITHOUT_CLASSIFICATION	0.9999988172469753	WITHOUT_CLASSIFICATION	1.1827530246830147E-6	TEST
// line 655	WITHOUT_CLASSIFICATION	0.9999987593761327	WITHOUT_CLASSIFICATION	1.240623867238195E-6	TEST
// line 660	WITHOUT_CLASSIFICATION	0.9999988327501799	WITHOUT_CLASSIFICATION	1.16724982015179E-6	TEST
// line 667	WITHOUT_CLASSIFICATION	0.9999987705990976	WITHOUT_CLASSIFICATION	1.2294009024591367E-6	TEST
// line 670	WITHOUT_CLASSIFICATION	0.9999988629912647	WITHOUT_CLASSIFICATION	1.137008735279216E-6	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999987238784097	WITHOUT_CLASSIFICATION	1.2761215903061096E-6	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999988009206896	WITHOUT_CLASSIFICATION	1.1990793104173806E-6	TEST
// line 701	WITHOUT_CLASSIFICATION	0.9999987879545074	WITHOUT_CLASSIFICATION	1.2120454927056816E-6	TEST
// line 717	WITHOUT_CLASSIFICATION	0.9999988823521201	WITHOUT_CLASSIFICATION	1.1176478799106625E-6	TEST
// line 720	WITHOUT_CLASSIFICATION	0.9999986671749461	WITHOUT_CLASSIFICATION	1.3328250538215575E-6	TEST
// line 726	WITHOUT_CLASSIFICATION	0.9999987093639464	WITHOUT_CLASSIFICATION	1.2906360534709785E-6	TEST
// line 729	WITHOUT_CLASSIFICATION	0.9999987317605187	WITHOUT_CLASSIFICATION	1.2682394813138752E-6	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999985130036633	WITHOUT_CLASSIFICATION	1.4869963367421478E-6	TEST
// line 735	WITHOUT_CLASSIFICATION	0.9999985696181134	WITHOUT_CLASSIFICATION	1.4303818866161979E-6	TEST
// line 738	WITHOUT_CLASSIFICATION	0.9999986036970451	WITHOUT_CLASSIFICATION	1.3963029549263421E-6	TEST
// line 751	WITHOUT_CLASSIFICATION	0.9999986943515663	WITHOUT_CLASSIFICATION	1.3056484336094015E-6	TEST
// line 754	WITHOUT_CLASSIFICATION	0.9999988010831001	WITHOUT_CLASSIFICATION	1.1989168998141506E-6	TEST
// line 757	WITHOUT_CLASSIFICATION	0.9999987350652974	WITHOUT_CLASSIFICATION	1.2649347026745671E-6	TEST
// line 760	WITHOUT_CLASSIFICATION	0.9999988537823149	WITHOUT_CLASSIFICATION	1.1462176850035527E-6	TEST
// line 763	WITHOUT_CLASSIFICATION	0.9999986158523925	WITHOUT_CLASSIFICATION	1.3841476075060584E-6	TEST
// line 769	WITHOUT_CLASSIFICATION	0.9999988240638292	WITHOUT_CLASSIFICATION	1.1759361706709553E-6	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999986701821254	WITHOUT_CLASSIFICATION	1.329817874502288E-6	TEST
// line 775	WITHOUT_CLASSIFICATION	0.9999987259743666	WITHOUT_CLASSIFICATION	1.274025633391297E-6	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999987367169172	WITHOUT_CLASSIFICATION	1.2632830827936414E-6	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999987563738046	WITHOUT_CLASSIFICATION	1.243626195457064E-6	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999987409662681	WITHOUT_CLASSIFICATION	1.2590337319736275E-6	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999988447628695	WITHOUT_CLASSIFICATION	1.1552371304852215E-6	TEST
// line 797	WITHOUT_CLASSIFICATION	0.9999987928583223	WITHOUT_CLASSIFICATION	1.207141677665059E-6	TEST
// line 803	WITHOUT_CLASSIFICATION	0.9999985566486411	WITHOUT_CLASSIFICATION	1.443351358807932E-6	TEST
// line 806	WITHOUT_CLASSIFICATION	0.9999988740312741	WITHOUT_CLASSIFICATION	1.125968725912889E-6	TEST
// line 809	WITHOUT_CLASSIFICATION	0.999998884542536	WITHOUT_CLASSIFICATION	1.1154574639784024E-6	TEST
// line 815	WITHOUT_CLASSIFICATION	0.9999988997171135	WITHOUT_CLASSIFICATION	1.1002828864408936E-6	TEST
// line 818	WITHOUT_CLASSIFICATION	0.9999989593383604	WITHOUT_CLASSIFICATION	1.040661639656661E-6	TEST
// line 821	WITHOUT_CLASSIFICATION	0.9999986618169618	WITHOUT_CLASSIFICATION	1.3381830381289807E-6	TEST
// line 824	WITHOUT_CLASSIFICATION	0.9999987547817126	WITHOUT_CLASSIFICATION	1.2452182872978114E-6	TEST
// line 830	WITHOUT_CLASSIFICATION	0.9999987004259261	WITHOUT_CLASSIFICATION	1.299574073992769E-6	TEST
// line 833	WITHOUT_CLASSIFICATION	0.9999985835584271	WITHOUT_CLASSIFICATION	1.4164415729837578E-6	TEST
// line 836	WITHOUT_CLASSIFICATION	0.999998621965978	WITHOUT_CLASSIFICATION	1.3780340220138195E-6	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999986351479176	WITHOUT_CLASSIFICATION	1.364852082315591E-6	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999987519752128	WITHOUT_CLASSIFICATION	1.248024787119408E-6	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999987933279583	WITHOUT_CLASSIFICATION	1.2066720417078584E-6	TEST
// line 852	WITHOUT_CLASSIFICATION	0.9999986981228646	WITHOUT_CLASSIFICATION	1.3018771354463365E-6	TEST
// line 858	WITHOUT_CLASSIFICATION	0.9999987402063217	WITHOUT_CLASSIFICATION	1.2597936782031258E-6	TEST
// line 861	WITHOUT_CLASSIFICATION	0.9999987286807785	WITHOUT_CLASSIFICATION	1.2713192214552065E-6	TEST
// line 868	WITHOUT_CLASSIFICATION	0.9999987622538569	WITHOUT_CLASSIFICATION	1.237746143214507E-6	TEST
// line 871	WITHOUT_CLASSIFICATION	0.9999987120122986	WITHOUT_CLASSIFICATION	1.2879877013627272E-6	TEST
// line 876	WITHOUT_CLASSIFICATION	0.9999987952123929	WITHOUT_CLASSIFICATION	1.2047876070638433E-6	TEST
// line 879	WITHOUT_CLASSIFICATION	0.9999988125410073	WITHOUT_CLASSIFICATION	1.187458992640483E-6	TEST
// line 883	WITHOUT_CLASSIFICATION	0.9999985773483392	WITHOUT_CLASSIFICATION	1.4226516607963922E-6	TEST
// line 893	WITHOUT_CLASSIFICATION	0.999998655149697	WITHOUT_CLASSIFICATION	1.3448503029156913E-6	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999988323031664	WITHOUT_CLASSIFICATION	1.167696833583515E-6	TEST
// line 899	WITHOUT_CLASSIFICATION	0.9999987870879059	WITHOUT_CLASSIFICATION	1.2129120941137096E-6	TEST
// line 903	WITHOUT_CLASSIFICATION	0.9999985896375655	WITHOUT_CLASSIFICATION	1.410362434509763E-6	TEST
// line 907	WITHOUT_CLASSIFICATION	0.9999988839410535	WITHOUT_CLASSIFICATION	1.1160589464946E-6	TEST
// line 915	WITHOUT_CLASSIFICATION	0.9999989304828562	WITHOUT_CLASSIFICATION	1.0695171437606914E-6	TEST
// line 920	WITHOUT_CLASSIFICATION	0.9999987097215625	WITHOUT_CLASSIFICATION	1.2902784375587512E-6	TEST
// line 923	WITHOUT_CLASSIFICATION	0.9999985548555315	WITHOUT_CLASSIFICATION	1.4451444685011846E-6	TEST
// line 926	WITHOUT_CLASSIFICATION	0.9999987505748349	WITHOUT_CLASSIFICATION	1.2494251649908918E-6	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999985670378263	WITHOUT_CLASSIFICATION	1.4329621737061978E-6	TEST
// line 936	WITHOUT_CLASSIFICATION	0.9999986680680979	WITHOUT_CLASSIFICATION	1.3319319020649403E-6	TEST
// line 940	WITHOUT_CLASSIFICATION	0.9999989319806736	WITHOUT_CLASSIFICATION	1.0680193263468342E-6	TEST
// line 944	WITHOUT_CLASSIFICATION	0.999998834361321	WITHOUT_CLASSIFICATION	1.1656386791148233E-6	TEST
// line 948	WITHOUT_CLASSIFICATION	0.9999988550650314	WITHOUT_CLASSIFICATION	1.1449349686036995E-6	TEST
// line 956	WITHOUT_CLASSIFICATION	0.9999988399435754	WITHOUT_CLASSIFICATION	1.1600564246228212E-6	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999988938211768	WITHOUT_CLASSIFICATION	1.1061788231406367E-6	TEST
// line 964	WITHOUT_CLASSIFICATION	0.999998873951726	WITHOUT_CLASSIFICATION	1.1260482738659838E-6	TEST
// line 967	WITHOUT_CLASSIFICATION	0.9999988349218614	WITHOUT_CLASSIFICATION	1.165078138710398E-6	TEST
// line 972	WITHOUT_CLASSIFICATION	0.9999987510440216	WITHOUT_CLASSIFICATION	1.2489559783518746E-6	TEST
// line 978	WITHOUT_CLASSIFICATION	0.9999988207867919	WITHOUT_CLASSIFICATION	1.1792132080798002E-6	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999988917681645	WITHOUT_CLASSIFICATION	1.1082318355150486E-6	TEST
// line 984	WITHOUT_CLASSIFICATION	0.9999988559688184	WITHOUT_CLASSIFICATION	1.1440311815748867E-6	TEST
// line 986	WITHOUT_CLASSIFICATION	0.9999988328402749	WITHOUT_CLASSIFICATION	1.1671597251122235E-6	TEST
// line 996	WITHOUT_CLASSIFICATION	0.9999988046392193	WITHOUT_CLASSIFICATION	1.1953607806501576E-6	TEST
// line 1001	WITHOUT_CLASSIFICATION	0.9999986969180021	WITHOUT_CLASSIFICATION	1.3030819979146993E-6	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999989670929974	WITHOUT_CLASSIFICATION	1.0329070025349683E-6	TEST
// line 1008	WITHOUT_CLASSIFICATION	0.9999987906648512	WITHOUT_CLASSIFICATION	1.2093351488037985E-6	TEST
// line 1014	WITHOUT_CLASSIFICATION	0.9999989927492114	WITHOUT_CLASSIFICATION	1.0072507885616786E-6	TEST
// line 1029	WITHOUT_CLASSIFICATION	0.9999989295985733	WITHOUT_CLASSIFICATION	1.070401426781484E-6	TEST
// line 1032	WITHOUT_CLASSIFICATION	0.9999986213718804	WITHOUT_CLASSIFICATION	1.3786281194555945E-6	TEST
// line 1034	WITHOUT_CLASSIFICATION	0.9999987425821313	WITHOUT_CLASSIFICATION	1.2574178687213765E-6	TEST
// line 1045	WITHOUT_CLASSIFICATION	0.9999990113131281	WITHOUT_CLASSIFICATION	9.886868719249478E-7	TEST
// line 1048	WITHOUT_CLASSIFICATION	0.9999990198663531	WITHOUT_CLASSIFICATION	9.801336469972058E-7	TEST
// line 1051	WITHOUT_CLASSIFICATION	0.9999986052779316	WITHOUT_CLASSIFICATION	1.3947220683742678E-6	TEST
// line 1058	WITHOUT_CLASSIFICATION	0.9999988432663867	WITHOUT_CLASSIFICATION	1.156733613344284E-6	TEST
// line 1070	WITHOUT_CLASSIFICATION	0.9999989596804977	WITHOUT_CLASSIFICATION	1.0403195024058093E-6	TEST
// line 1073	WITHOUT_CLASSIFICATION	0.9999988188857842	WITHOUT_CLASSIFICATION	1.1811142158153937E-6	TEST
// line 1076	WITHOUT_CLASSIFICATION	0.9999989814270951	WITHOUT_CLASSIFICATION	1.0185729049156761E-6	TEST
// line 1079	WITHOUT_CLASSIFICATION	0.9999989961726813	WITHOUT_CLASSIFICATION	1.00382731870708E-6	TEST
// line 1082	WITHOUT_CLASSIFICATION	0.9999988162990748	WITHOUT_CLASSIFICATION	1.1837009252032933E-6	TEST
// line 1089	WITHOUT_CLASSIFICATION	0.9999988921005564	WITHOUT_CLASSIFICATION	1.1078994435973742E-6	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999990032193975	WITHOUT_CLASSIFICATION	9.967806025378651E-7	TEST
// line 1100	WITHOUT_CLASSIFICATION	0.9999988964581773	WITHOUT_CLASSIFICATION	1.1035418226755996E-6	TEST
// line 1103	WITHOUT_CLASSIFICATION	0.9999986787334336	WITHOUT_CLASSIFICATION	1.3212665664223793E-6	TEST
// line 1107	WITHOUT_CLASSIFICATION	0.9999989526304588	WITHOUT_CLASSIFICATION	1.047369541257E-6	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.999998604398151	WITHOUT_CLASSIFICATION	1.3956018489900464E-6	TEST
// line 1113	WITHOUT_CLASSIFICATION	0.9999986757012838	WITHOUT_CLASSIFICATION	1.3242987161900096E-6	TEST
// line 1115	WITHOUT_CLASSIFICATION	0.9999988305619062	WITHOUT_CLASSIFICATION	1.1694380937895999E-6	TEST
// line 1119	WITHOUT_CLASSIFICATION	0.9999988883917241	WITHOUT_CLASSIFICATION	1.1116082758414444E-6	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999987916338136	WITHOUT_CLASSIFICATION	1.208366186377101E-6	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.999998682184104	WITHOUT_CLASSIFICATION	1.3178158959337535E-6	TEST
// line 1135	WITHOUT_CLASSIFICATION	0.9999986734575205	WITHOUT_CLASSIFICATION	1.3265424795162462E-6	TEST
// line 1137	WITHOUT_CLASSIFICATION	0.999998695712735	WITHOUT_CLASSIFICATION	1.3042872649324627E-6	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999989827952515	WITHOUT_CLASSIFICATION	1.0172047485204861E-6	TEST
// line 1151	WITHOUT_CLASSIFICATION	0.9999986191077843	WITHOUT_CLASSIFICATION	1.3808922157078282E-6	TEST
// line 1154	WITHOUT_CLASSIFICATION	0.9999988930221063	WITHOUT_CLASSIFICATION	1.106977893684647E-6	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.999998854015073	WITHOUT_CLASSIFICATION	1.1459849268638132E-6	TEST
// line 1164	WITHOUT_CLASSIFICATION	0.9999989261144784	WITHOUT_CLASSIFICATION	1.073885521599045E-6	TEST
// line 1175	WITHOUT_CLASSIFICATION	0.9999988450812667	WITHOUT_CLASSIFICATION	1.1549187333713594E-6	TEST
// line 1178	WITHOUT_CLASSIFICATION	0.9999988640422455	WITHOUT_CLASSIFICATION	1.1359577545797249E-6	TEST
// line 1187	WITHOUT_CLASSIFICATION	0.9999989472139763	WITHOUT_CLASSIFICATION	1.0527860237449398E-6	TEST
// line 1189	WITHOUT_CLASSIFICATION	0.9999989752256018	WITHOUT_CLASSIFICATION	1.0247743981242769E-6	TEST
// line 1193	WITHOUT_CLASSIFICATION	0.9999987555540836	WITHOUT_CLASSIFICATION	1.2444459164524408E-6	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.999998849483161	WITHOUT_CLASSIFICATION	1.1505168391191E-6	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999987952570698	WITHOUT_CLASSIFICATION	1.204742930220147E-6	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999988891275735	WITHOUT_CLASSIFICATION	1.1108724264991353E-6	TEST
// line 1214	WITHOUT_CLASSIFICATION	0.9999988447773677	WITHOUT_CLASSIFICATION	1.1552226322933143E-6	TEST
// line 1234	WITHOUT_CLASSIFICATION	0.9999987039986968	WITHOUT_CLASSIFICATION	1.2960013031051146E-6	TEST
// line 1239	WITHOUT_CLASSIFICATION	0.9999986864360074	WITHOUT_CLASSIFICATION	1.3135639925186972E-6	TEST
// line 1243	WITHOUT_CLASSIFICATION	0.9999986940176605	WITHOUT_CLASSIFICATION	1.3059823394548413E-6	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999988607345669	WITHOUT_CLASSIFICATION	1.1392654331651046E-6	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999985567831253	WITHOUT_CLASSIFICATION	1.4432168745790872E-6	TEST
// line 1263	WITHOUT_CLASSIFICATION	0.9999986596926174	WITHOUT_CLASSIFICATION	1.3403073826269865E-6	TEST
// line 1269	WITHOUT_CLASSIFICATION	0.9999988613093632	WITHOUT_CLASSIFICATION	1.1386906368275217E-6	TEST
// line 1280	WITHOUT_CLASSIFICATION	0.9999988907976706	WITHOUT_CLASSIFICATION	1.109202329430672E-6	TEST
// line 1283	WITHOUT_CLASSIFICATION	0.9999986449754781	WITHOUT_CLASSIFICATION	1.3550245219460846E-6	TEST
// line 1290	WITHOUT_CLASSIFICATION	0.999998912379538	WITHOUT_CLASSIFICATION	1.0876204619701259E-6	TEST
// line 1296	WITHOUT_CLASSIFICATION	0.9999988651964135	WITHOUT_CLASSIFICATION	1.134803586526492E-6	TEST
// line 1299	WITHOUT_CLASSIFICATION	0.9999988212548354	WITHOUT_CLASSIFICATION	1.1787451645909363E-6	TEST
// line 1302	WITHOUT_CLASSIFICATION	0.9999987295557415	WITHOUT_CLASSIFICATION	1.2704442583694554E-6	TEST
// line 1309	WITHOUT_CLASSIFICATION	0.9999988353558472	WITHOUT_CLASSIFICATION	1.1646441528473806E-6	TEST
// line 1313	WITHOUT_CLASSIFICATION	0.999998655011013	WITHOUT_CLASSIFICATION	1.3449889869732338E-6	TEST
// line 1315	WITHOUT_CLASSIFICATION	0.9999986669207223	WITHOUT_CLASSIFICATION	1.3330792777363762E-6	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999986006131344	WITHOUT_CLASSIFICATION	1.3993868655754073E-6	TEST
// line 1328	WITHOUT_CLASSIFICATION	0.9999986203474733	WITHOUT_CLASSIFICATION	1.3796525266884447E-6	TEST
// line 1335	WITHOUT_CLASSIFICATION	0.9999986666476921	WITHOUT_CLASSIFICATION	1.3333523078853704E-6	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999987576607192	WITHOUT_CLASSIFICATION	1.2423392807371513E-6	TEST
// line 1352	WITHOUT_CLASSIFICATION	0.9999986142381279	WITHOUT_CLASSIFICATION	1.3857618721677965E-6	TEST
// line 1358	WITHOUT_CLASSIFICATION	0.9999986902546188	WITHOUT_CLASSIFICATION	1.3097453812265387E-6	TEST
// line 1374	WITHOUT_CLASSIFICATION	0.9999987505488059	WITHOUT_CLASSIFICATION	1.2494511940214313E-6	TEST
// line 1381	WITHOUT_CLASSIFICATION	0.9999984599429197	WITHOUT_CLASSIFICATION	1.5400570803744972E-6	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999987285202764	WITHOUT_CLASSIFICATION	1.2714797236081617E-6	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999986661550899	WITHOUT_CLASSIFICATION	1.333844910106895E-6	TEST
// line 1415	WITHOUT_CLASSIFICATION	0.9999988865573629	WITHOUT_CLASSIFICATION	1.113442637042075E-6	TEST
// line 1431	WITHOUT_CLASSIFICATION	0.999998506763624	WITHOUT_CLASSIFICATION	1.4932363760829762E-6	TEST
// line 1434	WITHOUT_CLASSIFICATION	0.9999987334626622	WITHOUT_CLASSIFICATION	1.2665373378542032E-6	TEST
// line 1440	WITHOUT_CLASSIFICATION	0.9999989770802159	WITHOUT_CLASSIFICATION	1.0229197841489202E-6	TEST
// line 1443	WITHOUT_CLASSIFICATION	0.9999987470348124	WITHOUT_CLASSIFICATION	1.2529651876233683E-6	TEST
// line 1453	WITHOUT_CLASSIFICATION	0.9999987588964612	WITHOUT_CLASSIFICATION	1.2411035389288248E-6	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999989480467137	WITHOUT_CLASSIFICATION	1.0519532862340426E-6	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.9999988828862301	WITHOUT_CLASSIFICATION	1.1171137699770954E-6	TEST
// line 1465	WITHOUT_CLASSIFICATION	0.9999989320247379	WITHOUT_CLASSIFICATION	1.0679752620476242E-6	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.999998983813218	WITHOUT_CLASSIFICATION	1.0161867820563953E-6	TEST
// line 1477	WITHOUT_CLASSIFICATION	0.9999988987997986	WITHOUT_CLASSIFICATION	1.1012002013560233E-6	TEST
// line 1480	WITHOUT_CLASSIFICATION	0.9999989918364875	WITHOUT_CLASSIFICATION	1.0081635124630822E-6	TEST
// line 1485	WITHOUT_CLASSIFICATION	0.9999989140580172	WITHOUT_CLASSIFICATION	1.0859419828121673E-6	TEST
// line 1488	WITHOUT_CLASSIFICATION	0.9999989012000579	WITHOUT_CLASSIFICATION	1.0987999421558547E-6	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999989807186804	WITHOUT_CLASSIFICATION	1.0192813195739987E-6	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999988636462115	WITHOUT_CLASSIFICATION	1.1363537885181543E-6	TEST
// line 1510	WITHOUT_CLASSIFICATION	0.9999989310695306	WITHOUT_CLASSIFICATION	1.0689304693313912E-6	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999986772417143	WITHOUT_CLASSIFICATION	1.3227582856826787E-6	TEST
// line 1516	WITHOUT_CLASSIFICATION	0.9999988638749123	WITHOUT_CLASSIFICATION	1.1361250877239079E-6	TEST
// line 1533	WITHOUT_CLASSIFICATION	0.9999986891639777	WITHOUT_CLASSIFICATION	1.31083602224866E-6	TEST
// line 1550	WITHOUT_CLASSIFICATION	0.9999989045877693	WITHOUT_CLASSIFICATION	1.0954122307235017E-6	TEST
// line 1553	WITHOUT_CLASSIFICATION	0.9999986761624068	WITHOUT_CLASSIFICATION	1.3238375931323354E-6	TEST
// line 1556	WITHOUT_CLASSIFICATION	0.9999988744346078	WITHOUT_CLASSIFICATION	1.1255653921605012E-6	TEST
// line 1565	WITHOUT_CLASSIFICATION	0.9999988708283748	WITHOUT_CLASSIFICATION	1.1291716251766161E-6	TEST
// line 1568	WITHOUT_CLASSIFICATION	0.9999988911342903	WITHOUT_CLASSIFICATION	1.1088657097015994E-6	TEST
// line 1571	WITHOUT_CLASSIFICATION	0.9999986309633566	WITHOUT_CLASSIFICATION	1.3690366433927999E-6	TEST
// line 1574	WITHOUT_CLASSIFICATION	0.9999989050215995	WITHOUT_CLASSIFICATION	1.0949784004650987E-6	TEST
// line 1577	WITHOUT_CLASSIFICATION	0.9999988413398369	WITHOUT_CLASSIFICATION	1.1586601631035706E-6	TEST
// line 1587	WITHOUT_CLASSIFICATION	0.9999988755061432	WITHOUT_CLASSIFICATION	1.124493856837378E-6	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.9999988903630618	WITHOUT_CLASSIFICATION	1.1096369382387194E-6	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999989088432194	WITHOUT_CLASSIFICATION	1.091156780656862E-6	TEST
// line 1600	WITHOUT_CLASSIFICATION	0.999998889894031	WITHOUT_CLASSIFICATION	1.11010596906869E-6	TEST
// line 1609	WITHOUT_CLASSIFICATION	0.9999989797801531	WITHOUT_CLASSIFICATION	1.0202198468425295E-6	TEST
// line 1623	WITHOUT_CLASSIFICATION	0.9999986625241352	WITHOUT_CLASSIFICATION	1.337475864751572E-6	TEST
// line 1626	WITHOUT_CLASSIFICATION	0.9999987996916905	WITHOUT_CLASSIFICATION	1.2003083095303825E-6	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999988684236366	WITHOUT_CLASSIFICATION	1.1315763633354672E-6	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999986593771769	WITHOUT_CLASSIFICATION	1.3406228230778415E-6	TEST
// line 1638	WITHOUT_CLASSIFICATION	0.9999987414348047	WITHOUT_CLASSIFICATION	1.258565195325947E-6	TEST
// line 1641	WITHOUT_CLASSIFICATION	0.9999987193887759	WITHOUT_CLASSIFICATION	1.2806112240130804E-6	TEST
// line 1644	WITHOUT_CLASSIFICATION	0.999998918635472	WITHOUT_CLASSIFICATION	1.0813645280421814E-6	TEST
// line 1649	WITHOUT_CLASSIFICATION	0.9999989789732499	WITHOUT_CLASSIFICATION	1.0210267501544987E-6	TEST
// line 1655	WITHOUT_CLASSIFICATION	0.9999988626620733	WITHOUT_CLASSIFICATION	1.1373379267511378E-6	TEST
// line 1658	WITHOUT_CLASSIFICATION	0.9999988907046279	WITHOUT_CLASSIFICATION	1.1092953721489281E-6	TEST
// line 1661	WITHOUT_CLASSIFICATION	0.9999986360860736	WITHOUT_CLASSIFICATION	1.363913926381077E-6	TEST
// line 1672	WITHOUT_CLASSIFICATION	0.9999988310068936	WITHOUT_CLASSIFICATION	1.1689931063745295E-6	TEST
// line 1677	WITHOUT_CLASSIFICATION	0.9999988713497269	WITHOUT_CLASSIFICATION	1.1286502732195353E-6	TEST
// line 1687	WITHOUT_CLASSIFICATION	0.9999989013237329	WITHOUT_CLASSIFICATION	1.0986762670746327E-6	TEST
// line 1694	WITHOUT_CLASSIFICATION	0.9999989599933938	WITHOUT_CLASSIFICATION	1.0400066061487394E-6	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999988049908858	WITHOUT_CLASSIFICATION	1.195009114255218E-6	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999988189671782	WITHOUT_CLASSIFICATION	1.1810328216952342E-6	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999987849450985	WITHOUT_CLASSIFICATION	1.2150549014046285E-6	TEST
// line 1733	WITHOUT_CLASSIFICATION	0.9999986946238654	WITHOUT_CLASSIFICATION	1.3053761346501885E-6	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.9999988511599415	WITHOUT_CLASSIFICATION	1.1488400584700975E-6	TEST
// line 1745	WITHOUT_CLASSIFICATION	0.9999989048874925	WITHOUT_CLASSIFICATION	1.0951125074583736E-6	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999989565122858	WITHOUT_CLASSIFICATION	1.0434877142209517E-6	TEST
// line 1757	WITHOUT_CLASSIFICATION	0.9999988381310669	WITHOUT_CLASSIFICATION	1.1618689329778324E-6	TEST
// line 1769	WITHOUT_CLASSIFICATION	0.9999989198100806	WITHOUT_CLASSIFICATION	1.080189919350814E-6	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999987784656301	WITHOUT_CLASSIFICATION	1.221534369813749E-6	TEST
// line 1775	WITHOUT_CLASSIFICATION	0.999998829711022	WITHOUT_CLASSIFICATION	1.1702889779433088E-6	TEST
// line 1784	WITHOUT_CLASSIFICATION	0.9999989171174264	WITHOUT_CLASSIFICATION	1.0828825736182439E-6	TEST
// line 1808	WITHOUT_CLASSIFICATION	0.9999988891544195	WITHOUT_CLASSIFICATION	1.1108455805330302E-6	TEST
// line 1814	WITHOUT_CLASSIFICATION	0.9999989730659505	WITHOUT_CLASSIFICATION	1.0269340494910206E-6	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.999998901079079	WITHOUT_CLASSIFICATION	1.0989209210974066E-6	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999988814276412	WITHOUT_CLASSIFICATION	1.1185723588078546E-6	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999987562784843	WITHOUT_CLASSIFICATION	1.2437215156812236E-6	TEST
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9999723085037648	WITHOUT_CLASSIFICATION	2.769149623520413E-5	TEST
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999749379288607	WITHOUT_CLASSIFICATION	2.506207113919316E-5	TEST
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999828234693671	WITHOUT_CLASSIFICATION	1.7176530632906656E-5	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999973801456652	WITHOUT_CLASSIFICATION	2.6198543347669416E-6	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999992179108695	WITHOUT_CLASSIFICATION	7.820891303124599E-7	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.999989819839515	WITHOUT_CLASSIFICATION	1.0180160485061703E-5	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999893607827005	WITHOUT_CLASSIFICATION	1.0639217299537157E-5	TEST
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.999965043158146	WITHOUT_CLASSIFICATION	3.495684185395036E-5	TEST
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9999843388989084	WITHOUT_CLASSIFICATION	1.5661101091706462E-5	TEST
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9999990041406799	WITHOUT_CLASSIFICATION	9.958593201852814E-7	TEST
// line 529	WITHOUT_CLASSIFICATION	0.9999987231346139	WITHOUT_CLASSIFICATION	1.2768653860488704E-6	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999963843844885	WITHOUT_CLASSIFICATION	3.6156155115044994E-6	TEST
/* XXX*/	WITHOUT_CLASSIFICATION	0.9999762596183198	WITHOUT_CLASSIFICATION	2.3740381680110053E-5	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.999997731661364	WITHOUT_CLASSIFICATION	2.2683386360372427E-6	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999538052169022	WITHOUT_CLASSIFICATION	4.619478309780121E-5	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999666282227135	WITHOUT_CLASSIFICATION	3.337177728646856E-5	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999927282785345	WITHOUT_CLASSIFICATION	7.271721465493893E-6	TEST
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999996173957985	WITHOUT_CLASSIFICATION	3.826042015523904E-7	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999997898180795	WITHOUT_CLASSIFICATION	2.101819205389018E-7	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.999999067568109	WITHOUT_CLASSIFICATION	9.324318910563613E-7	TEST
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999988943035695	WITHOUT_CLASSIFICATION	1.1056964304738948E-6	TEST
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999998233156383	WITHOUT_CLASSIFICATION	1.7668436173133985E-7	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999998779496564	WITHOUT_CLASSIFICATION	1.2205034359062515E-7	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999998779496564	WITHOUT_CLASSIFICATION	1.2205034359062515E-7	TEST
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.999999325539393	WITHOUT_CLASSIFICATION	6.744606071325056E-7	TEST
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9999832118015624	WITHOUT_CLASSIFICATION	1.6788198437567247E-5	TEST
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.999997555577812	WITHOUT_CLASSIFICATION	2.44442218794403E-6	TEST
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999985848604416	WITHOUT_CLASSIFICATION	1.4151395583411768E-6	TEST
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999977104436398	WITHOUT_CLASSIFICATION	2.2895563602564318E-6	TEST
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999983463323697	WITHOUT_CLASSIFICATION	1.6536676302699096E-6	TEST
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999999179456459	WITHOUT_CLASSIFICATION	8.205435399497774E-8	TEST
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999992301211393	WITHOUT_CLASSIFICATION	7.698788606461056E-7	TEST
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999997081774131	WITHOUT_CLASSIFICATION	2.918225869158123E-7	TEST
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999984611879621	WITHOUT_CLASSIFICATION	1.538812037845084E-6	TEST
// Parser states:	WITHOUT_CLASSIFICATION	0.9999983811352402	WITHOUT_CLASSIFICATION	1.6188647599052491E-6	TEST
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999051700711857	WITHOUT_CLASSIFICATION	9.482992881423413E-5	TEST
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999999147496094	WITHOUT_CLASSIFICATION	8.525039066023791E-8	TEST
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999975570856114	WITHOUT_CLASSIFICATION	2.442914388614274E-6	TEST
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999968115430289	WITHOUT_CLASSIFICATION	3.188456971039121E-6	TEST
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999973859722515	WITHOUT_CLASSIFICATION	2.6140277485541545E-6	TEST
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999999052705485	WITHOUT_CLASSIFICATION	9.472945142005537E-8	TEST
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999960989032887	WITHOUT_CLASSIFICATION	3.901096711290776E-6	TEST
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999999548779327	WITHOUT_CLASSIFICATION	4.51220672607069E-8	TEST
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999983866178063	WITHOUT_CLASSIFICATION	1.6133821937051263E-6	TEST
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999999827237054	WITHOUT_CLASSIFICATION	1.7276294710387193E-8	TEST
// Node	WITHOUT_CLASSIFICATION	0.9999976248819381	WITHOUT_CLASSIFICATION	2.3751180618000494E-6	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9964526875335356	WITHOUT_CLASSIFICATION	0.003547312466464455	TEST
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999990333066783	WITHOUT_CLASSIFICATION	9.666933216943997E-7	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9964526875335356	WITHOUT_CLASSIFICATION	0.003547312466464455	TEST
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999980491170953	WITHOUT_CLASSIFICATION	1.9508829047895004E-6	TEST
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999966219301811	WITHOUT_CLASSIFICATION	3.3780698187762247E-6	TEST
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9999979442606093	WITHOUT_CLASSIFICATION	2.0557393907315604E-6	TEST
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999953169632583	WITHOUT_CLASSIFICATION	4.683036741703591E-6	TEST
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999994268647265	WITHOUT_CLASSIFICATION	5.731352734254382E-7	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999968975850441	WITHOUT_CLASSIFICATION	3.102414956047848E-6	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999968975850441	WITHOUT_CLASSIFICATION	3.102414956047848E-6	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999968975850441	WITHOUT_CLASSIFICATION	3.102414956047848E-6	TEST
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.999998841073123	WITHOUT_CLASSIFICATION	1.158926877047615E-6	TEST
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999949044151696	WITHOUT_CLASSIFICATION	5.095584830320113E-6	TEST
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999999533123747	WITHOUT_CLASSIFICATION	4.6687625248562577E-8	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999720734088682	WITHOUT_CLASSIFICATION	2.7926591131862833E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999720734088682	WITHOUT_CLASSIFICATION	2.7926591131862833E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999720734088682	WITHOUT_CLASSIFICATION	2.7926591131862833E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999720734088682	WITHOUT_CLASSIFICATION	2.7926591131862833E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999720734088682	WITHOUT_CLASSIFICATION	2.7926591131862833E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999720734088682	WITHOUT_CLASSIFICATION	2.7926591131862833E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999893399466605	WITHOUT_CLASSIFICATION	1.066005333945787E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999893399466605	WITHOUT_CLASSIFICATION	1.066005333945787E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999893399466605	WITHOUT_CLASSIFICATION	1.066005333945787E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999893399466605	WITHOUT_CLASSIFICATION	1.066005333945787E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999893399466605	WITHOUT_CLASSIFICATION	1.066005333945787E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999656069832941	WITHOUT_CLASSIFICATION	3.439301670587924E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999656069832941	WITHOUT_CLASSIFICATION	3.439301670587924E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999656069832941	WITHOUT_CLASSIFICATION	3.439301670587924E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999656069832941	WITHOUT_CLASSIFICATION	3.439301670587924E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999656069832941	WITHOUT_CLASSIFICATION	3.439301670587924E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999741879485811	WITHOUT_CLASSIFICATION	2.581205141893803E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999741879485811	WITHOUT_CLASSIFICATION	2.581205141893803E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999741879485811	WITHOUT_CLASSIFICATION	2.581205141893803E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999741879485811	WITHOUT_CLASSIFICATION	2.581205141893803E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999741879485811	WITHOUT_CLASSIFICATION	2.581205141893803E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999741879485811	WITHOUT_CLASSIFICATION	2.581205141893803E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999913108905886	WITHOUT_CLASSIFICATION	8.689109411469728E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999913108905886	WITHOUT_CLASSIFICATION	8.689109411469728E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999913108905886	WITHOUT_CLASSIFICATION	8.689109411469728E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999913108905886	WITHOUT_CLASSIFICATION	8.689109411469728E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999913108905886	WITHOUT_CLASSIFICATION	8.689109411469728E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999918399168775	WITHOUT_CLASSIFICATION	8.160083122439936E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999918399168775	WITHOUT_CLASSIFICATION	8.160083122439936E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999918399168775	WITHOUT_CLASSIFICATION	8.160083122439936E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999918399168775	WITHOUT_CLASSIFICATION	8.160083122439936E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999918399168775	WITHOUT_CLASSIFICATION	8.160083122439936E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999909363175934	WITHOUT_CLASSIFICATION	9.063682406632527E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999909363175934	WITHOUT_CLASSIFICATION	9.063682406632527E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999909363175934	WITHOUT_CLASSIFICATION	9.063682406632527E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999909363175934	WITHOUT_CLASSIFICATION	9.063682406632527E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999909363175934	WITHOUT_CLASSIFICATION	9.063682406632527E-6	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999998441097782	WITHOUT_CLASSIFICATION	1.5589022186533922E-7	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999998481605641	WITHOUT_CLASSIFICATION	1.518394358293568E-7	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999988622279204	WITHOUT_CLASSIFICATION	1.1377720795748512E-6	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999995333058488	WITHOUT_CLASSIFICATION	4.6669415118294967E-7	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999996315781762	WITHOUT_CLASSIFICATION	3.6842182372608014E-7	TEST
// line 321	WITHOUT_CLASSIFICATION	0.999998095316335	WITHOUT_CLASSIFICATION	1.9046836649347152E-6	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999981604367142	WITHOUT_CLASSIFICATION	1.8395632858335745E-6	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999982775393375	WITHOUT_CLASSIFICATION	1.7224606625393862E-6	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999989654827276	WITHOUT_CLASSIFICATION	1.034517272424331E-6	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999987379323664	WITHOUT_CLASSIFICATION	1.2620676335691674E-6	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999985862013308	WITHOUT_CLASSIFICATION	1.4137986691664816E-6	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999987776521374	WITHOUT_CLASSIFICATION	1.2223478625960636E-6	TEST
// line 280	WITHOUT_CLASSIFICATION	0.9999987503458527	WITHOUT_CLASSIFICATION	1.2496541472224403E-6	TEST
// line 283	WITHOUT_CLASSIFICATION	0.9999984733943683	WITHOUT_CLASSIFICATION	1.5266056317513075E-6	TEST
// line 296	WITHOUT_CLASSIFICATION	0.9999987238929692	WITHOUT_CLASSIFICATION	1.2761070309227696E-6	TEST
// line 324	WITHOUT_CLASSIFICATION	0.999998227617212	WITHOUT_CLASSIFICATION	1.7723827879555528E-6	TEST
// line 327	WITHOUT_CLASSIFICATION	0.9999981708829022	WITHOUT_CLASSIFICATION	1.8291170976644369E-6	TEST
// line 331	WITHOUT_CLASSIFICATION	0.9999981666954577	WITHOUT_CLASSIFICATION	1.8333045422578712E-6	TEST
// line 333	WITHOUT_CLASSIFICATION	0.9999982288802172	WITHOUT_CLASSIFICATION	1.7711197828723347E-6	TEST
// line 336	WITHOUT_CLASSIFICATION	0.999998290548978	WITHOUT_CLASSIFICATION	1.7094510219627647E-6	TEST
// line 342	WITHOUT_CLASSIFICATION	0.9999982442049341	WITHOUT_CLASSIFICATION	1.7557950659344554E-6	TEST
// line 345	WITHOUT_CLASSIFICATION	0.9999983316647072	WITHOUT_CLASSIFICATION	1.6683352926956716E-6	TEST
// line 348	WITHOUT_CLASSIFICATION	0.999998341488666	WITHOUT_CLASSIFICATION	1.6585113340386259E-6	TEST
// line 354	WITHOUT_CLASSIFICATION	0.9999983108161323	WITHOUT_CLASSIFICATION	1.6891838676207183E-6	TEST
// line 368	WITHOUT_CLASSIFICATION	0.9999983018890802	WITHOUT_CLASSIFICATION	1.6981109197113834E-6	TEST
// line 377	WITHOUT_CLASSIFICATION	0.9999982336303994	WITHOUT_CLASSIFICATION	1.7663696006430248E-6	TEST
// line 388	WITHOUT_CLASSIFICATION	0.9999982641235183	WITHOUT_CLASSIFICATION	1.7358764816899857E-6	TEST
// line 392	WITHOUT_CLASSIFICATION	0.9999982197775977	WITHOUT_CLASSIFICATION	1.7802224022452316E-6	TEST
// line 397	WITHOUT_CLASSIFICATION	0.9999983370857187	WITHOUT_CLASSIFICATION	1.6629142813475406E-6	TEST
// line 429	WITHOUT_CLASSIFICATION	0.9999987988655147	WITHOUT_CLASSIFICATION	1.2011344852843365E-6	TEST
// line 432	WITHOUT_CLASSIFICATION	0.9999985935928322	WITHOUT_CLASSIFICATION	1.406407167842409E-6	TEST
// line 436	WITHOUT_CLASSIFICATION	0.9999986927364878	WITHOUT_CLASSIFICATION	1.3072635122497739E-6	TEST
// line 445	WITHOUT_CLASSIFICATION	0.999998809749618	WITHOUT_CLASSIFICATION	1.1902503820958135E-6	TEST
// line 448	WITHOUT_CLASSIFICATION	0.9999988201512489	WITHOUT_CLASSIFICATION	1.179848751148407E-6	TEST
// line 454	WITHOUT_CLASSIFICATION	0.9999988011166814	WITHOUT_CLASSIFICATION	1.1988833186322348E-6	TEST
// line 459	WITHOUT_CLASSIFICATION	0.999998878172944	WITHOUT_CLASSIFICATION	1.1218270560037832E-6	TEST
// line 466	WITHOUT_CLASSIFICATION	0.9999988348414415	WITHOUT_CLASSIFICATION	1.1651585585664792E-6	TEST
// line 469	WITHOUT_CLASSIFICATION	0.999998891411621	WITHOUT_CLASSIFICATION	1.1085883789981358E-6	TEST
// line 478	WITHOUT_CLASSIFICATION	0.999998844408588	WITHOUT_CLASSIFICATION	1.1555914119557404E-6	TEST
// line 481	WITHOUT_CLASSIFICATION	0.9999987815133224	WITHOUT_CLASSIFICATION	1.2184866775077921E-6	TEST
// line 488	WITHOUT_CLASSIFICATION	0.9999988183553765	WITHOUT_CLASSIFICATION	1.1816446234040275E-6	TEST
// line 494	WITHOUT_CLASSIFICATION	0.999998851675186	WITHOUT_CLASSIFICATION	1.1483248140284557E-6	TEST
// line 497	WITHOUT_CLASSIFICATION	0.999998902625843	WITHOUT_CLASSIFICATION	1.0973741569020873E-6	TEST
// line 503	WITHOUT_CLASSIFICATION	0.9999985284987283	WITHOUT_CLASSIFICATION	1.4715012716894752E-6	TEST
// line 506	WITHOUT_CLASSIFICATION	0.999998852182586	WITHOUT_CLASSIFICATION	1.1478174140211698E-6	TEST
// line 509	WITHOUT_CLASSIFICATION	0.9999988628902486	WITHOUT_CLASSIFICATION	1.1371097513493223E-6	TEST
// line 512	WITHOUT_CLASSIFICATION	0.9999988413112408	WITHOUT_CLASSIFICATION	1.1586887592112655E-6	TEST
// line 521	WITHOUT_CLASSIFICATION	0.9999986328110175	WITHOUT_CLASSIFICATION	1.3671889823917691E-6	TEST
// line 526	WITHOUT_CLASSIFICATION	0.9999987004589489	WITHOUT_CLASSIFICATION	1.2995410510281515E-6	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999988890105928	WITHOUT_CLASSIFICATION	1.110989407229008E-6	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999986398785007	WITHOUT_CLASSIFICATION	1.360121499343226E-6	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999988302710219	WITHOUT_CLASSIFICATION	1.1697289780716381E-6	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999987681876861	WITHOUT_CLASSIFICATION	1.231812314020029E-6	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999990052579542	WITHOUT_CLASSIFICATION	9.947420459346135E-7	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999987238784097	WITHOUT_CLASSIFICATION	1.2761215903061096E-6	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999987626517253	WITHOUT_CLASSIFICATION	1.2373482747102945E-6	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999988009206896	WITHOUT_CLASSIFICATION	1.1990793104173806E-6	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999986701821254	WITHOUT_CLASSIFICATION	1.329817874502288E-6	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999987367169172	WITHOUT_CLASSIFICATION	1.2632830827936414E-6	TEST
// line 785	WITHOUT_CLASSIFICATION	0.999998768947474	WITHOUT_CLASSIFICATION	1.231052525955455E-6	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999987563738046	WITHOUT_CLASSIFICATION	1.243626195457064E-6	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999987409662681	WITHOUT_CLASSIFICATION	1.2590337319736275E-6	TEST
// line 534	WITHOUT_CLASSIFICATION	0.9999986361366823	WITHOUT_CLASSIFICATION	1.3638633178150555E-6	TEST
// line 549	WITHOUT_CLASSIFICATION	0.9999988551546645	WITHOUT_CLASSIFICATION	1.1448453355668536E-6	TEST
// line 552	WITHOUT_CLASSIFICATION	0.9999986625428713	WITHOUT_CLASSIFICATION	1.3374571286612003E-6	TEST
// line 558	WITHOUT_CLASSIFICATION	0.9999987360631207	WITHOUT_CLASSIFICATION	1.2639368793077418E-6	TEST
// line 561	WITHOUT_CLASSIFICATION	0.9999987289423424	WITHOUT_CLASSIFICATION	1.2710576575231888E-6	TEST
// line 571	WITHOUT_CLASSIFICATION	0.9999986970312277	WITHOUT_CLASSIFICATION	1.3029687723695305E-6	TEST
// line 574	WITHOUT_CLASSIFICATION	0.9999988064085112	WITHOUT_CLASSIFICATION	1.1935914887545307E-6	TEST
// line 579	WITHOUT_CLASSIFICATION	0.9999987987312384	WITHOUT_CLASSIFICATION	1.2012687614921908E-6	TEST
// line 586	WITHOUT_CLASSIFICATION	0.9999987858937077	WITHOUT_CLASSIFICATION	1.2141062923376183E-6	TEST
// line 589	WITHOUT_CLASSIFICATION	0.999998806979105	WITHOUT_CLASSIFICATION	1.19302089504381E-6	TEST
// line 592	WITHOUT_CLASSIFICATION	0.9999987384746838	WITHOUT_CLASSIFICATION	1.26152531622191E-6	TEST
// line 595	WITHOUT_CLASSIFICATION	0.9999987839962299	WITHOUT_CLASSIFICATION	1.216003770105817E-6	TEST
// line 598	WITHOUT_CLASSIFICATION	0.9999988074146832	WITHOUT_CLASSIFICATION	1.1925853167814926E-6	TEST
// line 623	WITHOUT_CLASSIFICATION	0.999998540385771	WITHOUT_CLASSIFICATION	1.4596142289739154E-6	TEST
// line 627	WITHOUT_CLASSIFICATION	0.9999987278379168	WITHOUT_CLASSIFICATION	1.2721620832500368E-6	TEST
// line 630	WITHOUT_CLASSIFICATION	0.9999987182279593	WITHOUT_CLASSIFICATION	1.2817720406331423E-6	TEST
// line 633	WITHOUT_CLASSIFICATION	0.999998602963768	WITHOUT_CLASSIFICATION	1.397036231991431E-6	TEST
// line 639	WITHOUT_CLASSIFICATION	0.9999986538464803	WITHOUT_CLASSIFICATION	1.3461535197244886E-6	TEST
// line 648	WITHOUT_CLASSIFICATION	0.9999988398004546	WITHOUT_CLASSIFICATION	1.1601995454130534E-6	TEST
// line 657	WITHOUT_CLASSIFICATION	0.9999987918121126	WITHOUT_CLASSIFICATION	1.2081878873986507E-6	TEST
// line 661	WITHOUT_CLASSIFICATION	0.999998700759061	WITHOUT_CLASSIFICATION	1.2992409388746283E-6	TEST
// line 666	WITHOUT_CLASSIFICATION	0.9999987382467	WITHOUT_CLASSIFICATION	1.2617532999140066E-6	TEST
// line 678	WITHOUT_CLASSIFICATION	0.9999987999930807	WITHOUT_CLASSIFICATION	1.2000069192735755E-6	TEST
// line 682	WITHOUT_CLASSIFICATION	0.9999987525395833	WITHOUT_CLASSIFICATION	1.247460416707793E-6	TEST
// line 688	WITHOUT_CLASSIFICATION	0.9999987701198682	WITHOUT_CLASSIFICATION	1.2298801318331413E-6	TEST
// line 699	WITHOUT_CLASSIFICATION	0.9999988000628858	WITHOUT_CLASSIFICATION	1.1999371142529809E-6	TEST
// line 706	WITHOUT_CLASSIFICATION	0.9999988639692902	WITHOUT_CLASSIFICATION	1.136030709773888E-6	TEST
// line 708	WITHOUT_CLASSIFICATION	0.9999987144058581	WITHOUT_CLASSIFICATION	1.2855941419214586E-6	TEST
// line 727	WITHOUT_CLASSIFICATION	0.9999986682339854	WITHOUT_CLASSIFICATION	1.3317660146344184E-6	TEST
// line 737	WITHOUT_CLASSIFICATION	0.9999985628053887	WITHOUT_CLASSIFICATION	1.4371946112408344E-6	TEST
// line 753	WITHOUT_CLASSIFICATION	0.9999985829190505	WITHOUT_CLASSIFICATION	1.4170809494093399E-6	TEST
// line 779	WITHOUT_CLASSIFICATION	0.999998778831361	WITHOUT_CLASSIFICATION	1.221168638990413E-6	TEST
// line 801	WITHOUT_CLASSIFICATION	0.9999988015475796	WITHOUT_CLASSIFICATION	1.1984524204192904E-6	TEST
// line 808	WITHOUT_CLASSIFICATION	0.9999987013088159	WITHOUT_CLASSIFICATION	1.2986911841231996E-6	TEST
// line 811	WITHOUT_CLASSIFICATION	0.9999986948298492	WITHOUT_CLASSIFICATION	1.305170150824816E-6	TEST
// line 817	WITHOUT_CLASSIFICATION	0.9999989113484319	WITHOUT_CLASSIFICATION	1.0886515681474427E-6	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999987519752128	WITHOUT_CLASSIFICATION	1.248024787119408E-6	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999988107704972	WITHOUT_CLASSIFICATION	1.1892295027738904E-6	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999987933279583	WITHOUT_CLASSIFICATION	1.2066720417078584E-6	TEST
// line 893	WITHOUT_CLASSIFICATION	0.999998655149697	WITHOUT_CLASSIFICATION	1.3448503029156913E-6	TEST
// line 899	WITHOUT_CLASSIFICATION	0.9999987870879059	WITHOUT_CLASSIFICATION	1.2129120941137096E-6	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999985670378263	WITHOUT_CLASSIFICATION	1.4329621737061978E-6	TEST
// line 944	WITHOUT_CLASSIFICATION	0.999998834361321	WITHOUT_CLASSIFICATION	1.1656386791148233E-6	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999988938211768	WITHOUT_CLASSIFICATION	1.1061788231406367E-6	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999988917681645	WITHOUT_CLASSIFICATION	1.1082318355150486E-6	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999989670929974	WITHOUT_CLASSIFICATION	1.0329070025349683E-6	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999987035705861	WITHOUT_CLASSIFICATION	1.2964294139009443E-6	TEST
// line 820	WITHOUT_CLASSIFICATION	0.9999986864569983	WITHOUT_CLASSIFICATION	1.313543001654694E-6	TEST
// line 826	WITHOUT_CLASSIFICATION	0.9999987280337244	WITHOUT_CLASSIFICATION	1.2719662756732275E-6	TEST
// line 829	WITHOUT_CLASSIFICATION	0.999998750134659	WITHOUT_CLASSIFICATION	1.2498653410461947E-6	TEST
// line 832	WITHOUT_CLASSIFICATION	0.9999985174063878	WITHOUT_CLASSIFICATION	1.4825936121180882E-6	TEST
// line 851	WITHOUT_CLASSIFICATION	0.9999987055770336	WITHOUT_CLASSIFICATION	1.2944229663523788E-6	TEST
// line 857	WITHOUT_CLASSIFICATION	0.9999987719225347	WITHOUT_CLASSIFICATION	1.2280774652591277E-6	TEST
// line 860	WITHOUT_CLASSIFICATION	0.9999988578808908	WITHOUT_CLASSIFICATION	1.1421191091516534E-6	TEST
// line 863	WITHOUT_CLASSIFICATION	0.9999986207996557	WITHOUT_CLASSIFICATION	1.3792003442543162E-6	TEST
// line 866	WITHOUT_CLASSIFICATION	0.9999987680832425	WITHOUT_CLASSIFICATION	1.2319167573971464E-6	TEST
// line 869	WITHOUT_CLASSIFICATION	0.9999988282910056	WITHOUT_CLASSIFICATION	1.1717089944301368E-6	TEST
// line 875	WITHOUT_CLASSIFICATION	0.9999987611430976	WITHOUT_CLASSIFICATION	1.2388569024202123E-6	TEST
// line 884	WITHOUT_CLASSIFICATION	0.9999987977513146	WITHOUT_CLASSIFICATION	1.2022486853549676E-6	TEST
// line 887	WITHOUT_CLASSIFICATION	0.9999987620403579	WITHOUT_CLASSIFICATION	1.2379596422015195E-6	TEST
// line 890	WITHOUT_CLASSIFICATION	0.9999988837958502	WITHOUT_CLASSIFICATION	1.116204149772381E-6	TEST
// line 902	WITHOUT_CLASSIFICATION	0.9999988121037908	WITHOUT_CLASSIFICATION	1.1878962091714024E-6	TEST
// line 909	WITHOUT_CLASSIFICATION	0.9999988535372322	WITHOUT_CLASSIFICATION	1.146462767842808E-6	TEST
// line 912	WITHOUT_CLASSIFICATION	0.9999988848052301	WITHOUT_CLASSIFICATION	1.1151947697929276E-6	TEST
// line 916	WITHOUT_CLASSIFICATION	0.9999989597394472	WITHOUT_CLASSIFICATION	1.0402605527792433E-6	TEST
// line 922	WITHOUT_CLASSIFICATION	0.9999987162100005	WITHOUT_CLASSIFICATION	1.2837899996024235E-6	TEST
// line 928	WITHOUT_CLASSIFICATION	0.9999987297746632	WITHOUT_CLASSIFICATION	1.2702253368483392E-6	TEST
// line 941	WITHOUT_CLASSIFICATION	0.9999987947687948	WITHOUT_CLASSIFICATION	1.2052312051840583E-6	TEST
// line 947	WITHOUT_CLASSIFICATION	0.9999988601750136	WITHOUT_CLASSIFICATION	1.1398249864437164E-6	TEST
// line 951	WITHOUT_CLASSIFICATION	0.999998742510347	WITHOUT_CLASSIFICATION	1.257489652991047E-6	TEST
// line 955	WITHOUT_CLASSIFICATION	0.9999987740971109	WITHOUT_CLASSIFICATION	1.225902889061113E-6	TEST
// line 965	WITHOUT_CLASSIFICATION	0.9999988246125884	WITHOUT_CLASSIFICATION	1.1753874115754072E-6	TEST
// line 969	WITHOUT_CLASSIFICATION	0.9999988063582517	WITHOUT_CLASSIFICATION	1.1936417483215033E-6	TEST
// line 977	WITHOUT_CLASSIFICATION	0.9999987924475889	WITHOUT_CLASSIFICATION	1.2075524110377107E-6	TEST
// line 983	WITHOUT_CLASSIFICATION	0.999998646238588	WITHOUT_CLASSIFICATION	1.3537614119830651E-6	TEST
// line 1013	WITHOUT_CLASSIFICATION	0.9999988017344622	WITHOUT_CLASSIFICATION	1.1982655378017172E-6	TEST
// line 1023	WITHOUT_CLASSIFICATION	0.9999987400652693	WITHOUT_CLASSIFICATION	1.259934730620581E-6	TEST
// line 1035	WITHOUT_CLASSIFICATION	0.9999986719292193	WITHOUT_CLASSIFICATION	1.3280707806984423E-6	TEST
// line 1041	WITHOUT_CLASSIFICATION	0.9999988183051816	WITHOUT_CLASSIFICATION	1.1816948184110883E-6	TEST
// line 1043	WITHOUT_CLASSIFICATION	0.9999988806874021	WITHOUT_CLASSIFICATION	1.1193125979398143E-6	TEST
// line 1054	WITHOUT_CLASSIFICATION	0.9999988816718156	WITHOUT_CLASSIFICATION	1.1183281843973026E-6	TEST
// line 1057	WITHOUT_CLASSIFICATION	0.9999988445353819	WITHOUT_CLASSIFICATION	1.1554646180201625E-6	TEST
// line 1060	WITHOUT_CLASSIFICATION	0.9999989693292967	WITHOUT_CLASSIFICATION	1.0306707033841585E-6	TEST
// line 1069	WITHOUT_CLASSIFICATION	0.9999990124259319	WITHOUT_CLASSIFICATION	9.875740680973004E-7	TEST
// line 1075	WITHOUT_CLASSIFICATION	0.9999989525963392	WITHOUT_CLASSIFICATION	1.0474036608666994E-6	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.999998820709955	WITHOUT_CLASSIFICATION	1.1792900449080646E-6	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.999998604398151	WITHOUT_CLASSIFICATION	1.3956018489900464E-6	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999987764605682	WITHOUT_CLASSIFICATION	1.2235394317073833E-6	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999987916338136	WITHOUT_CLASSIFICATION	1.208366186377101E-6	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999989827952515	WITHOUT_CLASSIFICATION	1.0172047485204861E-6	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.999998854015073	WITHOUT_CLASSIFICATION	1.1459849268638132E-6	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.999998849483161	WITHOUT_CLASSIFICATION	1.1505168391191E-6	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999987952570698	WITHOUT_CLASSIFICATION	1.204742930220147E-6	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999988607345669	WITHOUT_CLASSIFICATION	1.1392654331651046E-6	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999985567831253	WITHOUT_CLASSIFICATION	1.4432168745790872E-6	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999985849908137	WITHOUT_CLASSIFICATION	1.4150091862782093E-6	TEST
// line 1078	WITHOUT_CLASSIFICATION	0.9999989716766484	WITHOUT_CLASSIFICATION	1.02832335150423E-6	TEST
// line 1084	WITHOUT_CLASSIFICATION	0.9999988948808771	WITHOUT_CLASSIFICATION	1.1051191227920225E-6	TEST
// line 1087	WITHOUT_CLASSIFICATION	0.9999988621074606	WITHOUT_CLASSIFICATION	1.1378925394050036E-6	TEST
// line 1090	WITHOUT_CLASSIFICATION	0.999998981889176	WITHOUT_CLASSIFICATION	1.0181108239469706E-6	TEST
// line 1093	WITHOUT_CLASSIFICATION	0.9999988578099506	WITHOUT_CLASSIFICATION	1.1421900493407428E-6	TEST
// line 1114	WITHOUT_CLASSIFICATION	0.9999988868200443	WITHOUT_CLASSIFICATION	1.1131799556671888E-6	TEST
// line 1116	WITHOUT_CLASSIFICATION	0.9999988638605891	WITHOUT_CLASSIFICATION	1.1361394108281573E-6	TEST
// line 1118	WITHOUT_CLASSIFICATION	0.9999989197882422	WITHOUT_CLASSIFICATION	1.0802117578534937E-6	TEST
// line 1124	WITHOUT_CLASSIFICATION	0.9999988343200246	WITHOUT_CLASSIFICATION	1.16567997540842E-6	TEST
// line 1126	WITHOUT_CLASSIFICATION	0.9999988092105032	WITHOUT_CLASSIFICATION	1.1907894968166263E-6	TEST
// line 1138	WITHOUT_CLASSIFICATION	0.9999987050624755	WITHOUT_CLASSIFICATION	1.2949375245398404E-6	TEST
// line 1144	WITHOUT_CLASSIFICATION	0.9999988891958157	WITHOUT_CLASSIFICATION	1.1108041842255013E-6	TEST
// line 1149	WITHOUT_CLASSIFICATION	0.9999989556020715	WITHOUT_CLASSIFICATION	1.0443979284541206E-6	TEST
// line 1155	WITHOUT_CLASSIFICATION	0.9999988246393613	WITHOUT_CLASSIFICATION	1.1753606386837817E-6	TEST
// line 1162	WITHOUT_CLASSIFICATION	0.9999988249711969	WITHOUT_CLASSIFICATION	1.1750288030842721E-6	TEST
// line 1173	WITHOUT_CLASSIFICATION	0.9999986976095627	WITHOUT_CLASSIFICATION	1.3023904372922843E-6	TEST
// line 1179	WITHOUT_CLASSIFICATION	0.9999988932070336	WITHOUT_CLASSIFICATION	1.1067929663592422E-6	TEST
// line 1182	WITHOUT_CLASSIFICATION	0.9999989048771054	WITHOUT_CLASSIFICATION	1.0951228946469472E-6	TEST
// line 1190	WITHOUT_CLASSIFICATION	0.9999989656408654	WITHOUT_CLASSIFICATION	1.0343591345998897E-6	TEST
// line 1196	WITHOUT_CLASSIFICATION	0.9999989194887846	WITHOUT_CLASSIFICATION	1.0805112153507995E-6	TEST
// line 1213	WITHOUT_CLASSIFICATION	0.9999986248296912	WITHOUT_CLASSIFICATION	1.3751703089264502E-6	TEST
// line 1217	WITHOUT_CLASSIFICATION	0.9999987983285892	WITHOUT_CLASSIFICATION	1.2016714107680822E-6	TEST
// line 1231	WITHOUT_CLASSIFICATION	0.9999983684554198	WITHOUT_CLASSIFICATION	1.6315445802247349E-6	TEST
// line 1236	WITHOUT_CLASSIFICATION	0.9999986717406266	WITHOUT_CLASSIFICATION	1.328259373390561E-6	TEST
// line 1244	WITHOUT_CLASSIFICATION	0.9999988356455487	WITHOUT_CLASSIFICATION	1.1643544513215533E-6	TEST
// line 1254	WITHOUT_CLASSIFICATION	0.9999988426678477	WITHOUT_CLASSIFICATION	1.1573321523590595E-6	TEST
// line 1258	WITHOUT_CLASSIFICATION	0.9999988027206725	WITHOUT_CLASSIFICATION	1.197279327436062E-6	TEST
// line 1264	WITHOUT_CLASSIFICATION	0.9999988701483314	WITHOUT_CLASSIFICATION	1.1298516684864879E-6	TEST
// line 1270	WITHOUT_CLASSIFICATION	0.999998882319122	WITHOUT_CLASSIFICATION	1.1176808780294975E-6	TEST
// line 1273	WITHOUT_CLASSIFICATION	0.9999986464447972	WITHOUT_CLASSIFICATION	1.3535552027550786E-6	TEST
// line 1276	WITHOUT_CLASSIFICATION	0.9999988307101192	WITHOUT_CLASSIFICATION	1.1692898808076378E-6	TEST
// line 1279	WITHOUT_CLASSIFICATION	0.9999988473513265	WITHOUT_CLASSIFICATION	1.1526486734838625E-6	TEST
// line 1282	WITHOUT_CLASSIFICATION	0.9999988260928327	WITHOUT_CLASSIFICATION	1.1739071672663016E-6	TEST
// line 1289	WITHOUT_CLASSIFICATION	0.999998852015961	WITHOUT_CLASSIFICATION	1.147984039014162E-6	TEST
// line 1292	WITHOUT_CLASSIFICATION	0.9999988306619645	WITHOUT_CLASSIFICATION	1.1693380354430268E-6	TEST
// line 1295	WITHOUT_CLASSIFICATION	0.9999988358898466	WITHOUT_CLASSIFICATION	1.1641101533828528E-6	TEST
// line 1298	WITHOUT_CLASSIFICATION	0.9999988450079902	WITHOUT_CLASSIFICATION	1.1549920098658425E-6	TEST
// line 1305	WITHOUT_CLASSIFICATION	0.9999986562256519	WITHOUT_CLASSIFICATION	1.3437743480904958E-6	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999987576607192	WITHOUT_CLASSIFICATION	1.2423392807371513E-6	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999987285202764	WITHOUT_CLASSIFICATION	1.2714797236081617E-6	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999986661550899	WITHOUT_CLASSIFICATION	1.333844910106895E-6	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999989027455033	WITHOUT_CLASSIFICATION	1.0972544966674947E-6	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.9999988828862301	WITHOUT_CLASSIFICATION	1.1171137699770954E-6	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.999998983813218	WITHOUT_CLASSIFICATION	1.0161867820563953E-6	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999989807186804	WITHOUT_CLASSIFICATION	1.0192813195739987E-6	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999988636462115	WITHOUT_CLASSIFICATION	1.1363537885181543E-6	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.9999988903630618	WITHOUT_CLASSIFICATION	1.1096369382387194E-6	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999989088432194	WITHOUT_CLASSIFICATION	1.091156780656862E-6	TEST
// line 1308	WITHOUT_CLASSIFICATION	0.9999986718728195	WITHOUT_CLASSIFICATION	1.328127180438693E-6	TEST
// line 1311	WITHOUT_CLASSIFICATION	0.9999984186784624	WITHOUT_CLASSIFICATION	1.5813215376708485E-6	TEST
// line 1317	WITHOUT_CLASSIFICATION	0.9999986810130255	WITHOUT_CLASSIFICATION	1.3189869745703388E-6	TEST
// line 1323	WITHOUT_CLASSIFICATION	0.9999986051759888	WITHOUT_CLASSIFICATION	1.394824011189343E-6	TEST
// line 1326	WITHOUT_CLASSIFICATION	0.9999986429235131	WITHOUT_CLASSIFICATION	1.357076486838855E-6	TEST
// line 1329	WITHOUT_CLASSIFICATION	0.9999986664750509	WITHOUT_CLASSIFICATION	1.3335249491581133E-6	TEST
// line 1337	WITHOUT_CLASSIFICATION	0.999998687755807	WITHOUT_CLASSIFICATION	1.3122441929895601E-6	TEST
// line 1342	WITHOUT_CLASSIFICATION	0.9999986847884679	WITHOUT_CLASSIFICATION	1.3152115320622866E-6	TEST
// line 1345	WITHOUT_CLASSIFICATION	0.9999987503018941	WITHOUT_CLASSIFICATION	1.2496981058418397E-6	TEST
// line 1354	WITHOUT_CLASSIFICATION	0.9999987346848682	WITHOUT_CLASSIFICATION	1.2653151318383997E-6	TEST
// line 1359	WITHOUT_CLASSIFICATION	0.9999987428623802	WITHOUT_CLASSIFICATION	1.2571376197653936E-6	TEST
// line 1366	WITHOUT_CLASSIFICATION	0.9999987032730169	WITHOUT_CLASSIFICATION	1.2967269831335472E-6	TEST
// line 1369	WITHOUT_CLASSIFICATION	0.9999987666247516	WITHOUT_CLASSIFICATION	1.233375248350273E-6	TEST
// line 1373	WITHOUT_CLASSIFICATION	0.9999986853652606	WITHOUT_CLASSIFICATION	1.3146347393641376E-6	TEST
// line 1377	WITHOUT_CLASSIFICATION	0.9999986778832252	WITHOUT_CLASSIFICATION	1.3221167747547327E-6	TEST
// line 1383	WITHOUT_CLASSIFICATION	0.9999987023953016	WITHOUT_CLASSIFICATION	1.2976046983582996E-6	TEST
// line 1399	WITHOUT_CLASSIFICATION	0.9999987131105922	WITHOUT_CLASSIFICATION	1.286889407730947E-6	TEST
// line 1401	WITHOUT_CLASSIFICATION	0.9999987983514769	WITHOUT_CLASSIFICATION	1.2016485231459368E-6	TEST
// line 1406	WITHOUT_CLASSIFICATION	0.9999990134901215	WITHOUT_CLASSIFICATION	9.865098785212923E-7	TEST
// line 1417	WITHOUT_CLASSIFICATION	0.999998898313865	WITHOUT_CLASSIFICATION	1.1016861350036308E-6	TEST
// line 1424	WITHOUT_CLASSIFICATION	0.999998818403321	WITHOUT_CLASSIFICATION	1.1815966789475396E-6	TEST
// line 1427	WITHOUT_CLASSIFICATION	0.9999988513622796	WITHOUT_CLASSIFICATION	1.1486377203717822E-6	TEST
// line 1430	WITHOUT_CLASSIFICATION	0.9999988535628775	WITHOUT_CLASSIFICATION	1.1464371224847922E-6	TEST
// line 1433	WITHOUT_CLASSIFICATION	0.9999987505917222	WITHOUT_CLASSIFICATION	1.2494082777665253E-6	TEST
// line 1436	WITHOUT_CLASSIFICATION	0.9999987843197033	WITHOUT_CLASSIFICATION	1.2156802967082305E-6	TEST
// line 1442	WITHOUT_CLASSIFICATION	0.9999988383457117	WITHOUT_CLASSIFICATION	1.161654288319984E-6	TEST
// line 1445	WITHOUT_CLASSIFICATION	0.9999988930720284	WITHOUT_CLASSIFICATION	1.1069279715680606E-6	TEST
// line 1458	WITHOUT_CLASSIFICATION	0.9999989130938967	WITHOUT_CLASSIFICATION	1.0869061033046595E-6	TEST
// line 1464	WITHOUT_CLASSIFICATION	0.9999989136382609	WITHOUT_CLASSIFICATION	1.0863617391853457E-6	TEST
// line 1489	WITHOUT_CLASSIFICATION	0.9999989568704601	WITHOUT_CLASSIFICATION	1.043129539910849E-6	TEST
// line 1493	WITHOUT_CLASSIFICATION	0.9999988381929141	WITHOUT_CLASSIFICATION	1.161807085886717E-6	TEST
// line 1507	WITHOUT_CLASSIFICATION	0.9999989325078322	WITHOUT_CLASSIFICATION	1.067492167727961E-6	TEST
// line 1519	WITHOUT_CLASSIFICATION	0.9999988897660086	WITHOUT_CLASSIFICATION	1.110233991372709E-6	TEST
// line 1532	WITHOUT_CLASSIFICATION	0.999998627941652	WITHOUT_CLASSIFICATION	1.3720583480685617E-6	TEST
// line 1538	WITHOUT_CLASSIFICATION	0.9999987119254016	WITHOUT_CLASSIFICATION	1.2880745984500387E-6	TEST
// line 1542	WITHOUT_CLASSIFICATION	0.9999988435484759	WITHOUT_CLASSIFICATION	1.1564515240228013E-6	TEST
// line 1557	WITHOUT_CLASSIFICATION	0.999998842410297	WITHOUT_CLASSIFICATION	1.1575897030252625E-6	TEST
// line 1573	WITHOUT_CLASSIFICATION	0.9999987035064749	WITHOUT_CLASSIFICATION	1.296493525119576E-6	TEST
// line 1591	WITHOUT_CLASSIFICATION	0.9999986847969787	WITHOUT_CLASSIFICATION	1.315203021266162E-6	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999988584865869	WITHOUT_CLASSIFICATION	1.1415134131017658E-6	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999988684236366	WITHOUT_CLASSIFICATION	1.1315763633354672E-6	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999986593771769	WITHOUT_CLASSIFICATION	1.3406228230778415E-6	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999988049908858	WITHOUT_CLASSIFICATION	1.195009114255218E-6	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999988679763796	WITHOUT_CLASSIFICATION	1.1320236204221248E-6	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999987849450985	WITHOUT_CLASSIFICATION	1.2150549014046285E-6	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.9999988511599415	WITHOUT_CLASSIFICATION	1.1488400584700975E-6	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999989565122858	WITHOUT_CLASSIFICATION	1.0434877142209517E-6	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.999998901079079	WITHOUT_CLASSIFICATION	1.0989209210974066E-6	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999988814276412	WITHOUT_CLASSIFICATION	1.1185723588078546E-6	TEST
// line 1607	WITHOUT_CLASSIFICATION	0.9999989557609357	WITHOUT_CLASSIFICATION	1.044239064310072E-6	TEST
// line 1610	WITHOUT_CLASSIFICATION	0.9999989554917061	WITHOUT_CLASSIFICATION	1.0445082938005478E-6	TEST
// line 1622	WITHOUT_CLASSIFICATION	0.9999988118043646	WITHOUT_CLASSIFICATION	1.1881956354736852E-6	TEST
// line 1625	WITHOUT_CLASSIFICATION	0.9999988145739054	WITHOUT_CLASSIFICATION	1.1854260945382322E-6	TEST
// line 1636	WITHOUT_CLASSIFICATION	0.9999987065689043	WITHOUT_CLASSIFICATION	1.2934310956977057E-6	TEST
// line 1639	WITHOUT_CLASSIFICATION	0.9999987658461155	WITHOUT_CLASSIFICATION	1.2341538845905634E-6	TEST
// line 1647	WITHOUT_CLASSIFICATION	0.9999989446747012	WITHOUT_CLASSIFICATION	1.0553252987604636E-6	TEST
// line 1651	WITHOUT_CLASSIFICATION	0.9999986633180595	WITHOUT_CLASSIFICATION	1.3366819405152728E-6	TEST
// line 1657	WITHOUT_CLASSIFICATION	0.9999988927481716	WITHOUT_CLASSIFICATION	1.1072518284527918E-6	TEST
// line 1660	WITHOUT_CLASSIFICATION	0.9999989301328434	WITHOUT_CLASSIFICATION	1.0698671567443785E-6	TEST
// line 1663	WITHOUT_CLASSIFICATION	0.9999987080538484	WITHOUT_CLASSIFICATION	1.2919461515861308E-6	TEST
// line 1678	WITHOUT_CLASSIFICATION	0.9999989007318597	WITHOUT_CLASSIFICATION	1.09926814021895E-6	TEST
// line 1702	WITHOUT_CLASSIFICATION	0.9999988703417029	WITHOUT_CLASSIFICATION	1.129658297176552E-6	TEST
// line 1711	WITHOUT_CLASSIFICATION	0.9999986194080707	WITHOUT_CLASSIFICATION	1.380591929319006E-6	TEST
// line 1719	WITHOUT_CLASSIFICATION	0.9999988937450186	WITHOUT_CLASSIFICATION	1.1062549814566896E-6	TEST
// line 1722	WITHOUT_CLASSIFICATION	0.9999987818027734	WITHOUT_CLASSIFICATION	1.2181972265884077E-6	TEST
// line 1731	WITHOUT_CLASSIFICATION	0.9999984400269214	WITHOUT_CLASSIFICATION	1.5599730786734321E-6	TEST
// line 1734	WITHOUT_CLASSIFICATION	0.9999987558647677	WITHOUT_CLASSIFICATION	1.244135232272189E-6	TEST
// line 1738	WITHOUT_CLASSIFICATION	0.9999987172862724	WITHOUT_CLASSIFICATION	1.2827137275002282E-6	TEST
// line 1746	WITHOUT_CLASSIFICATION	0.9999989338465606	WITHOUT_CLASSIFICATION	1.0661534395265437E-6	TEST
// line 1756	WITHOUT_CLASSIFICATION	0.9999988936491301	WITHOUT_CLASSIFICATION	1.1063508698841653E-6	TEST
// line 1758	WITHOUT_CLASSIFICATION	0.9999988600715296	WITHOUT_CLASSIFICATION	1.139928470408121E-6	TEST
// line 1761	WITHOUT_CLASSIFICATION	0.9999986576762908	WITHOUT_CLASSIFICATION	1.3423237091630091E-6	TEST
// line 1767	WITHOUT_CLASSIFICATION	0.9999988675575295	WITHOUT_CLASSIFICATION	1.1324424704360206E-6	TEST
// line 1776	WITHOUT_CLASSIFICATION	0.9999988618946613	WITHOUT_CLASSIFICATION	1.1381053387976986E-6	TEST
// line 1782	WITHOUT_CLASSIFICATION	0.9999988402457637	WITHOUT_CLASSIFICATION	1.159754236367269E-6	TEST
// line 1785	WITHOUT_CLASSIFICATION	0.999998869834958	WITHOUT_CLASSIFICATION	1.1301650420577615E-6	TEST
// line 1788	WITHOUT_CLASSIFICATION	0.9999988582917274	WITHOUT_CLASSIFICATION	1.1417082726427982E-6	TEST
// line 1791	WITHOUT_CLASSIFICATION	0.9999986759775761	WITHOUT_CLASSIFICATION	1.32402242395931E-6	TEST
// line 1797	WITHOUT_CLASSIFICATION	0.999998891627735	WITHOUT_CLASSIFICATION	1.1083722649608297E-6	TEST
// line 1800	WITHOUT_CLASSIFICATION	0.9999989635485216	WITHOUT_CLASSIFICATION	1.0364514784072432E-6	TEST
// line 1803	WITHOUT_CLASSIFICATION	0.9999987654181909	WITHOUT_CLASSIFICATION	1.2345818091611292E-6	TEST
// line 1806	WITHOUT_CLASSIFICATION	0.9999990368939382	WITHOUT_CLASSIFICATION	9.631060617347814E-7	TEST
// line 1809	WITHOUT_CLASSIFICATION	0.9999990458848289	WITHOUT_CLASSIFICATION	9.541151710590894E-7	TEST
// line 1815	WITHOUT_CLASSIFICATION	0.9999989211665227	WITHOUT_CLASSIFICATION	1.0788334773771342E-6	TEST
// line 1825	WITHOUT_CLASSIFICATION	0.999998883872019	WITHOUT_CLASSIFICATION	1.1161279809749763E-6	TEST
// line 1828	WITHOUT_CLASSIFICATION	0.9999988666053942	WITHOUT_CLASSIFICATION	1.1333946057593376E-6	TEST
// line 1831	WITHOUT_CLASSIFICATION	0.9999985512429037	WITHOUT_CLASSIFICATION	1.44875709627307E-6	TEST
// line 1847	WITHOUT_CLASSIFICATION	0.9999989948578619	WITHOUT_CLASSIFICATION	1.0051421380249609E-6	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.999989819839515	WITHOUT_CLASSIFICATION	1.0180160485061703E-5	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999893607827005	WITHOUT_CLASSIFICATION	1.0639217299537157E-5	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999963843844885	WITHOUT_CLASSIFICATION	3.6156155115044994E-6	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.999997731661364	WITHOUT_CLASSIFICATION	2.2683386360372427E-6	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999538052169022	WITHOUT_CLASSIFICATION	4.619478309780121E-5	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999666282227135	WITHOUT_CLASSIFICATION	3.337177728646856E-5	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999927282785345	WITHOUT_CLASSIFICATION	7.271721465493893E-6	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999851125791155	WITHOUT_CLASSIFICATION	1.4887420884594891E-5	TEST
// line 1854	WITHOUT_CLASSIFICATION	0.9999989826102053	WITHOUT_CLASSIFICATION	1.0173897947316089E-6	TEST
// line 1869	WITHOUT_CLASSIFICATION	0.9999989970705135	WITHOUT_CLASSIFICATION	1.0029294865163508E-6	TEST
// line 1872	WITHOUT_CLASSIFICATION	0.9999988931564726	WITHOUT_CLASSIFICATION	1.106843527408146E-6	TEST
// line 1877	WITHOUT_CLASSIFICATION	0.9999989313544793	WITHOUT_CLASSIFICATION	1.0686455207725E-6	TEST
// line 1886	WITHOUT_CLASSIFICATION	0.9999989501943765	WITHOUT_CLASSIFICATION	1.049805623599992E-6	TEST
// line 1898	WITHOUT_CLASSIFICATION	0.9999989585533894	WITHOUT_CLASSIFICATION	1.0414466105534018E-6	TEST
// line 1902	WITHOUT_CLASSIFICATION	0.9999989122471692	WITHOUT_CLASSIFICATION	1.0877528307673665E-6	TEST
// line 1905	WITHOUT_CLASSIFICATION	0.9999988492295317	WITHOUT_CLASSIFICATION	1.1507704681530477E-6	TEST
// line 1911	WITHOUT_CLASSIFICATION	0.9999986686078027	WITHOUT_CLASSIFICATION	1.331392197277068E-6	TEST
// line 1918	WITHOUT_CLASSIFICATION	0.9999989632570434	WITHOUT_CLASSIFICATION	1.0367429565094248E-6	TEST
// line 1935	WITHOUT_CLASSIFICATION	0.9999987370999474	WITHOUT_CLASSIFICATION	1.2629000527160304E-6	TEST
// line 1938	WITHOUT_CLASSIFICATION	0.999998767192173	WITHOUT_CLASSIFICATION	1.2328078270179243E-6	TEST
// line 1942	WITHOUT_CLASSIFICATION	0.9999988893674105	WITHOUT_CLASSIFICATION	1.1106325894537468E-6	TEST
// line 1948	WITHOUT_CLASSIFICATION	0.9999989509301836	WITHOUT_CLASSIFICATION	1.0490698163235565E-6	TEST
// line 1960	WITHOUT_CLASSIFICATION	0.9999989864608951	WITHOUT_CLASSIFICATION	1.0135391047760898E-6	TEST
// line 1963	WITHOUT_CLASSIFICATION	0.9999987760721336	WITHOUT_CLASSIFICATION	1.223927866391763E-6	TEST
// line 1968	WITHOUT_CLASSIFICATION	0.999998927271347	WITHOUT_CLASSIFICATION	1.0727286530174071E-6	TEST
// line 1972	WITHOUT_CLASSIFICATION	0.9999988588505746	WITHOUT_CLASSIFICATION	1.141149425421018E-6	TEST
// line 1982	WITHOUT_CLASSIFICATION	0.9999988764011992	WITHOUT_CLASSIFICATION	1.1235988008215864E-6	TEST
// line 1995	WITHOUT_CLASSIFICATION	0.9999988764360348	WITHOUT_CLASSIFICATION	1.1235639652724094E-6	TEST
// line 2000	WITHOUT_CLASSIFICATION	0.999998188377834	WITHOUT_CLASSIFICATION	1.8116221659365567E-6	TEST
// line 2006	WITHOUT_CLASSIFICATION	0.9999982144830064	WITHOUT_CLASSIFICATION	1.785516993541428E-6	TEST
// line 2010	WITHOUT_CLASSIFICATION	0.9999987323593201	WITHOUT_CLASSIFICATION	1.2676406798329436E-6	TEST
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999984029275478	WITHOUT_CLASSIFICATION	1.5970724521451242E-6	TEST
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999973070195489	WITHOUT_CLASSIFICATION	2.6929804509959057E-6	TEST
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999993144711206	WITHOUT_CLASSIFICATION	6.855288794504862E-7	TEST
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999930363559123	WITHOUT_CLASSIFICATION	6.963644087633186E-6	TEST
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999999495092311	WITHOUT_CLASSIFICATION	5.0490768845164694E-8	TEST
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9999686978715132	WITHOUT_CLASSIFICATION	3.130212848681803E-5	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999997898180795	WITHOUT_CLASSIFICATION	2.101819205389018E-7	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.999999067568109	WITHOUT_CLASSIFICATION	9.324318910563613E-7	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999998779496564	WITHOUT_CLASSIFICATION	1.2205034359062515E-7	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999998779496564	WITHOUT_CLASSIFICATION	1.2205034359062515E-7	TEST
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9999527516784108	WITHOUT_CLASSIFICATION	4.7248321589203935E-5	TEST
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999977079259087	WITHOUT_CLASSIFICATION	2.292074091267213E-6	TEST
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999997952420804	WITHOUT_CLASSIFICATION	2.0475791963386936E-7	TEST
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999989715716033	WITHOUT_CLASSIFICATION	1.0284283966651287E-6	TEST
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.999999923527329	WITHOUT_CLASSIFICATION	7.6472670983279E-8	TEST
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999967224256032	WITHOUT_CLASSIFICATION	3.2775743967860763E-6	TEST
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999980075646432	WITHOUT_CLASSIFICATION	1.9924353567157374E-6	TEST
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999998461447603	WITHOUT_CLASSIFICATION	1.5385523962186564E-7	TEST
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999999001171552	WITHOUT_CLASSIFICATION	9.988284469816597E-8	TEST
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999967634633049	WITHOUT_CLASSIFICATION	3.236536694952396E-6	TEST
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999994407678314	WITHOUT_CLASSIFICATION	5.592321685348944E-7	TEST
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999993487564321	WITHOUT_CLASSIFICATION	6.512435677545295E-7	TEST
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999995103175662	WITHOUT_CLASSIFICATION	4.896824339464654E-7	TEST
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999997651603802	WITHOUT_CLASSIFICATION	2.34839619790567E-7	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999995111945466	WITHOUT_CLASSIFICATION	4.888054534756221E-7	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999995111945466	WITHOUT_CLASSIFICATION	4.888054534756221E-7	TEST
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999928217662302	WITHOUT_CLASSIFICATION	7.178233769785901E-6	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999999468281284	WITHOUT_CLASSIFICATION	5.3171871719659676E-8	TEST
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999982763843079	WITHOUT_CLASSIFICATION	1.723615692071328E-6	TEST
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999995221362101	WITHOUT_CLASSIFICATION	4.77863789762339E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999950865263235	WITHOUT_CLASSIFICATION	4.913473676459493E-6	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999996681139326	WITHOUT_CLASSIFICATION	3.318860673980998E-7	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999999562572567	WITHOUT_CLASSIFICATION	4.3742743364778985E-8	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999996681139326	WITHOUT_CLASSIFICATION	3.318860673980998E-7	TEST
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999819973537325	WITHOUT_CLASSIFICATION	1.8002646267441666E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999992919419701	WITHOUT_CLASSIFICATION	7.080580298579623E-7	TEST
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9999985287530946	WITHOUT_CLASSIFICATION	1.4712469054457714E-6	TEST
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9999949313651584	WITHOUT_CLASSIFICATION	5.068634841605597E-6	TEST
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9999983459762803	WITHOUT_CLASSIFICATION	1.6540237196055772E-6	TEST
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999965944110533	WITHOUT_CLASSIFICATION	3.4055889466399164E-6	TEST
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999992739554179	WITHOUT_CLASSIFICATION	7.260445821401694E-7	TEST
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.999998265786938	WITHOUT_CLASSIFICATION	1.734213062076194E-6	TEST
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999980975696849	WITHOUT_CLASSIFICATION	1.902430315128814E-6	TEST
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999979591455697	WITHOUT_CLASSIFICATION	2.0408544302855207E-6	TEST
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999981426344405	WITHOUT_CLASSIFICATION	1.857365559484453E-6	TEST
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999927534905899	WITHOUT_CLASSIFICATION	7.246509410055871E-6	TEST
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.999985975273394	WITHOUT_CLASSIFICATION	1.4024726606052744E-5	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.999997394270719	WITHOUT_CLASSIFICATION	2.60572928107992E-6	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999979375810579	WITHOUT_CLASSIFICATION	2.062418942070083E-6	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999979375810579	WITHOUT_CLASSIFICATION	2.062418942070083E-6	TEST
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999997931797066	WITHOUT_CLASSIFICATION	2.0682029346767055E-7	TEST
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999995761533068	WITHOUT_CLASSIFICATION	4.238466931326726E-7	TEST
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.999999675126752	WITHOUT_CLASSIFICATION	3.2487324800000233E-7	TEST
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999999290964949	WITHOUT_CLASSIFICATION	7.090350504646024E-8	TEST
// required and optional only	WITHOUT_CLASSIFICATION	0.9999999344150283	WITHOUT_CLASSIFICATION	6.558497168270317E-8	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999996681139326	WITHOUT_CLASSIFICATION	3.318860673980998E-7	TEST
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999997425002563	WITHOUT_CLASSIFICATION	2.574997437642349E-7	TEST
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999999902079223	WITHOUT_CLASSIFICATION	9.792077694213654E-9	TEST
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999988935069553	WITHOUT_CLASSIFICATION	1.1064930447884798E-6	TEST
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999998395171702	WITHOUT_CLASSIFICATION	1.6048282988839217E-7	TEST
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999998853793938	WITHOUT_CLASSIFICATION	1.1462060620654778E-7	TEST
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999998323185457	WITHOUT_CLASSIFICATION	1.6768145438158091E-7	TEST
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999990160966169	WITHOUT_CLASSIFICATION	9.839033831149575E-7	TEST
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999995873533185	WITHOUT_CLASSIFICATION	4.126466814616569E-7	TEST
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999999024708016	WITHOUT_CLASSIFICATION	9.75291984408525E-8	TEST
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999998086984779	WITHOUT_CLASSIFICATION	1.913015221582939E-7	TEST
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999998895006282	WITHOUT_CLASSIFICATION	1.1049937175684032E-7	TEST
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999998680295117	WITHOUT_CLASSIFICATION	1.3197048833625067E-7	TEST
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999047584340595	WITHOUT_CLASSIFICATION	9.524156594048155E-5	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999951989572559	WITHOUT_CLASSIFICATION	4.801042744162713E-6	TEST
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.999998752299107	WITHOUT_CLASSIFICATION	1.24770089306771E-6	TEST
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999863296533024	WITHOUT_CLASSIFICATION	1.3670346697621242E-5	TEST
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999996893193316	WITHOUT_CLASSIFICATION	3.1068066840631987E-7	TEST
// id must always be even	WITHOUT_CLASSIFICATION	0.9999993681195629	WITHOUT_CLASSIFICATION	6.318804370441574E-7	TEST
// with block pass	WITHOUT_CLASSIFICATION	0.9999986554619066	WITHOUT_CLASSIFICATION	1.3445380934530203E-6	TEST
// no block	WITHOUT_CLASSIFICATION	0.9999995565758757	WITHOUT_CLASSIFICATION	4.4342412420914224E-7	TEST
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999989686392733	WITHOUT_CLASSIFICATION	1.0313607266925155E-6	TEST
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999930088031374	WITHOUT_CLASSIFICATION	6.991196862680357E-6	TEST
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999997025297238	WITHOUT_CLASSIFICATION	2.974702762032435E-7	TEST
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999996004754658	WITHOUT_CLASSIFICATION	3.9952453429830595E-7	TEST
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999997820776371	WITHOUT_CLASSIFICATION	2.1792236284295885E-7	TEST
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999991404459975	WITHOUT_CLASSIFICATION	8.595540026509819E-7	TEST
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999999251621339	WITHOUT_CLASSIFICATION	7.483786611218777E-8	TEST
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.999999626446418	WITHOUT_CLASSIFICATION	3.7355358204882724E-7	TEST
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.999998133459285	WITHOUT_CLASSIFICATION	1.866540715031487E-6	TEST
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999997390607341	WITHOUT_CLASSIFICATION	2.6093926585382005E-7	TEST
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999993491949718	WITHOUT_CLASSIFICATION	6.508050281452964E-7	TEST
// Lastline	WITHOUT_CLASSIFICATION	0.9999994335862827	WITHOUT_CLASSIFICATION	5.66413717198912E-7	TEST
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999989446977667	WITHOUT_CLASSIFICATION	1.0553022332617061E-6	TEST
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999997781531182	WITHOUT_CLASSIFICATION	2.218468818068284E-7	TEST
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999998446785491	WITHOUT_CLASSIFICATION	1.5532145092263253E-7	TEST
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999998776371216	WITHOUT_CLASSIFICATION	1.2236287835874704E-7	TEST
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999995893933997	WITHOUT_CLASSIFICATION	4.106066002382876E-7	TEST
// silently ignore	WITHOUT_CLASSIFICATION	0.9999998477875613	WITHOUT_CLASSIFICATION	1.5221243854212553E-7	TEST
// used by compiler	WITHOUT_CLASSIFICATION	0.9999995158879583	WITHOUT_CLASSIFICATION	4.841120416769535E-7	TEST
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999999759160436	WITHOUT_CLASSIFICATION	2.4083956414784717E-8	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999851125791155	WITHOUT_CLASSIFICATION	1.4887420884594891E-5	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999995924331186	WITHOUT_CLASSIFICATION	4.0756688140303374E-7	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999994998102256	WITHOUT_CLASSIFICATION	5.001897742742308E-7	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999998208859103	WITHOUT_CLASSIFICATION	1.7911408961901285E-7	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999998038797623	WITHOUT_CLASSIFICATION	1.9612023761850065E-7	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999992919419701	WITHOUT_CLASSIFICATION	7.080580298579623E-7	TEST
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999988985438987	WITHOUT_CLASSIFICATION	1.1014561012915386E-6	TEST
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999998045674472	WITHOUT_CLASSIFICATION	1.9543255287131012E-7	TEST
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.999999643669145	WITHOUT_CLASSIFICATION	3.563308550503988E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999548870389	WITHOUT_CLASSIFICATION	4.511296124325585E-8	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999548870389	WITHOUT_CLASSIFICATION	4.511296124325585E-8	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999998632561881	WITHOUT_CLASSIFICATION	1.3674381197686777E-7	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999998632561881	WITHOUT_CLASSIFICATION	1.3674381197686777E-7	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999998632561881	WITHOUT_CLASSIFICATION	1.3674381197686777E-7	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999981656427327	WITHOUT_CLASSIFICATION	1.834357267410999E-6	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999981656427327	WITHOUT_CLASSIFICATION	1.834357267410999E-6	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999943418217838	WITHOUT_CLASSIFICATION	5.658178216122496E-6	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999943418217838	WITHOUT_CLASSIFICATION	5.658178216122496E-6	TEST
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999156774849272	WITHOUT_CLASSIFICATION	8.432251507287302E-5	TEST
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999875032650586	WITHOUT_CLASSIFICATION	1.249673494142045E-5	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.9999985238627114	WITHOUT_CLASSIFICATION	1.4761372886364435E-6	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.9999985238627114	WITHOUT_CLASSIFICATION	1.4761372886364435E-6	TEST
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999996457196886	WITHOUT_CLASSIFICATION	3.542803114385037E-7	TEST
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999995625597028	WITHOUT_CLASSIFICATION	4.374402971330249E-7	TEST
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999986901692639	WITHOUT_CLASSIFICATION	1.3098307361246348E-6	TEST
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999998120562148	WITHOUT_CLASSIFICATION	1.8794378518176172E-7	TEST
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999996718386684	WITHOUT_CLASSIFICATION	3.281613315438938E-7	TEST
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999999608092344	WITHOUT_CLASSIFICATION	3.919076551157282E-8	TEST
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999967555228882	WITHOUT_CLASSIFICATION	3.244477111750889E-6	TEST
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999996062864046	WITHOUT_CLASSIFICATION	3.9371359538171366E-7	TEST
// caller	WITHOUT_CLASSIFICATION	0.9999997404669678	WITHOUT_CLASSIFICATION	2.595330321361768E-7	TEST
// calltype // block	WITHOUT_CLASSIFICATION	0.9999997387554997	WITHOUT_CLASSIFICATION	2.6124450028287215E-7	TEST
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999999509754313	WITHOUT_CLASSIFICATION	4.9024568643296945E-8	TEST
// load arity for check	WITHOUT_CLASSIFICATION	0.9999995260435369	WITHOUT_CLASSIFICATION	4.7395646302347035E-7	TEST
// throw	WITHOUT_CLASSIFICATION	0.999996704024256	WITHOUT_CLASSIFICATION	3.295975744075135E-6	TEST
// load arity for error	WITHOUT_CLASSIFICATION	0.9999993811143026	WITHOUT_CLASSIFICATION	6.188856973168911E-7	TEST
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999999363925276	WITHOUT_CLASSIFICATION	6.360747240376462E-8	TEST
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999973322033174	WITHOUT_CLASSIFICATION	2.667796682644964E-6	TEST
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9999979244751942	WITHOUT_CLASSIFICATION	2.0755248057753053E-6	TEST
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999994636628903	WITHOUT_CLASSIFICATION	5.363371097569834E-7	TEST
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999996264375547	WITHOUT_CLASSIFICATION	3.7356244539242104E-7	TEST
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999892703488393	WITHOUT_CLASSIFICATION	1.0729651160636838E-5	TEST
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999997211727675	WITHOUT_CLASSIFICATION	2.788272325690327E-7	TEST
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999995054273798	WITHOUT_CLASSIFICATION	4.945726202339738E-7	TEST
// load the encoding	WITHOUT_CLASSIFICATION	0.9999998460674943	WITHOUT_CLASSIFICATION	1.5393250571567938E-7	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999831662955	WITHOUT_CLASSIFICATION	1.6833704536108125E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999834806804	WITHOUT_CLASSIFICATION	1.651931960377943E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999622560317	WITHOUT_CLASSIFICATION	3.774396830097958E-8	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999321915359	WITHOUT_CLASSIFICATION	6.780846401977466E-8	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999580135754	WITHOUT_CLASSIFICATION	4.198642442110703E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999814703715	WITHOUT_CLASSIFICATION	1.8529628462629426E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999818164294	WITHOUT_CLASSIFICATION	1.8183570589978212E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999999958453488	WITHOUT_CLASSIFICATION	4.1546512019913134E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999873185509	WITHOUT_CLASSIFICATION	1.2681449237574968E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999875553885	WITHOUT_CLASSIFICATION	1.2444611495289688E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999774107363	WITHOUT_CLASSIFICATION	2.2589263699899694E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999875553885	WITHOUT_CLASSIFICATION	1.2444611495289688E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999875553885	WITHOUT_CLASSIFICATION	1.2444611495289688E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999875553885	WITHOUT_CLASSIFICATION	1.2444611495289688E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999875553885	WITHOUT_CLASSIFICATION	1.2444611495289688E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999875553885	WITHOUT_CLASSIFICATION	1.2444611495289688E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999875553885	WITHOUT_CLASSIFICATION	1.2444611495289688E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999774107363	WITHOUT_CLASSIFICATION	2.2589263699899694E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999774107363	WITHOUT_CLASSIFICATION	2.2589263699899694E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999774107363	WITHOUT_CLASSIFICATION	2.2589263699899694E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999774107363	WITHOUT_CLASSIFICATION	2.2589263699899694E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999774107363	WITHOUT_CLASSIFICATION	2.2589263699899694E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999774107363	WITHOUT_CLASSIFICATION	2.2589263699899694E-8	TEST
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999996217040916	WITHOUT_CLASSIFICATION	3.7829590843373807E-7	TEST
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999997726935689	WITHOUT_CLASSIFICATION	2.2730643118484102E-7	TEST
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999996402143805	WITHOUT_CLASSIFICATION	3.5978561961678447E-7	TEST
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999161149015	WITHOUT_CLASSIFICATION	8.388509847299951E-8	TEST
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999999831799862	WITHOUT_CLASSIFICATION	1.682001383437454E-8	TEST
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999307003398	WITHOUT_CLASSIFICATION	6.929966025884016E-8	TEST
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999995871024543	WITHOUT_CLASSIFICATION	4.128975457261079E-7	TEST
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999999820635603	WITHOUT_CLASSIFICATION	1.793643971461446E-8	TEST
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999999842398447	WITHOUT_CLASSIFICATION	1.5760155315426626E-8	TEST
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999978353117294	WITHOUT_CLASSIFICATION	2.1646882707572866E-6	TEST
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9999776071084244	WITHOUT_CLASSIFICATION	2.239289157559935E-5	TEST
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999998442050163	WITHOUT_CLASSIFICATION	1.55794983638714E-7	TEST
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999988036586933	WITHOUT_CLASSIFICATION	1.1963413067537105E-6	TEST
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999999325956432	WITHOUT_CLASSIFICATION	6.740435682384218E-8	TEST
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.999999773171431	WITHOUT_CLASSIFICATION	2.268285689139383E-7	TEST
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.999999005691338	WITHOUT_CLASSIFICATION	9.943086619716852E-7	TEST
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999986850001306	WITHOUT_CLASSIFICATION	1.3149998694532172E-6	TEST
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999998176311933	WITHOUT_CLASSIFICATION	1.8236880660240331E-7	TEST
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999998408585881	WITHOUT_CLASSIFICATION	1.5914141188381884E-7	TEST
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999999917890303	WITHOUT_CLASSIFICATION	8.21096976650017E-9	TEST
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999989816299191	WITHOUT_CLASSIFICATION	1.0183700808797682E-6	TEST
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999991493635977	WITHOUT_CLASSIFICATION	8.506364023893286E-7	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999999562572567	WITHOUT_CLASSIFICATION	4.3742743364778985E-8	TEST
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9999996043979962	WITHOUT_CLASSIFICATION	3.9560200378093847E-7	TEST
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999995891067436	WITHOUT_CLASSIFICATION	4.108932565005591E-7	TEST
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999995843462838	WITHOUT_CLASSIFICATION	4.1565371631037233E-7	TEST
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999999896959052	WITHOUT_CLASSIFICATION	1.0304094805234673E-8	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999998271528674	WITHOUT_CLASSIFICATION	1.728471325844875E-7	TEST
// extension extensions	WITHOUT_CLASSIFICATION	0.9999995242125667	WITHOUT_CLASSIFICATION	4.7578743342678433E-7	TEST
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999999445191367	WITHOUT_CLASSIFICATION	5.548086332772145E-8	TEST
// try all extensions	WITHOUT_CLASSIFICATION	0.9999998795901875	WITHOUT_CLASSIFICATION	1.20409812403834E-7	TEST
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999999835128494	WITHOUT_CLASSIFICATION	1.6487150582919457E-8	TEST
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999999630454133	WITHOUT_CLASSIFICATION	3.695458678861259E-8	TEST
// try only literal search	WITHOUT_CLASSIFICATION	0.9999999139957512	WITHOUT_CLASSIFICATION	8.600424891560355E-8	TEST
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999998287108383	WITHOUT_CLASSIFICATION	1.7128916181259285E-7	TEST
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999992622160471	WITHOUT_CLASSIFICATION	7.377839529864838E-7	TEST
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999999471520093	WITHOUT_CLASSIFICATION	5.284799073981982E-8	TEST
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999997618062959	WITHOUT_CLASSIFICATION	2.3819370408069948E-7	TEST
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999999981948061	WITHOUT_CLASSIFICATION	1.80519398779974E-9	TEST
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999999807383662	WITHOUT_CLASSIFICATION	1.9261633856688067E-8	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999996494547004	WITHOUT_CLASSIFICATION	3.505452996068492E-7	TEST
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999997150537063	WITHOUT_CLASSIFICATION	2.8494629365517974E-7	TEST
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999997386727159	WITHOUT_CLASSIFICATION	2.613272841245891E-7	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.99999912886554	WITHOUT_CLASSIFICATION	8.711344599613686E-7	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.99999912886554	WITHOUT_CLASSIFICATION	8.711344599613686E-7	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999995274945774	WITHOUT_CLASSIFICATION	4.7250542258798936E-7	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999995274945774	WITHOUT_CLASSIFICATION	4.7250542258798936E-7	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999994820983321	WITHOUT_CLASSIFICATION	5.1790166789521E-7	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999994820983321	WITHOUT_CLASSIFICATION	5.1790166789521E-7	TEST
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999999273973471	WITHOUT_CLASSIFICATION	7.260265291635224E-8	TEST
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999999486450362	WITHOUT_CLASSIFICATION	5.13549638433604E-8	TEST
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999998412651775	WITHOUT_CLASSIFICATION	1.5873482247712872E-7	TEST
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.999999979568773	WITHOUT_CLASSIFICATION	2.0431227033582162E-8	TEST
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999996825668342	WITHOUT_CLASSIFICATION	3.174331658204042E-7	TEST
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9999944459589265	WITHOUT_CLASSIFICATION	5.554041073509311E-6	TEST
// signed short, native	WITHOUT_CLASSIFICATION	0.9999985917905716	WITHOUT_CLASSIFICATION	1.4082094284352932E-6	TEST
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999909694343	WITHOUT_CLASSIFICATION	9.030565725684043E-9	TEST
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999991526816098	WITHOUT_CLASSIFICATION	8.473183902977111E-7	TEST
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999997778255625	WITHOUT_CLASSIFICATION	2.221744375398351E-7	TEST
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999980166865341	WITHOUT_CLASSIFICATION	1.9833134658953902E-6	TEST
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999998527254205	WITHOUT_CLASSIFICATION	1.4727457955166992E-7	TEST
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999999270727509	WITHOUT_CLASSIFICATION	7.292724908904899E-8	TEST
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999998572921072	WITHOUT_CLASSIFICATION	1.4270789288106264E-7	TEST
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999978762617004	WITHOUT_CLASSIFICATION	2.123738299519282E-6	TEST
//            write('S');	WITHOUT_CLASSIFICATION	0.9999989719360819	WITHOUT_CLASSIFICATION	1.0280639181032221E-6	TEST
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999999893798651	WITHOUT_CLASSIFICATION	1.0620134818275197E-8	TEST
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999997083989616	WITHOUT_CLASSIFICATION	2.9160103844376056E-7	TEST
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999998999602524	WITHOUT_CLASSIFICATION	1.0003974755454867E-7	TEST
// w_symbol	WITHOUT_CLASSIFICATION	0.9999976010131097	WITHOUT_CLASSIFICATION	2.3989868902173117E-6	TEST
// w_unique	WITHOUT_CLASSIFICATION	0.9999984449117812	WITHOUT_CLASSIFICATION	1.5550882188318685E-6	TEST
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999984368200132	WITHOUT_CLASSIFICATION	1.5631799867935517E-6	TEST
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999982470028962	WITHOUT_CLASSIFICATION	1.752997103782535E-6	TEST
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999999015293599	WITHOUT_CLASSIFICATION	9.847064007609708E-8	TEST
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999995809449672	WITHOUT_CLASSIFICATION	4.1905503269972415E-7	TEST
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999999638682184	WITHOUT_CLASSIFICATION	3.613178162365513E-8	TEST
// sic	WITHOUT_CLASSIFICATION	0.9999989379152798	WITHOUT_CLASSIFICATION	1.0620847201393723E-6	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999998536525543	WITHOUT_CLASSIFICATION	1.4634744566421368E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999998536525543	WITHOUT_CLASSIFICATION	1.4634744566421368E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999998536525543	WITHOUT_CLASSIFICATION	1.4634744566421368E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999907533399	WITHOUT_CLASSIFICATION	9.246660069826876E-9	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999907533399	WITHOUT_CLASSIFICATION	9.246660069826876E-9	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999951989572559	WITHOUT_CLASSIFICATION	4.801042744162713E-6	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999951989572559	WITHOUT_CLASSIFICATION	4.801042744162713E-6	TEST
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999999030720437	WITHOUT_CLASSIFICATION	9.692795631468537E-8	TEST
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9999936761906187	WITHOUT_CLASSIFICATION	6.323809381317934E-6	TEST
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999988751490843	WITHOUT_CLASSIFICATION	1.124850915751466E-6	TEST
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999996904987759	WITHOUT_CLASSIFICATION	3.095012241188272E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999998536525543	WITHOUT_CLASSIFICATION	1.4634744566421368E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999998536525543	WITHOUT_CLASSIFICATION	1.4634744566421368E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999998536525543	WITHOUT_CLASSIFICATION	1.4634744566421368E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999907533399	WITHOUT_CLASSIFICATION	9.246660069826876E-9	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999907533399	WITHOUT_CLASSIFICATION	9.246660069826876E-9	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999907533399	WITHOUT_CLASSIFICATION	9.246660069826876E-9	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999951989572559	WITHOUT_CLASSIFICATION	4.801042744162713E-6	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999951989572559	WITHOUT_CLASSIFICATION	4.801042744162713E-6	TEST
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999981631026233	WITHOUT_CLASSIFICATION	1.8368973765568394E-6	TEST
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999998567530215	WITHOUT_CLASSIFICATION	1.432469785876646E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999992923896557	WITHOUT_CLASSIFICATION	7.076103443967856E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999992923896557	WITHOUT_CLASSIFICATION	7.076103443967856E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999992923896557	WITHOUT_CLASSIFICATION	7.076103443967856E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999992923896557	WITHOUT_CLASSIFICATION	7.076103443967856E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999992923896557	WITHOUT_CLASSIFICATION	7.076103443967856E-7	TEST
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999998582223639	WITHOUT_CLASSIFICATION	1.4177763617153713E-7	TEST
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999993709109433	WITHOUT_CLASSIFICATION	6.290890566419365E-7	TEST
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9999993786146132	WITHOUT_CLASSIFICATION	6.213853867656784E-7	TEST
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999928344554655	WITHOUT_CLASSIFICATION	7.165544534456344E-6	TEST
// are we at '**/'	WITHOUT_CLASSIFICATION	0.999999599777891	WITHOUT_CLASSIFICATION	4.0022210907037054E-7	TEST
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999757995923796	WITHOUT_CLASSIFICATION	2.4200407620504528E-5	TEST
// not enough bytes	WITHOUT_CLASSIFICATION	0.9999957142340931	WITHOUT_CLASSIFICATION	4.2857659069508516E-6	TEST
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.999999731803039	WITHOUT_CLASSIFICATION	2.6819696098165424E-7	TEST
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999997151483574	WITHOUT_CLASSIFICATION	2.84851642610581E-7	TEST
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999983585163601	WITHOUT_CLASSIFICATION	1.64148363998954E-6	TEST
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999981246044997	WITHOUT_CLASSIFICATION	1.8753955004268615E-6	TEST
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999974277643549	WITHOUT_CLASSIFICATION	2.5722356451366884E-6	TEST
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999973642774385	WITHOUT_CLASSIFICATION	2.635722561552211E-6	TEST
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.999999711924604	WITHOUT_CLASSIFICATION	2.880753960072194E-7	TEST
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999931191379102	WITHOUT_CLASSIFICATION	6.880862089655227E-6	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999791365073611	WITHOUT_CLASSIFICATION	2.086349263879389E-5	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999791365073611	WITHOUT_CLASSIFICATION	2.086349263879389E-5	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999791365073611	WITHOUT_CLASSIFICATION	2.086349263879389E-5	TEST
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999773637366636	WITHOUT_CLASSIFICATION	2.2636263336413515E-5	TEST
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999773625960988	WITHOUT_CLASSIFICATION	2.2637403901256377E-5	TEST
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999988763783134	WITHOUT_CLASSIFICATION	1.1236216865509941E-6	TEST
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.999999992372192	WITHOUT_CLASSIFICATION	7.627808061208469E-9	TEST
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999997114121432	WITHOUT_CLASSIFICATION	2.8858785688457956E-7	TEST
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999995305435879	WITHOUT_CLASSIFICATION	4.6945641204137155E-7	TEST
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999993363147767	WITHOUT_CLASSIFICATION	6.636852232280406E-7	TEST
// single precision, native	WITHOUT_CLASSIFICATION	0.9999995383287283	WITHOUT_CLASSIFICATION	4.6167127169993946E-7	TEST
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999987892994988	WITHOUT_CLASSIFICATION	1.2107005011601472E-6	TEST
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999998088958835	WITHOUT_CLASSIFICATION	1.9110411659778322E-7	TEST
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999997214285075	WITHOUT_CLASSIFICATION	2.785714924838979E-7	TEST
// double precision, native	WITHOUT_CLASSIFICATION	0.9999998390715842	WITHOUT_CLASSIFICATION	1.6092841579036133E-7	TEST
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999993915981652	WITHOUT_CLASSIFICATION	6.084018348920052E-7	TEST
// signed char	WITHOUT_CLASSIFICATION	0.9999997173989216	WITHOUT_CLASSIFICATION	2.826010784503506E-7	TEST
// unsigned char	WITHOUT_CLASSIFICATION	0.9999997490193682	WITHOUT_CLASSIFICATION	2.509806318628123E-7	TEST
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999996615436931	WITHOUT_CLASSIFICATION	3.384563068471441E-7	TEST
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999996577119061	WITHOUT_CLASSIFICATION	3.4228809395273683E-7	TEST
// unsigned int, native	WITHOUT_CLASSIFICATION	0.999999753591678	WITHOUT_CLASSIFICATION	2.4640832193288126E-7	TEST
// int, native	WITHOUT_CLASSIFICATION	0.9999997907065188	WITHOUT_CLASSIFICATION	2.0929348123691354E-7	TEST
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999992492109726	WITHOUT_CLASSIFICATION	7.507890273618017E-7	TEST
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999998361197664	WITHOUT_CLASSIFICATION	1.6388023361130826E-7	TEST
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999996832671479	WITHOUT_CLASSIFICATION	3.167328519674487E-7	TEST
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9999984806634664	WITHOUT_CLASSIFICATION	1.5193365335034902E-6	TEST
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999997214128693	WITHOUT_CLASSIFICATION	2.785871307126226E-7	TEST
// obtain a	WITHOUT_CLASSIFICATION	0.9999994564684722	WITHOUT_CLASSIFICATION	5.435315277581305E-7	TEST
// obtain b	WITHOUT_CLASSIFICATION	0.9999994319968369	WITHOUT_CLASSIFICATION	5.680031630720442E-7	TEST
// obtain c	WITHOUT_CLASSIFICATION	0.9999997081127299	WITHOUT_CLASSIFICATION	2.9188727006264915E-7	TEST
// obtain d	WITHOUT_CLASSIFICATION	0.9999994752820082	WITHOUT_CLASSIFICATION	5.247179918608046E-7	TEST
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999983295430328	WITHOUT_CLASSIFICATION	1.6704569671129472E-6	TEST
/* 1 */	WITHOUT_CLASSIFICATION	0.9999899433234198	WITHOUT_CLASSIFICATION	1.0056676580171554E-5	TEST
/* 2 */	WITHOUT_CLASSIFICATION	0.9999883504690797	WITHOUT_CLASSIFICATION	1.1649530920358824E-5	TEST
/* 3 */	WITHOUT_CLASSIFICATION	0.9999829630934988	WITHOUT_CLASSIFICATION	1.7036906501192027E-5	TEST
/* 4 */	WITHOUT_CLASSIFICATION	0.9999899261644969	WITHOUT_CLASSIFICATION	1.0073835503035795E-5	TEST
/* 5 */	WITHOUT_CLASSIFICATION	0.9999874715172042	WITHOUT_CLASSIFICATION	1.252848279571176E-5	TEST
/* 6 */	WITHOUT_CLASSIFICATION	0.9999894277867167	WITHOUT_CLASSIFICATION	1.057221328324144E-5	TEST
/* 7 */	WITHOUT_CLASSIFICATION	0.9999892786433124	WITHOUT_CLASSIFICATION	1.0721356687558336E-5	TEST
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999995194316931	WITHOUT_CLASSIFICATION	4.805683069243244E-7	TEST
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999998971240652	WITHOUT_CLASSIFICATION	1.0287593468899288E-7	TEST
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999970806738625	WITHOUT_CLASSIFICATION	2.919326137501125E-6	TEST
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9889131640292154	WITHOUT_CLASSIFICATION	0.011086835970784607	TEST
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999974047519103	WITHOUT_CLASSIFICATION	2.595248089663725E-6	TEST
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999998234871998	WITHOUT_CLASSIFICATION	1.765128000160126E-7	TEST
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999891396411982	WITHOUT_CLASSIFICATION	1.0860358801739763E-5	TEST
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999997541343592	WITHOUT_CLASSIFICATION	2.4586564085076326E-7	TEST
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.999978340580552	WITHOUT_CLASSIFICATION	2.165941944802055E-5	TEST
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999988952122102	WITHOUT_CLASSIFICATION	1.104787789708371E-6	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999376625108229	WITHOUT_CLASSIFICATION	6.23374891770439E-5	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999376625108229	WITHOUT_CLASSIFICATION	6.23374891770439E-5	TEST
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9999443293966538	WITHOUT_CLASSIFICATION	5.5670603346221814E-5	TEST
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999999922617541	WITHOUT_CLASSIFICATION	7.738245943185307E-9	TEST
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999991366928579	WITHOUT_CLASSIFICATION	8.633071421525433E-7	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9942013591352822	WITHOUT_CLASSIFICATION	0.00579864086471788	TEST
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.999995213840211	WITHOUT_CLASSIFICATION	4.786159789045476E-6	TEST
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999982609542891	WITHOUT_CLASSIFICATION	1.7390457108867884E-6	TEST
// are we recursing?	WITHOUT_CLASSIFICATION	0.9999998004609701	WITHOUT_CLASSIFICATION	1.9953902991160764E-7	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999998473503547	WITHOUT_CLASSIFICATION	1.5264964528068874E-7	TEST
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999995511739875	WITHOUT_CLASSIFICATION	4.4882601246288515E-7	TEST
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999974113647696	WITHOUT_CLASSIFICATION	2.5886352303744883E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999998586628099	WITHOUT_CLASSIFICATION	1.4133719007878618E-7	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999998586628099	WITHOUT_CLASSIFICATION	1.4133719007878618E-7	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999998586628099	WITHOUT_CLASSIFICATION	1.4133719007878618E-7	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999998586628099	WITHOUT_CLASSIFICATION	1.4133719007878618E-7	TEST
// try both	WITHOUT_CLASSIFICATION	0.999997802377913	WITHOUT_CLASSIFICATION	2.1976220870754703E-6	TEST
// just unix	WITHOUT_CLASSIFICATION	0.9999986103251473	WITHOUT_CLASSIFICATION	1.3896748527914401E-6	TEST
// just windows	WITHOUT_CLASSIFICATION	0.999988884765261	WITHOUT_CLASSIFICATION	1.111523473899862E-5	TEST
// neither	WITHOUT_CLASSIFICATION	0.999999069717995	WITHOUT_CLASSIFICATION	9.302820048625822E-7	TEST
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999895309516817	WITHOUT_CLASSIFICATION	1.0469048318297018E-5	TEST
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999996677256008	WITHOUT_CLASSIFICATION	3.3227439920550736E-7	TEST
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.99999994202581	WITHOUT_CLASSIFICATION	5.797419012106143E-8	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999999370953799	WITHOUT_CLASSIFICATION	6.290462011756758E-8	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999999370953799	WITHOUT_CLASSIFICATION	6.290462011756758E-8	TEST
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999998644712139	WITHOUT_CLASSIFICATION	1.3552878601017984E-7	TEST
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999995409616451	WITHOUT_CLASSIFICATION	4.5903835496595544E-7	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999428325200291	WITHOUT_CLASSIFICATION	5.7167479970761266E-5	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.99999998490254	WITHOUT_CLASSIFICATION	1.5097459979168214E-8	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.99999998490254	WITHOUT_CLASSIFICATION	1.5097459979168214E-8	TEST
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999999607970133	WITHOUT_CLASSIFICATION	3.9202986718233944E-8	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999944979134439	WITHOUT_CLASSIFICATION	5.502086556243419E-6	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999944979134439	WITHOUT_CLASSIFICATION	5.502086556243419E-6	TEST
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999979791271805	WITHOUT_CLASSIFICATION	2.0208728194203072E-6	TEST
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999836078187726	WITHOUT_CLASSIFICATION	1.6392181227458087E-5	TEST
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999999966532157	WITHOUT_CLASSIFICATION	3.346784322654658E-9	TEST
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.999996516076962	WITHOUT_CLASSIFICATION	3.483923037880465E-6	TEST
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999917252603053	WITHOUT_CLASSIFICATION	8.274739694630084E-6	TEST
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999999839962909	WITHOUT_CLASSIFICATION	1.6003709098729643E-8	TEST
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9999954499344672	WITHOUT_CLASSIFICATION	4.550065532782675E-6	TEST
//sequential	WITHOUT_CLASSIFICATION	0.9999963249228149	WITHOUT_CLASSIFICATION	3.6750771852613744E-6	TEST
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999999195316635	WITHOUT_CLASSIFICATION	8.04683365489772E-8	TEST
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999996089390899	WITHOUT_CLASSIFICATION	3.9106091008884526E-7	TEST
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999982608459289	WITHOUT_CLASSIFICATION	1.7391540711288989E-6	TEST
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999998089037694	WITHOUT_CLASSIFICATION	1.9109623055291504E-7	TEST
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.989135851252158	WITHOUT_CLASSIFICATION	0.010864148747842122	TEST
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9781642705637072	WITHOUT_CLASSIFICATION	0.02183572943629274	TEST
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999979516861756	WITHOUT_CLASSIFICATION	2.048313824484763E-6	TEST
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999997842728945	WITHOUT_CLASSIFICATION	2.1572710547171632E-7	TEST
// Args	WITHOUT_CLASSIFICATION	0.9999988051557417	WITHOUT_CLASSIFICATION	1.1948442582864945E-6	TEST
// static methods only	WITHOUT_CLASSIFICATION	0.9999999750696618	WITHOUT_CLASSIFICATION	2.4930338283343768E-8	TEST
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999995781796712	WITHOUT_CLASSIFICATION	4.2182032878820775E-7	TEST
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999988681771453	WITHOUT_CLASSIFICATION	1.131822854581442E-6	TEST
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999972797021089	WITHOUT_CLASSIFICATION	2.7202978910455256E-6	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.999999985451323	WITHOUT_CLASSIFICATION	1.4548677038642271E-8	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999999892539195	WITHOUT_CLASSIFICATION	1.0746080426991725E-8	TEST
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.999977529425207	WITHOUT_CLASSIFICATION	2.247057479292915E-5	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.999999940341068	WITHOUT_CLASSIFICATION	5.965893211247859E-8	TEST
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9999978074546739	WITHOUT_CLASSIFICATION	2.1925453260337857E-6	TEST
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999997167445435	WITHOUT_CLASSIFICATION	2.832554564901982E-7	TEST
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.999995665179859	WITHOUT_CLASSIFICATION	4.334820140894363E-6	TEST
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.999999991063531	WITHOUT_CLASSIFICATION	8.936469052584142E-9	TEST
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999958594008583	WITHOUT_CLASSIFICATION	4.14059914159824E-6	TEST
// ..	WITHOUT_CLASSIFICATION	0.9999967691247759	WITHOUT_CLASSIFICATION	3.230875224093294E-6	TEST
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999985877516395	WITHOUT_CLASSIFICATION	1.4122483605864747E-6	TEST
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9997655355772953	WITHOUT_CLASSIFICATION	2.3446442270474565E-4	TEST
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999969381573857	WITHOUT_CLASSIFICATION	3.061842614414736E-6	TEST
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999999829964812	WITHOUT_CLASSIFICATION	1.7003518870955368E-8	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999963511489444	WITHOUT_CLASSIFICATION	3.648851055705128E-6	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999981989036978	WITHOUT_CLASSIFICATION	1.8010963021702135E-6	TEST
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999994675211787	WITHOUT_CLASSIFICATION	5.324788212938302E-7	TEST
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999970516019081	WITHOUT_CLASSIFICATION	2.9483980919293662E-6	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999963511489444	WITHOUT_CLASSIFICATION	3.648851055705128E-6	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999981989036978	WITHOUT_CLASSIFICATION	1.8010963021702135E-6	TEST
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999997286472888	WITHOUT_CLASSIFICATION	2.7135271124214665E-7	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999978624257407	WITHOUT_CLASSIFICATION	2.1375742591804167E-6	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999978624257407	WITHOUT_CLASSIFICATION	2.1375742591804167E-6	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.999998110988367	WITHOUT_CLASSIFICATION	1.8890116330329451E-6	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999998648174294	WITHOUT_CLASSIFICATION	1.3518257060351124E-7	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999986723096129	WITHOUT_CLASSIFICATION	1.3276903870275995E-6	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.999999266391661	WITHOUT_CLASSIFICATION	7.336083389271741E-7	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999966735649866	WITHOUT_CLASSIFICATION	3.326435013526757E-6	TEST
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999900038150772	WITHOUT_CLASSIFICATION	9.996184922896881E-6	TEST
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999968369672085	WITHOUT_CLASSIFICATION	3.1630327914752186E-6	TEST
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999998076219022	WITHOUT_CLASSIFICATION	1.9237809780861626E-7	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999995877233017	WITHOUT_CLASSIFICATION	4.1227669843752637E-7	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9999956243104338	WITHOUT_CLASSIFICATION	4.375689566231651E-6	TEST
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.999999729375593	WITHOUT_CLASSIFICATION	2.706244070812854E-7	TEST
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999984875469743	WITHOUT_CLASSIFICATION	1.512453025686249E-6	TEST
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999976981036925	WITHOUT_CLASSIFICATION	2.3018963075173798E-6	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999997514575217	WITHOUT_CLASSIFICATION	2.485424783578941E-7	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999997514575217	WITHOUT_CLASSIFICATION	2.485424783578941E-7	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999926013182288	WITHOUT_CLASSIFICATION	7.398681771254244E-6	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999926013182288	WITHOUT_CLASSIFICATION	7.398681771254244E-6	TEST
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999988246964533	WITHOUT_CLASSIFICATION	1.1753035467635447E-6	TEST
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999998692816753	WITHOUT_CLASSIFICATION	1.3071832477041768E-7	TEST
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999995380689913	WITHOUT_CLASSIFICATION	4.6193100871154554E-7	TEST
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999990886955912	WITHOUT_CLASSIFICATION	9.113044087293952E-7	TEST
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999804666281263	WITHOUT_CLASSIFICATION	1.953337187369249E-5	TEST
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999932933584403	WITHOUT_CLASSIFICATION	6.706641559638543E-6	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999986723096129	WITHOUT_CLASSIFICATION	1.3276903870275995E-6	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.999999266391661	WITHOUT_CLASSIFICATION	7.336083389271741E-7	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999995877233017	WITHOUT_CLASSIFICATION	4.1227669843752637E-7	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9999956243104338	WITHOUT_CLASSIFICATION	4.375689566231651E-6	TEST
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999997301073547	WITHOUT_CLASSIFICATION	2.6989264526137785E-7	TEST
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999996606640299	WITHOUT_CLASSIFICATION	3.3933597002843454E-7	TEST
// \v	WITHOUT_CLASSIFICATION	0.9999956386917184	WITHOUT_CLASSIFICATION	4.361308281611786E-6	TEST
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999994956417857	WITHOUT_CLASSIFICATION	5.043582143626149E-7	TEST
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.999999600186289	WITHOUT_CLASSIFICATION	3.9981371100496816E-7	TEST
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999987432050517	WITHOUT_CLASSIFICATION	1.2567949483473382E-6	TEST
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999989737592849	WITHOUT_CLASSIFICATION	1.0262407150885994E-6	TEST
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.999997102000087	WITHOUT_CLASSIFICATION	2.8979999131151266E-6	TEST
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999970620319933	WITHOUT_CLASSIFICATION	2.9379680065671545E-6	TEST
// negative values	WITHOUT_CLASSIFICATION	0.9999994272127217	WITHOUT_CLASSIFICATION	5.727872782440857E-7	TEST
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999999721796308	WITHOUT_CLASSIFICATION	2.7820369282171972E-8	TEST
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9996937514304034	WITHOUT_CLASSIFICATION	3.0624856959660216E-4	TEST
// no such luck...	WITHOUT_CLASSIFICATION	0.9999997354841257	WITHOUT_CLASSIFICATION	2.6451587430114033E-7	TEST
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999989415173508	WITHOUT_CLASSIFICATION	1.058482649178382E-6	TEST
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999995146498575	WITHOUT_CLASSIFICATION	4.853501424476907E-7	TEST
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999996959748859	WITHOUT_CLASSIFICATION	3.040251141567551E-7	TEST
/* constant vector a */	WITHOUT_CLASSIFICATION	0.999999855731298	WITHOUT_CLASSIFICATION	1.442687019133832E-7	TEST
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999964295311105	WITHOUT_CLASSIFICATION	3.570468889489787E-6	TEST
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999995312837019	WITHOUT_CLASSIFICATION	4.6871629804611003E-7	TEST
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999991254418673	WITHOUT_CLASSIFICATION	8.745581326087701E-7	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999991995054145	WITHOUT_CLASSIFICATION	8.004945855828117E-7	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999991995054145	WITHOUT_CLASSIFICATION	8.004945855828117E-7	TEST
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999988636448548	WITHOUT_CLASSIFICATION	1.1363551452459568E-6	TEST
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999933858274735	WITHOUT_CLASSIFICATION	6.6141725265346995E-6	TEST
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999989561517945	WITHOUT_CLASSIFICATION	1.0438482055167946E-6	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999974894115277	WITHOUT_CLASSIFICATION	2.5105884723290027E-6	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999974894115277	WITHOUT_CLASSIFICATION	2.5105884723290027E-6	TEST
// \v	WITHOUT_CLASSIFICATION	0.9999956386917184	WITHOUT_CLASSIFICATION	4.361308281611786E-6	TEST
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999816429808134	WITHOUT_CLASSIFICATION	1.8357019186579928E-5	TEST
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999925767117084	WITHOUT_CLASSIFICATION	7.423288291685781E-6	TEST
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999964278700636	WITHOUT_CLASSIFICATION	3.572129936337887E-6	TEST
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999976255021549	WITHOUT_CLASSIFICATION	2.3744978451509464E-6	TEST
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999994905495418	WITHOUT_CLASSIFICATION	5.094504581665604E-7	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999837288584815	WITHOUT_CLASSIFICATION	1.6271141518566092E-5	TEST
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999971520549418	WITHOUT_CLASSIFICATION	2.84794505817036E-6	TEST
// no number	WITHOUT_CLASSIFICATION	0.9999995803729811	WITHOUT_CLASSIFICATION	4.196270188852445E-7	TEST
// trailing garbage	WITHOUT_CLASSIFICATION	0.999999621692078	WITHOUT_CLASSIFICATION	3.783079219640273E-7	TEST
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.999998169584144	WITHOUT_CLASSIFICATION	1.8304158559554645E-6	TEST
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999989956271866	WITHOUT_CLASSIFICATION	1.0043728132957414E-6	TEST
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999998185683001	WITHOUT_CLASSIFICATION	1.8143169983129875E-7	TEST
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.999999929090041	WITHOUT_CLASSIFICATION	7.090995900988799E-8	TEST
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999997568159706	WITHOUT_CLASSIFICATION	2.431840294096507E-7	TEST
// we reached the end	WITHOUT_CLASSIFICATION	0.9999998818114717	WITHOUT_CLASSIFICATION	1.1818852829154208E-7	TEST
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999989322030642	WITHOUT_CLASSIFICATION	1.0677969357971475E-6	TEST
// states	WITHOUT_CLASSIFICATION	0.9999956122386104	WITHOUT_CLASSIFICATION	4.387761389578072E-6	TEST
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.999999667014119	WITHOUT_CLASSIFICATION	3.329858810557724E-7	TEST
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999999612715956	WITHOUT_CLASSIFICATION	3.872840432284173E-8	TEST
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999999901933716	WITHOUT_CLASSIFICATION	9.806628289769713E-9	TEST
// drop through for sign	WITHOUT_CLASSIFICATION	0.999998752022075	WITHOUT_CLASSIFICATION	1.2479779249712375E-6	TEST
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999997364107777	WITHOUT_CLASSIFICATION	2.635892223205111E-7	TEST
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.999999248236047	WITHOUT_CLASSIFICATION	7.517639530439738E-7	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999089029747	WITHOUT_CLASSIFICATION	9.109702524240504E-8	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999990060456668	WITHOUT_CLASSIFICATION	9.939543331519395E-7	TEST
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.999999964024027	WITHOUT_CLASSIFICATION	3.597597295061897E-8	TEST
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999983260648201	WITHOUT_CLASSIFICATION	1.6739351798847003E-6	TEST
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999911145292	WITHOUT_CLASSIFICATION	8.885470711184007E-9	TEST
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.999998556652443	WITHOUT_CLASSIFICATION	1.443347557093703E-6	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999998396892252	WITHOUT_CLASSIFICATION	1.6031077475085404E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999998396892252	WITHOUT_CLASSIFICATION	1.6031077475085404E-7	TEST
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.999999892796688	WITHOUT_CLASSIFICATION	1.0720331200662757E-7	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999996758787121	WITHOUT_CLASSIFICATION	3.2412128796094996E-7	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999996758787121	WITHOUT_CLASSIFICATION	3.2412128796094996E-7	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999487727561	WITHOUT_CLASSIFICATION	5.1227243864982926E-8	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999487727561	WITHOUT_CLASSIFICATION	5.1227243864982926E-8	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999990662793375	WITHOUT_CLASSIFICATION	9.337206624999154E-7	TEST
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999998231790714	WITHOUT_CLASSIFICATION	1.7682092854320688E-7	TEST
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999823705249	WITHOUT_CLASSIFICATION	1.7629475098061263E-8	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999992940483178	WITHOUT_CLASSIFICATION	7.059516822628953E-7	TEST
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999998925193742	WITHOUT_CLASSIFICATION	1.0748062581463473E-7	TEST
// block	WITHOUT_CLASSIFICATION	0.999998765793395	WITHOUT_CLASSIFICATION	1.2342066050112805E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.999998765793395	WITHOUT_CLASSIFICATION	1.2342066050112805E-6	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999089029747	WITHOUT_CLASSIFICATION	9.109702524240504E-8	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999089029747	WITHOUT_CLASSIFICATION	9.109702524240504E-8	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999089029747	WITHOUT_CLASSIFICATION	9.109702524240504E-8	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999990060456668	WITHOUT_CLASSIFICATION	9.939543331519395E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999998396892252	WITHOUT_CLASSIFICATION	1.6031077475085404E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999998396892252	WITHOUT_CLASSIFICATION	1.6031077475085404E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999998396892252	WITHOUT_CLASSIFICATION	1.6031077475085404E-7	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999990662793375	WITHOUT_CLASSIFICATION	9.337206624999154E-7	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999990662793375	WITHOUT_CLASSIFICATION	9.337206624999154E-7	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999990662793375	WITHOUT_CLASSIFICATION	9.337206624999154E-7	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999992940483178	WITHOUT_CLASSIFICATION	7.059516822628953E-7	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999992940483178	WITHOUT_CLASSIFICATION	7.059516822628953E-7	TEST
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999997814257151	WITHOUT_CLASSIFICATION	2.1857428497467185E-7	TEST
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999999814634817	WITHOUT_CLASSIFICATION	1.853651835469331E-8	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999996699847363	WITHOUT_CLASSIFICATION	3.300152637120472E-7	TEST
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9999771927820116	WITHOUT_CLASSIFICATION	2.280721798850902E-5	TEST
// no digits, error	WITHOUT_CLASSIFICATION	0.9999998544032129	WITHOUT_CLASSIFICATION	1.455967871754277E-7	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999992409718745	WITHOUT_CLASSIFICATION	7.590281254731787E-7	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999992409718745	WITHOUT_CLASSIFICATION	7.590281254731787E-7	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999998183171694	WITHOUT_CLASSIFICATION	1.8168283046173914E-7	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999837288584815	WITHOUT_CLASSIFICATION	1.6271141518566092E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999837288584815	WITHOUT_CLASSIFICATION	1.6271141518566092E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999837288584815	WITHOUT_CLASSIFICATION	1.6271141518566092E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999837288584815	WITHOUT_CLASSIFICATION	1.6271141518566092E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999837288584815	WITHOUT_CLASSIFICATION	1.6271141518566092E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999986165245276	WITHOUT_CLASSIFICATION	1.3834754724208965E-6	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999986165245276	WITHOUT_CLASSIFICATION	1.3834754724208965E-6	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999986165245276	WITHOUT_CLASSIFICATION	1.3834754724208965E-6	TEST
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999998188828234	WITHOUT_CLASSIFICATION	1.8111717671591124E-7	TEST
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999992854622277	WITHOUT_CLASSIFICATION	7.14537772240062E-7	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999990060456668	WITHOUT_CLASSIFICATION	9.939543331519395E-7	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999990662793375	WITHOUT_CLASSIFICATION	9.337206624999154E-7	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999990662793375	WITHOUT_CLASSIFICATION	9.337206624999154E-7	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999837288584815	WITHOUT_CLASSIFICATION	1.6271141518566092E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999837288584815	WITHOUT_CLASSIFICATION	1.6271141518566092E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999986165245276	WITHOUT_CLASSIFICATION	1.3834754724208965E-6	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999998183171694	WITHOUT_CLASSIFICATION	1.8168283046173914E-7	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999986340839759	WITHOUT_CLASSIFICATION	1.3659160241056358E-6	TEST
// switch //while	WITHOUT_CLASSIFICATION	0.9999993694432923	WITHOUT_CLASSIFICATION	6.305567076574476E-7	TEST
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999999269190772	WITHOUT_CLASSIFICATION	7.30809227432663E-8	TEST
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999996680050479	WITHOUT_CLASSIFICATION	3.3199495216349405E-7	TEST
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999996453973682	WITHOUT_CLASSIFICATION	3.546026317515199E-7	TEST
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999997500469657	WITHOUT_CLASSIFICATION	2.4995303429672076E-7	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999808122767712	WITHOUT_CLASSIFICATION	1.9187723228864344E-5	TEST
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999996915604634	WITHOUT_CLASSIFICATION	3.0843953655759505E-7	TEST
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.999999925228621	WITHOUT_CLASSIFICATION	7.477137893214712E-8	TEST
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999999203165265	WITHOUT_CLASSIFICATION	7.968347343260684E-8	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999995895069592	WITHOUT_CLASSIFICATION	4.104930408188473E-7	TEST
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999989111150015	WITHOUT_CLASSIFICATION	1.08888499856756E-6	TEST
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999991812422887	WITHOUT_CLASSIFICATION	8.187577114386227E-7	TEST
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999956095531983	WITHOUT_CLASSIFICATION	4.3904468015943785E-6	TEST
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999995705861895	WITHOUT_CLASSIFICATION	4.2941381048167183E-7	TEST
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999998801704805	WITHOUT_CLASSIFICATION	1.1982951944559117E-7	TEST
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999999665337611	WITHOUT_CLASSIFICATION	3.346623883115537E-8	TEST
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.999996124525257	WITHOUT_CLASSIFICATION	3.875474743092223E-6	TEST
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9999790803877543	WITHOUT_CLASSIFICATION	2.091961224565577E-5	TEST
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999999692326368	WITHOUT_CLASSIFICATION	3.076736326317423E-8	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999998642569758	WITHOUT_CLASSIFICATION	1.3574302415162976E-7	TEST
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999455676117	WITHOUT_CLASSIFICATION	5.4432388226498E-8	TEST
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999312411236	WITHOUT_CLASSIFICATION	6.87588764061354E-8	TEST
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999998142104437	WITHOUT_CLASSIFICATION	1.857895562957825E-7	TEST
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.999999683215541	WITHOUT_CLASSIFICATION	3.1678445898440775E-7	TEST
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999979380356404	WITHOUT_CLASSIFICATION	2.0619643596827385E-6	TEST
// unread back	WITHOUT_CLASSIFICATION	0.9999996242207015	WITHOUT_CLASSIFICATION	3.757792984059619E-7	TEST
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999997769006194	WITHOUT_CLASSIFICATION	2.2309938070525234E-7	TEST
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999991803816712	WITHOUT_CLASSIFICATION	8.196183286400295E-7	TEST
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999999802819679	WITHOUT_CLASSIFICATION	1.9718032104506398E-8	TEST
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999993317856731	WITHOUT_CLASSIFICATION	6.68214326760023E-7	TEST
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999999480310918	WITHOUT_CLASSIFICATION	5.1968908118581705E-8	TEST
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.999999909201627	WITHOUT_CLASSIFICATION	9.079837296718528E-8	TEST
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999999607696093	WITHOUT_CLASSIFICATION	3.9230390631732306E-8	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999986340839759	WITHOUT_CLASSIFICATION	1.3659160241056358E-6	TEST
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999999108801632	WITHOUT_CLASSIFICATION	8.911983690385372E-8	TEST
// not closing from finalize	WITHOUT_CLASSIFICATION	0.999999216629347	WITHOUT_CLASSIFICATION	7.833706530392046E-7	TEST
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999991545041085	WITHOUT_CLASSIFICATION	8.454958915837763E-7	TEST
// silence	WITHOUT_CLASSIFICATION	0.9999998133203882	WITHOUT_CLASSIFICATION	1.866796117280618E-7	TEST
// silence	WITHOUT_CLASSIFICATION	0.9999998133203882	WITHOUT_CLASSIFICATION	1.866796117280618E-7	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.9999988548357878	WITHOUT_CLASSIFICATION	1.1451642122739712E-6	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.9999988548357878	WITHOUT_CLASSIFICATION	1.1451642122739712E-6	TEST
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999996967055509	WITHOUT_CLASSIFICATION	3.0329444905282664E-7	TEST
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999999850522743	WITHOUT_CLASSIFICATION	1.494772573138871E-8	TEST
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999994425184883	WITHOUT_CLASSIFICATION	5.574815117293187E-7	TEST
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999987691444828	WITHOUT_CLASSIFICATION	1.2308555171456366E-6	TEST
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999999557976295	WITHOUT_CLASSIFICATION	4.420237057295029E-8	TEST
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999994619307574	WITHOUT_CLASSIFICATION	5.380692426133327E-7	TEST
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999998518840101	WITHOUT_CLASSIFICATION	1.4811598996481662E-7	TEST
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999999982472837	WITHOUT_CLASSIFICATION	1.7527163210014846E-9	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999999989891177	WITHOUT_CLASSIFICATION	1.0108822352331845E-9	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.999999763056589	WITHOUT_CLASSIFICATION	2.3694341094884833E-7	TEST
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999999937095232	WITHOUT_CLASSIFICATION	6.290476792871419E-9	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.999995450546257	WITHOUT_CLASSIFICATION	4.54945374291373E-6	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.999995450546257	WITHOUT_CLASSIFICATION	4.54945374291373E-6	TEST
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999999530782553	WITHOUT_CLASSIFICATION	4.692174485420028E-8	TEST
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999992240784579	WITHOUT_CLASSIFICATION	7.759215420571322E-7	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999989346593932	WITHOUT_CLASSIFICATION	1.0653406069095515E-6	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999989346593932	WITHOUT_CLASSIFICATION	1.0653406069095515E-6	TEST
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999951590958185	WITHOUT_CLASSIFICATION	4.840904181623957E-6	TEST
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999999353542046	WITHOUT_CLASSIFICATION	6.464579534010956E-8	TEST
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999988977660271	WITHOUT_CLASSIFICATION	1.1022339729190873E-6	TEST
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999995104187285	WITHOUT_CLASSIFICATION	4.895812714098586E-7	TEST
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999992594238728	WITHOUT_CLASSIFICATION	7.405761271025267E-7	TEST
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999997697583018	WITHOUT_CLASSIFICATION	2.3024169822591152E-7	TEST
// save the ungot	WITHOUT_CLASSIFICATION	0.9999991322591532	WITHOUT_CLASSIFICATION	8.677408468461488E-7	TEST
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999999538558818	WITHOUT_CLASSIFICATION	4.614411811793026E-8	TEST
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999987499039821	WITHOUT_CLASSIFICATION	1.2500960179365444E-6	TEST
// flush first	WITHOUT_CLASSIFICATION	0.9999991525716357	WITHOUT_CLASSIFICATION	8.474283643590589E-7	TEST
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999996043839756	WITHOUT_CLASSIFICATION	3.956160243651938E-7	TEST
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999923117951632	WITHOUT_CLASSIFICATION	7.688204836707785E-6	TEST
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999996031009815	WITHOUT_CLASSIFICATION	3.968990185022145E-7	TEST
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999995251916507	WITHOUT_CLASSIFICATION	4.7480834929450885E-7	TEST
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999999443676233	WITHOUT_CLASSIFICATION	5.5632376754205355E-8	TEST
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999998519523912	WITHOUT_CLASSIFICATION	1.4804760879332644E-7	TEST
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999991734816965	WITHOUT_CLASSIFICATION	8.265183034330017E-7	TEST
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999997027879253	WITHOUT_CLASSIFICATION	2.9721207467970593E-7	TEST
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999742600222205	WITHOUT_CLASSIFICATION	2.573997777955081E-5	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999999232231764	WITHOUT_CLASSIFICATION	7.677682352737666E-8	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9610293268403232	WITHOUT_CLASSIFICATION	0.038970673159676776	TEST
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.999999531475644	WITHOUT_CLASSIFICATION	4.6852435604458934E-7	TEST
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999998763383435	WITHOUT_CLASSIFICATION	1.2366165648811333E-7	TEST
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999997211653158	WITHOUT_CLASSIFICATION	2.7883468422715964E-7	TEST
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999996848067245	WITHOUT_CLASSIFICATION	3.1519327550858714E-7	TEST
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999999814625223	WITHOUT_CLASSIFICATION	1.8537477688421077E-8	TEST
// else leave it null	WITHOUT_CLASSIFICATION	0.9999996532044666	WITHOUT_CLASSIFICATION	3.467955334178117E-7	TEST
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999984254332851	WITHOUT_CLASSIFICATION	1.5745667148864756E-6	TEST
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999934618455244	WITHOUT_CLASSIFICATION	6.53815447570571E-6	TEST
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999957844324463	WITHOUT_CLASSIFICATION	4.215567553698141E-6	TEST
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999981916990813	WITHOUT_CLASSIFICATION	1.808300918691721E-6	TEST
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999976211552393	WITHOUT_CLASSIFICATION	2.3788447607377155E-6	TEST
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999999286605932	WITHOUT_CLASSIFICATION	7.133940681451087E-8	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999999546893381	WITHOUT_CLASSIFICATION	4.531066196513369E-8	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999999546893381	WITHOUT_CLASSIFICATION	4.531066196513369E-8	TEST
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999999219703251	WITHOUT_CLASSIFICATION	7.802967495152416E-8	TEST
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.999999886029056	WITHOUT_CLASSIFICATION	1.139709440843318E-7	TEST
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.999954871740753	WITHOUT_CLASSIFICATION	4.5128259246969E-5	TEST
// Init	WITHOUT_CLASSIFICATION	0.9999986173269937	WITHOUT_CLASSIFICATION	1.3826730063166614E-6	TEST
// Block	WITHOUT_CLASSIFICATION	0.9999985579177041	WITHOUT_CLASSIFICATION	1.4420822959268588E-6	TEST
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999998863383841	WITHOUT_CLASSIFICATION	1.1366161593184593E-7	TEST
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999626244096345	WITHOUT_CLASSIFICATION	3.737559036554847E-5	TEST
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.999979511135696	WITHOUT_CLASSIFICATION	2.0488864303874084E-5	TEST
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999992946097696	WITHOUT_CLASSIFICATION	7.05390230410158E-7	TEST
// ok	WITHOUT_CLASSIFICATION	0.9999935053145028	WITHOUT_CLASSIFICATION	6.494685497278387E-6	TEST
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999999961015611	WITHOUT_CLASSIFICATION	3.898438831683124E-9	TEST
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9999916746026988	WITHOUT_CLASSIFICATION	8.32539730134269E-6	TEST
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999626718019782	WITHOUT_CLASSIFICATION	3.732819802192946E-5	TEST
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999984347024881	WITHOUT_CLASSIFICATION	1.565297511945278E-6	TEST
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999999068829463	WITHOUT_CLASSIFICATION	9.311705362981693E-8	TEST
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999996785270596	WITHOUT_CLASSIFICATION	3.214729403174588E-7	TEST
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999998780956241	WITHOUT_CLASSIFICATION	1.2190437587878754E-7	TEST
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.999999706557037	WITHOUT_CLASSIFICATION	2.934429630657754E-7	TEST
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9999994872983093	WITHOUT_CLASSIFICATION	5.127016906262738E-7	TEST
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999984310448798	WITHOUT_CLASSIFICATION	1.568955120162692E-6	TEST
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999994548305878	WITHOUT_CLASSIFICATION	5.451694121435363E-7	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999986505803888	WITHOUT_CLASSIFICATION	1.3494196112261396E-6	TEST
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999997017217046	WITHOUT_CLASSIFICATION	2.9827829542627013E-7	TEST
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999999749122424	WITHOUT_CLASSIFICATION	2.5087757681257847E-8	TEST
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999974992980678	WITHOUT_CLASSIFICATION	2.5007019322220974E-6	TEST
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999999256416507	WITHOUT_CLASSIFICATION	7.43583492545616E-8	TEST
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999693043897	WITHOUT_CLASSIFICATION	3.069561024003306E-8	TEST
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999978780535315	WITHOUT_CLASSIFICATION	2.1219464684671217E-6	TEST
// void methods should work	WITHOUT_CLASSIFICATION	0.9999995187952829	WITHOUT_CLASSIFICATION	4.812047171435828E-7	TEST
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.999999933865115	WITHOUT_CLASSIFICATION	6.613488495490308E-8	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.999960781013698	WITHOUT_CLASSIFICATION	3.921898630207746E-5	TEST
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9997971626992791	WITHOUT_CLASSIFICATION	2.02837300720945E-4	TEST
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999976299720199	WITHOUT_CLASSIFICATION	2.3700279801493586E-6	TEST
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999984506395846	WITHOUT_CLASSIFICATION	1.54936041529298E-6	TEST
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999996188753604	WITHOUT_CLASSIFICATION	3.8112463956632015E-7	TEST
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9996402521587411	WITHOUT_CLASSIFICATION	3.597478412590027E-4	TEST
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999977054932909	WITHOUT_CLASSIFICATION	2.294506709005053E-6	TEST
// value equality	WITHOUT_CLASSIFICATION	0.9999996200179005	WITHOUT_CLASSIFICATION	3.7998209947560597E-7	TEST
// identity equality	WITHOUT_CLASSIFICATION	0.9999999319056835	WITHOUT_CLASSIFICATION	6.809431641867411E-8	TEST
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999997826795722	WITHOUT_CLASSIFICATION	2.1732042785658505E-7	TEST
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999995836182961	WITHOUT_CLASSIFICATION	4.163817039564164E-7	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999986108857599	WITHOUT_CLASSIFICATION	1.3891142400601425E-6	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999986108857599	WITHOUT_CLASSIFICATION	1.3891142400601425E-6	TEST
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.99999906430655	WITHOUT_CLASSIFICATION	9.35693450050966E-7	TEST
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999994711639589	WITHOUT_CLASSIFICATION	5.288360410675422E-7	TEST
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999987112101135	WITHOUT_CLASSIFICATION	1.2887898864657413E-6	TEST
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999937912622037	WITHOUT_CLASSIFICATION	6.2087377963130785E-6	TEST
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999991702320309	WITHOUT_CLASSIFICATION	8.297679690485412E-7	TEST
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999999738157545	WITHOUT_CLASSIFICATION	2.6184245571440438E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999594314348	WITHOUT_CLASSIFICATION	4.0568565209353856E-8	TEST
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999999234240879	WITHOUT_CLASSIFICATION	7.657591201834199E-8	TEST
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999998143079317	WITHOUT_CLASSIFICATION	1.856920682133224E-7	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.999999987612807	WITHOUT_CLASSIFICATION	1.2387193083438247E-8	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999983305911482	WITHOUT_CLASSIFICATION	1.6694088518491707E-6	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999996816250089	WITHOUT_CLASSIFICATION	3.183749910724376E-7	TEST
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.999999060290346	WITHOUT_CLASSIFICATION	9.39709654099184E-7	TEST
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999999613538358	WITHOUT_CLASSIFICATION	3.864616413118452E-8	TEST
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999999688630358	WITHOUT_CLASSIFICATION	3.113696411698324E-8	TEST
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9999831888840504	WITHOUT_CLASSIFICATION	1.681111594956798E-5	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999999857977356	WITHOUT_CLASSIFICATION	1.4202264283154867E-8	TEST
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999951335127552	WITHOUT_CLASSIFICATION	4.866487244870198E-6	TEST
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999999458207667	WITHOUT_CLASSIFICATION	5.4179233301626464E-8	TEST
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9999214550758299	WITHOUT_CLASSIFICATION	7.854492417020171E-5	TEST
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999998263602025	WITHOUT_CLASSIFICATION	1.736397975529145E-7	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999997295858278	WITHOUT_CLASSIFICATION	2.7041417208182687E-7	TEST
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999999994080574	WITHOUT_CLASSIFICATION	5.91942555837982E-10	TEST
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999999852820981	WITHOUT_CLASSIFICATION	1.4717901942531147E-8	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999999428101167	WITHOUT_CLASSIFICATION	5.7189883234684696E-8	TEST
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999999165904819	WITHOUT_CLASSIFICATION	8.340951803674523E-8	TEST
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999989492925545	WITHOUT_CLASSIFICATION	1.0507074454843254E-6	TEST
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999998510128564	WITHOUT_CLASSIFICATION	1.4898714370719757E-7	TEST
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999998937835123	WITHOUT_CLASSIFICATION	1.0621648769828747E-7	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999994665827442	WITHOUT_CLASSIFICATION	5.334172558587899E-7	TEST
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999998812015912	WITHOUT_CLASSIFICATION	1.1879840880525317E-7	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999999072304881	WITHOUT_CLASSIFICATION	9.276951185990011E-8	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999994665827442	WITHOUT_CLASSIFICATION	5.334172558587899E-7	TEST
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999987514711741	WITHOUT_CLASSIFICATION	1.2485288258780437E-6	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.999999940341068	WITHOUT_CLASSIFICATION	5.965893211247859E-8	TEST
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9999980276175557	WITHOUT_CLASSIFICATION	1.972382444261436E-6	TEST
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9921102703516618	WITHOUT_CLASSIFICATION	0.007889729648338143	TEST
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999997697956428	WITHOUT_CLASSIFICATION	2.3020435733534771E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999992923896557	WITHOUT_CLASSIFICATION	7.076103443967856E-7	TEST
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.999999574249087	WITHOUT_CLASSIFICATION	4.257509130957892E-7	TEST
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9998764576519726	WITHOUT_CLASSIFICATION	1.2354234802733506E-4	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999998648174294	WITHOUT_CLASSIFICATION	1.3518257060351124E-7	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999999232231764	WITHOUT_CLASSIFICATION	7.677682352737666E-8	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999996699847363	WITHOUT_CLASSIFICATION	3.300152637120472E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999256366088	WITHOUT_CLASSIFICATION	7.436339117676408E-8	TEST
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999988529864321	WITHOUT_CLASSIFICATION	1.1470135678939035E-6	TEST
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999999678121096	WITHOUT_CLASSIFICATION	3.218789033728793E-8	TEST
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999881318351633	WITHOUT_CLASSIFICATION	1.1868164836579401E-5	TEST
// switch // while	WITHOUT_CLASSIFICATION	0.9999995917116565	WITHOUT_CLASSIFICATION	4.0828834355850307E-7	TEST
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9999917438661469	WITHOUT_CLASSIFICATION	8.256133853146388E-6	TEST
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999992566032313	WITHOUT_CLASSIFICATION	7.433967687535504E-7	TEST
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999999970920437	WITHOUT_CLASSIFICATION	2.9079563731709097E-9	TEST
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.999999551500202	WITHOUT_CLASSIFICATION	4.484997979480698E-7	TEST
// expected	WITHOUT_CLASSIFICATION	0.9999988863989056	WITHOUT_CLASSIFICATION	1.1136010944689147E-6	TEST
// Do nothing	WITHOUT_CLASSIFICATION	0.999998357662828	WITHOUT_CLASSIFICATION	1.6423371720038117E-6	TEST
// constructor	WITHOUT_CLASSIFICATION	0.9999998663909995	WITHOUT_CLASSIFICATION	1.3360900052264327E-7	TEST
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999975242535778	WITHOUT_CLASSIFICATION	2.4757464222833506E-6	TEST
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999977320332664	WITHOUT_CLASSIFICATION	2.267966733653621E-6	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999985862013308	WITHOUT_CLASSIFICATION	1.4137986691664816E-6	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999988584258677	WITHOUT_CLASSIFICATION	1.1415741323668171E-6	TEST
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999999554720536	WITHOUT_CLASSIFICATION	4.452794645386513E-8	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.99999990611184	WITHOUT_CLASSIFICATION	9.388815999027654E-8	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999988020307983	WITHOUT_CLASSIFICATION	1.1979692017166492E-6	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999988020307983	WITHOUT_CLASSIFICATION	1.1979692017166492E-6	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999045486769	WITHOUT_CLASSIFICATION	9.545132305628267E-8	TEST
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999999647920362	WITHOUT_CLASSIFICATION	3.520796381707911E-8	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.999999963115528	WITHOUT_CLASSIFICATION	3.6884471985018865E-8	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9920432932285975	WITHOUT_CLASSIFICATION	0.007956706771402408	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9920432932285975	WITHOUT_CLASSIFICATION	0.007956706771402408	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9920432932285975	WITHOUT_CLASSIFICATION	0.007956706771402408	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9920432932285975	WITHOUT_CLASSIFICATION	0.007956706771402408	TEST
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999997366917951	WITHOUT_CLASSIFICATION	2.63308205000872E-7	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999990955749428	WITHOUT_CLASSIFICATION	9.04425057169589E-7	TEST
// "else" body	WITHOUT_CLASSIFICATION	0.9999987938547452	WITHOUT_CLASSIFICATION	1.2061452547822252E-6	TEST
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9995773678090673	WITHOUT_CLASSIFICATION	4.2263219093272106E-4	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999999432791354	WITHOUT_CLASSIFICATION	5.672086465203982E-8	TEST
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.999993213904611	WITHOUT_CLASSIFICATION	6.786095388965998E-6	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999777219279679	WITHOUT_CLASSIFICATION	2.2278072032244375E-5	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999777219279679	WITHOUT_CLASSIFICATION	2.2278072032244375E-5	TEST
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999999211788756	WITHOUT_CLASSIFICATION	7.88211244214263E-8	TEST
/* 10! */	WITHOUT_CLASSIFICATION	0.9999898704800099	WITHOUT_CLASSIFICATION	1.0129519990014806E-5	TEST
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999989785586072	WITHOUT_CLASSIFICATION	1.0214413928593385E-6	TEST
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9999759797887255	WITHOUT_CLASSIFICATION	2.4020211274520574E-5	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999997451654125	WITHOUT_CLASSIFICATION	2.5483458746261846E-7	TEST
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999989113773479	WITHOUT_CLASSIFICATION	1.0886226522069753E-6	TEST
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999993933429968	WITHOUT_CLASSIFICATION	6.066570032505477E-7	TEST
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999578729542526	WITHOUT_CLASSIFICATION	4.2127045747340925E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999755621598243	WITHOUT_CLASSIFICATION	2.4437840175778603E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999755621598243	WITHOUT_CLASSIFICATION	2.4437840175778603E-5	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999999072304881	WITHOUT_CLASSIFICATION	9.276951185990011E-8	TEST
// line 449	WITHOUT_CLASSIFICATION	0.9999988717187878	WITHOUT_CLASSIFICATION	1.1282812122088564E-6	TEST
// line 495	WITHOUT_CLASSIFICATION	0.99999887113391	WITHOUT_CLASSIFICATION	1.1288660900995578E-6	TEST
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999997193859762	WITHOUT_CLASSIFICATION	2.806140237301702E-7	TEST
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999983368775148	WITHOUT_CLASSIFICATION	1.6631224852175832E-6	TEST
/* 14! */	WITHOUT_CLASSIFICATION	0.9999894803900045	WITHOUT_CLASSIFICATION	1.0519609995588225E-5	TEST
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999996168891299	WITHOUT_CLASSIFICATION	3.831108701386514E-7	TEST
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.999999638911333	WITHOUT_CLASSIFICATION	3.6108866699718456E-7	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.999999692295601	WITHOUT_CLASSIFICATION	3.077043989203706E-7	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.999999692295601	WITHOUT_CLASSIFICATION	3.077043989203706E-7	TEST
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999997109238999	WITHOUT_CLASSIFICATION	2.890760999872804E-7	TEST
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999999916707066	WITHOUT_CLASSIFICATION	8.329293277369323E-9	TEST
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999997857757955	WITHOUT_CLASSIFICATION	2.1422420448187379E-7	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999993161857871	WITHOUT_CLASSIFICATION	6.838142129013638E-7	TEST
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999998419531666	WITHOUT_CLASSIFICATION	1.5804683336716307E-7	TEST
/* 18! */	WITHOUT_CLASSIFICATION	0.9999897951680841	WITHOUT_CLASSIFICATION	1.0204831915963718E-5	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999996981874926	WITHOUT_CLASSIFICATION	3.018125073481592E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.99999983710433	WITHOUT_CLASSIFICATION	1.6289566987922234E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.99999983710433	WITHOUT_CLASSIFICATION	1.6289566987922234E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.99999983710433	WITHOUT_CLASSIFICATION	1.6289566987922234E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.99999983710433	WITHOUT_CLASSIFICATION	1.6289566987922234E-7	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999991248412662	WITHOUT_CLASSIFICATION	8.751587337207198E-7	TEST
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999998132368743	WITHOUT_CLASSIFICATION	1.8676312581394116E-7	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999648861282199	WITHOUT_CLASSIFICATION	3.511387178019029E-5	TEST
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999998971153833	WITHOUT_CLASSIFICATION	1.0288461664051853E-7	TEST
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.99999957844219	WITHOUT_CLASSIFICATION	4.2155780996125954E-7	TEST
/* 22! */	WITHOUT_CLASSIFICATION	0.9999870201228883	WITHOUT_CLASSIFICATION	1.29798771117938E-5	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999997525364629	WITHOUT_CLASSIFICATION	2.4746353716966683E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999988754005796	WITHOUT_CLASSIFICATION	1.1245994204336197E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999988754005796	WITHOUT_CLASSIFICATION	1.1245994204336197E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999988754005796	WITHOUT_CLASSIFICATION	1.1245994204336197E-6	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999998317366322	WITHOUT_CLASSIFICATION	1.6826336780402253E-7	TEST
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999998665994871	WITHOUT_CLASSIFICATION	1.334005128474283E-7	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999183342236	WITHOUT_CLASSIFICATION	8.16657763280513E-8	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999183342236	WITHOUT_CLASSIFICATION	8.16657763280513E-8	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.9999974682706783	WITHOUT_CLASSIFICATION	2.5317293216593273E-6	TEST
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999999693139	WITHOUT_CLASSIFICATION	3.068610671036058E-11	TEST
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999998938442787	WITHOUT_CLASSIFICATION	1.0615572134469971E-7	TEST
// BASE64	WITHOUT_CLASSIFICATION	0.9999980025569142	WITHOUT_CLASSIFICATION	1.9974430858615257E-6	TEST
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999998478954788	WITHOUT_CLASSIFICATION	1.521045212917179E-7	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999996039989149	WITHOUT_CLASSIFICATION	3.9600108512183263E-7	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999998470783477	WITHOUT_CLASSIFICATION	1.5292165239416411E-7	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999998470783477	WITHOUT_CLASSIFICATION	1.5292165239416411E-7	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.999998050012876	WITHOUT_CLASSIFICATION	1.9499871240327474E-6	TEST
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999993131250934	WITHOUT_CLASSIFICATION	6.868749065771894E-7	TEST
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999992198015543	WITHOUT_CLASSIFICATION	7.801984457894405E-7	TEST
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999975128136402	WITHOUT_CLASSIFICATION	2.487186359695863E-6	TEST
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.999996431140753	WITHOUT_CLASSIFICATION	3.568859247046929E-6	TEST
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999999627345056	WITHOUT_CLASSIFICATION	3.7265494471453756E-8	TEST
// carriage return	WITHOUT_CLASSIFICATION	0.9999999500183345	WITHOUT_CLASSIFICATION	4.99816654871366E-8	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999726928272661	WITHOUT_CLASSIFICATION	2.7307172733932587E-5	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999972328414601	WITHOUT_CLASSIFICATION	2.7671585398732E-6	TEST
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999995967961076	WITHOUT_CLASSIFICATION	4.032038923964767E-7	TEST
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999999841116703	WITHOUT_CLASSIFICATION	1.588832964952279E-8	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.999999934704548	WITHOUT_CLASSIFICATION	6.529545211883317E-8	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999973196407	WITHOUT_CLASSIFICATION	2.680359226019416E-9	TEST
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.999999986832331	WITHOUT_CLASSIFICATION	1.316766895342529E-8	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999998347081767	WITHOUT_CLASSIFICATION	1.6529182331862374E-7	TEST
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999999971653345	WITHOUT_CLASSIFICATION	2.83466545802851E-9	TEST
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999990943796787	WITHOUT_CLASSIFICATION	9.056203212563846E-7	TEST
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999999915326584	WITHOUT_CLASSIFICATION	8.46734158366912E-9	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999999612339705	WITHOUT_CLASSIFICATION	3.876602956657678E-8	TEST
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999999753979507	WITHOUT_CLASSIFICATION	2.4602049278696934E-8	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999997392041597	WITHOUT_CLASSIFICATION	2.6079584021576164E-7	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.999999898846273	WITHOUT_CLASSIFICATION	1.011537269605449E-7	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999986944470867	WITHOUT_CLASSIFICATION	1.3055529132305217E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999986944470867	WITHOUT_CLASSIFICATION	1.3055529132305217E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999986944470867	WITHOUT_CLASSIFICATION	1.3055529132305217E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999986944470867	WITHOUT_CLASSIFICATION	1.3055529132305217E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999986944470867	WITHOUT_CLASSIFICATION	1.3055529132305217E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999986944470867	WITHOUT_CLASSIFICATION	1.3055529132305217E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999986944470867	WITHOUT_CLASSIFICATION	1.3055529132305217E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999986944470867	WITHOUT_CLASSIFICATION	1.3055529132305217E-6	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999999652365834	WITHOUT_CLASSIFICATION	3.476341655034928E-8	TEST
/* fall through */	WITHOUT_CLASSIFICATION	0.999996265574615	WITHOUT_CLASSIFICATION	3.7344253850920914E-6	TEST
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999979066988178	WITHOUT_CLASSIFICATION	2.093301182148483E-6	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999999748793064	WITHOUT_CLASSIFICATION	2.512069365070108E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999594314348	WITHOUT_CLASSIFICATION	4.0568565209353856E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999594314348	WITHOUT_CLASSIFICATION	4.0568565209353856E-8	TEST
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999999087045721	WITHOUT_CLASSIFICATION	9.129542781018843E-8	TEST
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.999999752237495	WITHOUT_CLASSIFICATION	2.477625048946291E-7	TEST
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999991090309109	WITHOUT_CLASSIFICATION	8.909690891822716E-7	TEST
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999998133058143	WITHOUT_CLASSIFICATION	1.8669418576138717E-7	TEST
// get current context	WITHOUT_CLASSIFICATION	0.999999831421489	WITHOUT_CLASSIFICATION	1.685785110527056E-7	TEST
// octal constant	WITHOUT_CLASSIFICATION	0.9999998732484903	WITHOUT_CLASSIFICATION	1.2675150970604287E-7	TEST
// read	WITHOUT_CLASSIFICATION	0.9999994293993467	WITHOUT_CLASSIFICATION	5.706006533288143E-7	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999933989395898	WITHOUT_CLASSIFICATION	6.60106041024953E-6	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999978485597272	WITHOUT_CLASSIFICATION	2.15144027286971E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999998783554163	WITHOUT_CLASSIFICATION	1.2164458383926052E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999998783554163	WITHOUT_CLASSIFICATION	1.2164458383926052E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999998783554163	WITHOUT_CLASSIFICATION	1.2164458383926052E-7	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999823149306708	WITHOUT_CLASSIFICATION	1.7685069329188838E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999823149306708	WITHOUT_CLASSIFICATION	1.7685069329188838E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999823149306708	WITHOUT_CLASSIFICATION	1.7685069329188838E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999823149306708	WITHOUT_CLASSIFICATION	1.7685069329188838E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999823149306708	WITHOUT_CLASSIFICATION	1.7685069329188838E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999823149306708	WITHOUT_CLASSIFICATION	1.7685069329188838E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999823149306708	WITHOUT_CLASSIFICATION	1.7685069329188838E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999823149306708	WITHOUT_CLASSIFICATION	1.7685069329188838E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999823149306708	WITHOUT_CLASSIFICATION	1.7685069329188838E-5	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999998394883601	WITHOUT_CLASSIFICATION	1.6051163980545617E-7	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999996106562684	WITHOUT_CLASSIFICATION	3.893437316506631E-7	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.999998609669691	WITHOUT_CLASSIFICATION	1.3903303089600395E-6	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999994995926386	WITHOUT_CLASSIFICATION	5.004073614200288E-7	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999823149306708	WITHOUT_CLASSIFICATION	1.7685069329188838E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999823149306708	WITHOUT_CLASSIFICATION	1.7685069329188838E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999823149306708	WITHOUT_CLASSIFICATION	1.7685069329188838E-5	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999999199813229	WITHOUT_CLASSIFICATION	8.001867713346709E-8	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.999998515584789	WITHOUT_CLASSIFICATION	1.4844152109659725E-6	TEST
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999999809095427	WITHOUT_CLASSIFICATION	1.909045730250103E-8	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999988136230239	WITHOUT_CLASSIFICATION	1.1863769761275614E-6	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999988136230239	WITHOUT_CLASSIFICATION	1.1863769761275614E-6	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999994342180457	WITHOUT_CLASSIFICATION	5.657819542894189E-7	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999997542605403	WITHOUT_CLASSIFICATION	2.457394596323343E-7	TEST
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999999422274027	WITHOUT_CLASSIFICATION	5.7772597140330646E-8	TEST
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999999272057029	WITHOUT_CLASSIFICATION	7.279429707907107E-8	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999991776786451	WITHOUT_CLASSIFICATION	8.223213548987537E-7	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999991776786451	WITHOUT_CLASSIFICATION	8.223213548987537E-7	TEST
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999968688009643	WITHOUT_CLASSIFICATION	3.1311990357271547E-6	TEST
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999999610875694	WITHOUT_CLASSIFICATION	3.891243062377497E-8	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999995862260861	WITHOUT_CLASSIFICATION	4.137739138517485E-7	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999722106765548	WITHOUT_CLASSIFICATION	2.778932344520835E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999722106765548	WITHOUT_CLASSIFICATION	2.778932344520835E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999722106765548	WITHOUT_CLASSIFICATION	2.778932344520835E-5	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999997945461466	WITHOUT_CLASSIFICATION	2.054538534300724E-7	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999997794145878	WITHOUT_CLASSIFICATION	2.2058541219071815E-7	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999997794145878	WITHOUT_CLASSIFICATION	2.2058541219071815E-7	TEST
// check arity	WITHOUT_CLASSIFICATION	0.9999998734916166	WITHOUT_CLASSIFICATION	1.2650838345390484E-7	TEST
// check arity	WITHOUT_CLASSIFICATION	0.9999998734916166	WITHOUT_CLASSIFICATION	1.2650838345390484E-7	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999998192372074	WITHOUT_CLASSIFICATION	1.8076279263786557E-7	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999920964197	WITHOUT_CLASSIFICATION	7.903580333983663E-9	TEST
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999945867195642	WITHOUT_CLASSIFICATION	5.4132804358339876E-6	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999955549701094	WITHOUT_CLASSIFICATION	4.445029890654253E-6	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999969772693542	WITHOUT_CLASSIFICATION	3.022730645824862E-6	TEST
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.999999925249055	WITHOUT_CLASSIFICATION	7.475094503139139E-8	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999964538349	WITHOUT_CLASSIFICATION	3.5461651491481244E-9	TEST
// block	WITHOUT_CLASSIFICATION	0.999998765793395	WITHOUT_CLASSIFICATION	1.2342066050112805E-6	TEST
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999997805464577	WITHOUT_CLASSIFICATION	2.194535423809042E-7	TEST
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999776045885	WITHOUT_CLASSIFICATION	2.2395411592005834E-8	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999643357933791	WITHOUT_CLASSIFICATION	3.56642066209758E-5	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999994139158956	WITHOUT_CLASSIFICATION	5.860841044666249E-7	TEST
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999979138212282	WITHOUT_CLASSIFICATION	2.086178771851909E-6	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999999707524622	WITHOUT_CLASSIFICATION	2.9247537825287563E-8	TEST
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999999016398764	WITHOUT_CLASSIFICATION	9.836012357218522E-8	TEST
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999995937955447	WITHOUT_CLASSIFICATION	4.062044552321363E-7	TEST
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999994267865868	WITHOUT_CLASSIFICATION	5.7321341308311E-7	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999871612195	WITHOUT_CLASSIFICATION	1.2838780601210196E-8	TEST
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999989741855291	WITHOUT_CLASSIFICATION	1.0258144708947958E-6	TEST
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999992863512837	WITHOUT_CLASSIFICATION	7.13648716391399E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999256366088	WITHOUT_CLASSIFICATION	7.436339117676408E-8	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9999561892746501	WITHOUT_CLASSIFICATION	4.381072534986893E-5	TEST
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.999999041693773	WITHOUT_CLASSIFICATION	9.583062270076E-7	TEST
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999997935340447	WITHOUT_CLASSIFICATION	2.0646595547286627E-7	TEST
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999999436330489	WITHOUT_CLASSIFICATION	5.636695097724091E-8	TEST
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999936815824542	WITHOUT_CLASSIFICATION	6.3184175458762276E-6	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999979295630884	WITHOUT_CLASSIFICATION	2.0704369116948057E-6	TEST
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999994396701272	WITHOUT_CLASSIFICATION	5.603298728178819E-7	TEST
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999988950357256	WITHOUT_CLASSIFICATION	1.1049642743821508E-6	TEST
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999999904272825	WITHOUT_CLASSIFICATION	9.572717528580086E-9	TEST
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999983293607847	WITHOUT_CLASSIFICATION	1.6706392153610658E-6	TEST
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999999034396568	WITHOUT_CLASSIFICATION	9.656034319393455E-8	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.999999887068316	WITHOUT_CLASSIFICATION	1.1293168400823766E-7	TEST
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999999319096672	WITHOUT_CLASSIFICATION	6.809033287807666E-8	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999990649524092	WITHOUT_CLASSIFICATION	9.350475907416142E-7	TEST
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999930792824984	WITHOUT_CLASSIFICATION	6.920717501676523E-6	TEST
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999999505543018	WITHOUT_CLASSIFICATION	4.944569827348065E-8	TEST
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999996616495828	WITHOUT_CLASSIFICATION	3.3835041725168455E-7	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999995884854768	WITHOUT_CLASSIFICATION	4.1151452323935595E-7	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999998595665515	WITHOUT_CLASSIFICATION	1.4043344850207476E-7	TEST
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999998592561126	WITHOUT_CLASSIFICATION	1.407438874586088E-7	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999987679443229	WITHOUT_CLASSIFICATION	1.2320556771796028E-6	TEST
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.999997742071759	WITHOUT_CLASSIFICATION	2.257928241121494E-6	TEST
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999996218521812	WITHOUT_CLASSIFICATION	3.781478188011749E-7	TEST
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999998980019322	WITHOUT_CLASSIFICATION	1.0199806773528362E-7	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.99999937791537	WITHOUT_CLASSIFICATION	6.220846300354241E-7	TEST
// specific arity	WITHOUT_CLASSIFICATION	0.9999999357362654	WITHOUT_CLASSIFICATION	6.426373456764343E-8	TEST
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999998490693411	WITHOUT_CLASSIFICATION	1.5093065876847048E-7	TEST
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999997855974391	WITHOUT_CLASSIFICATION	2.144025608807815E-7	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999918706475837	WITHOUT_CLASSIFICATION	8.129352416352612E-6	TEST
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999999826097384	WITHOUT_CLASSIFICATION	1.7390261533867763E-8	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999998829537524	WITHOUT_CLASSIFICATION	1.1704624769004943E-7	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999998829537524	WITHOUT_CLASSIFICATION	1.1704624769004943E-7	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.999999897879592	WITHOUT_CLASSIFICATION	1.0212040803393571E-7	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.999999897879592	WITHOUT_CLASSIFICATION	1.0212040803393571E-7	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999536466079236	WITHOUT_CLASSIFICATION	4.635339207636138E-5	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999536466079236	WITHOUT_CLASSIFICATION	4.635339207636138E-5	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999995907448174	WITHOUT_CLASSIFICATION	4.0925518268785914E-7	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999995907448174	WITHOUT_CLASSIFICATION	4.0925518268785914E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999056952482	WITHOUT_CLASSIFICATION	9.430475181910605E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999056952482	WITHOUT_CLASSIFICATION	9.430475181910605E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999056952482	WITHOUT_CLASSIFICATION	9.430475181910605E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999056952482	WITHOUT_CLASSIFICATION	9.430475181910605E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999056952482	WITHOUT_CLASSIFICATION	9.430475181910605E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999056952482	WITHOUT_CLASSIFICATION	9.430475181910605E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999056952482	WITHOUT_CLASSIFICATION	9.430475181910605E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999056952482	WITHOUT_CLASSIFICATION	9.430475181910605E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999056952482	WITHOUT_CLASSIFICATION	9.430475181910605E-8	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999997390709818	WITHOUT_CLASSIFICATION	2.6092901821508155E-7	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999997390709818	WITHOUT_CLASSIFICATION	2.6092901821508155E-7	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999997390709818	WITHOUT_CLASSIFICATION	2.6092901821508155E-7	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999986476894436	WITHOUT_CLASSIFICATION	1.3523105563875927E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999997945575428	WITHOUT_CLASSIFICATION	2.0544245725599041E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999997945575428	WITHOUT_CLASSIFICATION	2.0544245725599041E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999997945575428	WITHOUT_CLASSIFICATION	2.0544245725599041E-7	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999998052303326	WITHOUT_CLASSIFICATION	1.947696672790068E-7	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999998052303326	WITHOUT_CLASSIFICATION	1.947696672790068E-7	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999998052303326	WITHOUT_CLASSIFICATION	1.947696672790068E-7	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999833983733517	WITHOUT_CLASSIFICATION	1.6601626648349973E-5	TEST
// backspace	WITHOUT_CLASSIFICATION	0.9999995184102197	WITHOUT_CLASSIFICATION	4.81589780389296E-7	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999909343526326	WITHOUT_CLASSIFICATION	9.065647367352513E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999904119835875	WITHOUT_CLASSIFICATION	9.588016412558113E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999904119835875	WITHOUT_CLASSIFICATION	9.588016412558113E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999904119835875	WITHOUT_CLASSIFICATION	9.588016412558113E-6	TEST
/* package-private */	WITHOUT_CLASSIFICATION	0.9999983671227372	WITHOUT_CLASSIFICATION	1.632877262853789E-6	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999989978804478	WITHOUT_CLASSIFICATION	1.0021195522781316E-6	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999989978804478	WITHOUT_CLASSIFICATION	1.0021195522781316E-6	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.999996114534869	WITHOUT_CLASSIFICATION	3.8854651309567735E-6	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999991756811395	WITHOUT_CLASSIFICATION	8.243188604551015E-7	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999991756811395	WITHOUT_CLASSIFICATION	8.243188604551015E-7	TEST
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9719805119242033	WITHOUT_CLASSIFICATION	0.0280194880757967	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999995924331186	WITHOUT_CLASSIFICATION	4.0756688140303374E-7	TEST
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999988983784401	WITHOUT_CLASSIFICATION	1.1016215598818497E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999991084702473	WITHOUT_CLASSIFICATION	8.91529752647484E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999991084702473	WITHOUT_CLASSIFICATION	8.91529752647484E-7	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.999999564601932	WITHOUT_CLASSIFICATION	4.3539806802344415E-7	TEST
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999871767203113	WITHOUT_CLASSIFICATION	1.2823279688549436E-5	TEST
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999995245570497	WITHOUT_CLASSIFICATION	4.7544295035887905E-7	TEST
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999998407727739	WITHOUT_CLASSIFICATION	1.5922722611955092E-7	TEST
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999999757990052	WITHOUT_CLASSIFICATION	2.4200994787439326E-8	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999991084702473	WITHOUT_CLASSIFICATION	8.91529752647484E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999991084702473	WITHOUT_CLASSIFICATION	8.91529752647484E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999991084702473	WITHOUT_CLASSIFICATION	8.91529752647484E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999991084702473	WITHOUT_CLASSIFICATION	8.91529752647484E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999991084702473	WITHOUT_CLASSIFICATION	8.91529752647484E-7	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999996586237857	WITHOUT_CLASSIFICATION	3.4137621430397025E-7	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999989666520763	WITHOUT_CLASSIFICATION	1.0333479237293322E-6	TEST
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999999956927061	WITHOUT_CLASSIFICATION	4.3072938444890336E-9	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999989584001605	WITHOUT_CLASSIFICATION	1.0415998395005809E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999996564434158	WITHOUT_CLASSIFICATION	3.435565841014658E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999996564434158	WITHOUT_CLASSIFICATION	3.435565841014658E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999996564434158	WITHOUT_CLASSIFICATION	3.435565841014658E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999996564434158	WITHOUT_CLASSIFICATION	3.435565841014658E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999996564434158	WITHOUT_CLASSIFICATION	3.435565841014658E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999996564434158	WITHOUT_CLASSIFICATION	3.435565841014658E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999996564434158	WITHOUT_CLASSIFICATION	3.435565841014658E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999996564434158	WITHOUT_CLASSIFICATION	3.435565841014658E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999996564434158	WITHOUT_CLASSIFICATION	3.435565841014658E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999996564434158	WITHOUT_CLASSIFICATION	3.435565841014658E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999996564434158	WITHOUT_CLASSIFICATION	3.435565841014658E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999996564434158	WITHOUT_CLASSIFICATION	3.435565841014658E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999996564434158	WITHOUT_CLASSIFICATION	3.435565841014658E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999996564434158	WITHOUT_CLASSIFICATION	3.435565841014658E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999996564434158	WITHOUT_CLASSIFICATION	3.435565841014658E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999996564434158	WITHOUT_CLASSIFICATION	3.435565841014658E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999996564434158	WITHOUT_CLASSIFICATION	3.435565841014658E-7	TEST
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999998841073441	WITHOUT_CLASSIFICATION	1.1589265600710536E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999996564434158	WITHOUT_CLASSIFICATION	3.435565841014658E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999996564434158	WITHOUT_CLASSIFICATION	3.435565841014658E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999996564434158	WITHOUT_CLASSIFICATION	3.435565841014658E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999996564434158	WITHOUT_CLASSIFICATION	3.435565841014658E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999996564434158	WITHOUT_CLASSIFICATION	3.435565841014658E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999996564434158	WITHOUT_CLASSIFICATION	3.435565841014658E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999996564434158	WITHOUT_CLASSIFICATION	3.435565841014658E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999996564434158	WITHOUT_CLASSIFICATION	3.435565841014658E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999996564434158	WITHOUT_CLASSIFICATION	3.435565841014658E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999996564434158	WITHOUT_CLASSIFICATION	3.435565841014658E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999996564434158	WITHOUT_CLASSIFICATION	3.435565841014658E-7	TEST
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999830116040946	WITHOUT_CLASSIFICATION	1.6988395905407867E-5	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999981818252235	WITHOUT_CLASSIFICATION	1.818174776505248E-6	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999998494184268	WITHOUT_CLASSIFICATION	1.505815732411746E-7	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999992382585132	WITHOUT_CLASSIFICATION	7.617414868440668E-7	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999999473527166	WITHOUT_CLASSIFICATION	5.264728337912334E-8	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999997295858278	WITHOUT_CLASSIFICATION	2.7041417208182687E-7	TEST
// only public methods	WITHOUT_CLASSIFICATION	0.9999999523170734	WITHOUT_CLASSIFICATION	4.768292659239445E-8	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999975347595734	WITHOUT_CLASSIFICATION	2.4652404265122326E-6	TEST
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999991642507311	WITHOUT_CLASSIFICATION	8.35749268949704E-7	TEST
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9999999894649412	WITHOUT_CLASSIFICATION	1.0535058773408623E-8	TEST
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999999185631929	WITHOUT_CLASSIFICATION	8.143680706487877E-8	TEST
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999999993063265	WITHOUT_CLASSIFICATION	6.936734872561784E-10	TEST
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999998791962199	WITHOUT_CLASSIFICATION	1.2080378011234047E-7	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999998049455049	WITHOUT_CLASSIFICATION	1.9505449511221407E-7	TEST
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999981457299458	WITHOUT_CLASSIFICATION	1.8542700542660691E-6	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999981390817485	WITHOUT_CLASSIFICATION	1.8609182515075623E-6	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.999999987612807	WITHOUT_CLASSIFICATION	1.2387193083438247E-8	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999995314774548	WITHOUT_CLASSIFICATION	4.6852254515191794E-7	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999995314774548	WITHOUT_CLASSIFICATION	4.6852254515191794E-7	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999995314774548	WITHOUT_CLASSIFICATION	4.6852254515191794E-7	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999995314774548	WITHOUT_CLASSIFICATION	4.6852254515191794E-7	TEST
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999999558023492	WITHOUT_CLASSIFICATION	4.419765080857343E-8	TEST
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999999743413446	WITHOUT_CLASSIFICATION	2.5658655361398046E-8	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999998977281122	WITHOUT_CLASSIFICATION	1.0227188787630468E-7	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999998977281122	WITHOUT_CLASSIFICATION	1.0227188787630468E-7	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999999471427315	WITHOUT_CLASSIFICATION	5.285726842439916E-8	TEST
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.999999114022485	WITHOUT_CLASSIFICATION	8.859775150292477E-7	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999962506557023	WITHOUT_CLASSIFICATION	3.7493442976166352E-6	TEST
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999998536935367	WITHOUT_CLASSIFICATION	1.4630646324812737E-7	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999999701544162	WITHOUT_CLASSIFICATION	2.9845583883008955E-8	TEST
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999994770585418	WITHOUT_CLASSIFICATION	5.229414582542194E-7	TEST
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999976526185028	WITHOUT_CLASSIFICATION	2.3473814971802074E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999983597820079	WITHOUT_CLASSIFICATION	1.6402179921019337E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999983597820079	WITHOUT_CLASSIFICATION	1.6402179921019337E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999983597820079	WITHOUT_CLASSIFICATION	1.6402179921019337E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999983597820079	WITHOUT_CLASSIFICATION	1.6402179921019337E-6	TEST
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999999573021261	WITHOUT_CLASSIFICATION	4.269787382131621E-8	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999994539659911	WITHOUT_CLASSIFICATION	5.460340089589228E-7	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999994539659911	WITHOUT_CLASSIFICATION	5.460340089589228E-7	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999994539659911	WITHOUT_CLASSIFICATION	5.460340089589228E-7	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999993643957452	WITHOUT_CLASSIFICATION	6.356042547897938E-7	TEST
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999997921593465	WITHOUT_CLASSIFICATION	2.0784065350191252E-7	TEST
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999932624842263	WITHOUT_CLASSIFICATION	6.737515773780667E-6	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9920432932285975	WITHOUT_CLASSIFICATION	0.007956706771402408	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9920432932285975	WITHOUT_CLASSIFICATION	0.007956706771402408	TEST
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999999605964905	WITHOUT_CLASSIFICATION	3.940350957186046E-8	TEST
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.999999814454423	WITHOUT_CLASSIFICATION	1.8554557699554184E-7	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.9999988391823743	WITHOUT_CLASSIFICATION	1.160817625734672E-6	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.9999988391823743	WITHOUT_CLASSIFICATION	1.160817625734672E-6	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999992551452412	WITHOUT_CLASSIFICATION	7.448547587033802E-7	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999992551452412	WITHOUT_CLASSIFICATION	7.448547587033802E-7	TEST
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999999317807223	WITHOUT_CLASSIFICATION	6.821927762755994E-8	TEST
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999996351360309	WITHOUT_CLASSIFICATION	3.6486396906955956E-7	TEST
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999992703295958	WITHOUT_CLASSIFICATION	7.296704041243067E-7	TEST
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999997790663278	WITHOUT_CLASSIFICATION	2.2093367219158833E-7	TEST
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999898864672567	WITHOUT_CLASSIFICATION	1.0113532743203897E-5	TEST
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999995322116945	WITHOUT_CLASSIFICATION	4.677883054447012E-7	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999997904094485	WITHOUT_CLASSIFICATION	2.0959055154419776E-7	TEST
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999990370143508	WITHOUT_CLASSIFICATION	9.629856492125448E-7	TEST
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999965836769703	WITHOUT_CLASSIFICATION	3.4163230297611364E-6	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999695218753	WITHOUT_CLASSIFICATION	3.047812469452538E-8	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999695218753	WITHOUT_CLASSIFICATION	3.047812469452538E-8	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999997981423012	WITHOUT_CLASSIFICATION	2.0185769869978632E-7	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999997981423012	WITHOUT_CLASSIFICATION	2.0185769869978632E-7	TEST
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.999999363996429	WITHOUT_CLASSIFICATION	6.360035711469429E-7	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999969196798755	WITHOUT_CLASSIFICATION	3.080320124565383E-6	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999922292559674	WITHOUT_CLASSIFICATION	7.770744032567923E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999984341315402	WITHOUT_CLASSIFICATION	1.5658684597346509E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999984341315402	WITHOUT_CLASSIFICATION	1.5658684597346509E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999984341315402	WITHOUT_CLASSIFICATION	1.5658684597346509E-6	TEST
// line 286	WITHOUT_CLASSIFICATION	0.999998683815736	WITHOUT_CLASSIFICATION	1.3161842639099438E-6	TEST
// line 476	WITHOUT_CLASSIFICATION	0.9999988562129031	WITHOUT_CLASSIFICATION	1.1437870968520975E-6	TEST
// line 513	WITHOUT_CLASSIFICATION	0.9999987413328091	WITHOUT_CLASSIFICATION	1.2586671909217085E-6	TEST
// line 530	WITHOUT_CLASSIFICATION	0.999998690148024	WITHOUT_CLASSIFICATION	1.3098519760044959E-6	TEST
// line 533	WITHOUT_CLASSIFICATION	0.9999985713116192	WITHOUT_CLASSIFICATION	1.4286883807943684E-6	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999985851994014	WITHOUT_CLASSIFICATION	1.4148005985252272E-6	TEST
// line 551	WITHOUT_CLASSIFICATION	0.9999986702007608	WITHOUT_CLASSIFICATION	1.329799239165466E-6	TEST
// end loop	WITHOUT_CLASSIFICATION	0.9999988704153319	WITHOUT_CLASSIFICATION	1.1295846681265817E-6	TEST
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999998245390683	WITHOUT_CLASSIFICATION	1.7546093174409489E-7	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999999696318544	WITHOUT_CLASSIFICATION	3.0368145549520216E-8	TEST
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9999994741416859	WITHOUT_CLASSIFICATION	5.258583141335002E-7	TEST
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999994122076049	WITHOUT_CLASSIFICATION	5.877923950726655E-7	TEST
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999987653994549	WITHOUT_CLASSIFICATION	1.2346005451720302E-6	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9920432932285975	WITHOUT_CLASSIFICATION	0.007956706771402408	TEST
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.999999982082559	WITHOUT_CLASSIFICATION	1.791744096182384E-8	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999990742647288	WITHOUT_CLASSIFICATION	9.25735271296653E-7	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999988020307983	WITHOUT_CLASSIFICATION	1.1979692017166492E-6	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.999962096002892	WITHOUT_CLASSIFICATION	3.790399710795289E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.999962096002892	WITHOUT_CLASSIFICATION	3.790399710795289E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.999962096002892	WITHOUT_CLASSIFICATION	3.790399710795289E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.999962096002892	WITHOUT_CLASSIFICATION	3.790399710795289E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.999962096002892	WITHOUT_CLASSIFICATION	3.790399710795289E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999720734088682	WITHOUT_CLASSIFICATION	2.7926591131862833E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.999962096002892	WITHOUT_CLASSIFICATION	3.790399710795289E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.999962096002892	WITHOUT_CLASSIFICATION	3.790399710795289E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.999962096002892	WITHOUT_CLASSIFICATION	3.790399710795289E-5	TEST
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999998428455574	WITHOUT_CLASSIFICATION	1.5715444259034744E-7	TEST
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999983155578487	WITHOUT_CLASSIFICATION	1.684442151331662E-6	TEST
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.99999186044383	WITHOUT_CLASSIFICATION	8.139556170087999E-6	TEST
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999965457005314	WITHOUT_CLASSIFICATION	3.4542994685701255E-6	TEST
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999989374481842	WITHOUT_CLASSIFICATION	1.062551815785685E-6	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999983472284907	WITHOUT_CLASSIFICATION	1.6527715093968762E-6	TEST
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999999856365601	WITHOUT_CLASSIFICATION	1.436343981253103E-8	TEST
// line 572	WITHOUT_CLASSIFICATION	0.9999986918462492	WITHOUT_CLASSIFICATION	1.3081537507428589E-6	TEST
// line 601	WITHOUT_CLASSIFICATION	0.999998804498003	WITHOUT_CLASSIFICATION	1.1955019969194457E-6	TEST
// line 601	WITHOUT_CLASSIFICATION	0.999998804498003	WITHOUT_CLASSIFICATION	1.1955019969194457E-6	TEST
// line 625	WITHOUT_CLASSIFICATION	0.9999987063207161	WITHOUT_CLASSIFICATION	1.2936792839483933E-6	TEST
// line 649	WITHOUT_CLASSIFICATION	0.9999988847472933	WITHOUT_CLASSIFICATION	1.1152527068107487E-6	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999987626517253	WITHOUT_CLASSIFICATION	1.2373482747102945E-6	TEST
// line 723	WITHOUT_CLASSIFICATION	0.9999985072152273	WITHOUT_CLASSIFICATION	1.4927847726711416E-6	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999985130036633	WITHOUT_CLASSIFICATION	1.4869963367421478E-6	TEST
// line 745	WITHOUT_CLASSIFICATION	0.9999988073840492	WITHOUT_CLASSIFICATION	1.1926159507671273E-6	TEST
// line 766	WITHOUT_CLASSIFICATION	0.9999987636664314	WITHOUT_CLASSIFICATION	1.2363335686266353E-6	TEST
// line 785	WITHOUT_CLASSIFICATION	0.999998768947474	WITHOUT_CLASSIFICATION	1.231052525955455E-6	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999988447628695	WITHOUT_CLASSIFICATION	1.1552371304852215E-6	TEST
// line 800	WITHOUT_CLASSIFICATION	0.9999987882004566	WITHOUT_CLASSIFICATION	1.2117995433638918E-6	TEST
// line 812	WITHOUT_CLASSIFICATION	0.9999988527275107	WITHOUT_CLASSIFICATION	1.147272489360944E-6	TEST
// line 827	WITHOUT_CLASSIFICATION	0.9999987167989562	WITHOUT_CLASSIFICATION	1.2832010438349046E-6	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999986351479176	WITHOUT_CLASSIFICATION	1.364852082315591E-6	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999988107704972	WITHOUT_CLASSIFICATION	1.1892295027738904E-6	TEST
// line 864	WITHOUT_CLASSIFICATION	0.9999988373623545	WITHOUT_CLASSIFICATION	1.1626376455489866E-6	TEST
// line 886	WITHOUT_CLASSIFICATION	0.9999987734483335	WITHOUT_CLASSIFICATION	1.2265516665091695E-6	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999988323031664	WITHOUT_CLASSIFICATION	1.167696833583515E-6	TEST
// line 911	WITHOUT_CLASSIFICATION	0.9999987313222501	WITHOUT_CLASSIFICATION	1.2686777497637542E-6	TEST
// line 929	WITHOUT_CLASSIFICATION	0.9999987084935104	WITHOUT_CLASSIFICATION	1.2915064896909751E-6	TEST
// line 952	WITHOUT_CLASSIFICATION	0.9999987352443797	WITHOUT_CLASSIFICATION	1.2647556202963515E-6	TEST
// line 970	WITHOUT_CLASSIFICATION	0.9999988856324865	WITHOUT_CLASSIFICATION	1.114367513457009E-6	TEST
// line 972	WITHOUT_CLASSIFICATION	0.9999987510440216	WITHOUT_CLASSIFICATION	1.2489559783518746E-6	TEST
// line 991	WITHOUT_CLASSIFICATION	0.9999987195185497	WITHOUT_CLASSIFICATION	1.2804814503920129E-6	TEST
// line 1011	WITHOUT_CLASSIFICATION	0.9999987474564459	WITHOUT_CLASSIFICATION	1.2525435540714772E-6	TEST
// line 1026	WITHOUT_CLASSIFICATION	0.9999989106788281	WITHOUT_CLASSIFICATION	1.089321171931534E-6	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999987035705861	WITHOUT_CLASSIFICATION	1.2964294139009443E-6	TEST
// line 1067	WITHOUT_CLASSIFICATION	0.9999989861288902	WITHOUT_CLASSIFICATION	1.0138711098112111E-6	TEST
// line 1085	WITHOUT_CLASSIFICATION	0.999998846620347	WITHOUT_CLASSIFICATION	1.153379652981566E-6	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999990032193975	WITHOUT_CLASSIFICATION	9.967806025378651E-7	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.999998820709955	WITHOUT_CLASSIFICATION	1.1792900449080646E-6	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999987764605682	WITHOUT_CLASSIFICATION	1.2235394317073833E-6	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.999998682184104	WITHOUT_CLASSIFICATION	1.3178158959337535E-6	TEST
// line 1145	WITHOUT_CLASSIFICATION	0.9999988993741623	WITHOUT_CLASSIFICATION	1.1006258377448023E-6	TEST
// line 1169	WITHOUT_CLASSIFICATION	0.9999989158481158	WITHOUT_CLASSIFICATION	1.0841518841260502E-6	TEST
// line 1201	WITHOUT_CLASSIFICATION	0.9999985506645882	WITHOUT_CLASSIFICATION	1.4493354117427145E-6	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999988891275735	WITHOUT_CLASSIFICATION	1.1108724264991353E-6	TEST
// line 1229	WITHOUT_CLASSIFICATION	0.9999988241753063	WITHOUT_CLASSIFICATION	1.1758246937203864E-6	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999985849908137	WITHOUT_CLASSIFICATION	1.4150091862782093E-6	TEST
// line 1287	WITHOUT_CLASSIFICATION	0.9999988208834809	WITHOUT_CLASSIFICATION	1.1791165190876713E-6	TEST
// line 1293	WITHOUT_CLASSIFICATION	0.9999986930332336	WITHOUT_CLASSIFICATION	1.3069667663843315E-6	TEST
// line 1307	WITHOUT_CLASSIFICATION	0.9999988084927744	WITHOUT_CLASSIFICATION	1.191507225457743E-6	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999986006131344	WITHOUT_CLASSIFICATION	1.3993868655754073E-6	TEST
// line 1325	WITHOUT_CLASSIFICATION	0.9999986088478179	WITHOUT_CLASSIFICATION	1.3911521821093277E-6	TEST
// line 1363	WITHOUT_CLASSIFICATION	0.9999987099083792	WITHOUT_CLASSIFICATION	1.2900916208165612E-6	TEST
// line 1398	WITHOUT_CLASSIFICATION	0.9999987390429828	WITHOUT_CLASSIFICATION	1.260957017172707E-6	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999989027455033	WITHOUT_CLASSIFICATION	1.0972544966674947E-6	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999989480467137	WITHOUT_CLASSIFICATION	1.0519532862340426E-6	TEST
// line 1473	WITHOUT_CLASSIFICATION	0.9999987678039546	WITHOUT_CLASSIFICATION	1.2321960453032734E-6	TEST
// line 1492	WITHOUT_CLASSIFICATION	0.9999989025980917	WITHOUT_CLASSIFICATION	1.0974019083315374E-6	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999986772417143	WITHOUT_CLASSIFICATION	1.3227582856826787E-6	TEST
// line 1523	WITHOUT_CLASSIFICATION	0.9999986210165076	WITHOUT_CLASSIFICATION	1.3789834923600427E-6	TEST
// line 1562	WITHOUT_CLASSIFICATION	0.9999988354925238	WITHOUT_CLASSIFICATION	1.1645074762955968E-6	TEST
// line 1582	WITHOUT_CLASSIFICATION	0.9999988302838377	WITHOUT_CLASSIFICATION	1.1697161621575263E-6	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999986797545677	WITHOUT_CLASSIFICATION	1.320245432326002E-6	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999986797545677	WITHOUT_CLASSIFICATION	1.320245432326002E-6	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999988584865869	WITHOUT_CLASSIFICATION	1.1415134131017658E-6	TEST
// line 1620	WITHOUT_CLASSIFICATION	0.9999988058115535	WITHOUT_CLASSIFICATION	1.1941884464730623E-6	TEST
// line 1635	WITHOUT_CLASSIFICATION	0.9999987107153411	WITHOUT_CLASSIFICATION	1.2892846588449864E-6	TEST
// line 1652	WITHOUT_CLASSIFICATION	0.9999988262093477	WITHOUT_CLASSIFICATION	1.1737906523724502E-6	TEST
// line 1681	WITHOUT_CLASSIFICATION	0.9999986692456657	WITHOUT_CLASSIFICATION	1.330754334196853E-6	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999988189671782	WITHOUT_CLASSIFICATION	1.1810328216952342E-6	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999988679763796	WITHOUT_CLASSIFICATION	1.1320236204221248E-6	TEST
// line 1755	WITHOUT_CLASSIFICATION	0.9999988308510663	WITHOUT_CLASSIFICATION	1.1691489336665132E-6	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999987784656301	WITHOUT_CLASSIFICATION	1.221534369813749E-6	TEST
// line 1789	WITHOUT_CLASSIFICATION	0.9999989172353119	WITHOUT_CLASSIFICATION	1.082764688074812E-6	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999959274002893	WITHOUT_CLASSIFICATION	4.072599710648093E-6	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999959274002893	WITHOUT_CLASSIFICATION	4.072599710648093E-6	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999987562784843	WITHOUT_CLASSIFICATION	1.2437215156812236E-6	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999973801456652	WITHOUT_CLASSIFICATION	2.6198543347669416E-6	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999992179108695	WITHOUT_CLASSIFICATION	7.820891303124599E-7	TEST
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999999692861428	WITHOUT_CLASSIFICATION	3.071385728461303E-8	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999997898180795	WITHOUT_CLASSIFICATION	2.101819205389018E-7	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999997898180795	WITHOUT_CLASSIFICATION	2.101819205389018E-7	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999997898180795	WITHOUT_CLASSIFICATION	2.101819205389018E-7	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999997898180795	WITHOUT_CLASSIFICATION	2.101819205389018E-7	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9964526875335356	WITHOUT_CLASSIFICATION	0.003547312466464455	TEST
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9997703523092165	WITHOUT_CLASSIFICATION	2.2964769078360727E-4	TEST
// line 313	WITHOUT_CLASSIFICATION	0.9999984378568607	WITHOUT_CLASSIFICATION	1.562143139268737E-6	TEST
// line 339	WITHOUT_CLASSIFICATION	0.9999983069439862	WITHOUT_CLASSIFICATION	1.6930560138095697E-6	TEST
// line 361	WITHOUT_CLASSIFICATION	0.9999982140913789	WITHOUT_CLASSIFICATION	1.7859086211138556E-6	TEST
// line 413	WITHOUT_CLASSIFICATION	0.9999988159739068	WITHOUT_CLASSIFICATION	1.184026093229671E-6	TEST
// line 451	WITHOUT_CLASSIFICATION	0.9999987703622092	WITHOUT_CLASSIFICATION	1.2296377908472412E-6	TEST
// line 472	WITHOUT_CLASSIFICATION	0.9999987723574524	WITHOUT_CLASSIFICATION	1.2276425476490856E-6	TEST
// line 500	WITHOUT_CLASSIFICATION	0.9999987618104377	WITHOUT_CLASSIFICATION	1.2381895622629505E-6	TEST
// line 515	WITHOUT_CLASSIFICATION	0.9999988727219934	WITHOUT_CLASSIFICATION	1.1272780065989739E-6	TEST
// line 555	WITHOUT_CLASSIFICATION	0.9999987023936086	WITHOUT_CLASSIFICATION	1.2976063914316305E-6	TEST
// line 582	WITHOUT_CLASSIFICATION	0.9999987253238594	WITHOUT_CLASSIFICATION	1.27467614068677E-6	TEST
// line 619	WITHOUT_CLASSIFICATION	0.9999989671419929	WITHOUT_CLASSIFICATION	1.0328580071668472E-6	TEST
// line 636	WITHOUT_CLASSIFICATION	0.9999985891898616	WITHOUT_CLASSIFICATION	1.4108101383206291E-6	TEST
// line 669	WITHOUT_CLASSIFICATION	0.9999988024881974	WITHOUT_CLASSIFICATION	1.1975118025625667E-6	TEST
// line 703	WITHOUT_CLASSIFICATION	0.9999985401545374	WITHOUT_CLASSIFICATION	1.4598454627177877E-6	TEST
// line 776	WITHOUT_CLASSIFICATION	0.9999987610108216	WITHOUT_CLASSIFICATION	1.2389891783929266E-6	TEST
// line 814	WITHOUT_CLASSIFICATION	0.9999989526484068	WITHOUT_CLASSIFICATION	1.0473515931962037E-6	TEST
// line 823	WITHOUT_CLASSIFICATION	0.999998528813648	WITHOUT_CLASSIFICATION	1.4711863519667078E-6	TEST
// line 854	WITHOUT_CLASSIFICATION	0.9999988113927301	WITHOUT_CLASSIFICATION	1.1886072700182822E-6	TEST
// line 872	WITHOUT_CLASSIFICATION	0.9999987068847649	WITHOUT_CLASSIFICATION	1.2931152351411558E-6	TEST
// line 905	WITHOUT_CLASSIFICATION	0.9999987432844758	WITHOUT_CLASSIFICATION	1.2567155241050075E-6	TEST
// line 925	WITHOUT_CLASSIFICATION	0.9999987191778417	WITHOUT_CLASSIFICATION	1.2808221583976536E-6	TEST
// line 958	WITHOUT_CLASSIFICATION	0.9999988047360204	WITHOUT_CLASSIFICATION	1.1952639795822078E-6	TEST
// line 992	WITHOUT_CLASSIFICATION	0.9999987129021023	WITHOUT_CLASSIFICATION	1.287097897688467E-6	TEST
// line 1047	WITHOUT_CLASSIFICATION	0.9999990242477277	WITHOUT_CLASSIFICATION	9.757522722991698E-7	TEST
// line 1072	WITHOUT_CLASSIFICATION	0.9999989070337337	WITHOUT_CLASSIFICATION	1.0929662662696015E-6	TEST
// line 1081	WITHOUT_CLASSIFICATION	0.9999986240360532	WITHOUT_CLASSIFICATION	1.3759639466761573E-6	TEST
// line 1108	WITHOUT_CLASSIFICATION	0.9999988343638003	WITHOUT_CLASSIFICATION	1.1656361996734262E-6	TEST
// line 1136	WITHOUT_CLASSIFICATION	0.9999987179047866	WITHOUT_CLASSIFICATION	1.2820952134512584E-6	TEST
// line 1168	WITHOUT_CLASSIFICATION	0.9999988815338261	WITHOUT_CLASSIFICATION	1.1184661738769554E-6	TEST
// line 1192	WITHOUT_CLASSIFICATION	0.9999988369669333	WITHOUT_CLASSIFICATION	1.1630330667404E-6	TEST
// line 1241	WITHOUT_CLASSIFICATION	0.9999986204599225	WITHOUT_CLASSIFICATION	1.3795400775758461E-6	TEST
// line 1267	WITHOUT_CLASSIFICATION	0.9999988310009986	WITHOUT_CLASSIFICATION	1.1689990013433175E-6	TEST
// line 1286	WITHOUT_CLASSIFICATION	0.9999988317468024	WITHOUT_CLASSIFICATION	1.1682531976333027E-6	TEST
// line 1301	WITHOUT_CLASSIFICATION	0.9999985658241711	WITHOUT_CLASSIFICATION	1.4341758288251657E-6	TEST
// line 1314	WITHOUT_CLASSIFICATION	0.9999987310581968	WITHOUT_CLASSIFICATION	1.2689418032136473E-6	TEST
// line 1333	WITHOUT_CLASSIFICATION	0.9999986644646989	WITHOUT_CLASSIFICATION	1.335535301151384E-6	TEST
// line 1362	WITHOUT_CLASSIFICATION	0.9999986637806989	WITHOUT_CLASSIFICATION	1.3362193009931537E-6	TEST
// line 1395	WITHOUT_CLASSIFICATION	0.999998729063965	WITHOUT_CLASSIFICATION	1.2709360349474915E-6	TEST
// line 1420	WITHOUT_CLASSIFICATION	0.9999988263157734	WITHOUT_CLASSIFICATION	1.1736842265921565E-6	TEST
// line 1439	WITHOUT_CLASSIFICATION	0.9999987959790594	WITHOUT_CLASSIFICATION	1.2040209406534728E-6	TEST
// line 1476	WITHOUT_CLASSIFICATION	0.9999989373454645	WITHOUT_CLASSIFICATION	1.0626545354868086E-6	TEST
// line 1535	WITHOUT_CLASSIFICATION	0.9999986616015973	WITHOUT_CLASSIFICATION	1.3383984025943654E-6	TEST
// line 1588	WITHOUT_CLASSIFICATION	0.999998846758915	WITHOUT_CLASSIFICATION	1.1532410849766002E-6	TEST
// line 1618	WITHOUT_CLASSIFICATION	0.9999989455807193	WITHOUT_CLASSIFICATION	1.0544192807255746E-6	TEST
// line 1643	WITHOUT_CLASSIFICATION	0.9999987897847235	WITHOUT_CLASSIFICATION	1.2102152765048465E-6	TEST
// line 1669	WITHOUT_CLASSIFICATION	0.9999989023972504	WITHOUT_CLASSIFICATION	1.097602749606291E-6	TEST
// line 1728	WITHOUT_CLASSIFICATION	0.9999987946634825	WITHOUT_CLASSIFICATION	1.2053365173731707E-6	TEST
// line 1753	WITHOUT_CLASSIFICATION	0.9999986983476418	WITHOUT_CLASSIFICATION	1.3016523583282633E-6	TEST
// line 1779	WITHOUT_CLASSIFICATION	0.9999988782641771	WITHOUT_CLASSIFICATION	1.1217358229015005E-6	TEST
// line 1794	WITHOUT_CLASSIFICATION	0.9999989392870152	WITHOUT_CLASSIFICATION	1.0607129848386235E-6	TEST
// line 1812	WITHOUT_CLASSIFICATION	0.999998875092955	WITHOUT_CLASSIFICATION	1.124907044890833E-6	TEST
// line 1837	WITHOUT_CLASSIFICATION	0.9999987997924927	WITHOUT_CLASSIFICATION	1.200207507247073E-6	TEST
// line 1895	WITHOUT_CLASSIFICATION	0.9999989749014578	WITHOUT_CLASSIFICATION	1.0250985421296512E-6	TEST
// line 1925	WITHOUT_CLASSIFICATION	0.9999988266039249	WITHOUT_CLASSIFICATION	1.1733960749861228E-6	TEST
// line 1950	WITHOUT_CLASSIFICATION	0.9999989653579097	WITHOUT_CLASSIFICATION	1.0346420903604979E-6	TEST
// line 1992	WITHOUT_CLASSIFICATION	0.999998820801014	WITHOUT_CLASSIFICATION	1.1791989859992313E-6	TEST
// line 2014	WITHOUT_CLASSIFICATION	0.9999987669985506	WITHOUT_CLASSIFICATION	1.2330014492855415E-6	TEST
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999975351682411	WITHOUT_CLASSIFICATION	2.464831758957E-6	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999999468281284	WITHOUT_CLASSIFICATION	5.3171871719659676E-8	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999950865263235	WITHOUT_CLASSIFICATION	4.913473676459493E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999950865263235	WITHOUT_CLASSIFICATION	4.913473676459493E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999950865263235	WITHOUT_CLASSIFICATION	4.913473676459493E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999950865263235	WITHOUT_CLASSIFICATION	4.913473676459493E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999950865263235	WITHOUT_CLASSIFICATION	4.913473676459493E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999950865263235	WITHOUT_CLASSIFICATION	4.913473676459493E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999950865263235	WITHOUT_CLASSIFICATION	4.913473676459493E-6	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999992919419701	WITHOUT_CLASSIFICATION	7.080580298579623E-7	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999992919419701	WITHOUT_CLASSIFICATION	7.080580298579623E-7	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999992919419701	WITHOUT_CLASSIFICATION	7.080580298579623E-7	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999992919419701	WITHOUT_CLASSIFICATION	7.080580298579623E-7	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.999997394270719	WITHOUT_CLASSIFICATION	2.60572928107992E-6	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.999997394270719	WITHOUT_CLASSIFICATION	2.60572928107992E-6	TEST
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999991447772917	WITHOUT_CLASSIFICATION	8.55222708406051E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999548870389	WITHOUT_CLASSIFICATION	4.511296124325585E-8	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999548870389	WITHOUT_CLASSIFICATION	4.511296124325585E-8	TEST
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999995519923638	WITHOUT_CLASSIFICATION	4.4800763622780665E-7	TEST
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999998837669516	WITHOUT_CLASSIFICATION	1.1623304846492067E-7	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999873185509	WITHOUT_CLASSIFICATION	1.2681449237574968E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999873185509	WITHOUT_CLASSIFICATION	1.2681449237574968E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999873185509	WITHOUT_CLASSIFICATION	1.2681449237574968E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999873185509	WITHOUT_CLASSIFICATION	1.2681449237574968E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999873185509	WITHOUT_CLASSIFICATION	1.2681449237574968E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999873185509	WITHOUT_CLASSIFICATION	1.2681449237574968E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999873185509	WITHOUT_CLASSIFICATION	1.2681449237574968E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999875553885	WITHOUT_CLASSIFICATION	1.2444611495289688E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999774107363	WITHOUT_CLASSIFICATION	2.2589263699899694E-8	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999998271528674	WITHOUT_CLASSIFICATION	1.728471325844875E-7	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999998271528674	WITHOUT_CLASSIFICATION	1.728471325844875E-7	TEST
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999391152414	WITHOUT_CLASSIFICATION	6.088475865323009E-8	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999996494547004	WITHOUT_CLASSIFICATION	3.505452996068492E-7	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999996494547004	WITHOUT_CLASSIFICATION	3.505452996068492E-7	TEST
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999999088065102	WITHOUT_CLASSIFICATION	9.119348980208623E-8	TEST
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.997406646005306	WITHOUT_CLASSIFICATION	0.0025933539946940993	TEST
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999987400026875	WITHOUT_CLASSIFICATION	1.2599973124935195E-6	TEST
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999999037652914	WITHOUT_CLASSIFICATION	9.623470875555692E-8	TEST
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999995779763207	WITHOUT_CLASSIFICATION	4.220236793122785E-7	TEST
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999995331157384	WITHOUT_CLASSIFICATION	4.668842615707861E-7	TEST
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999977306754884	WITHOUT_CLASSIFICATION	2.269324511601979E-6	TEST
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999998330209325	WITHOUT_CLASSIFICATION	1.6697906747742145E-7	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999428325200291	WITHOUT_CLASSIFICATION	5.7167479970761266E-5	TEST
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9999934242472095	WITHOUT_CLASSIFICATION	6.575752790546636E-6	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9942013591352822	WITHOUT_CLASSIFICATION	0.00579864086471788	TEST
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999999965886931	WITHOUT_CLASSIFICATION	3.4113070230922065E-9	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999998473503547	WITHOUT_CLASSIFICATION	1.5264964528068874E-7	TEST
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999855645355901	WITHOUT_CLASSIFICATION	1.4435464409991156E-5	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.999998110988367	WITHOUT_CLASSIFICATION	1.8890116330329451E-6	TEST
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999999576256454	WITHOUT_CLASSIFICATION	4.237435464126313E-8	TEST
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999996596504986	WITHOUT_CLASSIFICATION	3.4034950136986884E-7	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999966735649866	WITHOUT_CLASSIFICATION	3.326435013526757E-6	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999995877233017	WITHOUT_CLASSIFICATION	4.1227669843752637E-7	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999995877233017	WITHOUT_CLASSIFICATION	4.1227669843752637E-7	TEST
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999988719550321	WITHOUT_CLASSIFICATION	1.1280449679342704E-6	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999998396892252	WITHOUT_CLASSIFICATION	1.6031077475085404E-7	TEST
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999993613376665	WITHOUT_CLASSIFICATION	6.386623334693981E-7	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999837288584815	WITHOUT_CLASSIFICATION	1.6271141518566092E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999808122767712	WITHOUT_CLASSIFICATION	1.9187723228864344E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999808122767712	WITHOUT_CLASSIFICATION	1.9187723228864344E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999808122767712	WITHOUT_CLASSIFICATION	1.9187723228864344E-5	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999995895069592	WITHOUT_CLASSIFICATION	4.104930408188473E-7	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999998642569758	WITHOUT_CLASSIFICATION	1.3574302415162976E-7	TEST
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999999668530262	WITHOUT_CLASSIFICATION	3.314697387760895E-8	TEST
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999999635618235	WITHOUT_CLASSIFICATION	3.6438176408461464E-8	TEST
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999996951590193	WITHOUT_CLASSIFICATION	3.048409806808683E-7	TEST
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999999883004952	WITHOUT_CLASSIFICATION	1.1699504662577917E-8	TEST
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999999719909359	WITHOUT_CLASSIFICATION	2.800906411223909E-8	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.999999763056589	WITHOUT_CLASSIFICATION	2.3694341094884833E-7	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999999989891177	WITHOUT_CLASSIFICATION	1.0108822352331845E-9	TEST
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999974668168693	WITHOUT_CLASSIFICATION	2.5331831306932716E-6	TEST
// reset buffer	WITHOUT_CLASSIFICATION	0.9999995718542346	WITHOUT_CLASSIFICATION	4.2814576539851177E-7	TEST
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999999561191043	WITHOUT_CLASSIFICATION	4.388089572686555E-8	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9610293268403232	WITHOUT_CLASSIFICATION	0.038970673159676776	TEST
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999913847382986	WITHOUT_CLASSIFICATION	8.615261701336803E-6	TEST
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999994820067307	WITHOUT_CLASSIFICATION	5.179932693716382E-7	TEST
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9998975799567852	WITHOUT_CLASSIFICATION	1.0242004321484523E-4	TEST
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999998447873069	WITHOUT_CLASSIFICATION	1.5521269321847515E-7	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.999960781013698	WITHOUT_CLASSIFICATION	3.921898630207746E-5	TEST
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999999973094702	WITHOUT_CLASSIFICATION	2.6905297697555655E-9	TEST
