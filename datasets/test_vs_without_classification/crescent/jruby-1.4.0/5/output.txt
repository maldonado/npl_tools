// ?R  | boolean | True if file is readable by the real uid/gid of the caller // FIXME: Need to implement an readable_real_p in FileTest	TEST	0.999585323775198	WITHOUT_CLASSIFICATION	4.1467622480191596E-4	TEST
// TODO make an assert here	TEST	0.999904832423959	WITHOUT_CLASSIFICATION	9.516757604099917E-5	TEST
// TODO add test methods here. The name must begin with 'test'. For example:	TEST	0.9952198440767004	WITHOUT_CLASSIFICATION	0.004780155923299595	TEST
// TODO: Make into an assert once I get things like blockbodynodes to be implicit nil	TEST	0.9998480597060568	WITHOUT_CLASSIFICATION	1.5194029394325546E-4	TEST
// if the method is extending something, then we have // to test if the handler is initialized...	TEST	0.9999837302417375	WITHOUT_CLASSIFICATION	1.6269758262555927E-5	TEST
// ?W  | boolean | True if file1 exists and is writable by the real uid/gid // FIXME: Need to implement an writable_real_p in FileTest	TEST	0.9991841394571294	WITHOUT_CLASSIFICATION	8.158605428706911E-4	TEST
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.999999863026502	WITHOUT_CLASSIFICATION	1.369734979631159E-7	TEST
// line 335	WITHOUT_CLASSIFICATION	0.9999955272849771	WITHOUT_CLASSIFICATION	4.472715022843254E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999808480774222	WITHOUT_CLASSIFICATION	1.9151922577937806E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999808480774222	WITHOUT_CLASSIFICATION	1.9151922577937806E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999378537389442	WITHOUT_CLASSIFICATION	6.21462610557297E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999378537389442	WITHOUT_CLASSIFICATION	6.21462610557297E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999592557987186	WITHOUT_CLASSIFICATION	4.074420128145634E-5	TEST
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999967257351973	WITHOUT_CLASSIFICATION	3.274264802682138E-6	TEST
// line 362	WITHOUT_CLASSIFICATION	0.9999960527406008	WITHOUT_CLASSIFICATION	3.947259399264522E-6	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999960499453941	WITHOUT_CLASSIFICATION	3.950054605832869E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999864743127845	WITHOUT_CLASSIFICATION	1.3525687215365528E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999864743127845	WITHOUT_CLASSIFICATION	1.3525687215365528E-5	TEST
// line 391	WITHOUT_CLASSIFICATION	0.9999953725045939	WITHOUT_CLASSIFICATION	4.627495406055225E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999861515152741	WITHOUT_CLASSIFICATION	1.3848484725815959E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999861515152741	WITHOUT_CLASSIFICATION	1.3848484725815959E-5	TEST
/* ^D */	WITHOUT_CLASSIFICATION	0.9999778676585442	WITHOUT_CLASSIFICATION	2.213234145568464E-5	TEST
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999829305003225	WITHOUT_CLASSIFICATION	1.7069499677477396E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999794724163149	WITHOUT_CLASSIFICATION	2.052758368507244E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999794724163149	WITHOUT_CLASSIFICATION	2.052758368507244E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999794724163149	WITHOUT_CLASSIFICATION	2.052758368507244E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999794724163149	WITHOUT_CLASSIFICATION	2.052758368507244E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999794724163149	WITHOUT_CLASSIFICATION	2.052758368507244E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999794724163149	WITHOUT_CLASSIFICATION	2.052758368507244E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999794724163149	WITHOUT_CLASSIFICATION	2.052758368507244E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999415106427861	WITHOUT_CLASSIFICATION	5.848935721397261E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999415106427861	WITHOUT_CLASSIFICATION	5.848935721397261E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999415106427861	WITHOUT_CLASSIFICATION	5.848935721397261E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999415106427861	WITHOUT_CLASSIFICATION	5.848935721397261E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999415106427861	WITHOUT_CLASSIFICATION	5.848935721397261E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999415106427861	WITHOUT_CLASSIFICATION	5.848935721397261E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999415106427861	WITHOUT_CLASSIFICATION	5.848935721397261E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999580344300354	WITHOUT_CLASSIFICATION	4.1965569964587614E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999580344300354	WITHOUT_CLASSIFICATION	4.1965569964587614E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999580344300354	WITHOUT_CLASSIFICATION	4.1965569964587614E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999580344300354	WITHOUT_CLASSIFICATION	4.1965569964587614E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999580344300354	WITHOUT_CLASSIFICATION	4.1965569964587614E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999580344300354	WITHOUT_CLASSIFICATION	4.1965569964587614E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999872656324076	WITHOUT_CLASSIFICATION	1.273436759240677E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999872656324076	WITHOUT_CLASSIFICATION	1.273436759240677E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999872656324076	WITHOUT_CLASSIFICATION	1.273436759240677E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999872656324076	WITHOUT_CLASSIFICATION	1.273436759240677E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999872656324076	WITHOUT_CLASSIFICATION	1.273436759240677E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999872656324076	WITHOUT_CLASSIFICATION	1.273436759240677E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999869617199023	WITHOUT_CLASSIFICATION	1.3038280097629545E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999869617199023	WITHOUT_CLASSIFICATION	1.3038280097629545E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999869617199023	WITHOUT_CLASSIFICATION	1.3038280097629545E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999869617199023	WITHOUT_CLASSIFICATION	1.3038280097629545E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999869617199023	WITHOUT_CLASSIFICATION	1.3038280097629545E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999869617199023	WITHOUT_CLASSIFICATION	1.3038280097629545E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999869617199023	WITHOUT_CLASSIFICATION	1.3038280097629545E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999862465530059	WITHOUT_CLASSIFICATION	1.3753446994003186E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999862465530059	WITHOUT_CLASSIFICATION	1.3753446994003186E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999862465530059	WITHOUT_CLASSIFICATION	1.3753446994003186E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999862465530059	WITHOUT_CLASSIFICATION	1.3753446994003186E-5	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9999710651049949	WITHOUT_CLASSIFICATION	2.8934895005076535E-5	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9999710651049949	WITHOUT_CLASSIFICATION	2.8934895005076535E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961647198616	WITHOUT_CLASSIFICATION	3.83528013835548E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961647198616	WITHOUT_CLASSIFICATION	3.83528013835548E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961647198616	WITHOUT_CLASSIFICATION	3.83528013835548E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961647198616	WITHOUT_CLASSIFICATION	3.83528013835548E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961647198616	WITHOUT_CLASSIFICATION	3.83528013835548E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961647198616	WITHOUT_CLASSIFICATION	3.83528013835548E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961647198616	WITHOUT_CLASSIFICATION	3.83528013835548E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961647198616	WITHOUT_CLASSIFICATION	3.83528013835548E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961647198616	WITHOUT_CLASSIFICATION	3.83528013835548E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961647198616	WITHOUT_CLASSIFICATION	3.83528013835548E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961647198616	WITHOUT_CLASSIFICATION	3.83528013835548E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961647198616	WITHOUT_CLASSIFICATION	3.83528013835548E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961647198616	WITHOUT_CLASSIFICATION	3.83528013835548E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961647198616	WITHOUT_CLASSIFICATION	3.83528013835548E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961647198616	WITHOUT_CLASSIFICATION	3.83528013835548E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961647198616	WITHOUT_CLASSIFICATION	3.83528013835548E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961647198616	WITHOUT_CLASSIFICATION	3.83528013835548E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961647198616	WITHOUT_CLASSIFICATION	3.83528013835548E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961647198616	WITHOUT_CLASSIFICATION	3.83528013835548E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961647198616	WITHOUT_CLASSIFICATION	3.83528013835548E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961647198616	WITHOUT_CLASSIFICATION	3.83528013835548E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961647198616	WITHOUT_CLASSIFICATION	3.83528013835548E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961647198616	WITHOUT_CLASSIFICATION	3.83528013835548E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961647198616	WITHOUT_CLASSIFICATION	3.83528013835548E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961647198616	WITHOUT_CLASSIFICATION	3.83528013835548E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961647198616	WITHOUT_CLASSIFICATION	3.83528013835548E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961647198616	WITHOUT_CLASSIFICATION	3.83528013835548E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961647198616	WITHOUT_CLASSIFICATION	3.83528013835548E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961647198616	WITHOUT_CLASSIFICATION	3.83528013835548E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961647198616	WITHOUT_CLASSIFICATION	3.83528013835548E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961647198616	WITHOUT_CLASSIFICATION	3.83528013835548E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961647198616	WITHOUT_CLASSIFICATION	3.83528013835548E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961647198616	WITHOUT_CLASSIFICATION	3.83528013835548E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961647198616	WITHOUT_CLASSIFICATION	3.83528013835548E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961647198616	WITHOUT_CLASSIFICATION	3.83528013835548E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961647198616	WITHOUT_CLASSIFICATION	3.83528013835548E-6	TEST
// return result	WITHOUT_CLASSIFICATION	0.9999969341343474	WITHOUT_CLASSIFICATION	3.0658656526716815E-6	TEST
// name	WITHOUT_CLASSIFICATION	0.9999979298802377	WITHOUT_CLASSIFICATION	2.0701197622454708E-6	TEST
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999956675376498	WITHOUT_CLASSIFICATION	4.3324623502387155E-6	TEST
// Accessor methods.	WITHOUT_CLASSIFICATION	0.999999073457918	WITHOUT_CLASSIFICATION	9.265420818751137E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999948739137868	WITHOUT_CLASSIFICATION	5.126086213162959E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999948739137868	WITHOUT_CLASSIFICATION	5.126086213162959E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999948739137868	WITHOUT_CLASSIFICATION	5.126086213162959E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999948739137868	WITHOUT_CLASSIFICATION	5.126086213162959E-6	TEST
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999942409300014	WITHOUT_CLASSIFICATION	5.759069998626108E-6	TEST
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.999998958961864	WITHOUT_CLASSIFICATION	1.041038135951284E-6	TEST
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999966912969002	WITHOUT_CLASSIFICATION	3.308703099857617E-6	TEST
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.999996787266163	WITHOUT_CLASSIFICATION	3.212733836881188E-6	TEST
// Version information:	WITHOUT_CLASSIFICATION	0.9999994707570227	WITHOUT_CLASSIFICATION	5.292429773521393E-7	TEST
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999986587963672	WITHOUT_CLASSIFICATION	1.341203632909884E-6	TEST
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999989946337203	WITHOUT_CLASSIFICATION	1.0053662796529545E-6	TEST
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.999999935359341	WITHOUT_CLASSIFICATION	6.464065906822485E-8	TEST
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999999899745617	WITHOUT_CLASSIFICATION	1.0025438307132095E-8	TEST
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999983275327665	WITHOUT_CLASSIFICATION	1.6724672334973525E-6	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999992650678526	WITHOUT_CLASSIFICATION	7.349321473682986E-7	TEST
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999941445389137	WITHOUT_CLASSIFICATION	5.8554610863469275E-6	TEST
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9999747595195129	WITHOUT_CLASSIFICATION	2.524048048710449E-5	TEST
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999986389038953	WITHOUT_CLASSIFICATION	1.3610961046734338E-6	TEST
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999983820899884	WITHOUT_CLASSIFICATION	1.6179100117052591E-6	TEST
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999854234301714	WITHOUT_CLASSIFICATION	1.4576569828557353E-5	TEST
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9999996643242857	WITHOUT_CLASSIFICATION	3.356757142711783E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999948739137868	WITHOUT_CLASSIFICATION	5.126086213162959E-6	TEST
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999992264396003	WITHOUT_CLASSIFICATION	7.735603997251196E-7	TEST
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999958241313575	WITHOUT_CLASSIFICATION	4.175868642520562E-6	TEST
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999972607520915	WITHOUT_CLASSIFICATION	2.7392479085248967E-6	TEST
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9999731720680797	WITHOUT_CLASSIFICATION	2.6827931920307307E-5	TEST
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9999984614734099	WITHOUT_CLASSIFICATION	1.5385265900798137E-6	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.999998898508425	WITHOUT_CLASSIFICATION	1.1014915749574357E-6	TEST
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999971131742721	WITHOUT_CLASSIFICATION	2.886825727795825E-6	TEST
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999998820609015	WITHOUT_CLASSIFICATION	1.1793909840207851E-7	TEST
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999997547688588	WITHOUT_CLASSIFICATION	2.452311411073573E-7	TEST
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999998417334837	WITHOUT_CLASSIFICATION	1.5826651645943206E-7	TEST
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999939618364143	WITHOUT_CLASSIFICATION	6.038163585792155E-6	TEST
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999987293926569	WITHOUT_CLASSIFICATION	1.2706073431085306E-6	TEST
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999965836356618	WITHOUT_CLASSIFICATION	3.416364338212102E-6	TEST
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.999972561795271	WITHOUT_CLASSIFICATION	2.743820472886357E-5	TEST
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999480770044831	WITHOUT_CLASSIFICATION	5.192299551692942E-5	TEST
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999919464293991	WITHOUT_CLASSIFICATION	8.053570600866197E-6	TEST
// RubySignal	WITHOUT_CLASSIFICATION	0.9999970095065751	WITHOUT_CLASSIFICATION	2.990493424934353E-6	TEST
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999996030715443	WITHOUT_CLASSIFICATION	3.969284556658045E-7	TEST
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9992437262947603	WITHOUT_CLASSIFICATION	7.562737052396818E-4	TEST
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999985133399331	WITHOUT_CLASSIFICATION	1.4866600669334984E-6	TEST
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999976128078556	WITHOUT_CLASSIFICATION	2.3871921443937946E-6	TEST
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999932124030387	WITHOUT_CLASSIFICATION	6.787596961317748E-6	TEST
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999966853597871	WITHOUT_CLASSIFICATION	3.314640212871043E-6	TEST
//io.finish();	WITHOUT_CLASSIFICATION	0.9999357426543616	WITHOUT_CLASSIFICATION	6.425734563843423E-5	TEST
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9999987174246239	WITHOUT_CLASSIFICATION	1.2825753760212104E-6	TEST
// hmm...	WITHOUT_CLASSIFICATION	0.9999935434374897	WITHOUT_CLASSIFICATION	6.456562510227675E-6	TEST
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999694934900936	WITHOUT_CLASSIFICATION	3.050650990643697E-5	TEST
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999985559827318	WITHOUT_CLASSIFICATION	1.4440172682626256E-6	TEST
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999986212503271	WITHOUT_CLASSIFICATION	1.378749672849642E-6	TEST
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999998304564215	WITHOUT_CLASSIFICATION	1.6954357859168756E-7	TEST
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.999996862703253	WITHOUT_CLASSIFICATION	3.137296746883085E-6	TEST
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999992315245452	WITHOUT_CLASSIFICATION	7.684754548947209E-7	TEST
/* Time class methods */	WITHOUT_CLASSIFICATION	0.99999938671403	WITHOUT_CLASSIFICATION	6.132859701257608E-7	TEST
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999994436420006	WITHOUT_CLASSIFICATION	5.563579995522469E-7	TEST
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999992957104052	WITHOUT_CLASSIFICATION	7.042895947550671E-7	TEST
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999975396624834	WITHOUT_CLASSIFICATION	2.460337516653231E-6	TEST
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999988155044204	WITHOUT_CLASSIFICATION	1.184495579531907E-6	TEST
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999996582185278	WITHOUT_CLASSIFICATION	3.4178147220735777E-7	TEST
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999980018520445	WITHOUT_CLASSIFICATION	1.9981479555919574E-6	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999950318437422	WITHOUT_CLASSIFICATION	4.968156257823108E-6	TEST
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999997283563552	WITHOUT_CLASSIFICATION	2.716436447817183E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999998504844188	WITHOUT_CLASSIFICATION	1.4951558120579768E-6	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999981266632272	WITHOUT_CLASSIFICATION	1.8733367728066412E-6	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999768333165598	WITHOUT_CLASSIFICATION	2.3166683440146773E-5	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999768333165598	WITHOUT_CLASSIFICATION	2.3166683440146773E-5	TEST
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9999982245223016	WITHOUT_CLASSIFICATION	1.7754776983704052E-6	TEST
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999999112440596	WITHOUT_CLASSIFICATION	8.875594031096264E-8	TEST
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999959165397709	WITHOUT_CLASSIFICATION	4.083460229019342E-6	TEST
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999993807770396	WITHOUT_CLASSIFICATION	6.192229604117099E-7	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999975855479339	WITHOUT_CLASSIFICATION	2.4144520660293297E-6	TEST
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999985021102711	WITHOUT_CLASSIFICATION	1.4978897288808136E-6	TEST
// ???	WITHOUT_CLASSIFICATION	0.9999864439947677	WITHOUT_CLASSIFICATION	1.3556005232326744E-5	TEST
// PID	WITHOUT_CLASSIFICATION	0.9999860587410715	WITHOUT_CLASSIFICATION	1.3941258928601268E-5	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999998504844188	WITHOUT_CLASSIFICATION	1.4951558120579768E-6	TEST
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999973458269916	WITHOUT_CLASSIFICATION	2.6541730084418758E-6	TEST
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999895886230479	WITHOUT_CLASSIFICATION	1.0411376952045E-5	TEST
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999996140468334	WITHOUT_CLASSIFICATION	3.859531665952255E-7	TEST
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999999558357756	WITHOUT_CLASSIFICATION	4.4164224375163885E-8	TEST
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.999995491552628	WITHOUT_CLASSIFICATION	4.508447372034909E-6	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999961996064023	WITHOUT_CLASSIFICATION	3.8003935976420065E-6	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999961996064023	WITHOUT_CLASSIFICATION	3.8003935976420065E-6	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999961996064023	WITHOUT_CLASSIFICATION	3.8003935976420065E-6	TEST
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.999999310210392	WITHOUT_CLASSIFICATION	6.897896079230113E-7	TEST
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999800205128853	WITHOUT_CLASSIFICATION	1.9979487114662445E-5	TEST
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999997416025809	WITHOUT_CLASSIFICATION	2.5839741918909846E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999993242646718	WITHOUT_CLASSIFICATION	6.757353282468117E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999993242646718	WITHOUT_CLASSIFICATION	6.757353282468117E-7	TEST
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9999975401029415	WITHOUT_CLASSIFICATION	2.4598970584038827E-6	TEST
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999996347637268	WITHOUT_CLASSIFICATION	3.652362732529461E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999993242646718	WITHOUT_CLASSIFICATION	6.757353282468117E-7	TEST
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999966607616559	WITHOUT_CLASSIFICATION	3.3392383441444758E-6	TEST
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999993449672224	WITHOUT_CLASSIFICATION	6.550327776938163E-7	TEST
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999996217404488	WITHOUT_CLASSIFICATION	3.782595512460399E-7	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999978620874969	WITHOUT_CLASSIFICATION	2.1379125031347897E-6	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999978620874969	WITHOUT_CLASSIFICATION	2.1379125031347897E-6	TEST
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999927183711333	WITHOUT_CLASSIFICATION	7.2816288666100104E-6	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999941504677459	WITHOUT_CLASSIFICATION	5.8495322540995145E-6	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999985251089814	WITHOUT_CLASSIFICATION	1.4748910186263558E-6	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999985251089814	WITHOUT_CLASSIFICATION	1.4748910186263558E-6	TEST
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999994844378214	WITHOUT_CLASSIFICATION	5.155621786500836E-7	TEST
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999982267906486	WITHOUT_CLASSIFICATION	1.7732093514629827E-6	TEST
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999757196300935	WITHOUT_CLASSIFICATION	2.4280369906538117E-5	TEST
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999995960218273	WITHOUT_CLASSIFICATION	4.03978172668113E-7	TEST
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999960400995633	WITHOUT_CLASSIFICATION	3.95990043666597E-6	TEST
// extras flag	WITHOUT_CLASSIFICATION	0.9999987354742255	WITHOUT_CLASSIFICATION	1.2645257744975766E-6	TEST
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.999985997449671	WITHOUT_CLASSIFICATION	1.4002550328971105E-5	TEST
// ...nothing	WITHOUT_CLASSIFICATION	0.9999951871384622	WITHOUT_CLASSIFICATION	4.812861537750162E-6	TEST
// utility method	WITHOUT_CLASSIFICATION	0.9999988653286115	WITHOUT_CLASSIFICATION	1.134671388518797E-6	TEST
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999994375730826	WITHOUT_CLASSIFICATION	5.624269173204651E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999998504844188	WITHOUT_CLASSIFICATION	1.4951558120579768E-6	TEST
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999860034872864	WITHOUT_CLASSIFICATION	1.3996512713508586E-5	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999963077111765	WITHOUT_CLASSIFICATION	3.6922888235312815E-6	TEST
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.999998087945499	WITHOUT_CLASSIFICATION	1.9120545009561753E-6	TEST
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9999958108418423	WITHOUT_CLASSIFICATION	4.189158157658747E-6	TEST
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.999999323021796	WITHOUT_CLASSIFICATION	6.769782039958193E-7	TEST
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999923925970131	WITHOUT_CLASSIFICATION	7.607402986819152E-6	TEST
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999933241629655	WITHOUT_CLASSIFICATION	6.6758370344316564E-6	TEST
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999950169992688	WITHOUT_CLASSIFICATION	4.9830007311571735E-6	TEST
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999993323760799	WITHOUT_CLASSIFICATION	6.676239200840325E-7	TEST
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.999999419512204	WITHOUT_CLASSIFICATION	5.804877959364238E-7	TEST
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999991728989785	WITHOUT_CLASSIFICATION	8.271010213777456E-7	TEST
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.999999837933532	WITHOUT_CLASSIFICATION	1.6206646795569043E-7	TEST
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999994198660281	WITHOUT_CLASSIFICATION	5.801339718596773E-7	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999986127527961	WITHOUT_CLASSIFICATION	1.3872472038425471E-6	TEST
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999869334971482	WITHOUT_CLASSIFICATION	1.3066502851746159E-5	TEST
// recheck condition	WITHOUT_CLASSIFICATION	0.9999998516297158	WITHOUT_CLASSIFICATION	1.4837028423741857E-7	TEST
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999990959700624	WITHOUT_CLASSIFICATION	9.040299376053208E-7	TEST
// Construct key services	WITHOUT_CLASSIFICATION	0.9999985239185373	WITHOUT_CLASSIFICATION	1.4760814628458173E-6	TEST
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.99999908781187	WITHOUT_CLASSIFICATION	9.121881300610861E-7	TEST
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999999339427883	WITHOUT_CLASSIFICATION	6.605721174469848E-8	TEST
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999992110754993	WITHOUT_CLASSIFICATION	7.88924500790216E-7	TEST
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999996929455225	WITHOUT_CLASSIFICATION	3.0705447752009403E-7	TEST
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.999999821677777	WITHOUT_CLASSIFICATION	1.7832222305815558E-7	TEST
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.999997890488016	WITHOUT_CLASSIFICATION	2.1095119839562628E-6	TEST
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999992115584168	WITHOUT_CLASSIFICATION	7.88441583224298E-7	TEST
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999997141665633	WITHOUT_CLASSIFICATION	2.85833436672399E-7	TEST
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999943704594911	WITHOUT_CLASSIFICATION	5.629540508905831E-6	TEST
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999990674803351	WITHOUT_CLASSIFICATION	9.325196649362403E-7	TEST
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999999101346532	WITHOUT_CLASSIFICATION	8.986534680670083E-8	TEST
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.999994960750034	WITHOUT_CLASSIFICATION	5.039249965987328E-6	TEST
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999993816538055	WITHOUT_CLASSIFICATION	6.183461944346461E-7	TEST
// determine spacing	WITHOUT_CLASSIFICATION	0.9999995220629608	WITHOUT_CLASSIFICATION	4.779370391802957E-7	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999831613372694	WITHOUT_CLASSIFICATION	1.683866273054611E-5	TEST
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999991901912063	WITHOUT_CLASSIFICATION	8.098087936635703E-7	TEST
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999911950186154	WITHOUT_CLASSIFICATION	8.804981384560953E-6	TEST
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999927953799629	WITHOUT_CLASSIFICATION	7.204620037100436E-6	TEST
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999996804194596	WITHOUT_CLASSIFICATION	3.195805403109367E-7	TEST
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999888910863299	WITHOUT_CLASSIFICATION	1.110891367005415E-5	TEST
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999979005552883	WITHOUT_CLASSIFICATION	2.099444711797835E-6	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.99999849347407	WITHOUT_CLASSIFICATION	1.5065259299464065E-6	TEST
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999998828573414	WITHOUT_CLASSIFICATION	1.171426584508956E-7	TEST
// Default objects	WITHOUT_CLASSIFICATION	0.9999989670689966	WITHOUT_CLASSIFICATION	1.0329310034377684E-6	TEST
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999972669015513	WITHOUT_CLASSIFICATION	2.733098448675279E-6	TEST
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999992365465695	WITHOUT_CLASSIFICATION	7.634534304493519E-7	TEST
// Java support	WITHOUT_CLASSIFICATION	0.9999977973661549	WITHOUT_CLASSIFICATION	2.202633845184122E-6	TEST
// Parser stats	WITHOUT_CLASSIFICATION	0.9999983904179635	WITHOUT_CLASSIFICATION	1.609582036578872E-6	TEST
// Compilation	WITHOUT_CLASSIFICATION	0.9999994795880902	WITHOUT_CLASSIFICATION	5.204119097729158E-7	TEST
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999996400648614	WITHOUT_CLASSIFICATION	3.5993513861123605E-7	TEST
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999997883558914	WITHOUT_CLASSIFICATION	2.1164410852454432E-7	TEST
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999999393888096	WITHOUT_CLASSIFICATION	6.061119031778956E-8	TEST
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999998938957545	WITHOUT_CLASSIFICATION	1.0610424558735006E-7	TEST
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999996070027369	WITHOUT_CLASSIFICATION	3.9299726312771934E-7	TEST
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999993771471014	WITHOUT_CLASSIFICATION	6.228528985741164E-7	TEST
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999992335471721	WITHOUT_CLASSIFICATION	7.664528278663554E-7	TEST
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999990771370804	WITHOUT_CLASSIFICATION	9.228629196230763E-7	TEST
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999999095028775	WITHOUT_CLASSIFICATION	9.049712244011833E-8	TEST
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999646526902473	WITHOUT_CLASSIFICATION	3.5347309752688E-5	TEST
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999998918316066	WITHOUT_CLASSIFICATION	1.0816839340891467E-7	TEST
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999991391829559	WITHOUT_CLASSIFICATION	8.608170441091114E-7	TEST
// default options	WITHOUT_CLASSIFICATION	0.9999996580380368	WITHOUT_CLASSIFICATION	3.4196196319802984E-7	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999913175087004	WITHOUT_CLASSIFICATION	8.682491299587236E-6	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999913175087004	WITHOUT_CLASSIFICATION	8.682491299587236E-6	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999919525051976	WITHOUT_CLASSIFICATION	8.047494802384686E-6	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999919525051976	WITHOUT_CLASSIFICATION	8.047494802384686E-6	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999938350487088	WITHOUT_CLASSIFICATION	6.164951291304742E-6	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999938350487088	WITHOUT_CLASSIFICATION	6.164951291304742E-6	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9999906575416192	WITHOUT_CLASSIFICATION	9.342458380853778E-6	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9999906575416192	WITHOUT_CLASSIFICATION	9.342458380853778E-6	TEST
// long name option	WITHOUT_CLASSIFICATION	0.9999996116180032	WITHOUT_CLASSIFICATION	3.8838199677954933E-7	TEST
// conversion	WITHOUT_CLASSIFICATION	0.9999996344524099	WITHOUT_CLASSIFICATION	3.65547590019567E-7	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999966845079983	WITHOUT_CLASSIFICATION	3.3154920018131774E-6	TEST
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999991217329537	WITHOUT_CLASSIFICATION	8.78267046381E-7	TEST
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.999999425638848	WITHOUT_CLASSIFICATION	5.743611518801233E-7	TEST
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999983797711698	WITHOUT_CLASSIFICATION	1.620228830257596E-6	TEST
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999882110292666	WITHOUT_CLASSIFICATION	1.1788970733482443E-5	TEST
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999993973880822	WITHOUT_CLASSIFICATION	6.026119178825509E-7	TEST
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999993407330936	WITHOUT_CLASSIFICATION	6.59266906397223E-7	TEST
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999976790429064	WITHOUT_CLASSIFICATION	2.320957093666065E-6	TEST
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999996460628203	WITHOUT_CLASSIFICATION	3.5393717971346246E-7	TEST
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999986006359386	WITHOUT_CLASSIFICATION	1.3993640614578368E-6	TEST
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999953195951382	WITHOUT_CLASSIFICATION	4.68040486175025E-6	TEST
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999989306587397	WITHOUT_CLASSIFICATION	1.069341260291904E-6	TEST
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999982463650099	WITHOUT_CLASSIFICATION	1.7536349900625114E-6	TEST
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999952695169223	WITHOUT_CLASSIFICATION	4.7304830776909106E-6	TEST
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999998134053733	WITHOUT_CLASSIFICATION	1.8659462668523817E-7	TEST
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999984395360971	WITHOUT_CLASSIFICATION	1.5604639028638824E-6	TEST
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999984953671499	WITHOUT_CLASSIFICATION	1.5046328500309348E-6	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999889879829071	WITHOUT_CLASSIFICATION	1.1012017092917646E-5	TEST
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999992359804104	WITHOUT_CLASSIFICATION	7.640195896846125E-7	TEST
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999989219607123	WITHOUT_CLASSIFICATION	1.0780392877189364E-6	TEST
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999953978988138	WITHOUT_CLASSIFICATION	4.602101186251385E-6	TEST
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999975289297596	WITHOUT_CLASSIFICATION	2.4710702404023165E-6	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999976515794853	WITHOUT_CLASSIFICATION	2.3484205146806794E-6	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.999998832929623	WITHOUT_CLASSIFICATION	1.167070377006389E-6	TEST
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999963991980151	WITHOUT_CLASSIFICATION	3.600801984970297E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999985128591401	WITHOUT_CLASSIFICATION	1.4871408599049291E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999985128591401	WITHOUT_CLASSIFICATION	1.4871408599049291E-6	TEST
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999987145471542	WITHOUT_CLASSIFICATION	1.2854528458539006E-6	TEST
// string given	WITHOUT_CLASSIFICATION	0.9999982355408251	WITHOUT_CLASSIFICATION	1.7644591747859618E-6	TEST
// hash given	WITHOUT_CLASSIFICATION	0.9999969099208987	WITHOUT_CLASSIFICATION	3.0900791012651422E-6	TEST
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999997588587567	WITHOUT_CLASSIFICATION	2.4114124333328016E-7	TEST
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999930332470919	WITHOUT_CLASSIFICATION	6.96675290807417E-6	TEST
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999889182590848	WITHOUT_CLASSIFICATION	1.1081740915187104E-5	TEST
// nothing	WITHOUT_CLASSIFICATION	0.9999969506369065	WITHOUT_CLASSIFICATION	3.0493630934784595E-6	TEST
// nothing	WITHOUT_CLASSIFICATION	0.9999969506369065	WITHOUT_CLASSIFICATION	3.0493630934784595E-6	TEST
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999974080684533	WITHOUT_CLASSIFICATION	2.591931546749273E-6	TEST
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9983118971191134	WITHOUT_CLASSIFICATION	0.0016881028808865967	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999939879740645	WITHOUT_CLASSIFICATION	6.012025935514786E-6	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999939879740645	WITHOUT_CLASSIFICATION	6.012025935514786E-6	TEST
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.999999680588595	WITHOUT_CLASSIFICATION	3.194114048842963E-7	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999978048192032	WITHOUT_CLASSIFICATION	2.1951807967796735E-6	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999978048192032	WITHOUT_CLASSIFICATION	2.1951807967796735E-6	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999886266610325	WITHOUT_CLASSIFICATION	1.1373338967503642E-5	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999886266610325	WITHOUT_CLASSIFICATION	1.1373338967503642E-5	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999857758531051	WITHOUT_CLASSIFICATION	1.4224146894817065E-5	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999857758531051	WITHOUT_CLASSIFICATION	1.4224146894817065E-5	TEST
// QTRUE	WITHOUT_CLASSIFICATION	0.9999885576248287	WITHOUT_CLASSIFICATION	1.1442375171263285E-5	TEST
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999980998063035	WITHOUT_CLASSIFICATION	1.9001936964695741E-6	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999997246105186	WITHOUT_CLASSIFICATION	2.7538948143075157E-7	TEST
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999993525932978	WITHOUT_CLASSIFICATION	6.474067021965483E-7	TEST
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999998909015039	WITHOUT_CLASSIFICATION	1.0909849615378148E-7	TEST
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.999999648469646	WITHOUT_CLASSIFICATION	3.515303540921387E-7	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999992332767272	WITHOUT_CLASSIFICATION	7.667232728777269E-7	TEST
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999997009514792	WITHOUT_CLASSIFICATION	2.9904852080812893E-7	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999992332767272	WITHOUT_CLASSIFICATION	7.667232728777269E-7	TEST
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9998369741718242	WITHOUT_CLASSIFICATION	1.6302582817577947E-4	TEST
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999991226500012	WITHOUT_CLASSIFICATION	8.773499988784707E-7	TEST
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999951084157551	WITHOUT_CLASSIFICATION	4.891584244919569E-6	TEST
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999907119346404	WITHOUT_CLASSIFICATION	9.288065359531342E-6	TEST
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999988989346583	WITHOUT_CLASSIFICATION	1.1010653416937504E-6	TEST
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999961729602612	WITHOUT_CLASSIFICATION	3.827039738777517E-6	TEST
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999973770913636	WITHOUT_CLASSIFICATION	2.6229086363979584E-6	TEST
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999910456120606	WITHOUT_CLASSIFICATION	8.954387939388976E-6	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.999999830193974	WITHOUT_CLASSIFICATION	1.6980602590292152E-7	TEST
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999987989546851	WITHOUT_CLASSIFICATION	1.2010453149267553E-6	TEST
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999990078245896	WITHOUT_CLASSIFICATION	9.92175410357667E-7	TEST
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.999977283157302	WITHOUT_CLASSIFICATION	2.2716842697950297E-5	TEST
// file not given	WITHOUT_CLASSIFICATION	0.9999985513901201	WITHOUT_CLASSIFICATION	1.448609879943268E-6	TEST
// string to eval	WITHOUT_CLASSIFICATION	0.9999993311621783	WITHOUT_CLASSIFICATION	6.688378216174511E-7	TEST
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999952593812756	WITHOUT_CLASSIFICATION	4.740618724312659E-6	TEST
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999993760808287	WITHOUT_CLASSIFICATION	6.239191714633355E-7	TEST
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999990899986081	WITHOUT_CLASSIFICATION	9.100013919224115E-7	TEST
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999998027910214	WITHOUT_CLASSIFICATION	1.9720897857407124E-7	TEST
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9999871906534678	WITHOUT_CLASSIFICATION	1.2809346532102927E-5	TEST
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999829390820165	WITHOUT_CLASSIFICATION	1.7060917983420442E-5	TEST
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999967442076078	WITHOUT_CLASSIFICATION	3.25579239228955E-6	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999995139143822	WITHOUT_CLASSIFICATION	4.860856178090403E-7	TEST
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999974640134968	WITHOUT_CLASSIFICATION	2.5359865031420887E-6	TEST
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999991768904631	WITHOUT_CLASSIFICATION	8.231095369998819E-7	TEST
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999757525300164	WITHOUT_CLASSIFICATION	2.4247469983539984E-5	TEST
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999993042930646	WITHOUT_CLASSIFICATION	6.957069352735416E-7	TEST
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999972839851932	WITHOUT_CLASSIFICATION	2.716014806819286E-6	TEST
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999876723478087	WITHOUT_CLASSIFICATION	1.2327652191243535E-5	TEST
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999989545009055	WITHOUT_CLASSIFICATION	1.045499094579019E-6	TEST
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999986342939339	WITHOUT_CLASSIFICATION	1.3657060661370176E-6	TEST
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999969046477635	WITHOUT_CLASSIFICATION	3.0953522364646653E-6	TEST
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999998245936841	WITHOUT_CLASSIFICATION	1.7540631581809622E-7	TEST
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999994059417059	WITHOUT_CLASSIFICATION	5.940582941200069E-7	TEST
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.999998408670873	WITHOUT_CLASSIFICATION	1.5913291271306862E-6	TEST
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999980156811888	WITHOUT_CLASSIFICATION	1.984318811102641E-6	TEST
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999962163137573	WITHOUT_CLASSIFICATION	3.7836862425891023E-6	TEST
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999952101510364	WITHOUT_CLASSIFICATION	4.789848963478202E-6	TEST
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999996997575806	WITHOUT_CLASSIFICATION	3.0024241935167165E-7	TEST
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.999999744211036	WITHOUT_CLASSIFICATION	2.55788963970225E-7	TEST
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999979762785103	WITHOUT_CLASSIFICATION	2.023721489675592E-6	TEST
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999986428746385	WITHOUT_CLASSIFICATION	1.3571253616124337E-6	TEST
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999986877041542	WITHOUT_CLASSIFICATION	1.312295845740971E-6	TEST
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999985672125035	WITHOUT_CLASSIFICATION	1.4327874965802244E-6	TEST
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999985375208392	WITHOUT_CLASSIFICATION	1.462479160839677E-6	TEST
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999999492194976	WITHOUT_CLASSIFICATION	5.0780502454177925E-8	TEST
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999997709493275	WITHOUT_CLASSIFICATION	2.290506724726911E-7	TEST
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999981520715111	WITHOUT_CLASSIFICATION	1.8479284888321621E-6	TEST
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999997604935978	WITHOUT_CLASSIFICATION	2.3950640213590165E-7	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999994138207691	WITHOUT_CLASSIFICATION	5.861792309350076E-7	TEST
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999971712637741	WITHOUT_CLASSIFICATION	2.8287362258395364E-6	TEST
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999989060572955	WITHOUT_CLASSIFICATION	1.0939427044771605E-6	TEST
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999999706258307	WITHOUT_CLASSIFICATION	2.937416921664711E-8	TEST
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999799098288783	WITHOUT_CLASSIFICATION	2.0090171121600297E-5	TEST
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999993593254356	WITHOUT_CLASSIFICATION	6.406745643599411E-7	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999995694313101	WITHOUT_CLASSIFICATION	4.305686898598907E-7	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999995694313101	WITHOUT_CLASSIFICATION	4.305686898598907E-7	TEST
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.999999342965942	WITHOUT_CLASSIFICATION	6.570340581015306E-7	TEST
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999992219174229	WITHOUT_CLASSIFICATION	7.780825771756052E-7	TEST
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.999998562595227	WITHOUT_CLASSIFICATION	1.4374047729854794E-6	TEST
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999997807390861	WITHOUT_CLASSIFICATION	2.1926091386631965E-7	TEST
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999995487407715	WITHOUT_CLASSIFICATION	4.512592285821072E-7	TEST
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999858582909167	WITHOUT_CLASSIFICATION	1.4141709083185801E-5	TEST
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999968323851384	WITHOUT_CLASSIFICATION	3.167614861648634E-6	TEST
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999998880211982	WITHOUT_CLASSIFICATION	1.1197880171777009E-7	TEST
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999982122032017	WITHOUT_CLASSIFICATION	1.7877967983239457E-6	TEST
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999855751298055	WITHOUT_CLASSIFICATION	1.442487019460655E-5	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999995493690973	WITHOUT_CLASSIFICATION	4.506309026607287E-7	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999995493690973	WITHOUT_CLASSIFICATION	4.506309026607287E-7	TEST
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9999999361860094	WITHOUT_CLASSIFICATION	6.381399062133871E-8	TEST
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999998222709863	WITHOUT_CLASSIFICATION	1.7772901371090764E-7	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.999895658097992	WITHOUT_CLASSIFICATION	1.043419020080609E-4	TEST
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999997774719821	WITHOUT_CLASSIFICATION	2.2252801793319325E-7	TEST
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999990589910274	WITHOUT_CLASSIFICATION	9.410089726301693E-7	TEST
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999998524715508	WITHOUT_CLASSIFICATION	1.4752844931416427E-7	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999990369001993	WITHOUT_CLASSIFICATION	9.630998007362117E-7	TEST
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999970338132687	WITHOUT_CLASSIFICATION	2.9661867312298546E-6	TEST
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999984840419683	WITHOUT_CLASSIFICATION	1.51595803168615E-6	TEST
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999986057603104	WITHOUT_CLASSIFICATION	1.3942396895395003E-6	TEST
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999993472245491	WITHOUT_CLASSIFICATION	6.527754509218083E-7	TEST
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999994338160524	WITHOUT_CLASSIFICATION	5.6618394765146E-7	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999992570894267	WITHOUT_CLASSIFICATION	7.429105733207658E-7	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999992570894267	WITHOUT_CLASSIFICATION	7.429105733207658E-7	TEST
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999995796889516	WITHOUT_CLASSIFICATION	4.2031104847964397E-7	TEST
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999992448908445	WITHOUT_CLASSIFICATION	7.551091555959702E-7	TEST
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999995812125282	WITHOUT_CLASSIFICATION	4.187874718082712E-7	TEST
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999855596834143	WITHOUT_CLASSIFICATION	1.4440316585677259E-5	TEST
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999995422509806	WITHOUT_CLASSIFICATION	4.5774901936164164E-7	TEST
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999922613835316	WITHOUT_CLASSIFICATION	7.738616468442196E-6	TEST
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.999999528001747	WITHOUT_CLASSIFICATION	4.719982530613556E-7	TEST
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999988850513934	WITHOUT_CLASSIFICATION	1.1149486065557278E-6	TEST
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999975441123529	WITHOUT_CLASSIFICATION	2.455887647043316E-6	TEST
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999990594429164	WITHOUT_CLASSIFICATION	9.405570834347678E-7	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.999895658097992	WITHOUT_CLASSIFICATION	1.043419020080609E-4	TEST
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999997600662907	WITHOUT_CLASSIFICATION	2.399337092835882E-7	TEST
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999970439515103	WITHOUT_CLASSIFICATION	2.956048489549918E-6	TEST
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999967613506836	WITHOUT_CLASSIFICATION	3.238649316456246E-6	TEST
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999995930693537	WITHOUT_CLASSIFICATION	4.069306462498118E-7	TEST
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999992184494878	WITHOUT_CLASSIFICATION	7.815505121192227E-7	TEST
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999999020309649	WITHOUT_CLASSIFICATION	9.796903514439452E-8	TEST
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999967835136577	WITHOUT_CLASSIFICATION	3.2164863422259654E-6	TEST
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999983759606835	WITHOUT_CLASSIFICATION	1.624039316539044E-6	TEST
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999998206132505	WITHOUT_CLASSIFICATION	1.7938674955807775E-7	TEST
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999992588885112	WITHOUT_CLASSIFICATION	7.411114888906347E-7	TEST
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999989584246046	WITHOUT_CLASSIFICATION	1.0415753953987112E-6	TEST
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999999005427261	WITHOUT_CLASSIFICATION	9.945727379174914E-8	TEST
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999974799061513	WITHOUT_CLASSIFICATION	2.5200938488195293E-6	TEST
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999982102148306	WITHOUT_CLASSIFICATION	1.7897851693725478E-6	TEST
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999983972855169	WITHOUT_CLASSIFICATION	1.6027144831293212E-6	TEST
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999998654133179	WITHOUT_CLASSIFICATION	1.3458668222289108E-7	TEST
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999956350744892	WITHOUT_CLASSIFICATION	4.364925510820031E-6	TEST
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999985390351726	WITHOUT_CLASSIFICATION	1.4609648274112841E-6	TEST
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999976573138144	WITHOUT_CLASSIFICATION	2.34268618553079E-6	TEST
// rename is successful	WITHOUT_CLASSIFICATION	0.9999948514806539	WITHOUT_CLASSIFICATION	5.14851934607139E-6	TEST
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999994640996261	WITHOUT_CLASSIFICATION	5.359003738277898E-7	TEST
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999992590236789	WITHOUT_CLASSIFICATION	7.409763211504958E-7	TEST
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999982338487219	WITHOUT_CLASSIFICATION	1.7661512781336548E-6	TEST
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999950246182017	WITHOUT_CLASSIFICATION	4.975381798368938E-6	TEST
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999993146518221	WITHOUT_CLASSIFICATION	6.853481778243642E-7	TEST
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999984993257115	WITHOUT_CLASSIFICATION	1.5006742885069672E-6	TEST
// 16 ?	WITHOUT_CLASSIFICATION	0.9999870869235019	WITHOUT_CLASSIFICATION	1.2913076498070414E-5	TEST
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999978643786638	WITHOUT_CLASSIFICATION	2.1356213362902357E-6	TEST
// size + 1;	WITHOUT_CLASSIFICATION	0.9999953696894556	WITHOUT_CLASSIFICATION	4.630310544458479E-6	TEST
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999992145299628	WITHOUT_CLASSIFICATION	7.854700371281789E-7	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999751484088585	WITHOUT_CLASSIFICATION	2.485159114149243E-5	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999751484088585	WITHOUT_CLASSIFICATION	2.485159114149243E-5	TEST
// put implementation	WITHOUT_CLASSIFICATION	0.9999954566604274	WITHOUT_CLASSIFICATION	4.543339572574161E-6	TEST
// get implementation	WITHOUT_CLASSIFICATION	0.9999952655075653	WITHOUT_CLASSIFICATION	4.7344924346267E-6	TEST
// specialized for value	WITHOUT_CLASSIFICATION	0.9999972129576444	WITHOUT_CLASSIFICATION	2.7870423555296867E-6	TEST
// delete implementation	WITHOUT_CLASSIFICATION	0.999997384239013	WITHOUT_CLASSIFICATION	2.615760986918017E-6	TEST
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999992160835993	WITHOUT_CLASSIFICATION	7.839164005541846E-7	TEST
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999972622805149	WITHOUT_CLASSIFICATION	2.7377194851329007E-6	TEST
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.999998504844188	WITHOUT_CLASSIFICATION	1.4951558120579768E-6	TEST
// update the hash value	WITHOUT_CLASSIFICATION	0.9999937668148255	WITHOUT_CLASSIFICATION	6.233185174416287E-6	TEST
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999986743570217	WITHOUT_CLASSIFICATION	1.3256429782555622E-6	TEST
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999968217243055	WITHOUT_CLASSIFICATION	3.1782756944238835E-6	TEST
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999996087691121	WITHOUT_CLASSIFICATION	3.912308878830012E-7	TEST
// remain where we are	WITHOUT_CLASSIFICATION	0.9999992071203699	WITHOUT_CLASSIFICATION	7.928796300446032E-7	TEST
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999211013402464	WITHOUT_CLASSIFICATION	7.88986597535939E-5	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.99999849347407	WITHOUT_CLASSIFICATION	1.5065259299464065E-6	TEST
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999999436223505	WITHOUT_CLASSIFICATION	5.637764957281486E-8	TEST
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9998683290534269	WITHOUT_CLASSIFICATION	1.316709465730412E-4	TEST
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999999961260514	WITHOUT_CLASSIFICATION	3.873948597635865E-9	TEST
// first try as directory	WITHOUT_CLASSIFICATION	0.9999977682798599	WITHOUT_CLASSIFICATION	2.2317201401516477E-6	TEST
// next as regular file	WITHOUT_CLASSIFICATION	0.9999993910664209	WITHOUT_CLASSIFICATION	6.089335790935473E-7	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999962133841553	WITHOUT_CLASSIFICATION	3.7866158446758397E-6	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.999990891109219	WITHOUT_CLASSIFICATION	9.108890781018526E-6	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.999990891109219	WITHOUT_CLASSIFICATION	9.108890781018526E-6	TEST
// Stream-based	WITHOUT_CLASSIFICATION	0.999999315844194	WITHOUT_CLASSIFICATION	6.841558060092237E-7	TEST
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.999999275165113	WITHOUT_CLASSIFICATION	7.248348870585624E-7	TEST
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999988940355348	WITHOUT_CLASSIFICATION	1.1059644652089552E-6	TEST
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999963350188273	WITHOUT_CLASSIFICATION	3.6649811725887785E-6	TEST
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999998167725497	WITHOUT_CLASSIFICATION	1.8322745025837353E-7	TEST
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999998254236361	WITHOUT_CLASSIFICATION	1.745763638775443E-7	TEST
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999999256865673	WITHOUT_CLASSIFICATION	7.431343269812542E-8	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.999999625966443	WITHOUT_CLASSIFICATION	3.740335569865364E-7	TEST
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999938949376772	WITHOUT_CLASSIFICATION	6.105062322829566E-6	TEST
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999997737880876	WITHOUT_CLASSIFICATION	2.2621191227007464E-7	TEST
// re-register	WITHOUT_CLASSIFICATION	0.9999929163744186	WITHOUT_CLASSIFICATION	7.083625581418383E-6	TEST
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999979324027115	WITHOUT_CLASSIFICATION	2.0675972884453007E-6	TEST
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999950485329078	WITHOUT_CLASSIFICATION	4.95146709224979E-6	TEST
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999961768634867	WITHOUT_CLASSIFICATION	3.823136513200559E-6	TEST
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999983083420119	WITHOUT_CLASSIFICATION	1.6916579882004333E-6	TEST
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999822986198758	WITHOUT_CLASSIFICATION	1.770138012424699E-5	TEST
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999992650349484	WITHOUT_CLASSIFICATION	7.349650516882366E-7	TEST
// use original modes	WITHOUT_CLASSIFICATION	0.9999995017778629	WITHOUT_CLASSIFICATION	4.982221371020611E-7	TEST
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999993068330466	WITHOUT_CLASSIFICATION	6.931669533995555E-7	TEST
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.999999449472655	WITHOUT_CLASSIFICATION	5.505273449900452E-7	TEST
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999973900726091	WITHOUT_CLASSIFICATION	2.609927390837729E-6	TEST
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999992841949893	WITHOUT_CLASSIFICATION	7.15805010660735E-7	TEST
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999983690735104	WITHOUT_CLASSIFICATION	1.6309264897302565E-6	TEST
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999971239042794	WITHOUT_CLASSIFICATION	2.876095720666609E-6	TEST
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999997976416971	WITHOUT_CLASSIFICATION	2.0235830290906977E-7	TEST
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999996017625857	WITHOUT_CLASSIFICATION	3.9823741426620524E-7	TEST
//Everything written	WITHOUT_CLASSIFICATION	0.9999892569506919	WITHOUT_CLASSIFICATION	1.074304930809659E-5	TEST
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999984536871804	WITHOUT_CLASSIFICATION	1.5463128195335977E-6	TEST
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999998214651293	WITHOUT_CLASSIFICATION	1.785348707519018E-7	TEST
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9999925193676352	WITHOUT_CLASSIFICATION	7.480632364795112E-6	TEST
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999987259222888	WITHOUT_CLASSIFICATION	1.2740777111801914E-6	TEST
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999973786955875	WITHOUT_CLASSIFICATION	2.6213044125859297E-6	TEST
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999981984939431	WITHOUT_CLASSIFICATION	1.80150605685322E-6	TEST
// hmmmm	WITHOUT_CLASSIFICATION	0.999988150148326	WITHOUT_CLASSIFICATION	1.1849851673927767E-5	TEST
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999968407930921	WITHOUT_CLASSIFICATION	3.159206907781797E-6	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999998684159541	WITHOUT_CLASSIFICATION	1.3158404586774896E-7	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999999124904764	WITHOUT_CLASSIFICATION	8.750952361107989E-8	TEST
// Length to read	WITHOUT_CLASSIFICATION	0.9999990090831917	WITHOUT_CLASSIFICATION	9.909168083432011E-7	TEST
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999990417440416	WITHOUT_CLASSIFICATION	9.582559583374642E-7	TEST
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999938924038945	WITHOUT_CLASSIFICATION	6.107596105544274E-6	TEST
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999972915500945	WITHOUT_CLASSIFICATION	2.7084499054777857E-6	TEST
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999950484887574	WITHOUT_CLASSIFICATION	4.951511242589282E-6	TEST
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999946828814122	WITHOUT_CLASSIFICATION	5.31711858775311E-6	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.999995313167095	WITHOUT_CLASSIFICATION	4.686832904951365E-6	TEST
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999978373928535	WITHOUT_CLASSIFICATION	2.162607146533339E-6	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.999995313167095	WITHOUT_CLASSIFICATION	4.686832904951365E-6	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999999514893371	WITHOUT_CLASSIFICATION	4.851066301988339E-8	TEST
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9999714597502746	WITHOUT_CLASSIFICATION	2.854024972535596E-5	TEST
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999992625381472	WITHOUT_CLASSIFICATION	7.374618527750753E-7	TEST
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.9981804668716725	WITHOUT_CLASSIFICATION	0.0018195331283274501	TEST
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999975872730855	WITHOUT_CLASSIFICATION	2.4127269145694766E-6	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999990248119556	WITHOUT_CLASSIFICATION	9.751880444452183E-7	TEST
// write	WITHOUT_CLASSIFICATION	0.99999678158202	WITHOUT_CLASSIFICATION	3.218417980090852E-6	TEST
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999988223089307	WITHOUT_CLASSIFICATION	1.177691069300673E-6	TEST
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999997191116535	WITHOUT_CLASSIFICATION	2.808883463731287E-7	TEST
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9999880544603883	WITHOUT_CLASSIFICATION	1.194553961177656E-5	TEST
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9999996373514083	WITHOUT_CLASSIFICATION	3.626485917584532E-7	TEST
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999899981029986	WITHOUT_CLASSIFICATION	1.0001897001459243E-5	TEST
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9999996156507848	WITHOUT_CLASSIFICATION	3.8434921533662305E-7	TEST
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999999080473433	WITHOUT_CLASSIFICATION	9.195265673567895E-8	TEST
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9999918634330812	WITHOUT_CLASSIFICATION	8.136566918741243E-6	TEST
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9997367807360792	WITHOUT_CLASSIFICATION	2.6321926392076646E-4	TEST
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999998833437709	WITHOUT_CLASSIFICATION	1.16656229132261E-7	TEST
// The class of this object	WITHOUT_CLASSIFICATION	0.9999984811628625	WITHOUT_CLASSIFICATION	1.518837137542602E-6	TEST
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999905416741895	WITHOUT_CLASSIFICATION	9.458325810404124E-6	TEST
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999953414385654	WITHOUT_CLASSIFICATION	4.658561434600604E-6	TEST
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999998553271938	WITHOUT_CLASSIFICATION	1.4467280609161744E-7	TEST
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999987546889035	WITHOUT_CLASSIFICATION	1.2453110965193055E-6	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999945409568176	WITHOUT_CLASSIFICATION	5.459043182395108E-6	TEST
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999979525428634	WITHOUT_CLASSIFICATION	2.047457136523163E-6	TEST
// for interface impls	WITHOUT_CLASSIFICATION	0.9999967266371671	WITHOUT_CLASSIFICATION	3.2733628328431283E-6	TEST
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999996594191854	WITHOUT_CLASSIFICATION	3.405808144758307E-7	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.999999627270725	WITHOUT_CLASSIFICATION	3.7272927492472846E-7	TEST
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999995753279656	WITHOUT_CLASSIFICATION	4.246720343970397E-7	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999992650678526	WITHOUT_CLASSIFICATION	7.349321473682986E-7	TEST
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999991999743632	WITHOUT_CLASSIFICATION	8.000256368760522E-7	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999859014829628	WITHOUT_CLASSIFICATION	1.4098517037063379E-5	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999716602826865	WITHOUT_CLASSIFICATION	2.833971731363979E-5	TEST
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999790678836634	WITHOUT_CLASSIFICATION	2.093211633647834E-5	TEST
// Struct methods	WITHOUT_CLASSIFICATION	0.9999995649145785	WITHOUT_CLASSIFICATION	4.3508542147753174E-7	TEST
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999993694478188	WITHOUT_CLASSIFICATION	6.305521812456999E-7	TEST
// define access methods.	WITHOUT_CLASSIFICATION	0.9999994741136186	WITHOUT_CLASSIFICATION	5.258863815383827E-7	TEST
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999996114838204	WITHOUT_CLASSIFICATION	3.885161795694003E-7	TEST
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999997981875456	WITHOUT_CLASSIFICATION	2.0181245442984051E-7	TEST
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999986511791438	WITHOUT_CLASSIFICATION	1.3488208562341552E-6	TEST
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999814982780817	WITHOUT_CLASSIFICATION	1.8501721918204698E-5	TEST
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999998721559854	WITHOUT_CLASSIFICATION	1.278440146726498E-7	TEST
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999968796430978	WITHOUT_CLASSIFICATION	3.1203569022028673E-6	TEST
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999994223254928	WITHOUT_CLASSIFICATION	5.776745072659698E-7	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999953565350759	WITHOUT_CLASSIFICATION	4.643464924081006E-6	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999953565350759	WITHOUT_CLASSIFICATION	4.643464924081006E-6	TEST
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.999990764664468	WITHOUT_CLASSIFICATION	9.235335531996861E-6	TEST
// superClass may be null.	WITHOUT_CLASSIFICATION	0.999998718614907	WITHOUT_CLASSIFICATION	1.2813850930220887E-6	TEST
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999998517701516	WITHOUT_CLASSIFICATION	1.4822984836917119E-7	TEST
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999997207661387	WITHOUT_CLASSIFICATION	2.7923386136087513E-7	TEST
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999999692465813	WITHOUT_CLASSIFICATION	3.0753418721027775E-8	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999993517446916	WITHOUT_CLASSIFICATION	6.482553083488432E-7	TEST
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999996714605863	WITHOUT_CLASSIFICATION	3.285394137133982E-7	TEST
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.999996577065079	WITHOUT_CLASSIFICATION	3.4229349209226725E-6	TEST
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999973048569654	WITHOUT_CLASSIFICATION	2.6951430347292376E-6	TEST
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999997500528214	WITHOUT_CLASSIFICATION	2.4994717864679824E-7	TEST
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999997291661898	WITHOUT_CLASSIFICATION	2.708338101790838E-7	TEST
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999998701827929	WITHOUT_CLASSIFICATION	1.2981720716184906E-7	TEST
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999979378395395	WITHOUT_CLASSIFICATION	2.062160460430201E-6	TEST
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999962212794057	WITHOUT_CLASSIFICATION	3.7787205943726834E-6	TEST
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999999306718526	WITHOUT_CLASSIFICATION	6.932814745513452E-8	TEST
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999989159456534	WITHOUT_CLASSIFICATION	1.0840543466156582E-6	TEST
// superClazz = null;	WITHOUT_CLASSIFICATION	0.999999256662639	WITHOUT_CLASSIFICATION	7.433373608954435E-7	TEST
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999998046249456	WITHOUT_CLASSIFICATION	1.9537505442763731E-7	TEST
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999982167205993	WITHOUT_CLASSIFICATION	1.7832794007605462E-6	TEST
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999994842919954	WITHOUT_CLASSIFICATION	5.157080047315215E-7	TEST
//FIXME warning	WITHOUT_CLASSIFICATION	0.9999036156910945	WITHOUT_CLASSIFICATION	9.638430890542396E-5	TEST
// FIXME warning	WITHOUT_CLASSIFICATION	0.9999505877161606	WITHOUT_CLASSIFICATION	4.941228383933041E-5	TEST
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9999998334236461	WITHOUT_CLASSIFICATION	1.6657635389242209E-7	TEST
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999998160367738	WITHOUT_CLASSIFICATION	1.8396322632450654E-7	TEST
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999903967594882	WITHOUT_CLASSIFICATION	9.603240511776788E-6	TEST
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999998376821512	WITHOUT_CLASSIFICATION	1.6231784883118564E-7	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999998249065261	WITHOUT_CLASSIFICATION	1.7509347398849998E-7	TEST
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999975197593456	WITHOUT_CLASSIFICATION	2.4802406544026785E-6	TEST
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999960153164632	WITHOUT_CLASSIFICATION	3.984683536760296E-6	TEST
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999993312223644	WITHOUT_CLASSIFICATION	6.68777635609528E-7	TEST
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999983113318016	WITHOUT_CLASSIFICATION	1.6886681983753494E-6	TEST
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999999711585774	WITHOUT_CLASSIFICATION	2.8841422664193453E-8	TEST
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999999941596299	WITHOUT_CLASSIFICATION	5.8403701723448E-9	TEST
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999995001645452	WITHOUT_CLASSIFICATION	4.998354548277374E-7	TEST
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999997495589287	WITHOUT_CLASSIFICATION	2.504410713100862E-7	TEST
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999999898404726	WITHOUT_CLASSIFICATION	1.0159527339592358E-8	TEST
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999870214998844	WITHOUT_CLASSIFICATION	1.2978500115564765E-5	TEST
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999790621924561	WITHOUT_CLASSIFICATION	2.0937807543834763E-5	TEST
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999862678618716	WITHOUT_CLASSIFICATION	1.3732138128389152E-5	TEST
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999887899211336	WITHOUT_CLASSIFICATION	1.121007886644443E-5	TEST
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999964184911061	WITHOUT_CLASSIFICATION	3.5815088938570435E-6	TEST
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9999984446163519	WITHOUT_CLASSIFICATION	1.5553836481339904E-6	TEST
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9999882635955518	WITHOUT_CLASSIFICATION	1.1736404448196411E-5	TEST
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999999706494273	WITHOUT_CLASSIFICATION	2.9350572683858646E-8	TEST
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999988541182423	WITHOUT_CLASSIFICATION	1.1458817576678553E-6	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999962181329498	WITHOUT_CLASSIFICATION	3.7818670501538706E-6	TEST
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999982641230211	WITHOUT_CLASSIFICATION	1.7358769789317327E-6	TEST
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999994135464766	WITHOUT_CLASSIFICATION	5.864535234810293E-7	TEST
//reopen	WITHOUT_CLASSIFICATION	0.9999788116227801	WITHOUT_CLASSIFICATION	2.118837721996381E-5	TEST
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999991872717313	WITHOUT_CLASSIFICATION	8.127282687184655E-7	TEST
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999997856231908	WITHOUT_CLASSIFICATION	2.1437680927077323E-7	TEST
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999994748657705	WITHOUT_CLASSIFICATION	5.251342295897298E-7	TEST
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999997595114013	WITHOUT_CLASSIFICATION	2.4048859865263804E-7	TEST
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999998182084011	WITHOUT_CLASSIFICATION	1.8179159895202923E-7	TEST
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.999999605041275	WITHOUT_CLASSIFICATION	3.9495872488273196E-7	TEST
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999997049250541	WITHOUT_CLASSIFICATION	2.9507494597616915E-7	TEST
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999997138044145	WITHOUT_CLASSIFICATION	2.8619558538640296E-7	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999992070604189	WITHOUT_CLASSIFICATION	7.929395810875675E-7	TEST
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999997626713101	WITHOUT_CLASSIFICATION	2.3732868989685633E-7	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999998404771755	WITHOUT_CLASSIFICATION	1.5952282463104962E-7	TEST
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999980957610851	WITHOUT_CLASSIFICATION	1.9042389148548716E-6	TEST
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999969198869896	WITHOUT_CLASSIFICATION	3.080113010424597E-6	TEST
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999981946941505	WITHOUT_CLASSIFICATION	1.8053058493795155E-6	TEST
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999995988090954	WITHOUT_CLASSIFICATION	4.0119090461976147E-7	TEST
// ignore error	WITHOUT_CLASSIFICATION	0.9999982414981281	WITHOUT_CLASSIFICATION	1.7585018718405736E-6	TEST
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999804589953447	WITHOUT_CLASSIFICATION	1.9541004655314835E-5	TEST
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999798450908208	WITHOUT_CLASSIFICATION	2.0154909179073482E-5	TEST
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999991727306445	WITHOUT_CLASSIFICATION	8.272693555299117E-7	TEST
// odd	WITHOUT_CLASSIFICATION	0.9999910710908386	WITHOUT_CLASSIFICATION	8.92890916139422E-6	TEST
// JRubyClient	WITHOUT_CLASSIFICATION	0.999997715713105	WITHOUT_CLASSIFICATION	2.2842868950470106E-6	TEST
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999959140467741	WITHOUT_CLASSIFICATION	4.085953225890049E-6	TEST
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999998533514257	WITHOUT_CLASSIFICATION	1.466485742307557E-7	TEST
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999976069982526	WITHOUT_CLASSIFICATION	2.39300174748004E-6	TEST
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999508697323959	WITHOUT_CLASSIFICATION	4.9130267604005604E-5	TEST
/*  0! */	WITHOUT_CLASSIFICATION	0.9999855627126424	WITHOUT_CLASSIFICATION	1.4437287357544543E-5	TEST
/*  1! */	WITHOUT_CLASSIFICATION	0.9999838610855147	WITHOUT_CLASSIFICATION	1.6138914485183976E-5	TEST
/*  2! */	WITHOUT_CLASSIFICATION	0.999985777746152	WITHOUT_CLASSIFICATION	1.4222253847930754E-5	TEST
/*  3! */	WITHOUT_CLASSIFICATION	0.999985322819132	WITHOUT_CLASSIFICATION	1.4677180868026182E-5	TEST
/*  4! */	WITHOUT_CLASSIFICATION	0.9999840726587397	WITHOUT_CLASSIFICATION	1.5927341260390838E-5	TEST
/*  5! */	WITHOUT_CLASSIFICATION	0.9999837805916777	WITHOUT_CLASSIFICATION	1.621940832239013E-5	TEST
/*  6! */	WITHOUT_CLASSIFICATION	0.9999837253398346	WITHOUT_CLASSIFICATION	1.6274660165347143E-5	TEST
/*  7! */	WITHOUT_CLASSIFICATION	0.999983831353509	WITHOUT_CLASSIFICATION	1.616864649100063E-5	TEST
/*  8! */	WITHOUT_CLASSIFICATION	0.9999852453319535	WITHOUT_CLASSIFICATION	1.4754668046524208E-5	TEST
/*  9! */	WITHOUT_CLASSIFICATION	0.9999839532299855	WITHOUT_CLASSIFICATION	1.6046770014559183E-5	TEST
/* 11! */	WITHOUT_CLASSIFICATION	0.9999840502386569	WITHOUT_CLASSIFICATION	1.594976134311272E-5	TEST
/* 12! */	WITHOUT_CLASSIFICATION	0.9999855440768244	WITHOUT_CLASSIFICATION	1.4455923175671295E-5	TEST
/* 13! */	WITHOUT_CLASSIFICATION	0.9999851521907092	WITHOUT_CLASSIFICATION	1.4847809290963912E-5	TEST
/* 15! */	WITHOUT_CLASSIFICATION	0.9999842144763456	WITHOUT_CLASSIFICATION	1.5785523654424085E-5	TEST
/* 16! */	WITHOUT_CLASSIFICATION	0.9999841956050073	WITHOUT_CLASSIFICATION	1.5804394992708026E-5	TEST
/* 17! */	WITHOUT_CLASSIFICATION	0.999984279303025	WITHOUT_CLASSIFICATION	1.5720696974972645E-5	TEST
/* 19! */	WITHOUT_CLASSIFICATION	0.9999844786628651	WITHOUT_CLASSIFICATION	1.552133713489775E-5	TEST
/* 20! */	WITHOUT_CLASSIFICATION	0.9999875538290495	WITHOUT_CLASSIFICATION	1.244617095065932E-5	TEST
/* 21! */	WITHOUT_CLASSIFICATION	0.9999874468126467	WITHOUT_CLASSIFICATION	1.2553187353243876E-5	TEST
// Static constants	WITHOUT_CLASSIFICATION	0.9999996668892042	WITHOUT_CLASSIFICATION	3.3311079583323745E-7	TEST
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9999994486970639	WITHOUT_CLASSIFICATION	5.513029359906106E-7	TEST
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999977039177661	WITHOUT_CLASSIFICATION	2.296082233983449E-6	TEST
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999967526613076	WITHOUT_CLASSIFICATION	3.247338692351519E-6	TEST
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999970889222882	WITHOUT_CLASSIFICATION	2.91107771180186E-6	TEST
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.999999958820378	WITHOUT_CLASSIFICATION	4.1179622007864913E-8	TEST
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999998791924234	WITHOUT_CLASSIFICATION	1.2080757660759177E-7	TEST
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9999999635278012	WITHOUT_CLASSIFICATION	3.647219880663971E-8	TEST
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999995221621206	WITHOUT_CLASSIFICATION	4.778378793806191E-7	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999991117308905	WITHOUT_CLASSIFICATION	8.882691095878362E-7	TEST
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9930396114637279	WITHOUT_CLASSIFICATION	0.006960388536272142	TEST
// integer division	WITHOUT_CLASSIFICATION	0.999999031095896	WITHOUT_CLASSIFICATION	9.68904103904214E-7	TEST
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999890618117395	WITHOUT_CLASSIFICATION	1.0938188260464519E-5	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999987586100988	WITHOUT_CLASSIFICATION	1.2413899012850657E-6	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999987586100988	WITHOUT_CLASSIFICATION	1.2413899012850657E-6	TEST
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999999384577268	WITHOUT_CLASSIFICATION	6.15422730881367E-8	TEST
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9999996856796001	WITHOUT_CLASSIFICATION	3.1432039992624666E-7	TEST
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999998754837454	WITHOUT_CLASSIFICATION	1.24516254532879E-7	TEST
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999979474385472	WITHOUT_CLASSIFICATION	2.052561452907764E-6	TEST
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999945315931157	WITHOUT_CLASSIFICATION	5.468406884193659E-6	TEST
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999994261711037	WITHOUT_CLASSIFICATION	5.738288963135559E-7	TEST
// sign	WITHOUT_CLASSIFICATION	0.9999942981907016	WITHOUT_CLASSIFICATION	5.701809298339368E-6	TEST
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999991716326739	WITHOUT_CLASSIFICATION	8.28367326067779E-7	TEST
// normalize the value	WITHOUT_CLASSIFICATION	0.999999118761341	WITHOUT_CLASSIFICATION	8.81238658970328E-7	TEST
// base	WITHOUT_CLASSIFICATION	0.9999970382322354	WITHOUT_CLASSIFICATION	2.9617677645919427E-6	TEST
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.999957939778047	WITHOUT_CLASSIFICATION	4.206022195298347E-5	TEST
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999999330966153	WITHOUT_CLASSIFICATION	6.690338476440139E-8	TEST
// eh?!	WITHOUT_CLASSIFICATION	0.9999925924043536	WITHOUT_CLASSIFICATION	7.407595646487007E-6	TEST
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999942126478985	WITHOUT_CLASSIFICATION	5.787352101494981E-6	TEST
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999997501935584	WITHOUT_CLASSIFICATION	2.498064416860715E-7	TEST
// the requested precision	WITHOUT_CLASSIFICATION	0.9999863068602083	WITHOUT_CLASSIFICATION	1.3693139791761001E-5	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.999998898508425	WITHOUT_CLASSIFICATION	1.1014915749574357E-6	TEST
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999986051268265	WITHOUT_CLASSIFICATION	1.394873173518625E-6	TEST
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999971734992255	WITHOUT_CLASSIFICATION	2.826500774581134E-6	TEST
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999992904945462	WITHOUT_CLASSIFICATION	7.095054538527645E-7	TEST
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999980986582714	WITHOUT_CLASSIFICATION	1.9013417285706354E-6	TEST
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999998448005355	WITHOUT_CLASSIFICATION	1.5519946450075566E-7	TEST
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999961027882985	WITHOUT_CLASSIFICATION	3.897211701490623E-6	TEST
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999968775809392	WITHOUT_CLASSIFICATION	3.1224190606168666E-6	TEST
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999997865127875	WITHOUT_CLASSIFICATION	2.1348721249661988E-7	TEST
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999989182485732	WITHOUT_CLASSIFICATION	1.0817514267132385E-6	TEST
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999996810658948	WITHOUT_CLASSIFICATION	3.189341052349951E-7	TEST
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999950425523787	WITHOUT_CLASSIFICATION	4.957447621266225E-6	TEST
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999998664056294	WITHOUT_CLASSIFICATION	1.335943705847305E-7	TEST
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999862465519677	WITHOUT_CLASSIFICATION	1.3753448032453287E-5	TEST
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999982766149212	WITHOUT_CLASSIFICATION	1.7233850786887565E-6	TEST
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999960576551045	WITHOUT_CLASSIFICATION	3.942344895554085E-6	TEST
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999893190144524	WITHOUT_CLASSIFICATION	1.0680985547641604E-5	TEST
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999965620343187	WITHOUT_CLASSIFICATION	3.437965681240843E-6	TEST
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999991063388642	WITHOUT_CLASSIFICATION	8.936611358127E-7	TEST
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999980016419298	WITHOUT_CLASSIFICATION	1.9983580701683024E-6	TEST
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999941814563617	WITHOUT_CLASSIFICATION	5.818543638372885E-6	TEST
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999994272448803	WITHOUT_CLASSIFICATION	5.727551197719338E-7	TEST
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999992573749558	WITHOUT_CLASSIFICATION	7.426250441986665E-7	TEST
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999998139226066	WITHOUT_CLASSIFICATION	1.8607739335105442E-7	TEST
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9999996579651521	WITHOUT_CLASSIFICATION	3.4203484793441817E-7	TEST
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.999999323599937	WITHOUT_CLASSIFICATION	6.764000630056419E-7	TEST
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999988031465148	WITHOUT_CLASSIFICATION	1.1968534852177678E-6	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999981026501398	WITHOUT_CLASSIFICATION	1.897349860202079E-6	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999981026501398	WITHOUT_CLASSIFICATION	1.897349860202079E-6	TEST
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.999999251384992	WITHOUT_CLASSIFICATION	7.486150080213666E-7	TEST
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999989316544631	WITHOUT_CLASSIFICATION	1.0683455369220634E-6	TEST
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999996095216511	WITHOUT_CLASSIFICATION	3.90478348945367E-7	TEST
//consume the file name	WITHOUT_CLASSIFICATION	0.9999982783349588	WITHOUT_CLASSIFICATION	1.721665041127223E-6	TEST
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999993652728563	WITHOUT_CLASSIFICATION	6.347271437496732E-7	TEST
// try cwd first	WITHOUT_CLASSIFICATION	0.999995180236877	WITHOUT_CLASSIFICATION	4.819763123057746E-6	TEST
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999990732294824	WITHOUT_CLASSIFICATION	9.267705176492687E-7	TEST
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999977777097293	WITHOUT_CLASSIFICATION	2.2222902706580874E-6	TEST
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999990088788356	WITHOUT_CLASSIFICATION	9.911211643775944E-7	TEST
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999991681208734	WITHOUT_CLASSIFICATION	8.318791266533706E-7	TEST
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999992469881538	WITHOUT_CLASSIFICATION	7.530118463136814E-7	TEST
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999988034102979	WITHOUT_CLASSIFICATION	1.196589702095625E-6	TEST
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999951144585236	WITHOUT_CLASSIFICATION	4.885541476297332E-6	TEST
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999994168002075	WITHOUT_CLASSIFICATION	5.831997925087785E-7	TEST
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9996315056249016	WITHOUT_CLASSIFICATION	3.684943750984328E-4	TEST
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9999774489864124	WITHOUT_CLASSIFICATION	2.2551013587557516E-5	TEST
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999994962859279	WITHOUT_CLASSIFICATION	5.037140722415942E-7	TEST
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999987176970377	WITHOUT_CLASSIFICATION	1.2823029623114307E-6	TEST
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999999235152849	WITHOUT_CLASSIFICATION	7.648471512666434E-8	TEST
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999888910863299	WITHOUT_CLASSIFICATION	1.110891367005415E-5	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999989920086865	WITHOUT_CLASSIFICATION	1.0079913134725627E-6	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999989920086865	WITHOUT_CLASSIFICATION	1.0079913134725627E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999991431600509	WITHOUT_CLASSIFICATION	8.568399491504305E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999991431600509	WITHOUT_CLASSIFICATION	8.568399491504305E-7	TEST
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999997988318724	WITHOUT_CLASSIFICATION	2.0116812763468216E-7	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999988371140862	WITHOUT_CLASSIFICATION	1.162885913770888E-6	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999999273163058	WITHOUT_CLASSIFICATION	7.268369411404459E-8	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999997395802509	WITHOUT_CLASSIFICATION	2.6041974912121024E-7	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999997246105186	WITHOUT_CLASSIFICATION	2.7538948143075157E-7	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999991699806389	WITHOUT_CLASSIFICATION	8.300193610771763E-7	TEST
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9999997108599528	WITHOUT_CLASSIFICATION	2.891400472066209E-7	TEST
// Profile	WITHOUT_CLASSIFICATION	0.9999971789171949	WITHOUT_CLASSIFICATION	2.8210828050732533E-6	TEST
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999977133332042	WITHOUT_CLASSIFICATION	2.2866667958286638E-6	TEST
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999976265641577	WITHOUT_CLASSIFICATION	2.373435842292541E-6	TEST
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999985430588184	WITHOUT_CLASSIFICATION	1.456941181521415E-6	TEST
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999989988870216	WITHOUT_CLASSIFICATION	1.0011129784516008E-6	TEST
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999968889501886	WITHOUT_CLASSIFICATION	3.1110498115543563E-6	TEST
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9999945897792776	WITHOUT_CLASSIFICATION	5.410220722413732E-6	TEST
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999996512288403	WITHOUT_CLASSIFICATION	3.487711596551939E-7	TEST
// reset the state	WITHOUT_CLASSIFICATION	0.9999960221108762	WITHOUT_CLASSIFICATION	3.97788912384555E-6	TEST
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9999995549031937	WITHOUT_CLASSIFICATION	4.450968063368113E-7	TEST
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999987511181059	WITHOUT_CLASSIFICATION	1.2488818940841963E-6	TEST
//str is frozen	WITHOUT_CLASSIFICATION	0.9999380536083983	WITHOUT_CLASSIFICATION	6.194639160175338E-5	TEST
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999991740585896	WITHOUT_CLASSIFICATION	8.259414104406882E-7	TEST
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999968327618363	WITHOUT_CLASSIFICATION	3.1672381637874526E-6	TEST
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.999999569621858	WITHOUT_CLASSIFICATION	4.303781420030603E-7	TEST
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999975054447854	WITHOUT_CLASSIFICATION	2.494555214619869E-6	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.999999627270725	WITHOUT_CLASSIFICATION	3.7272927492472846E-7	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999993517446916	WITHOUT_CLASSIFICATION	6.482553083488432E-7	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999976609598361	WITHOUT_CLASSIFICATION	2.3390401638341145E-6	TEST
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999999706319207	WITHOUT_CLASSIFICATION	2.936807927981185E-8	TEST
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999967310559478	WITHOUT_CLASSIFICATION	3.268944052343521E-6	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999988314699574	WITHOUT_CLASSIFICATION	1.1685300426034418E-6	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999994542208506	WITHOUT_CLASSIFICATION	5.457791494168752E-7	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999994542208506	WITHOUT_CLASSIFICATION	5.457791494168752E-7	TEST
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999989913642767	WITHOUT_CLASSIFICATION	1.0086357232666098E-6	TEST
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999984479363335	WITHOUT_CLASSIFICATION	1.5520636664346186E-6	TEST
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999994226749116	WITHOUT_CLASSIFICATION	5.773250883636548E-7	TEST
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999978489857515	WITHOUT_CLASSIFICATION	2.1510142484450564E-6	TEST
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999944569099569	WITHOUT_CLASSIFICATION	5.543090043134286E-6	TEST
// static initializing method	WITHOUT_CLASSIFICATION	0.999999775639001	WITHOUT_CLASSIFICATION	2.2436099893250146E-7	TEST
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999989138556851	WITHOUT_CLASSIFICATION	1.0861443149301795E-6	TEST
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999998132957604	WITHOUT_CLASSIFICATION	1.8670423954818834E-7	TEST
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999994238752079	WITHOUT_CLASSIFICATION	5.761247920794888E-7	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999926087705897	WITHOUT_CLASSIFICATION	7.391229410401594E-6	TEST
// self // method name	WITHOUT_CLASSIFICATION	0.9999996525691298	WITHOUT_CLASSIFICATION	3.4743087024847014E-7	TEST
// the default allocator	WITHOUT_CLASSIFICATION	0.9999989136709542	WITHOUT_CLASSIFICATION	1.086329045788166E-6	TEST
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999962932325088	WITHOUT_CLASSIFICATION	3.70676749117469E-6	TEST
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999992014427228	WITHOUT_CLASSIFICATION	7.985572771690082E-7	TEST
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999978198840193	WITHOUT_CLASSIFICATION	2.180115980697701E-6	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999966845079983	WITHOUT_CLASSIFICATION	3.3154920018131774E-6	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999995008567791	WITHOUT_CLASSIFICATION	4.99143220888601E-7	TEST
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.999998227797533	WITHOUT_CLASSIFICATION	1.7722024669658693E-6	TEST
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999989842496682	WITHOUT_CLASSIFICATION	1.0157503318147203E-6	TEST
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999836197227362	WITHOUT_CLASSIFICATION	1.6380277263781188E-5	TEST
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999965688525373	WITHOUT_CLASSIFICATION	3.4311474627559812E-6	TEST
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999894205609227	WITHOUT_CLASSIFICATION	1.057943907733326E-5	TEST
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999932371780522	WITHOUT_CLASSIFICATION	6.7628219478474175E-6	TEST
// a gotcha	WITHOUT_CLASSIFICATION	0.999996331981577	WITHOUT_CLASSIFICATION	3.6680184230667164E-6	TEST
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999991995278427	WITHOUT_CLASSIFICATION	8.004721573115433E-7	TEST
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.999996290850878	WITHOUT_CLASSIFICATION	3.7091491220257653E-6	TEST
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999990796516542	WITHOUT_CLASSIFICATION	9.203483457460928E-7	TEST
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999983081008756	WITHOUT_CLASSIFICATION	1.6918991243410814E-6	TEST
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999980610941971	WITHOUT_CLASSIFICATION	1.9389058029139865E-6	TEST
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999990582996829	WITHOUT_CLASSIFICATION	9.417003170310482E-7	TEST
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999981966811475	WITHOUT_CLASSIFICATION	1.8033188525448007E-6	TEST
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999944855474309	WITHOUT_CLASSIFICATION	5.514452569082407E-6	TEST
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999978363615746	WITHOUT_CLASSIFICATION	2.1636384254334398E-6	TEST
// provider is not available	WITHOUT_CLASSIFICATION	0.9999994756089644	WITHOUT_CLASSIFICATION	5.243910356035755E-7	TEST
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999983167210066	WITHOUT_CLASSIFICATION	1.6832789933713909E-6	TEST
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.999999231647951	WITHOUT_CLASSIFICATION	7.683520490166357E-7	TEST
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999683642657431	WITHOUT_CLASSIFICATION	3.1635734256890035E-5	TEST
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999889713115165	WITHOUT_CLASSIFICATION	1.1028688483459324E-5	TEST
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999970634457606	WITHOUT_CLASSIFICATION	2.9365542394197435E-6	TEST
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999996019864401	WITHOUT_CLASSIFICATION	3.9801355995392405E-7	TEST
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999998989345835	WITHOUT_CLASSIFICATION	1.0106541640028996E-7	TEST
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999979090374967	WITHOUT_CLASSIFICATION	2.090962503318241E-6	TEST
// JRubyService	WITHOUT_CLASSIFICATION	0.9999982410522905	WITHOUT_CLASSIFICATION	1.758947709515099E-6	TEST
// while	WITHOUT_CLASSIFICATION	0.9999935862805652	WITHOUT_CLASSIFICATION	6.413719434789514E-6	TEST
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999761450168749	WITHOUT_CLASSIFICATION	2.385498312508148E-5	TEST
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999998394824632	WITHOUT_CLASSIFICATION	1.605175367635625E-7	TEST
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999992610611013	WITHOUT_CLASSIFICATION	7.389388986992821E-7	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.999999348211916	WITHOUT_CLASSIFICATION	6.517880840437804E-7	TEST
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999996430555373	WITHOUT_CLASSIFICATION	3.569444626264405E-7	TEST
// silent ?	WITHOUT_CLASSIFICATION	0.999995906080629	WITHOUT_CLASSIFICATION	4.0939193709815524E-6	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999863352609965	WITHOUT_CLASSIFICATION	1.3664739003404115E-5	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999849691411159	WITHOUT_CLASSIFICATION	1.503085888410987E-5	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999822303895212	WITHOUT_CLASSIFICATION	1.776961047884062E-5	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999871666646918	WITHOUT_CLASSIFICATION	1.2833335308305021E-5	TEST
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999930979114736	WITHOUT_CLASSIFICATION	6.902088526405116E-6	TEST
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999858896181952	WITHOUT_CLASSIFICATION	1.4110381804883516E-5	TEST
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.999990981808821	WITHOUT_CLASSIFICATION	9.018191179140766E-6	TEST
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999997224003678	WITHOUT_CLASSIFICATION	2.7759963209418116E-7	TEST
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999627644543435	WITHOUT_CLASSIFICATION	3.723554565653164E-5	TEST
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.999999403161666	WITHOUT_CLASSIFICATION	5.968383339727937E-7	TEST
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999735404267535	WITHOUT_CLASSIFICATION	2.6459573246579564E-5	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999863352609965	WITHOUT_CLASSIFICATION	1.3664739003404115E-5	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999822303895212	WITHOUT_CLASSIFICATION	1.776961047884062E-5	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999849691411159	WITHOUT_CLASSIFICATION	1.503085888410987E-5	TEST
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999755879229514	WITHOUT_CLASSIFICATION	2.4412077048520964E-5	TEST
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999815529548876	WITHOUT_CLASSIFICATION	1.844704511248004E-5	TEST
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999960122186371	WITHOUT_CLASSIFICATION	3.987781362815329E-6	TEST
// inner switch	WITHOUT_CLASSIFICATION	0.9999990736982151	WITHOUT_CLASSIFICATION	9.263017850118743E-7	TEST
// newInstance here	WITHOUT_CLASSIFICATION	0.9999995496882762	WITHOUT_CLASSIFICATION	4.503117238093177E-7	TEST
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999979743003233	WITHOUT_CLASSIFICATION	2.0256996767223226E-6	TEST
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999979379304748	WITHOUT_CLASSIFICATION	2.0620695253083907E-6	TEST
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999992938427636	WITHOUT_CLASSIFICATION	7.061572362389458E-7	TEST
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999982732391457	WITHOUT_CLASSIFICATION	1.7267608543109329E-6	TEST
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999989414385216	WITHOUT_CLASSIFICATION	1.058561478297575E-6	TEST
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999995048024027	WITHOUT_CLASSIFICATION	4.951975973170424E-7	TEST
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999980176874088	WITHOUT_CLASSIFICATION	1.982312591255607E-6	TEST
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999976899912487	WITHOUT_CLASSIFICATION	2.310008751209312E-6	TEST
// option_to_str	WITHOUT_CLASSIFICATION	0.9999977645911587	WITHOUT_CLASSIFICATION	2.2354088411572716E-6	TEST
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.999999845092595	WITHOUT_CLASSIFICATION	1.5490740497700344E-7	TEST
// args should be before block	WITHOUT_CLASSIFICATION	0.9999980876118018	WITHOUT_CLASSIFICATION	1.9123881982529497E-6	TEST
// args should be at end	WITHOUT_CLASSIFICATION	0.9999987786873954	WITHOUT_CLASSIFICATION	1.22131260464553E-6	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999963402837876	WITHOUT_CLASSIFICATION	3.6597162124667433E-6	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999963402837876	WITHOUT_CLASSIFICATION	3.6597162124667433E-6	TEST
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999981736434143	WITHOUT_CLASSIFICATION	1.8263565857720597E-6	TEST
// start a new populator	WITHOUT_CLASSIFICATION	0.9999993392546068	WITHOUT_CLASSIFICATION	6.607453933034828E-7	TEST
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999827265627237	WITHOUT_CLASSIFICATION	1.7273437276324578E-5	TEST
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999912216987193	WITHOUT_CLASSIFICATION	8.778301280694785E-6	TEST
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999986037974955	WITHOUT_CLASSIFICATION	1.3962025044157228E-6	TEST
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999998384766506	WITHOUT_CLASSIFICATION	1.6152334942025598E-7	TEST
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999997000839398	WITHOUT_CLASSIFICATION	2.9991606026972695E-7	TEST
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999995100372325	WITHOUT_CLASSIFICATION	4.899627674553586E-7	TEST
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999995574397011	WITHOUT_CLASSIFICATION	4.4256029888102786E-7	TEST
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999998375220501	WITHOUT_CLASSIFICATION	1.624779499431471E-7	TEST
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.999998308552206	WITHOUT_CLASSIFICATION	1.6914477940767642E-6	TEST
//                }	WITHOUT_CLASSIFICATION	0.9999907490498643	WITHOUT_CLASSIFICATION	9.250950135595958E-6	TEST
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.999999421551036	WITHOUT_CLASSIFICATION	5.78448963948044E-7	TEST
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999970730834892	WITHOUT_CLASSIFICATION	2.926916510857538E-6	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999998441125212	WITHOUT_CLASSIFICATION	1.5588747880626614E-7	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999992421020966	WITHOUT_CLASSIFICATION	7.578979033813135E-7	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999965391242801	WITHOUT_CLASSIFICATION	3.4608757198724692E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999996273881935	WITHOUT_CLASSIFICATION	3.726118064779268E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999996273881935	WITHOUT_CLASSIFICATION	3.726118064779268E-7	TEST
// colon3	WITHOUT_CLASSIFICATION	0.9999985811092548	WITHOUT_CLASSIFICATION	1.4188907453087696E-6	TEST
// Colon3	WITHOUT_CLASSIFICATION	0.9999971994142599	WITHOUT_CLASSIFICATION	2.800585740127736E-6	TEST
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.999998320253991	WITHOUT_CLASSIFICATION	1.6797460089501677E-6	TEST
// For b.foo	WITHOUT_CLASSIFICATION	0.9999805048420675	WITHOUT_CLASSIFICATION	1.9495157932569507E-5	TEST
// instance config for the script run	WITHOUT_CLASSIFICATION	0.999999101932855	WITHOUT_CLASSIFICATION	8.980671448712245E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999996273881935	WITHOUT_CLASSIFICATION	3.726118064779268E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999996273881935	WITHOUT_CLASSIFICATION	3.726118064779268E-7	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999301763756	WITHOUT_CLASSIFICATION	6.982362440894245E-8	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999301763756	WITHOUT_CLASSIFICATION	6.982362440894245E-8	TEST
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999989736479244	WITHOUT_CLASSIFICATION	1.0263520756286009E-6	TEST
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999808510249579	WITHOUT_CLASSIFICATION	1.91489750421229E-5	TEST
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999998894952192	WITHOUT_CLASSIFICATION	1.1050478085837503E-7	TEST
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999994854898068	WITHOUT_CLASSIFICATION	5.145101933304357E-7	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.999999879859178	WITHOUT_CLASSIFICATION	1.2014082197007343E-7	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.999999879859178	WITHOUT_CLASSIFICATION	1.2014082197007343E-7	TEST
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999988857813009	WITHOUT_CLASSIFICATION	1.1142186990187006E-6	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999980034519395	WITHOUT_CLASSIFICATION	1.996548060606546E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999992576561045	WITHOUT_CLASSIFICATION	7.42343895450363E-7	TEST
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.999992743886091	WITHOUT_CLASSIFICATION	7.256113908934432E-6	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.99999992917667	WITHOUT_CLASSIFICATION	7.082332987859181E-8	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999994759318896	WITHOUT_CLASSIFICATION	5.240681102893589E-7	TEST
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999980048089034	WITHOUT_CLASSIFICATION	1.9951910966258314E-6	TEST
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999994134777442	WITHOUT_CLASSIFICATION	5.865222558008057E-7	TEST
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999972580227563	WITHOUT_CLASSIFICATION	2.7419772437688517E-6	TEST
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999997986733121	WITHOUT_CLASSIFICATION	2.013266878300906E-7	TEST
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999993500549207	WITHOUT_CLASSIFICATION	6.499450793530846E-7	TEST
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999994059477528	WITHOUT_CLASSIFICATION	5.940522471544822E-7	TEST
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999977649916804	WITHOUT_CLASSIFICATION	2.235008319607977E-6	TEST
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999991449040322	WITHOUT_CLASSIFICATION	8.550959677532841E-7	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999992421020966	WITHOUT_CLASSIFICATION	7.578979033813135E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999996273881935	WITHOUT_CLASSIFICATION	3.726118064779268E-7	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999301763756	WITHOUT_CLASSIFICATION	6.982362440894245E-8	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999994759318896	WITHOUT_CLASSIFICATION	5.240681102893589E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999744010133	WITHOUT_CLASSIFICATION	2.5598986723311158E-8	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999744010133	WITHOUT_CLASSIFICATION	2.5598986723311158E-8	TEST
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999994483804745	WITHOUT_CLASSIFICATION	5.516195254623589E-7	TEST
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999994781873793	WITHOUT_CLASSIFICATION	5.218126207599452E-7	TEST
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.99999998053816	WITHOUT_CLASSIFICATION	1.9461840011046892E-8	TEST
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999996525865955	WITHOUT_CLASSIFICATION	3.474134044662289E-7	TEST
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999989217261038	WITHOUT_CLASSIFICATION	1.0782738961712333E-6	TEST
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.999999774313107	WITHOUT_CLASSIFICATION	2.25686893020165E-7	TEST
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999986097261333	WITHOUT_CLASSIFICATION	1.39027386665341E-6	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999993436037845	WITHOUT_CLASSIFICATION	6.563962154883596E-7	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999993317626585	WITHOUT_CLASSIFICATION	6.682373415887044E-7	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999993969554436	WITHOUT_CLASSIFICATION	6.030445564645992E-7	TEST
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999943133310217	WITHOUT_CLASSIFICATION	5.686668978215022E-6	TEST
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999993319057471	WITHOUT_CLASSIFICATION	6.680942529070502E-7	TEST
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999992933108534	WITHOUT_CLASSIFICATION	7.066891467375588E-7	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999965391242801	WITHOUT_CLASSIFICATION	3.4608757198724692E-6	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999301763756	WITHOUT_CLASSIFICATION	6.982362440894245E-8	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999980034519395	WITHOUT_CLASSIFICATION	1.996548060606546E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999992576561045	WITHOUT_CLASSIFICATION	7.42343895450363E-7	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999992576561045	WITHOUT_CLASSIFICATION	7.42343895450363E-7	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.99999992917667	WITHOUT_CLASSIFICATION	7.082332987859181E-8	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999994759318896	WITHOUT_CLASSIFICATION	5.240681102893589E-7	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999994759318896	WITHOUT_CLASSIFICATION	5.240681102893589E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999744010133	WITHOUT_CLASSIFICATION	2.5598986723311158E-8	TEST
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999998590193712	WITHOUT_CLASSIFICATION	1.409806288420751E-7	TEST
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999908201606743	WITHOUT_CLASSIFICATION	9.179839325674485E-6	TEST
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999835403719	WITHOUT_CLASSIFICATION	1.6459628031851053E-8	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999997220447588	WITHOUT_CLASSIFICATION	2.779552411541247E-7	TEST
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.999999882496154	WITHOUT_CLASSIFICATION	1.1750384602587072E-7	TEST
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999934473967408	WITHOUT_CLASSIFICATION	6.552603259309565E-6	TEST
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999996228000254	WITHOUT_CLASSIFICATION	3.7719997456918563E-7	TEST
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999999955967882	WITHOUT_CLASSIFICATION	4.40321181412407E-9	TEST
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999996525773425	WITHOUT_CLASSIFICATION	3.4742265754127954E-7	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999980034519395	WITHOUT_CLASSIFICATION	1.996548060606546E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999992576561045	WITHOUT_CLASSIFICATION	7.42343895450363E-7	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999992576561045	WITHOUT_CLASSIFICATION	7.42343895450363E-7	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.99999992917667	WITHOUT_CLASSIFICATION	7.082332987859181E-8	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999993436037845	WITHOUT_CLASSIFICATION	6.563962154883596E-7	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999993969554436	WITHOUT_CLASSIFICATION	6.030445564645992E-7	TEST
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999720494980786	WITHOUT_CLASSIFICATION	2.79505019213933E-5	TEST
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999997491810131	WITHOUT_CLASSIFICATION	2.5081898685841886E-7	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999774585974355	WITHOUT_CLASSIFICATION	2.254140256452711E-5	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999774585974355	WITHOUT_CLASSIFICATION	2.254140256452711E-5	TEST
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999966067249565	WITHOUT_CLASSIFICATION	3.3932750435186327E-6	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999991148325708	WITHOUT_CLASSIFICATION	8.851674292992197E-7	TEST
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999998922249949	WITHOUT_CLASSIFICATION	1.0777500514323689E-7	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999990029889005	WITHOUT_CLASSIFICATION	9.970110994391668E-7	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.9999963760828956	WITHOUT_CLASSIFICATION	3.6239171043256837E-6	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.9999963760828956	WITHOUT_CLASSIFICATION	3.6239171043256837E-6	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999994439090916	WITHOUT_CLASSIFICATION	5.560909083979767E-7	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999994439090916	WITHOUT_CLASSIFICATION	5.560909083979767E-7	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999995669751359	WITHOUT_CLASSIFICATION	4.330248640379895E-7	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999995669751359	WITHOUT_CLASSIFICATION	4.330248640379895E-7	TEST
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999981650289413	WITHOUT_CLASSIFICATION	1.834971058674877E-6	TEST
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.999999537707536	WITHOUT_CLASSIFICATION	4.6229246408752506E-7	TEST
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999981143342467	WITHOUT_CLASSIFICATION	1.8856657532450307E-6	TEST
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999995604572856	WITHOUT_CLASSIFICATION	4.3954271436092357E-7	TEST
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999993305046322	WITHOUT_CLASSIFICATION	6.694953677793624E-7	TEST
// pragmas	WITHOUT_CLASSIFICATION	0.9999969700368165	WITHOUT_CLASSIFICATION	3.029963183500688E-6	TEST
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.999999586455326	WITHOUT_CLASSIFICATION	4.1354467404552145E-7	TEST
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999999711218791	WITHOUT_CLASSIFICATION	2.8878120926355582E-8	TEST
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999995692667889	WITHOUT_CLASSIFICATION	4.307332112145311E-7	TEST
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999997517208002	WITHOUT_CLASSIFICATION	2.482791997556897E-7	TEST
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999997792811368	WITHOUT_CLASSIFICATION	2.2071886315893735E-7	TEST
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999992985033581	WITHOUT_CLASSIFICATION	7.014966418229635E-7	TEST
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999989291817666	WITHOUT_CLASSIFICATION	1.070818233376002E-6	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999929197668217	WITHOUT_CLASSIFICATION	7.080233178278734E-6	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999929197668217	WITHOUT_CLASSIFICATION	7.080233178278734E-6	TEST
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999972691915621	WITHOUT_CLASSIFICATION	2.730808437925879E-6	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999991699806389	WITHOUT_CLASSIFICATION	8.300193610771763E-7	TEST
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9999997421526771	WITHOUT_CLASSIFICATION	2.5784732300528795E-7	TEST
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999999643800878	WITHOUT_CLASSIFICATION	3.561991217837593E-8	TEST
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999989763818585	WITHOUT_CLASSIFICATION	1.0236181414535828E-6	TEST
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999888186389287	WITHOUT_CLASSIFICATION	1.1181361071279079E-5	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999968746691175	WITHOUT_CLASSIFICATION	3.1253308824941874E-6	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.999998251116565	WITHOUT_CLASSIFICATION	1.7488834350394421E-6	TEST
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999999063544311	WITHOUT_CLASSIFICATION	9.364556877197868E-8	TEST
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999986022428531	WITHOUT_CLASSIFICATION	1.3977571469772327E-6	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999998119119229	WITHOUT_CLASSIFICATION	1.8808807707453326E-7	TEST
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999966121591736	WITHOUT_CLASSIFICATION	3.387840826498841E-6	TEST
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999997036616288	WITHOUT_CLASSIFICATION	2.96338371229875E-7	TEST
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999999089800017	WITHOUT_CLASSIFICATION	9.101999827280973E-8	TEST
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999832999475807	WITHOUT_CLASSIFICATION	1.6700052419267755E-5	TEST
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999996296491408	WITHOUT_CLASSIFICATION	3.7035085925920455E-7	TEST
// can't do it	WITHOUT_CLASSIFICATION	0.9999989581598361	WITHOUT_CLASSIFICATION	1.0418401639841358E-6	TEST
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999996606795775	WITHOUT_CLASSIFICATION	3.393204225024818E-7	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999997761779524	WITHOUT_CLASSIFICATION	2.2382204770199363E-7	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999997761779524	WITHOUT_CLASSIFICATION	2.2382204770199363E-7	TEST
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999985734115754	WITHOUT_CLASSIFICATION	1.4265884246022419E-6	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999931708611476	WITHOUT_CLASSIFICATION	6.829138852414468E-6	TEST
//[]	WITHOUT_CLASSIFICATION	0.9998750296688212	WITHOUT_CLASSIFICATION	1.2497033117869172E-4	TEST
//[]	WITHOUT_CLASSIFICATION	0.9998750296688212	WITHOUT_CLASSIFICATION	1.2497033117869172E-4	TEST
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999996773500341	WITHOUT_CLASSIFICATION	3.226499658784544E-7	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999757173587986	WITHOUT_CLASSIFICATION	2.428264120128625E-5	TEST
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9999656273226578	WITHOUT_CLASSIFICATION	3.437267734214166E-5	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999578424346602	WITHOUT_CLASSIFICATION	4.2157565339647054E-5	TEST
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999995224033615	WITHOUT_CLASSIFICATION	4.775966383764341E-7	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.999999608068466	WITHOUT_CLASSIFICATION	3.9193153402949146E-7	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.999999608068466	WITHOUT_CLASSIFICATION	3.9193153402949146E-7	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999999528947828	WITHOUT_CLASSIFICATION	4.710521705961874E-8	TEST
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999992433789229	WITHOUT_CLASSIFICATION	7.566210771125906E-7	TEST
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999995869749245	WITHOUT_CLASSIFICATION	4.1302507547138253E-7	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999927854436682	WITHOUT_CLASSIFICATION	7.2145563317135884E-6	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999931708611476	WITHOUT_CLASSIFICATION	6.829138852414468E-6	TEST
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999855231242428	WITHOUT_CLASSIFICATION	1.4476875757217343E-5	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999931723532991	WITHOUT_CLASSIFICATION	6.827646700962405E-6	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999931723532991	WITHOUT_CLASSIFICATION	6.827646700962405E-6	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999978392609482	WITHOUT_CLASSIFICATION	2.160739051744184E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999993577714245	WITHOUT_CLASSIFICATION	6.422285754991852E-7	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999993577714245	WITHOUT_CLASSIFICATION	6.422285754991852E-7	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999998588171748	WITHOUT_CLASSIFICATION	1.411828252686788E-7	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999998588171748	WITHOUT_CLASSIFICATION	1.411828252686788E-7	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999998588171748	WITHOUT_CLASSIFICATION	1.411828252686788E-7	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999993577714245	WITHOUT_CLASSIFICATION	6.422285754991852E-7	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999993577714245	WITHOUT_CLASSIFICATION	6.422285754991852E-7	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999978392609482	WITHOUT_CLASSIFICATION	2.160739051744184E-6	TEST
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999987954267644	WITHOUT_CLASSIFICATION	1.204573235592073E-6	TEST
// always false or nil	WITHOUT_CLASSIFICATION	0.9999979772916151	WITHOUT_CLASSIFICATION	2.0227083848779717E-6	TEST
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999998084433508	WITHOUT_CLASSIFICATION	1.9155664915044033E-7	TEST
// normal	WITHOUT_CLASSIFICATION	0.9999986289690439	WITHOUT_CLASSIFICATION	1.3710309560383587E-6	TEST
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999999679134287	WITHOUT_CLASSIFICATION	3.2086571320321464E-8	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999990865724337	WITHOUT_CLASSIFICATION	9.134275663760017E-7	TEST
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999949652695076	WITHOUT_CLASSIFICATION	5.034730492456706E-6	TEST
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.999999283293514	WITHOUT_CLASSIFICATION	7.167064859978373E-7	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999998119119229	WITHOUT_CLASSIFICATION	1.8808807707453326E-7	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999993577714245	WITHOUT_CLASSIFICATION	6.422285754991852E-7	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999993577714245	WITHOUT_CLASSIFICATION	6.422285754991852E-7	TEST
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999985952840386	WITHOUT_CLASSIFICATION	1.4047159613706653E-6	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999992325938336	WITHOUT_CLASSIFICATION	7.674061664318471E-7	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999954568767203	WITHOUT_CLASSIFICATION	4.543123279615112E-6	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.999999899496878	WITHOUT_CLASSIFICATION	1.0050312201111502E-7	TEST
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999993590734	WITHOUT_CLASSIFICATION	6.409266000545734E-7	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999992774950058	WITHOUT_CLASSIFICATION	7.225049941301148E-7	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999998164766561	WITHOUT_CLASSIFICATION	1.8352334390115864E-7	TEST
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999970956580757	WITHOUT_CLASSIFICATION	2.9043419243256006E-6	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.99999813092322	WITHOUT_CLASSIFICATION	1.8690767800563072E-6	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999995736815918	WITHOUT_CLASSIFICATION	4.2631840826124393E-7	TEST
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999858972572785	WITHOUT_CLASSIFICATION	1.41027427214692E-5	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.9999971832163148	WITHOUT_CLASSIFICATION	2.8167836850836016E-6	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999995853466015	WITHOUT_CLASSIFICATION	4.146533985449246E-7	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999990596011891	WITHOUT_CLASSIFICATION	9.403988108845707E-7	TEST
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999998142324323	WITHOUT_CLASSIFICATION	1.857675676331159E-7	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999978670574672	WITHOUT_CLASSIFICATION	2.132942532830018E-6	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999978670574672	WITHOUT_CLASSIFICATION	2.132942532830018E-6	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999978670574672	WITHOUT_CLASSIFICATION	2.132942532830018E-6	TEST
// compile into array	WITHOUT_CLASSIFICATION	0.9999998868101576	WITHOUT_CLASSIFICATION	1.1318984228017779E-7	TEST
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999999500457728	WITHOUT_CLASSIFICATION	4.995422715768658E-8	TEST
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.99999945809786	WITHOUT_CLASSIFICATION	5.419021400429179E-7	TEST
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999996263837075	WITHOUT_CLASSIFICATION	3.73616292470493E-7	TEST
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999997835022431	WITHOUT_CLASSIFICATION	2.1649775696627107E-7	TEST
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.999999050633964	WITHOUT_CLASSIFICATION	9.493660359525157E-7	TEST
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999995838303471	WITHOUT_CLASSIFICATION	4.1616965286469926E-7	TEST
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999997989612827	WITHOUT_CLASSIFICATION	2.0103871732024615E-7	TEST
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999985478433165	WITHOUT_CLASSIFICATION	1.4521566834309567E-6	TEST
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999991818845557	WITHOUT_CLASSIFICATION	8.181154443321994E-7	TEST
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999988453847078	WITHOUT_CLASSIFICATION	1.1546152921822054E-6	TEST
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999924643097652	WITHOUT_CLASSIFICATION	7.535690234820519E-6	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999999528947828	WITHOUT_CLASSIFICATION	4.710521705961874E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999993577714245	WITHOUT_CLASSIFICATION	6.422285754991852E-7	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999993577714245	WITHOUT_CLASSIFICATION	6.422285754991852E-7	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999978392609482	WITHOUT_CLASSIFICATION	2.160739051744184E-6	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999990865724337	WITHOUT_CLASSIFICATION	9.134275663760017E-7	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999992325938336	WITHOUT_CLASSIFICATION	7.674061664318471E-7	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.999999899496878	WITHOUT_CLASSIFICATION	1.0050312201111502E-7	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999992774950058	WITHOUT_CLASSIFICATION	7.225049941301148E-7	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999954568767203	WITHOUT_CLASSIFICATION	4.543123279615112E-6	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999998164766561	WITHOUT_CLASSIFICATION	1.8352334390115864E-7	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999995736815918	WITHOUT_CLASSIFICATION	4.2631840826124393E-7	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.99999813092322	WITHOUT_CLASSIFICATION	1.8690767800563072E-6	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.9999971832163148	WITHOUT_CLASSIFICATION	2.8167836850836016E-6	TEST
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999998085749914	WITHOUT_CLASSIFICATION	1.9142500852460206E-7	TEST
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999993856961124	WITHOUT_CLASSIFICATION	6.143038877001687E-7	TEST
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999886907196464	WITHOUT_CLASSIFICATION	1.1309280353691887E-5	TEST
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999990416630111	WITHOUT_CLASSIFICATION	9.583369889323365E-7	TEST
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999999565724265	WITHOUT_CLASSIFICATION	4.342757357376872E-8	TEST
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999995913227023	WITHOUT_CLASSIFICATION	4.086772977184107E-7	TEST
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999997480875721	WITHOUT_CLASSIFICATION	2.5191242796111336E-7	TEST
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999999873229345	WITHOUT_CLASSIFICATION	1.267706556379558E-8	TEST
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999999650385365	WITHOUT_CLASSIFICATION	3.49614634652554E-8	TEST
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999965523218081	WITHOUT_CLASSIFICATION	3.4476781919322697E-6	TEST
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.999999613632482	WITHOUT_CLASSIFICATION	3.863675180753947E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999994610724379	WITHOUT_CLASSIFICATION	5.389275621323171E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999964410200535	WITHOUT_CLASSIFICATION	3.558979946497439E-6	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999994379823486	WITHOUT_CLASSIFICATION	5.620176514462451E-7	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999998084301418	WITHOUT_CLASSIFICATION	1.9156985820420922E-7	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.999999871879035	WITHOUT_CLASSIFICATION	1.2812096496011956E-7	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999994002923132	WITHOUT_CLASSIFICATION	5.997076868668968E-7	TEST
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999992807298169	WITHOUT_CLASSIFICATION	7.19270183001671E-7	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999999445722233	WITHOUT_CLASSIFICATION	5.542777676053492E-8	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999999377801404	WITHOUT_CLASSIFICATION	6.221985958996216E-8	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999997574634515	WITHOUT_CLASSIFICATION	2.425365484412631E-7	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999233436928	WITHOUT_CLASSIFICATION	7.665630714869209E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999233436928	WITHOUT_CLASSIFICATION	7.665630714869209E-8	TEST
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999945837245698	WITHOUT_CLASSIFICATION	5.416275430167669E-6	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999995102379676	WITHOUT_CLASSIFICATION	4.897620324076977E-7	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999809082043561	WITHOUT_CLASSIFICATION	1.909179564382078E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999809082043561	WITHOUT_CLASSIFICATION	1.909179564382078E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999809082043561	WITHOUT_CLASSIFICATION	1.909179564382078E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.999956125020407	WITHOUT_CLASSIFICATION	4.3874979593017224E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.999956125020407	WITHOUT_CLASSIFICATION	4.3874979593017224E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.999956125020407	WITHOUT_CLASSIFICATION	4.3874979593017224E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.999956125020407	WITHOUT_CLASSIFICATION	4.3874979593017224E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999542491917035	WITHOUT_CLASSIFICATION	4.575080829643634E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999542491917035	WITHOUT_CLASSIFICATION	4.575080829643634E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999542491917035	WITHOUT_CLASSIFICATION	4.575080829643634E-5	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.999953705681016	WITHOUT_CLASSIFICATION	4.629431898406855E-5	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.999953705681016	WITHOUT_CLASSIFICATION	4.629431898406855E-5	TEST
/*arg2*/	WITHOUT_CLASSIFICATION	0.9999532891880899	WITHOUT_CLASSIFICATION	4.671081191016736E-5	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9999547374733143	WITHOUT_CLASSIFICATION	4.5262526685711105E-5	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999995102379676	WITHOUT_CLASSIFICATION	4.897620324076977E-7	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999991975965671	WITHOUT_CLASSIFICATION	8.024034327851857E-7	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999809082043561	WITHOUT_CLASSIFICATION	1.909179564382078E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999809082043561	WITHOUT_CLASSIFICATION	1.909179564382078E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.999956125020407	WITHOUT_CLASSIFICATION	4.3874979593017224E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.999956125020407	WITHOUT_CLASSIFICATION	4.3874979593017224E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.999956125020407	WITHOUT_CLASSIFICATION	4.3874979593017224E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999542491917035	WITHOUT_CLASSIFICATION	4.575080829643634E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999542491917035	WITHOUT_CLASSIFICATION	4.575080829643634E-5	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.999953705681016	WITHOUT_CLASSIFICATION	4.629431898406855E-5	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9999547374733143	WITHOUT_CLASSIFICATION	4.5262526685711105E-5	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999995394050926	WITHOUT_CLASSIFICATION	4.605949074877449E-7	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999995394050926	WITHOUT_CLASSIFICATION	4.605949074877449E-7	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999992829400643	WITHOUT_CLASSIFICATION	7.170599356855294E-7	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999992829400643	WITHOUT_CLASSIFICATION	7.170599356855294E-7	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9999962251052346	WITHOUT_CLASSIFICATION	3.7748947654291882E-6	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9999962251052346	WITHOUT_CLASSIFICATION	3.7748947654291882E-6	TEST
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999986150541149	WITHOUT_CLASSIFICATION	1.3849458851200728E-6	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999956606705106	WITHOUT_CLASSIFICATION	4.339329489473889E-6	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999956606705106	WITHOUT_CLASSIFICATION	4.339329489473889E-6	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999998045910021	WITHOUT_CLASSIFICATION	1.95408997812101E-7	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999998045910021	WITHOUT_CLASSIFICATION	1.95408997812101E-7	TEST
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999974584907563	WITHOUT_CLASSIFICATION	2.5415092437916924E-6	TEST
// call site	WITHOUT_CLASSIFICATION	0.9999984711947308	WITHOUT_CLASSIFICATION	1.5288052690813688E-6	TEST
// call site	WITHOUT_CLASSIFICATION	0.9999984711947308	WITHOUT_CLASSIFICATION	1.5288052690813688E-6	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999999795506906	WITHOUT_CLASSIFICATION	2.044930932564763E-8	TEST
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999988984761582	WITHOUT_CLASSIFICATION	1.1015238417496514E-6	TEST
// eval value and save it	WITHOUT_CLASSIFICATION	0.999999104928971	WITHOUT_CLASSIFICATION	8.950710288608234E-7	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.999956125020407	WITHOUT_CLASSIFICATION	4.3874979593017224E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.999956125020407	WITHOUT_CLASSIFICATION	4.3874979593017224E-5	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999999795506906	WITHOUT_CLASSIFICATION	2.044930932564763E-8	TEST
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999964457546748	WITHOUT_CLASSIFICATION	3.554245325218016E-6	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999966330286272	WITHOUT_CLASSIFICATION	3.3669713728978977E-6	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999966330286272	WITHOUT_CLASSIFICATION	3.3669713728978977E-6	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999966330286272	WITHOUT_CLASSIFICATION	3.3669713728978977E-6	TEST
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.999999727705162	WITHOUT_CLASSIFICATION	2.722948380662281E-7	TEST
// args	WITHOUT_CLASSIFICATION	0.9999963243075268	WITHOUT_CLASSIFICATION	3.6756924731328244E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999959557694422	WITHOUT_CLASSIFICATION	4.044230557719443E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999959557694422	WITHOUT_CLASSIFICATION	4.044230557719443E-6	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999996089679984	WITHOUT_CLASSIFICATION	3.910320016234821E-7	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999993394904682	WITHOUT_CLASSIFICATION	6.605095318963929E-7	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.999999242858014	WITHOUT_CLASSIFICATION	7.571419859944154E-7	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.9999972453718783	WITHOUT_CLASSIFICATION	2.754628121814663E-6	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999988142460504	WITHOUT_CLASSIFICATION	1.1857539496782835E-6	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999991161264542	WITHOUT_CLASSIFICATION	8.838735458834749E-7	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999991161264542	WITHOUT_CLASSIFICATION	8.838735458834749E-7	TEST
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999997172778652	WITHOUT_CLASSIFICATION	2.827221347289789E-7	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9999475934887695	WITHOUT_CLASSIFICATION	5.24065112305887E-5	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9999475934887695	WITHOUT_CLASSIFICATION	5.24065112305887E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.999956125020407	WITHOUT_CLASSIFICATION	4.3874979593017224E-5	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999966330286272	WITHOUT_CLASSIFICATION	3.3669713728978977E-6	TEST
// args	WITHOUT_CLASSIFICATION	0.9999963243075268	WITHOUT_CLASSIFICATION	3.6756924731328244E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999959557694422	WITHOUT_CLASSIFICATION	4.044230557719443E-6	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999996089679984	WITHOUT_CLASSIFICATION	3.910320016234821E-7	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999993394904682	WITHOUT_CLASSIFICATION	6.605095318963929E-7	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.999999242858014	WITHOUT_CLASSIFICATION	7.571419859944154E-7	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.9999972453718783	WITHOUT_CLASSIFICATION	2.754628121814663E-6	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9999475934887695	WITHOUT_CLASSIFICATION	5.24065112305887E-5	TEST
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999990482982377	WITHOUT_CLASSIFICATION	9.517017621927905E-7	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999998080254482	WITHOUT_CLASSIFICATION	1.9197455179562864E-7	TEST
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999972534551235	WITHOUT_CLASSIFICATION	2.7465448765792537E-6	TEST
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999994104864633	WITHOUT_CLASSIFICATION	5.895135366471106E-7	TEST
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999990277798563	WITHOUT_CLASSIFICATION	9.72220143781509E-7	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999996120099934	WITHOUT_CLASSIFICATION	3.8799000659828403E-7	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999983487838948	WITHOUT_CLASSIFICATION	1.6512161051897774E-6	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999983487838948	WITHOUT_CLASSIFICATION	1.6512161051897774E-6	TEST
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999996048329517	WITHOUT_CLASSIFICATION	3.9516704832310484E-7	TEST
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999998869503566	WITHOUT_CLASSIFICATION	1.1304964345685779E-7	TEST
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999998327128511	WITHOUT_CLASSIFICATION	1.6728714883206028E-7	TEST
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999998937211818	WITHOUT_CLASSIFICATION	1.062788182652085E-7	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999999079502632	WITHOUT_CLASSIFICATION	9.20497368393359E-8	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999999079502632	WITHOUT_CLASSIFICATION	9.20497368393359E-8	TEST
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999999649068843	WITHOUT_CLASSIFICATION	3.509311583740496E-8	TEST
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999999237568185	WITHOUT_CLASSIFICATION	7.624318158303387E-8	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999998236029225	WITHOUT_CLASSIFICATION	1.763970774807235E-7	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999998236029225	WITHOUT_CLASSIFICATION	1.763970774807235E-7	TEST
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999995277868601	WITHOUT_CLASSIFICATION	4.7221313995187156E-7	TEST
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.999999935287206	WITHOUT_CLASSIFICATION	6.471279402546247E-8	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999988142460504	WITHOUT_CLASSIFICATION	1.1857539496782835E-6	TEST
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999991653788742	WITHOUT_CLASSIFICATION	8.346211257443514E-7	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999998177458751	WITHOUT_CLASSIFICATION	1.8225412500043468E-7	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.999998356180244	WITHOUT_CLASSIFICATION	1.6438197559559752E-6	TEST
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999993419141552	WITHOUT_CLASSIFICATION	6.580858447630619E-7	TEST
// load Object under value	WITHOUT_CLASSIFICATION	0.999999085426376	WITHOUT_CLASSIFICATION	9.145736238721951E-7	TEST
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999994795941831	WITHOUT_CLASSIFICATION	5.204058168501359E-7	TEST
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999981587386106	WITHOUT_CLASSIFICATION	1.841261389297904E-6	TEST
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999967754013989	WITHOUT_CLASSIFICATION	3.2245986010152524E-6	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.999999939993936	WITHOUT_CLASSIFICATION	6.000606394868318E-8	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.999999939993936	WITHOUT_CLASSIFICATION	6.000606394868318E-8	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999995524877845	WITHOUT_CLASSIFICATION	4.475122155706468E-7	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999995524877845	WITHOUT_CLASSIFICATION	4.475122155706468E-7	TEST
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999993169580133	WITHOUT_CLASSIFICATION	6.83041986720987E-7	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999984159842542	WITHOUT_CLASSIFICATION	1.5840157458068836E-6	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999984159842542	WITHOUT_CLASSIFICATION	1.5840157458068836E-6	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999984159842542	WITHOUT_CLASSIFICATION	1.5840157458068836E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999955127853457	WITHOUT_CLASSIFICATION	4.487214654258387E-6	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999996000558319	WITHOUT_CLASSIFICATION	3.999441680835738E-7	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999996000558319	WITHOUT_CLASSIFICATION	3.999441680835738E-7	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999954057522652	WITHOUT_CLASSIFICATION	4.594247734755702E-6	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.999999671451638	WITHOUT_CLASSIFICATION	3.285483619353985E-7	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999967415260912	WITHOUT_CLASSIFICATION	3.2584739088557235E-6	TEST
// skip catch block	WITHOUT_CLASSIFICATION	0.9999984924325108	WITHOUT_CLASSIFICATION	1.5075674891709091E-6	TEST
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999989442153876	WITHOUT_CLASSIFICATION	1.0557846124399498E-6	TEST
// next jump	WITHOUT_CLASSIFICATION	0.9999985561014522	WITHOUT_CLASSIFICATION	1.443898547812502E-6	TEST
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999973058834885	WITHOUT_CLASSIFICATION	2.694116511434504E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999964410200535	WITHOUT_CLASSIFICATION	3.558979946497439E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999964410200535	WITHOUT_CLASSIFICATION	3.558979946497439E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999955127853457	WITHOUT_CLASSIFICATION	4.487214654258387E-6	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999954057522652	WITHOUT_CLASSIFICATION	4.594247734755702E-6	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999997538959984	WITHOUT_CLASSIFICATION	2.46104001599144E-7	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.999999671451638	WITHOUT_CLASSIFICATION	3.285483619353985E-7	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999967415260912	WITHOUT_CLASSIFICATION	3.2584739088557235E-6	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999998828007758	WITHOUT_CLASSIFICATION	1.1719922417137849E-7	TEST
// break jump	WITHOUT_CLASSIFICATION	0.9999980583707737	WITHOUT_CLASSIFICATION	1.941629226368837E-6	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999997264271845	WITHOUT_CLASSIFICATION	2.7357281543086414E-7	TEST
//[reg]	WITHOUT_CLASSIFICATION	0.999957164009453	WITHOUT_CLASSIFICATION	4.2835990547088315E-5	TEST
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999974016311101	WITHOUT_CLASSIFICATION	2.5983688899772097E-6	TEST
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999998314508656	WITHOUT_CLASSIFICATION	1.685491344926993E-7	TEST
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999999488716075	WITHOUT_CLASSIFICATION	5.1128392469883354E-8	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999998828007758	WITHOUT_CLASSIFICATION	1.1719922417137849E-7	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.999999509769521	WITHOUT_CLASSIFICATION	4.902304790145124E-7	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.999999509769521	WITHOUT_CLASSIFICATION	4.902304790145124E-7	TEST
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999970387808561	WITHOUT_CLASSIFICATION	2.9612191438295004E-6	TEST
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999991279982576	WITHOUT_CLASSIFICATION	8.720017423692291E-7	TEST
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999997743224984	WITHOUT_CLASSIFICATION	2.2567750158165724E-7	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999993846479434	WITHOUT_CLASSIFICATION	6.153520565388441E-7	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999986699130228	WITHOUT_CLASSIFICATION	1.33008697726108E-6	TEST
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999997636059061	WITHOUT_CLASSIFICATION	2.363940938281176E-7	TEST
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.999994485267591	WITHOUT_CLASSIFICATION	5.514732408933844E-6	TEST
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999997171046398	WITHOUT_CLASSIFICATION	2.8289536027734387E-7	TEST
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999999558619432	WITHOUT_CLASSIFICATION	4.4138056761811804E-8	TEST
// false // zero	WITHOUT_CLASSIFICATION	0.9999973246291415	WITHOUT_CLASSIFICATION	2.6753708584566204E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999963055943983	WITHOUT_CLASSIFICATION	3.6944056016599996E-6	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999993846479434	WITHOUT_CLASSIFICATION	6.153520565388441E-7	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999986699130228	WITHOUT_CLASSIFICATION	1.33008697726108E-6	TEST
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999992190866966	WITHOUT_CLASSIFICATION	7.809133033041518E-7	TEST
// push false	WITHOUT_CLASSIFICATION	0.9999964965825793	WITHOUT_CLASSIFICATION	3.5034174206067745E-6	TEST
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999995411103528	WITHOUT_CLASSIFICATION	4.588896472314676E-7	TEST
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999962893593355	WITHOUT_CLASSIFICATION	3.7106406645458143E-6	TEST
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999930772121642	WITHOUT_CLASSIFICATION	6.92278783573628E-6	TEST
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999872542348743	WITHOUT_CLASSIFICATION	1.2745765125684775E-5	TEST
//[C]	WITHOUT_CLASSIFICATION	0.9998981454658561	WITHOUT_CLASSIFICATION	1.0185453414398728E-4	TEST
// push true	WITHOUT_CLASSIFICATION	0.9999956292184996	WITHOUT_CLASSIFICATION	4.370781500344972E-6	TEST
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999931903979914	WITHOUT_CLASSIFICATION	6.809602008704264E-6	TEST
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999807202656812	WITHOUT_CLASSIFICATION	1.9279734318816104E-5	TEST
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999850096254393	WITHOUT_CLASSIFICATION	1.4990374560706235E-5	TEST
//[boolean]	WITHOUT_CLASSIFICATION	0.9999699319071942	WITHOUT_CLASSIFICATION	3.0068092805815805E-5	TEST
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999988199120414	WITHOUT_CLASSIFICATION	1.1800879585470586E-6	TEST
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999990261113643	WITHOUT_CLASSIFICATION	9.738886357623812E-7	TEST
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999987607003695	WITHOUT_CLASSIFICATION	1.2392996303899186E-6	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999996062645474	WITHOUT_CLASSIFICATION	3.937354525946944E-7	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999877253614118	WITHOUT_CLASSIFICATION	1.2274638588220507E-5	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999989875765529	WITHOUT_CLASSIFICATION	1.0124234470441356E-6	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999993368534226	WITHOUT_CLASSIFICATION	6.631465774755402E-7	TEST
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999993825174226	WITHOUT_CLASSIFICATION	6.174825774391187E-7	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999877253614118	WITHOUT_CLASSIFICATION	1.2274638588220507E-5	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999989875765529	WITHOUT_CLASSIFICATION	1.0124234470441356E-6	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999993368534226	WITHOUT_CLASSIFICATION	6.631465774755402E-7	TEST
// finally with exception	WITHOUT_CLASSIFICATION	0.9999984165477294	WITHOUT_CLASSIFICATION	1.5834522705967381E-6	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999999693353815	WITHOUT_CLASSIFICATION	3.066461849719867E-8	TEST
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999994595930871	WITHOUT_CLASSIFICATION	5.404069129465056E-7	TEST
// original exception is on stack	WITHOUT_CLASSIFICATION	0.999999610038435	WITHOUT_CLASSIFICATION	3.899615650800398E-7	TEST
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.999998822338324	WITHOUT_CLASSIFICATION	1.1776616758556705E-6	TEST
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999986993091865	WITHOUT_CLASSIFICATION	1.3006908135497334E-6	TEST
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999993293888445	WITHOUT_CLASSIFICATION	6.706111555818919E-7	TEST
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999998764510876	WITHOUT_CLASSIFICATION	1.23548912428005E-7	TEST
// script object	WITHOUT_CLASSIFICATION	0.9999992221090044	WITHOUT_CLASSIFICATION	7.778909956689198E-7	TEST
// arities	WITHOUT_CLASSIFICATION	0.9999982641432869	WITHOUT_CLASSIFICATION	1.7358567131302317E-6	TEST
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9992196048945702	WITHOUT_CLASSIFICATION	7.803951054297785E-4	TEST
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999996627614776	WITHOUT_CLASSIFICATION	3.3723852236671593E-7	TEST
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999984146029861	WITHOUT_CLASSIFICATION	1.5853970139707457E-6	TEST
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999985530020344	WITHOUT_CLASSIFICATION	1.4469979655083077E-6	TEST
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9998492645164604	WITHOUT_CLASSIFICATION	1.5073548353956726E-4	TEST
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999998583517804	WITHOUT_CLASSIFICATION	1.416482195002361E-7	TEST
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999997960112745	WITHOUT_CLASSIFICATION	2.039887255296951E-7	TEST
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999993279706825	WITHOUT_CLASSIFICATION	6.720293174338383E-7	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999988624135263	WITHOUT_CLASSIFICATION	1.1375864737156874E-6	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999982242957037	WITHOUT_CLASSIFICATION	1.7757042963100855E-6	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999991246302041	WITHOUT_CLASSIFICATION	8.753697958604003E-7	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999961988372367	WITHOUT_CLASSIFICATION	3.8011627631989793E-6	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999961988372367	WITHOUT_CLASSIFICATION	3.8011627631989793E-6	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999945668873015	WITHOUT_CLASSIFICATION	5.433112698459723E-6	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999945668873015	WITHOUT_CLASSIFICATION	5.433112698459723E-6	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999996384065143	WITHOUT_CLASSIFICATION	3.6159348562472194E-7	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999996384065143	WITHOUT_CLASSIFICATION	3.6159348562472194E-7	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999994278788793	WITHOUT_CLASSIFICATION	5.721211207647116E-7	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999997470214598	WITHOUT_CLASSIFICATION	2.5297854023807336E-7	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999998659177478	WITHOUT_CLASSIFICATION	1.3408225225357992E-7	TEST
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999852434519044	WITHOUT_CLASSIFICATION	1.4756548095624751E-5	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.999940373307132	WITHOUT_CLASSIFICATION	5.9626692867811236E-5	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999994756220058	WITHOUT_CLASSIFICATION	5.243779943173554E-7	TEST
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999924879644938	WITHOUT_CLASSIFICATION	7.512035506128045E-6	TEST
// then optional args	WITHOUT_CLASSIFICATION	0.9999992348843424	WITHOUT_CLASSIFICATION	7.651156575011828E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999964410200535	WITHOUT_CLASSIFICATION	3.558979946497439E-6	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999994278788793	WITHOUT_CLASSIFICATION	5.721211207647116E-7	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999997470214598	WITHOUT_CLASSIFICATION	2.5297854023807336E-7	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999998659177478	WITHOUT_CLASSIFICATION	1.3408225225357992E-7	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.999940373307132	WITHOUT_CLASSIFICATION	5.9626692867811236E-5	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999994756220058	WITHOUT_CLASSIFICATION	5.243779943173554E-7	TEST
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999966416670824	WITHOUT_CLASSIFICATION	3.3583329176302433E-6	TEST
// finally, post args	WITHOUT_CLASSIFICATION	0.9999904615724433	WITHOUT_CLASSIFICATION	9.53842755664597E-6	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999995261567675	WITHOUT_CLASSIFICATION	4.7384323258703797E-7	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999995261567675	WITHOUT_CLASSIFICATION	4.7384323258703797E-7	TEST
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999985549210741	WITHOUT_CLASSIFICATION	1.4450789258925627E-6	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.999999109080156	WITHOUT_CLASSIFICATION	8.909198439841123E-7	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999998786018177	WITHOUT_CLASSIFICATION	1.2139818228503848E-7	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999925594939383	WITHOUT_CLASSIFICATION	7.440506061595595E-6	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999925594939383	WITHOUT_CLASSIFICATION	7.440506061595595E-6	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999988929079154	WITHOUT_CLASSIFICATION	1.1070920844924112E-6	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999994219803798	WITHOUT_CLASSIFICATION	5.780196201732779E-7	TEST
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999996683724284	WITHOUT_CLASSIFICATION	3.3162757161584403E-7	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999994470275766	WITHOUT_CLASSIFICATION	5.529724234106924E-7	TEST
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999997534051145	WITHOUT_CLASSIFICATION	2.465948855065161E-7	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999994379823486	WITHOUT_CLASSIFICATION	5.620176514462451E-7	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999998084301418	WITHOUT_CLASSIFICATION	1.9156985820420922E-7	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.999999871879035	WITHOUT_CLASSIFICATION	1.2812096496011956E-7	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999994002923132	WITHOUT_CLASSIFICATION	5.997076868668968E-7	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999999377801404	WITHOUT_CLASSIFICATION	6.221985958996216E-8	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999997574634515	WITHOUT_CLASSIFICATION	2.425365484412631E-7	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999988929079154	WITHOUT_CLASSIFICATION	1.1070920844924112E-6	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999994219803798	WITHOUT_CLASSIFICATION	5.780196201732779E-7	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999994470275766	WITHOUT_CLASSIFICATION	5.529724234106924E-7	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999995724130857	WITHOUT_CLASSIFICATION	4.2758691438070267E-7	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999998786018177	WITHOUT_CLASSIFICATION	1.2139818228503848E-7	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999998786018177	WITHOUT_CLASSIFICATION	1.2139818228503848E-7	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999963055943983	WITHOUT_CLASSIFICATION	3.6944056016599996E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999963055943983	WITHOUT_CLASSIFICATION	3.6944056016599996E-6	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999907783099	WITHOUT_CLASSIFICATION	9.22169010329734E-9	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999907783099	WITHOUT_CLASSIFICATION	9.22169010329734E-9	TEST
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999998746744949	WITHOUT_CLASSIFICATION	1.2532550505458974E-7	TEST
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999986927259944	WITHOUT_CLASSIFICATION	1.3072740056877135E-6	TEST
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999994157242924	WITHOUT_CLASSIFICATION	5.84275707670529E-7	TEST
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999793586788143	WITHOUT_CLASSIFICATION	2.0641321185731333E-5	TEST
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999998621532763	WITHOUT_CLASSIFICATION	1.3784672382924722E-7	TEST
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999998226482593	WITHOUT_CLASSIFICATION	1.7735174084434758E-7	TEST
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999999331335112	WITHOUT_CLASSIFICATION	6.68664887871426E-8	TEST
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.999999988284899	WITHOUT_CLASSIFICATION	1.1715101028410625E-8	TEST
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999997575339694	WITHOUT_CLASSIFICATION	2.4246603053897916E-7	TEST
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999995096465051	WITHOUT_CLASSIFICATION	4.903534949766782E-7	TEST
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999972769249122	WITHOUT_CLASSIFICATION	2.7230750876687573E-6	TEST
// verify the class	WITHOUT_CLASSIFICATION	0.9999996427850677	WITHOUT_CLASSIFICATION	3.572149322889893E-7	TEST
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999997394024984	WITHOUT_CLASSIFICATION	2.6059750154026316E-7	TEST
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999998956256557	WITHOUT_CLASSIFICATION	1.0437434434145126E-7	TEST
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999991110928163	WITHOUT_CLASSIFICATION	8.889071837959391E-7	TEST
// thread context	WITHOUT_CLASSIFICATION	0.9999997070800442	WITHOUT_CLASSIFICATION	2.9291995577558376E-7	TEST
// line number	WITHOUT_CLASSIFICATION	0.9999984253208621	WITHOUT_CLASSIFICATION	1.5746791378047242E-6	TEST
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.999999826290062	WITHOUT_CLASSIFICATION	1.7370993800337857E-7	TEST
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999998790948678	WITHOUT_CLASSIFICATION	1.2090513216000353E-7	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999998084301418	WITHOUT_CLASSIFICATION	1.9156985820420922E-7	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999994002923132	WITHOUT_CLASSIFICATION	5.997076868668968E-7	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999233436928	WITHOUT_CLASSIFICATION	7.665630714869209E-8	TEST
// block	WITHOUT_CLASSIFICATION	0.9999959557694422	WITHOUT_CLASSIFICATION	4.044230557719443E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999959557694422	WITHOUT_CLASSIFICATION	4.044230557719443E-6	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999995724130857	WITHOUT_CLASSIFICATION	4.2758691438070267E-7	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999998786018177	WITHOUT_CLASSIFICATION	1.2139818228503848E-7	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999963055943983	WITHOUT_CLASSIFICATION	3.6944056016599996E-6	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999907783099	WITHOUT_CLASSIFICATION	9.22169010329734E-9	TEST
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999999070212724	WITHOUT_CLASSIFICATION	9.29787276528347E-8	TEST
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999999856744822	WITHOUT_CLASSIFICATION	1.4325517679099863E-8	TEST
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999998380072065	WITHOUT_CLASSIFICATION	1.6199279356203937E-7	TEST
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999998666485774	WITHOUT_CLASSIFICATION	1.3335142263916443E-7	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999997773998209	WITHOUT_CLASSIFICATION	2.226001791174274E-7	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999997773998209	WITHOUT_CLASSIFICATION	2.226001791174274E-7	TEST
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999998230254681	WITHOUT_CLASSIFICATION	1.7697453178861097E-7	TEST
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999951657325918	WITHOUT_CLASSIFICATION	4.8342674080582004E-6	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999992407742236	WITHOUT_CLASSIFICATION	7.592257764486291E-7	TEST
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999982567732537	WITHOUT_CLASSIFICATION	1.7432267463102058E-6	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999982211139169	WITHOUT_CLASSIFICATION	1.7788860831175778E-6	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999982211139169	WITHOUT_CLASSIFICATION	1.7788860831175778E-6	TEST
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999998229980653	WITHOUT_CLASSIFICATION	1.7700193462340877E-7	TEST
// normal closure	WITHOUT_CLASSIFICATION	0.9999997029100633	WITHOUT_CLASSIFICATION	2.9708993674185417E-7	TEST
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999980064844065	WITHOUT_CLASSIFICATION	1.9935155934005904E-6	TEST
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9999998189387119	WITHOUT_CLASSIFICATION	1.810612881036636E-7	TEST
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999900223272549	WITHOUT_CLASSIFICATION	9.977672745163977E-6	TEST
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999997741261057	WITHOUT_CLASSIFICATION	2.2587389409942622E-7	TEST
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999983606321722	WITHOUT_CLASSIFICATION	1.6393678278721426E-6	TEST
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999996350486822	WITHOUT_CLASSIFICATION	3.649513178474016E-7	TEST
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9999932408983868	WITHOUT_CLASSIFICATION	6.759101613272835E-6	TEST
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9999986000302901	WITHOUT_CLASSIFICATION	1.3999697099054751E-6	TEST
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999985389632704	WITHOUT_CLASSIFICATION	1.4610367296084399E-6	TEST
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.999999798021789	WITHOUT_CLASSIFICATION	2.019782110113191E-7	TEST
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.999991766310304	WITHOUT_CLASSIFICATION	8.233689696030907E-6	TEST
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999998311359861	WITHOUT_CLASSIFICATION	1.6886401392535402E-7	TEST
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999969832581711	WITHOUT_CLASSIFICATION	3.0167418288945053E-6	TEST
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999967087404663	WITHOUT_CLASSIFICATION	3.2912595337377773E-6	TEST
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999997478389936	WITHOUT_CLASSIFICATION	2.521610063903146E-7	TEST
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.999999683266551	WITHOUT_CLASSIFICATION	3.167334490457036E-7	TEST
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999999811445285	WITHOUT_CLASSIFICATION	1.885547151578801E-8	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999951663961621	WITHOUT_CLASSIFICATION	4.833603837856841E-6	TEST
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999968740724439	WITHOUT_CLASSIFICATION	3.125927556200833E-6	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999996221408143	WITHOUT_CLASSIFICATION	3.778591856764842E-7	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999996221408143	WITHOUT_CLASSIFICATION	3.778591856764842E-7	TEST
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999950736750397	WITHOUT_CLASSIFICATION	4.926324960325707E-6	TEST
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999985365634083	WITHOUT_CLASSIFICATION	1.4634365916796102E-6	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.999998251116565	WITHOUT_CLASSIFICATION	1.7488834350394421E-6	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.999998251116565	WITHOUT_CLASSIFICATION	1.7488834350394421E-6	TEST
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9999791234469159	WITHOUT_CLASSIFICATION	2.0876553084121018E-5	TEST
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999985323093286	WITHOUT_CLASSIFICATION	1.4676906715202537E-6	TEST
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999862983357997	WITHOUT_CLASSIFICATION	1.3701664200306293E-5	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999983764609213	WITHOUT_CLASSIFICATION	1.6235390787438672E-6	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999983764609213	WITHOUT_CLASSIFICATION	1.6235390787438672E-6	TEST
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999928059185299	WITHOUT_CLASSIFICATION	7.1940814701558695E-6	TEST
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999983530897556	WITHOUT_CLASSIFICATION	1.6469102445193267E-6	TEST
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999995108277324	WITHOUT_CLASSIFICATION	4.891722675061031E-7	TEST
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.999999867396508	WITHOUT_CLASSIFICATION	1.326034919055737E-7	TEST
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999995280079111	WITHOUT_CLASSIFICATION	4.7199208880614644E-7	TEST
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999985958741945	WITHOUT_CLASSIFICATION	1.4041258055049398E-6	TEST
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999995821141144	WITHOUT_CLASSIFICATION	4.1788588562400054E-7	TEST
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999674556949228	WITHOUT_CLASSIFICATION	3.254430507712622E-5	TEST
// build each "when"	WITHOUT_CLASSIFICATION	0.9999984940199839	WITHOUT_CLASSIFICATION	1.505980016184359E-6	TEST
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999982920771476	WITHOUT_CLASSIFICATION	1.7079228523851485E-6	TEST
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999979523039209	WITHOUT_CLASSIFICATION	2.047696079219699E-6	TEST
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999984999052202	WITHOUT_CLASSIFICATION	1.5000947799296056E-6	TEST
// close it out	WITHOUT_CLASSIFICATION	0.9999991551965682	WITHOUT_CLASSIFICATION	8.448034318808271E-7	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999972873412583	WITHOUT_CLASSIFICATION	2.7126587417745676E-6	TEST
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9999998515712102	WITHOUT_CLASSIFICATION	1.484287898243525E-7	TEST
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999999598200959	WITHOUT_CLASSIFICATION	4.0179904173468624E-8	TEST
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999999002243656	WITHOUT_CLASSIFICATION	9.977563447137716E-8	TEST
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999892076828154	WITHOUT_CLASSIFICATION	1.0792317184577315E-5	TEST
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999833022818364	WITHOUT_CLASSIFICATION	1.669771816365251E-5	TEST
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999985430157107	WITHOUT_CLASSIFICATION	1.456984289372698E-6	TEST
// Instance method	WITHOUT_CLASSIFICATION	0.9999996029243071	WITHOUT_CLASSIFICATION	3.970756927651431E-7	TEST
// Class method	WITHOUT_CLASSIFICATION	0.9999993750753281	WITHOUT_CLASSIFICATION	6.249246719376979E-7	TEST
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999991678420728	WITHOUT_CLASSIFICATION	8.321579273008124E-7	TEST
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999985545212553	WITHOUT_CLASSIFICATION	1.4454787446952567E-6	TEST
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999158160316833	WITHOUT_CLASSIFICATION	8.418396831663119E-5	TEST
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999987282559176	WITHOUT_CLASSIFICATION	1.271744082404122E-6	TEST
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999973733130851	WITHOUT_CLASSIFICATION	2.6266869148640913E-6	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999999279973956	WITHOUT_CLASSIFICATION	7.200260448574992E-8	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999955330735572	WITHOUT_CLASSIFICATION	4.466926442818665E-6	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999993608506332	WITHOUT_CLASSIFICATION	6.391493667893442E-7	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999565716665	WITHOUT_CLASSIFICATION	4.342833352792806E-8	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999972873412583	WITHOUT_CLASSIFICATION	2.7126587417745676E-6	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999999279973956	WITHOUT_CLASSIFICATION	7.200260448574992E-8	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999955330735572	WITHOUT_CLASSIFICATION	4.466926442818665E-6	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999565716665	WITHOUT_CLASSIFICATION	4.342833352792806E-8	TEST
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999981862276565	WITHOUT_CLASSIFICATION	1.8137723434890582E-6	TEST
// Build the new module	WITHOUT_CLASSIFICATION	0.9999973028195961	WITHOUT_CLASSIFICATION	2.6971804038858876E-6	TEST
// Build the module body	WITHOUT_CLASSIFICATION	0.9999922861200704	WITHOUT_CLASSIFICATION	7.713879929545696E-6	TEST
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999876155960444	WITHOUT_CLASSIFICATION	1.2384403955502978E-5	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999948235298445	WITHOUT_CLASSIFICATION	5.176470155446489E-6	TEST
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999999015811176	WITHOUT_CLASSIFICATION	9.841888237585166E-8	TEST
// get attr	WITHOUT_CLASSIFICATION	0.9999963167973754	WITHOUT_CLASSIFICATION	3.6832026246073785E-6	TEST
// call operator	WITHOUT_CLASSIFICATION	0.9999986781224433	WITHOUT_CLASSIFICATION	1.3218775567137145E-6	TEST
// set attr	WITHOUT_CLASSIFICATION	0.9999984665209015	WITHOUT_CLASSIFICATION	1.5334790985586782E-6	TEST
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999997153371548	WITHOUT_CLASSIFICATION	2.846628452352458E-7	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999898637924373	WITHOUT_CLASSIFICATION	1.0136207562757572E-5	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999898637924373	WITHOUT_CLASSIFICATION	1.0136207562757572E-5	TEST
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999972621844984	WITHOUT_CLASSIFICATION	2.737815501594905E-6	TEST
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999990833902889	WITHOUT_CLASSIFICATION	9.166097111476703E-7	TEST
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999998421113656	WITHOUT_CLASSIFICATION	1.5788863434909572E-7	TEST
// Top-level script!	WITHOUT_CLASSIFICATION	0.999998418602266	WITHOUT_CLASSIFICATION	1.581397734030413E-6	TEST
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999998472914715	WITHOUT_CLASSIFICATION	1.5270852842652384E-7	TEST
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.999997694744594	WITHOUT_CLASSIFICATION	2.3052554060943645E-6	TEST
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999957670800901	WITHOUT_CLASSIFICATION	4.232919909998073E-6	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999379323615	WITHOUT_CLASSIFICATION	6.206763852692978E-8	TEST
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999995379721422	WITHOUT_CLASSIFICATION	4.6202785786279864E-7	TEST
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999935387	WITHOUT_CLASSIFICATION	6.461300060297424E-9	TEST
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999989518314777	WITHOUT_CLASSIFICATION	1.048168522330531E-6	TEST
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.999999978881279	WITHOUT_CLASSIFICATION	2.1118721027298508E-8	TEST
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999991439332786	WITHOUT_CLASSIFICATION	8.560667212980135E-7	TEST
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999998880625965	WITHOUT_CLASSIFICATION	1.1193740341995323E-7	TEST
// alu operations	WITHOUT_CLASSIFICATION	0.999999721120067	WITHOUT_CLASSIFICATION	2.788799330909284E-7	TEST
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999998672590774	WITHOUT_CLASSIFICATION	1.3274092264342065E-7	TEST
// closure instructions	WITHOUT_CLASSIFICATION	0.9999997178468011	WITHOUT_CLASSIFICATION	2.8215319887560017E-7	TEST
// eval instructions	WITHOUT_CLASSIFICATION	0.999999815408784	WITHOUT_CLASSIFICATION	1.845912160092072E-7	TEST
// def instructions	WITHOUT_CLASSIFICATION	0.9999997716037679	WITHOUT_CLASSIFICATION	2.2839623229732196E-7	TEST
// exception instructions	WITHOUT_CLASSIFICATION	0.9999997793148853	WITHOUT_CLASSIFICATION	2.2068511468589325E-7	TEST
// Loads	WITHOUT_CLASSIFICATION	0.9999960427617778	WITHOUT_CLASSIFICATION	3.9572382221575E-6	TEST
// Stores	WITHOUT_CLASSIFICATION	0.999997240046538	WITHOUT_CLASSIFICATION	2.759953461874707E-6	TEST
// jump and branch operations	WITHOUT_CLASSIFICATION	0.999999735307828	WITHOUT_CLASSIFICATION	2.6469217195961084E-7	TEST
// others	WITHOUT_CLASSIFICATION	0.9999973114412379	WITHOUT_CLASSIFICATION	2.68855876196233E-6	TEST
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999993372208548	WITHOUT_CLASSIFICATION	6.627791451868883E-7	TEST
// optimization guards	WITHOUT_CLASSIFICATION	0.9999992231772045	WITHOUT_CLASSIFICATION	7.768227956168057E-7	TEST
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999996802906361	WITHOUT_CLASSIFICATION	3.197093638655963E-7	TEST
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999999675532394	WITHOUT_CLASSIFICATION	3.244676069411779E-8	TEST
// scripts	WITHOUT_CLASSIFICATION	0.9999984569308856	WITHOUT_CLASSIFICATION	1.543069114321838E-6	TEST
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999989577165336	WITHOUT_CLASSIFICATION	1.042283466469537E-6	TEST
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999993025990516	WITHOUT_CLASSIFICATION	6.974009483507587E-7	TEST
// methods and closures	WITHOUT_CLASSIFICATION	0.9999996533056935	WITHOUT_CLASSIFICATION	3.4669430651916194E-7	TEST
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999997220874716	WITHOUT_CLASSIFICATION	2.779125284678557E-7	TEST
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999997688593345	WITHOUT_CLASSIFICATION	2.311406656040053E-7	TEST
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999996144240392	WITHOUT_CLASSIFICATION	3.8557596084158213E-7	TEST
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999981258868235	WITHOUT_CLASSIFICATION	1.8741131765553624E-6	TEST
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999998203232702	WITHOUT_CLASSIFICATION	1.796767297448159E-7	TEST
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999952206585684	WITHOUT_CLASSIFICATION	4.779341431657611E-6	TEST
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999996374787115	WITHOUT_CLASSIFICATION	3.625212885251118E-7	TEST
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999948262191007	WITHOUT_CLASSIFICATION	5.173780899237991E-6	TEST
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999990236494529	WITHOUT_CLASSIFICATION	9.763505471061757E-7	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999758822618796	WITHOUT_CLASSIFICATION	2.411773812037009E-5	TEST
// Readline	WITHOUT_CLASSIFICATION	0.999998353794581	WITHOUT_CLASSIFICATION	1.6462054189097938E-6	TEST
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999991615441626	WITHOUT_CLASSIFICATION	8.384558374886456E-7	TEST
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999996528649798	WITHOUT_CLASSIFICATION	3.4713502014304746E-7	TEST
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999996519290966	WITHOUT_CLASSIFICATION	3.480709034770802E-7	TEST
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9999999350128745	WITHOUT_CLASSIFICATION	6.49871254375667E-8	TEST
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999995754341975	WITHOUT_CLASSIFICATION	4.2456580244910567E-7	TEST
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.999999295457781	WITHOUT_CLASSIFICATION	7.045422191226583E-7	TEST
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.999999367243511	WITHOUT_CLASSIFICATION	6.327564890853046E-7	TEST
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999998012731763	WITHOUT_CLASSIFICATION	1.9872682362759154E-7	TEST
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.999999965601594	WITHOUT_CLASSIFICATION	3.4398406077852815E-8	TEST
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999957101197303	WITHOUT_CLASSIFICATION	4.28988026967721E-6	TEST
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999927465732069	WITHOUT_CLASSIFICATION	7.253426793175286E-6	TEST
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999981773394202	WITHOUT_CLASSIFICATION	1.8226605797532352E-6	TEST
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999980523742458	WITHOUT_CLASSIFICATION	1.947625754214855E-6	TEST
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999999214890614	WITHOUT_CLASSIFICATION	7.85109386670303E-8	TEST
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999990312439153	WITHOUT_CLASSIFICATION	9.687560846911356E-7	TEST
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9999991264966883	WITHOUT_CLASSIFICATION	8.735033117117253E-7	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999946622347393	WITHOUT_CLASSIFICATION	5.337765260676609E-6	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999946622347393	WITHOUT_CLASSIFICATION	5.337765260676609E-6	TEST
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999986296891537	WITHOUT_CLASSIFICATION	1.3703108463485854E-6	TEST
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999937440557234	WITHOUT_CLASSIFICATION	6.255944276624371E-6	TEST
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999976210100989	WITHOUT_CLASSIFICATION	2.3789899011940177E-6	TEST
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999980337987533	WITHOUT_CLASSIFICATION	1.9662012467079073E-6	TEST
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.999998610129737	WITHOUT_CLASSIFICATION	1.3898702629376275E-6	TEST
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999994367399406	WITHOUT_CLASSIFICATION	5.632600593563876E-7	TEST
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999176889277046	WITHOUT_CLASSIFICATION	8.231107229540494E-5	TEST
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999964476916924	WITHOUT_CLASSIFICATION	3.552308307577407E-6	TEST
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999983200833839	WITHOUT_CLASSIFICATION	1.6799166161855615E-6	TEST
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999998199564692	WITHOUT_CLASSIFICATION	1.800435307029587E-7	TEST
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999981544777948	WITHOUT_CLASSIFICATION	1.8455222051733213E-6	TEST
// class or module	WITHOUT_CLASSIFICATION	0.9999989524086612	WITHOUT_CLASSIFICATION	1.0475913387840318E-6	TEST
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999882976610289	WITHOUT_CLASSIFICATION	1.1702338971105783E-5	TEST
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999997076506456	WITHOUT_CLASSIFICATION	2.923493543610931E-7	TEST
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999965850298856	WITHOUT_CLASSIFICATION	3.4149701143121923E-6	TEST
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999833190691764	WITHOUT_CLASSIFICATION	1.6680930823702912E-5	TEST
// IN changed!	WITHOUT_CLASSIFICATION	0.9999905023782795	WITHOUT_CLASSIFICATION	9.497621720483024E-6	TEST
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999984485541287	WITHOUT_CLASSIFICATION	1.5514458713417292E-6	TEST
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999997877227096	WITHOUT_CLASSIFICATION	2.1227729048227855E-7	TEST
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999999066338228	WITHOUT_CLASSIFICATION	9.336617712673001E-8	TEST
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999962138100695	WITHOUT_CLASSIFICATION	3.786189930547059E-6	TEST
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999999201750913	WITHOUT_CLASSIFICATION	7.982490869570895E-8	TEST
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.999998055840409	WITHOUT_CLASSIFICATION	1.9441595910177754E-6	TEST
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999998726221256	WITHOUT_CLASSIFICATION	1.2737787437505765E-7	TEST
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999996886377542	WITHOUT_CLASSIFICATION	3.1136224569557043E-7	TEST
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999980456905728	WITHOUT_CLASSIFICATION	1.9543094272711984E-6	TEST
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999996041307094	WITHOUT_CLASSIFICATION	3.958692905288198E-7	TEST
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999999950959018	WITHOUT_CLASSIFICATION	4.9040983115209785E-9	TEST
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.999999781778025	WITHOUT_CLASSIFICATION	2.1822197501931973E-7	TEST
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999998290891804	WITHOUT_CLASSIFICATION	1.709108196504687E-7	TEST
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999994862328698	WITHOUT_CLASSIFICATION	5.137671301055935E-7	TEST
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999895617798692	WITHOUT_CLASSIFICATION	1.0438220130871E-5	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999860194442	WITHOUT_CLASSIFICATION	1.3980555865369459E-8	TEST
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999935315346072	WITHOUT_CLASSIFICATION	6.468465392870759E-6	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999860194442	WITHOUT_CLASSIFICATION	1.3980555865369459E-8	TEST
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999997519006893	WITHOUT_CLASSIFICATION	2.4809931063717587E-7	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999788301822627	WITHOUT_CLASSIFICATION	2.116981773721433E-5	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999788301822627	WITHOUT_CLASSIFICATION	2.116981773721433E-5	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999788301822627	WITHOUT_CLASSIFICATION	2.116981773721433E-5	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999995333944068	WITHOUT_CLASSIFICATION	4.6660559317955364E-7	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999995333944068	WITHOUT_CLASSIFICATION	4.6660559317955364E-7	TEST
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999909483086507	WITHOUT_CLASSIFICATION	9.051691349377113E-6	TEST
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999998281673734	WITHOUT_CLASSIFICATION	1.7183262657883367E-7	TEST
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999996626175512	WITHOUT_CLASSIFICATION	3.3738244879411743E-7	TEST
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9999988965160083	WITHOUT_CLASSIFICATION	1.1034839917796133E-6	TEST
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999958519194271	WITHOUT_CLASSIFICATION	4.1480805728561415E-6	TEST
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999972382210447	WITHOUT_CLASSIFICATION	2.761778955306458E-6	TEST
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999976256479344	WITHOUT_CLASSIFICATION	2.374352065705255E-6	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999982187879202	WITHOUT_CLASSIFICATION	1.7812120797382384E-6	TEST
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999999450297589	WITHOUT_CLASSIFICATION	5.497024113484593E-8	TEST
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999996691661476	WITHOUT_CLASSIFICATION	3.3083385247645286E-7	TEST
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999867303407866	WITHOUT_CLASSIFICATION	1.3269659213448232E-5	TEST
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999995721936614	WITHOUT_CLASSIFICATION	4.2780633862323045E-7	TEST
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.999999250890168	WITHOUT_CLASSIFICATION	7.491098320431546E-7	TEST
// root-level logic	WITHOUT_CLASSIFICATION	0.999998280703704	WITHOUT_CLASSIFICATION	1.71929629605024E-6	TEST
// root-level methods	WITHOUT_CLASSIFICATION	0.9999990569579222	WITHOUT_CLASSIFICATION	9.430420777327296E-7	TEST
// root-level classes	WITHOUT_CLASSIFICATION	0.9999989433288015	WITHOUT_CLASSIFICATION	1.056671198560922E-6	TEST
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999997342584562	WITHOUT_CLASSIFICATION	2.6574154369410177E-7	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999987328165375	WITHOUT_CLASSIFICATION	1.267183462543582E-6	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999987328165375	WITHOUT_CLASSIFICATION	1.267183462543582E-6	TEST
// receiver	WITHOUT_CLASSIFICATION	0.9999978090607335	WITHOUT_CLASSIFICATION	2.190939266544167E-6	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999992953981454	WITHOUT_CLASSIFICATION	7.046018545590212E-7	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999992953981454	WITHOUT_CLASSIFICATION	7.046018545590212E-7	TEST
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999905908599426	WITHOUT_CLASSIFICATION	9.409140057402595E-6	TEST
// Object[] args	WITHOUT_CLASSIFICATION	0.9999992380352996	WITHOUT_CLASSIFICATION	7.619647004605939E-7	TEST
// load handle	WITHOUT_CLASSIFICATION	0.9999963584069984	WITHOUT_CLASSIFICATION	3.6415930015009945E-6	TEST
// args array	WITHOUT_CLASSIFICATION	0.9999944440931045	WITHOUT_CLASSIFICATION	5.555906895528164E-6	TEST
// i'th argument	WITHOUT_CLASSIFICATION	0.9999986470221849	WITHOUT_CLASSIFICATION	1.3529778151179977E-6	TEST
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999998190110647	WITHOUT_CLASSIFICATION	1.8098893530577427E-7	TEST
// Object arg0	WITHOUT_CLASSIFICATION	0.9999989390006989	WITHOUT_CLASSIFICATION	1.060999301068005E-6	TEST
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999995328294183	WITHOUT_CLASSIFICATION	4.671705817095735E-7	TEST
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999978952812641	WITHOUT_CLASSIFICATION	2.104718735812317E-6	TEST
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999985976140146	WITHOUT_CLASSIFICATION	1.4023859854730215E-6	TEST
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999977317233604	WITHOUT_CLASSIFICATION	2.268276639538594E-6	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999985202197633	WITHOUT_CLASSIFICATION	1.4797802366144143E-6	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999976609598361	WITHOUT_CLASSIFICATION	2.3390401638341145E-6	TEST
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999998070588278	WITHOUT_CLASSIFICATION	1.9294117210452267E-7	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999982187879202	WITHOUT_CLASSIFICATION	1.7812120797382384E-6	TEST
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999220224979564	WITHOUT_CLASSIFICATION	7.797750204363571E-5	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999974729330645	WITHOUT_CLASSIFICATION	2.527066935370982E-6	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999989949873549	WITHOUT_CLASSIFICATION	1.0050126451258523E-6	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999989949873549	WITHOUT_CLASSIFICATION	1.0050126451258523E-6	TEST
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999982920762761	WITHOUT_CLASSIFICATION	1.7079237239661476E-6	TEST
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999894010913283	WITHOUT_CLASSIFICATION	1.059890867175068E-5	TEST
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.999999672627293	WITHOUT_CLASSIFICATION	3.273727070693711E-7	TEST
// restore position	WITHOUT_CLASSIFICATION	0.9999960651042961	WITHOUT_CLASSIFICATION	3.934895703922708E-6	TEST
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999999219465388	WITHOUT_CLASSIFICATION	7.805346123774354E-8	TEST
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999972253947536	WITHOUT_CLASSIFICATION	2.77460524631567E-6	TEST
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999999681742245	WITHOUT_CLASSIFICATION	3.182577536520893E-8	TEST
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9999984006742869	WITHOUT_CLASSIFICATION	1.5993257130993452E-6	TEST
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999996767165105	WITHOUT_CLASSIFICATION	3.232834896166852E-7	TEST
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999998597510187	WITHOUT_CLASSIFICATION	1.4024898142564913E-7	TEST
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999985708589649	WITHOUT_CLASSIFICATION	1.4291410350694632E-6	TEST
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999967347578032	WITHOUT_CLASSIFICATION	3.265242196895064E-6	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999114948480926	WITHOUT_CLASSIFICATION	8.850515190748315E-5	TEST
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999993272275332	WITHOUT_CLASSIFICATION	6.727724668428144E-7	TEST
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999997551246934	WITHOUT_CLASSIFICATION	2.4487530654853893E-7	TEST
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999988786754473	WITHOUT_CLASSIFICATION	1.121324552624415E-6	TEST
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999971075814744	WITHOUT_CLASSIFICATION	2.892418525625426E-6	TEST
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999915045632963	WITHOUT_CLASSIFICATION	8.495436703758322E-6	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.999996859198471	WITHOUT_CLASSIFICATION	3.1408015289870357E-6	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999998296290216	WITHOUT_CLASSIFICATION	1.7037097839220993E-7	TEST
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999999184971952	WITHOUT_CLASSIFICATION	8.150280484200824E-8	TEST
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999999446365145	WITHOUT_CLASSIFICATION	5.536348546781694E-8	TEST
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999949995615972	WITHOUT_CLASSIFICATION	5.000438402795948E-6	TEST
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999999822705319	WITHOUT_CLASSIFICATION	1.772946813353066E-8	TEST
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999998668176445	WITHOUT_CLASSIFICATION	1.3318235561130683E-7	TEST
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999943878409422	WITHOUT_CLASSIFICATION	5.6121590577726265E-6	TEST
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999611777617538	WITHOUT_CLASSIFICATION	3.882223824621198E-5	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999993654247876	WITHOUT_CLASSIFICATION	6.345752123807112E-7	TEST
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999992495679688	WITHOUT_CLASSIFICATION	7.504320311020996E-7	TEST
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999938725797483	WITHOUT_CLASSIFICATION	6.127420251832876E-6	TEST
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999995504556598	WITHOUT_CLASSIFICATION	4.495443402079375E-7	TEST
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999997101593401	WITHOUT_CLASSIFICATION	2.898406598912689E-7	TEST
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9998495386129257	WITHOUT_CLASSIFICATION	1.5046138707435467E-4	TEST
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999985396258037	WITHOUT_CLASSIFICATION	1.4603741964051562E-6	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999882278958623	WITHOUT_CLASSIFICATION	1.177210413774383E-5	TEST
// $blah	WITHOUT_CLASSIFICATION	0.9999952652318945	WITHOUT_CLASSIFICATION	4.7347681055093105E-6	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999993654247876	WITHOUT_CLASSIFICATION	6.345752123807112E-7	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999980240988173	WITHOUT_CLASSIFICATION	1.9759011825692805E-6	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999882278958623	WITHOUT_CLASSIFICATION	1.177210413774383E-5	TEST
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999995394498818	WITHOUT_CLASSIFICATION	4.605501180895895E-7	TEST
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999994991421296	WITHOUT_CLASSIFICATION	5.008578704363508E-7	TEST
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.999987972849496	WITHOUT_CLASSIFICATION	1.2027150503960337E-5	TEST
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999987600719275	WITHOUT_CLASSIFICATION	1.2399280724813078E-6	TEST
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999968749210428	WITHOUT_CLASSIFICATION	3.1250789571025932E-6	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999982438982404	WITHOUT_CLASSIFICATION	1.756101759542464E-6	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999982438982404	WITHOUT_CLASSIFICATION	1.756101759542464E-6	TEST
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9999985010884271	WITHOUT_CLASSIFICATION	1.4989115727822491E-6	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999998454871439	WITHOUT_CLASSIFICATION	1.5451285617103483E-7	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999997569683897	WITHOUT_CLASSIFICATION	2.4303161020900553E-7	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999997569683897	WITHOUT_CLASSIFICATION	2.4303161020900553E-7	TEST
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999989276871604	WITHOUT_CLASSIFICATION	1.0723128395547998E-6	TEST
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9997103519372885	WITHOUT_CLASSIFICATION	2.896480627114854E-4	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9998800329158075	WITHOUT_CLASSIFICATION	1.1996708419247345E-4	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9998800329158075	WITHOUT_CLASSIFICATION	1.1996708419247345E-4	TEST
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999956904241647	WITHOUT_CLASSIFICATION	4.309575835320709E-6	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999957964742677	WITHOUT_CLASSIFICATION	4.203525732283468E-6	TEST
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999970152065983	WITHOUT_CLASSIFICATION	2.984793401531825E-6	TEST
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999997556335761	WITHOUT_CLASSIFICATION	2.443664239453429E-7	TEST
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999996428817415	WITHOUT_CLASSIFICATION	3.5711825842921345E-7	TEST
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999871107005077	WITHOUT_CLASSIFICATION	1.2889299492362859E-5	TEST
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999998566110798	WITHOUT_CLASSIFICATION	1.4338892019907235E-7	TEST
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.999999529530439	WITHOUT_CLASSIFICATION	4.704695609518488E-7	TEST
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.999998120249529	WITHOUT_CLASSIFICATION	1.8797504709816302E-6	TEST
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999960647797169	WITHOUT_CLASSIFICATION	3.93522028317149E-6	TEST
// host and port given	WITHOUT_CLASSIFICATION	0.9999960516102588	WITHOUT_CLASSIFICATION	3.948389741154249E-6	TEST
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999975753694854	WITHOUT_CLASSIFICATION	2.4246305146748002E-6	TEST
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999989895176288	WITHOUT_CLASSIFICATION	1.010482371192472E-6	TEST
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999813023906597	WITHOUT_CLASSIFICATION	1.8697609340241676E-5	TEST
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999998824315525	WITHOUT_CLASSIFICATION	1.1756844755367749E-7	TEST
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999997477700685	WITHOUT_CLASSIFICATION	2.5222993159468663E-7	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999571168680143	WITHOUT_CLASSIFICATION	4.2883131985637984E-5	TEST
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999988500446945	WITHOUT_CLASSIFICATION	1.1499553056347984E-6	TEST
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999997808645538	WITHOUT_CLASSIFICATION	2.1913544610371107E-7	TEST
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.999996809043921	WITHOUT_CLASSIFICATION	3.19095607890315E-6	TEST
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999994740385763	WITHOUT_CLASSIFICATION	5.259614236568794E-7	TEST
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999993590163037	WITHOUT_CLASSIFICATION	6.40983696368599E-7	TEST
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999996995638847	WITHOUT_CLASSIFICATION	3.004361154007146E-7	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.9999892365182543	WITHOUT_CLASSIFICATION	1.0763481745691509E-5	TEST
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.999986684340426	WITHOUT_CLASSIFICATION	1.3315659574043383E-5	TEST
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999896378353321	WITHOUT_CLASSIFICATION	1.0362164667856514E-5	TEST
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999988350194712	WITHOUT_CLASSIFICATION	1.1649805287262064E-6	TEST
// line 323	WITHOUT_CLASSIFICATION	0.9999959166733263	WITHOUT_CLASSIFICATION	4.083326673684196E-6	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999998404771755	WITHOUT_CLASSIFICATION	1.5952282463104962E-7	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999998404771755	WITHOUT_CLASSIFICATION	1.5952282463104962E-7	TEST
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999991060910567	WITHOUT_CLASSIFICATION	8.939089433965596E-7	TEST
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999988714677014	WITHOUT_CLASSIFICATION	1.1285322985793948E-6	TEST
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999864762873968	WITHOUT_CLASSIFICATION	1.3523712603264378E-5	TEST
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999963971402048	WITHOUT_CLASSIFICATION	3.602859795178943E-6	TEST
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999809353233019	WITHOUT_CLASSIFICATION	1.9064676698074744E-5	TEST
// RubySocket	WITHOUT_CLASSIFICATION	0.9999978505559366	WITHOUT_CLASSIFICATION	2.1494440633663883E-6	TEST
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999952702687263	WITHOUT_CLASSIFICATION	4.729731273702652E-6	TEST
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999988513619191	WITHOUT_CLASSIFICATION	1.1486380807926083E-6	TEST
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999977767482927	WITHOUT_CLASSIFICATION	2.223251707327243E-6	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999986148279171	WITHOUT_CLASSIFICATION	1.3851720829072719E-6	TEST
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999990991156049	WITHOUT_CLASSIFICATION	9.008843950629284E-7	TEST
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999987899298964	WITHOUT_CLASSIFICATION	1.2100701035609975E-6	TEST
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9999948111596724	WITHOUT_CLASSIFICATION	5.188840327571431E-6	TEST
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999993825634564	WITHOUT_CLASSIFICATION	6.174365436318415E-7	TEST
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999998831078197	WITHOUT_CLASSIFICATION	1.168921803291036E-7	TEST
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999997143766106	WITHOUT_CLASSIFICATION	2.856233893586875E-7	TEST
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999999447213728	WITHOUT_CLASSIFICATION	5.5278627143849897E-8	TEST
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999997542716081	WITHOUT_CLASSIFICATION	2.4572839178893194E-7	TEST
// be dead	WITHOUT_CLASSIFICATION	0.9999982143895844	WITHOUT_CLASSIFICATION	1.7856104155551146E-6	TEST
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999995194154263	WITHOUT_CLASSIFICATION	4.805845737202099E-7	TEST
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999990528884082	WITHOUT_CLASSIFICATION	9.471115918119328E-7	TEST
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999951455777585	WITHOUT_CLASSIFICATION	4.854422241433476E-6	TEST
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999918806764592	WITHOUT_CLASSIFICATION	8.119323540792547E-6	TEST
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.999999770046551	WITHOUT_CLASSIFICATION	2.2995344897774144E-7	TEST
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999986985207562	WITHOUT_CLASSIFICATION	1.3014792437927849E-6	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999973384735618	WITHOUT_CLASSIFICATION	2.6615264381515997E-6	TEST
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999998270399597	WITHOUT_CLASSIFICATION	1.7296004033953527E-7	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999991460863752	WITHOUT_CLASSIFICATION	8.539136247788692E-7	TEST
// main body	WITHOUT_CLASSIFICATION	0.9999973610992858	WITHOUT_CLASSIFICATION	2.6389007143095157E-6	TEST
// return jump handling	WITHOUT_CLASSIFICATION	0.9999991155279065	WITHOUT_CLASSIFICATION	8.844720934689537E-7	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999896699761723	WITHOUT_CLASSIFICATION	1.0330023827629363E-5	TEST
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999984142369505	WITHOUT_CLASSIFICATION	1.5857630495766169E-6	TEST
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999982397731919	WITHOUT_CLASSIFICATION	1.7602268081505573E-6	TEST
// clear the redo	WITHOUT_CLASSIFICATION	0.9999985153013823	WITHOUT_CLASSIFICATION	1.4846986177293533E-6	TEST
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999984437977125	WITHOUT_CLASSIFICATION	1.556202287381527E-6	TEST
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999981486037767	WITHOUT_CLASSIFICATION	1.8513962233798724E-6	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999932357800341	WITHOUT_CLASSIFICATION	6.764219965974955E-6	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999991195530082	WITHOUT_CLASSIFICATION	8.804469916856736E-7	TEST
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999996881627469	WITHOUT_CLASSIFICATION	3.118372531415749E-7	TEST
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999989163151736	WITHOUT_CLASSIFICATION	1.0836848264686304E-6	TEST
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999961005982234	WITHOUT_CLASSIFICATION	3.899401776624717E-6	TEST
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999994060386623	WITHOUT_CLASSIFICATION	5.939613376351743E-7	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999999762590255	WITHOUT_CLASSIFICATION	2.3740974611275947E-8	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999999762590255	WITHOUT_CLASSIFICATION	2.3740974611275947E-8	TEST
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999986345284356	WITHOUT_CLASSIFICATION	1.3654715643241168E-6	TEST
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999998367090169	WITHOUT_CLASSIFICATION	1.6329098319103028E-7	TEST
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999785095913182	WITHOUT_CLASSIFICATION	2.149040868188322E-5	TEST
// return	WITHOUT_CLASSIFICATION	0.9999985031981673	WITHOUT_CLASSIFICATION	1.4968018326809206E-6	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999988624135263	WITHOUT_CLASSIFICATION	1.1375864737156874E-6	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999982242957037	WITHOUT_CLASSIFICATION	1.7757042963100855E-6	TEST
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999990668952643	WITHOUT_CLASSIFICATION	9.331047355797703E-7	TEST
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999995301755678	WITHOUT_CLASSIFICATION	4.6982443219257526E-7	TEST
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999997956989082	WITHOUT_CLASSIFICATION	2.0430109174084705E-7	TEST
// tc	WITHOUT_CLASSIFICATION	0.9999941236571879	WITHOUT_CLASSIFICATION	5.876342812067459E-6	TEST
// self // name	WITHOUT_CLASSIFICATION	0.9999991573560028	WITHOUT_CLASSIFICATION	8.426439971201323E-7	TEST
// no args	WITHOUT_CLASSIFICATION	0.9999990569634205	WITHOUT_CLASSIFICATION	9.430365795591299E-7	TEST
// variable args with block	WITHOUT_CLASSIFICATION	0.9999993537979683	WITHOUT_CLASSIFICATION	6.462020316466209E-7	TEST
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999997010566819	WITHOUT_CLASSIFICATION	2.9894331810404203E-7	TEST
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999994831290202	WITHOUT_CLASSIFICATION	5.168709797701901E-7	TEST
// one arg with block	WITHOUT_CLASSIFICATION	0.9999993287064776	WITHOUT_CLASSIFICATION	6.712935225491295E-7	TEST
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999996357849379	WITHOUT_CLASSIFICATION	3.6421506206535653E-7	TEST
// two args with block	WITHOUT_CLASSIFICATION	0.9999982856645812	WITHOUT_CLASSIFICATION	1.714335418933352E-6	TEST
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999994879428933	WITHOUT_CLASSIFICATION	5.120571067572951E-7	TEST
// three args with block	WITHOUT_CLASSIFICATION	0.9999985512530172	WITHOUT_CLASSIFICATION	1.4487469827712722E-6	TEST
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999995847777572	WITHOUT_CLASSIFICATION	4.152222428528281E-7	TEST
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999969851649927	WITHOUT_CLASSIFICATION	3.01483500729462E-6	TEST
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999960894310115	WITHOUT_CLASSIFICATION	3.910568988561148E-6	TEST
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999970629087938	WITHOUT_CLASSIFICATION	2.9370912061444186E-6	TEST
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999997603230204	WITHOUT_CLASSIFICATION	2.396769795397549E-7	TEST
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999995123574495	WITHOUT_CLASSIFICATION	4.876425503920324E-7	TEST
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999996520036848	WITHOUT_CLASSIFICATION	3.479963151470345E-7	TEST
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999990186621542	WITHOUT_CLASSIFICATION	9.813378457967374E-7	TEST
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999998208885519	WITHOUT_CLASSIFICATION	1.7911144823162236E-7	TEST
// static invocation	WITHOUT_CLASSIFICATION	0.9999995058920881	WITHOUT_CLASSIFICATION	4.941079119396519E-7	TEST
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999995292759474	WITHOUT_CLASSIFICATION	4.707240526610288E-7	TEST
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.999999387099344	WITHOUT_CLASSIFICATION	6.129006560041502E-7	TEST
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999987970439581	WITHOUT_CLASSIFICATION	1.2029560418095507E-6	TEST
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999841568121949	WITHOUT_CLASSIFICATION	1.584318780506443E-5	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999991195530082	WITHOUT_CLASSIFICATION	8.804469916856736E-7	TEST
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999999547634568	WITHOUT_CLASSIFICATION	4.5236543047502474E-8	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999998234055074	WITHOUT_CLASSIFICATION	1.765944926236899E-7	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999998234055074	WITHOUT_CLASSIFICATION	1.765944926236899E-7	TEST
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.999997373782805	WITHOUT_CLASSIFICATION	2.6262171950263374E-6	TEST
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999999182359612	WITHOUT_CLASSIFICATION	8.176403879702606E-8	TEST
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999994841054396	WITHOUT_CLASSIFICATION	5.158945604663353E-7	TEST
// never reached	WITHOUT_CLASSIFICATION	0.9999990147280716	WITHOUT_CLASSIFICATION	9.852719283048704E-7	TEST
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9999847950072335	WITHOUT_CLASSIFICATION	1.520499276660232E-5	TEST
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.999987075637421	WITHOUT_CLASSIFICATION	1.2924362578931772E-5	TEST
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9999904719055973	WITHOUT_CLASSIFICATION	9.528094402693263E-6	TEST
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9999835832495528	WITHOUT_CLASSIFICATION	1.6416750447174404E-5	TEST
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9999930191395857	WITHOUT_CLASSIFICATION	6.980860414396426E-6	TEST
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9999951503857673	WITHOUT_CLASSIFICATION	4.849614232786102E-6	TEST
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.999991132775277	WITHOUT_CLASSIFICATION	8.867224723021555E-6	TEST
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9999871105159829	WITHOUT_CLASSIFICATION	1.2889484017055873E-5	TEST
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999875652672601	WITHOUT_CLASSIFICATION	1.2434732739914082E-5	TEST
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999995449486503	WITHOUT_CLASSIFICATION	4.5505134965056197E-7	TEST
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.999999922462816	WITHOUT_CLASSIFICATION	7.753718409787758E-8	TEST
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.999999935039565	WITHOUT_CLASSIFICATION	6.496043502852758E-8	TEST
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999744562092292	WITHOUT_CLASSIFICATION	2.554379077088824E-5	TEST
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9999617341921412	WITHOUT_CLASSIFICATION	3.826580785871683E-5	TEST
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999870154316052	WITHOUT_CLASSIFICATION	1.2984568394833448E-5	TEST
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999909795842665	WITHOUT_CLASSIFICATION	9.020415733389735E-6	TEST
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9999845663414149	WITHOUT_CLASSIFICATION	1.5433658585176096E-5	TEST
// promise to implement three	WITHOUT_CLASSIFICATION	0.9999882085570648	WITHOUT_CLASSIFICATION	1.1791442935060638E-5	TEST
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999992972590297	WITHOUT_CLASSIFICATION	7.027409704139718E-7	TEST
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999997872741165	WITHOUT_CLASSIFICATION	2.1272588345152364E-7	TEST
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999999573052947	WITHOUT_CLASSIFICATION	4.26947052435382E-8	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999980434009139	WITHOUT_CLASSIFICATION	1.9565990859542766E-6	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999910970821947	WITHOUT_CLASSIFICATION	8.902917805382639E-6	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999996866510276	WITHOUT_CLASSIFICATION	3.133489724489901E-7	TEST
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999977030523244	WITHOUT_CLASSIFICATION	2.29694767562429E-6	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999995387132571	WITHOUT_CLASSIFICATION	4.6128674291117485E-7	TEST
// start setup method	WITHOUT_CLASSIFICATION	0.9999991970600984	WITHOUT_CLASSIFICATION	8.029399016450628E-7	TEST
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999990373519362	WITHOUT_CLASSIFICATION	9.626480639006769E-7	TEST
// set Ruby	WITHOUT_CLASSIFICATION	0.9999970210087402	WITHOUT_CLASSIFICATION	2.978991259861163E-6	TEST
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999994349477955	WITHOUT_CLASSIFICATION	5.650522045621582E-7	TEST
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999995486907719	WITHOUT_CLASSIFICATION	4.513092280486763E-7	TEST
// get current context	WITHOUT_CLASSIFICATION	0.9999991472033014	WITHOUT_CLASSIFICATION	8.527966987318296E-7	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999996350146506	WITHOUT_CLASSIFICATION	3.649853493017484E-7	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999980434009139	WITHOUT_CLASSIFICATION	1.9565990859542766E-6	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999910970821947	WITHOUT_CLASSIFICATION	8.902917805382639E-6	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999996866510276	WITHOUT_CLASSIFICATION	3.133489724489901E-7	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999995387132571	WITHOUT_CLASSIFICATION	4.6128674291117485E-7	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999992928699195	WITHOUT_CLASSIFICATION	7.07130080582044E-7	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999990290284566	WITHOUT_CLASSIFICATION	9.70971543354381E-7	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999994763349234	WITHOUT_CLASSIFICATION	5.236650766950888E-7	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999985409148993	WITHOUT_CLASSIFICATION	1.4590851007197193E-6	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.999999225039675	WITHOUT_CLASSIFICATION	7.74960324924662E-7	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999997497191241	WITHOUT_CLASSIFICATION	2.5028087596871223E-7	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.9999996001061089	WITHOUT_CLASSIFICATION	3.9989389102659747E-7	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999992876435374	WITHOUT_CLASSIFICATION	7.123564626416303E-7	TEST
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999996217842078	WITHOUT_CLASSIFICATION	3.7821579215541974E-7	TEST
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999978732288689	WITHOUT_CLASSIFICATION	2.126771131051986E-6	TEST
// prepare temp locals	WITHOUT_CLASSIFICATION	0.999997936115916	WITHOUT_CLASSIFICATION	2.0638840839703663E-6	TEST
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999842208399891	WITHOUT_CLASSIFICATION	1.577916001095022E-5	TEST
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999890234479699	WITHOUT_CLASSIFICATION	1.0976552030061356E-5	TEST
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999985087164521	WITHOUT_CLASSIFICATION	1.4912835477994076E-6	TEST
// store it	WITHOUT_CLASSIFICATION	0.9999962385271333	WITHOUT_CLASSIFICATION	3.761472866742783E-6	TEST
// end of try block	WITHOUT_CLASSIFICATION	0.9999995212595404	WITHOUT_CLASSIFICATION	4.787404595276345E-7	TEST
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999975324107523	WITHOUT_CLASSIFICATION	2.4675892476330436E-6	TEST
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999991905395326	WITHOUT_CLASSIFICATION	8.094604674879638E-7	TEST
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999999351387089	WITHOUT_CLASSIFICATION	6.48612910640203E-8	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999996350146506	WITHOUT_CLASSIFICATION	3.649853493017484E-7	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999990290284566	WITHOUT_CLASSIFICATION	9.70971543354381E-7	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999994763349234	WITHOUT_CLASSIFICATION	5.236650766950888E-7	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.999999225039675	WITHOUT_CLASSIFICATION	7.74960324924662E-7	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999997497191241	WITHOUT_CLASSIFICATION	2.5028087596871223E-7	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.9999996001061089	WITHOUT_CLASSIFICATION	3.9989389102659747E-7	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999992876435374	WITHOUT_CLASSIFICATION	7.123564626416303E-7	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999995683731744	WITHOUT_CLASSIFICATION	4.316268255692278E-7	TEST
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999986715156021	WITHOUT_CLASSIFICATION	1.3284843978660822E-6	TEST
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999986163595468	WITHOUT_CLASSIFICATION	1.3836404532807663E-6	TEST
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.999999951431412	WITHOUT_CLASSIFICATION	4.85685880767665E-8	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999862309266951	WITHOUT_CLASSIFICATION	1.3769073304792923E-5	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999862309266951	WITHOUT_CLASSIFICATION	1.3769073304792923E-5	TEST
// setup the class	WITHOUT_CLASSIFICATION	0.9999995370420441	WITHOUT_CLASSIFICATION	4.629579558832223E-7	TEST
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999997327889455	WITHOUT_CLASSIFICATION	2.6721105457604776E-7	TEST
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999997646205493	WITHOUT_CLASSIFICATION	2.3537945066918927E-7	TEST
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999992759115763	WITHOUT_CLASSIFICATION	7.24088423539138E-7	TEST
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999988872335807	WITHOUT_CLASSIFICATION	1.1127664193177826E-6	TEST
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999973110358817	WITHOUT_CLASSIFICATION	2.688964118338571E-6	TEST
// set the full name	WITHOUT_CLASSIFICATION	0.9999974852256469	WITHOUT_CLASSIFICATION	2.5147743530849647E-6	TEST
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999995688950836	WITHOUT_CLASSIFICATION	4.311049163576139E-7	TEST
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999995022167375	WITHOUT_CLASSIFICATION	4.977832624953556E-7	TEST
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999999100827829	WITHOUT_CLASSIFICATION	8.991721707521007E-8	TEST
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999993479806965	WITHOUT_CLASSIFICATION	6.520193034894521E-7	TEST
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999998415052925	WITHOUT_CLASSIFICATION	1.5849470755700496E-7	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999939645857642	WITHOUT_CLASSIFICATION	6.035414235870662E-6	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999998376096336	WITHOUT_CLASSIFICATION	1.6239036634221104E-7	TEST
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999998741729	WITHOUT_CLASSIFICATION	1.258270999410442E-7	TEST
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999997869280814	WITHOUT_CLASSIFICATION	2.1307191858533482E-7	TEST
// add all static variables	WITHOUT_CLASSIFICATION	0.9999994953762963	WITHOUT_CLASSIFICATION	5.046237037359793E-7	TEST
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999993275102268	WITHOUT_CLASSIFICATION	6.724897732002756E-7	TEST
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.999999914241361	WITHOUT_CLASSIFICATION	8.575863901347523E-8	TEST
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999999658971748	WITHOUT_CLASSIFICATION	3.410282512635036E-8	TEST
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9999970779120896	WITHOUT_CLASSIFICATION	2.9220879103759906E-6	TEST
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999995641632632	WITHOUT_CLASSIFICATION	4.358367368743012E-7	TEST
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999991531792654	WITHOUT_CLASSIFICATION	8.468207345771322E-7	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9986789099134804	WITHOUT_CLASSIFICATION	0.0013210900865195517	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999995826495851	WITHOUT_CLASSIFICATION	4.173504148696936E-7	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999996744340636	WITHOUT_CLASSIFICATION	3.2556593639584713E-7	TEST
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999999726815066	WITHOUT_CLASSIFICATION	2.7318493285402377E-8	TEST
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999985871062252	WITHOUT_CLASSIFICATION	1.412893774748391E-6	TEST
// line 326	WITHOUT_CLASSIFICATION	0.999995998172307	WITHOUT_CLASSIFICATION	4.001827693074317E-6	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999995826495851	WITHOUT_CLASSIFICATION	4.173504148696936E-7	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999996744340636	WITHOUT_CLASSIFICATION	3.2556593639584713E-7	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999998376096336	WITHOUT_CLASSIFICATION	1.6239036634221104E-7	TEST
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999998287654122	WITHOUT_CLASSIFICATION	1.7123458794054988E-7	TEST
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999976691954382	WITHOUT_CLASSIFICATION	2.330804561767501E-6	TEST
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999906450800419	WITHOUT_CLASSIFICATION	9.354919958102397E-6	TEST
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999999707205355	WITHOUT_CLASSIFICATION	2.9279464528025327E-8	TEST
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999992923080145	WITHOUT_CLASSIFICATION	7.076919854786976E-7	TEST
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999730779550756	WITHOUT_CLASSIFICATION	2.6922044924393755E-5	TEST
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.999996269413015	WITHOUT_CLASSIFICATION	3.730586985018809E-6	TEST
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999989768350933	WITHOUT_CLASSIFICATION	1.0231649066084062E-6	TEST
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9999991212471001	WITHOUT_CLASSIFICATION	8.787528998735764E-7	TEST
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999989661252682	WITHOUT_CLASSIFICATION	1.0338747319062739E-6	TEST
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.999999891659401	WITHOUT_CLASSIFICATION	1.0834059900520841E-7	TEST
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999918182233317	WITHOUT_CLASSIFICATION	8.181776668336363E-6	TEST
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999994871406407	WITHOUT_CLASSIFICATION	5.128593593467305E-7	TEST
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999995977247347	WITHOUT_CLASSIFICATION	4.0227526527673874E-7	TEST
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999999796413084	WITHOUT_CLASSIFICATION	2.0358691730908874E-8	TEST
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999732411664558	WITHOUT_CLASSIFICATION	2.6758833544214175E-5	TEST
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999993342135585	WITHOUT_CLASSIFICATION	6.657864414675356E-7	TEST
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9999980112900091	WITHOUT_CLASSIFICATION	1.988709990954514E-6	TEST
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999998332836579	WITHOUT_CLASSIFICATION	1.667163420486496E-7	TEST
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999991951189287	WITHOUT_CLASSIFICATION	8.048810712962087E-7	TEST
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999999197351669	WITHOUT_CLASSIFICATION	8.026483305118373E-8	TEST
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999999524741072	WITHOUT_CLASSIFICATION	4.752589265993755E-8	TEST
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999989656607333	WITHOUT_CLASSIFICATION	1.0343392666592997E-6	TEST
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999999953722043	WITHOUT_CLASSIFICATION	4.627795683889615E-9	TEST
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999998727330683	WITHOUT_CLASSIFICATION	1.272669316920588E-7	TEST
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999999148377525	WITHOUT_CLASSIFICATION	8.516224751039241E-8	TEST
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9940716904847791	WITHOUT_CLASSIFICATION	0.005928309515220919	TEST
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9999998404947407	WITHOUT_CLASSIFICATION	1.5950525939017324E-7	TEST
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999999425277947	WITHOUT_CLASSIFICATION	5.747220529452083E-8	TEST
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999998561061293	WITHOUT_CLASSIFICATION	1.4389387060254812E-7	TEST
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999995218150516	WITHOUT_CLASSIFICATION	4.781849483788465E-7	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999829026280365	WITHOUT_CLASSIFICATION	1.7097371963544166E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999829026280365	WITHOUT_CLASSIFICATION	1.7097371963544166E-5	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999939645857642	WITHOUT_CLASSIFICATION	6.035414235870662E-6	TEST
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999999252368202	WITHOUT_CLASSIFICATION	7.476317974543838E-8	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999991993144556	WITHOUT_CLASSIFICATION	8.006855443119963E-7	TEST
// weakly reserved names	WITHOUT_CLASSIFICATION	0.999998432640357	WITHOUT_CLASSIFICATION	1.5673596429842054E-6	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999434607136	WITHOUT_CLASSIFICATION	5.6539286324671606E-8	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999434607136	WITHOUT_CLASSIFICATION	5.6539286324671606E-8	TEST
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999434926883	WITHOUT_CLASSIFICATION	5.6507311612448146E-8	TEST
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999999370488578	WITHOUT_CLASSIFICATION	6.295114227698123E-8	TEST
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.999999724568618	WITHOUT_CLASSIFICATION	2.754313819587486E-7	TEST
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999984331298253	WITHOUT_CLASSIFICATION	1.5668701748061748E-6	TEST
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999985968195405	WITHOUT_CLASSIFICATION	1.4031804595130457E-6	TEST
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999999919921811	WITHOUT_CLASSIFICATION	8.007818783738056E-9	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999999794490252	WITHOUT_CLASSIFICATION	2.0550974883075875E-8	TEST
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999957585165898	WITHOUT_CLASSIFICATION	4.241483410180548E-6	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999999091600907	WITHOUT_CLASSIFICATION	9.083990917782616E-8	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999996651602705	WITHOUT_CLASSIFICATION	3.3483972945819837E-7	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999914565319207	WITHOUT_CLASSIFICATION	8.543468079381E-6	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.999995634051069	WITHOUT_CLASSIFICATION	4.365948931059092E-6	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.999966581547784	WITHOUT_CLASSIFICATION	3.341845221609825E-5	TEST
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999997192368854	WITHOUT_CLASSIFICATION	2.8076311464099044E-7	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999989666536525	WITHOUT_CLASSIFICATION	1.0333463474265597E-6	TEST
// something?	WITHOUT_CLASSIFICATION	0.9999980585120165	WITHOUT_CLASSIFICATION	1.9414879835401365E-6	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999988114001676	WITHOUT_CLASSIFICATION	1.1885998325355334E-6	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999988114001676	WITHOUT_CLASSIFICATION	1.1885998325355334E-6	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999998096983664	WITHOUT_CLASSIFICATION	1.903016336647695E-7	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999998096983664	WITHOUT_CLASSIFICATION	1.903016336647695E-7	TEST
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999999789924796	WITHOUT_CLASSIFICATION	2.100752044102423E-8	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999998851490686	WITHOUT_CLASSIFICATION	1.1485093134956233E-7	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999997822447603	WITHOUT_CLASSIFICATION	2.1775523979233013E-7	TEST
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999985821336074	WITHOUT_CLASSIFICATION	1.4178663925636541E-6	TEST
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999991711591883	WITHOUT_CLASSIFICATION	8.288408115307875E-7	TEST
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999952110681376	WITHOUT_CLASSIFICATION	4.788931862411773E-6	TEST
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999998875189382	WITHOUT_CLASSIFICATION	1.1248106184578464E-7	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.999995634051069	WITHOUT_CLASSIFICATION	4.365948931059092E-6	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.999966581547784	WITHOUT_CLASSIFICATION	3.341845221609825E-5	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999989666536525	WITHOUT_CLASSIFICATION	1.0333463474265597E-6	TEST
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.999999792611602	WITHOUT_CLASSIFICATION	2.0738839801220195E-7	TEST
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999992640273762	WITHOUT_CLASSIFICATION	7.359726237863385E-7	TEST
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999999847332436	WITHOUT_CLASSIFICATION	1.5266756432929182E-8	TEST
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999993983407384	WITHOUT_CLASSIFICATION	6.016592616617562E-7	TEST
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999998960132215	WITHOUT_CLASSIFICATION	1.0398677860055487E-7	TEST
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999955780441477	WITHOUT_CLASSIFICATION	4.421955852324696E-6	TEST
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999994372246531	WITHOUT_CLASSIFICATION	5.627753469418866E-7	TEST
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999995095299632	WITHOUT_CLASSIFICATION	4.904700368706519E-7	TEST
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999998789185498	WITHOUT_CLASSIFICATION	1.2108145016864253E-7	TEST
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999999789932099	WITHOUT_CLASSIFICATION	2.100679002310902E-8	TEST
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999989733177638	WITHOUT_CLASSIFICATION	1.0266822362342768E-6	TEST
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999992424784568	WITHOUT_CLASSIFICATION	7.575215431336158E-7	TEST
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999939687440131	WITHOUT_CLASSIFICATION	6.031255986928891E-6	TEST
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999983062398694	WITHOUT_CLASSIFICATION	1.6937601305566887E-6	TEST
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.999999800947281	WITHOUT_CLASSIFICATION	1.9905271902408018E-7	TEST
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999991722346258	WITHOUT_CLASSIFICATION	8.277653743014278E-7	TEST
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999989887891286	WITHOUT_CLASSIFICATION	1.0112108712682247E-6	TEST
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999999562224148	WITHOUT_CLASSIFICATION	4.377758521958686E-8	TEST
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.999999851858869	WITHOUT_CLASSIFICATION	1.4814113107291104E-7	TEST
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.999999620871014	WITHOUT_CLASSIFICATION	3.7912898592352183E-7	TEST
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999998058335892	WITHOUT_CLASSIFICATION	1.941664108037379E-7	TEST
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999954882679952	WITHOUT_CLASSIFICATION	4.511732004697417E-6	TEST
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999961425183329	WITHOUT_CLASSIFICATION	3.857481667070056E-6	TEST
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999997388187468	WITHOUT_CLASSIFICATION	2.6118125320048603E-7	TEST
// The template for interface modules	WITHOUT_CLASSIFICATION	0.999990431873571	WITHOUT_CLASSIFICATION	9.568126429116546E-6	TEST
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999991276177524	WITHOUT_CLASSIFICATION	8.72382247500677E-7	TEST
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999990894276302	WITHOUT_CLASSIFICATION	9.105723697355829E-7	TEST
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.999999830319471	WITHOUT_CLASSIFICATION	1.6968052899445636E-7	TEST
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999980628943782	WITHOUT_CLASSIFICATION	1.937105621795249E-6	TEST
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999996409356202	WITHOUT_CLASSIFICATION	3.590643798992367E-7	TEST
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999997503818316	WITHOUT_CLASSIFICATION	2.49618168344868E-7	TEST
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999993387175257	WITHOUT_CLASSIFICATION	6.612824744594005E-7	TEST
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999992423911955	WITHOUT_CLASSIFICATION	7.576088045099258E-7	TEST
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999996070271052	WITHOUT_CLASSIFICATION	3.9297289469294343E-7	TEST
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999996374818878	WITHOUT_CLASSIFICATION	3.6251811217095695E-7	TEST
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.999999111568768	WITHOUT_CLASSIFICATION	8.884312319597026E-7	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999986702980189	WITHOUT_CLASSIFICATION	1.3297019811414332E-6	TEST
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999997585782321	WITHOUT_CLASSIFICATION	2.414217678611051E-7	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999970018891525	WITHOUT_CLASSIFICATION	2.998110847452064E-6	TEST
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999999315767508	WITHOUT_CLASSIFICATION	6.84232491477894E-8	TEST
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999991541116223	WITHOUT_CLASSIFICATION	8.458883776156432E-7	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999991993144556	WITHOUT_CLASSIFICATION	8.006855443119963E-7	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999986702980189	WITHOUT_CLASSIFICATION	1.3297019811414332E-6	TEST
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999987515048959	WITHOUT_CLASSIFICATION	1.2484951040798824E-6	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999999855899634	WITHOUT_CLASSIFICATION	1.4410036673741047E-8	TEST
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999992728234529	WITHOUT_CLASSIFICATION	7.271765470622311E-7	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999983021080211	WITHOUT_CLASSIFICATION	1.6978919789228413E-6	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999983021080211	WITHOUT_CLASSIFICATION	1.6978919789228413E-6	TEST
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.999997293929571	WITHOUT_CLASSIFICATION	2.7060704290704825E-6	TEST
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999988060181696	WITHOUT_CLASSIFICATION	1.1939818304811919E-6	TEST
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999996855130938	WITHOUT_CLASSIFICATION	3.1448690618756343E-7	TEST
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999999732399454	WITHOUT_CLASSIFICATION	2.6760054659547316E-8	TEST
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9999980054169123	WITHOUT_CLASSIFICATION	1.9945830876547616E-6	TEST
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999997824132388	WITHOUT_CLASSIFICATION	2.1758676121741304E-7	TEST
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999999656970165	WITHOUT_CLASSIFICATION	3.430298348158425E-8	TEST
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.999999920173302	WITHOUT_CLASSIFICATION	7.982669805905544E-8	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999986668185686	WITHOUT_CLASSIFICATION	1.333181431309032E-6	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999986668185686	WITHOUT_CLASSIFICATION	1.333181431309032E-6	TEST
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999986197629354	WITHOUT_CLASSIFICATION	1.3802370645987675E-6	TEST
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999979734112623	WITHOUT_CLASSIFICATION	2.026588737722927E-6	TEST
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999994264166098	WITHOUT_CLASSIFICATION	5.73583390322678E-7	TEST
// must be a public method	WITHOUT_CLASSIFICATION	0.9999995711270759	WITHOUT_CLASSIFICATION	4.288729240111756E-7	TEST
// must be a public class	WITHOUT_CLASSIFICATION	0.9999992321357937	WITHOUT_CLASSIFICATION	7.678642062701728E-7	TEST
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999992200528871	WITHOUT_CLASSIFICATION	7.799471128910723E-7	TEST
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999999735246266	WITHOUT_CLASSIFICATION	2.6475373418841547E-8	TEST
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999994947007423	WITHOUT_CLASSIFICATION	5.052992577494186E-7	TEST
// no matching method found	WITHOUT_CLASSIFICATION	0.9999996389231751	WITHOUT_CLASSIFICATION	3.610768249015685E-7	TEST
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9994964523335659	WITHOUT_CLASSIFICATION	5.035476664341128E-4	TEST
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999840664693858	WITHOUT_CLASSIFICATION	1.5933530614166278E-5	TEST
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999996661417367	WITHOUT_CLASSIFICATION	3.3385826325974784E-7	TEST
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999977581877347	WITHOUT_CLASSIFICATION	2.241812265227576E-6	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999925783106551	WITHOUT_CLASSIFICATION	7.421689344958112E-6	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999925783106551	WITHOUT_CLASSIFICATION	7.421689344958112E-6	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999991148325708	WITHOUT_CLASSIFICATION	8.851674292992197E-7	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999992876435374	WITHOUT_CLASSIFICATION	7.123564626416303E-7	TEST
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9998000655082712	WITHOUT_CLASSIFICATION	1.9993449172881004E-4	TEST
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.999999921085582	WITHOUT_CLASSIFICATION	7.891441800573637E-8	TEST
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999999801751343	WITHOUT_CLASSIFICATION	1.9824865772560785E-8	TEST
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999995988811353	WITHOUT_CLASSIFICATION	4.0111886460921907E-7	TEST
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999978544458488	WITHOUT_CLASSIFICATION	2.1455541511709906E-6	TEST
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999987740408075	WITHOUT_CLASSIFICATION	1.2259591924851809E-6	TEST
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.999979354134779	WITHOUT_CLASSIFICATION	2.0645865221028442E-5	TEST
/* package scope */	WITHOUT_CLASSIFICATION	0.9999986021813145	WITHOUT_CLASSIFICATION	1.3978186855532672E-6	TEST
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.99999937494551	WITHOUT_CLASSIFICATION	6.250544900063084E-7	TEST
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.999999612291769	WITHOUT_CLASSIFICATION	3.8770823096176584E-7	TEST
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999944858838162	WITHOUT_CLASSIFICATION	5.514116183684854E-6	TEST
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999998686334669	WITHOUT_CLASSIFICATION	1.313665331698149E-7	TEST
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.999999843101175	WITHOUT_CLASSIFICATION	1.568988250060273E-7	TEST
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999991121984031	WITHOUT_CLASSIFICATION	8.878015968957233E-7	TEST
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999997658800484	WITHOUT_CLASSIFICATION	2.3411995162423656E-7	TEST
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999941332293995	WITHOUT_CLASSIFICATION	5.866770600603743E-6	TEST
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999993743872613	WITHOUT_CLASSIFICATION	6.256127387465505E-7	TEST
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999996725845898	WITHOUT_CLASSIFICATION	3.2741541014873007E-7	TEST
// should not happen!	WITHOUT_CLASSIFICATION	0.9999982376794415	WITHOUT_CLASSIFICATION	1.762320558567936E-6	TEST
// start class	WITHOUT_CLASSIFICATION	0.9999986644054092	WITHOUT_CLASSIFICATION	1.3355945908565687E-6	TEST
// make getter for handler	WITHOUT_CLASSIFICATION	0.9999587302671985	WITHOUT_CLASSIFICATION	4.126973280141819E-5	TEST
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.99999056186397	WITHOUT_CLASSIFICATION	9.438136029958697E-6	TEST
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9999764185649257	WITHOUT_CLASSIFICATION	2.3581435074306257E-5	TEST
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999997889355343	WITHOUT_CLASSIFICATION	2.1106446573849683E-7	TEST
// create static private method field	WITHOUT_CLASSIFICATION	0.9999988720286616	WITHOUT_CLASSIFICATION	1.1279713383643606E-6	TEST
// load static empty array	WITHOUT_CLASSIFICATION	0.9999994053922923	WITHOUT_CLASSIFICATION	5.946077077609629E-7	TEST
// box arguments	WITHOUT_CLASSIFICATION	0.9999992911422331	WITHOUT_CLASSIFICATION	7.088577669146392E-7	TEST
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9999854661781962	WITHOUT_CLASSIFICATION	1.4533821803866531E-5	TEST
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999998493506732	WITHOUT_CLASSIFICATION	1.5064932677859714E-7	TEST
// do a void return	WITHOUT_CLASSIFICATION	0.9999996373654131	WITHOUT_CLASSIFICATION	3.6263458687810526E-7	TEST
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999994572463727	WITHOUT_CLASSIFICATION	5.427536271843933E-7	TEST
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999974161666055	WITHOUT_CLASSIFICATION	2.583833394422601E-6	TEST
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999996327111158	WITHOUT_CLASSIFICATION	3.672888842432024E-7	TEST
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999998621106949	WITHOUT_CLASSIFICATION	1.3788930505415766E-7	TEST
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999970899204706	WITHOUT_CLASSIFICATION	2.910079529381237E-6	TEST
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999921181153344	WITHOUT_CLASSIFICATION	7.881884665562255E-6	TEST
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999905894742506	WITHOUT_CLASSIFICATION	9.410525749457194E-6	TEST
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999888943917978	WITHOUT_CLASSIFICATION	1.1105608202185143E-5	TEST
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999992413797844	WITHOUT_CLASSIFICATION	7.586202156292851E-7	TEST
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9999998536287908	WITHOUT_CLASSIFICATION	1.463712091464556E-7	TEST
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999987843471744	WITHOUT_CLASSIFICATION	1.2156528255923944E-6	TEST
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999994831504827	WITHOUT_CLASSIFICATION	5.168495172873929E-7	TEST
/* NUL */	WITHOUT_CLASSIFICATION	0.9999807085282881	WITHOUT_CLASSIFICATION	1.9291471711851758E-5	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999999273163058	WITHOUT_CLASSIFICATION	7.268369411404459E-8	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999997395802509	WITHOUT_CLASSIFICATION	2.6041974912121024E-7	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999993317626585	WITHOUT_CLASSIFICATION	6.682373415887044E-7	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999997220447588	WITHOUT_CLASSIFICATION	2.779552411541247E-7	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999995826495851	WITHOUT_CLASSIFICATION	4.173504148696936E-7	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999995826495851	WITHOUT_CLASSIFICATION	4.173504148696936E-7	TEST
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999987573300813	WITHOUT_CLASSIFICATION	1.242669918800745E-6	TEST
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999928960206304	WITHOUT_CLASSIFICATION	7.103979369583815E-6	TEST
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.999993316252299	WITHOUT_CLASSIFICATION	6.683747700970081E-6	TEST
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999999323859975	WITHOUT_CLASSIFICATION	6.761400251537114E-8	TEST
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999997904541219	WITHOUT_CLASSIFICATION	2.0954587799463378E-7	TEST
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999996958916806	WITHOUT_CLASSIFICATION	3.041083194237568E-7	TEST
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999982400217657	WITHOUT_CLASSIFICATION	1.7599782343426046E-6	TEST
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999999263650585	WITHOUT_CLASSIFICATION	7.363494143306937E-8	TEST
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999999769085084	WITHOUT_CLASSIFICATION	2.309149159067015E-8	TEST
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999989103839831	WITHOUT_CLASSIFICATION	1.0896160167900973E-6	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999986461258943	WITHOUT_CLASSIFICATION	1.3538741056834038E-6	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999986461258943	WITHOUT_CLASSIFICATION	1.3538741056834038E-6	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999986461258943	WITHOUT_CLASSIFICATION	1.3538741056834038E-6	TEST
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999999065013515	WITHOUT_CLASSIFICATION	9.349864854292605E-8	TEST
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.99999953895577	WITHOUT_CLASSIFICATION	4.6104422990298E-7	TEST
// Single node in list	WITHOUT_CLASSIFICATION	0.9999987307494241	WITHOUT_CLASSIFICATION	1.2692505758292152E-6	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.999999737032218	WITHOUT_CLASSIFICATION	2.629677820226766E-7	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.999999737032218	WITHOUT_CLASSIFICATION	2.629677820226766E-7	TEST
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999988737816174	WITHOUT_CLASSIFICATION	1.1262183825817226E-6	TEST
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999987565965919	WITHOUT_CLASSIFICATION	1.2434034081495004E-6	TEST
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999968539149856	WITHOUT_CLASSIFICATION	3.1460850142710784E-6	TEST
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999981863307355	WITHOUT_CLASSIFICATION	1.813669264548957E-6	TEST
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999994578721354	WITHOUT_CLASSIFICATION	5.421278646551244E-7	TEST
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999914430560336	WITHOUT_CLASSIFICATION	8.55694396636195E-6	TEST
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999926608641405	WITHOUT_CLASSIFICATION	7.339135859534324E-6	TEST
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999994956685095	WITHOUT_CLASSIFICATION	5.043314905040541E-7	TEST
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999977183645321	WITHOUT_CLASSIFICATION	2.2816354678672515E-6	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.999999820509727	WITHOUT_CLASSIFICATION	1.79490272976732E-7	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.999999820509727	WITHOUT_CLASSIFICATION	1.79490272976732E-7	TEST
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.999996284150963	WITHOUT_CLASSIFICATION	3.7158490371175567E-6	TEST
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999876276554847	WITHOUT_CLASSIFICATION	1.237234451532798E-5	TEST
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999930268152633	WITHOUT_CLASSIFICATION	6.973184736734573E-6	TEST
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999986750294623	WITHOUT_CLASSIFICATION	1.3249705376676813E-6	TEST
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999989174415251	WITHOUT_CLASSIFICATION	1.0825584748830934E-6	TEST
/* just ignore */	WITHOUT_CLASSIFICATION	0.999997556238796	WITHOUT_CLASSIFICATION	2.4437612038711156E-6	TEST
/* octal constant */	WITHOUT_CLASSIFICATION	0.999999081226993	WITHOUT_CLASSIFICATION	9.187730071657395E-7	TEST
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999992949685611	WITHOUT_CLASSIFICATION	7.0503143902772E-7	TEST
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999929819535681	WITHOUT_CLASSIFICATION	7.018046431881048E-6	TEST
// POP	WITHOUT_CLASSIFICATION	0.9999878653255279	WITHOUT_CLASSIFICATION	1.2134674472127427E-5	TEST
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999995236493675	WITHOUT_CLASSIFICATION	4.763506325639463E-7	TEST
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999898566140776	WITHOUT_CLASSIFICATION	1.0143385922354128E-5	TEST
// SET_P	WITHOUT_CLASSIFICATION	0.9999913195010307	WITHOUT_CLASSIFICATION	8.680498969285559E-6	TEST
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999982787823334	WITHOUT_CLASSIFICATION	1.721217666604198E-6	TEST
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9999745295929848	WITHOUT_CLASSIFICATION	2.547040701512647E-5	TEST
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999978272219581	WITHOUT_CLASSIFICATION	2.172778041888633E-6	TEST
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999946530801231	WITHOUT_CLASSIFICATION	5.346919876755034E-6	TEST
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.999993140176828	WITHOUT_CLASSIFICATION	6.859823171905349E-6	TEST
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999987556604936	WITHOUT_CLASSIFICATION	1.2443395064026831E-6	TEST
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.999999055468062	WITHOUT_CLASSIFICATION	9.445319379216005E-7	TEST
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9999989545937565	WITHOUT_CLASSIFICATION	1.0454062434742288E-6	TEST
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999966441069514	WITHOUT_CLASSIFICATION	3.3558930485106716E-6	TEST
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999984099191868	WITHOUT_CLASSIFICATION	1.590080813246299E-6	TEST
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999881636547087	WITHOUT_CLASSIFICATION	1.183634529124716E-5	TEST
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999939546092604	WITHOUT_CLASSIFICATION	6.045390739638106E-6	TEST
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999981711909743	WITHOUT_CLASSIFICATION	1.828809025770341E-6	TEST
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999979777071004	WITHOUT_CLASSIFICATION	2.0222928995169233E-6	TEST
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999965884199598	WITHOUT_CLASSIFICATION	3.4115800402898823E-6	TEST
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999979802764118	WITHOUT_CLASSIFICATION	2.019723588130816E-6	TEST
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999909007786998	WITHOUT_CLASSIFICATION	9.099221300155571E-6	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999819482457376	WITHOUT_CLASSIFICATION	1.8051754262433084E-5	TEST
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999995374817638	WITHOUT_CLASSIFICATION	4.62518236209627E-7	TEST
/* white spaces */	WITHOUT_CLASSIFICATION	0.999996267289231	WITHOUT_CLASSIFICATION	3.7327107690236774E-6	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999819482457376	WITHOUT_CLASSIFICATION	1.8051754262433084E-5	TEST
/* it's a comment */	WITHOUT_CLASSIFICATION	0.999999222743929	WITHOUT_CLASSIFICATION	7.772560710560717E-7	TEST
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999989200987895	WITHOUT_CLASSIFICATION	1.0799012105498E-6	TEST
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999934797321	WITHOUT_CLASSIFICATION	6.520267900089507E-6	TEST
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999821607765559	WITHOUT_CLASSIFICATION	1.7839223444159053E-5	TEST
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999998516250239	WITHOUT_CLASSIFICATION	1.4837497596537477E-7	TEST
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999973879813382	WITHOUT_CLASSIFICATION	2.6120186617667876E-6	TEST
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999979510349273	WITHOUT_CLASSIFICATION	2.0489650727729816E-6	TEST
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.999997041692118	WITHOUT_CLASSIFICATION	2.9583078819420262E-6	TEST
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999958599709244	WITHOUT_CLASSIFICATION	4.1400290756197095E-6	TEST
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999882246448829	WITHOUT_CLASSIFICATION	1.1775355117165329E-5	TEST
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999655895361278	WITHOUT_CLASSIFICATION	3.441046387230495E-5	TEST
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999859468434759	WITHOUT_CLASSIFICATION	1.4053156524234035E-5	TEST
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999915672001495	WITHOUT_CLASSIFICATION	8.432799850520674E-6	TEST
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999973139066116	WITHOUT_CLASSIFICATION	2.6860933883169595E-6	TEST
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.999995084653821	WITHOUT_CLASSIFICATION	4.915346179045584E-6	TEST
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999530301428634	WITHOUT_CLASSIFICATION	4.6969857136527164E-5	TEST
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9998792048779805	WITHOUT_CLASSIFICATION	1.2079512201935614E-4	TEST
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.999997008434992	WITHOUT_CLASSIFICATION	2.991565008178238E-6	TEST
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999984018957138	WITHOUT_CLASSIFICATION	1.5981042861776466E-6	TEST
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999813704904998	WITHOUT_CLASSIFICATION	1.8629509500151657E-5	TEST
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999961365028078	WITHOUT_CLASSIFICATION	3.863497192125074E-6	TEST
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999925659731118	WITHOUT_CLASSIFICATION	7.434026888270332E-6	TEST
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999917625572075	WITHOUT_CLASSIFICATION	8.237442792480734E-6	TEST
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.999996688847677	WITHOUT_CLASSIFICATION	3.3111523230547278E-6	TEST
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999805732825437	WITHOUT_CLASSIFICATION	1.9426717456264724E-5	TEST
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999983716422476	WITHOUT_CLASSIFICATION	1.6283577524041097E-6	TEST
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999941632052115	WITHOUT_CLASSIFICATION	5.836794788487338E-6	TEST
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999977381276707	WITHOUT_CLASSIFICATION	2.2618723292854478E-6	TEST
// block (primary)	WITHOUT_CLASSIFICATION	0.9999987661757188	WITHOUT_CLASSIFICATION	1.233824281184392E-6	TEST
// block (expr)	WITHOUT_CLASSIFICATION	0.9999987711685953	WITHOUT_CLASSIFICATION	1.2288314046821777E-6	TEST
// hash	WITHOUT_CLASSIFICATION	0.9999927896393793	WITHOUT_CLASSIFICATION	7.210360620786252E-6	TEST
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9999692983865088	WITHOUT_CLASSIFICATION	3.070161349111266E-5	TEST
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9994449732964695	WITHOUT_CLASSIFICATION	5.550267035305082E-4	TEST
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999997097164224	WITHOUT_CLASSIFICATION	2.9028357757024824E-7	TEST
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999986626993793	WITHOUT_CLASSIFICATION	1.3373006207084224E-6	TEST
// binary	WITHOUT_CLASSIFICATION	0.9999964639374305	WITHOUT_CLASSIFICATION	3.5360625694993826E-6	TEST
// decimal	WITHOUT_CLASSIFICATION	0.999998937158518	WITHOUT_CLASSIFICATION	1.0628414820814396E-6	TEST
//Octal	WITHOUT_CLASSIFICATION	0.9999621053423176	WITHOUT_CLASSIFICATION	3.789465768244759E-5	TEST
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999988550137894	WITHOUT_CLASSIFICATION	1.1449862106841574E-6	TEST
// backslash	WITHOUT_CLASSIFICATION	0.9999976621092249	WITHOUT_CLASSIFICATION	2.3378907750549002E-6	TEST
// newline	WITHOUT_CLASSIFICATION	0.9999968279752982	WITHOUT_CLASSIFICATION	3.1720247017004852E-6	TEST
// horizontal tab	WITHOUT_CLASSIFICATION	0.999997749054061	WITHOUT_CLASSIFICATION	2.250945938888208E-6	TEST
// form feed	WITHOUT_CLASSIFICATION	0.9999853021227326	WITHOUT_CLASSIFICATION	1.4697877267306875E-5	TEST
// vertical tab	WITHOUT_CLASSIFICATION	0.9999990721756422	WITHOUT_CLASSIFICATION	9.278243577904089E-7	TEST
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999978060699454	WITHOUT_CLASSIFICATION	2.1939300545203915E-6	TEST
// escape	WITHOUT_CLASSIFICATION	0.9999972763945078	WITHOUT_CLASSIFICATION	2.7236054922178277E-6	TEST
// hex constant	WITHOUT_CLASSIFICATION	0.9999995400735087	WITHOUT_CLASSIFICATION	4.5992649138406315E-7	TEST
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999968747393164	WITHOUT_CLASSIFICATION	3.1252606835022344E-6	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999809803209533	WITHOUT_CLASSIFICATION	1.9019679046743865E-5	TEST
// space	WITHOUT_CLASSIFICATION	0.9999983870391721	WITHOUT_CLASSIFICATION	1.612960827860738E-6	TEST
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999761134858102	WITHOUT_CLASSIFICATION	2.388651418984335E-5	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.999997150711359	WITHOUT_CLASSIFICATION	2.8492886409877224E-6	TEST
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.999994191304373	WITHOUT_CLASSIFICATION	5.8086956271159346E-6	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999809803209533	WITHOUT_CLASSIFICATION	1.9019679046743865E-5	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9996944612455125	WITHOUT_CLASSIFICATION	3.0553875448754254E-4	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9996944612455125	WITHOUT_CLASSIFICATION	3.0553875448754254E-4	TEST
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999849766303048	WITHOUT_CLASSIFICATION	1.5023369695071965E-5	TEST
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999978456942663	WITHOUT_CLASSIFICATION	2.1543057337102437E-6	TEST
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999990313058136	WITHOUT_CLASSIFICATION	9.686941864179498E-7	TEST
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999930974149448	WITHOUT_CLASSIFICATION	6.9025850552518274E-6	TEST
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999961301452753	WITHOUT_CLASSIFICATION	3.869854724737703E-6	TEST
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.999993912305038	WITHOUT_CLASSIFICATION	6.087694962041063E-6	TEST
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999988443122855	WITHOUT_CLASSIFICATION	1.1556877145545765E-6	TEST
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9998222004379176	WITHOUT_CLASSIFICATION	1.7779956208247087E-4	TEST
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999998970417895	WITHOUT_CLASSIFICATION	1.0295821050512617E-7	TEST
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999727373629603	WITHOUT_CLASSIFICATION	2.726263703972513E-5	TEST
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.999999975189799	WITHOUT_CLASSIFICATION	2.481020101779233E-8	TEST
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.999999956628433	WITHOUT_CLASSIFICATION	4.337156695578496E-8	TEST
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999948992432957	WITHOUT_CLASSIFICATION	5.100756704333849E-6	TEST
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999881833067583	WITHOUT_CLASSIFICATION	1.1816693241811033E-5	TEST
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999975382992	WITHOUT_CLASSIFICATION	2.4617007998930807E-6	TEST
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999967300170566	WITHOUT_CLASSIFICATION	3.2699829434963546E-6	TEST
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999997337091148	WITHOUT_CLASSIFICATION	2.662908851437493E-7	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999477426847456	WITHOUT_CLASSIFICATION	5.225731525446949E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999477426847456	WITHOUT_CLASSIFICATION	5.225731525446949E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999477426847456	WITHOUT_CLASSIFICATION	5.225731525446949E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999477426847456	WITHOUT_CLASSIFICATION	5.225731525446949E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999477426847456	WITHOUT_CLASSIFICATION	5.225731525446949E-5	TEST
// line 329	WITHOUT_CLASSIFICATION	0.9999960633866527	WITHOUT_CLASSIFICATION	3.936613347315363E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999986887513832	WITHOUT_CLASSIFICATION	1.3112486167910403E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999866468451882	WITHOUT_CLASSIFICATION	1.3353154811814066E-5	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999991863841985	WITHOUT_CLASSIFICATION	8.136158014725028E-7	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999948373632206	WITHOUT_CLASSIFICATION	5.162636779512296E-6	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999993106353011	WITHOUT_CLASSIFICATION	6.893646988644111E-7	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999871689843447	WITHOUT_CLASSIFICATION	1.2831015655345431E-5	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999976323072534	WITHOUT_CLASSIFICATION	2.3676927466863923E-6	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999994295221981	WITHOUT_CLASSIFICATION	5.704778018865576E-7	TEST
// line 271	WITHOUT_CLASSIFICATION	0.9999954961675781	WITHOUT_CLASSIFICATION	4.5038324219340645E-6	TEST
// line 274	WITHOUT_CLASSIFICATION	0.9999958392417588	WITHOUT_CLASSIFICATION	4.160758241134597E-6	TEST
// line 303	WITHOUT_CLASSIFICATION	0.9999959934299829	WITHOUT_CLASSIFICATION	4.006570017008446E-6	TEST
// line 311	WITHOUT_CLASSIFICATION	0.9999952616967722	WITHOUT_CLASSIFICATION	4.738303227791234E-6	TEST
// line 314	WITHOUT_CLASSIFICATION	0.9999961112367934	WITHOUT_CLASSIFICATION	3.8887632065869876E-6	TEST
// line 317	WITHOUT_CLASSIFICATION	0.9999960715981283	WITHOUT_CLASSIFICATION	3.928401871681969E-6	TEST
// line 332	WITHOUT_CLASSIFICATION	0.9999959691612108	WITHOUT_CLASSIFICATION	4.030838789198758E-6	TEST
// line 338	WITHOUT_CLASSIFICATION	0.9999959807963774	WITHOUT_CLASSIFICATION	4.019203622626094E-6	TEST
// line 341	WITHOUT_CLASSIFICATION	0.9999953966092804	WITHOUT_CLASSIFICATION	4.60339071961344E-6	TEST
// line 344	WITHOUT_CLASSIFICATION	0.9999955943584541	WITHOUT_CLASSIFICATION	4.405641545854695E-6	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999953125550246	WITHOUT_CLASSIFICATION	4.687444975369221E-6	TEST
// line 358	WITHOUT_CLASSIFICATION	0.9999960043441046	WITHOUT_CLASSIFICATION	3.995655895357812E-6	TEST
// line 367	WITHOUT_CLASSIFICATION	0.9999956714333814	WITHOUT_CLASSIFICATION	4.32856661861956E-6	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999960499453941	WITHOUT_CLASSIFICATION	3.950054605832869E-6	TEST
// line 378	WITHOUT_CLASSIFICATION	0.9999960329981317	WITHOUT_CLASSIFICATION	3.967001868255618E-6	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999965462177689	WITHOUT_CLASSIFICATION	3.453782231129061E-6	TEST
// line 407	WITHOUT_CLASSIFICATION	0.999995778919869	WITHOUT_CLASSIFICATION	4.221080131037837E-6	TEST
// line 411	WITHOUT_CLASSIFICATION	0.9999948365973306	WITHOUT_CLASSIFICATION	5.163402669487758E-6	TEST
// line 414	WITHOUT_CLASSIFICATION	0.999995582440172	WITHOUT_CLASSIFICATION	4.41755982805566E-6	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999957191486988	WITHOUT_CLASSIFICATION	4.280851301187431E-6	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999961275685222	WITHOUT_CLASSIFICATION	3.872431477809898E-6	TEST
// line 426	WITHOUT_CLASSIFICATION	0.999995636508367	WITHOUT_CLASSIFICATION	4.3634916330627646E-6	TEST
// line 434	WITHOUT_CLASSIFICATION	0.9999954066441957	WITHOUT_CLASSIFICATION	4.593355804224724E-6	TEST
// line 443	WITHOUT_CLASSIFICATION	0.9999954608882753	WITHOUT_CLASSIFICATION	4.539111724650049E-6	TEST
// line 446	WITHOUT_CLASSIFICATION	0.9999951386663499	WITHOUT_CLASSIFICATION	4.861333650034715E-6	TEST
// line 452	WITHOUT_CLASSIFICATION	0.9999956715992911	WITHOUT_CLASSIFICATION	4.328400708924883E-6	TEST
// line 457	WITHOUT_CLASSIFICATION	0.999995273603398	WITHOUT_CLASSIFICATION	4.726396602081768E-6	TEST
// line 464	WITHOUT_CLASSIFICATION	0.9999950936049763	WITHOUT_CLASSIFICATION	4.906395023704565E-6	TEST
// line 467	WITHOUT_CLASSIFICATION	0.9999952684363436	WITHOUT_CLASSIFICATION	4.7315636563860395E-6	TEST
// line 470	WITHOUT_CLASSIFICATION	0.9999957480349563	WITHOUT_CLASSIFICATION	4.2519650437409264E-6	TEST
// line 479	WITHOUT_CLASSIFICATION	0.9999953204246196	WITHOUT_CLASSIFICATION	4.679575380469947E-6	TEST
// line 484	WITHOUT_CLASSIFICATION	0.9999955533395867	WITHOUT_CLASSIFICATION	4.4466604134027155E-6	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999956705162681	WITHOUT_CLASSIFICATION	4.329483731894917E-6	TEST
// line 492	WITHOUT_CLASSIFICATION	0.9999957712373225	WITHOUT_CLASSIFICATION	4.228762677488259E-6	TEST
// line 498	WITHOUT_CLASSIFICATION	0.999995760335115	WITHOUT_CLASSIFICATION	4.239664884984062E-6	TEST
// line 501	WITHOUT_CLASSIFICATION	0.9999953573291639	WITHOUT_CLASSIFICATION	4.6426708360532395E-6	TEST
// line 504	WITHOUT_CLASSIFICATION	0.9999956878024184	WITHOUT_CLASSIFICATION	4.312197581598189E-6	TEST
// line 507	WITHOUT_CLASSIFICATION	0.999995675478822	WITHOUT_CLASSIFICATION	4.3245211781405535E-6	TEST
// line 510	WITHOUT_CLASSIFICATION	0.9999961250339433	WITHOUT_CLASSIFICATION	3.874966056651173E-6	TEST
// line 519	WITHOUT_CLASSIFICATION	0.9999957095434063	WITHOUT_CLASSIFICATION	4.290456593610187E-6	TEST
// line 525	WITHOUT_CLASSIFICATION	0.999995432948539	WITHOUT_CLASSIFICATION	4.5670514609952E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999866468451882	WITHOUT_CLASSIFICATION	1.3353154811814066E-5	TEST
// line 537	WITHOUT_CLASSIFICATION	0.999995490668041	WITHOUT_CLASSIFICATION	4.5093319589527895E-6	TEST
// line 540	WITHOUT_CLASSIFICATION	0.999995729807366	WITHOUT_CLASSIFICATION	4.270192633972388E-6	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999955342481163	WITHOUT_CLASSIFICATION	4.465751883743247E-6	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999952172338257	WITHOUT_CLASSIFICATION	4.782766174339291E-6	TEST
// line 556	WITHOUT_CLASSIFICATION	0.9999950710075145	WITHOUT_CLASSIFICATION	4.928992485533966E-6	TEST
// line 559	WITHOUT_CLASSIFICATION	0.9999951097752445	WITHOUT_CLASSIFICATION	4.890224755448129E-6	TEST
// line 563	WITHOUT_CLASSIFICATION	0.9999954822925379	WITHOUT_CLASSIFICATION	4.5177074620681295E-6	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999950422405686	WITHOUT_CLASSIFICATION	4.957759431457467E-6	TEST
// line 569	WITHOUT_CLASSIFICATION	0.999995231880363	WITHOUT_CLASSIFICATION	4.7681196369711764E-6	TEST
// line 575	WITHOUT_CLASSIFICATION	0.9999950194169365	WITHOUT_CLASSIFICATION	4.98058306349802E-6	TEST
// line 578	WITHOUT_CLASSIFICATION	0.9999956032059636	WITHOUT_CLASSIFICATION	4.396794036372642E-6	TEST
// line 587	WITHOUT_CLASSIFICATION	0.999995654084746	WITHOUT_CLASSIFICATION	4.3459152539868446E-6	TEST
// line 596	WITHOUT_CLASSIFICATION	0.9999952147877743	WITHOUT_CLASSIFICATION	4.785212225599704E-6	TEST
// line 604	WITHOUT_CLASSIFICATION	0.9999956741380929	WITHOUT_CLASSIFICATION	4.325861907119217E-6	TEST
// line 607	WITHOUT_CLASSIFICATION	0.9999956630613157	WITHOUT_CLASSIFICATION	4.3369386843328925E-6	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999961191174046	WITHOUT_CLASSIFICATION	3.880882595473491E-6	TEST
// line 613	WITHOUT_CLASSIFICATION	0.9999958829667088	WITHOUT_CLASSIFICATION	4.1170332911588164E-6	TEST
// line 616	WITHOUT_CLASSIFICATION	0.9999954910680114	WITHOUT_CLASSIFICATION	4.5089319884960264E-6	TEST
// line 634	WITHOUT_CLASSIFICATION	0.9999955069766263	WITHOUT_CLASSIFICATION	4.49302337374581E-6	TEST
// line 638	WITHOUT_CLASSIFICATION	0.9999958800807063	WITHOUT_CLASSIFICATION	4.119919293769709E-6	TEST
// line 643	WITHOUT_CLASSIFICATION	0.9999955356209715	WITHOUT_CLASSIFICATION	4.464379028408297E-6	TEST
// line 646	WITHOUT_CLASSIFICATION	0.9999950954489694	WITHOUT_CLASSIFICATION	4.904551030693507E-6	TEST
// line 655	WITHOUT_CLASSIFICATION	0.9999950179838768	WITHOUT_CLASSIFICATION	4.982016123167696E-6	TEST
// line 660	WITHOUT_CLASSIFICATION	0.9999955111480946	WITHOUT_CLASSIFICATION	4.488851905454126E-6	TEST
// line 667	WITHOUT_CLASSIFICATION	0.9999950499566855	WITHOUT_CLASSIFICATION	4.95004331446573E-6	TEST
// line 670	WITHOUT_CLASSIFICATION	0.9999956643732909	WITHOUT_CLASSIFICATION	4.335626709122045E-6	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999956142847477	WITHOUT_CLASSIFICATION	4.3857152523734145E-6	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999950724154222	WITHOUT_CLASSIFICATION	4.927584577778943E-6	TEST
// line 701	WITHOUT_CLASSIFICATION	0.999995382903909	WITHOUT_CLASSIFICATION	4.617096091002195E-6	TEST
// line 717	WITHOUT_CLASSIFICATION	0.9999955174633204	WITHOUT_CLASSIFICATION	4.482536679666468E-6	TEST
// line 720	WITHOUT_CLASSIFICATION	0.9999960789820639	WITHOUT_CLASSIFICATION	3.9210179361315214E-6	TEST
// line 726	WITHOUT_CLASSIFICATION	0.9999955821459394	WITHOUT_CLASSIFICATION	4.417854060586148E-6	TEST
// line 729	WITHOUT_CLASSIFICATION	0.9999956541350823	WITHOUT_CLASSIFICATION	4.345864917633183E-6	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999958855660465	WITHOUT_CLASSIFICATION	4.114433953633754E-6	TEST
// line 735	WITHOUT_CLASSIFICATION	0.9999954335660961	WITHOUT_CLASSIFICATION	4.566433903974241E-6	TEST
// line 738	WITHOUT_CLASSIFICATION	0.9999958965654601	WITHOUT_CLASSIFICATION	4.103434539874689E-6	TEST
// line 751	WITHOUT_CLASSIFICATION	0.9999948320045895	WITHOUT_CLASSIFICATION	5.167995410476656E-6	TEST
// line 754	WITHOUT_CLASSIFICATION	0.9999952222834211	WITHOUT_CLASSIFICATION	4.7777165788994505E-6	TEST
// line 757	WITHOUT_CLASSIFICATION	0.9999950484097964	WITHOUT_CLASSIFICATION	4.951590203583942E-6	TEST
// line 760	WITHOUT_CLASSIFICATION	0.9999956433680298	WITHOUT_CLASSIFICATION	4.356631970116277E-6	TEST
// line 763	WITHOUT_CLASSIFICATION	0.9999954725501555	WITHOUT_CLASSIFICATION	4.527449844419308E-6	TEST
// line 769	WITHOUT_CLASSIFICATION	0.9999952215979724	WITHOUT_CLASSIFICATION	4.7784020276155606E-6	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999954967747801	WITHOUT_CLASSIFICATION	4.503225219908152E-6	TEST
// line 775	WITHOUT_CLASSIFICATION	0.9999950080671102	WITHOUT_CLASSIFICATION	4.991932889793511E-6	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999960888534853	WITHOUT_CLASSIFICATION	3.911146514574128E-6	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999954775421684	WITHOUT_CLASSIFICATION	4.522457831487983E-6	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999948938894166	WITHOUT_CLASSIFICATION	5.106110583361888E-6	TEST
// line 794	WITHOUT_CLASSIFICATION	0.999995281659264	WITHOUT_CLASSIFICATION	4.7183407360321E-6	TEST
// line 797	WITHOUT_CLASSIFICATION	0.9999951716508311	WITHOUT_CLASSIFICATION	4.828349168881357E-6	TEST
// line 803	WITHOUT_CLASSIFICATION	0.9999963086036814	WITHOUT_CLASSIFICATION	3.691396318514608E-6	TEST
// line 806	WITHOUT_CLASSIFICATION	0.9999960564198167	WITHOUT_CLASSIFICATION	3.94358018325513E-6	TEST
// line 809	WITHOUT_CLASSIFICATION	0.9999961025845824	WITHOUT_CLASSIFICATION	3.897415417653239E-6	TEST
// line 815	WITHOUT_CLASSIFICATION	0.9999959934008796	WITHOUT_CLASSIFICATION	4.006599120399131E-6	TEST
// line 818	WITHOUT_CLASSIFICATION	0.9999962490140853	WITHOUT_CLASSIFICATION	3.750985914736977E-6	TEST
// line 821	WITHOUT_CLASSIFICATION	0.999995796547267	WITHOUT_CLASSIFICATION	4.203452733001454E-6	TEST
// line 824	WITHOUT_CLASSIFICATION	0.999996061295774	WITHOUT_CLASSIFICATION	3.938704226052037E-6	TEST
// line 830	WITHOUT_CLASSIFICATION	0.9999962995266812	WITHOUT_CLASSIFICATION	3.700473318847627E-6	TEST
// line 833	WITHOUT_CLASSIFICATION	0.999995801766565	WITHOUT_CLASSIFICATION	4.19823343503922E-6	TEST
// line 836	WITHOUT_CLASSIFICATION	0.9999958768495397	WITHOUT_CLASSIFICATION	4.123150460283946E-6	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999959126711154	WITHOUT_CLASSIFICATION	4.087328884523882E-6	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999960564230069	WITHOUT_CLASSIFICATION	3.943576993098196E-6	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999955262689114	WITHOUT_CLASSIFICATION	4.473731088622984E-6	TEST
// line 852	WITHOUT_CLASSIFICATION	0.9999959913109104	WITHOUT_CLASSIFICATION	4.008689089507327E-6	TEST
// line 858	WITHOUT_CLASSIFICATION	0.9999954546045677	WITHOUT_CLASSIFICATION	4.54539543228992E-6	TEST
// line 861	WITHOUT_CLASSIFICATION	0.9999952778581157	WITHOUT_CLASSIFICATION	4.722141884308253E-6	TEST
// line 868	WITHOUT_CLASSIFICATION	0.9999954444979687	WITHOUT_CLASSIFICATION	4.555502031187667E-6	TEST
// line 871	WITHOUT_CLASSIFICATION	0.9999953236914064	WITHOUT_CLASSIFICATION	4.67630859356218E-6	TEST
// line 876	WITHOUT_CLASSIFICATION	0.9999956176179562	WITHOUT_CLASSIFICATION	4.382382043816241E-6	TEST
// line 879	WITHOUT_CLASSIFICATION	0.9999956804510772	WITHOUT_CLASSIFICATION	4.319548922805687E-6	TEST
// line 883	WITHOUT_CLASSIFICATION	0.9999957626990575	WITHOUT_CLASSIFICATION	4.237300942527093E-6	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999959686208126	WITHOUT_CLASSIFICATION	4.031379187331448E-6	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999956368374352	WITHOUT_CLASSIFICATION	4.36316256479478E-6	TEST
// line 899	WITHOUT_CLASSIFICATION	0.9999955308761835	WITHOUT_CLASSIFICATION	4.469123816455082E-6	TEST
// line 903	WITHOUT_CLASSIFICATION	0.999995963047766	WITHOUT_CLASSIFICATION	4.03695223406047E-6	TEST
// line 907	WITHOUT_CLASSIFICATION	0.9999957273813983	WITHOUT_CLASSIFICATION	4.27261860174195E-6	TEST
// line 915	WITHOUT_CLASSIFICATION	0.9999956397148195	WITHOUT_CLASSIFICATION	4.360285180458447E-6	TEST
// line 920	WITHOUT_CLASSIFICATION	0.9999961027707626	WITHOUT_CLASSIFICATION	3.8972292374045995E-6	TEST
// line 923	WITHOUT_CLASSIFICATION	0.9999959004704243	WITHOUT_CLASSIFICATION	4.099529575707573E-6	TEST
// line 926	WITHOUT_CLASSIFICATION	0.9999956089656451	WITHOUT_CLASSIFICATION	4.3910343549321215E-6	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999959394727941	WITHOUT_CLASSIFICATION	4.060527205919501E-6	TEST
// line 936	WITHOUT_CLASSIFICATION	0.9999955424181538	WITHOUT_CLASSIFICATION	4.457581846179132E-6	TEST
// line 940	WITHOUT_CLASSIFICATION	0.9999957802549252	WITHOUT_CLASSIFICATION	4.219745074825425E-6	TEST
// line 944	WITHOUT_CLASSIFICATION	0.9999951691668657	WITHOUT_CLASSIFICATION	4.830833134355394E-6	TEST
// line 948	WITHOUT_CLASSIFICATION	0.9999956931219763	WITHOUT_CLASSIFICATION	4.306878023659368E-6	TEST
// line 956	WITHOUT_CLASSIFICATION	0.999995263552923	WITHOUT_CLASSIFICATION	4.736447076962928E-6	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999956780775806	WITHOUT_CLASSIFICATION	4.321922419375854E-6	TEST
// line 964	WITHOUT_CLASSIFICATION	0.9999952592094221	WITHOUT_CLASSIFICATION	4.740790577914341E-6	TEST
// line 967	WITHOUT_CLASSIFICATION	0.9999952340366768	WITHOUT_CLASSIFICATION	4.7659633231813724E-6	TEST
// line 972	WITHOUT_CLASSIFICATION	0.999995710935918	WITHOUT_CLASSIFICATION	4.28906408210042E-6	TEST
// line 978	WITHOUT_CLASSIFICATION	0.9999956858589832	WITHOUT_CLASSIFICATION	4.3141410166791794E-6	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999961199970997	WITHOUT_CLASSIFICATION	3.88000290025984E-6	TEST
// line 984	WITHOUT_CLASSIFICATION	0.9999957102816105	WITHOUT_CLASSIFICATION	4.2897183895244314E-6	TEST
// line 986	WITHOUT_CLASSIFICATION	0.9999956460021717	WITHOUT_CLASSIFICATION	4.353997828278949E-6	TEST
// line 996	WITHOUT_CLASSIFICATION	0.999995069977215	WITHOUT_CLASSIFICATION	4.930022785016936E-6	TEST
// line 1001	WITHOUT_CLASSIFICATION	0.9999952454972278	WITHOUT_CLASSIFICATION	4.754502772212372E-6	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999960895767743	WITHOUT_CLASSIFICATION	3.910423225619466E-6	TEST
// line 1008	WITHOUT_CLASSIFICATION	0.9999963669450367	WITHOUT_CLASSIFICATION	3.6330549633346307E-6	TEST
// line 1014	WITHOUT_CLASSIFICATION	0.9999958985102281	WITHOUT_CLASSIFICATION	4.1014897719642995E-6	TEST
// line 1029	WITHOUT_CLASSIFICATION	0.9999962921902305	WITHOUT_CLASSIFICATION	3.707809769561167E-6	TEST
// line 1032	WITHOUT_CLASSIFICATION	0.9999965149878879	WITHOUT_CLASSIFICATION	3.485012112092853E-6	TEST
// line 1034	WITHOUT_CLASSIFICATION	0.9999962159031914	WITHOUT_CLASSIFICATION	3.784096808564817E-6	TEST
// line 1045	WITHOUT_CLASSIFICATION	0.9999959385058604	WITHOUT_CLASSIFICATION	4.061494139516893E-6	TEST
// line 1048	WITHOUT_CLASSIFICATION	0.9999963144897596	WITHOUT_CLASSIFICATION	3.685510240444167E-6	TEST
// line 1051	WITHOUT_CLASSIFICATION	0.9999950146200456	WITHOUT_CLASSIFICATION	4.985379954317169E-6	TEST
// line 1058	WITHOUT_CLASSIFICATION	0.999996246672548	WITHOUT_CLASSIFICATION	3.753327451804573E-6	TEST
// line 1070	WITHOUT_CLASSIFICATION	0.999995874487284	WITHOUT_CLASSIFICATION	4.125512716022024E-6	TEST
// line 1073	WITHOUT_CLASSIFICATION	0.9999961853059709	WITHOUT_CLASSIFICATION	3.814694029061299E-6	TEST
// line 1076	WITHOUT_CLASSIFICATION	0.9999959161158161	WITHOUT_CLASSIFICATION	4.083884184033207E-6	TEST
// line 1079	WITHOUT_CLASSIFICATION	0.9999959746566511	WITHOUT_CLASSIFICATION	4.0253433487902186E-6	TEST
// line 1082	WITHOUT_CLASSIFICATION	0.9999966605121482	WITHOUT_CLASSIFICATION	3.3394878517265993E-6	TEST
// line 1089	WITHOUT_CLASSIFICATION	0.999996306652594	WITHOUT_CLASSIFICATION	3.693347405984644E-6	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999960238970608	WITHOUT_CLASSIFICATION	3.976102939201266E-6	TEST
// line 1100	WITHOUT_CLASSIFICATION	0.9999960227474374	WITHOUT_CLASSIFICATION	3.977252562652979E-6	TEST
// line 1103	WITHOUT_CLASSIFICATION	0.9999961318481424	WITHOUT_CLASSIFICATION	3.868151857604975E-6	TEST
// line 1107	WITHOUT_CLASSIFICATION	0.9999958970946955	WITHOUT_CLASSIFICATION	4.1029053045132045E-6	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.999994202706954	WITHOUT_CLASSIFICATION	5.797293045907086E-6	TEST
// line 1113	WITHOUT_CLASSIFICATION	0.9999955011487545	WITHOUT_CLASSIFICATION	4.498851245558727E-6	TEST
// line 1115	WITHOUT_CLASSIFICATION	0.9999951713165383	WITHOUT_CLASSIFICATION	4.82868346173694E-6	TEST
// line 1119	WITHOUT_CLASSIFICATION	0.9999953021799288	WITHOUT_CLASSIFICATION	4.697820071186023E-6	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999960402432799	WITHOUT_CLASSIFICATION	3.9597567200304825E-6	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999955052520505	WITHOUT_CLASSIFICATION	4.494747949505722E-6	TEST
// line 1135	WITHOUT_CLASSIFICATION	0.9999955379404989	WITHOUT_CLASSIFICATION	4.4620595011935415E-6	TEST
// line 1137	WITHOUT_CLASSIFICATION	0.9999956065964021	WITHOUT_CLASSIFICATION	4.3934035978668725E-6	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999958700156985	WITHOUT_CLASSIFICATION	4.129984301607396E-6	TEST
// line 1151	WITHOUT_CLASSIFICATION	0.9999942955590084	WITHOUT_CLASSIFICATION	5.704440991651794E-6	TEST
// line 1154	WITHOUT_CLASSIFICATION	0.9999953397092651	WITHOUT_CLASSIFICATION	4.660290734906066E-6	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999957029822194	WITHOUT_CLASSIFICATION	4.297017780630148E-6	TEST
// line 1164	WITHOUT_CLASSIFICATION	0.9999953522763276	WITHOUT_CLASSIFICATION	4.6477236724711865E-6	TEST
// line 1175	WITHOUT_CLASSIFICATION	0.9999952749334379	WITHOUT_CLASSIFICATION	4.725066562153391E-6	TEST
// line 1178	WITHOUT_CLASSIFICATION	0.9999957219243366	WITHOUT_CLASSIFICATION	4.27807566329822E-6	TEST
// line 1187	WITHOUT_CLASSIFICATION	0.9999961402316804	WITHOUT_CLASSIFICATION	3.859768319585233E-6	TEST
// line 1189	WITHOUT_CLASSIFICATION	0.9999961461114095	WITHOUT_CLASSIFICATION	3.853888590514224E-6	TEST
// line 1193	WITHOUT_CLASSIFICATION	0.9999957113669508	WITHOUT_CLASSIFICATION	4.288633049272622E-6	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999962377326866	WITHOUT_CLASSIFICATION	3.7622673132214715E-6	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999962331633461	WITHOUT_CLASSIFICATION	3.7668366539653215E-6	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999961687736618	WITHOUT_CLASSIFICATION	3.831226338262697E-6	TEST
// line 1214	WITHOUT_CLASSIFICATION	0.9999957332502533	WITHOUT_CLASSIFICATION	4.266749746718524E-6	TEST
// line 1234	WITHOUT_CLASSIFICATION	0.9999960377379862	WITHOUT_CLASSIFICATION	3.962262013856681E-6	TEST
// line 1239	WITHOUT_CLASSIFICATION	0.9999960367221046	WITHOUT_CLASSIFICATION	3.963277895510983E-6	TEST
// line 1243	WITHOUT_CLASSIFICATION	0.9999960699155402	WITHOUT_CLASSIFICATION	3.930084459751756E-6	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999958220656002	WITHOUT_CLASSIFICATION	4.177934399865691E-6	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999948341364306	WITHOUT_CLASSIFICATION	5.165863569429378E-6	TEST
// line 1263	WITHOUT_CLASSIFICATION	0.9999959890719933	WITHOUT_CLASSIFICATION	4.010928006647319E-6	TEST
// line 1269	WITHOUT_CLASSIFICATION	0.9999957667499968	WITHOUT_CLASSIFICATION	4.233250003185374E-6	TEST
// line 1280	WITHOUT_CLASSIFICATION	0.9999965327926946	WITHOUT_CLASSIFICATION	3.467207305284921E-6	TEST
// line 1283	WITHOUT_CLASSIFICATION	0.9999963652869244	WITHOUT_CLASSIFICATION	3.6347130756350488E-6	TEST
// line 1290	WITHOUT_CLASSIFICATION	0.9999962072154733	WITHOUT_CLASSIFICATION	3.7927845266088997E-6	TEST
// line 1296	WITHOUT_CLASSIFICATION	0.9999957716307711	WITHOUT_CLASSIFICATION	4.228369228962395E-6	TEST
// line 1299	WITHOUT_CLASSIFICATION	0.9999956689430185	WITHOUT_CLASSIFICATION	4.33105698152475E-6	TEST
// line 1302	WITHOUT_CLASSIFICATION	0.9999964146905327	WITHOUT_CLASSIFICATION	3.585309467237645E-6	TEST
// line 1309	WITHOUT_CLASSIFICATION	0.9999961132077991	WITHOUT_CLASSIFICATION	3.886792200931271E-6	TEST
// line 1313	WITHOUT_CLASSIFICATION	0.9999953927485906	WITHOUT_CLASSIFICATION	4.6072514093123215E-6	TEST
// line 1315	WITHOUT_CLASSIFICATION	0.9999954829953431	WITHOUT_CLASSIFICATION	4.517004656928103E-6	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999964390197358	WITHOUT_CLASSIFICATION	3.5609802642652978E-6	TEST
// line 1328	WITHOUT_CLASSIFICATION	0.9999963397519219	WITHOUT_CLASSIFICATION	3.660248078038717E-6	TEST
// line 1335	WITHOUT_CLASSIFICATION	0.9999954845284502	WITHOUT_CLASSIFICATION	4.51547154979231E-6	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999960559691554	WITHOUT_CLASSIFICATION	3.944030844649177E-6	TEST
// line 1352	WITHOUT_CLASSIFICATION	0.9999959977581916	WITHOUT_CLASSIFICATION	4.002241808425435E-6	TEST
// line 1358	WITHOUT_CLASSIFICATION	0.9999959878357135	WITHOUT_CLASSIFICATION	4.012164286481127E-6	TEST
// line 1374	WITHOUT_CLASSIFICATION	0.9999956862979985	WITHOUT_CLASSIFICATION	4.313702001412618E-6	TEST
// line 1381	WITHOUT_CLASSIFICATION	0.9999952145925306	WITHOUT_CLASSIFICATION	4.785407469400082E-6	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999960877303379	WITHOUT_CLASSIFICATION	3.912269662088258E-6	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999960490699275	WITHOUT_CLASSIFICATION	3.950930072559953E-6	TEST
// line 1415	WITHOUT_CLASSIFICATION	0.9999952778686211	WITHOUT_CLASSIFICATION	4.722131378862094E-6	TEST
// line 1431	WITHOUT_CLASSIFICATION	0.9999948037511407	WITHOUT_CLASSIFICATION	5.19624885929962E-6	TEST
// line 1434	WITHOUT_CLASSIFICATION	0.999995574228272	WITHOUT_CLASSIFICATION	4.425771727930062E-6	TEST
// line 1440	WITHOUT_CLASSIFICATION	0.9999958202884749	WITHOUT_CLASSIFICATION	4.179711525094667E-6	TEST
// line 1443	WITHOUT_CLASSIFICATION	0.9999956260544769	WITHOUT_CLASSIFICATION	4.373945523086349E-6	TEST
// line 1453	WITHOUT_CLASSIFICATION	0.9999957113671711	WITHOUT_CLASSIFICATION	4.288632828816646E-6	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999954570634186	WITHOUT_CLASSIFICATION	4.542936581320395E-6	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.999995842053916	WITHOUT_CLASSIFICATION	4.1579460840241814E-6	TEST
// line 1465	WITHOUT_CLASSIFICATION	0.9999954067411247	WITHOUT_CLASSIFICATION	4.593258875240514E-6	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999959034130607	WITHOUT_CLASSIFICATION	4.0965869393774455E-6	TEST
// line 1477	WITHOUT_CLASSIFICATION	0.9999953202232015	WITHOUT_CLASSIFICATION	4.6797767985211755E-6	TEST
// line 1480	WITHOUT_CLASSIFICATION	0.9999962805810777	WITHOUT_CLASSIFICATION	3.7194189223825435E-6	TEST
// line 1485	WITHOUT_CLASSIFICATION	0.9999958116987328	WITHOUT_CLASSIFICATION	4.188301267293005E-6	TEST
// line 1488	WITHOUT_CLASSIFICATION	0.9999957011468991	WITHOUT_CLASSIFICATION	4.298853100897503E-6	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999955352029067	WITHOUT_CLASSIFICATION	4.464797093285846E-6	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999961659532024	WITHOUT_CLASSIFICATION	3.834046797573067E-6	TEST
// line 1510	WITHOUT_CLASSIFICATION	0.9999957713586562	WITHOUT_CLASSIFICATION	4.2286413437471536E-6	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.999995515772797	WITHOUT_CLASSIFICATION	4.484227203031997E-6	TEST
// line 1516	WITHOUT_CLASSIFICATION	0.9999952078504297	WITHOUT_CLASSIFICATION	4.792149570246723E-6	TEST
// line 1533	WITHOUT_CLASSIFICATION	0.999995552685154	WITHOUT_CLASSIFICATION	4.447314846045776E-6	TEST
// line 1550	WITHOUT_CLASSIFICATION	0.9999956848522652	WITHOUT_CLASSIFICATION	4.315147734837909E-6	TEST
// line 1553	WITHOUT_CLASSIFICATION	0.9999955139325021	WITHOUT_CLASSIFICATION	4.486067498008954E-6	TEST
// line 1556	WITHOUT_CLASSIFICATION	0.9999952467043088	WITHOUT_CLASSIFICATION	4.753295691066969E-6	TEST
// line 1565	WITHOUT_CLASSIFICATION	0.9999952212013552	WITHOUT_CLASSIFICATION	4.778798644801138E-6	TEST
// line 1568	WITHOUT_CLASSIFICATION	0.9999957527208065	WITHOUT_CLASSIFICATION	4.247279193531512E-6	TEST
// line 1571	WITHOUT_CLASSIFICATION	0.9999943731953793	WITHOUT_CLASSIFICATION	5.626804620587723E-6	TEST
// line 1574	WITHOUT_CLASSIFICATION	0.9999954063886841	WITHOUT_CLASSIFICATION	4.5936113159180965E-6	TEST
// line 1577	WITHOUT_CLASSIFICATION	0.9999952327440594	WITHOUT_CLASSIFICATION	4.767255940637625E-6	TEST
// line 1587	WITHOUT_CLASSIFICATION	0.9999958079620711	WITHOUT_CLASSIFICATION	4.192037928897033E-6	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.9999952879049688	WITHOUT_CLASSIFICATION	4.712095031236456E-6	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.999995810157037	WITHOUT_CLASSIFICATION	4.189842963084982E-6	TEST
// line 1600	WITHOUT_CLASSIFICATION	0.9999959058950267	WITHOUT_CLASSIFICATION	4.094104973289609E-6	TEST
// line 1609	WITHOUT_CLASSIFICATION	0.9999958291786998	WITHOUT_CLASSIFICATION	4.1708213001970585E-6	TEST
// line 1623	WITHOUT_CLASSIFICATION	0.9999960142847056	WITHOUT_CLASSIFICATION	3.985715294349434E-6	TEST
// line 1626	WITHOUT_CLASSIFICATION	0.9999956248384018	WITHOUT_CLASSIFICATION	4.375161598194172E-6	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999958123065759	WITHOUT_CLASSIFICATION	4.187693424148911E-6	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999960135842053	WITHOUT_CLASSIFICATION	3.98641579460995E-6	TEST
// line 1638	WITHOUT_CLASSIFICATION	0.9999960250866408	WITHOUT_CLASSIFICATION	3.974913359285597E-6	TEST
// line 1641	WITHOUT_CLASSIFICATION	0.999994431739893	WITHOUT_CLASSIFICATION	5.568260107029161E-6	TEST
// line 1644	WITHOUT_CLASSIFICATION	0.999995290736699	WITHOUT_CLASSIFICATION	4.709263301048442E-6	TEST
// line 1649	WITHOUT_CLASSIFICATION	0.9999955080108708	WITHOUT_CLASSIFICATION	4.491989129151159E-6	TEST
// line 1655	WITHOUT_CLASSIFICATION	0.9999951992680911	WITHOUT_CLASSIFICATION	4.800731908947197E-6	TEST
// line 1658	WITHOUT_CLASSIFICATION	0.9999957593704252	WITHOUT_CLASSIFICATION	4.240629574835812E-6	TEST
// line 1661	WITHOUT_CLASSIFICATION	0.9999941848453755	WITHOUT_CLASSIFICATION	5.815154624486074E-6	TEST
// line 1672	WITHOUT_CLASSIFICATION	0.9999957766031468	WITHOUT_CLASSIFICATION	4.223396853163919E-6	TEST
// line 1677	WITHOUT_CLASSIFICATION	0.9999952308235044	WITHOUT_CLASSIFICATION	4.769176495681315E-6	TEST
// line 1687	WITHOUT_CLASSIFICATION	0.9999958035148846	WITHOUT_CLASSIFICATION	4.196485115352376E-6	TEST
// line 1694	WITHOUT_CLASSIFICATION	0.9999954317162004	WITHOUT_CLASSIFICATION	4.56828379954433E-6	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999957762794747	WITHOUT_CLASSIFICATION	4.22372052525475E-6	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999961672341264	WITHOUT_CLASSIFICATION	3.832765873511669E-6	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999957347383808	WITHOUT_CLASSIFICATION	4.265261619226074E-6	TEST
// line 1733	WITHOUT_CLASSIFICATION	0.999995564726125	WITHOUT_CLASSIFICATION	4.435273874882507E-6	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.999995831705991	WITHOUT_CLASSIFICATION	4.168294008885596E-6	TEST
// line 1745	WITHOUT_CLASSIFICATION	0.9999953908819308	WITHOUT_CLASSIFICATION	4.609118069131E-6	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999955259149165	WITHOUT_CLASSIFICATION	4.474085083574399E-6	TEST
// line 1757	WITHOUT_CLASSIFICATION	0.99999522557768	WITHOUT_CLASSIFICATION	4.774422320048075E-6	TEST
// line 1769	WITHOUT_CLASSIFICATION	0.9999953928083206	WITHOUT_CLASSIFICATION	4.607191679425891E-6	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999956581353765	WITHOUT_CLASSIFICATION	4.341864623491362E-6	TEST
// line 1775	WITHOUT_CLASSIFICATION	0.9999951869336745	WITHOUT_CLASSIFICATION	4.813066325575922E-6	TEST
// line 1784	WITHOUT_CLASSIFICATION	0.9999958335712829	WITHOUT_CLASSIFICATION	4.166428717166855E-6	TEST
// line 1808	WITHOUT_CLASSIFICATION	0.9999964172658045	WITHOUT_CLASSIFICATION	3.5827341955561865E-6	TEST
// line 1814	WITHOUT_CLASSIFICATION	0.9999961014015423	WITHOUT_CLASSIFICATION	3.8985984577617995E-6	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.9999958973384067	WITHOUT_CLASSIFICATION	4.102661593362808E-6	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999964253942463	WITHOUT_CLASSIFICATION	3.574605753664503E-6	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999948593161884	WITHOUT_CLASSIFICATION	5.140683811670871E-6	TEST
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9999702351527081	WITHOUT_CLASSIFICATION	2.976484729191576E-5	TEST
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999594930998763	WITHOUT_CLASSIFICATION	4.050690012373782E-5	TEST
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999677437767602	WITHOUT_CLASSIFICATION	3.22562232396697E-5	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999993871775907	WITHOUT_CLASSIFICATION	6.128224093275898E-7	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999995699808387	WITHOUT_CLASSIFICATION	4.300191612319768E-7	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9999892847855812	WITHOUT_CLASSIFICATION	1.0715214418632682E-5	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999882293454649	WITHOUT_CLASSIFICATION	1.177065453503581E-5	TEST
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999063935717712	WITHOUT_CLASSIFICATION	9.36064282287855E-5	TEST
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9999828265079473	WITHOUT_CLASSIFICATION	1.7173492052725144E-5	TEST
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9999985463101646	WITHOUT_CLASSIFICATION	1.4536898353527859E-6	TEST
// line 529	WITHOUT_CLASSIFICATION	0.9999956301204869	WITHOUT_CLASSIFICATION	4.369879513127022E-6	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999971072972874	WITHOUT_CLASSIFICATION	2.892702712619976E-6	TEST
/* XXX*/	WITHOUT_CLASSIFICATION	0.9999738955775977	WITHOUT_CLASSIFICATION	2.6104422402351225E-5	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999960998288399	WITHOUT_CLASSIFICATION	3.900171160097057E-6	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999952998386301	WITHOUT_CLASSIFICATION	4.700161369896901E-6	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999916590902006	WITHOUT_CLASSIFICATION	8.340909799391831E-6	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.999998975893077	WITHOUT_CLASSIFICATION	1.024106923112446E-6	TEST
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999986304356874	WITHOUT_CLASSIFICATION	1.3695643126034063E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999994752676907	WITHOUT_CLASSIFICATION	5.247323092173336E-7	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.999998108733693	WITHOUT_CLASSIFICATION	1.891266306994341E-6	TEST
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999972047889448	WITHOUT_CLASSIFICATION	2.7952110551092E-6	TEST
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999994583967272	WITHOUT_CLASSIFICATION	5.416032727724589E-7	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999998603411284	WITHOUT_CLASSIFICATION	1.39658871488046E-7	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999998603411284	WITHOUT_CLASSIFICATION	1.39658871488046E-7	TEST
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999998988563518	WITHOUT_CLASSIFICATION	1.0114364818883624E-7	TEST
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9999992280094299	WITHOUT_CLASSIFICATION	7.719905700928691E-7	TEST
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999902984469214	WITHOUT_CLASSIFICATION	9.701553078480503E-6	TEST
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999978916984309	WITHOUT_CLASSIFICATION	2.108301569015727E-6	TEST
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999962647404261	WITHOUT_CLASSIFICATION	3.7352595738952103E-6	TEST
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999997164711181	WITHOUT_CLASSIFICATION	2.8352888192783874E-7	TEST
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999999370883768	WITHOUT_CLASSIFICATION	6.291162314982805E-8	TEST
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999985065639305	WITHOUT_CLASSIFICATION	1.4934360694165973E-6	TEST
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.999999884986643	WITHOUT_CLASSIFICATION	1.1501335698504642E-7	TEST
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999988934578654	WITHOUT_CLASSIFICATION	1.106542134634276E-6	TEST
// Parser states:	WITHOUT_CLASSIFICATION	0.9999905767365808	WITHOUT_CLASSIFICATION	9.42326341910477E-6	TEST
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9998072947970906	WITHOUT_CLASSIFICATION	1.9270520290937376E-4	TEST
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999996494029427	WITHOUT_CLASSIFICATION	3.505970572485273E-7	TEST
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999925648860412	WITHOUT_CLASSIFICATION	7.4351139588320415E-6	TEST
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999903155318077	WITHOUT_CLASSIFICATION	9.684468192360104E-6	TEST
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999904732284641	WITHOUT_CLASSIFICATION	9.526771535890916E-6	TEST
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999988966290632	WITHOUT_CLASSIFICATION	1.1033709368831597E-6	TEST
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999960094792544	WITHOUT_CLASSIFICATION	3.990520745645225E-6	TEST
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999999027859041	WITHOUT_CLASSIFICATION	9.72140959284144E-8	TEST
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999987939583227	WITHOUT_CLASSIFICATION	1.2060416772475632E-6	TEST
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999999374090373	WITHOUT_CLASSIFICATION	6.259096272510195E-8	TEST
// Node	WITHOUT_CLASSIFICATION	0.9999924400123053	WITHOUT_CLASSIFICATION	7.559987694746771E-6	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9994846782011297	WITHOUT_CLASSIFICATION	5.153217988702493E-4	TEST
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999974015023199	WITHOUT_CLASSIFICATION	2.5984976801302117E-6	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9994846782011297	WITHOUT_CLASSIFICATION	5.153217988702493E-4	TEST
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999957113105686	WITHOUT_CLASSIFICATION	4.28868943136027E-6	TEST
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999915160789065	WITHOUT_CLASSIFICATION	8.483921093474952E-6	TEST
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9999929190377653	WITHOUT_CLASSIFICATION	7.080962234687684E-6	TEST
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999914804626506	WITHOUT_CLASSIFICATION	8.519537349341773E-6	TEST
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.999998676944233	WITHOUT_CLASSIFICATION	1.3230557670510005E-6	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999865554540032	WITHOUT_CLASSIFICATION	1.3444545996892059E-5	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999865554540032	WITHOUT_CLASSIFICATION	1.3444545996892059E-5	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999865554540032	WITHOUT_CLASSIFICATION	1.3444545996892059E-5	TEST
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.999997381532407	WITHOUT_CLASSIFICATION	2.6184675930193857E-6	TEST
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999966312004295	WITHOUT_CLASSIFICATION	3.3687995705119706E-6	TEST
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999998802763457	WITHOUT_CLASSIFICATION	1.197236542645459E-7	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999512669625804	WITHOUT_CLASSIFICATION	4.873303741951106E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999512669625804	WITHOUT_CLASSIFICATION	4.873303741951106E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999512669625804	WITHOUT_CLASSIFICATION	4.873303741951106E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999512669625804	WITHOUT_CLASSIFICATION	4.873303741951106E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999512669625804	WITHOUT_CLASSIFICATION	4.873303741951106E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999512669625804	WITHOUT_CLASSIFICATION	4.873303741951106E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999808480774222	WITHOUT_CLASSIFICATION	1.9151922577937806E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999808480774222	WITHOUT_CLASSIFICATION	1.9151922577937806E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999808480774222	WITHOUT_CLASSIFICATION	1.9151922577937806E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999808480774222	WITHOUT_CLASSIFICATION	1.9151922577937806E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999808480774222	WITHOUT_CLASSIFICATION	1.9151922577937806E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999378537389442	WITHOUT_CLASSIFICATION	6.21462610557297E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999378537389442	WITHOUT_CLASSIFICATION	6.21462610557297E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999378537389442	WITHOUT_CLASSIFICATION	6.21462610557297E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999378537389442	WITHOUT_CLASSIFICATION	6.21462610557297E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999378537389442	WITHOUT_CLASSIFICATION	6.21462610557297E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999592557987186	WITHOUT_CLASSIFICATION	4.074420128145634E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999592557987186	WITHOUT_CLASSIFICATION	4.074420128145634E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999592557987186	WITHOUT_CLASSIFICATION	4.074420128145634E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999592557987186	WITHOUT_CLASSIFICATION	4.074420128145634E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999592557987186	WITHOUT_CLASSIFICATION	4.074420128145634E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999592557987186	WITHOUT_CLASSIFICATION	4.074420128145634E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999864743127845	WITHOUT_CLASSIFICATION	1.3525687215365528E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999864743127845	WITHOUT_CLASSIFICATION	1.3525687215365528E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999864743127845	WITHOUT_CLASSIFICATION	1.3525687215365528E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999864743127845	WITHOUT_CLASSIFICATION	1.3525687215365528E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999864743127845	WITHOUT_CLASSIFICATION	1.3525687215365528E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999861515152741	WITHOUT_CLASSIFICATION	1.3848484725815959E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999861515152741	WITHOUT_CLASSIFICATION	1.3848484725815959E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999861515152741	WITHOUT_CLASSIFICATION	1.3848484725815959E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999861515152741	WITHOUT_CLASSIFICATION	1.3848484725815959E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999861515152741	WITHOUT_CLASSIFICATION	1.3848484725815959E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999866468451882	WITHOUT_CLASSIFICATION	1.3353154811814066E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999866468451882	WITHOUT_CLASSIFICATION	1.3353154811814066E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999866468451882	WITHOUT_CLASSIFICATION	1.3353154811814066E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999866468451882	WITHOUT_CLASSIFICATION	1.3353154811814066E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999866468451882	WITHOUT_CLASSIFICATION	1.3353154811814066E-5	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999991863841985	WITHOUT_CLASSIFICATION	8.136158014725028E-7	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999993106353011	WITHOUT_CLASSIFICATION	6.893646988644111E-7	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999871689843447	WITHOUT_CLASSIFICATION	1.2831015655345431E-5	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999976323072534	WITHOUT_CLASSIFICATION	2.3676927466863923E-6	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999994295221981	WITHOUT_CLASSIFICATION	5.704778018865576E-7	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999957964742677	WITHOUT_CLASSIFICATION	4.203525732283468E-6	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999953125550246	WITHOUT_CLASSIFICATION	4.687444975369221E-6	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999965462177689	WITHOUT_CLASSIFICATION	3.453782231129061E-6	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999957191486988	WITHOUT_CLASSIFICATION	4.280851301187431E-6	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999961275685222	WITHOUT_CLASSIFICATION	3.872431477809898E-6	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999959262047112	WITHOUT_CLASSIFICATION	4.0737952887555285E-6	TEST
// line 426	WITHOUT_CLASSIFICATION	0.999995636508367	WITHOUT_CLASSIFICATION	4.3634916330627646E-6	TEST
// line 280	WITHOUT_CLASSIFICATION	0.9999965624844852	WITHOUT_CLASSIFICATION	3.4375155146898485E-6	TEST
// line 283	WITHOUT_CLASSIFICATION	0.9999963964091848	WITHOUT_CLASSIFICATION	3.603590815134233E-6	TEST
// line 296	WITHOUT_CLASSIFICATION	0.9999958071035318	WITHOUT_CLASSIFICATION	4.1928964682530465E-6	TEST
// line 324	WITHOUT_CLASSIFICATION	0.9999960611109614	WITHOUT_CLASSIFICATION	3.9388890385492584E-6	TEST
// line 327	WITHOUT_CLASSIFICATION	0.999996042119545	WITHOUT_CLASSIFICATION	3.957880455083221E-6	TEST
// line 331	WITHOUT_CLASSIFICATION	0.999995259203951	WITHOUT_CLASSIFICATION	4.740796048933496E-6	TEST
// line 333	WITHOUT_CLASSIFICATION	0.9999954638130755	WITHOUT_CLASSIFICATION	4.536186924526699E-6	TEST
// line 336	WITHOUT_CLASSIFICATION	0.9999955749988437	WITHOUT_CLASSIFICATION	4.425001156219467E-6	TEST
// line 342	WITHOUT_CLASSIFICATION	0.9999960843762358	WITHOUT_CLASSIFICATION	3.9156237642216275E-6	TEST
// line 345	WITHOUT_CLASSIFICATION	0.9999956708415674	WITHOUT_CLASSIFICATION	4.329158432683538E-6	TEST
// line 348	WITHOUT_CLASSIFICATION	0.9999960721972068	WITHOUT_CLASSIFICATION	3.927802793264754E-6	TEST
// line 354	WITHOUT_CLASSIFICATION	0.9999956665483891	WITHOUT_CLASSIFICATION	4.333451610873211E-6	TEST
// line 368	WITHOUT_CLASSIFICATION	0.9999960227834771	WITHOUT_CLASSIFICATION	3.977216522941192E-6	TEST
// line 377	WITHOUT_CLASSIFICATION	0.9999955394889699	WITHOUT_CLASSIFICATION	4.460511030149976E-6	TEST
// line 388	WITHOUT_CLASSIFICATION	0.999995932625588	WITHOUT_CLASSIFICATION	4.067374412038426E-6	TEST
// line 392	WITHOUT_CLASSIFICATION	0.9999960659294065	WITHOUT_CLASSIFICATION	3.9340705935766224E-6	TEST
// line 397	WITHOUT_CLASSIFICATION	0.9999957602486637	WITHOUT_CLASSIFICATION	4.239751336324592E-6	TEST
// line 429	WITHOUT_CLASSIFICATION	0.9999957076164138	WITHOUT_CLASSIFICATION	4.292383586275005E-6	TEST
// line 432	WITHOUT_CLASSIFICATION	0.9999959480375508	WITHOUT_CLASSIFICATION	4.051962449291949E-6	TEST
// line 436	WITHOUT_CLASSIFICATION	0.9999955516879344	WITHOUT_CLASSIFICATION	4.448312065603022E-6	TEST
// line 445	WITHOUT_CLASSIFICATION	0.9999951173130073	WITHOUT_CLASSIFICATION	4.882686992660358E-6	TEST
// line 448	WITHOUT_CLASSIFICATION	0.9999955700369177	WITHOUT_CLASSIFICATION	4.4299630822163E-6	TEST
// line 454	WITHOUT_CLASSIFICATION	0.999995093460146	WITHOUT_CLASSIFICATION	4.906539853981551E-6	TEST
// line 459	WITHOUT_CLASSIFICATION	0.9999953218430874	WITHOUT_CLASSIFICATION	4.678156912571773E-6	TEST
// line 466	WITHOUT_CLASSIFICATION	0.9999951072136121	WITHOUT_CLASSIFICATION	4.8927863879058906E-6	TEST
// line 469	WITHOUT_CLASSIFICATION	0.9999952938824429	WITHOUT_CLASSIFICATION	4.706117557131319E-6	TEST
// line 478	WITHOUT_CLASSIFICATION	0.9999956803632086	WITHOUT_CLASSIFICATION	4.319636791416701E-6	TEST
// line 481	WITHOUT_CLASSIFICATION	0.999995381719573	WITHOUT_CLASSIFICATION	4.61828042691822E-6	TEST
// line 488	WITHOUT_CLASSIFICATION	0.9999955386103752	WITHOUT_CLASSIFICATION	4.461389624924124E-6	TEST
// line 494	WITHOUT_CLASSIFICATION	0.9999952086919678	WITHOUT_CLASSIFICATION	4.79130803224341E-6	TEST
// line 497	WITHOUT_CLASSIFICATION	0.9999954936797785	WITHOUT_CLASSIFICATION	4.506320221480756E-6	TEST
// line 503	WITHOUT_CLASSIFICATION	0.9999959137973345	WITHOUT_CLASSIFICATION	4.086202665479913E-6	TEST
// line 506	WITHOUT_CLASSIFICATION	0.9999956346891278	WITHOUT_CLASSIFICATION	4.365310872234443E-6	TEST
// line 509	WITHOUT_CLASSIFICATION	0.9999956857440527	WITHOUT_CLASSIFICATION	4.3142559472466195E-6	TEST
// line 512	WITHOUT_CLASSIFICATION	0.9999960083206181	WITHOUT_CLASSIFICATION	3.991679381860949E-6	TEST
// line 521	WITHOUT_CLASSIFICATION	0.9999953336937831	WITHOUT_CLASSIFICATION	4.6663062167991716E-6	TEST
// line 526	WITHOUT_CLASSIFICATION	0.9999955577286407	WITHOUT_CLASSIFICATION	4.442271359324145E-6	TEST
// line 540	WITHOUT_CLASSIFICATION	0.999995729807366	WITHOUT_CLASSIFICATION	4.270192633972388E-6	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999955342481163	WITHOUT_CLASSIFICATION	4.465751883743247E-6	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999952172338257	WITHOUT_CLASSIFICATION	4.782766174339291E-6	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999950422405686	WITHOUT_CLASSIFICATION	4.957759431457467E-6	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999961191174046	WITHOUT_CLASSIFICATION	3.880882595473491E-6	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999956142847477	WITHOUT_CLASSIFICATION	4.3857152523734145E-6	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999948661867167	WITHOUT_CLASSIFICATION	5.133813283243036E-6	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999950724154222	WITHOUT_CLASSIFICATION	4.927584577778943E-6	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999954967747801	WITHOUT_CLASSIFICATION	4.503225219908152E-6	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999960888534853	WITHOUT_CLASSIFICATION	3.911146514574128E-6	TEST
// line 785	WITHOUT_CLASSIFICATION	0.999995593786705	WITHOUT_CLASSIFICATION	4.406213295003053E-6	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999954775421684	WITHOUT_CLASSIFICATION	4.522457831487983E-6	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999948938894166	WITHOUT_CLASSIFICATION	5.106110583361888E-6	TEST
// line 534	WITHOUT_CLASSIFICATION	0.9999955132933938	WITHOUT_CLASSIFICATION	4.486706606279691E-6	TEST
// line 549	WITHOUT_CLASSIFICATION	0.9999953370120017	WITHOUT_CLASSIFICATION	4.662987998239728E-6	TEST
// line 552	WITHOUT_CLASSIFICATION	0.9999954746636777	WITHOUT_CLASSIFICATION	4.5253363223228245E-6	TEST
// line 558	WITHOUT_CLASSIFICATION	0.999995463772082	WITHOUT_CLASSIFICATION	4.536227917943942E-6	TEST
// line 561	WITHOUT_CLASSIFICATION	0.9999948376305046	WITHOUT_CLASSIFICATION	5.162369495457893E-6	TEST
// line 571	WITHOUT_CLASSIFICATION	0.9999948435143925	WITHOUT_CLASSIFICATION	5.156485607521522E-6	TEST
// line 574	WITHOUT_CLASSIFICATION	0.9999952363034315	WITHOUT_CLASSIFICATION	4.763696568490567E-6	TEST
// line 579	WITHOUT_CLASSIFICATION	0.9999952369123428	WITHOUT_CLASSIFICATION	4.7630876572439885E-6	TEST
// line 586	WITHOUT_CLASSIFICATION	0.9999955961769215	WITHOUT_CLASSIFICATION	4.403823078519036E-6	TEST
// line 589	WITHOUT_CLASSIFICATION	0.9999956599522382	WITHOUT_CLASSIFICATION	4.3400477618475495E-6	TEST
// line 592	WITHOUT_CLASSIFICATION	0.9999956562148382	WITHOUT_CLASSIFICATION	4.343785161828223E-6	TEST
// line 595	WITHOUT_CLASSIFICATION	0.9999950908660681	WITHOUT_CLASSIFICATION	4.9091339319035805E-6	TEST
// line 598	WITHOUT_CLASSIFICATION	0.9999956450112307	WITHOUT_CLASSIFICATION	4.354988769334161E-6	TEST
// line 623	WITHOUT_CLASSIFICATION	0.9999958638279546	WITHOUT_CLASSIFICATION	4.136172045382632E-6	TEST
// line 627	WITHOUT_CLASSIFICATION	0.9999956263292287	WITHOUT_CLASSIFICATION	4.373670771321943E-6	TEST
// line 630	WITHOUT_CLASSIFICATION	0.9999959291956532	WITHOUT_CLASSIFICATION	4.0708043467804176E-6	TEST
// line 633	WITHOUT_CLASSIFICATION	0.9999953816277335	WITHOUT_CLASSIFICATION	4.6183722665411606E-6	TEST
// line 639	WITHOUT_CLASSIFICATION	0.9999955036310233	WITHOUT_CLASSIFICATION	4.496368976645985E-6	TEST
// line 648	WITHOUT_CLASSIFICATION	0.9999956388804362	WITHOUT_CLASSIFICATION	4.361119563787313E-6	TEST
// line 657	WITHOUT_CLASSIFICATION	0.9999952060588496	WITHOUT_CLASSIFICATION	4.793941150370253E-6	TEST
// line 661	WITHOUT_CLASSIFICATION	0.9999946674056202	WITHOUT_CLASSIFICATION	5.332594379823529E-6	TEST
// line 666	WITHOUT_CLASSIFICATION	0.9999948784375713	WITHOUT_CLASSIFICATION	5.121562428734555E-6	TEST
// line 678	WITHOUT_CLASSIFICATION	0.9999955955189949	WITHOUT_CLASSIFICATION	4.4044810050845326E-6	TEST
// line 682	WITHOUT_CLASSIFICATION	0.9999960651934242	WITHOUT_CLASSIFICATION	3.934806575710579E-6	TEST
// line 688	WITHOUT_CLASSIFICATION	0.9999954501244981	WITHOUT_CLASSIFICATION	4.549875501940755E-6	TEST
// line 699	WITHOUT_CLASSIFICATION	0.9999950749738555	WITHOUT_CLASSIFICATION	4.925026144451996E-6	TEST
// line 706	WITHOUT_CLASSIFICATION	0.9999956669819409	WITHOUT_CLASSIFICATION	4.3330180591187E-6	TEST
// line 708	WITHOUT_CLASSIFICATION	0.9999960249623242	WITHOUT_CLASSIFICATION	3.975037675852531E-6	TEST
// line 727	WITHOUT_CLASSIFICATION	0.9999954901456081	WITHOUT_CLASSIFICATION	4.509854391934376E-6	TEST
// line 737	WITHOUT_CLASSIFICATION	0.9999953573856752	WITHOUT_CLASSIFICATION	4.642614324710257E-6	TEST
// line 753	WITHOUT_CLASSIFICATION	0.9999954816056034	WITHOUT_CLASSIFICATION	4.518394396608317E-6	TEST
// line 779	WITHOUT_CLASSIFICATION	0.9999951006734199	WITHOUT_CLASSIFICATION	4.899326580071978E-6	TEST
// line 801	WITHOUT_CLASSIFICATION	0.9999958058962622	WITHOUT_CLASSIFICATION	4.194103737793845E-6	TEST
// line 808	WITHOUT_CLASSIFICATION	0.9999959187465863	WITHOUT_CLASSIFICATION	4.081253413699542E-6	TEST
// line 811	WITHOUT_CLASSIFICATION	0.9999952226931494	WITHOUT_CLASSIFICATION	4.777306850584335E-6	TEST
// line 817	WITHOUT_CLASSIFICATION	0.9999960392559653	WITHOUT_CLASSIFICATION	3.9607440347101375E-6	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999960564230069	WITHOUT_CLASSIFICATION	3.943576993098196E-6	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999956400741813	WITHOUT_CLASSIFICATION	4.359925818737117E-6	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999955262689114	WITHOUT_CLASSIFICATION	4.473731088622984E-6	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999959686208126	WITHOUT_CLASSIFICATION	4.031379187331448E-6	TEST
// line 899	WITHOUT_CLASSIFICATION	0.9999955308761835	WITHOUT_CLASSIFICATION	4.469123816455082E-6	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999959394727941	WITHOUT_CLASSIFICATION	4.060527205919501E-6	TEST
// line 944	WITHOUT_CLASSIFICATION	0.9999951691668657	WITHOUT_CLASSIFICATION	4.830833134355394E-6	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999956780775806	WITHOUT_CLASSIFICATION	4.321922419375854E-6	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999961199970997	WITHOUT_CLASSIFICATION	3.88000290025984E-6	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999960895767743	WITHOUT_CLASSIFICATION	3.910423225619466E-6	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999965210701572	WITHOUT_CLASSIFICATION	3.4789298427743193E-6	TEST
// line 820	WITHOUT_CLASSIFICATION	0.9999964483924414	WITHOUT_CLASSIFICATION	3.5516075586162738E-6	TEST
// line 826	WITHOUT_CLASSIFICATION	0.9999959983600725	WITHOUT_CLASSIFICATION	4.001639927510061E-6	TEST
// line 829	WITHOUT_CLASSIFICATION	0.9999960637225609	WITHOUT_CLASSIFICATION	3.9362774391520915E-6	TEST
// line 832	WITHOUT_CLASSIFICATION	0.9999962440423523	WITHOUT_CLASSIFICATION	3.7559576477907746E-6	TEST
// line 851	WITHOUT_CLASSIFICATION	0.9999952856061823	WITHOUT_CLASSIFICATION	4.714393817668782E-6	TEST
// line 857	WITHOUT_CLASSIFICATION	0.999995623411359	WITHOUT_CLASSIFICATION	4.376588641032152E-6	TEST
// line 860	WITHOUT_CLASSIFICATION	0.9999960250336548	WITHOUT_CLASSIFICATION	3.9749663452580345E-6	TEST
// line 863	WITHOUT_CLASSIFICATION	0.9999958691757714	WITHOUT_CLASSIFICATION	4.130824228569497E-6	TEST
// line 866	WITHOUT_CLASSIFICATION	0.9999954668083928	WITHOUT_CLASSIFICATION	4.533191607161262E-6	TEST
// line 869	WITHOUT_CLASSIFICATION	0.9999956403661577	WITHOUT_CLASSIFICATION	4.359633842291522E-6	TEST
// line 875	WITHOUT_CLASSIFICATION	0.9999955988035863	WITHOUT_CLASSIFICATION	4.401196413572249E-6	TEST
// line 884	WITHOUT_CLASSIFICATION	0.9999955315118878	WITHOUT_CLASSIFICATION	4.4684881122011455E-6	TEST
// line 887	WITHOUT_CLASSIFICATION	0.9999955241922691	WITHOUT_CLASSIFICATION	4.475807730897178E-6	TEST
// line 890	WITHOUT_CLASSIFICATION	0.9999960863121151	WITHOUT_CLASSIFICATION	3.913687884915011E-6	TEST
// line 902	WITHOUT_CLASSIFICATION	0.9999960711900867	WITHOUT_CLASSIFICATION	3.928809913216978E-6	TEST
// line 909	WITHOUT_CLASSIFICATION	0.9999955718941618	WITHOUT_CLASSIFICATION	4.428105838218462E-6	TEST
// line 912	WITHOUT_CLASSIFICATION	0.9999960537121654	WITHOUT_CLASSIFICATION	3.9462878346914266E-6	TEST
// line 916	WITHOUT_CLASSIFICATION	0.9999956585925628	WITHOUT_CLASSIFICATION	4.3414074372686935E-6	TEST
// line 922	WITHOUT_CLASSIFICATION	0.9999955346165023	WITHOUT_CLASSIFICATION	4.4653834977467885E-6	TEST
// line 928	WITHOUT_CLASSIFICATION	0.9999960012465322	WITHOUT_CLASSIFICATION	3.99875346787649E-6	TEST
// line 941	WITHOUT_CLASSIFICATION	0.9999949523328754	WITHOUT_CLASSIFICATION	5.047667124712087E-6	TEST
// line 947	WITHOUT_CLASSIFICATION	0.9999953112462873	WITHOUT_CLASSIFICATION	4.688753712793697E-6	TEST
// line 951	WITHOUT_CLASSIFICATION	0.9999948861155084	WITHOUT_CLASSIFICATION	5.113884491731458E-6	TEST
// line 955	WITHOUT_CLASSIFICATION	0.9999950632920779	WITHOUT_CLASSIFICATION	4.936707922115072E-6	TEST
// line 965	WITHOUT_CLASSIFICATION	0.9999951989692163	WITHOUT_CLASSIFICATION	4.801030783664281E-6	TEST
// line 969	WITHOUT_CLASSIFICATION	0.9999950752219918	WITHOUT_CLASSIFICATION	4.924778008181733E-6	TEST
// line 977	WITHOUT_CLASSIFICATION	0.9999951491646845	WITHOUT_CLASSIFICATION	4.85083531557572E-6	TEST
// line 983	WITHOUT_CLASSIFICATION	0.9999959322197687	WITHOUT_CLASSIFICATION	4.06778023138452E-6	TEST
// line 1013	WITHOUT_CLASSIFICATION	0.9999960950209635	WITHOUT_CLASSIFICATION	3.904979036387142E-6	TEST
// line 1023	WITHOUT_CLASSIFICATION	0.9999964809991551	WITHOUT_CLASSIFICATION	3.5190008450292647E-6	TEST
// line 1035	WITHOUT_CLASSIFICATION	0.9999961285347314	WITHOUT_CLASSIFICATION	3.8714652685791485E-6	TEST
// line 1041	WITHOUT_CLASSIFICATION	0.9999951120908116	WITHOUT_CLASSIFICATION	4.887909188376402E-6	TEST
// line 1043	WITHOUT_CLASSIFICATION	0.9999962236834168	WITHOUT_CLASSIFICATION	3.77631658325205E-6	TEST
// line 1054	WITHOUT_CLASSIFICATION	0.9999959268977494	WITHOUT_CLASSIFICATION	4.073102250563512E-6	TEST
// line 1057	WITHOUT_CLASSIFICATION	0.9999959098671546	WITHOUT_CLASSIFICATION	4.090132845437161E-6	TEST
// line 1060	WITHOUT_CLASSIFICATION	0.9999958221117536	WITHOUT_CLASSIFICATION	4.177888246294121E-6	TEST
// line 1069	WITHOUT_CLASSIFICATION	0.999995945681419	WITHOUT_CLASSIFICATION	4.054318580962471E-6	TEST
// line 1075	WITHOUT_CLASSIFICATION	0.9999958985611124	WITHOUT_CLASSIFICATION	4.101438887617175E-6	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999958210218882	WITHOUT_CLASSIFICATION	4.1789781117818834E-6	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.999994202706954	WITHOUT_CLASSIFICATION	5.797293045907086E-6	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999956028581247	WITHOUT_CLASSIFICATION	4.397141875293058E-6	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999960402432799	WITHOUT_CLASSIFICATION	3.9597567200304825E-6	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999958700156985	WITHOUT_CLASSIFICATION	4.129984301607396E-6	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999957029822194	WITHOUT_CLASSIFICATION	4.297017780630148E-6	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999962377326866	WITHOUT_CLASSIFICATION	3.7622673132214715E-6	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999962331633461	WITHOUT_CLASSIFICATION	3.7668366539653215E-6	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999958220656002	WITHOUT_CLASSIFICATION	4.177934399865691E-6	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999948341364306	WITHOUT_CLASSIFICATION	5.165863569429378E-6	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999948114610924	WITHOUT_CLASSIFICATION	5.188538907609246E-6	TEST
// line 1078	WITHOUT_CLASSIFICATION	0.9999962866420086	WITHOUT_CLASSIFICATION	3.713357991545189E-6	TEST
// line 1084	WITHOUT_CLASSIFICATION	0.9999963079743277	WITHOUT_CLASSIFICATION	3.6920256723501036E-6	TEST
// line 1087	WITHOUT_CLASSIFICATION	0.9999963019631742	WITHOUT_CLASSIFICATION	3.698036825808073E-6	TEST
// line 1090	WITHOUT_CLASSIFICATION	0.9999958749898976	WITHOUT_CLASSIFICATION	4.125010102455756E-6	TEST
// line 1093	WITHOUT_CLASSIFICATION	0.9999962421819623	WITHOUT_CLASSIFICATION	3.7578180376606513E-6	TEST
// line 1114	WITHOUT_CLASSIFICATION	0.9999952747463403	WITHOUT_CLASSIFICATION	4.725253659759038E-6	TEST
// line 1116	WITHOUT_CLASSIFICATION	0.9999951967334424	WITHOUT_CLASSIFICATION	4.803266557581029E-6	TEST
// line 1118	WITHOUT_CLASSIFICATION	0.9999960032783131	WITHOUT_CLASSIFICATION	3.996721686993486E-6	TEST
// line 1124	WITHOUT_CLASSIFICATION	0.9999957442660895	WITHOUT_CLASSIFICATION	4.255733910575851E-6	TEST
// line 1126	WITHOUT_CLASSIFICATION	0.9999956762095297	WITHOUT_CLASSIFICATION	4.32379047032302E-6	TEST
// line 1138	WITHOUT_CLASSIFICATION	0.9999959903571873	WITHOUT_CLASSIFICATION	4.009642812626789E-6	TEST
// line 1144	WITHOUT_CLASSIFICATION	0.999995268861652	WITHOUT_CLASSIFICATION	4.731138347946644E-6	TEST
// line 1149	WITHOUT_CLASSIFICATION	0.9999955123798926	WITHOUT_CLASSIFICATION	4.487620107447985E-6	TEST
// line 1155	WITHOUT_CLASSIFICATION	0.9999951338687694	WITHOUT_CLASSIFICATION	4.866131230642231E-6	TEST
// line 1162	WITHOUT_CLASSIFICATION	0.99999573133717	WITHOUT_CLASSIFICATION	4.268662829968927E-6	TEST
// line 1173	WITHOUT_CLASSIFICATION	0.9999956052496852	WITHOUT_CLASSIFICATION	4.3947503148439775E-6	TEST
// line 1179	WITHOUT_CLASSIFICATION	0.9999953636986363	WITHOUT_CLASSIFICATION	4.6363013636672036E-6	TEST
// line 1182	WITHOUT_CLASSIFICATION	0.9999965144911802	WITHOUT_CLASSIFICATION	3.485508819899898E-6	TEST
// line 1190	WITHOUT_CLASSIFICATION	0.9999958416823005	WITHOUT_CLASSIFICATION	4.158317699584731E-6	TEST
// line 1196	WITHOUT_CLASSIFICATION	0.9999953584394036	WITHOUT_CLASSIFICATION	4.6415605964823E-6	TEST
// line 1213	WITHOUT_CLASSIFICATION	0.9999959351450607	WITHOUT_CLASSIFICATION	4.064854939312483E-6	TEST
// line 1217	WITHOUT_CLASSIFICATION	0.9999956871513082	WITHOUT_CLASSIFICATION	4.31284869182246E-6	TEST
// line 1231	WITHOUT_CLASSIFICATION	0.999995150145355	WITHOUT_CLASSIFICATION	4.8498546449581825E-6	TEST
// line 1236	WITHOUT_CLASSIFICATION	0.999995999755523	WITHOUT_CLASSIFICATION	4.000244476991374E-6	TEST
// line 1244	WITHOUT_CLASSIFICATION	0.9999956982492223	WITHOUT_CLASSIFICATION	4.3017507777185996E-6	TEST
// line 1254	WITHOUT_CLASSIFICATION	0.9999957787090431	WITHOUT_CLASSIFICATION	4.221290956883201E-6	TEST
// line 1258	WITHOUT_CLASSIFICATION	0.9999961098968648	WITHOUT_CLASSIFICATION	3.8901031351182325E-6	TEST
// line 1264	WITHOUT_CLASSIFICATION	0.9999957663360013	WITHOUT_CLASSIFICATION	4.233663998806076E-6	TEST
// line 1270	WITHOUT_CLASSIFICATION	0.9999961900412851	WITHOUT_CLASSIFICATION	3.8099587147990798E-6	TEST
// line 1273	WITHOUT_CLASSIFICATION	0.9999960249945691	WITHOUT_CLASSIFICATION	3.975005430930017E-6	TEST
// line 1276	WITHOUT_CLASSIFICATION	0.9999957438158409	WITHOUT_CLASSIFICATION	4.25618415914658E-6	TEST
// line 1279	WITHOUT_CLASSIFICATION	0.9999958045318521	WITHOUT_CLASSIFICATION	4.195468147818949E-6	TEST
// line 1282	WITHOUT_CLASSIFICATION	0.9999961099364735	WITHOUT_CLASSIFICATION	3.890063526535609E-6	TEST
// line 1289	WITHOUT_CLASSIFICATION	0.9999961656009291	WITHOUT_CLASSIFICATION	3.834399070864876E-6	TEST
// line 1292	WITHOUT_CLASSIFICATION	0.9999956935695598	WITHOUT_CLASSIFICATION	4.306430440340002E-6	TEST
// line 1295	WITHOUT_CLASSIFICATION	0.9999957635555329	WITHOUT_CLASSIFICATION	4.236444467059548E-6	TEST
// line 1298	WITHOUT_CLASSIFICATION	0.9999961517904087	WITHOUT_CLASSIFICATION	3.848209591271252E-6	TEST
// line 1305	WITHOUT_CLASSIFICATION	0.9999960292117182	WITHOUT_CLASSIFICATION	3.970788281846844E-6	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999960559691554	WITHOUT_CLASSIFICATION	3.944030844649177E-6	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999960877303379	WITHOUT_CLASSIFICATION	3.912269662088258E-6	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999960490699275	WITHOUT_CLASSIFICATION	3.950930072559953E-6	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999957312315075	WITHOUT_CLASSIFICATION	4.268768492459911E-6	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.999995842053916	WITHOUT_CLASSIFICATION	4.1579460840241814E-6	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999959034130607	WITHOUT_CLASSIFICATION	4.0965869393774455E-6	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999955352029067	WITHOUT_CLASSIFICATION	4.464797093285846E-6	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999961659532024	WITHOUT_CLASSIFICATION	3.834046797573067E-6	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.9999952879049688	WITHOUT_CLASSIFICATION	4.712095031236456E-6	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.999995810157037	WITHOUT_CLASSIFICATION	4.189842963084982E-6	TEST
// line 1308	WITHOUT_CLASSIFICATION	0.9999963966470694	WITHOUT_CLASSIFICATION	3.6033529306455583E-6	TEST
// line 1311	WITHOUT_CLASSIFICATION	0.9999946141067463	WITHOUT_CLASSIFICATION	5.38589325373738E-6	TEST
// line 1317	WITHOUT_CLASSIFICATION	0.999995534692441	WITHOUT_CLASSIFICATION	4.465307559137721E-6	TEST
// line 1323	WITHOUT_CLASSIFICATION	0.9999958988031483	WITHOUT_CLASSIFICATION	4.101196851728503E-6	TEST
// line 1326	WITHOUT_CLASSIFICATION	0.9999959806587977	WITHOUT_CLASSIFICATION	4.019341202265866E-6	TEST
// line 1329	WITHOUT_CLASSIFICATION	0.999996046158545	WITHOUT_CLASSIFICATION	3.953841455031486E-6	TEST
// line 1337	WITHOUT_CLASSIFICATION	0.9999955515020947	WITHOUT_CLASSIFICATION	4.448497905340734E-6	TEST
// line 1342	WITHOUT_CLASSIFICATION	0.9999960681985028	WITHOUT_CLASSIFICATION	3.931801497109319E-6	TEST
// line 1345	WITHOUT_CLASSIFICATION	0.9999956529552881	WITHOUT_CLASSIFICATION	4.3470447118276945E-6	TEST
// line 1354	WITHOUT_CLASSIFICATION	0.9999956486443724	WITHOUT_CLASSIFICATION	4.351355627563957E-6	TEST
// line 1359	WITHOUT_CLASSIFICATION	0.9999956750527353	WITHOUT_CLASSIFICATION	4.324947264656581E-6	TEST
// line 1366	WITHOUT_CLASSIFICATION	0.9999955043316214	WITHOUT_CLASSIFICATION	4.495668378571802E-6	TEST
// line 1369	WITHOUT_CLASSIFICATION	0.9999956763007702	WITHOUT_CLASSIFICATION	4.323699229759124E-6	TEST
// line 1373	WITHOUT_CLASSIFICATION	0.9999955327535621	WITHOUT_CLASSIFICATION	4.4672464377973705E-6	TEST
// line 1377	WITHOUT_CLASSIFICATION	0.9999955232342713	WITHOUT_CLASSIFICATION	4.4767657286776E-6	TEST
// line 1383	WITHOUT_CLASSIFICATION	0.9999959520293543	WITHOUT_CLASSIFICATION	4.0479706457109285E-6	TEST
// line 1399	WITHOUT_CLASSIFICATION	0.9999955417728414	WITHOUT_CLASSIFICATION	4.45822715860225E-6	TEST
// line 1401	WITHOUT_CLASSIFICATION	0.9999950597870669	WITHOUT_CLASSIFICATION	4.940212933103429E-6	TEST
// line 1406	WITHOUT_CLASSIFICATION	0.9999959065746931	WITHOUT_CLASSIFICATION	4.093425306874805E-6	TEST
// line 1417	WITHOUT_CLASSIFICATION	0.9999953318972826	WITHOUT_CLASSIFICATION	4.6681027173913765E-6	TEST
// line 1424	WITHOUT_CLASSIFICATION	0.9999956859552572	WITHOUT_CLASSIFICATION	4.314044742742218E-6	TEST
// line 1427	WITHOUT_CLASSIFICATION	0.9999958413857929	WITHOUT_CLASSIFICATION	4.158614207204129E-6	TEST
// line 1430	WITHOUT_CLASSIFICATION	0.9999961534332449	WITHOUT_CLASSIFICATION	3.846566755081758E-6	TEST
// line 1433	WITHOUT_CLASSIFICATION	0.9999956360353947	WITHOUT_CLASSIFICATION	4.36396460528032E-6	TEST
// line 1436	WITHOUT_CLASSIFICATION	0.999995713980255	WITHOUT_CLASSIFICATION	4.286019745012541E-6	TEST
// line 1442	WITHOUT_CLASSIFICATION	0.9999957442841233	WITHOUT_CLASSIFICATION	4.25571587666793E-6	TEST
// line 1445	WITHOUT_CLASSIFICATION	0.9999952949809402	WITHOUT_CLASSIFICATION	4.705019059829875E-6	TEST
// line 1458	WITHOUT_CLASSIFICATION	0.9999958187152578	WITHOUT_CLASSIFICATION	4.181284742291423E-6	TEST
// line 1464	WITHOUT_CLASSIFICATION	0.9999952718096298	WITHOUT_CLASSIFICATION	4.7281903702363174E-6	TEST
// line 1489	WITHOUT_CLASSIFICATION	0.9999958883647244	WITHOUT_CLASSIFICATION	4.111635275606018E-6	TEST
// line 1493	WITHOUT_CLASSIFICATION	0.9999959208550756	WITHOUT_CLASSIFICATION	4.079144924395933E-6	TEST
// line 1507	WITHOUT_CLASSIFICATION	0.9999958307452496	WITHOUT_CLASSIFICATION	4.1692547504729565E-6	TEST
// line 1519	WITHOUT_CLASSIFICATION	0.9999953176982317	WITHOUT_CLASSIFICATION	4.68230176833322E-6	TEST
// line 1532	WITHOUT_CLASSIFICATION	0.999996021195794	WITHOUT_CLASSIFICATION	3.978804205991687E-6	TEST
// line 1538	WITHOUT_CLASSIFICATION	0.9999960326754719	WITHOUT_CLASSIFICATION	3.967324528126381E-6	TEST
// line 1542	WITHOUT_CLASSIFICATION	0.9999958100967471	WITHOUT_CLASSIFICATION	4.189903252886697E-6	TEST
// line 1557	WITHOUT_CLASSIFICATION	0.9999952354611632	WITHOUT_CLASSIFICATION	4.7645388368309916E-6	TEST
// line 1573	WITHOUT_CLASSIFICATION	0.9999956473418299	WITHOUT_CLASSIFICATION	4.352658170078575E-6	TEST
// line 1591	WITHOUT_CLASSIFICATION	0.9999944375988244	WITHOUT_CLASSIFICATION	5.562401175599437E-6	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999951815017661	WITHOUT_CLASSIFICATION	4.818498233874226E-6	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999958123065759	WITHOUT_CLASSIFICATION	4.187693424148911E-6	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999960135842053	WITHOUT_CLASSIFICATION	3.98641579460995E-6	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999957762794747	WITHOUT_CLASSIFICATION	4.22372052525475E-6	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.999995226871162	WITHOUT_CLASSIFICATION	4.773128837965282E-6	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999957347383808	WITHOUT_CLASSIFICATION	4.265261619226074E-6	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.999995831705991	WITHOUT_CLASSIFICATION	4.168294008885596E-6	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999955259149165	WITHOUT_CLASSIFICATION	4.474085083574399E-6	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.9999958973384067	WITHOUT_CLASSIFICATION	4.102661593362808E-6	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999964253942463	WITHOUT_CLASSIFICATION	3.574605753664503E-6	TEST
// line 1607	WITHOUT_CLASSIFICATION	0.999995820557709	WITHOUT_CLASSIFICATION	4.179442291022186E-6	TEST
// line 1610	WITHOUT_CLASSIFICATION	0.9999957681454182	WITHOUT_CLASSIFICATION	4.231854581721648E-6	TEST
// line 1622	WITHOUT_CLASSIFICATION	0.9999956583510274	WITHOUT_CLASSIFICATION	4.3416489725241095E-6	TEST
// line 1625	WITHOUT_CLASSIFICATION	0.9999957231983329	WITHOUT_CLASSIFICATION	4.2768016671453116E-6	TEST
// line 1636	WITHOUT_CLASSIFICATION	0.9999955151634878	WITHOUT_CLASSIFICATION	4.484836512207899E-6	TEST
// line 1639	WITHOUT_CLASSIFICATION	0.999995661886538	WITHOUT_CLASSIFICATION	4.3381134619269425E-6	TEST
// line 1647	WITHOUT_CLASSIFICATION	0.9999954293302727	WITHOUT_CLASSIFICATION	4.570669727150971E-6	TEST
// line 1651	WITHOUT_CLASSIFICATION	0.9999943704162145	WITHOUT_CLASSIFICATION	5.629583785509548E-6	TEST
// line 1657	WITHOUT_CLASSIFICATION	0.9999953816344954	WITHOUT_CLASSIFICATION	4.61836550460192E-6	TEST
// line 1660	WITHOUT_CLASSIFICATION	0.9999956742628614	WITHOUT_CLASSIFICATION	4.325737138534936E-6	TEST
// line 1663	WITHOUT_CLASSIFICATION	0.999995504662303	WITHOUT_CLASSIFICATION	4.495337696978424E-6	TEST
// line 1678	WITHOUT_CLASSIFICATION	0.9999957585319249	WITHOUT_CLASSIFICATION	4.241468075144002E-6	TEST
// line 1702	WITHOUT_CLASSIFICATION	0.9999961865412087	WITHOUT_CLASSIFICATION	3.8134587912037497E-6	TEST
// line 1711	WITHOUT_CLASSIFICATION	0.9999942839675525	WITHOUT_CLASSIFICATION	5.7160324475855315E-6	TEST
// line 1719	WITHOUT_CLASSIFICATION	0.9999953360364546	WITHOUT_CLASSIFICATION	4.663963545348014E-6	TEST
// line 1722	WITHOUT_CLASSIFICATION	0.9999956683720026	WITHOUT_CLASSIFICATION	4.331627997409681E-6	TEST
// line 1731	WITHOUT_CLASSIFICATION	0.9999947188514362	WITHOUT_CLASSIFICATION	5.281148563774614E-6	TEST
// line 1734	WITHOUT_CLASSIFICATION	0.9999956851726737	WITHOUT_CLASSIFICATION	4.314827326346337E-6	TEST
// line 1738	WITHOUT_CLASSIFICATION	0.9999960434124227	WITHOUT_CLASSIFICATION	3.956587577342778E-6	TEST
// line 1746	WITHOUT_CLASSIFICATION	0.9999954110439521	WITHOUT_CLASSIFICATION	4.588956047918645E-6	TEST
// line 1756	WITHOUT_CLASSIFICATION	0.9999953848598969	WITHOUT_CLASSIFICATION	4.615140103119412E-6	TEST
// line 1758	WITHOUT_CLASSIFICATION	0.9999957523085046	WITHOUT_CLASSIFICATION	4.247691495373578E-6	TEST
// line 1761	WITHOUT_CLASSIFICATION	0.999994353135003	WITHOUT_CLASSIFICATION	5.646864996948598E-6	TEST
// line 1767	WITHOUT_CLASSIFICATION	0.9999952192864394	WITHOUT_CLASSIFICATION	4.7807135605879415E-6	TEST
// line 1776	WITHOUT_CLASSIFICATION	0.99999520750871	WITHOUT_CLASSIFICATION	4.7924912900940315E-6	TEST
// line 1782	WITHOUT_CLASSIFICATION	0.999996231398533	WITHOUT_CLASSIFICATION	3.7686014669538695E-6	TEST
// line 1785	WITHOUT_CLASSIFICATION	0.9999957543748041	WITHOUT_CLASSIFICATION	4.245625195833465E-6	TEST
// line 1788	WITHOUT_CLASSIFICATION	0.9999956423668778	WITHOUT_CLASSIFICATION	4.357633122205211E-6	TEST
// line 1791	WITHOUT_CLASSIFICATION	0.9999944316488326	WITHOUT_CLASSIFICATION	5.568351167442264E-6	TEST
// line 1797	WITHOUT_CLASSIFICATION	0.9999953469504606	WITHOUT_CLASSIFICATION	4.653049539427484E-6	TEST
// line 1800	WITHOUT_CLASSIFICATION	0.9999966443285868	WITHOUT_CLASSIFICATION	3.3556714131302303E-6	TEST
// line 1803	WITHOUT_CLASSIFICATION	0.9999967595025722	WITHOUT_CLASSIFICATION	3.240497427947469E-6	TEST
// line 1806	WITHOUT_CLASSIFICATION	0.9999965381225067	WITHOUT_CLASSIFICATION	3.461877493428999E-6	TEST
// line 1809	WITHOUT_CLASSIFICATION	0.9999965786483314	WITHOUT_CLASSIFICATION	3.421351668751092E-6	TEST
// line 1815	WITHOUT_CLASSIFICATION	0.9999960160661008	WITHOUT_CLASSIFICATION	3.983933899230836E-6	TEST
// line 1825	WITHOUT_CLASSIFICATION	0.9999964779360996	WITHOUT_CLASSIFICATION	3.52206390040104E-6	TEST
// line 1828	WITHOUT_CLASSIFICATION	0.9999963786102778	WITHOUT_CLASSIFICATION	3.621389722313113E-6	TEST
// line 1831	WITHOUT_CLASSIFICATION	0.9999956081387611	WITHOUT_CLASSIFICATION	4.3918612388632905E-6	TEST
// line 1847	WITHOUT_CLASSIFICATION	0.9999962139235692	WITHOUT_CLASSIFICATION	3.786076430778917E-6	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9999892847855812	WITHOUT_CLASSIFICATION	1.0715214418632682E-5	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999882293454649	WITHOUT_CLASSIFICATION	1.177065453503581E-5	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999971072972874	WITHOUT_CLASSIFICATION	2.892702712619976E-6	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999960998288399	WITHOUT_CLASSIFICATION	3.900171160097057E-6	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999952998386301	WITHOUT_CLASSIFICATION	4.700161369896901E-6	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999916590902006	WITHOUT_CLASSIFICATION	8.340909799391831E-6	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.999998975893077	WITHOUT_CLASSIFICATION	1.024106923112446E-6	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999742002694127	WITHOUT_CLASSIFICATION	2.5799730587273094E-5	TEST
// line 1854	WITHOUT_CLASSIFICATION	0.9999961707585147	WITHOUT_CLASSIFICATION	3.829241485265213E-6	TEST
// line 1869	WITHOUT_CLASSIFICATION	0.9999961694215429	WITHOUT_CLASSIFICATION	3.8305784571466615E-6	TEST
// line 1872	WITHOUT_CLASSIFICATION	0.9999965116847117	WITHOUT_CLASSIFICATION	3.4883152881902687E-6	TEST
// line 1877	WITHOUT_CLASSIFICATION	0.999996060897557	WITHOUT_CLASSIFICATION	3.939102443059571E-6	TEST
// line 1886	WITHOUT_CLASSIFICATION	0.9999960151812548	WITHOUT_CLASSIFICATION	3.984818745244152E-6	TEST
// line 1898	WITHOUT_CLASSIFICATION	0.9999960546911256	WITHOUT_CLASSIFICATION	3.945308874428058E-6	TEST
// line 1902	WITHOUT_CLASSIFICATION	0.999996234611195	WITHOUT_CLASSIFICATION	3.7653888050663404E-6	TEST
// line 1905	WITHOUT_CLASSIFICATION	0.9999958293272558	WITHOUT_CLASSIFICATION	4.1706727441656694E-6	TEST
// line 1911	WITHOUT_CLASSIFICATION	0.9999943549997644	WITHOUT_CLASSIFICATION	5.645000235510032E-6	TEST
// line 1918	WITHOUT_CLASSIFICATION	0.9999960813909605	WITHOUT_CLASSIFICATION	3.91860903953329E-6	TEST
// line 1935	WITHOUT_CLASSIFICATION	0.9999956763873403	WITHOUT_CLASSIFICATION	4.3236126596921545E-6	TEST
// line 1938	WITHOUT_CLASSIFICATION	0.9999961147666951	WITHOUT_CLASSIFICATION	3.885233304828053E-6	TEST
// line 1942	WITHOUT_CLASSIFICATION	0.9999958804684033	WITHOUT_CLASSIFICATION	4.119531596668602E-6	TEST
// line 1948	WITHOUT_CLASSIFICATION	0.9999958678289121	WITHOUT_CLASSIFICATION	4.132171087864867E-6	TEST
// line 1960	WITHOUT_CLASSIFICATION	0.9999958534489973	WITHOUT_CLASSIFICATION	4.146551002669448E-6	TEST
// line 1963	WITHOUT_CLASSIFICATION	0.999995690868089	WITHOUT_CLASSIFICATION	4.309131910916924E-6	TEST
// line 1968	WITHOUT_CLASSIFICATION	0.9999957985820541	WITHOUT_CLASSIFICATION	4.201417945940691E-6	TEST
// line 1972	WITHOUT_CLASSIFICATION	0.9999958976493052	WITHOUT_CLASSIFICATION	4.102350694904509E-6	TEST
// line 1982	WITHOUT_CLASSIFICATION	0.9999962767633204	WITHOUT_CLASSIFICATION	3.7232366796479505E-6	TEST
// line 1995	WITHOUT_CLASSIFICATION	0.9999952604849296	WITHOUT_CLASSIFICATION	4.739515070417014E-6	TEST
// line 2000	WITHOUT_CLASSIFICATION	0.9999964612954106	WITHOUT_CLASSIFICATION	3.5387045894163587E-6	TEST
// line 2006	WITHOUT_CLASSIFICATION	0.9999964638758764	WITHOUT_CLASSIFICATION	3.5361241235720804E-6	TEST
// line 2010	WITHOUT_CLASSIFICATION	0.9999967119579379	WITHOUT_CLASSIFICATION	3.288042062097645E-6	TEST
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999996311623939	WITHOUT_CLASSIFICATION	3.688376060821786E-7	TEST
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999954386935035	WITHOUT_CLASSIFICATION	4.56130649646084E-6	TEST
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999970913798226	WITHOUT_CLASSIFICATION	2.90862017727945E-6	TEST
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999976068402158	WITHOUT_CLASSIFICATION	2.3931597841798844E-6	TEST
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999999034818002	WITHOUT_CLASSIFICATION	9.651819976782729E-8	TEST
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9999744598804976	WITHOUT_CLASSIFICATION	2.554011950245726E-5	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999994752676907	WITHOUT_CLASSIFICATION	5.247323092173336E-7	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.999998108733693	WITHOUT_CLASSIFICATION	1.891266306994341E-6	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999998603411284	WITHOUT_CLASSIFICATION	1.39658871488046E-7	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999998603411284	WITHOUT_CLASSIFICATION	1.39658871488046E-7	TEST
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9999840960658419	WITHOUT_CLASSIFICATION	1.5903934158074395E-5	TEST
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999969432314499	WITHOUT_CLASSIFICATION	3.0567685499195807E-6	TEST
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999993025875613	WITHOUT_CLASSIFICATION	6.974124387381104E-7	TEST
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999975731358227	WITHOUT_CLASSIFICATION	2.426864177224686E-6	TEST
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999999564863173	WITHOUT_CLASSIFICATION	4.3513682721266765E-8	TEST
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999869906200985	WITHOUT_CLASSIFICATION	1.3009379901389437E-5	TEST
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999998690292552	WITHOUT_CLASSIFICATION	1.3097074483613083E-7	TEST
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999996510141922	WITHOUT_CLASSIFICATION	3.489858078132537E-7	TEST
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999978439120097	WITHOUT_CLASSIFICATION	2.15608799029287E-6	TEST
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.999999366316154	WITHOUT_CLASSIFICATION	6.336838459075625E-7	TEST
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999999149907228	WITHOUT_CLASSIFICATION	8.500927716139668E-8	TEST
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999999565684747	WITHOUT_CLASSIFICATION	4.343152517509429E-8	TEST
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999993963759157	WITHOUT_CLASSIFICATION	6.036240843122611E-7	TEST
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999996635139917	WITHOUT_CLASSIFICATION	3.3648600828196106E-7	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999994325829608	WITHOUT_CLASSIFICATION	5.674170392331215E-7	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999994325829608	WITHOUT_CLASSIFICATION	5.674170392331215E-7	TEST
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999959561040003	WITHOUT_CLASSIFICATION	4.043895999725393E-6	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999993093943461	WITHOUT_CLASSIFICATION	6.906056537970321E-7	TEST
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999972232593639	WITHOUT_CLASSIFICATION	2.776740636020311E-6	TEST
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999955996351495	WITHOUT_CLASSIFICATION	4.400364850491072E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999877604144748	WITHOUT_CLASSIFICATION	1.2239585525160791E-5	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.999998549720974	WITHOUT_CLASSIFICATION	1.450279026024594E-6	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999998593139191	WITHOUT_CLASSIFICATION	1.4068608094393023E-7	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.999998549720974	WITHOUT_CLASSIFICATION	1.450279026024594E-6	TEST
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999929270372646	WITHOUT_CLASSIFICATION	7.072962735425916E-6	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999982762318461	WITHOUT_CLASSIFICATION	1.7237681538851769E-6	TEST
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9999965848892558	WITHOUT_CLASSIFICATION	3.415110744127714E-6	TEST
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9999910612934488	WITHOUT_CLASSIFICATION	8.938706551115436E-6	TEST
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.999997889824648	WITHOUT_CLASSIFICATION	2.1101753519845345E-6	TEST
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999969885350165	WITHOUT_CLASSIFICATION	3.011464983611407E-6	TEST
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999992887421688	WITHOUT_CLASSIFICATION	7.112578312028318E-7	TEST
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999969661321702	WITHOUT_CLASSIFICATION	3.0338678298760633E-6	TEST
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999978424856888	WITHOUT_CLASSIFICATION	2.157514311138444E-6	TEST
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999999611606645	WITHOUT_CLASSIFICATION	3.8839335558910335E-8	TEST
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999997791806655	WITHOUT_CLASSIFICATION	2.2081933463123336E-7	TEST
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999797832887388	WITHOUT_CLASSIFICATION	2.021671126109707E-5	TEST
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999610008068663	WITHOUT_CLASSIFICATION	3.899919313377927E-5	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999986102193347	WITHOUT_CLASSIFICATION	1.3897806652992452E-6	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999970239483	WITHOUT_CLASSIFICATION	2.976051699967403E-6	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999970239483	WITHOUT_CLASSIFICATION	2.976051699967403E-6	TEST
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999994356305767	WITHOUT_CLASSIFICATION	5.643694234213345E-7	TEST
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.999999526930369	WITHOUT_CLASSIFICATION	4.7306963108809865E-7	TEST
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999992393572283	WITHOUT_CLASSIFICATION	7.606427717353691E-7	TEST
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999999407790923	WITHOUT_CLASSIFICATION	5.9220907773795314E-8	TEST
// required and optional only	WITHOUT_CLASSIFICATION	0.9999997427109252	WITHOUT_CLASSIFICATION	2.572890748475087E-7	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.999998549720974	WITHOUT_CLASSIFICATION	1.450279026024594E-6	TEST
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999995066277666	WITHOUT_CLASSIFICATION	4.933722334465785E-7	TEST
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999999307179839	WITHOUT_CLASSIFICATION	6.928201609369314E-8	TEST
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.999998032786261	WITHOUT_CLASSIFICATION	1.9672137390708153E-6	TEST
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999996829013543	WITHOUT_CLASSIFICATION	3.170986457154802E-7	TEST
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999998970870366	WITHOUT_CLASSIFICATION	1.0291296345162775E-7	TEST
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999993744330864	WITHOUT_CLASSIFICATION	6.255669134936514E-7	TEST
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999975965701943	WITHOUT_CLASSIFICATION	2.4034298057040633E-6	TEST
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.999999228128326	WITHOUT_CLASSIFICATION	7.71871673902264E-7	TEST
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999999848298973	WITHOUT_CLASSIFICATION	1.5170102765595324E-8	TEST
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999998421864991	WITHOUT_CLASSIFICATION	1.5781350085030445E-7	TEST
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999991672702793	WITHOUT_CLASSIFICATION	8.327297207353238E-7	TEST
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999996576403146	WITHOUT_CLASSIFICATION	3.4235968538604985E-7	TEST
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.999389036450621	WITHOUT_CLASSIFICATION	6.109635493789848E-4	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999841931101825	WITHOUT_CLASSIFICATION	1.5806889817541313E-5	TEST
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9999923237497622	WITHOUT_CLASSIFICATION	7.67625023784742E-6	TEST
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999766632007799	WITHOUT_CLASSIFICATION	2.3336799220085415E-5	TEST
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999991243006469	WITHOUT_CLASSIFICATION	8.756993531253628E-7	TEST
// id must always be even	WITHOUT_CLASSIFICATION	0.9999988648320558	WITHOUT_CLASSIFICATION	1.1351679441629176E-6	TEST
// with block pass	WITHOUT_CLASSIFICATION	0.9999950335441131	WITHOUT_CLASSIFICATION	4.966455886852026E-6	TEST
// no block	WITHOUT_CLASSIFICATION	0.9999986784503782	WITHOUT_CLASSIFICATION	1.3215496218620272E-6	TEST
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999941803135232	WITHOUT_CLASSIFICATION	5.819686476802487E-6	TEST
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999897839104874	WITHOUT_CLASSIFICATION	1.0216089512609124E-5	TEST
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999994915898254	WITHOUT_CLASSIFICATION	5.08410174603492E-7	TEST
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.999998584067027	WITHOUT_CLASSIFICATION	1.4159329729718073E-6	TEST
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999982404210884	WITHOUT_CLASSIFICATION	1.7595789115423208E-6	TEST
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999988984404615	WITHOUT_CLASSIFICATION	1.101559538477387E-6	TEST
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999999250253638	WITHOUT_CLASSIFICATION	7.497463626002818E-8	TEST
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999972711377435	WITHOUT_CLASSIFICATION	2.728862256522567E-6	TEST
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9999987853490979	WITHOUT_CLASSIFICATION	1.214650902024651E-6	TEST
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999994456351365	WITHOUT_CLASSIFICATION	5.543648634460397E-7	TEST
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999962163569283	WITHOUT_CLASSIFICATION	3.7836430717689434E-6	TEST
// Lastline	WITHOUT_CLASSIFICATION	0.9999977965582366	WITHOUT_CLASSIFICATION	2.203441763352622E-6	TEST
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.999999617881744	WITHOUT_CLASSIFICATION	3.8211825598456024E-7	TEST
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999993543439888	WITHOUT_CLASSIFICATION	6.456560112214557E-7	TEST
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.999999915102899	WITHOUT_CLASSIFICATION	8.489710100371746E-8	TEST
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999995804742224	WITHOUT_CLASSIFICATION	4.195257775687466E-7	TEST
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999992683190458	WITHOUT_CLASSIFICATION	7.31680954059204E-7	TEST
// silently ignore	WITHOUT_CLASSIFICATION	0.9999987721511037	WITHOUT_CLASSIFICATION	1.2278488963649571E-6	TEST
// used by compiler	WITHOUT_CLASSIFICATION	0.9999986651942766	WITHOUT_CLASSIFICATION	1.3348057234076128E-6	TEST
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999996929492032	WITHOUT_CLASSIFICATION	3.0705079681333005E-7	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999742002694127	WITHOUT_CLASSIFICATION	2.5799730587273094E-5	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999994117801108	WITHOUT_CLASSIFICATION	5.88219889262019E-7	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999988371140862	WITHOUT_CLASSIFICATION	1.162885913770888E-6	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999999273163058	WITHOUT_CLASSIFICATION	7.268369411404459E-8	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999997395802509	WITHOUT_CLASSIFICATION	2.6041974912121024E-7	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999982762318461	WITHOUT_CLASSIFICATION	1.7237681538851769E-6	TEST
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.999997444688384	WITHOUT_CLASSIFICATION	2.555311615885791E-6	TEST
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999995582644607	WITHOUT_CLASSIFICATION	4.417355392014588E-7	TEST
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999999365558109	WITHOUT_CLASSIFICATION	6.344418914838419E-8	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999990957253639	WITHOUT_CLASSIFICATION	9.042746361117727E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999990957253639	WITHOUT_CLASSIFICATION	9.042746361117727E-7	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999993977984872	WITHOUT_CLASSIFICATION	6.022015127484048E-7	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999993977984872	WITHOUT_CLASSIFICATION	6.022015127484048E-7	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999993977984872	WITHOUT_CLASSIFICATION	6.022015127484048E-7	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.999992629146863	WITHOUT_CLASSIFICATION	7.37085313701415E-6	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.999992629146863	WITHOUT_CLASSIFICATION	7.37085313701415E-6	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999724095816415	WITHOUT_CLASSIFICATION	2.7590418358502164E-5	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999724095816415	WITHOUT_CLASSIFICATION	2.7590418358502164E-5	TEST
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999958583119114	WITHOUT_CLASSIFICATION	4.14168808861214E-6	TEST
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999965345584954	WITHOUT_CLASSIFICATION	3.465441504644852E-6	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.9999952760335087	WITHOUT_CLASSIFICATION	4.723966491252716E-6	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.9999952760335087	WITHOUT_CLASSIFICATION	4.723966491252716E-6	TEST
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999995758022437	WITHOUT_CLASSIFICATION	4.241977562672101E-7	TEST
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999995098411792	WITHOUT_CLASSIFICATION	4.901588207419905E-7	TEST
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999927424075483	WITHOUT_CLASSIFICATION	7.257592451750075E-6	TEST
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999985669618784	WITHOUT_CLASSIFICATION	1.4330381216595123E-6	TEST
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999992659843884	WITHOUT_CLASSIFICATION	7.340156115163518E-7	TEST
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.999999966980799	WITHOUT_CLASSIFICATION	3.301920104160744E-8	TEST
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999929625198113	WITHOUT_CLASSIFICATION	7.037480188625444E-6	TEST
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999977329681682	WITHOUT_CLASSIFICATION	2.267031831915541E-6	TEST
// caller	WITHOUT_CLASSIFICATION	0.9999979923565345	WITHOUT_CLASSIFICATION	2.007643465412991E-6	TEST
// calltype // block	WITHOUT_CLASSIFICATION	0.9999992478067538	WITHOUT_CLASSIFICATION	7.521932462289443E-7	TEST
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999997590626389	WITHOUT_CLASSIFICATION	2.4093736113602316E-7	TEST
// load arity for check	WITHOUT_CLASSIFICATION	0.9999970493161962	WITHOUT_CLASSIFICATION	2.9506838038417256E-6	TEST
// throw	WITHOUT_CLASSIFICATION	0.9999937654535153	WITHOUT_CLASSIFICATION	6.23454648481209E-6	TEST
// load arity for error	WITHOUT_CLASSIFICATION	0.9999948924666009	WITHOUT_CLASSIFICATION	5.107533399091697E-6	TEST
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999996774870414	WITHOUT_CLASSIFICATION	3.2251295855741595E-7	TEST
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999962103825475	WITHOUT_CLASSIFICATION	3.789617452555505E-6	TEST
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9999784205275463	WITHOUT_CLASSIFICATION	2.157947245374676E-5	TEST
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.999998820205899	WITHOUT_CLASSIFICATION	1.1797941010332278E-6	TEST
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999988907844137	WITHOUT_CLASSIFICATION	1.1092155862258737E-6	TEST
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999887230740709	WITHOUT_CLASSIFICATION	1.1276925929110476E-5	TEST
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999953641857451	WITHOUT_CLASSIFICATION	4.635814254957089E-6	TEST
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999949590494376	WITHOUT_CLASSIFICATION	5.04095056239202E-6	TEST
// load the encoding	WITHOUT_CLASSIFICATION	0.999999262073808	WITHOUT_CLASSIFICATION	7.379261920576591E-7	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999006317382	WITHOUT_CLASSIFICATION	9.936826185189353E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999998775449097	WITHOUT_CLASSIFICATION	1.2245509034822321E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999997628697782	WITHOUT_CLASSIFICATION	2.3713022174202372E-7	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999996387207246	WITHOUT_CLASSIFICATION	3.612792754545756E-7	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999998369474411	WITHOUT_CLASSIFICATION	1.63052558935031E-7	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999998972555643	WITHOUT_CLASSIFICATION	1.0274443566745018E-7	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999999873384329	WITHOUT_CLASSIFICATION	1.2661567092034258E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999999754812953	WITHOUT_CLASSIFICATION	2.451870470961524E-7	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999188669988	WITHOUT_CLASSIFICATION	8.113300123484397E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999000168781	WITHOUT_CLASSIFICATION	9.998312190803787E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998379663765	WITHOUT_CLASSIFICATION	1.6203362339881823E-7	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999000168781	WITHOUT_CLASSIFICATION	9.998312190803787E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999000168781	WITHOUT_CLASSIFICATION	9.998312190803787E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999000168781	WITHOUT_CLASSIFICATION	9.998312190803787E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999000168781	WITHOUT_CLASSIFICATION	9.998312190803787E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999000168781	WITHOUT_CLASSIFICATION	9.998312190803787E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999000168781	WITHOUT_CLASSIFICATION	9.998312190803787E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998379663765	WITHOUT_CLASSIFICATION	1.6203362339881823E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998379663765	WITHOUT_CLASSIFICATION	1.6203362339881823E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998379663765	WITHOUT_CLASSIFICATION	1.6203362339881823E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998379663765	WITHOUT_CLASSIFICATION	1.6203362339881823E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998379663765	WITHOUT_CLASSIFICATION	1.6203362339881823E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998379663765	WITHOUT_CLASSIFICATION	1.6203362339881823E-7	TEST
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999995670798116	WITHOUT_CLASSIFICATION	4.329201883223419E-7	TEST
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999995462127618	WITHOUT_CLASSIFICATION	4.537872381416656E-7	TEST
// ThreadContext	WITHOUT_CLASSIFICATION	0.999999260242579	WITHOUT_CLASSIFICATION	7.397574209958481E-7	TEST
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999997898930049	WITHOUT_CLASSIFICATION	2.1010699511987083E-7	TEST
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999997536478751	WITHOUT_CLASSIFICATION	2.4635212493108986E-7	TEST
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999997970245277	WITHOUT_CLASSIFICATION	2.0297547229003173E-7	TEST
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999928218798212	WITHOUT_CLASSIFICATION	7.178120178916262E-6	TEST
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999999122226821	WITHOUT_CLASSIFICATION	8.777731794739423E-8	TEST
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999997037129364	WITHOUT_CLASSIFICATION	2.962870636065475E-7	TEST
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999972710211269	WITHOUT_CLASSIFICATION	2.728978873208259E-6	TEST
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9999974187399627	WITHOUT_CLASSIFICATION	2.5812600373726483E-6	TEST
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999996425793071	WITHOUT_CLASSIFICATION	3.5742069297764755E-7	TEST
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999926660318097	WITHOUT_CLASSIFICATION	7.333968190358582E-6	TEST
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.999999509097343	WITHOUT_CLASSIFICATION	4.909026569649662E-7	TEST
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999996828485056	WITHOUT_CLASSIFICATION	3.1715149439602954E-7	TEST
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9999998616553667	WITHOUT_CLASSIFICATION	1.38344633365795E-7	TEST
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999992894119624	WITHOUT_CLASSIFICATION	7.105880377471891E-7	TEST
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999985160262976	WITHOUT_CLASSIFICATION	1.483973702426655E-6	TEST
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999990584407058	WITHOUT_CLASSIFICATION	9.415592942005021E-7	TEST
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999999691992439	WITHOUT_CLASSIFICATION	3.080075608621688E-8	TEST
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999992890612402	WITHOUT_CLASSIFICATION	7.109387597904011E-7	TEST
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999979694687583	WITHOUT_CLASSIFICATION	2.03053124166474E-6	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999998593139191	WITHOUT_CLASSIFICATION	1.4068608094393023E-7	TEST
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9999998820252232	WITHOUT_CLASSIFICATION	1.1797477681188217E-7	TEST
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999978238023863	WITHOUT_CLASSIFICATION	2.176197613747902E-6	TEST
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999998424375772	WITHOUT_CLASSIFICATION	1.575624227563236E-7	TEST
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999999427896826	WITHOUT_CLASSIFICATION	5.72103173948739E-8	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999996142674662	WITHOUT_CLASSIFICATION	3.8573253381427165E-7	TEST
// extension extensions	WITHOUT_CLASSIFICATION	0.9999990209263672	WITHOUT_CLASSIFICATION	9.790736328913145E-7	TEST
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999996688400723	WITHOUT_CLASSIFICATION	3.3115992775713666E-7	TEST
// try all extensions	WITHOUT_CLASSIFICATION	0.9999995857998705	WITHOUT_CLASSIFICATION	4.142001295804258E-7	TEST
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999998943374424	WITHOUT_CLASSIFICATION	1.0566255762578171E-7	TEST
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999997006836827	WITHOUT_CLASSIFICATION	2.99316317350478E-7	TEST
// try only literal search	WITHOUT_CLASSIFICATION	0.9999989313784892	WITHOUT_CLASSIFICATION	1.0686215108183907E-6	TEST
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999970938151072	WITHOUT_CLASSIFICATION	2.9061848928533705E-6	TEST
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.99999832917848	WITHOUT_CLASSIFICATION	1.6708215200968814E-6	TEST
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999995731406152	WITHOUT_CLASSIFICATION	4.268593848581504E-7	TEST
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.999999742552001	WITHOUT_CLASSIFICATION	2.574479990209438E-7	TEST
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999999513418008	WITHOUT_CLASSIFICATION	4.8658199154529255E-8	TEST
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999997635389397	WITHOUT_CLASSIFICATION	2.3646106035264088E-7	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999983911482839	WITHOUT_CLASSIFICATION	1.6088517160861891E-6	TEST
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999990104441194	WITHOUT_CLASSIFICATION	9.895558805407728E-7	TEST
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999995967048505	WITHOUT_CLASSIFICATION	4.032951494862614E-7	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999985307420497	WITHOUT_CLASSIFICATION	1.469257950280122E-6	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999985307420497	WITHOUT_CLASSIFICATION	1.469257950280122E-6	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999983825850439	WITHOUT_CLASSIFICATION	1.6174149561445333E-6	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999983825850439	WITHOUT_CLASSIFICATION	1.6174149561445333E-6	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999998468861949	WITHOUT_CLASSIFICATION	1.5311380516850875E-7	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999998468861949	WITHOUT_CLASSIFICATION	1.5311380516850875E-7	TEST
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.999999899230161	WITHOUT_CLASSIFICATION	1.0076983907743213E-7	TEST
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999997690339861	WITHOUT_CLASSIFICATION	2.309660138468198E-7	TEST
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999985287977662	WITHOUT_CLASSIFICATION	1.471202233794521E-6	TEST
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999999474370656	WITHOUT_CLASSIFICATION	5.2562934337162746E-8	TEST
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999988434219641	WITHOUT_CLASSIFICATION	1.1565780359735923E-6	TEST
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9999995392812202	WITHOUT_CLASSIFICATION	4.60718779889949E-7	TEST
// signed short, native	WITHOUT_CLASSIFICATION	0.9999982430157709	WITHOUT_CLASSIFICATION	1.7569842291150001E-6	TEST
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999771404605	WITHOUT_CLASSIFICATION	2.2859539491656872E-8	TEST
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999982942272758	WITHOUT_CLASSIFICATION	1.705772724155618E-6	TEST
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999999541791205	WITHOUT_CLASSIFICATION	4.582087951266672E-8	TEST
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999997610848652	WITHOUT_CLASSIFICATION	2.389151347850486E-7	TEST
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.99999988844088	WITHOUT_CLASSIFICATION	1.115591200933302E-7	TEST
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999998989621729	WITHOUT_CLASSIFICATION	1.0103782714498605E-7	TEST
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999997096696067	WITHOUT_CLASSIFICATION	2.90330393358551E-7	TEST
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999937043831701	WITHOUT_CLASSIFICATION	6.295616829825109E-6	TEST
//            write('S');	WITHOUT_CLASSIFICATION	0.9999957075333851	WITHOUT_CLASSIFICATION	4.292466614876448E-6	TEST
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999999926462638	WITHOUT_CLASSIFICATION	7.353736177425954E-9	TEST
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999998833976977	WITHOUT_CLASSIFICATION	1.1660230220663301E-7	TEST
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999997872867316	WITHOUT_CLASSIFICATION	2.1271326854096273E-7	TEST
// w_symbol	WITHOUT_CLASSIFICATION	0.9999933794860547	WITHOUT_CLASSIFICATION	6.620513945257893E-6	TEST
// w_unique	WITHOUT_CLASSIFICATION	0.9999947312054145	WITHOUT_CLASSIFICATION	5.268794585577744E-6	TEST
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999958885268585	WITHOUT_CLASSIFICATION	4.111473141500176E-6	TEST
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999926095743918	WITHOUT_CLASSIFICATION	7.390425608254521E-6	TEST
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999997773738456	WITHOUT_CLASSIFICATION	2.2262615441225957E-7	TEST
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999991103924822	WITHOUT_CLASSIFICATION	8.896075178469205E-7	TEST
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.999999869356511	WITHOUT_CLASSIFICATION	1.3064348894011396E-7	TEST
// sic	WITHOUT_CLASSIFICATION	0.9999942748398507	WITHOUT_CLASSIFICATION	5.725160149283405E-6	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999993756529355	WITHOUT_CLASSIFICATION	6.243470645444886E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999993756529355	WITHOUT_CLASSIFICATION	6.243470645444886E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999993756529355	WITHOUT_CLASSIFICATION	6.243470645444886E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999998168248914	WITHOUT_CLASSIFICATION	1.8317510864928645E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999998168248914	WITHOUT_CLASSIFICATION	1.8317510864928645E-7	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999841931101825	WITHOUT_CLASSIFICATION	1.5806889817541313E-5	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999841931101825	WITHOUT_CLASSIFICATION	1.5806889817541313E-5	TEST
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999995932067907	WITHOUT_CLASSIFICATION	4.067932093857457E-7	TEST
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.999991669294109	WITHOUT_CLASSIFICATION	8.33070589108103E-6	TEST
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999981580948367	WITHOUT_CLASSIFICATION	1.8419051631816933E-6	TEST
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999995658659254	WITHOUT_CLASSIFICATION	4.341340744981686E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999993756529355	WITHOUT_CLASSIFICATION	6.243470645444886E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999993756529355	WITHOUT_CLASSIFICATION	6.243470645444886E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999993756529355	WITHOUT_CLASSIFICATION	6.243470645444886E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999998168248914	WITHOUT_CLASSIFICATION	1.8317510864928645E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999998168248914	WITHOUT_CLASSIFICATION	1.8317510864928645E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999998168248914	WITHOUT_CLASSIFICATION	1.8317510864928645E-7	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999841931101825	WITHOUT_CLASSIFICATION	1.5806889817541313E-5	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999841931101825	WITHOUT_CLASSIFICATION	1.5806889817541313E-5	TEST
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999979385103686	WITHOUT_CLASSIFICATION	2.061489631508395E-6	TEST
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999999187253874	WITHOUT_CLASSIFICATION	8.127461253401474E-8	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999998888442992	WITHOUT_CLASSIFICATION	1.1115570077206262E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999998888442992	WITHOUT_CLASSIFICATION	1.1115570077206262E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999998888442992	WITHOUT_CLASSIFICATION	1.1115570077206262E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999998888442992	WITHOUT_CLASSIFICATION	1.1115570077206262E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999998888442992	WITHOUT_CLASSIFICATION	1.1115570077206262E-7	TEST
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999992484052355	WITHOUT_CLASSIFICATION	7.51594764423176E-7	TEST
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999975258594024	WITHOUT_CLASSIFICATION	2.474140597675061E-6	TEST
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9999989373274579	WITHOUT_CLASSIFICATION	1.0626725420180949E-6	TEST
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999895618360328	WITHOUT_CLASSIFICATION	1.0438163967232494E-5	TEST
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999985669702488	WITHOUT_CLASSIFICATION	1.4330297511294795E-6	TEST
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.999996827421011	WITHOUT_CLASSIFICATION	3.172578989011281E-6	TEST
// not enough bytes	WITHOUT_CLASSIFICATION	0.999994877539848	WITHOUT_CLASSIFICATION	5.122460151982089E-6	TEST
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999995431090798	WITHOUT_CLASSIFICATION	4.568909203018598E-7	TEST
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999987600475378	WITHOUT_CLASSIFICATION	1.2399524620753753E-6	TEST
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999966916397827	WITHOUT_CLASSIFICATION	3.3083602172550996E-6	TEST
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999973170802122	WITHOUT_CLASSIFICATION	2.6829197878333467E-6	TEST
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999986442436818	WITHOUT_CLASSIFICATION	1.3557563181866657E-6	TEST
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999994677433545	WITHOUT_CLASSIFICATION	5.322566454945757E-7	TEST
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999993692855417	WITHOUT_CLASSIFICATION	6.307144583753836E-7	TEST
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999994428739091	WITHOUT_CLASSIFICATION	5.571260910384123E-7	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999110174320014	WITHOUT_CLASSIFICATION	8.898256799858095E-5	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999110174320014	WITHOUT_CLASSIFICATION	8.898256799858095E-5	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999110174320014	WITHOUT_CLASSIFICATION	8.898256799858095E-5	TEST
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999975142326888	WITHOUT_CLASSIFICATION	2.485767311200954E-6	TEST
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999975140063215	WITHOUT_CLASSIFICATION	2.4859936785422605E-6	TEST
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999928314210287	WITHOUT_CLASSIFICATION	7.168578971242977E-6	TEST
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.999999970922916	WITHOUT_CLASSIFICATION	2.907708404651788E-8	TEST
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999993573208128	WITHOUT_CLASSIFICATION	6.426791873081124E-7	TEST
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999989533917971	WITHOUT_CLASSIFICATION	1.0466082029307388E-6	TEST
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999989251500511	WITHOUT_CLASSIFICATION	1.0748499489392098E-6	TEST
// single precision, native	WITHOUT_CLASSIFICATION	0.9999996198573252	WITHOUT_CLASSIFICATION	3.801426748631771E-7	TEST
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999991644813352	WITHOUT_CLASSIFICATION	8.355186647591134E-7	TEST
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999996783413017	WITHOUT_CLASSIFICATION	3.216586984155429E-7	TEST
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999996462591233	WITHOUT_CLASSIFICATION	3.5374087670255903E-7	TEST
// double precision, native	WITHOUT_CLASSIFICATION	0.9999998980034792	WITHOUT_CLASSIFICATION	1.0199652083333002E-7	TEST
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999972901954082	WITHOUT_CLASSIFICATION	2.709804591863568E-6	TEST
// signed char	WITHOUT_CLASSIFICATION	0.999997436748956	WITHOUT_CLASSIFICATION	2.56325104387843E-6	TEST
// unsigned char	WITHOUT_CLASSIFICATION	0.9999968377480131	WITHOUT_CLASSIFICATION	3.1622519868823948E-6	TEST
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999983909028708	WITHOUT_CLASSIFICATION	1.6090971292386514E-6	TEST
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999989332849142	WITHOUT_CLASSIFICATION	1.066715085807079E-6	TEST
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999990246160645	WITHOUT_CLASSIFICATION	9.753839354619814E-7	TEST
// int, native	WITHOUT_CLASSIFICATION	0.999999291401691	WITHOUT_CLASSIFICATION	7.085983091005584E-7	TEST
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999985482245369	WITHOUT_CLASSIFICATION	1.4517754630809362E-6	TEST
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999996808677507	WITHOUT_CLASSIFICATION	3.191322493394845E-7	TEST
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999993893283646	WITHOUT_CLASSIFICATION	6.106716352935152E-7	TEST
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9999980392279042	WITHOUT_CLASSIFICATION	1.960772095845102E-6	TEST
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999989341607022	WITHOUT_CLASSIFICATION	1.065839297815816E-6	TEST
// obtain a	WITHOUT_CLASSIFICATION	0.9999977054758906	WITHOUT_CLASSIFICATION	2.294524109344793E-6	TEST
// obtain b	WITHOUT_CLASSIFICATION	0.9999971220321351	WITHOUT_CLASSIFICATION	2.8779678648414295E-6	TEST
// obtain c	WITHOUT_CLASSIFICATION	0.9999985939513716	WITHOUT_CLASSIFICATION	1.4060486283605215E-6	TEST
// obtain d	WITHOUT_CLASSIFICATION	0.9999978435792372	WITHOUT_CLASSIFICATION	2.156420762726452E-6	TEST
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999975077121306	WITHOUT_CLASSIFICATION	2.4922878694263093E-6	TEST
/* 1 */	WITHOUT_CLASSIFICATION	0.9999836999782116	WITHOUT_CLASSIFICATION	1.6300021788386413E-5	TEST
/* 2 */	WITHOUT_CLASSIFICATION	0.9999854666930923	WITHOUT_CLASSIFICATION	1.45333069076915E-5	TEST
/* 3 */	WITHOUT_CLASSIFICATION	0.9999851633008294	WITHOUT_CLASSIFICATION	1.483669917050394E-5	TEST
/* 4 */	WITHOUT_CLASSIFICATION	0.9999835563772151	WITHOUT_CLASSIFICATION	1.6443622784785302E-5	TEST
/* 5 */	WITHOUT_CLASSIFICATION	0.9999831946750444	WITHOUT_CLASSIFICATION	1.6805324955641652E-5	TEST
/* 6 */	WITHOUT_CLASSIFICATION	0.9999831440082538	WITHOUT_CLASSIFICATION	1.685599174618289E-5	TEST
/* 7 */	WITHOUT_CLASSIFICATION	0.9999833130975843	WITHOUT_CLASSIFICATION	1.668690241578698E-5	TEST
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999974123578808	WITHOUT_CLASSIFICATION	2.587642119156927E-6	TEST
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999994188101756	WITHOUT_CLASSIFICATION	5.811898243849406E-7	TEST
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999928800319424	WITHOUT_CLASSIFICATION	7.119968057520714E-6	TEST
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9971629290112691	WITHOUT_CLASSIFICATION	0.002837070988730745	TEST
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999977076947483	WITHOUT_CLASSIFICATION	2.292305251679362E-6	TEST
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999997307874492	WITHOUT_CLASSIFICATION	2.692125507179783E-7	TEST
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999981928335144	WITHOUT_CLASSIFICATION	1.8071664854884374E-6	TEST
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999995719602279	WITHOUT_CLASSIFICATION	4.280397721327004E-7	TEST
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999758357505426	WITHOUT_CLASSIFICATION	2.416424945747381E-5	TEST
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999993044563338	WITHOUT_CLASSIFICATION	6.955436662300443E-7	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999890121646133	WITHOUT_CLASSIFICATION	1.0987835386641425E-5	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999890121646133	WITHOUT_CLASSIFICATION	1.0987835386641425E-5	TEST
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9999902053924095	WITHOUT_CLASSIFICATION	9.794607590511657E-6	TEST
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999998225989053	WITHOUT_CLASSIFICATION	1.7740109466729905E-7	TEST
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999993934671707	WITHOUT_CLASSIFICATION	6.065328294222528E-7	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9981888026862679	WITHOUT_CLASSIFICATION	0.0018111973137321879	TEST
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9999980998609864	WITHOUT_CLASSIFICATION	1.9001390136264196E-6	TEST
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999992624660392	WITHOUT_CLASSIFICATION	7.375339607496509E-7	TEST
// are we recursing?	WITHOUT_CLASSIFICATION	0.9999993992471549	WITHOUT_CLASSIFICATION	6.007528450708634E-7	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999997490453059	WITHOUT_CLASSIFICATION	2.5095469414517127E-7	TEST
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999952332290056	WITHOUT_CLASSIFICATION	4.766770994409369E-6	TEST
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999983734049093	WITHOUT_CLASSIFICATION	1.6265950907440486E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999998101215014	WITHOUT_CLASSIFICATION	1.8987849863597596E-7	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999998101215014	WITHOUT_CLASSIFICATION	1.8987849863597596E-7	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999998101215014	WITHOUT_CLASSIFICATION	1.8987849863597596E-7	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999998101215014	WITHOUT_CLASSIFICATION	1.8987849863597596E-7	TEST
// try both	WITHOUT_CLASSIFICATION	0.9999920635511372	WITHOUT_CLASSIFICATION	7.93644886271203E-6	TEST
// just unix	WITHOUT_CLASSIFICATION	0.9999883998790686	WITHOUT_CLASSIFICATION	1.1600120931375088E-5	TEST
// just windows	WITHOUT_CLASSIFICATION	0.999953229079288	WITHOUT_CLASSIFICATION	4.677092071195779E-5	TEST
// neither	WITHOUT_CLASSIFICATION	0.9999982138156728	WITHOUT_CLASSIFICATION	1.786184327179879E-6	TEST
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.999997381487212	WITHOUT_CLASSIFICATION	2.618512787979127E-6	TEST
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999983167555498	WITHOUT_CLASSIFICATION	1.6832444502515223E-6	TEST
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.999999949318239	WITHOUT_CLASSIFICATION	5.068176099782144E-8	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999998859439749	WITHOUT_CLASSIFICATION	1.1405602515233444E-7	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999998859439749	WITHOUT_CLASSIFICATION	1.1405602515233444E-7	TEST
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999994137598441	WITHOUT_CLASSIFICATION	5.86240155915807E-7	TEST
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999992554190189	WITHOUT_CLASSIFICATION	7.445809810511278E-7	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999998575838573	WITHOUT_CLASSIFICATION	1.424161425846311E-7	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999448916272	WITHOUT_CLASSIFICATION	5.510837265157313E-8	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999448916272	WITHOUT_CLASSIFICATION	5.510837265157313E-8	TEST
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999998283223537	WITHOUT_CLASSIFICATION	1.7167764637194492E-7	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999746561594851	WITHOUT_CLASSIFICATION	2.5343840514863507E-5	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999746561594851	WITHOUT_CLASSIFICATION	2.5343840514863507E-5	TEST
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999997193447242	WITHOUT_CLASSIFICATION	2.8065527587426753E-7	TEST
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999992359723895	WITHOUT_CLASSIFICATION	7.640276106585491E-7	TEST
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999999909006356	WITHOUT_CLASSIFICATION	9.099364402228633E-9	TEST
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999992556806107	WITHOUT_CLASSIFICATION	7.443193893953807E-7	TEST
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999995053278955	WITHOUT_CLASSIFICATION	4.946721045799128E-7	TEST
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999998979577599	WITHOUT_CLASSIFICATION	1.02042240102556E-7	TEST
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9999977865979152	WITHOUT_CLASSIFICATION	2.2134020848532347E-6	TEST
//sequential	WITHOUT_CLASSIFICATION	0.9999914238268707	WITHOUT_CLASSIFICATION	8.576173129423767E-6	TEST
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999998143342061	WITHOUT_CLASSIFICATION	1.856657938737742E-7	TEST
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.999999229539067	WITHOUT_CLASSIFICATION	7.704609330732965E-7	TEST
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999968089017393	WITHOUT_CLASSIFICATION	3.1910982607702027E-6	TEST
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999992597091488	WITHOUT_CLASSIFICATION	7.402908511422092E-7	TEST
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9995477613555988	WITHOUT_CLASSIFICATION	4.5223864440126574E-4	TEST
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9993359302523851	WITHOUT_CLASSIFICATION	6.640697476149006E-4	TEST
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999889583824784	WITHOUT_CLASSIFICATION	1.1041617521639909E-5	TEST
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999998349772062	WITHOUT_CLASSIFICATION	1.6502279368669922E-7	TEST
// Args	WITHOUT_CLASSIFICATION	0.9999949379729585	WITHOUT_CLASSIFICATION	5.062027041562644E-6	TEST
// static methods only	WITHOUT_CLASSIFICATION	0.999999764419315	WITHOUT_CLASSIFICATION	2.3558068501124213E-7	TEST
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999982958812628	WITHOUT_CLASSIFICATION	1.7041187372048164E-6	TEST
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999914720923658	WITHOUT_CLASSIFICATION	8.52790763414782E-6	TEST
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999963482057368	WITHOUT_CLASSIFICATION	3.6517942632009577E-6	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999996991012196	WITHOUT_CLASSIFICATION	3.0089878050126115E-7	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999998540430883	WITHOUT_CLASSIFICATION	1.4595691164999216E-7	TEST
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999989576966483	WITHOUT_CLASSIFICATION	1.042303351716449E-6	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.999999858459237	WITHOUT_CLASSIFICATION	1.4154076288204706E-7	TEST
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9999987870827727	WITHOUT_CLASSIFICATION	1.2129172272476476E-6	TEST
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999987944919625	WITHOUT_CLASSIFICATION	1.2055080375086723E-6	TEST
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999918893265483	WITHOUT_CLASSIFICATION	8.110673451727366E-6	TEST
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999999898893043	WITHOUT_CLASSIFICATION	1.011069562575873E-8	TEST
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.999998813982307	WITHOUT_CLASSIFICATION	1.1860176930109058E-6	TEST
// ..	WITHOUT_CLASSIFICATION	0.9999904441520289	WITHOUT_CLASSIFICATION	9.555847971134881E-6	TEST
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999775349541656	WITHOUT_CLASSIFICATION	2.246504583434671E-5	TEST
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9999542515878495	WITHOUT_CLASSIFICATION	4.574841215046752E-5	TEST
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999960517117891	WITHOUT_CLASSIFICATION	3.948288210929323E-6	TEST
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999999879950199	WITHOUT_CLASSIFICATION	1.2004980184760346E-8	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999975774443715	WITHOUT_CLASSIFICATION	2.422555628626388E-6	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999956813995416	WITHOUT_CLASSIFICATION	4.318600458424313E-6	TEST
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999994327754492	WITHOUT_CLASSIFICATION	5.672245506455094E-7	TEST
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999976733857123	WITHOUT_CLASSIFICATION	2.326614287721874E-6	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999975774443715	WITHOUT_CLASSIFICATION	2.422555628626388E-6	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999956813995416	WITHOUT_CLASSIFICATION	4.318600458424313E-6	TEST
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999989832709183	WITHOUT_CLASSIFICATION	1.0167290817316587E-6	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.999996516822881	WITHOUT_CLASSIFICATION	3.4831771189865378E-6	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.999996516822881	WITHOUT_CLASSIFICATION	3.4831771189865378E-6	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999866556614935	WITHOUT_CLASSIFICATION	1.3344338506386443E-5	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.999999973022685	WITHOUT_CLASSIFICATION	2.6977315039705227E-8	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999957914187918	WITHOUT_CLASSIFICATION	4.208581208245913E-6	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999971248926883	WITHOUT_CLASSIFICATION	2.8751073117480188E-6	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999921267174461	WITHOUT_CLASSIFICATION	7.873282553824146E-6	TEST
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999978715640868	WITHOUT_CLASSIFICATION	2.1284359132418685E-6	TEST
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999867264859436	WITHOUT_CLASSIFICATION	1.327351405644108E-5	TEST
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999995778297631	WITHOUT_CLASSIFICATION	4.2217023696199833E-7	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999998362071456	WITHOUT_CLASSIFICATION	1.637928544101739E-7	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9999873017087156	WITHOUT_CLASSIFICATION	1.2698291284404792E-5	TEST
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.999999542235214	WITHOUT_CLASSIFICATION	4.577647860504313E-7	TEST
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999907373294643	WITHOUT_CLASSIFICATION	9.26267053560878E-6	TEST
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999983129922488	WITHOUT_CLASSIFICATION	1.687007751167716E-6	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999970972593207	WITHOUT_CLASSIFICATION	2.9027406794149983E-6	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999970972593207	WITHOUT_CLASSIFICATION	2.9027406794149983E-6	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.999994137191755	WITHOUT_CLASSIFICATION	5.862808245010369E-6	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.999994137191755	WITHOUT_CLASSIFICATION	5.862808245010369E-6	TEST
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999892169897143	WITHOUT_CLASSIFICATION	1.0783010285606197E-5	TEST
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999992557882784	WITHOUT_CLASSIFICATION	7.44211721504091E-7	TEST
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999970416899119	WITHOUT_CLASSIFICATION	2.9583100881650514E-6	TEST
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999991295210832	WITHOUT_CLASSIFICATION	8.704789168030182E-7	TEST
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9998813602129932	WITHOUT_CLASSIFICATION	1.1863978700682921E-4	TEST
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999864060455982	WITHOUT_CLASSIFICATION	1.3593954401915693E-5	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999957914187918	WITHOUT_CLASSIFICATION	4.208581208245913E-6	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999971248926883	WITHOUT_CLASSIFICATION	2.8751073117480188E-6	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999998362071456	WITHOUT_CLASSIFICATION	1.637928544101739E-7	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9999873017087156	WITHOUT_CLASSIFICATION	1.2698291284404792E-5	TEST
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999971706863795	WITHOUT_CLASSIFICATION	2.8293136204369284E-6	TEST
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999988293175396	WITHOUT_CLASSIFICATION	1.170682460480606E-6	TEST
// \v	WITHOUT_CLASSIFICATION	0.999987913605895	WITHOUT_CLASSIFICATION	1.2086394104925902E-5	TEST
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999964920758064	WITHOUT_CLASSIFICATION	3.507924193660669E-6	TEST
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999980343823279	WITHOUT_CLASSIFICATION	1.9656176721827355E-6	TEST
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999961963338464	WITHOUT_CLASSIFICATION	3.803666153685826E-6	TEST
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999990675407107	WITHOUT_CLASSIFICATION	9.324592892354181E-7	TEST
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999889971054585	WITHOUT_CLASSIFICATION	1.1002894541552102E-5	TEST
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999934028394292	WITHOUT_CLASSIFICATION	6.597160570882532E-6	TEST
// negative values	WITHOUT_CLASSIFICATION	0.9999988149992178	WITHOUT_CLASSIFICATION	1.1850007822257099E-6	TEST
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999999705566989	WITHOUT_CLASSIFICATION	2.944330112718473E-8	TEST
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9988813664805378	WITHOUT_CLASSIFICATION	0.0011186335194620907	TEST
// no such luck...	WITHOUT_CLASSIFICATION	0.9999990442096974	WITHOUT_CLASSIFICATION	9.557903025950368E-7	TEST
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999977761568076	WITHOUT_CLASSIFICATION	2.2238431923843405E-6	TEST
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999995242851789	WITHOUT_CLASSIFICATION	4.7571482104732996E-7	TEST
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999998519152719	WITHOUT_CLASSIFICATION	1.4808472821544583E-7	TEST
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999995246729084	WITHOUT_CLASSIFICATION	4.753270916766394E-7	TEST
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999923262817094	WITHOUT_CLASSIFICATION	7.673718290598685E-6	TEST
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999950681254741	WITHOUT_CLASSIFICATION	4.931874525802345E-6	TEST
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999968872185591	WITHOUT_CLASSIFICATION	3.112781441068496E-6	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999964762692857	WITHOUT_CLASSIFICATION	3.5237307143893477E-6	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999964762692857	WITHOUT_CLASSIFICATION	3.5237307143893477E-6	TEST
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999987582614653	WITHOUT_CLASSIFICATION	1.2417385346652202E-6	TEST
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999960689341786	WITHOUT_CLASSIFICATION	3.931065821505598E-6	TEST
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999996361276866	WITHOUT_CLASSIFICATION	3.6387231340135763E-7	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999940093613369	WITHOUT_CLASSIFICATION	5.990638663073232E-6	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999940093613369	WITHOUT_CLASSIFICATION	5.990638663073232E-6	TEST
// \v	WITHOUT_CLASSIFICATION	0.999987913605895	WITHOUT_CLASSIFICATION	1.2086394104925902E-5	TEST
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999642987950674	WITHOUT_CLASSIFICATION	3.5701204932520277E-5	TEST
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999839366510784	WITHOUT_CLASSIFICATION	1.6063348921542225E-5	TEST
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.999992634546672	WITHOUT_CLASSIFICATION	7.365453328058945E-6	TEST
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.999994470941564	WITHOUT_CLASSIFICATION	5.5290584360340394E-6	TEST
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999979396845795	WITHOUT_CLASSIFICATION	2.060315420553746E-6	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999556423708733	WITHOUT_CLASSIFICATION	4.4357629126663E-5	TEST
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999968661354884	WITHOUT_CLASSIFICATION	3.1338645114986473E-6	TEST
// no number	WITHOUT_CLASSIFICATION	0.9999989145526437	WITHOUT_CLASSIFICATION	1.0854473563830519E-6	TEST
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999985525579088	WITHOUT_CLASSIFICATION	1.4474420911574365E-6	TEST
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999961459508754	WITHOUT_CLASSIFICATION	3.8540491246480325E-6	TEST
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999966624217863	WITHOUT_CLASSIFICATION	3.3375782136518923E-6	TEST
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999998487766173	WITHOUT_CLASSIFICATION	1.5122338273478262E-7	TEST
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999994215324067	WITHOUT_CLASSIFICATION	5.784675933793573E-7	TEST
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999992885240574	WITHOUT_CLASSIFICATION	7.114759427266498E-7	TEST
// we reached the end	WITHOUT_CLASSIFICATION	0.999999280391321	WITHOUT_CLASSIFICATION	7.196086790213778E-7	TEST
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999887087589385	WITHOUT_CLASSIFICATION	1.1291241061372133E-5	TEST
// states	WITHOUT_CLASSIFICATION	0.9999876293236091	WITHOUT_CLASSIFICATION	1.2370676390942796E-5	TEST
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.999998184332888	WITHOUT_CLASSIFICATION	1.8156671119966607E-6	TEST
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999999815774993	WITHOUT_CLASSIFICATION	1.8422500741364097E-8	TEST
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999999775124463	WITHOUT_CLASSIFICATION	2.248755373519093E-8	TEST
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999929038715938	WITHOUT_CLASSIFICATION	7.096128406150287E-6	TEST
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999994382226769	WITHOUT_CLASSIFICATION	5.617773231463086E-7	TEST
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999973914529077	WITHOUT_CLASSIFICATION	2.6085470923250746E-6	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999993544193467	WITHOUT_CLASSIFICATION	6.455806532889294E-7	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999980667731065	WITHOUT_CLASSIFICATION	1.93322689339985E-6	TEST
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999997342789492	WITHOUT_CLASSIFICATION	2.6572105083826973E-7	TEST
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999973681918467	WITHOUT_CLASSIFICATION	2.6318081532069193E-6	TEST
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999433812612	WITHOUT_CLASSIFICATION	5.661873877107062E-8	TEST
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999988394863333	WITHOUT_CLASSIFICATION	1.160513666703879E-6	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999995870012417	WITHOUT_CLASSIFICATION	4.129987583291875E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999995870012417	WITHOUT_CLASSIFICATION	4.129987583291875E-7	TEST
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999996585234091	WITHOUT_CLASSIFICATION	3.414765909442738E-7	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999992763900629	WITHOUT_CLASSIFICATION	7.236099370404413E-7	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999992763900629	WITHOUT_CLASSIFICATION	7.236099370404413E-7	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.999999858056924	WITHOUT_CLASSIFICATION	1.4194307596884425E-7	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.999999858056924	WITHOUT_CLASSIFICATION	1.4194307596884425E-7	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999947070113993	WITHOUT_CLASSIFICATION	5.292988600789416E-6	TEST
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999996435595605	WITHOUT_CLASSIFICATION	3.56440439428017E-7	TEST
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999645993409	WITHOUT_CLASSIFICATION	3.540065895913837E-8	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999965261970724	WITHOUT_CLASSIFICATION	3.4738029276587877E-6	TEST
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999993456445952	WITHOUT_CLASSIFICATION	6.543554047119906E-7	TEST
// block	WITHOUT_CLASSIFICATION	0.9999959557694422	WITHOUT_CLASSIFICATION	4.044230557719443E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999959557694422	WITHOUT_CLASSIFICATION	4.044230557719443E-6	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999993544193467	WITHOUT_CLASSIFICATION	6.455806532889294E-7	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999993544193467	WITHOUT_CLASSIFICATION	6.455806532889294E-7	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999993544193467	WITHOUT_CLASSIFICATION	6.455806532889294E-7	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999980667731065	WITHOUT_CLASSIFICATION	1.93322689339985E-6	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999995870012417	WITHOUT_CLASSIFICATION	4.129987583291875E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999995870012417	WITHOUT_CLASSIFICATION	4.129987583291875E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999995870012417	WITHOUT_CLASSIFICATION	4.129987583291875E-7	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999947070113993	WITHOUT_CLASSIFICATION	5.292988600789416E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999947070113993	WITHOUT_CLASSIFICATION	5.292988600789416E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999947070113993	WITHOUT_CLASSIFICATION	5.292988600789416E-6	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999965261970724	WITHOUT_CLASSIFICATION	3.4738029276587877E-6	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999965261970724	WITHOUT_CLASSIFICATION	3.4738029276587877E-6	TEST
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999977809807767	WITHOUT_CLASSIFICATION	2.219019223276105E-6	TEST
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999999188463758	WITHOUT_CLASSIFICATION	8.115362412661E-8	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999990956696727	WITHOUT_CLASSIFICATION	9.043303272371683E-7	TEST
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.999998136112363	WITHOUT_CLASSIFICATION	1.8638876370000572E-6	TEST
// no digits, error	WITHOUT_CLASSIFICATION	0.9999994775792209	WITHOUT_CLASSIFICATION	5.224207791342484E-7	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999920816780177	WITHOUT_CLASSIFICATION	7.918321982330573E-6	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999920816780177	WITHOUT_CLASSIFICATION	7.918321982330573E-6	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999981461358146	WITHOUT_CLASSIFICATION	1.8538641853010657E-6	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999556423708733	WITHOUT_CLASSIFICATION	4.4357629126663E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999556423708733	WITHOUT_CLASSIFICATION	4.4357629126663E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999556423708733	WITHOUT_CLASSIFICATION	4.4357629126663E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999556423708733	WITHOUT_CLASSIFICATION	4.4357629126663E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999556423708733	WITHOUT_CLASSIFICATION	4.4357629126663E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999797160304933	WITHOUT_CLASSIFICATION	2.028396950666576E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999797160304933	WITHOUT_CLASSIFICATION	2.028396950666576E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999797160304933	WITHOUT_CLASSIFICATION	2.028396950666576E-5	TEST
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999983425171909	WITHOUT_CLASSIFICATION	1.6574828091180351E-6	TEST
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999950591722325	WITHOUT_CLASSIFICATION	4.940827767506358E-6	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999980667731065	WITHOUT_CLASSIFICATION	1.93322689339985E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999947070113993	WITHOUT_CLASSIFICATION	5.292988600789416E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999947070113993	WITHOUT_CLASSIFICATION	5.292988600789416E-6	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999556423708733	WITHOUT_CLASSIFICATION	4.4357629126663E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999556423708733	WITHOUT_CLASSIFICATION	4.4357629126663E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999797160304933	WITHOUT_CLASSIFICATION	2.028396950666576E-5	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999981461358146	WITHOUT_CLASSIFICATION	1.8538641853010657E-6	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999965808241346	WITHOUT_CLASSIFICATION	3.419175865473634E-6	TEST
// switch //while	WITHOUT_CLASSIFICATION	0.9999977602106294	WITHOUT_CLASSIFICATION	2.2397893705850286E-6	TEST
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999998098678036	WITHOUT_CLASSIFICATION	1.901321963362606E-7	TEST
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999998692622463	WITHOUT_CLASSIFICATION	1.3073775382762477E-7	TEST
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999985992354962	WITHOUT_CLASSIFICATION	1.4007645038721865E-6	TEST
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999990002031725	WITHOUT_CLASSIFICATION	9.997968275263871E-7	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.999965953307085	WITHOUT_CLASSIFICATION	3.4046692914961444E-5	TEST
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999996610986948	WITHOUT_CLASSIFICATION	3.389013052705597E-7	TEST
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999995596655422	WITHOUT_CLASSIFICATION	4.403344577045454E-7	TEST
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999995619031341	WITHOUT_CLASSIFICATION	4.38096865946514E-7	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999995865783692	WITHOUT_CLASSIFICATION	4.1342163085945245E-7	TEST
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999859983547345	WITHOUT_CLASSIFICATION	1.4001645265514286E-5	TEST
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999979811492564	WITHOUT_CLASSIFICATION	2.018850743638811E-6	TEST
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999948240141394	WITHOUT_CLASSIFICATION	5.175985860604043E-6	TEST
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999987177826147	WITHOUT_CLASSIFICATION	1.282217385284337E-6	TEST
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999993964210909	WITHOUT_CLASSIFICATION	6.035789090205662E-7	TEST
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999995951109709	WITHOUT_CLASSIFICATION	4.0488902919657384E-7	TEST
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999998819696575	WITHOUT_CLASSIFICATION	1.1803034252105879E-7	TEST
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9999823423301631	WITHOUT_CLASSIFICATION	1.7657669836953286E-5	TEST
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999995172892387	WITHOUT_CLASSIFICATION	4.827107611899443E-7	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999990189834554	WITHOUT_CLASSIFICATION	9.810165445260118E-7	TEST
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.999999713003097	WITHOUT_CLASSIFICATION	2.8699690300019556E-7	TEST
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999997877469177	WITHOUT_CLASSIFICATION	2.1225308239241286E-7	TEST
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999997226845974	WITHOUT_CLASSIFICATION	2.773154027481107E-7	TEST
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999994942484302	WITHOUT_CLASSIFICATION	5.057515698779083E-7	TEST
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999976852604504	WITHOUT_CLASSIFICATION	2.314739549572967E-6	TEST
// unread back	WITHOUT_CLASSIFICATION	0.9999987416893676	WITHOUT_CLASSIFICATION	1.2583106324014014E-6	TEST
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.999999422759291	WITHOUT_CLASSIFICATION	5.77240709045127E-7	TEST
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999961699555698	WITHOUT_CLASSIFICATION	3.8300444301130935E-6	TEST
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999999809801854	WITHOUT_CLASSIFICATION	1.9019814636688095E-8	TEST
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999998144422232	WITHOUT_CLASSIFICATION	1.855577768002239E-7	TEST
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999999786454892	WITHOUT_CLASSIFICATION	2.135451080894578E-8	TEST
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999996241275787	WITHOUT_CLASSIFICATION	3.758724213308539E-7	TEST
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999995669418226	WITHOUT_CLASSIFICATION	4.330581774084426E-7	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999965808241346	WITHOUT_CLASSIFICATION	3.419175865473634E-6	TEST
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999995247621826	WITHOUT_CLASSIFICATION	4.752378174456401E-7	TEST
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999992242170963	WITHOUT_CLASSIFICATION	7.757829037108793E-7	TEST
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999997454596862	WITHOUT_CLASSIFICATION	2.545403138923788E-7	TEST
// silence	WITHOUT_CLASSIFICATION	0.9999986457204925	WITHOUT_CLASSIFICATION	1.354279507461214E-6	TEST
// silence	WITHOUT_CLASSIFICATION	0.9999986457204925	WITHOUT_CLASSIFICATION	1.354279507461214E-6	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.9999973506350189	WITHOUT_CLASSIFICATION	2.6493649811699075E-6	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.9999973506350189	WITHOUT_CLASSIFICATION	2.6493649811699075E-6	TEST
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999988953393496	WITHOUT_CLASSIFICATION	1.1046606504523302E-6	TEST
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999999659091209	WITHOUT_CLASSIFICATION	3.4090879089258746E-8	TEST
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999933808949394	WITHOUT_CLASSIFICATION	6.619105060542622E-6	TEST
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999972652599142	WITHOUT_CLASSIFICATION	2.734740085885667E-6	TEST
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999996954111731	WITHOUT_CLASSIFICATION	3.0458882703853374E-7	TEST
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999995671919791	WITHOUT_CLASSIFICATION	4.328080208333835E-7	TEST
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999974402066673	WITHOUT_CLASSIFICATION	2.5597933327162265E-6	TEST
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999999892955626	WITHOUT_CLASSIFICATION	1.070443747788659E-8	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999999693819722	WITHOUT_CLASSIFICATION	3.061802774535191E-8	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999998628246717	WITHOUT_CLASSIFICATION	1.3717532832475419E-7	TEST
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999997328917325	WITHOUT_CLASSIFICATION	2.6710826749758355E-7	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999938070803055	WITHOUT_CLASSIFICATION	6.192919694467946E-6	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999938070803055	WITHOUT_CLASSIFICATION	6.192919694467946E-6	TEST
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999997290360182	WITHOUT_CLASSIFICATION	2.7096398184506495E-7	TEST
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999997649019895	WITHOUT_CLASSIFICATION	2.3509801055138326E-7	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999960703240293	WITHOUT_CLASSIFICATION	3.929675970715011E-6	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999960703240293	WITHOUT_CLASSIFICATION	3.929675970715011E-6	TEST
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999972864436794	WITHOUT_CLASSIFICATION	2.7135563205574744E-6	TEST
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999997313301804	WITHOUT_CLASSIFICATION	2.6866981959988553E-7	TEST
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999972072351224	WITHOUT_CLASSIFICATION	2.792764877565873E-6	TEST
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999982200667139	WITHOUT_CLASSIFICATION	1.7799332861019838E-6	TEST
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999994587760018	WITHOUT_CLASSIFICATION	5.412239981380358E-7	TEST
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.999999879795356	WITHOUT_CLASSIFICATION	1.2020464400181867E-7	TEST
// save the ungot	WITHOUT_CLASSIFICATION	0.9999974643768714	WITHOUT_CLASSIFICATION	2.535623128500585E-6	TEST
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999994120224366	WITHOUT_CLASSIFICATION	5.879775634778638E-7	TEST
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999987107065231	WITHOUT_CLASSIFICATION	1.289293476961891E-6	TEST
// flush first	WITHOUT_CLASSIFICATION	0.9999926963123443	WITHOUT_CLASSIFICATION	7.303687655592706E-6	TEST
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.999997155589003	WITHOUT_CLASSIFICATION	2.8444109968828446E-6	TEST
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999959830108922	WITHOUT_CLASSIFICATION	4.0169891077992885E-6	TEST
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999965670357777	WITHOUT_CLASSIFICATION	3.432964222281663E-6	TEST
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999958068811157	WITHOUT_CLASSIFICATION	4.193118884392671E-6	TEST
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999999429651707	WITHOUT_CLASSIFICATION	5.7034829287446E-8	TEST
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999995154439658	WITHOUT_CLASSIFICATION	4.8455603424837E-7	TEST
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999978258514537	WITHOUT_CLASSIFICATION	2.1741485463425437E-6	TEST
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.999999453991863	WITHOUT_CLASSIFICATION	5.460081369767729E-7	TEST
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999792585648352	WITHOUT_CLASSIFICATION	2.0741435164734698E-5	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999993283554358	WITHOUT_CLASSIFICATION	6.716445640657775E-7	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.997429957056679	WITHOUT_CLASSIFICATION	0.002570042943321054	TEST
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999972481099596	WITHOUT_CLASSIFICATION	2.751890040445134E-6	TEST
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.999998398642507	WITHOUT_CLASSIFICATION	1.6013574930657904E-6	TEST
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.999995241799118	WITHOUT_CLASSIFICATION	4.758200881981279E-6	TEST
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999974443971673	WITHOUT_CLASSIFICATION	2.555602832621327E-6	TEST
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999990109355915	WITHOUT_CLASSIFICATION	9.8906440845533E-7	TEST
// else leave it null	WITHOUT_CLASSIFICATION	0.9999984088738941	WITHOUT_CLASSIFICATION	1.5911261058349924E-6	TEST
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999967164001922	WITHOUT_CLASSIFICATION	3.2835998077314172E-6	TEST
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.999999069663082	WITHOUT_CLASSIFICATION	9.30336918017335E-7	TEST
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999908457624184	WITHOUT_CLASSIFICATION	9.154237581630341E-6	TEST
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999862220837227	WITHOUT_CLASSIFICATION	1.3777916277267299E-5	TEST
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999723432168292	WITHOUT_CLASSIFICATION	2.7656783170796434E-5	TEST
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999997854513575	WITHOUT_CLASSIFICATION	2.1454864253474672E-7	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.999999495762309	WITHOUT_CLASSIFICATION	5.042376910558721E-7	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.999999495762309	WITHOUT_CLASSIFICATION	5.042376910558721E-7	TEST
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999996097263032	WITHOUT_CLASSIFICATION	3.90273696749673E-7	TEST
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999997338744916	WITHOUT_CLASSIFICATION	2.661255083271393E-7	TEST
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999765119779905	WITHOUT_CLASSIFICATION	2.3488022009505163E-5	TEST
// Init	WITHOUT_CLASSIFICATION	0.9999917099908976	WITHOUT_CLASSIFICATION	8.290009102314604E-6	TEST
// Block	WITHOUT_CLASSIFICATION	0.999995670219187	WITHOUT_CLASSIFICATION	4.32978081300367E-6	TEST
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999993633978138	WITHOUT_CLASSIFICATION	6.366021860932345E-7	TEST
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.999988588978893	WITHOUT_CLASSIFICATION	1.141102110702083E-5	TEST
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999950400523319	WITHOUT_CLASSIFICATION	4.959947668085818E-6	TEST
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999983584306804	WITHOUT_CLASSIFICATION	1.6415693195173447E-6	TEST
// ok	WITHOUT_CLASSIFICATION	0.9999821859486162	WITHOUT_CLASSIFICATION	1.7814051383840812E-5	TEST
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999999939758488	WITHOUT_CLASSIFICATION	6.024151147754258E-9	TEST
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9999967335901013	WITHOUT_CLASSIFICATION	3.2664098986653476E-6	TEST
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999336604967284	WITHOUT_CLASSIFICATION	6.633950327168259E-5	TEST
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.999997914723765	WITHOUT_CLASSIFICATION	2.08527623506149E-6	TEST
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999991928584598	WITHOUT_CLASSIFICATION	8.071415401850147E-7	TEST
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999959605671649	WITHOUT_CLASSIFICATION	4.039432835100559E-6	TEST
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999997610283095	WITHOUT_CLASSIFICATION	2.389716904646337E-7	TEST
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999971062667817	WITHOUT_CLASSIFICATION	2.89373321830705E-6	TEST
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.999999425659956	WITHOUT_CLASSIFICATION	5.743400440148443E-7	TEST
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999947452296638	WITHOUT_CLASSIFICATION	5.254770336135898E-6	TEST
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999999540296273	WITHOUT_CLASSIFICATION	4.597037274218375E-8	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.999998832929623	WITHOUT_CLASSIFICATION	1.167070377006389E-6	TEST
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999996160255287	WITHOUT_CLASSIFICATION	3.839744713356861E-7	TEST
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.99999994163932	WITHOUT_CLASSIFICATION	5.836068002734448E-8	TEST
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999975713687376	WITHOUT_CLASSIFICATION	2.4286312624566944E-6	TEST
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999999377117951	WITHOUT_CLASSIFICATION	6.228820498166075E-8	TEST
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999215523105	WITHOUT_CLASSIFICATION	7.844768946999058E-8	TEST
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999978440003858	WITHOUT_CLASSIFICATION	2.155999614172227E-6	TEST
// void methods should work	WITHOUT_CLASSIFICATION	0.9999991950213035	WITHOUT_CLASSIFICATION	8.049786965093464E-7	TEST
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999999462783759	WITHOUT_CLASSIFICATION	5.372162404570111E-8	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999888642337477	WITHOUT_CLASSIFICATION	1.1135766252329344E-5	TEST
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999785934753515	WITHOUT_CLASSIFICATION	2.140652464861245E-5	TEST
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.99999522740051	WITHOUT_CLASSIFICATION	4.772599490022584E-6	TEST
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999992855237982	WITHOUT_CLASSIFICATION	7.144762018389041E-7	TEST
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999971492898841	WITHOUT_CLASSIFICATION	2.850710115806008E-6	TEST
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9998502661236248	WITHOUT_CLASSIFICATION	1.4973387637527613E-4	TEST
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999979498233927	WITHOUT_CLASSIFICATION	2.0501766072163587E-6	TEST
// value equality	WITHOUT_CLASSIFICATION	0.9999981612571001	WITHOUT_CLASSIFICATION	1.8387428998778213E-6	TEST
// identity equality	WITHOUT_CLASSIFICATION	0.9999994581039701	WITHOUT_CLASSIFICATION	5.41896030011222E-7	TEST
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999978632027503	WITHOUT_CLASSIFICATION	2.136797249720224E-6	TEST
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999954126499525	WITHOUT_CLASSIFICATION	4.587350047573344E-6	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999869523680286	WITHOUT_CLASSIFICATION	1.3047631971481525E-5	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999869523680286	WITHOUT_CLASSIFICATION	1.3047631971481525E-5	TEST
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.999994860189475	WITHOUT_CLASSIFICATION	5.139810524988637E-6	TEST
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999985967817171	WITHOUT_CLASSIFICATION	1.4032182828714447E-6	TEST
// bench Long fib	WITHOUT_CLASSIFICATION	0.999996384217499	WITHOUT_CLASSIFICATION	3.6157825008856494E-6	TEST
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999930436681389	WITHOUT_CLASSIFICATION	6.956331861052259E-6	TEST
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999987159810406	WITHOUT_CLASSIFICATION	1.2840189593034643E-6	TEST
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999997758299827	WITHOUT_CLASSIFICATION	2.2417001723726074E-7	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999233436928	WITHOUT_CLASSIFICATION	7.665630714869209E-8	TEST
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999999279261071	WITHOUT_CLASSIFICATION	7.207389285719445E-8	TEST
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999993498715012	WITHOUT_CLASSIFICATION	6.501284988116552E-7	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.99999999877016	WITHOUT_CLASSIFICATION	1.2298399123619158E-9	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999927854436682	WITHOUT_CLASSIFICATION	7.2145563317135884E-6	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999991975965671	WITHOUT_CLASSIFICATION	8.024034327851857E-7	TEST
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.999999381795977	WITHOUT_CLASSIFICATION	6.182040228987193E-7	TEST
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.999999459764189	WITHOUT_CLASSIFICATION	5.402358108804427E-7	TEST
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999997006797758	WITHOUT_CLASSIFICATION	2.9932022423708254E-7	TEST
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9999946833255111	WITHOUT_CLASSIFICATION	5.316674488889762E-6	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999999855899634	WITHOUT_CLASSIFICATION	1.4410036673741047E-8	TEST
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999858357784713	WITHOUT_CLASSIFICATION	1.416422152868185E-5	TEST
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999990134412434	WITHOUT_CLASSIFICATION	9.865587566196704E-7	TEST
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9998929375308283	WITHOUT_CLASSIFICATION	1.0706246917178031E-4	TEST
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999997162223567	WITHOUT_CLASSIFICATION	2.8377764327782235E-7	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999996468217246	WITHOUT_CLASSIFICATION	3.5317827529513193E-7	TEST
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.999999964254284	WITHOUT_CLASSIFICATION	3.574571611117124E-8	TEST
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999999666217619	WITHOUT_CLASSIFICATION	3.337823802144227E-8	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999999091600907	WITHOUT_CLASSIFICATION	9.083990917782616E-8	TEST
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999999577596427	WITHOUT_CLASSIFICATION	4.2240357421071564E-8	TEST
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999997075606514	WITHOUT_CLASSIFICATION	2.924393486283459E-7	TEST
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999996300235867	WITHOUT_CLASSIFICATION	3.699764133503863E-7	TEST
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999994654093572	WITHOUT_CLASSIFICATION	5.345906427146096E-7	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999979609010979	WITHOUT_CLASSIFICATION	2.0390989020322026E-6	TEST
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999995040726993	WITHOUT_CLASSIFICATION	4.959273006970756E-7	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999992054102298	WITHOUT_CLASSIFICATION	7.945897702877322E-7	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999979609010979	WITHOUT_CLASSIFICATION	2.0390989020322026E-6	TEST
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999990470787449	WITHOUT_CLASSIFICATION	9.529212551788068E-7	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.999999858459237	WITHOUT_CLASSIFICATION	1.4154076288204706E-7	TEST
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9999980077371166	WITHOUT_CLASSIFICATION	1.9922628835245973E-6	TEST
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9995959491049468	WITHOUT_CLASSIFICATION	4.0405089505319924E-4	TEST
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.999999540526453	WITHOUT_CLASSIFICATION	4.594735470098195E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999998888442992	WITHOUT_CLASSIFICATION	1.1115570077206262E-7	TEST
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999990835999469	WITHOUT_CLASSIFICATION	9.164000529533658E-7	TEST
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999663979881357	WITHOUT_CLASSIFICATION	3.36020118642891E-5	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.999999973022685	WITHOUT_CLASSIFICATION	2.6977315039705227E-8	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999993283554358	WITHOUT_CLASSIFICATION	6.716445640657775E-7	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999990956696727	WITHOUT_CLASSIFICATION	9.043303272371683E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999744010133	WITHOUT_CLASSIFICATION	2.5598986723311158E-8	TEST
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999984216359664	WITHOUT_CLASSIFICATION	1.5783640336092779E-6	TEST
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999999297949348	WITHOUT_CLASSIFICATION	7.020506525076561E-8	TEST
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999757658210192	WITHOUT_CLASSIFICATION	2.4234178980718608E-5	TEST
// switch // while	WITHOUT_CLASSIFICATION	0.9999977738394649	WITHOUT_CLASSIFICATION	2.2261605350709602E-6	TEST
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9999997704168795	WITHOUT_CLASSIFICATION	2.2958312048161686E-7	TEST
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.999995937405148	WITHOUT_CLASSIFICATION	4.062594851941117E-6	TEST
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999999927370009	WITHOUT_CLASSIFICATION	7.262999084976447E-9	TEST
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999995249761183	WITHOUT_CLASSIFICATION	4.75023881693252E-7	TEST
// expected	WITHOUT_CLASSIFICATION	0.9999968831486685	WITHOUT_CLASSIFICATION	3.11685133133267E-6	TEST
// Do nothing	WITHOUT_CLASSIFICATION	0.999996609702717	WITHOUT_CLASSIFICATION	3.3902972830994022E-6	TEST
// constructor	WITHOUT_CLASSIFICATION	0.9999991128238709	WITHOUT_CLASSIFICATION	8.871761291280632E-7	TEST
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999925589503421	WITHOUT_CLASSIFICATION	7.441049657807076E-6	TEST
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999937437721219	WITHOUT_CLASSIFICATION	6.256227878123976E-6	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999959262047112	WITHOUT_CLASSIFICATION	4.0737952887555285E-6	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999956705162681	WITHOUT_CLASSIFICATION	4.329483731894917E-6	TEST
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999999584041854	WITHOUT_CLASSIFICATION	4.159581454604833E-8	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.999999625966443	WITHOUT_CLASSIFICATION	3.740335569865364E-7	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999992070604189	WITHOUT_CLASSIFICATION	7.929395810875675E-7	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999992070604189	WITHOUT_CLASSIFICATION	7.929395810875675E-7	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999997761779524	WITHOUT_CLASSIFICATION	2.2382204770199363E-7	TEST
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999999451116495	WITHOUT_CLASSIFICATION	5.488835058084415E-8	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999998454871439	WITHOUT_CLASSIFICATION	1.5451285617103483E-7	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9986789099134804	WITHOUT_CLASSIFICATION	0.0013210900865195517	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9986789099134804	WITHOUT_CLASSIFICATION	0.0013210900865195517	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9986789099134804	WITHOUT_CLASSIFICATION	0.0013210900865195517	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9986789099134804	WITHOUT_CLASSIFICATION	0.0013210900865195517	TEST
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999981904545718	WITHOUT_CLASSIFICATION	1.8095454281360655E-6	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999990596011891	WITHOUT_CLASSIFICATION	9.403988108845707E-7	TEST
// "else" body	WITHOUT_CLASSIFICATION	0.9999968947868971	WITHOUT_CLASSIFICATION	3.1052131027586605E-6	TEST
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9997986187689237	WITHOUT_CLASSIFICATION	2.013812310763025E-4	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999995826495851	WITHOUT_CLASSIFICATION	4.173504148696936E-7	TEST
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999958847510446	WITHOUT_CLASSIFICATION	4.115248955368587E-6	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999831613372694	WITHOUT_CLASSIFICATION	1.683866273054611E-5	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999831613372694	WITHOUT_CLASSIFICATION	1.683866273054611E-5	TEST
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999999123283951	WITHOUT_CLASSIFICATION	8.76716048724359E-8	TEST
/* 10! */	WITHOUT_CLASSIFICATION	0.9999860871375111	WITHOUT_CLASSIFICATION	1.391286248888345E-5	TEST
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.99999937033711	WITHOUT_CLASSIFICATION	6.296628901477643E-7	TEST
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9999994310460797	WITHOUT_CLASSIFICATION	5.689539203744294E-7	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999995853466015	WITHOUT_CLASSIFICATION	4.146533985449246E-7	TEST
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999930841846462	WITHOUT_CLASSIFICATION	6.915815353875432E-6	TEST
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999986887680011	WITHOUT_CLASSIFICATION	1.311231998860479E-6	TEST
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999264537701481	WITHOUT_CLASSIFICATION	7.354622985190642E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999477426847456	WITHOUT_CLASSIFICATION	5.225731525446949E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999477426847456	WITHOUT_CLASSIFICATION	5.225731525446949E-5	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999992054102298	WITHOUT_CLASSIFICATION	7.945897702877322E-7	TEST
// line 449	WITHOUT_CLASSIFICATION	0.9999952869180884	WITHOUT_CLASSIFICATION	4.713081911629429E-6	TEST
// line 495	WITHOUT_CLASSIFICATION	0.999995332426255	WITHOUT_CLASSIFICATION	4.66757374489341E-6	TEST
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999985198918806	WITHOUT_CLASSIFICATION	1.480108119470889E-6	TEST
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.999999782788919	WITHOUT_CLASSIFICATION	2.1721108114434424E-7	TEST
/* 14! */	WITHOUT_CLASSIFICATION	0.9999845115718998	WITHOUT_CLASSIFICATION	1.5488428100166686E-5	TEST
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999994181359766	WITHOUT_CLASSIFICATION	5.818640234719324E-7	TEST
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999988209366582	WITHOUT_CLASSIFICATION	1.179063341827175E-6	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999991246302041	WITHOUT_CLASSIFICATION	8.753697958604003E-7	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999991246302041	WITHOUT_CLASSIFICATION	8.753697958604003E-7	TEST
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999997638063023	WITHOUT_CLASSIFICATION	2.3619369759365142E-7	TEST
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999995321183904	WITHOUT_CLASSIFICATION	4.6788160956942324E-7	TEST
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999999965616023	WITHOUT_CLASSIFICATION	3.438397650565802E-9	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999961988372367	WITHOUT_CLASSIFICATION	3.8011627631989793E-6	TEST
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999987544900895	WITHOUT_CLASSIFICATION	1.245509910502145E-6	TEST
/* 18! */	WITHOUT_CLASSIFICATION	0.9999869285711404	WITHOUT_CLASSIFICATION	1.3071428859623548E-5	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999998441125212	WITHOUT_CLASSIFICATION	1.5588747880626614E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999994610724379	WITHOUT_CLASSIFICATION	5.389275621323171E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999994610724379	WITHOUT_CLASSIFICATION	5.389275621323171E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999994610724379	WITHOUT_CLASSIFICATION	5.389275621323171E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999994610724379	WITHOUT_CLASSIFICATION	5.389275621323171E-7	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999983764609213	WITHOUT_CLASSIFICATION	1.6235390787438672E-6	TEST
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999999970636454	WITHOUT_CLASSIFICATION	2.936354564002111E-9	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999571168680143	WITHOUT_CLASSIFICATION	4.2883131985637984E-5	TEST
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999996573235994	WITHOUT_CLASSIFICATION	3.42676400563941E-7	TEST
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999995307798563	WITHOUT_CLASSIFICATION	4.6922014373395125E-7	TEST
/* 22! */	WITHOUT_CLASSIFICATION	0.999985678222368	WITHOUT_CLASSIFICATION	1.432177763211844E-5	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999992421020966	WITHOUT_CLASSIFICATION	7.578979033813135E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999964410200535	WITHOUT_CLASSIFICATION	3.558979946497439E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999964410200535	WITHOUT_CLASSIFICATION	3.558979946497439E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999964410200535	WITHOUT_CLASSIFICATION	3.558979946497439E-6	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.999999109080156	WITHOUT_CLASSIFICATION	8.909198439841123E-7	TEST
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999999242998634	WITHOUT_CLASSIFICATION	7.570013656412369E-8	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999860194442	WITHOUT_CLASSIFICATION	1.3980555865369459E-8	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999860194442	WITHOUT_CLASSIFICATION	1.3980555865369459E-8	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.9999892365182543	WITHOUT_CLASSIFICATION	1.0763481745691509E-5	TEST
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999994334309	WITHOUT_CLASSIFICATION	5.665692119883776E-10	TEST
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999999659906429	WITHOUT_CLASSIFICATION	3.400935721947701E-8	TEST
// BASE64	WITHOUT_CLASSIFICATION	0.9999927011175073	WITHOUT_CLASSIFICATION	7.2988824926879925E-6	TEST
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999997284943279	WITHOUT_CLASSIFICATION	2.7150567209739857E-7	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999965391242801	WITHOUT_CLASSIFICATION	3.4608757198724692E-6	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999994379823486	WITHOUT_CLASSIFICATION	5.620176514462451E-7	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999994379823486	WITHOUT_CLASSIFICATION	5.620176514462451E-7	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999925594939383	WITHOUT_CLASSIFICATION	7.440506061595595E-6	TEST
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999987171258053	WITHOUT_CLASSIFICATION	1.282874194665671E-6	TEST
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999999803250483	WITHOUT_CLASSIFICATION	1.9674951739101514E-8	TEST
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999954773138202	WITHOUT_CLASSIFICATION	4.522686179840914E-6	TEST
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9999797469577476	WITHOUT_CLASSIFICATION	2.0253042252343592E-5	TEST
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.999999777754563	WITHOUT_CLASSIFICATION	2.222454370924488E-7	TEST
// carriage return	WITHOUT_CLASSIFICATION	0.999999665207188	WITHOUT_CLASSIFICATION	3.3479281209108725E-7	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999580344300354	WITHOUT_CLASSIFICATION	4.1965569964587614E-5	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999948373632206	WITHOUT_CLASSIFICATION	5.162636779512296E-6	TEST
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999986605329362	WITHOUT_CLASSIFICATION	1.3394670638374586E-6	TEST
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999999434670759	WITHOUT_CLASSIFICATION	5.653292402488654E-8	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999998084301418	WITHOUT_CLASSIFICATION	1.9156985820420922E-7	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999907783099	WITHOUT_CLASSIFICATION	9.22169010329734E-9	TEST
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999999805301832	WITHOUT_CLASSIFICATION	1.9469816718881616E-8	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999986148279171	WITHOUT_CLASSIFICATION	1.3851720829072719E-6	TEST
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999999162757416	WITHOUT_CLASSIFICATION	8.372425844149592E-8	TEST
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999979433084972	WITHOUT_CLASSIFICATION	2.0566915027214913E-6	TEST
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999999872407686	WITHOUT_CLASSIFICATION	1.2759231531941653E-8	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999999445722233	WITHOUT_CLASSIFICATION	5.542777676053492E-8	TEST
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999999068246166	WITHOUT_CLASSIFICATION	9.317538341385095E-8	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999993608506332	WITHOUT_CLASSIFICATION	6.391493667893442E-7	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999992928699195	WITHOUT_CLASSIFICATION	7.07130080582044E-7	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999829026280365	WITHOUT_CLASSIFICATION	1.7097371963544166E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999829026280365	WITHOUT_CLASSIFICATION	1.7097371963544166E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999829026280365	WITHOUT_CLASSIFICATION	1.7097371963544166E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999829026280365	WITHOUT_CLASSIFICATION	1.7097371963544166E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999829026280365	WITHOUT_CLASSIFICATION	1.7097371963544166E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999829026280365	WITHOUT_CLASSIFICATION	1.7097371963544166E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999829026280365	WITHOUT_CLASSIFICATION	1.7097371963544166E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999829026280365	WITHOUT_CLASSIFICATION	1.7097371963544166E-5	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999997822447603	WITHOUT_CLASSIFICATION	2.1775523979233013E-7	TEST
/* fall through */	WITHOUT_CLASSIFICATION	0.9999926219950285	WITHOUT_CLASSIFICATION	7.378004971606244E-6	TEST
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999993737221451	WITHOUT_CLASSIFICATION	6.262778550335305E-7	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999999514893371	WITHOUT_CLASSIFICATION	4.851066301988339E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999233436928	WITHOUT_CLASSIFICATION	7.665630714869209E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999233436928	WITHOUT_CLASSIFICATION	7.665630714869209E-8	TEST
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.999999918078576	WITHOUT_CLASSIFICATION	8.192142398678242E-8	TEST
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999997284814822	WITHOUT_CLASSIFICATION	2.7151851781456433E-7	TEST
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999956839917432	WITHOUT_CLASSIFICATION	4.316008256753232E-6	TEST
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999998162690911	WITHOUT_CLASSIFICATION	1.837309089817277E-7	TEST
// get current context	WITHOUT_CLASSIFICATION	0.9999991472033014	WITHOUT_CLASSIFICATION	8.527966987318296E-7	TEST
// octal constant	WITHOUT_CLASSIFICATION	0.9999994131608857	WITHOUT_CLASSIFICATION	5.86839114241155E-7	TEST
// read	WITHOUT_CLASSIFICATION	0.999998201325908	WITHOUT_CLASSIFICATION	1.7986740919401407E-6	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999889879829071	WITHOUT_CLASSIFICATION	1.1012017092917646E-5	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999991117308905	WITHOUT_CLASSIFICATION	8.882691095878362E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999996273881935	WITHOUT_CLASSIFICATION	3.726118064779268E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999996273881935	WITHOUT_CLASSIFICATION	3.726118064779268E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999996273881935	WITHOUT_CLASSIFICATION	3.726118064779268E-7	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999809082043561	WITHOUT_CLASSIFICATION	1.909179564382078E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999809082043561	WITHOUT_CLASSIFICATION	1.909179564382078E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999809082043561	WITHOUT_CLASSIFICATION	1.909179564382078E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999809082043561	WITHOUT_CLASSIFICATION	1.909179564382078E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999809082043561	WITHOUT_CLASSIFICATION	1.909179564382078E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999809082043561	WITHOUT_CLASSIFICATION	1.909179564382078E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999809082043561	WITHOUT_CLASSIFICATION	1.909179564382078E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999809082043561	WITHOUT_CLASSIFICATION	1.909179564382078E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999809082043561	WITHOUT_CLASSIFICATION	1.909179564382078E-5	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999997773998209	WITHOUT_CLASSIFICATION	2.226001791174274E-7	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999985202197633	WITHOUT_CLASSIFICATION	1.4797802366144143E-6	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999976515794853	WITHOUT_CLASSIFICATION	2.3484205146806794E-6	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999990248119556	WITHOUT_CLASSIFICATION	9.751880444452183E-7	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999809082043561	WITHOUT_CLASSIFICATION	1.909179564382078E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999809082043561	WITHOUT_CLASSIFICATION	1.909179564382078E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999809082043561	WITHOUT_CLASSIFICATION	1.909179564382078E-5	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999992407742236	WITHOUT_CLASSIFICATION	7.592257764486291E-7	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999948235298445	WITHOUT_CLASSIFICATION	5.176470155446489E-6	TEST
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999996325662397	WITHOUT_CLASSIFICATION	3.6743376025719317E-7	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999973384735618	WITHOUT_CLASSIFICATION	2.6615264381515997E-6	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999973384735618	WITHOUT_CLASSIFICATION	2.6615264381515997E-6	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999985409148993	WITHOUT_CLASSIFICATION	1.4590851007197193E-6	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999991993144556	WITHOUT_CLASSIFICATION	8.006855443119963E-7	TEST
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999999879464034	WITHOUT_CLASSIFICATION	1.20535966705957E-8	TEST
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999999792841362	WITHOUT_CLASSIFICATION	2.0715863874960147E-8	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999985128591401	WITHOUT_CLASSIFICATION	1.4871408599049291E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999985128591401	WITHOUT_CLASSIFICATION	1.4871408599049291E-6	TEST
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999964711652063	WITHOUT_CLASSIFICATION	3.52883479368314E-6	TEST
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999999809078285	WITHOUT_CLASSIFICATION	1.909217144548405E-8	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999980034519395	WITHOUT_CLASSIFICATION	1.996548060606546E-6	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.999956125020407	WITHOUT_CLASSIFICATION	4.3874979593017224E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.999956125020407	WITHOUT_CLASSIFICATION	4.3874979593017224E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.999956125020407	WITHOUT_CLASSIFICATION	4.3874979593017224E-5	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999982211139169	WITHOUT_CLASSIFICATION	1.7788860831175778E-6	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999974729330645	WITHOUT_CLASSIFICATION	2.527066935370982E-6	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999974729330645	WITHOUT_CLASSIFICATION	2.527066935370982E-6	TEST
// check arity	WITHOUT_CLASSIFICATION	0.9999993784182247	WITHOUT_CLASSIFICATION	6.215817752389555E-7	TEST
// check arity	WITHOUT_CLASSIFICATION	0.9999993784182247	WITHOUT_CLASSIFICATION	6.215817752389555E-7	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999995683731744	WITHOUT_CLASSIFICATION	4.316268255692278E-7	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999434607136	WITHOUT_CLASSIFICATION	5.6539286324671606E-8	TEST
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999721322427085	WITHOUT_CLASSIFICATION	2.786775729144368E-5	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999857758531051	WITHOUT_CLASSIFICATION	1.4224146894817065E-5	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999945409568176	WITHOUT_CLASSIFICATION	5.459043182395108E-6	TEST
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999998989399695	WITHOUT_CLASSIFICATION	1.0106003045571205E-7	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.99999992917667	WITHOUT_CLASSIFICATION	7.082332987859181E-8	TEST
// block	WITHOUT_CLASSIFICATION	0.9999959557694422	WITHOUT_CLASSIFICATION	4.044230557719443E-6	TEST
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.999999451304834	WITHOUT_CLASSIFICATION	5.486951659882995E-7	TEST
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999813275461	WITHOUT_CLASSIFICATION	1.8672453917455808E-8	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999114948480926	WITHOUT_CLASSIFICATION	8.850515190748315E-5	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999991460863752	WITHOUT_CLASSIFICATION	8.539136247788692E-7	TEST
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999952767477801	WITHOUT_CLASSIFICATION	4.723252219837913E-6	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999999794490252	WITHOUT_CLASSIFICATION	2.0550974883075875E-8	TEST
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999999167388058	WITHOUT_CLASSIFICATION	8.326119413275449E-8	TEST
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999990572517272	WITHOUT_CLASSIFICATION	9.427482728208639E-7	TEST
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.999999980510383	WITHOUT_CLASSIFICATION	1.9489616946327057E-8	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.999999830193974	WITHOUT_CLASSIFICATION	1.6980602590292152E-7	TEST
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999997510366143	WITHOUT_CLASSIFICATION	2.4896338572701994E-7	TEST
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.999999268003733	WITHOUT_CLASSIFICATION	7.319962670791243E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999744010133	WITHOUT_CLASSIFICATION	2.5598986723311158E-8	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9999475934887695	WITHOUT_CLASSIFICATION	5.24065112305887E-5	TEST
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999992861348392	WITHOUT_CLASSIFICATION	7.138651608148626E-7	TEST
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999988354875657	WITHOUT_CLASSIFICATION	1.164512434241054E-6	TEST
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999998163933038	WITHOUT_CLASSIFICATION	1.8360669618121486E-7	TEST
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.999977840176106	WITHOUT_CLASSIFICATION	2.2159823894008602E-5	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999970018891525	WITHOUT_CLASSIFICATION	2.998110847452064E-6	TEST
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.999999957986149	WITHOUT_CLASSIFICATION	4.2013850942632454E-8	TEST
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.999999023342828	WITHOUT_CLASSIFICATION	9.7665717195208E-7	TEST
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999999519187944	WITHOUT_CLASSIFICATION	4.8081205622456264E-8	TEST
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999975978421509	WITHOUT_CLASSIFICATION	2.4021578491064262E-6	TEST
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999995088932725	WITHOUT_CLASSIFICATION	4.911067275694553E-7	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999998080254482	WITHOUT_CLASSIFICATION	1.9197455179562864E-7	TEST
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999995024353618	WITHOUT_CLASSIFICATION	4.97564638069508E-7	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999995139143822	WITHOUT_CLASSIFICATION	4.860856178090403E-7	TEST
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999999750693959	WITHOUT_CLASSIFICATION	2.4930604151733478E-8	TEST
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999992260851754	WITHOUT_CLASSIFICATION	7.739148245009032E-7	TEST
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999994215875113	WITHOUT_CLASSIFICATION	5.784124887684861E-7	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999996120099934	WITHOUT_CLASSIFICATION	3.8799000659828403E-7	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999379323615	WITHOUT_CLASSIFICATION	6.206763852692978E-8	TEST
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999999734594788	WITHOUT_CLASSIFICATION	2.654052120608815E-8	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999896699761723	WITHOUT_CLASSIFICATION	1.0330023827629363E-5	TEST
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999997266675079	WITHOUT_CLASSIFICATION	2.7333249213442774E-7	TEST
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999978795705468	WITHOUT_CLASSIFICATION	2.1204294532133855E-6	TEST
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999997791738289	WITHOUT_CLASSIFICATION	2.2082617107666046E-7	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999997220447588	WITHOUT_CLASSIFICATION	2.779552411541247E-7	TEST
// specific arity	WITHOUT_CLASSIFICATION	0.999999454203422	WITHOUT_CLASSIFICATION	5.45796578051323E-7	TEST
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999993131472948	WITHOUT_CLASSIFICATION	6.868527052584832E-7	TEST
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999993013318136	WITHOUT_CLASSIFICATION	6.986681864726955E-7	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999859014829628	WITHOUT_CLASSIFICATION	1.4098517037063379E-5	TEST
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999999504998844	WITHOUT_CLASSIFICATION	4.9500115530680535E-8	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999990029889005	WITHOUT_CLASSIFICATION	9.970110994391668E-7	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999990029889005	WITHOUT_CLASSIFICATION	9.970110994391668E-7	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999998177458751	WITHOUT_CLASSIFICATION	1.8225412500043468E-7	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999998177458751	WITHOUT_CLASSIFICATION	1.8225412500043468E-7	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999758822618796	WITHOUT_CLASSIFICATION	2.411773812037009E-5	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999758822618796	WITHOUT_CLASSIFICATION	2.411773812037009E-5	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999950318437422	WITHOUT_CLASSIFICATION	4.968156257823108E-6	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999950318437422	WITHOUT_CLASSIFICATION	4.968156257823108E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999991431600509	WITHOUT_CLASSIFICATION	8.568399491504305E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999991431600509	WITHOUT_CLASSIFICATION	8.568399491504305E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999991431600509	WITHOUT_CLASSIFICATION	8.568399491504305E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999991431600509	WITHOUT_CLASSIFICATION	8.568399491504305E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999991431600509	WITHOUT_CLASSIFICATION	8.568399491504305E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999991431600509	WITHOUT_CLASSIFICATION	8.568399491504305E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999991431600509	WITHOUT_CLASSIFICATION	8.568399491504305E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999991431600509	WITHOUT_CLASSIFICATION	8.568399491504305E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999991431600509	WITHOUT_CLASSIFICATION	8.568399491504305E-7	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.999998356180244	WITHOUT_CLASSIFICATION	1.6438197559559752E-6	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.999998356180244	WITHOUT_CLASSIFICATION	1.6438197559559752E-6	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.999998356180244	WITHOUT_CLASSIFICATION	1.6438197559559752E-6	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999996651602705	WITHOUT_CLASSIFICATION	3.3483972945819837E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999998504844188	WITHOUT_CLASSIFICATION	1.4951558120579768E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999998504844188	WITHOUT_CLASSIFICATION	1.4951558120579768E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999998504844188	WITHOUT_CLASSIFICATION	1.4951558120579768E-6	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999994138207691	WITHOUT_CLASSIFICATION	5.861792309350076E-7	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999994138207691	WITHOUT_CLASSIFICATION	5.861792309350076E-7	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999994138207691	WITHOUT_CLASSIFICATION	5.861792309350076E-7	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999716602826865	WITHOUT_CLASSIFICATION	2.833971731363979E-5	TEST
// backspace	WITHOUT_CLASSIFICATION	0.999998205916307	WITHOUT_CLASSIFICATION	1.7940836929944375E-6	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999872656324076	WITHOUT_CLASSIFICATION	1.273436759240677E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999862465530059	WITHOUT_CLASSIFICATION	1.3753446994003186E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999862465530059	WITHOUT_CLASSIFICATION	1.3753446994003186E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999862465530059	WITHOUT_CLASSIFICATION	1.3753446994003186E-5	TEST
/* package-private */	WITHOUT_CLASSIFICATION	0.9999981261663297	WITHOUT_CLASSIFICATION	1.8738336702598167E-6	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999953473068548	WITHOUT_CLASSIFICATION	4.652693145169439E-6	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999953473068548	WITHOUT_CLASSIFICATION	4.652693145169439E-6	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999981266632272	WITHOUT_CLASSIFICATION	1.8733367728066412E-6	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999997528698561	WITHOUT_CLASSIFICATION	2.471301439095318E-7	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999997528698561	WITHOUT_CLASSIFICATION	2.471301439095318E-7	TEST
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9979785612340664	WITHOUT_CLASSIFICATION	0.0020214387659337188	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999994117801108	WITHOUT_CLASSIFICATION	5.88219889262019E-7	TEST
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999991404832617	WITHOUT_CLASSIFICATION	8.595167384119254E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999955127853457	WITHOUT_CLASSIFICATION	4.487214654258387E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999955127853457	WITHOUT_CLASSIFICATION	4.487214654258387E-6	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999975855479339	WITHOUT_CLASSIFICATION	2.4144520660293297E-6	TEST
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999832432299246	WITHOUT_CLASSIFICATION	1.675677007539568E-5	TEST
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999998041885951	WITHOUT_CLASSIFICATION	1.9581140484646834E-7	TEST
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999999713041572	WITHOUT_CLASSIFICATION	2.8695842812890012E-8	TEST
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999998338618928	WITHOUT_CLASSIFICATION	1.6613810702441527E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999955127853457	WITHOUT_CLASSIFICATION	4.487214654258387E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999955127853457	WITHOUT_CLASSIFICATION	4.487214654258387E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999955127853457	WITHOUT_CLASSIFICATION	4.487214654258387E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999955127853457	WITHOUT_CLASSIFICATION	4.487214654258387E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999955127853457	WITHOUT_CLASSIFICATION	4.487214654258387E-6	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.999996859198471	WITHOUT_CLASSIFICATION	3.1408015289870357E-6	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999932357800341	WITHOUT_CLASSIFICATION	6.764219965974955E-6	TEST
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999999891771574	WITHOUT_CLASSIFICATION	1.082284274076774E-8	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999914565319207	WITHOUT_CLASSIFICATION	8.543468079381E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999993242646718	WITHOUT_CLASSIFICATION	6.757353282468117E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999993242646718	WITHOUT_CLASSIFICATION	6.757353282468117E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999993242646718	WITHOUT_CLASSIFICATION	6.757353282468117E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999993242646718	WITHOUT_CLASSIFICATION	6.757353282468117E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999993242646718	WITHOUT_CLASSIFICATION	6.757353282468117E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999993242646718	WITHOUT_CLASSIFICATION	6.757353282468117E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999993242646718	WITHOUT_CLASSIFICATION	6.757353282468117E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999993242646718	WITHOUT_CLASSIFICATION	6.757353282468117E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999993242646718	WITHOUT_CLASSIFICATION	6.757353282468117E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999993242646718	WITHOUT_CLASSIFICATION	6.757353282468117E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999993242646718	WITHOUT_CLASSIFICATION	6.757353282468117E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999993242646718	WITHOUT_CLASSIFICATION	6.757353282468117E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999993242646718	WITHOUT_CLASSIFICATION	6.757353282468117E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999993242646718	WITHOUT_CLASSIFICATION	6.757353282468117E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999993242646718	WITHOUT_CLASSIFICATION	6.757353282468117E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999993242646718	WITHOUT_CLASSIFICATION	6.757353282468117E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999993242646718	WITHOUT_CLASSIFICATION	6.757353282468117E-7	TEST
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999998669225988	WITHOUT_CLASSIFICATION	1.3307740112148426E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999993242646718	WITHOUT_CLASSIFICATION	6.757353282468117E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999993242646718	WITHOUT_CLASSIFICATION	6.757353282468117E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999993242646718	WITHOUT_CLASSIFICATION	6.757353282468117E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999993242646718	WITHOUT_CLASSIFICATION	6.757353282468117E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999993242646718	WITHOUT_CLASSIFICATION	6.757353282468117E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999993242646718	WITHOUT_CLASSIFICATION	6.757353282468117E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999993242646718	WITHOUT_CLASSIFICATION	6.757353282468117E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999993242646718	WITHOUT_CLASSIFICATION	6.757353282468117E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999993242646718	WITHOUT_CLASSIFICATION	6.757353282468117E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999993242646718	WITHOUT_CLASSIFICATION	6.757353282468117E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999993242646718	WITHOUT_CLASSIFICATION	6.757353282468117E-7	TEST
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999995880475945	WITHOUT_CLASSIFICATION	4.1195240553161495E-7	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999988314699574	WITHOUT_CLASSIFICATION	1.1685300426034418E-6	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999997538959984	WITHOUT_CLASSIFICATION	2.46104001599144E-7	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999951663961621	WITHOUT_CLASSIFICATION	4.833603837856841E-6	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999998296290216	WITHOUT_CLASSIFICATION	1.7037097839220993E-7	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999996468217246	WITHOUT_CLASSIFICATION	3.5317827529513193E-7	TEST
// only public methods	WITHOUT_CLASSIFICATION	0.9999996717580552	WITHOUT_CLASSIFICATION	3.282419448379477E-7	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999941504677459	WITHOUT_CLASSIFICATION	5.8495322540995145E-6	TEST
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999902741256289	WITHOUT_CLASSIFICATION	9.725874371112558E-6	TEST
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9999999989914843	WITHOUT_CLASSIFICATION	1.0085156843094058E-9	TEST
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.999999858984347	WITHOUT_CLASSIFICATION	1.4101565291377478E-7	TEST
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999999991438532	WITHOUT_CLASSIFICATION	8.561467665332911E-10	TEST
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999994376874478	WITHOUT_CLASSIFICATION	5.623125522118823E-7	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999990369001993	WITHOUT_CLASSIFICATION	9.630998007362117E-7	TEST
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999985049760133	WITHOUT_CLASSIFICATION	1.4950239866892318E-6	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999926087705897	WITHOUT_CLASSIFICATION	7.391229410401594E-6	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.99999999877016	WITHOUT_CLASSIFICATION	1.2298399123619158E-9	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999997264271845	WITHOUT_CLASSIFICATION	2.7357281543086414E-7	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999997264271845	WITHOUT_CLASSIFICATION	2.7357281543086414E-7	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999997264271845	WITHOUT_CLASSIFICATION	2.7357281543086414E-7	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999997264271845	WITHOUT_CLASSIFICATION	2.7357281543086414E-7	TEST
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.999999902953952	WITHOUT_CLASSIFICATION	9.704604793003891E-8	TEST
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999999916246602	WITHOUT_CLASSIFICATION	8.375339752218037E-9	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999994244268817	WITHOUT_CLASSIFICATION	5.755731183807798E-7	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999994244268817	WITHOUT_CLASSIFICATION	5.755731183807798E-7	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999996062645474	WITHOUT_CLASSIFICATION	3.937354525946944E-7	TEST
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999954899299429	WITHOUT_CLASSIFICATION	4.510070057075874E-6	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999980240988173	WITHOUT_CLASSIFICATION	1.9759011825692805E-6	TEST
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999996598655724	WITHOUT_CLASSIFICATION	3.401344277390227E-7	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999998851490686	WITHOUT_CLASSIFICATION	1.1485093134956233E-7	TEST
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999991687286721	WITHOUT_CLASSIFICATION	8.312713280314746E-7	TEST
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999976887597067	WITHOUT_CLASSIFICATION	2.3112402931787197E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999977119026284	WITHOUT_CLASSIFICATION	2.2880973716059374E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999977119026284	WITHOUT_CLASSIFICATION	2.2880973716059374E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999977119026284	WITHOUT_CLASSIFICATION	2.2880973716059374E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999977119026284	WITHOUT_CLASSIFICATION	2.2880973716059374E-6	TEST
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999999680497356	WITHOUT_CLASSIFICATION	3.195026443084041E-8	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999998249065261	WITHOUT_CLASSIFICATION	1.7509347398849998E-7	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999998249065261	WITHOUT_CLASSIFICATION	1.7509347398849998E-7	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999998249065261	WITHOUT_CLASSIFICATION	1.7509347398849998E-7	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999968746691175	WITHOUT_CLASSIFICATION	3.1253308824941874E-6	TEST
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999993232737099	WITHOUT_CLASSIFICATION	6.767262901241237E-7	TEST
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999826066929689	WITHOUT_CLASSIFICATION	1.739330703105631E-5	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9986789099134804	WITHOUT_CLASSIFICATION	0.0013210900865195517	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9986789099134804	WITHOUT_CLASSIFICATION	0.0013210900865195517	TEST
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999999867500646	WITHOUT_CLASSIFICATION	1.3249935295898788E-8	TEST
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999998228938728	WITHOUT_CLASSIFICATION	1.7710612714495382E-7	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.9999991480136435	WITHOUT_CLASSIFICATION	8.519863566123265E-7	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.9999991480136435	WITHOUT_CLASSIFICATION	8.519863566123265E-7	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999995008567791	WITHOUT_CLASSIFICATION	4.99143220888601E-7	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999995008567791	WITHOUT_CLASSIFICATION	4.99143220888601E-7	TEST
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999996094238409	WITHOUT_CLASSIFICATION	3.9057615907842624E-7	TEST
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999986740852846	WITHOUT_CLASSIFICATION	1.3259147153640774E-6	TEST
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999943201525678	WITHOUT_CLASSIFICATION	5.679847432148687E-6	TEST
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999999157846235	WITHOUT_CLASSIFICATION	8.421537653106323E-8	TEST
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999976581623935	WITHOUT_CLASSIFICATION	2.3418376065046666E-5	TEST
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999988235320895	WITHOUT_CLASSIFICATION	1.1764679105336688E-6	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999963077111765	WITHOUT_CLASSIFICATION	3.6922888235312815E-6	TEST
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999999404268295	WITHOUT_CLASSIFICATION	5.957317059884079E-8	TEST
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999985996040768	WITHOUT_CLASSIFICATION	1.4003959233217545E-6	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.999999348211916	WITHOUT_CLASSIFICATION	6.517880840437804E-7	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.999999348211916	WITHOUT_CLASSIFICATION	6.517880840437804E-7	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999986127527961	WITHOUT_CLASSIFICATION	1.3872472038425471E-6	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999986127527961	WITHOUT_CLASSIFICATION	1.3872472038425471E-6	TEST
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999977739049446	WITHOUT_CLASSIFICATION	2.2260950554110783E-6	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999962181329498	WITHOUT_CLASSIFICATION	3.7818670501538706E-6	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999871666646918	WITHOUT_CLASSIFICATION	1.2833335308305021E-5	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999986887513832	WITHOUT_CLASSIFICATION	1.3112486167910403E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999986887513832	WITHOUT_CLASSIFICATION	1.3112486167910403E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999986887513832	WITHOUT_CLASSIFICATION	1.3112486167910403E-6	TEST
// line 286	WITHOUT_CLASSIFICATION	0.9999961428448407	WITHOUT_CLASSIFICATION	3.857155159236253E-6	TEST
// line 476	WITHOUT_CLASSIFICATION	0.9999952523544984	WITHOUT_CLASSIFICATION	4.747645501682594E-6	TEST
// line 513	WITHOUT_CLASSIFICATION	0.9999958908246973	WITHOUT_CLASSIFICATION	4.109175302654335E-6	TEST
// line 530	WITHOUT_CLASSIFICATION	0.9999959373502681	WITHOUT_CLASSIFICATION	4.062649731881537E-6	TEST
// line 533	WITHOUT_CLASSIFICATION	0.9999953881207289	WITHOUT_CLASSIFICATION	4.611879271156698E-6	TEST
// line 537	WITHOUT_CLASSIFICATION	0.999995490668041	WITHOUT_CLASSIFICATION	4.5093319589527895E-6	TEST
// line 551	WITHOUT_CLASSIFICATION	0.9999946780069086	WITHOUT_CLASSIFICATION	5.32199309152313E-6	TEST
// end loop	WITHOUT_CLASSIFICATION	0.9999968085249267	WITHOUT_CLASSIFICATION	3.19147507343718E-6	TEST
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999994946803934	WITHOUT_CLASSIFICATION	5.053196064888444E-7	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999999693353815	WITHOUT_CLASSIFICATION	3.066461849719867E-8	TEST
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9999998185705389	WITHOUT_CLASSIFICATION	1.8142946110213577E-7	TEST
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999993139703806	WITHOUT_CLASSIFICATION	6.86029619460456E-7	TEST
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.999998108289057	WITHOUT_CLASSIFICATION	1.8917109429243672E-6	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9986789099134804	WITHOUT_CLASSIFICATION	0.0013210900865195517	TEST
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.999999455519226	WITHOUT_CLASSIFICATION	5.444807739504657E-7	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999962133841553	WITHOUT_CLASSIFICATION	3.7866158446758397E-6	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999992070604189	WITHOUT_CLASSIFICATION	7.929395810875675E-7	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.99996583152836	WITHOUT_CLASSIFICATION	3.416847163997316E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.99996583152836	WITHOUT_CLASSIFICATION	3.416847163997316E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.99996583152836	WITHOUT_CLASSIFICATION	3.416847163997316E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.99996583152836	WITHOUT_CLASSIFICATION	3.416847163997316E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.99996583152836	WITHOUT_CLASSIFICATION	3.416847163997316E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999512669625804	WITHOUT_CLASSIFICATION	4.873303741951106E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.99996583152836	WITHOUT_CLASSIFICATION	3.416847163997316E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.99996583152836	WITHOUT_CLASSIFICATION	3.416847163997316E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.99996583152836	WITHOUT_CLASSIFICATION	3.416847163997316E-5	TEST
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999998974970021	WITHOUT_CLASSIFICATION	1.025029978729877E-7	TEST
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999969889244229	WITHOUT_CLASSIFICATION	3.011075577053373E-6	TEST
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999998117609644	WITHOUT_CLASSIFICATION	1.8823903552931795E-7	TEST
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999952720773314	WITHOUT_CLASSIFICATION	4.727922668649758E-6	TEST
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999994062197436	WITHOUT_CLASSIFICATION	5.937802563698432E-7	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.999997150711359	WITHOUT_CLASSIFICATION	2.8492886409877224E-6	TEST
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999999761483953	WITHOUT_CLASSIFICATION	2.385160464356938E-8	TEST
// line 572	WITHOUT_CLASSIFICATION	0.9999956219893151	WITHOUT_CLASSIFICATION	4.378010684879729E-6	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999953423876471	WITHOUT_CLASSIFICATION	4.657612352866696E-6	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999953423876471	WITHOUT_CLASSIFICATION	4.657612352866696E-6	TEST
// line 625	WITHOUT_CLASSIFICATION	0.9999955617534123	WITHOUT_CLASSIFICATION	4.4382465877563E-6	TEST
// line 649	WITHOUT_CLASSIFICATION	0.9999953340166801	WITHOUT_CLASSIFICATION	4.6659833199749875E-6	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999948661867167	WITHOUT_CLASSIFICATION	5.133813283243036E-6	TEST
// line 723	WITHOUT_CLASSIFICATION	0.9999958754468888	WITHOUT_CLASSIFICATION	4.124553111201273E-6	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999958855660465	WITHOUT_CLASSIFICATION	4.114433953633754E-6	TEST
// line 745	WITHOUT_CLASSIFICATION	0.9999952187980025	WITHOUT_CLASSIFICATION	4.781201997599042E-6	TEST
// line 766	WITHOUT_CLASSIFICATION	0.9999950315558281	WITHOUT_CLASSIFICATION	4.9684441719499966E-6	TEST
// line 785	WITHOUT_CLASSIFICATION	0.999995593786705	WITHOUT_CLASSIFICATION	4.406213295003053E-6	TEST
// line 794	WITHOUT_CLASSIFICATION	0.999995281659264	WITHOUT_CLASSIFICATION	4.7183407360321E-6	TEST
// line 800	WITHOUT_CLASSIFICATION	0.9999961758756474	WITHOUT_CLASSIFICATION	3.8241243526018675E-6	TEST
// line 812	WITHOUT_CLASSIFICATION	0.9999963738216273	WITHOUT_CLASSIFICATION	3.6261783727420657E-6	TEST
// line 827	WITHOUT_CLASSIFICATION	0.9999960420765501	WITHOUT_CLASSIFICATION	3.957923449841157E-6	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999959126711154	WITHOUT_CLASSIFICATION	4.087328884523882E-6	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999956400741813	WITHOUT_CLASSIFICATION	4.359925818737117E-6	TEST
// line 864	WITHOUT_CLASSIFICATION	0.9999956397816973	WITHOUT_CLASSIFICATION	4.3602183027134405E-6	TEST
// line 886	WITHOUT_CLASSIFICATION	0.9999954645599034	WITHOUT_CLASSIFICATION	4.53544009654633E-6	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999956368374352	WITHOUT_CLASSIFICATION	4.36316256479478E-6	TEST
// line 911	WITHOUT_CLASSIFICATION	0.9999948009782799	WITHOUT_CLASSIFICATION	5.199021720211942E-6	TEST
// line 929	WITHOUT_CLASSIFICATION	0.9999955124300318	WITHOUT_CLASSIFICATION	4.487569968209648E-6	TEST
// line 952	WITHOUT_CLASSIFICATION	0.9999956514455925	WITHOUT_CLASSIFICATION	4.348554407409971E-6	TEST
// line 970	WITHOUT_CLASSIFICATION	0.9999957533498588	WITHOUT_CLASSIFICATION	4.24665014110343E-6	TEST
// line 972	WITHOUT_CLASSIFICATION	0.999995710935918	WITHOUT_CLASSIFICATION	4.28906408210042E-6	TEST
// line 991	WITHOUT_CLASSIFICATION	0.9999947362258407	WITHOUT_CLASSIFICATION	5.263774159367955E-6	TEST
// line 1011	WITHOUT_CLASSIFICATION	0.9999950218100637	WITHOUT_CLASSIFICATION	4.9781899363178745E-6	TEST
// line 1026	WITHOUT_CLASSIFICATION	0.9999962307511272	WITHOUT_CLASSIFICATION	3.769248872871532E-6	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999965210701572	WITHOUT_CLASSIFICATION	3.4789298427743193E-6	TEST
// line 1067	WITHOUT_CLASSIFICATION	0.9999959237595993	WITHOUT_CLASSIFICATION	4.076240400674097E-6	TEST
// line 1085	WITHOUT_CLASSIFICATION	0.9999962377860133	WITHOUT_CLASSIFICATION	3.7622139866011586E-6	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999960238970608	WITHOUT_CLASSIFICATION	3.976102939201266E-6	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999958210218882	WITHOUT_CLASSIFICATION	4.1789781117818834E-6	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999956028581247	WITHOUT_CLASSIFICATION	4.397141875293058E-6	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999955052520505	WITHOUT_CLASSIFICATION	4.494747949505722E-6	TEST
// line 1145	WITHOUT_CLASSIFICATION	0.9999953511562334	WITHOUT_CLASSIFICATION	4.648843766678018E-6	TEST
// line 1169	WITHOUT_CLASSIFICATION	0.9999953470815807	WITHOUT_CLASSIFICATION	4.652918419300657E-6	TEST
// line 1201	WITHOUT_CLASSIFICATION	0.9999954157442669	WITHOUT_CLASSIFICATION	4.584255733150062E-6	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999961687736618	WITHOUT_CLASSIFICATION	3.831226338262697E-6	TEST
// line 1229	WITHOUT_CLASSIFICATION	0.9999956780085913	WITHOUT_CLASSIFICATION	4.321991408642008E-6	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999948114610924	WITHOUT_CLASSIFICATION	5.188538907609246E-6	TEST
// line 1287	WITHOUT_CLASSIFICATION	0.9999961606901986	WITHOUT_CLASSIFICATION	3.839309801454508E-6	TEST
// line 1293	WITHOUT_CLASSIFICATION	0.9999960931642409	WITHOUT_CLASSIFICATION	3.90683575918297E-6	TEST
// line 1307	WITHOUT_CLASSIFICATION	0.9999961013619442	WITHOUT_CLASSIFICATION	3.898638055832705E-6	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999964390197358	WITHOUT_CLASSIFICATION	3.5609802642652978E-6	TEST
// line 1325	WITHOUT_CLASSIFICATION	0.9999959735118243	WITHOUT_CLASSIFICATION	4.026488175700738E-6	TEST
// line 1363	WITHOUT_CLASSIFICATION	0.9999955226856344	WITHOUT_CLASSIFICATION	4.477314365531729E-6	TEST
// line 1398	WITHOUT_CLASSIFICATION	0.999996038797728	WITHOUT_CLASSIFICATION	3.961202271920513E-6	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999957312315075	WITHOUT_CLASSIFICATION	4.268768492459911E-6	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999954570634186	WITHOUT_CLASSIFICATION	4.542936581320395E-6	TEST
// line 1473	WITHOUT_CLASSIFICATION	0.9999957272188151	WITHOUT_CLASSIFICATION	4.272781184846701E-6	TEST
// line 1492	WITHOUT_CLASSIFICATION	0.9999959470633834	WITHOUT_CLASSIFICATION	4.052936616647835E-6	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.999995515772797	WITHOUT_CLASSIFICATION	4.484227203031997E-6	TEST
// line 1523	WITHOUT_CLASSIFICATION	0.9999960006686652	WITHOUT_CLASSIFICATION	3.999331334746701E-6	TEST
// line 1562	WITHOUT_CLASSIFICATION	0.9999957846710796	WITHOUT_CLASSIFICATION	4.215328920311547E-6	TEST
// line 1582	WITHOUT_CLASSIFICATION	0.99999621443554	WITHOUT_CLASSIFICATION	3.785564460109309E-6	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999960495282649	WITHOUT_CLASSIFICATION	3.950471735006583E-6	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999960495282649	WITHOUT_CLASSIFICATION	3.950471735006583E-6	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999951815017661	WITHOUT_CLASSIFICATION	4.818498233874226E-6	TEST
// line 1620	WITHOUT_CLASSIFICATION	0.9999962109133685	WITHOUT_CLASSIFICATION	3.789086631458976E-6	TEST
// line 1635	WITHOUT_CLASSIFICATION	0.9999955765826547	WITHOUT_CLASSIFICATION	4.4234173452277345E-6	TEST
// line 1652	WITHOUT_CLASSIFICATION	0.9999957698579179	WITHOUT_CLASSIFICATION	4.230142081975433E-6	TEST
// line 1681	WITHOUT_CLASSIFICATION	0.9999948669395595	WITHOUT_CLASSIFICATION	5.133060440474795E-6	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999961672341264	WITHOUT_CLASSIFICATION	3.832765873511669E-6	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.999995226871162	WITHOUT_CLASSIFICATION	4.773128837965282E-6	TEST
// line 1755	WITHOUT_CLASSIFICATION	0.9999951897279848	WITHOUT_CLASSIFICATION	4.810272015159169E-6	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999956581353765	WITHOUT_CLASSIFICATION	4.341864623491362E-6	TEST
// line 1789	WITHOUT_CLASSIFICATION	0.9999958321276481	WITHOUT_CLASSIFICATION	4.167872351832845E-6	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999874299875661	WITHOUT_CLASSIFICATION	1.25700124340095E-5	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999874299875661	WITHOUT_CLASSIFICATION	1.25700124340095E-5	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999948593161884	WITHOUT_CLASSIFICATION	5.140683811670871E-6	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999993871775907	WITHOUT_CLASSIFICATION	6.128224093275898E-7	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999995699808387	WITHOUT_CLASSIFICATION	4.300191612319768E-7	TEST
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999999800910165	WITHOUT_CLASSIFICATION	1.990898347982291E-8	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999994752676907	WITHOUT_CLASSIFICATION	5.247323092173336E-7	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999994752676907	WITHOUT_CLASSIFICATION	5.247323092173336E-7	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999994752676907	WITHOUT_CLASSIFICATION	5.247323092173336E-7	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999994752676907	WITHOUT_CLASSIFICATION	5.247323092173336E-7	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9994846782011297	WITHOUT_CLASSIFICATION	5.153217988702493E-4	TEST
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999953268733474	WITHOUT_CLASSIFICATION	4.673126652689685E-6	TEST
// line 313	WITHOUT_CLASSIFICATION	0.9999959556105985	WITHOUT_CLASSIFICATION	4.044389401449192E-6	TEST
// line 339	WITHOUT_CLASSIFICATION	0.9999956135395429	WITHOUT_CLASSIFICATION	4.386460457170955E-6	TEST
// line 361	WITHOUT_CLASSIFICATION	0.999995336892153	WITHOUT_CLASSIFICATION	4.663107846997435E-6	TEST
// line 413	WITHOUT_CLASSIFICATION	0.999995965389095	WITHOUT_CLASSIFICATION	4.034610905041216E-6	TEST
// line 451	WITHOUT_CLASSIFICATION	0.9999949087985766	WITHOUT_CLASSIFICATION	5.091201423452893E-6	TEST
// line 472	WITHOUT_CLASSIFICATION	0.9999956987499806	WITHOUT_CLASSIFICATION	4.301250019389475E-6	TEST
// line 500	WITHOUT_CLASSIFICATION	0.9999957624786692	WITHOUT_CLASSIFICATION	4.237521330778678E-6	TEST
// line 515	WITHOUT_CLASSIFICATION	0.9999954739633076	WITHOUT_CLASSIFICATION	4.526036692451582E-6	TEST
// line 555	WITHOUT_CLASSIFICATION	0.9999948595594006	WITHOUT_CLASSIFICATION	5.1404405994992255E-6	TEST
// line 582	WITHOUT_CLASSIFICATION	0.9999960754785961	WITHOUT_CLASSIFICATION	3.924521403826226E-6	TEST
// line 619	WITHOUT_CLASSIFICATION	0.9999957008843147	WITHOUT_CLASSIFICATION	4.2991156852863785E-6	TEST
// line 636	WITHOUT_CLASSIFICATION	0.9999953515555027	WITHOUT_CLASSIFICATION	4.6484444973293435E-6	TEST
// line 669	WITHOUT_CLASSIFICATION	0.999995076583186	WITHOUT_CLASSIFICATION	4.923416813959281E-6	TEST
// line 703	WITHOUT_CLASSIFICATION	0.9999959363112021	WITHOUT_CLASSIFICATION	4.063688797938721E-6	TEST
// line 776	WITHOUT_CLASSIFICATION	0.9999950294067659	WITHOUT_CLASSIFICATION	4.97059323413737E-6	TEST
// line 814	WITHOUT_CLASSIFICATION	0.9999960792218058	WITHOUT_CLASSIFICATION	3.920778194200699E-6	TEST
// line 823	WITHOUT_CLASSIFICATION	0.9999962640369532	WITHOUT_CLASSIFICATION	3.7359630469160372E-6	TEST
// line 854	WITHOUT_CLASSIFICATION	0.9999956416347002	WITHOUT_CLASSIFICATION	4.358365299730476E-6	TEST
// line 872	WITHOUT_CLASSIFICATION	0.9999960296698233	WITHOUT_CLASSIFICATION	3.970330176691386E-6	TEST
// line 905	WITHOUT_CLASSIFICATION	0.9999956483165532	WITHOUT_CLASSIFICATION	4.351683446817838E-6	TEST
// line 925	WITHOUT_CLASSIFICATION	0.9999956011361342	WITHOUT_CLASSIFICATION	4.39886386586851E-6	TEST
// line 958	WITHOUT_CLASSIFICATION	0.9999956406597175	WITHOUT_CLASSIFICATION	4.359340282609932E-6	TEST
// line 992	WITHOUT_CLASSIFICATION	0.999995524800929	WITHOUT_CLASSIFICATION	4.475199070956826E-6	TEST
// line 1047	WITHOUT_CLASSIFICATION	0.9999959878005567	WITHOUT_CLASSIFICATION	4.01219944335818E-6	TEST
// line 1072	WITHOUT_CLASSIFICATION	0.9999963015586194	WITHOUT_CLASSIFICATION	3.698441380651497E-6	TEST
// line 1081	WITHOUT_CLASSIFICATION	0.9999954798336954	WITHOUT_CLASSIFICATION	4.5201663045694815E-6	TEST
// line 1108	WITHOUT_CLASSIFICATION	0.9999962075798651	WITHOUT_CLASSIFICATION	3.7924201349258056E-6	TEST
// line 1136	WITHOUT_CLASSIFICATION	0.9999955855777681	WITHOUT_CLASSIFICATION	4.414422231846864E-6	TEST
// line 1168	WITHOUT_CLASSIFICATION	0.9999957016428779	WITHOUT_CLASSIFICATION	4.298357122169665E-6	TEST
// line 1192	WITHOUT_CLASSIFICATION	0.9999957865902722	WITHOUT_CLASSIFICATION	4.213409727847366E-6	TEST
// line 1241	WITHOUT_CLASSIFICATION	0.999994910448359	WITHOUT_CLASSIFICATION	5.0895516410826E-6	TEST
// line 1267	WITHOUT_CLASSIFICATION	0.9999957439468713	WITHOUT_CLASSIFICATION	4.256053128691282E-6	TEST
// line 1286	WITHOUT_CLASSIFICATION	0.999996109532691	WITHOUT_CLASSIFICATION	3.8904673090097326E-6	TEST
// line 1301	WITHOUT_CLASSIFICATION	0.9999952636670643	WITHOUT_CLASSIFICATION	4.736332935724779E-6	TEST
// line 1314	WITHOUT_CLASSIFICATION	0.9999955797539869	WITHOUT_CLASSIFICATION	4.420246013113074E-6	TEST
// line 1333	WITHOUT_CLASSIFICATION	0.9999954204497972	WITHOUT_CLASSIFICATION	4.5795502027739625E-6	TEST
// line 1362	WITHOUT_CLASSIFICATION	0.9999960358891835	WITHOUT_CLASSIFICATION	3.964110816457166E-6	TEST
// line 1395	WITHOUT_CLASSIFICATION	0.999995638989129	WITHOUT_CLASSIFICATION	4.361010870951216E-6	TEST
// line 1420	WITHOUT_CLASSIFICATION	0.9999962686770052	WITHOUT_CLASSIFICATION	3.731322994841568E-6	TEST
// line 1439	WITHOUT_CLASSIFICATION	0.9999957513104644	WITHOUT_CLASSIFICATION	4.248689535587796E-6	TEST
// line 1476	WITHOUT_CLASSIFICATION	0.9999954256727027	WITHOUT_CLASSIFICATION	4.574327297316021E-6	TEST
// line 1535	WITHOUT_CLASSIFICATION	0.9999954690844053	WITHOUT_CLASSIFICATION	4.530915594790046E-6	TEST
// line 1588	WITHOUT_CLASSIFICATION	0.9999956226844389	WITHOUT_CLASSIFICATION	4.377315561147637E-6	TEST
// line 1618	WITHOUT_CLASSIFICATION	0.9999960117042733	WITHOUT_CLASSIFICATION	3.988295726590558E-6	TEST
// line 1643	WITHOUT_CLASSIFICATION	0.9999957061302112	WITHOUT_CLASSIFICATION	4.293869788809686E-6	TEST
// line 1669	WITHOUT_CLASSIFICATION	0.9999952554942254	WITHOUT_CLASSIFICATION	4.744505774578386E-6	TEST
// line 1728	WITHOUT_CLASSIFICATION	0.9999961211641484	WITHOUT_CLASSIFICATION	3.878835851530539E-6	TEST
// line 1753	WITHOUT_CLASSIFICATION	0.999995643250616	WITHOUT_CLASSIFICATION	4.3567493840975085E-6	TEST
// line 1779	WITHOUT_CLASSIFICATION	0.9999952762218117	WITHOUT_CLASSIFICATION	4.723778188306737E-6	TEST
// line 1794	WITHOUT_CLASSIFICATION	0.9999954529699288	WITHOUT_CLASSIFICATION	4.547030071191859E-6	TEST
// line 1812	WITHOUT_CLASSIFICATION	0.9999963943348265	WITHOUT_CLASSIFICATION	3.6056651735340918E-6	TEST
// line 1837	WITHOUT_CLASSIFICATION	0.9999963925899676	WITHOUT_CLASSIFICATION	3.607410032308362E-6	TEST
// line 1895	WITHOUT_CLASSIFICATION	0.9999961598584239	WITHOUT_CLASSIFICATION	3.840141576054513E-6	TEST
// line 1925	WITHOUT_CLASSIFICATION	0.9999957792854555	WITHOUT_CLASSIFICATION	4.220714544553786E-6	TEST
// line 1950	WITHOUT_CLASSIFICATION	0.9999958736162043	WITHOUT_CLASSIFICATION	4.126383795740944E-6	TEST
// line 1992	WITHOUT_CLASSIFICATION	0.9999957060641042	WITHOUT_CLASSIFICATION	4.293935895901227E-6	TEST
// line 2014	WITHOUT_CLASSIFICATION	0.9999967519225358	WITHOUT_CLASSIFICATION	3.2480774642535062E-6	TEST
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999938670760543	WITHOUT_CLASSIFICATION	6.132923945690907E-6	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999993093943461	WITHOUT_CLASSIFICATION	6.906056537970321E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999877604144748	WITHOUT_CLASSIFICATION	1.2239585525160791E-5	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999877604144748	WITHOUT_CLASSIFICATION	1.2239585525160791E-5	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999877604144748	WITHOUT_CLASSIFICATION	1.2239585525160791E-5	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999877604144748	WITHOUT_CLASSIFICATION	1.2239585525160791E-5	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999877604144748	WITHOUT_CLASSIFICATION	1.2239585525160791E-5	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999877604144748	WITHOUT_CLASSIFICATION	1.2239585525160791E-5	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999877604144748	WITHOUT_CLASSIFICATION	1.2239585525160791E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999982762318461	WITHOUT_CLASSIFICATION	1.7237681538851769E-6	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999982762318461	WITHOUT_CLASSIFICATION	1.7237681538851769E-6	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999982762318461	WITHOUT_CLASSIFICATION	1.7237681538851769E-6	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999982762318461	WITHOUT_CLASSIFICATION	1.7237681538851769E-6	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999986102193347	WITHOUT_CLASSIFICATION	1.3897806652992452E-6	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999986102193347	WITHOUT_CLASSIFICATION	1.3897806652992452E-6	TEST
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999999986556518	WITHOUT_CLASSIFICATION	1.3443481463514091E-9	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999990957253639	WITHOUT_CLASSIFICATION	9.042746361117727E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999990957253639	WITHOUT_CLASSIFICATION	9.042746361117727E-7	TEST
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999997757115092	WITHOUT_CLASSIFICATION	2.2428849076032587E-7	TEST
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999977593873799	WITHOUT_CLASSIFICATION	2.2406126200111417E-6	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999188669988	WITHOUT_CLASSIFICATION	8.113300123484397E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999188669988	WITHOUT_CLASSIFICATION	8.113300123484397E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999188669988	WITHOUT_CLASSIFICATION	8.113300123484397E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999188669988	WITHOUT_CLASSIFICATION	8.113300123484397E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999188669988	WITHOUT_CLASSIFICATION	8.113300123484397E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999188669988	WITHOUT_CLASSIFICATION	8.113300123484397E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999188669988	WITHOUT_CLASSIFICATION	8.113300123484397E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999000168781	WITHOUT_CLASSIFICATION	9.998312190803787E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998379663765	WITHOUT_CLASSIFICATION	1.6203362339881823E-7	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999996142674662	WITHOUT_CLASSIFICATION	3.8573253381427165E-7	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999996142674662	WITHOUT_CLASSIFICATION	3.8573253381427165E-7	TEST
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999995787825822	WITHOUT_CLASSIFICATION	4.212174178946051E-7	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999983911482839	WITHOUT_CLASSIFICATION	1.6088517160861891E-6	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999983911482839	WITHOUT_CLASSIFICATION	1.6088517160861891E-6	TEST
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999999762881575	WITHOUT_CLASSIFICATION	2.3711842439777855E-8	TEST
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9999963948856309	WITHOUT_CLASSIFICATION	3.605114369188546E-6	TEST
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999877464752505	WITHOUT_CLASSIFICATION	1.2253524749569246E-5	TEST
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999990961566072	WITHOUT_CLASSIFICATION	9.03843392827732E-7	TEST
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999997758209458	WITHOUT_CLASSIFICATION	2.241790541464036E-7	TEST
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999992084974535	WITHOUT_CLASSIFICATION	7.915025463586677E-7	TEST
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999957428050084	WITHOUT_CLASSIFICATION	4.257194991696287E-6	TEST
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999993819138688	WITHOUT_CLASSIFICATION	6.18086131079141E-7	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999998575838573	WITHOUT_CLASSIFICATION	1.424161425846311E-7	TEST
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.999994681522006	WITHOUT_CLASSIFICATION	5.318477994079093E-6	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9981888026862679	WITHOUT_CLASSIFICATION	0.0018111973137321879	TEST
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999999951194805	WITHOUT_CLASSIFICATION	4.88051960438377E-9	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999997490453059	WITHOUT_CLASSIFICATION	2.5095469414517127E-7	TEST
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999999675754466	WITHOUT_CLASSIFICATION	3.242455334049645E-8	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999866556614935	WITHOUT_CLASSIFICATION	1.3344338506386443E-5	TEST
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999998513829154	WITHOUT_CLASSIFICATION	1.4861708460634594E-7	TEST
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999990020249601	WITHOUT_CLASSIFICATION	9.979750399752983E-7	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999921267174461	WITHOUT_CLASSIFICATION	7.873282553824146E-6	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999998362071456	WITHOUT_CLASSIFICATION	1.637928544101739E-7	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999998362071456	WITHOUT_CLASSIFICATION	1.637928544101739E-7	TEST
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999978489740893	WITHOUT_CLASSIFICATION	2.1510259107252055E-6	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999995870012417	WITHOUT_CLASSIFICATION	4.129987583291875E-7	TEST
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999983876221935	WITHOUT_CLASSIFICATION	1.6123778064150844E-6	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999556423708733	WITHOUT_CLASSIFICATION	4.4357629126663E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.999965953307085	WITHOUT_CLASSIFICATION	3.4046692914961444E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.999965953307085	WITHOUT_CLASSIFICATION	3.4046692914961444E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.999965953307085	WITHOUT_CLASSIFICATION	3.4046692914961444E-5	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999995865783692	WITHOUT_CLASSIFICATION	4.1342163085945245E-7	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999990189834554	WITHOUT_CLASSIFICATION	9.810165445260118E-7	TEST
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999992361079129	WITHOUT_CLASSIFICATION	7.638920872432044E-7	TEST
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999998270459851	WITHOUT_CLASSIFICATION	1.7295401491205736E-7	TEST
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999995406787514	WITHOUT_CLASSIFICATION	4.5932124866858247E-7	TEST
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999991095186198	WITHOUT_CLASSIFICATION	8.904813803182961E-7	TEST
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999992784832912	WITHOUT_CLASSIFICATION	7.215167088520873E-7	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999998628246717	WITHOUT_CLASSIFICATION	1.3717532832475419E-7	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999999693819722	WITHOUT_CLASSIFICATION	3.061802774535191E-8	TEST
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999986608635621	WITHOUT_CLASSIFICATION	1.339136437920972E-6	TEST
// reset buffer	WITHOUT_CLASSIFICATION	0.9999971903696084	WITHOUT_CLASSIFICATION	2.809630391560069E-6	TEST
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999999781933121	WITHOUT_CLASSIFICATION	2.180668789307013E-8	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.997429957056679	WITHOUT_CLASSIFICATION	0.002570042943321054	TEST
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999974676380866	WITHOUT_CLASSIFICATION	2.5323619133702325E-6	TEST
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999998201255365	WITHOUT_CLASSIFICATION	1.798744634923959E-7	TEST
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999554653915748	WITHOUT_CLASSIFICATION	4.4534608425188646E-5	TEST
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999996393179592	WITHOUT_CLASSIFICATION	3.606820408643059E-7	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999888642337477	WITHOUT_CLASSIFICATION	1.1135766252329344E-5	TEST
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999998555103108	WITHOUT_CLASSIFICATION	1.4448968915676222E-7	TEST
