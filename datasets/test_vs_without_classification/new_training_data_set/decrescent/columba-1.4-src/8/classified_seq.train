TEST	TODO: should not be using assert here but I don't want to change to IllegalStateException at lead up to a release as I don't know how much testing is done with assert on.
TEST	TODO: Presumably this is only relevant if obj is actually a Model or Profile. An added test of isAModel(obj) or isAProfile(obj) would clarify what is going on here.
TEST	Testing: Does not fire. Conflict with CrNameConflict.
TEST	For modules, it would be useful to be able to remove their factories. <p> TODO: The effect of this method is not yet tested! @param factory the factory to remove
TEST	All events going to the Explorer must pass through here first!<p> Most will come from the uml model via the EventAdapter interface.<p> TODO: In some cases (test cases) this object is created without setting the treeModel. I (Linus) will add tests for this now. It would be better if this is created only when the Explorer is created. <p> TODO: The ExplorerTreeNode also listens to some events (from Diagrams), so it does not follow the rule above. @since 0.15.2, Created on 16 September 2003, 23:13 @author alexb
TEST	Listening only to "remove" events does not work... TODO: Check if this works now with new event pump - tfm
TEST	Entered in 0.29.3 Prove that the test below is not needed
TEST	TODO: Why does it fail for changing the name of an associationend? Why should it pass?
TEST	TODO: Test this.
TEST	TODO: No test coverage for this or createPropPanel? - tfm
TEST	For modules, it would be usefule to be able to remove their factories.<p> TODO: The effect of this method is not yet tested! @param factory the factory to remove
TEST	TODO: Rewrite this test using reflection against Uml class. This code has been commented out since September 2003
TEST	Do we need to add tests for the following? AggregationKind ChangeableKind MessageDirectionKind OrderingKind ParameterDirectionKind PseudostateKind ScopeKind VisibilityKind
TEST	The UML 2.1.1 metamodel is a MOF 2.0 CMOF model, so we want nodes with tag="ownedMember", attribute xmi:type="cmof:Class" TODO: This code is untested - tfm
TEST	ModelElement is abstract, so no create tests TODO: Add any other relevant tests
TEST	TODO: Test if the generated string is correct.
TEST	Test the constructor used for loading a profile from a Jar file. TODO: Test FigNode! @throws Exception if something goes wrong
TEST	cleanAllExtentsBut(model); TODO: why is this causing a crash?!?
TEST	TODO: This requires that the tests be run with assertions enabled which isn't guaranteed in all environments.
TEST	Tests for the DiagramSettings. TODO: Test chaining of settings. @author Tom Morris (based on TestProjectSettings by Michiel)
TEST	TODO: Fix this so that new sequence diagrams are tested
TEST	TODO: This needs more work. Test e.g. creation when an operation is selected. @author jaap.branderhorst@xs4all.nl @since Jan 9, 2003
TEST	Test creation of Collaboration diagrams. TODO: Test creating on an operation. @author jaap.branderhorst@xs4all.nl @since Jan 9, 2003
TEST	Tests if the list with namespaces defined in getValidNamespaceClasses contains only valid namespaces. TODO: This test does not test anything, really!
TEST	Tests if the list with namespaces defined in getValidNamespaceClasses contains only valid namespaces. TODO: This test does not test anything, really!
TEST	TODO: this should fail, but it doesn't:
TEST	For some reason ListSet.equals() allocates a lot of memory, well some memory at least. Lets try to avoid that when not needed by invoking this test only when the two previous tests are not decisive.
TEST	TODO: should not be using assert here but I don't want to change to IllegalStateException at lead up to a release as I don't know how much testing is done with assert on.
TEST	The application should have checked for availability at startup. For tests we would expect unix developers to be correctly configured. Replace with an assert when we are JRE1.4+
TEST	Test a UML 1.3/XMI 1.1 file to make sure that it gets converted properly. <p> TODO: Our UML 1.3 converter currently only handles XMI 1.0. @throws FileNotFoundException indicates a test configuration problem @throws UmlException if it fails to open the file
TEST	Test read compressed models, mainly to verify the correct reading of AndroMDA profiles. TODO: Move this test into argouml base when we will want to read also zip file. @author lmaitre
TEST	We tested this above - do we need to test again?
TEST	TODO: Prove that this works. The TestUMLAssociationRoleBaseComboBoxModel does not cut it. @see org.argouml.uml.ui.UMLComboBoxModel#addOtherModelEventListeners(java.lang.Object)
TEST	TODO: We need some way of driving this from panel xml rather than hard coded test
TEST	Test creation of metatypes. TODO: we could add tests here to make sure that we can NOT create abstract types
TEST	TODO: Test if the generated string is correct.
TEST	TODO: This requires that the tests be run with assertions enabled which isn't guaranteed in all environments.
TEST	TODO: should it remove the leftovers from other tests? cleanAllExtents(); assert getFacade().getRootElements().size() == 0;
TEST	TODO write test for enumerations, although they are not yet supported
TEST	TODO do tests for type conformance (8.4.4), even though it is not yet supported
TEST	TODO do tests for infix operators (8.4.7), even though it is not yet supported
TEST	TODO do tests for navigation to association classes (8.5.5), even though it is not yet supported
TEST	TODO do tests for ranges in collection definition (8.5.12), even though it is not yet supported
TEST	TODO do tests for collections of collections (8.5.13), even though it is not yet supported question: should this happen with all collections or only the constructed ones?
WITHOUT_CLASSIFICATION	@see java.lang.Object#hashCode()
WITHOUT_CLASSIFICATION	Is this item a copy? @see java.lang.Object#equals(java.lang.Object)
WITHOUT_CLASSIFICATION	once one criticism is found, exit
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	user interface
WITHOUT_CLASSIFICATION	criticism control
WITHOUT_CLASSIFICATION	issue resolutions
WITHOUT_CLASSIFICATION	criticism control
WITHOUT_CLASSIFICATION	critiquing
WITHOUT_CLASSIFICATION	design feedback
WITHOUT_CLASSIFICATION	the critiquing thread should wait if disabled.
WITHOUT_CLASSIFICATION	why?
WITHOUT_CLASSIFICATION	Performs critique asap. @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.lang.Object#hashCode()
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	critiquing
WITHOUT_CLASSIFICATION	constructor and singeton methods
WITHOUT_CLASSIFICATION	why?
WITHOUT_CLASSIFICATION	&& getAutoCritique()
WITHOUT_CLASSIFICATION	Don't clear everything here, breaks loading!
WITHOUT_CLASSIFICATION	v71
WITHOUT_CLASSIFICATION	Don't let a transient error kill the thread
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	clear out queues! @@@
WITHOUT_CLASSIFICATION	decision model listener
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	end class ChildGenDMElements
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	user interface
WITHOUT_CLASSIFICATION	issue resolution
WITHOUT_CLASSIFICATION	TODO: This should be the name of the designer that created the todoitem, not the current username!
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, "predicate() returned true, creating ToDoItem");
WITHOUT_CLASSIFICATION	corrective automations, wizards
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	critiquing
WITHOUT_CLASSIFICATION	criticism control
WITHOUT_CLASSIFICATION	TODO: Make use of the constants defined in the ToDoItem class!
WITHOUT_CLASSIFICATION	if wizClass is not a subclass of Wizard, print a warning
WITHOUT_CLASSIFICATION	return getCriticName();
WITHOUT_CLASSIFICATION	criticism control
WITHOUT_CLASSIFICATION	design feedback
WITHOUT_CLASSIFICATION	issue resolution
WITHOUT_CLASSIFICATION	end interface Poster
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, "Adding resolution for: " + c.getClass() + " " + canCreate);
WITHOUT_CLASSIFICATION	Use this for fast fail instead. Sacrificed for complete fail. d00mst throw new UnresolvableException( "Unable to create ItemUID for class: " + obj.getClass());
WITHOUT_CLASSIFICATION	TODO: values
WITHOUT_CLASSIFICATION	end class Goal
WITHOUT_CLASSIFICATION	check if we are using a supported java version
WITHOUT_CLASSIFICATION	implements java.io.Serialization
WITHOUT_CLASSIFICATION	end class CurDecisionCM
WITHOUT_CLASSIFICATION	end class StandardCM
WITHOUT_CLASSIFICATION	end class CompositeCM
WITHOUT_CLASSIFICATION	end class EnabledCM
WITHOUT_CLASSIFICATION	end class NotSnoozedCM
WITHOUT_CLASSIFICATION	end class AndCM
WITHOUT_CLASSIFICATION	end class DesignGoalsCM
WITHOUT_CLASSIFICATION	end class OrCM
WITHOUT_CLASSIFICATION	Register our last chance exception handler
WITHOUT_CLASSIFICATION	Get the splash screen up as early as possible
WITHOUT_CLASSIFICATION	We have to do this to set the LAF for the splash screen
WITHOUT_CLASSIFICATION	main initialization happens here
WITHOUT_CLASSIFICATION	ToolTipManager.sharedInstance().setInitialDelay(500);
WITHOUT_CLASSIFICATION	Force the configuration to load
WITHOUT_CLASSIFICATION	Synchronize the startup directory
WITHOUT_CLASSIFICATION	then, print out some version info for debuggers...
WITHOUT_CLASSIFICATION	Set the i18n locale
WITHOUT_CLASSIFICATION	set properties for application behaviour
WITHOUT_CLASSIFICATION	now, let's print it
WITHOUT_CLASSIFICATION	nothing else to do (?)
WITHOUT_CLASSIFICATION	We MUST have a project open before continuing. Create if necessary
WITHOUT_CLASSIFICATION	initPreinitialize(); initializeSubsystems(new SimpleTimer(), null); ArgoFrame.getInstance().setVisible(true);
WITHOUT_CLASSIFICATION	Perform one command.
WITHOUT_CLASSIFICATION	Now create a new object.
WITHOUT_CLASSIFICATION	initLogging();
WITHOUT_CLASSIFICATION	On uniprocessors wait until we're sure the splash screen has been painted so that we aren't competing for resources
WITHOUT_CLASSIFICATION	make the projectbrowser
WITHOUT_CLASSIFICATION	end Class Main
WITHOUT_CLASSIFICATION	end class PostLoad
WITHOUT_CLASSIFICATION	We don't care if optional modules aren't found.
WITHOUT_CLASSIFICATION	We don't care if optional modules aren't found.
WITHOUT_CLASSIFICATION	end class LoadModules
WITHOUT_CLASSIFICATION	All tabs are added at the end, except a TabToDoTarget:
WITHOUT_CLASSIFICATION	End interface GUISettingsTabInterface
WITHOUT_CLASSIFICATION	skip pos, we know it's not a valid char from above
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	Store in the user configuration, and let gef know also.
WITHOUT_CLASSIFICATION	Use the configuration if it exists, otherwise use what gef thinks.
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	actions
WITHOUT_CLASSIFICATION	failed to clone
WITHOUT_CLASSIFICATION	Remark: The code in ProjectSettings.init() currently presumes that nobody is using this event.
WITHOUT_CLASSIFICATION	NOTE: This is package scope to force callers to use ResourceLoaderWrapper
WITHOUT_CLASSIFICATION	Strip all characters out of <var>s</var> that could not be part of a valid Java identifier. Return either the given string (if all characters were valid), or a new string with all invalid characters stripped out. This allows automatic conversion of strings containing punctuation and spaces to a resource name that can be looked up.
WITHOUT_CLASSIFICATION	end class ResourceLoader
WITHOUT_CLASSIFICATION	the validity checking thread should wait if disabled.
WITHOUT_CLASSIFICATION	If element has been deleted, it's no longer valid
WITHOUT_CLASSIFICATION	History.TheHistory.addItemResolution(item, "no longer valid"); ((ToDoItem)item).resolve("no longer valid"); notifyObservers("removeElement", item);
WITHOUT_CLASSIFICATION	Notifications and Updates
WITHOUT_CLASSIFICATION	skip any identical items already on the list
WITHOUT_CLASSIFICATION	cat.debug("Checking for inhibitors " + rc);
WITHOUT_CLASSIFICATION	History.TheHistory.addItemResolution(item, reason);
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	end class ArgoJMenu
WITHOUT_CLASSIFICATION	Block added by BobTarling 8-Jan-2002 Set the checkbox on or off according to the SELECTED value of the action. If no SELECTED value is found then this defaults to true in order to remain compatible with previous versions of this code.
WITHOUT_CLASSIFICATION	EventListenerList.add() is synchronized, so we don't need to synchronize ourselves
WITHOUT_CLASSIFICATION	End of block
WITHOUT_CLASSIFICATION	end interface Clarifier
WITHOUT_CLASSIFICATION	Set the checkbox on or off according to the SELECTED value of the action. If no SELECTED value is found then this defaults to true.
WITHOUT_CLASSIFICATION	Extra care to be taken since allOffenders can be reset while this method is running.
WITHOUT_CLASSIFICATION	these are blue in Metal Default Theme
WITHOUT_CLASSIFICATION	Cached expansions
WITHOUT_CLASSIFICATION	these are gray in Metal Default Theme
WITHOUT_CLASSIFICATION	Extra care to be taken since allPosters can be reset while this method is running.
WITHOUT_CLASSIFICATION	set the icon for this poster
WITHOUT_CLASSIFICATION	EventListenerList.remove() is synchronized, so we don't need to synchronize ourselves
WITHOUT_CLASSIFICATION	MVW
WITHOUT_CLASSIFICATION	event related stuff
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	static variables
WITHOUT_CLASSIFICATION	@see java.lang.Object#hashCode()
WITHOUT_CLASSIFICATION	@see java.lang.Object#equals(java.lang.Object)
WITHOUT_CLASSIFICATION	Enable buttons when selection made. @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentShown(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	end class CheckManager
WITHOUT_CLASSIFICATION	Now lets search
WITHOUT_CLASSIFICATION	end class TabChecklist
WITHOUT_CLASSIFICATION	We found it!
WITHOUT_CLASSIFICATION	event handling
WITHOUT_CLASSIFICATION	Enter the class to speed up the next search.
WITHOUT_CLASSIFICATION	Stop updating model when we're not visible
WITHOUT_CLASSIFICATION	Update our model with our saved target
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	instance varables
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	TableModel implemetation
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	criticism control
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	static accessors
WITHOUT_CLASSIFICATION	instance varables
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	TableModel implemetation
WITHOUT_CLASSIFICATION	in the past, 0 milliseconds after January 1, 1970, 00:00:00 GMT.
WITHOUT_CLASSIFICATION	in the past, 0 milliseconds after January 1, 1970, 00:00:00 GMT.
WITHOUT_CLASSIFICATION	by default, double the snooze interval each time
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	end class SnoozeOrder
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	wizard actions
WITHOUT_CLASSIFICATION	This changes the complete structure of the table, so we need to set the column widths again.
WITHOUT_CLASSIFICATION	TODO: do all following steps TODO: resolve item from ToDoList
WITHOUT_CLASSIFICATION	end class ActionOpenCritics
WITHOUT_CLASSIFICATION	Dialog box to list all critics and allow editing of some of their properties. <p> TODO: supported goals, critic network.
WITHOUT_CLASSIFICATION	Set initial sorting on Critic Headline
WITHOUT_CLASSIFICATION	Critics Table
WITHOUT_CLASSIFICATION	instead of making a new list, decrement index, return when found and index == 0
WITHOUT_CLASSIFICATION	Critic Details panel
WITHOUT_CLASSIFICATION	case 2
WITHOUT_CLASSIFICATION	TableModel implemetation
WITHOUT_CLASSIFICATION	TODO:
WITHOUT_CLASSIFICATION	no maximum set, so it will stretch...
WITHOUT_CLASSIFICATION	and for advanced mode:
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#valueForPathChanged( javax.swing.tree.TreePath, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#addTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ChangeListener#stateChanged(javax.swing.event.ChangeEvent)
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	Set tableSP's preferred height to 0 so that details height is used in pack()
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#isLeaf(java.lang.Object)
WITHOUT_CLASSIFICATION	c.gridy = 0; c.gridx = 0; JLabel priLabel = new JLabel("Priority:"); gb.setConstraints(priLabel, c); _mainPanel.add(priLabel);
WITHOUT_CLASSIFICATION	fireTreeNodesChanged(this, path, childIndices, children);
WITHOUT_CLASSIFICATION	c.gridy = 0; c.gridx = 1; JLabel offLabel = new JLabel("Off"); gb.setConstraints(offLabel, c); _mainPanel.add(offLabel);
WITHOUT_CLASSIFICATION	c.gridy = 0; c.gridx = 2; JLabel lowLabel = new JLabel("Low"); gb.setConstraints(lowLabel, c); _mainPanel.add(lowLabel);
WITHOUT_CLASSIFICATION	c.gridy = 0; c.gridx = 3; JLabel twoLabel = new JLabel("ad"); gb.setConstraints(twoLabel, c); _mainPanel.add(twoLabel);
WITHOUT_CLASSIFICATION	c.gridy = 0; c.gridx = 4; JLabel threeLabel = new JLabel("asd"); gb.setConstraints(threeLabel, c); _mainPanel.add(threeLabel);
WITHOUT_CLASSIFICATION	c.gridy = 0; c.gridx = 5; JLabel fourLabel = new JLabel("asd"); gb.setConstraints(fourLabel, c); _mainPanel.add(fourLabel);
WITHOUT_CLASSIFICATION	c.gridy = 0; c.gridx = 6; JLabel highLabel = new JLabel("High"); gb.setConstraints(highLabel, c); _mainPanel.add(highLabel);
WITHOUT_CLASSIFICATION	------------ other methods ------------
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeCellRenderer#getTreeCellRendererComponent( javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChild(java.lang.Object, int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)
WITHOUT_CLASSIFICATION	ToDoListListener implementation
WITHOUT_CLASSIFICATION	fireTreeNodesChanged(this, path, childIndices, children);
WITHOUT_CLASSIFICATION	TreeModel implementation - todo specific stuff
WITHOUT_CLASSIFICATION	class variables
WITHOUT_CLASSIFICATION	general icons for poster
WITHOUT_CLASSIFICATION	specialised icons for designer
WITHOUT_CLASSIFICATION	TreeCellRenderer implementation
WITHOUT_CLASSIFICATION	end class ToDoTreeRenderer
WITHOUT_CLASSIFICATION	public static Decision decisionUNCATEGORIZED = new Decision("Uncategorized", 1);
WITHOUT_CLASSIFICATION	end class ToDoByDecision
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	TreeModel implementation
WITHOUT_CLASSIFICATION	instead of making a new list, decrement index, return when found and index == 0
WITHOUT_CLASSIFICATION	store wizard?
WITHOUT_CLASSIFICATION	c.gridx = 1; c.gridy = 3; c.gridheight = GridBagConstraints.REMAINDER; SpacerPanel spacer2 = new SpacerPanel(); gb.setConstraints(spacer2, c); _mainPanel.add(spacer2);
WITHOUT_CLASSIFICATION	image.setMargin(new Insets(0, 0, 0, 0));
WITHOUT_CLASSIFICATION	image.setMargin(new Insets(0, 0, 0, 0));
WITHOUT_CLASSIFICATION	image.setMargin(new Insets(0, 0, 0, 0));
WITHOUT_CLASSIFICATION	end class WizStepTextField
WITHOUT_CLASSIFICATION	store wizard?
WITHOUT_CLASSIFICATION	store wizard?
WITHOUT_CLASSIFICATION	end class WizDescription
WITHOUT_CLASSIFICATION	end class WizStepCue
WITHOUT_CLASSIFICATION	stop/start creating more critics
WITHOUT_CLASSIFICATION	end class ActionGoToCritique
WITHOUT_CLASSIFICATION	Correct lazy initialization of static field without further updates:
WITHOUT_CLASSIFICATION	does nothing
WITHOUT_CLASSIFICATION	end class ActionAutoCritique
WITHOUT_CLASSIFICATION	stop/start cleaning up invalid TodoItems.
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#isLeaf(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getIndexOfChild( java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	TreeModel implementation
WITHOUT_CLASSIFICATION	ToDoListListener implementation
WITHOUT_CLASSIFICATION	fireTreeNodesChanged(this, path, childIndices, children);
WITHOUT_CLASSIFICATION	otherwise parent must be an offending design material
WITHOUT_CLASSIFICATION	end class ActionOpenGoals
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#isLeaf(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#isLeaf(java.lang.Object)
WITHOUT_CLASSIFICATION	? inform()
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentShown(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentHidden(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Update our model with our saved target
WITHOUT_CLASSIFICATION	Stop updating model when we're not visible
WITHOUT_CLASSIFICATION	TreeModel implementation
WITHOUT_CLASSIFICATION	instead of making a new list, decrement index, return when found and index == 0
WITHOUT_CLASSIFICATION	image.setMargin(new Insets(0, 0, 0, 0));
WITHOUT_CLASSIFICATION	store wizard?
WITHOUT_CLASSIFICATION	the target of description will always be set directly by tabtodo
WITHOUT_CLASSIFICATION	Request that we be made visible if we're not? topLevelTabbedPane.setSelectedComponent(t);
WITHOUT_CLASSIFICATION	------------- MouseListener implementation ---------------
WITHOUT_CLASSIFICATION	end class WizStepConfirm
WITHOUT_CLASSIFICATION	next line coming from projectbrowser
WITHOUT_CLASSIFICATION	------------ ItemListener implementation ----------------------
WITHOUT_CLASSIFICATION	-------------TreeSelectionListener implementation -----------
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#isLeaf(java.lang.Object)
WITHOUT_CLASSIFICATION	not needed in UML 1.x
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ChangeListener#stateChanged(javax.swing.event.ChangeEvent)
WITHOUT_CLASSIFICATION	Prepare for typing in rationale field when window is opened. @see java.awt.Component#setVisible(boolean)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	ToDoListListener implementation
WITHOUT_CLASSIFICATION	ToDoListListener implementation
WITHOUT_CLASSIFICATION	keep nagging until the user solves the problem: This seems a nice way to nag:
WITHOUT_CLASSIFICATION	Only interrupt for one todoitem
WITHOUT_CLASSIFICATION	end class ActionOpenDecisions
WITHOUT_CLASSIFICATION	blinks?
WITHOUT_CLASSIFICATION	end class ToDoByOffender
WITHOUT_CLASSIFICATION	add the perspectives to a list for the combobox
WITHOUT_CLASSIFICATION	decSlide.setPaintLabels(true);
WITHOUT_CLASSIFICATION	constants instance variables
WITHOUT_CLASSIFICATION	fireTreeNodesChanged(this, path, childIndices, children);
WITHOUT_CLASSIFICATION	TODO: This looks O(n^2)
WITHOUT_CLASSIFICATION	TODO: make a new history item
WITHOUT_CLASSIFICATION	cat.debug("bad decision");
WITHOUT_CLASSIFICATION	cat.debug("bad goal");
WITHOUT_CLASSIFICATION	end class DismissToDoItemDialog
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChild(java.lang.Object, int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getIndexOfChild( java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	finally, apply profile configuration to the model
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#valueForPathChanged( javax.swing.tree.TreePath, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#addTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#removeTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	store wizard?
WITHOUT_CLASSIFICATION	TreeModel implementation
WITHOUT_CLASSIFICATION	ToDoListListener implementation
WITHOUT_CLASSIFICATION	ToDoListListener implementation
WITHOUT_CLASSIFICATION	fireTreeNodesChanged(this, path, childIndices, children);
WITHOUT_CLASSIFICATION	image.setMargin(new Insets(0, 0, 0, 0));
WITHOUT_CLASSIFICATION	otherwise parent must be an offending design material
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#isLeaf(java.lang.Object)
WITHOUT_CLASSIFICATION	end class WizStep
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	actions
WITHOUT_CLASSIFICATION	This is done for compatibility with previous version: Move the argo.user.properties written before 0.25.4 to the new location, if it exists.
WITHOUT_CLASSIFICATION	Don't allow instantiation
WITHOUT_CLASSIFICATION	ActionListener implementation
WITHOUT_CLASSIFICATION	DocumentListener implementation
WITHOUT_CLASSIFICATION	TargetListener implementation
WITHOUT_CLASSIFICATION	copy to new file and let the regular load code do the actual load
WITHOUT_CLASSIFICATION	Instance variables
WITHOUT_CLASSIFICATION	end class ConfigurationFactory
WITHOUT_CLASSIFICATION	LOG.log(Level.INFO, "Configuration saved to {0}\n", url);
WITHOUT_CLASSIFICATION	check for the older properties file and copy it over if possible
WITHOUT_CLASSIFICATION	Only allow one load
WITHOUT_CLASSIFICATION	add the first point twice
WITHOUT_CLASSIFICATION	add the first point twice
WITHOUT_CLASSIFICATION	Scale everything up
WITHOUT_CLASSIFICATION	Initialize band buffer bounds
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, "getData Rectangle = " + clip);
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, "getData returning raster = " + translatedRaster);
WITHOUT_CLASSIFICATION	Create a new graphics context so we start with fresh transforms
WITHOUT_CLASSIFICATION	Fill with our background color
WITHOUT_CLASSIFICATION	Translate & clip graphic to match region of interest
WITHOUT_CLASSIFICATION	Ask GEF to print a band of the diagram (translated & clipped)
WITHOUT_CLASSIFICATION	Make sure it isn't caching anything that should be written
WITHOUT_CLASSIFICATION	assert !initialized; GUITestActionOpenProject fails over this...
WITHOUT_CLASSIFICATION	Retain the original one:
WITHOUT_CLASSIFICATION	Retain the original one:
WITHOUT_CLASSIFICATION	Internal initialization method. Handles initialization which is common to both public methods.
WITHOUT_CLASSIFICATION	This is needed for the JUnit tests. Otherwise a "assert initialized" would suffice.
WITHOUT_CLASSIFICATION	This is needed for the JUnit tests. Otherwise a "assert initialized" would suffice.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Flag the command as to whether it is first in a chain
WITHOUT_CLASSIFICATION	end class DelayedChangeNotify
WITHOUT_CLASSIFICATION	Default diagram settings
WITHOUT_CLASSIFICATION	Default notation settings
WITHOUT_CLASSIFICATION	Generation preferences:
WITHOUT_CLASSIFICATION	The next one defaults to TRUE, to stay compatible with older ArgoUML versions that did not have this setting:
WITHOUT_CLASSIFICATION	The next ones defaults to TRUE, to stay compatible with older ArgoUML versions that did not have this setting:
WITHOUT_CLASSIFICATION	This Notation is not available!
WITHOUT_CLASSIFICATION	Always put the model at the top
WITHOUT_CLASSIFICATION	otherwise add the diagram at the start
WITHOUT_CLASSIFICATION	otherwise add the diagram at the start
WITHOUT_CLASSIFICATION	finally, apply profile configuration to the model
WITHOUT_CLASSIFICATION	uri = PersistenceManager.getInstance().fixUriExtension(theProjectUri);
WITHOUT_CLASSIFICATION	Register with the save action with other subsystems so that any changes in those subsystems will enable the save button/menu item etc.
WITHOUT_CLASSIFICATION	not needed in UML 1.x
WITHOUT_CLASSIFICATION	end interface DelayedVChangeListener
WITHOUT_CLASSIFICATION	a profile initially has no applied profiles, we go bottom-up
WITHOUT_CLASSIFICATION	Skip leading underscores:
WITHOUT_CLASSIFICATION	TODO: should just be the directory to write.
WITHOUT_CLASSIFICATION	The preferences with project-scope:
WITHOUT_CLASSIFICATION	The ArgoUML version with which this project was last saved:
WITHOUT_CLASSIFICATION	if diagram added successfully, add the member too
WITHOUT_CLASSIFICATION	Adding a todo member removes any existing one.
WITHOUT_CLASSIFICATION	got past the veto, add the member
WITHOUT_CLASSIFICATION	send indeterminate new value instead of making copy of vector
WITHOUT_CLASSIFICATION	Remove the dependent modelelements, such as the statemachine for a statechartdiagram:
WITHOUT_CLASSIFICATION	Hence, a diagram name was saved in the project that we are loading. So, we use this name to retrieve any matching diagram.
WITHOUT_CLASSIFICATION	Use the first diagram.
WITHOUT_CLASSIFICATION	If there was no diagram at all, then use the (first) UML model.
WITHOUT_CLASSIFICATION	we don't need this HashMap anymore so free up the memory
WITHOUT_CLASSIFICATION	Can not delete the model
WITHOUT_CLASSIFICATION	Can not delete the profile
WITHOUT_CLASSIFICATION	@see java.lang.Object#finalize()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getRowCount()
WITHOUT_CLASSIFICATION	Make the topmost diagram (that is not the one being deleted) current.
WITHOUT_CLASSIFICATION	trash related methods
WITHOUT_CLASSIFICATION	Fire an event some anyone who cares about diagrams being removed can listen for it
WITHOUT_CLASSIFICATION	If we delete a FigEdge or FigNode we actually call this method with the owner not the Fig itself. However, this method is called by ActionDeleteModelElements for primitive Figs (without owner).
WITHOUT_CLASSIFICATION	there's just one ProfileConfiguration in a project and there's no other way to add another one
WITHOUT_CLASSIFICATION	Tab for the settings dialog that makes it possible to select the modules that are to be enabled. TODO: Header for the table. @author Linus Tolke
WITHOUT_CLASSIFICATION	Do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	Access methods for program infrastructure.
WITHOUT_CLASSIFICATION	@see java.io.FileFilter#accept(java.io.File)
WITHOUT_CLASSIFICATION	The creation of the actual GUI elements is deferred until they are actually needed. Otherwize we have problems with the initialization.
WITHOUT_CLASSIFICATION	Do nothing! The next time we refresh, we will fetch the values again.
WITHOUT_CLASSIFICATION	Access methods for modules that need to query about the status of other modules.
WITHOUT_CLASSIFICATION	Access methods for the GUI that the user uses to enable and disable modules.
WITHOUT_CLASSIFICATION	Access methods for the program infrastructure
WITHOUT_CLASSIFICATION	Catch all exceptions and errors, however severe
WITHOUT_CLASSIFICATION	TODO: huntForModulesFromJavaWebStart();
WITHOUT_CLASSIFICATION	Load modules specified by a System property. Modules specified by a system property is for running modules from within Eclipse and running from Java Web Start.
WITHOUT_CLASSIFICATION	Try-catch only the JarFile instantiation so we don't accidentally mask anything in ArgoJarClassLoader or processJarFile.
WITHOUT_CLASSIFICATION	We expect all extensions to have a manifest even though we can operate without one if necessary.
WITHOUT_CLASSIFICATION	Look for our specification
WITHOUT_CLASSIFICATION	Add this to search list for I18N properties (Done for both modules & localized property file sets)
WITHOUT_CLASSIFICATION	We havn't found it. Add it.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	Utility function to unregister all listeners registered through addElementListener. @see #addElementListener(Object, String)
WITHOUT_CLASSIFICATION	Called after the notation default property gets changed. @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	e.g. for an operation: if pce.getSource() == modelElement && event.propertyName = "parameter" if event instanceof AddAssociationEvent Get the parameter instance from event.newValue Call model to add listener on parameter on change of "name", "type" else if event instanceof RemoveAssociationEvent Get the parameter instance from event.oldValue Call model to remove listener on parameter on change of "name", "type" end if end if
WITHOUT_CLASSIFICATION	The following check should have been satisfied before we instantiated the module, but double check again
WITHOUT_CLASSIFICATION	If it didn't have a loadable module class and it doesn't look like a localized property set, warn the user that something funny is in their extension directory
WITHOUT_CLASSIFICATION	Since there is no way to compare the objects as equal, we have to search through the list at this point.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	Remark: There is also a java-like notation, which is also part of ArgoUML core distribution.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	This Notation is not available!
WITHOUT_CLASSIFICATION	This is needed for the case when the default notation is not loaded at this point.
WITHOUT_CLASSIFICATION	class accessors
WITHOUT_CLASSIFICATION	Static workers for dealing with notation names.
WITHOUT_CLASSIFICATION	No valid field for above notationLanguage. It's valid if not null.
WITHOUT_CLASSIFICATION	We also show stereotypes
WITHOUT_CLASSIFICATION	We also show stereotypes
WITHOUT_CLASSIFICATION	We also show the type (of which e.g. the name may change)
WITHOUT_CLASSIFICATION	We also show the type (of which e.g. the name may change)
WITHOUT_CLASSIFICATION	We also show tagged values (the / for derived)
WITHOUT_CLASSIFICATION	We also show tagged values (the / for derived)
WITHOUT_CLASSIFICATION	and when the Operation is replaced:
WITHOUT_CLASSIFICATION	and when the class changes name:
WITHOUT_CLASSIFICATION	mvw: Indeed. The intention of the constructor parameter is to prove that there is a valid UML object to bind the notation to. So, the next statement should fail on a null parameter, and on anything that is not an object of which we can retrieve the multiplicity.
WITHOUT_CLASSIFICATION	We are not interested in the name.
WITHOUT_CLASSIFICATION	And the parameter names and values:
WITHOUT_CLASSIFICATION	And the arguments:
WITHOUT_CLASSIFICATION	We also show parameters
WITHOUT_CLASSIFICATION	We also show types of parameters
WITHOUT_CLASSIFICATION	Listen to the modelelement itself:
WITHOUT_CLASSIFICATION	We also show tagged values (the / for derived)
WITHOUT_CLASSIFICATION	If this fails, then there is a problem... dthompson 29/12/2008: It seems that the returned value is irrelevant here, so I assume that the purpose of this call is just to throw an exception in case of a problem.
WITHOUT_CLASSIFICATION	register for events from all modelelements that change the name and body text i.e. when the CallAction is replaced:
WITHOUT_CLASSIFICATION	and when the owner is replaced (unlikely for operations), and when the operation changes name:
WITHOUT_CLASSIFICATION	Listen to the modelelement itself:
WITHOUT_CLASSIFICATION	removed stereotype
WITHOUT_CLASSIFICATION	register for events from all modelelements that change the text i.e. when the Transition is replaced:
WITHOUT_CLASSIFICATION	new stereotype
WITHOUT_CLASSIFICATION	Listen to name changes in the path (useful for e.g. Package):
WITHOUT_CLASSIFICATION	register for the doActivity etc.
WITHOUT_CLASSIFICATION	register for internal transitions:
WITHOUT_CLASSIFICATION	return "parsing.java.help.attribute";
WITHOUT_CLASSIFICATION	TODO: The src_visibility tag doesn't appear to be created anywhere by ArgoUML currently
WITHOUT_CLASSIFICATION	return "parsing.help.fig-association-end-name";
WITHOUT_CLASSIFICATION	TODO: initial value
WITHOUT_CLASSIFICATION	skip spaces
WITHOUT_CLASSIFICATION	the name itself
WITHOUT_CLASSIFICATION	Check the name for validity:
WITHOUT_CLASSIFICATION	TODO: Check the name for validity.
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	pick out return type
WITHOUT_CLASSIFICATION	handle multiplicity here since we need the type actually the API of generator is buggy since to generate multiplicity correctly we need the attribute too
WITHOUT_CLASSIFICATION	Build the final string
WITHOUT_CLASSIFICATION	TODO: qualifiers (e.g., const) TODO: stereotypes...
WITHOUT_CLASSIFICATION	name and params
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	check for more attributes (';' separated):
WITHOUT_CLASSIFICATION	For Java notation, we also need to listen to "leaf" changes, since they are shown as "final" on the diagram.
WITHOUT_CLASSIFICATION	Remove bases that aren't there anymore
WITHOUT_CLASSIFICATION	Notation.findNotation("Java");
WITHOUT_CLASSIFICATION	Initialize the NotationUtilityUml:
WITHOUT_CLASSIFICATION	copy - can't iterate modify live collection while iterating it
WITHOUT_CLASSIFICATION	When nothing is generated: omit the space.
WITHOUT_CLASSIFICATION	Loop through all base classes, building a comma separated list
WITHOUT_CLASSIFICATION	yes, there are more:
WITHOUT_CLASSIFICATION	no text? remove attr!
WITHOUT_CLASSIFICATION	no non-whitechars in text? remove attr!
WITHOUT_CLASSIFICATION	We need to set the namespace/owner of the new attribute before parsing:
WITHOUT_CLASSIFICATION	If the 1st attribute is static, then the new ones, too.
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	yes, there are more:
WITHOUT_CLASSIFICATION	Generates a string representation for the provided attribute. The string representation will be of the form: visibility name [multiplicity] : type-expression = initial-value {property-string} Depending on settings in Notation, visibility, multiplicity, type-expression, initial value and properties are shown/not shown.
WITHOUT_CLASSIFICATION	Handle Derived:
WITHOUT_CLASSIFICATION	Handle Derived:
WITHOUT_CLASSIFICATION	Handle Visibility:
WITHOUT_CLASSIFICATION	fix for loading bad projects
WITHOUT_CLASSIFICATION	The "show types" defaults to TRUE, to stay compatible with older ArgoUML versions that did not have this setting:
WITHOUT_CLASSIFICATION	The element was deleted while we were processing it
WITHOUT_CLASSIFICATION	strip any trailing semi-colons
WITHOUT_CLASSIFICATION	construct bases string (comma separated)
WITHOUT_CLASSIFICATION	no text? remove op!
WITHOUT_CLASSIFICATION	no non-whitechars in text? remove op!
WITHOUT_CLASSIFICATION	check for more operations (';' separated):
WITHOUT_CLASSIFICATION	end while loop
WITHOUT_CLASSIFICATION	parameterlist is guaranteed to contain at least "("
WITHOUT_CLASSIFICATION	Don't create a stereotype for <<signal>> on a Reception but create any other parsed stereotypes as needed
WITHOUT_CLASSIFICATION	lets concatenate it to the resulting string (genStr)
WITHOUT_CLASSIFICATION	The "show types" defaults to TRUE, to stay compatible with older ArgoUML versions that did not have this setting:
WITHOUT_CLASSIFICATION	the parameters
WITHOUT_CLASSIFICATION	the returnparameters
WITHOUT_CLASSIFICATION	The model element was deleted while we were working on it
WITHOUT_CLASSIFICATION	else: we remove only the extra ","
WITHOUT_CLASSIFICATION	the query state
WITHOUT_CLASSIFICATION	Although Operation and Signal are peers in the UML type hierarchy they share the attributes isRoot, isLeaf, isAbstract, and specification. Concurrency is not shared and is specific to Operation.
WITHOUT_CLASSIFICATION	remove last ,
WITHOUT_CLASSIFICATION	end of block
WITHOUT_CLASSIFICATION	A string of the form "name:"
WITHOUT_CLASSIFICATION	this is a Message UML object
WITHOUT_CLASSIFICATION	Supported format: predecessors number ":" action The 3 parts of the string to generate:
WITHOUT_CLASSIFICATION	(MMessage)
WITHOUT_CLASSIFICATION	This may return null:
WITHOUT_CLASSIFICATION	activatorIntNo is now guaranteed not null
WITHOUT_CLASSIFICATION	List<String> args = null;
WITHOUT_CLASSIFICATION	get the ordered list of immediate successors:
WITHOUT_CLASSIFICATION	the condition or iteration expression (recurrence):
WITHOUT_CLASSIFICATION	(MMessage)
WITHOUT_CLASSIFICATION	Now apply the changes to the model:
WITHOUT_CLASSIFICATION	MMessage
WITHOUT_CLASSIFICATION	If there are more than one suitable operation, then we pick the first one.
WITHOUT_CLASSIFICATION	Disconnect the message from the call graph Make copies of returned live collections since we're modifying
WITHOUT_CLASSIFICATION	Find the preceding message, if any, on either end of the association.
WITHOUT_CLASSIFICATION	MClassifierRole
WITHOUT_CLASSIFICATION	Connect the message at a new spot
WITHOUT_CLASSIFICATION	case 3 & 4
WITHOUT_CLASSIFICATION	MMessage
WITHOUT_CLASSIFICATION	(MMessage)
WITHOUT_CLASSIFICATION	(MMessage)
WITHOUT_CLASSIFICATION	(MMessage)
WITHOUT_CLASSIFICATION	(MMessage)
WITHOUT_CLASSIFICATION	MClassifierRole
WITHOUT_CLASSIFICATION	If no variable name was given, then retain the one in the model.
WITHOUT_CLASSIFICATION	If no function-name was given, then retain the one in the model.
WITHOUT_CLASSIFICATION	Store the guard, i.e. condition or iteration expression, in the recurrence field of the Action:
WITHOUT_CLASSIFICATION	If there was no Action yet, create a CallAction:
WITHOUT_CLASSIFICATION	Things are strange if there are more than one candidate root, it has no obvious interpretation in terms of a call tree.
WITHOUT_CLASSIFICATION	MMessage
WITHOUT_CLASSIFICATION	MMessage
WITHOUT_CLASSIFICATION	Jaap Branderhorst 2002-23-09 added next lines to link parameters and operations to the figs that represent them
WITHOUT_CLASSIFICATION	We can do nothing if we don't have both the use case and extension point.
WITHOUT_CLASSIFICATION	Parse the string to creat a new extension point.
WITHOUT_CLASSIFICATION	If we got back null we interpret this as meaning delete the reference to the extension point from the use case, otherwise we set the fields of the extension point to the values in newEp.
WITHOUT_CLASSIFICATION	Build a new extension point
WITHOUT_CLASSIFICATION	The empty string. Return null
WITHOUT_CLASSIFICATION	Handle Derived:
WITHOUT_CLASSIFICATION	If we are given the null string, return immediately, so that the extensionpoint is removed.
WITHOUT_CLASSIFICATION	A string of the form "location". This will be confused by the string ":", so we pick this out as an instruction to clear both name and location.
WITHOUT_CLASSIFICATION	A string of the form "name:location". Discard the middle token (":")
WITHOUT_CLASSIFICATION	Read past the colon.
WITHOUT_CLASSIFICATION	The string to build
WITHOUT_CLASSIFICATION	Get the fields we want
WITHOUT_CLASSIFICATION	Put in the name field if it's there
WITHOUT_CLASSIFICATION	Put in the location field if it's there
WITHOUT_CLASSIFICATION	First we decode the string:
WITHOUT_CLASSIFICATION	Secondly we check the previous model structure:
WITHOUT_CLASSIFICATION	And 3rd, we adapt the model:
WITHOUT_CLASSIFICATION	Same class, other operation
WITHOUT_CLASSIFICATION	Other class
WITHOUT_CLASSIFICATION	We found the classifier, now go find the operation:
WITHOUT_CLASSIFICATION	Here we located the new classifier with its operation.
WITHOUT_CLASSIFICATION	the text was: {frozen}
WITHOUT_CLASSIFICATION	the text was: {frozen = false}
WITHOUT_CLASSIFICATION	the text was: {frozen = true}
WITHOUT_CLASSIFICATION	Copy returned parameters because it will be a live collection for MDR
WITHOUT_CLASSIFICATION	Should we be getting this from the GUI? BT 11 aug 2002
WITHOUT_CLASSIFICATION	no type defined yet
WITHOUT_CLASSIFICATION	If the current property occurs a second time in the given list of properties, then skip it:
WITHOUT_CLASSIFICATION	This automatically pulls in a TagDefinition from the profile:
WITHOUT_CLASSIFICATION	The TV existed, but maybe it was not "true":
WITHOUT_CLASSIFICATION	TODO: For UML2: Check if the type of the TV is String.
WITHOUT_CLASSIFICATION	Generate all the existing internal transitions, so that we can compare them as text with the newly entered ones.
WITHOUT_CLASSIFICATION	strip any trailing semi-colons
WITHOUT_CLASSIFICATION	This would be solution (1): Model.getExtensionMechanismsHelper().setDataValues( taggedValue, new String[] {"false"});
WITHOUT_CLASSIFICATION	There are 2 possibilities: either (1) we follow the traditional notation philosophy, and set the tagged value to false, or (2) we restore to the pristine situation and delete the taggedValue (whatever the value was). I chose the latter (mvw).
WITHOUT_CLASSIFICATION	Allow concatenation order and separator to be localized
WITHOUT_CLASSIFICATION	Parameter etc.
WITHOUT_CLASSIFICATION	"in" is the default
WITHOUT_CLASSIFICATION	"in"
WITHOUT_CLASSIFICATION	return nothing
WITHOUT_CLASSIFICATION	it can still be null if the UML element did not have a multiplicity defined.
WITHOUT_CLASSIFICATION	Let's not be picky about the brackets - just remove them:
WITHOUT_CLASSIFICATION	get the classifier
WITHOUT_CLASSIFICATION	the State of a ClassifierInState is removed, so let's reduce it to a Classifier.
WITHOUT_CLASSIFICATION	the model is changed - job done
WITHOUT_CLASSIFICATION	Strings
WITHOUT_CLASSIFICATION	Remove the states that did not match.
WITHOUT_CLASSIFICATION	Now we have to see if any state in any statemachine of classifier is named [name]. If so, then we only have to link the state to c.
WITHOUT_CLASSIFICATION	the model is changed - our job is done
WITHOUT_CLASSIFICATION	the model is changed - our job is done
WITHOUT_CLASSIFICATION	no state named s is found, so we have to reject the user's input
WITHOUT_CLASSIFICATION	Finally, do the adaptations:
WITHOUT_CLASSIFICATION	then c is a "normal" Classifier UML states
WITHOUT_CLASSIFICATION	let's create a new ClassifierInState with the correct links
WITHOUT_CLASSIFICATION	This updates the diagram - hence as last statement:
WITHOUT_CLASSIFICATION	case 2
WITHOUT_CLASSIFICATION	case 3
WITHOUT_CLASSIFICATION	We can distinguish between 4 cases: 1. A trigger is given. None exists yet. 2. The trigger was present, and it is the same type, or a different type, and its text is changed, or the same. 3. A trigger is not given. None exists yet. 4. The name of the trigger was present, but is removed. The reaction in these cases should be: 1. Find the referred trigger (issue 5988) or create a new one, and hook it to the transition. 2. Rename the trigger. 3. Nop. 4. Unhook and erase the existing trigger.
WITHOUT_CLASSIFICATION	if no classifier has been set, then entering a state is not useful, so the user's input has to be rejected.
WITHOUT_CLASSIFICATION	TODO: If the next line trows an exception, then what do we do with the remainder of the parsed/to be parsed lines?
WITHOUT_CLASSIFICATION	Add this new one, and mark it to be retained:
WITHOUT_CLASSIFICATION	Process the final list of internal transitions, and hook it to the state:
WITHOUT_CLASSIFICATION	don't forget to remove old internals!
WITHOUT_CLASSIFICATION	Make next accesses to this instance predictable:
WITHOUT_CLASSIFICATION	and hook in the new ones:
WITHOUT_CLASSIFICATION	the ActionExpression
WITHOUT_CLASSIFICATION	let's look for a TimeEvent, ChangeEvent, CallEvent or SignalEvent
WITHOUT_CLASSIFICATION	operation(paramlist)
WITHOUT_CLASSIFICATION	the part after the || is for when there's nothing between the ()
WITHOUT_CLASSIFICATION	It is safe to give a null to the next function, since a statemachine is always composed by a model anyhow.
WITHOUT_CLASSIFICATION	else the empty s will do
WITHOUT_CLASSIFICATION	case 1 and 2
WITHOUT_CLASSIFICATION	language
WITHOUT_CLASSIFICATION	Do not set the name.
WITHOUT_CLASSIFICATION	Do not set the name.
WITHOUT_CLASSIFICATION	This case is a bit different, because of the parameters. If the event already exists, the parameters are ignored.
WITHOUT_CLASSIFICATION	when(...)
WITHOUT_CLASSIFICATION	signalname
WITHOUT_CLASSIFICATION	and parse the parameter list
WITHOUT_CLASSIFICATION	And hook it to the transition immediately, so that an exception can not cause it to remain dangling:
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	yes, there are more:
WITHOUT_CLASSIFICATION	strip any trailing semi-colons
WITHOUT_CLASSIFICATION	Parameter etc.
WITHOUT_CLASSIFICATION	"in" is the default
WITHOUT_CLASSIFICATION	"in"
WITHOUT_CLASSIFICATION	return nothing
WITHOUT_CLASSIFICATION	and parse the parameter list
WITHOUT_CLASSIFICATION	case 2
WITHOUT_CLASSIFICATION	Just change the time expression
WITHOUT_CLASSIFICATION	we have an event without expression
WITHOUT_CLASSIFICATION	It's a time-event now, but was of another type before!
WITHOUT_CLASSIFICATION	Just change the ChangeExpression
WITHOUT_CLASSIFICATION	Create a new expression:
WITHOUT_CLASSIFICATION	The parsed text describes a change-event, but the model contains another type!
WITHOUT_CLASSIFICATION	Just change the Name and linked operation
WITHOUT_CLASSIFICATION	TODO: Change the linked operation.
WITHOUT_CLASSIFICATION	Just change the Name and linked signal
WITHOUT_CLASSIFICATION	case 3 and 4
WITHOUT_CLASSIFICATION	case 3
WITHOUT_CLASSIFICATION	case 3
WITHOUT_CLASSIFICATION	case 4 erase it
WITHOUT_CLASSIFICATION	case 4 erase it
WITHOUT_CLASSIFICATION	Do not check if the parameters match.
WITHOUT_CLASSIFICATION	case 1
WITHOUT_CLASSIFICATION	NSUML does this (?) Model.getFacade().setGuard(trans, g);
WITHOUT_CLASSIFICATION	No text. We may remove the literal.
WITHOUT_CLASSIFICATION	No non-white chars in text? remove literal!
WITHOUT_CLASSIFICATION	Heuristic algorithm: do not show stereotypes if there is no name.
WITHOUT_CLASSIFICATION	@see javax.swing.JComponent#setVisible(boolean)
WITHOUT_CLASSIFICATION	strip any trailing semi-colons
WITHOUT_CLASSIFICATION	construct bases string (comma separated)
WITHOUT_CLASSIFICATION	Great! The class already existed - just use it.
WITHOUT_CLASSIFICATION	If no base was typed, then only set the name:
WITHOUT_CLASSIFICATION	Only set the name if the base was found:
WITHOUT_CLASSIFICATION	If the base was not changed, then only set the name:
WITHOUT_CLASSIFICATION	get the associationRole name
WITHOUT_CLASSIFICATION	Let's create a class with the given name, otherwise the user will not understand why we refuse his input!
WITHOUT_CLASSIFICATION	Only instantiate when we need it.
WITHOUT_CLASSIFICATION	If the base is already set to this assoc, then do not set it again. This check is needed, otherwise the setbase() below gives an exception.
WITHOUT_CLASSIFICATION	2002-07-31 Jaap Branderhorst from here made visibility etc. configurable
WITHOUT_CLASSIFICATION	get the base association name
WITHOUT_CLASSIFICATION	no instantiations
WITHOUT_CLASSIFICATION	The next one defaults to TRUE, to stay compatible with older ArgoUML versions that did not have this setting:
WITHOUT_CLASSIFICATION	end of OCLEvaluator
WITHOUT_CLASSIFICATION	look for associations
WITHOUT_CLASSIFICATION	look for associations
WITHOUT_CLASSIFICATION	MAssociationEnd
WITHOUT_CLASSIFICATION	MParameter
WITHOUT_CLASSIFICATION	MAssociationEnd
WITHOUT_CLASSIFICATION	The ocl toolkit does not like void return types
WITHOUT_CLASSIFICATION	MClassifiers cannot be Bag
WITHOUT_CLASSIFICATION	MClassifier
WITHOUT_CLASSIFICATION	first search for appropriate attributes
WITHOUT_CLASSIFICATION	first search for appropriate attributes
WITHOUT_CLASSIFICATION	MClassifier
WITHOUT_CLASSIFICATION	MOperation
WITHOUT_CLASSIFICATION	MOperation
WITHOUT_CLASSIFICATION	... and not incompletely imported
WITHOUT_CLASSIFICATION	Query checking added 05/21/01, sz9
WITHOUT_CLASSIFICATION	Query checking added 05/21/01, sz9
WITHOUT_CLASSIFICATION	end class OCLExpander
WITHOUT_CLASSIFICATION	skip first parameter == return type
WITHOUT_CLASSIFICATION	skip first parameter == return type
WITHOUT_CLASSIFICATION	Only look at classes...
WITHOUT_CLASSIFICATION	abstract classes are hardly ever singletons
WITHOUT_CLASSIFICATION	and not association classes
WITHOUT_CLASSIFICATION	with a name...
WITHOUT_CLASSIFICATION	If there is an attribute which is not static => no problem
WITHOUT_CLASSIFICATION	If there is an outgoing association => no problem
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	Only look at classes
WITHOUT_CLASSIFICATION	Only look at classes
WITHOUT_CLASSIFICATION	Check for Singleton stereotype, uninitialised instance variables and outgoing associations, as per JavaDoc above.
WITHOUT_CLASSIFICATION	Found no such attribute
WITHOUT_CLASSIFICATION	We only look at singletons
WITHOUT_CLASSIFICATION	We only look at singletons
WITHOUT_CLASSIFICATION	end class CrSingletonViolatedOnlyPrivateConstructors
WITHOUT_CLASSIFICATION	NOTE: For historical reasons true == hide, so we need to invert the sense of this
WITHOUT_CLASSIFICATION	end class CrEmptyPackage
WITHOUT_CLASSIFICATION	At this stage during loading, the diagrams are not created yet - so we have to store this name for later use.
WITHOUT_CLASSIFICATION	pw.close();
WITHOUT_CLASSIFICATION	Retain the previous project file even when the save operation crashes in the middle. Also create a backup file after saving.
WITHOUT_CLASSIFICATION	project.setFile(file);
WITHOUT_CLASSIFICATION	for AndroMDA profiles
WITHOUT_CLASSIFICATION	Retain the previous project file even when the save operation crashes in the middle. Also create a backup file after saving.
WITHOUT_CLASSIFICATION	Give the parser a map of model elements keyed by their UUID. This is used to allocate figs to their owner using the "href" attribute in PGML.
WITHOUT_CLASSIFICATION	if save did not raise an exception and name+"#" exists move name+"#" to name+"~" this is the correct backup file
WITHOUT_CLASSIFICATION	If we get a 2nd error, just ignore it
WITHOUT_CLASSIFICATION	frank: in case of exception delete name and mv name+"#" back to name if name+"#" exists this is the "rollback" to old file
WITHOUT_CLASSIFICATION	we have to give a message to user and set the system to unsaved!
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Should never happen - something's really wrong
WITHOUT_CLASSIFICATION	main parsing methods
WITHOUT_CLASSIFICATION	@see java.io.InputStream#close()
WITHOUT_CLASSIFICATION	@see java.io.InputStream#read()
WITHOUT_CLASSIFICATION	@see java.io.InputStream#read(byte[], int, int)
WITHOUT_CLASSIFICATION	if save did not raise an exception and name+"#" exists move name+"#" to name+"~" this is the correct backup file
WITHOUT_CLASSIFICATION	frank: in case of exception delete name and mv name+"#" back to name if name+"#" exists this is the "rollback" to old file
WITHOUT_CLASSIFICATION	we have to give a message to user and set the system to unsaved!
WITHOUT_CLASSIFICATION	boolean upgradeRequired = !checkVersion(fileVersion, releaseVersion)
WITHOUT_CLASSIFICATION	Upgrade is in the way for UML2 projects, so we turn it off in that case:
WITHOUT_CLASSIFICATION	Load .argo project descriptor
WITHOUT_CLASSIFICATION	Load the rest
WITHOUT_CLASSIFICATION	Copy the todo items after the model and diagrams so that any model elements or figs that the todo items refer to will exist before creating critics.
WITHOUT_CLASSIFICATION	first read the .argo file from Zip
WITHOUT_CLASSIFICATION	Keep reading till we hit the <argo> tag
WITHOUT_CLASSIFICATION	Get the version from the tag.
WITHOUT_CLASSIFICATION	Skip 1 lines
WITHOUT_CLASSIFICATION	Loop round loading the diagrams
WITHOUT_CLASSIFICATION	private EventListenerList listenerList = new EventListenerList();
WITHOUT_CLASSIFICATION	Skip the 2 lines <?xml version="1.0" encoding="UTF-8" ?> <!DOCTYPE todo SYSTEM "todo.dtd" >
WITHOUT_CLASSIFICATION	Keep reading till we get the left bracket of an opening tag
WITHOUT_CLASSIFICATION	Compare each following character to see that it matches the tag we want
WITHOUT_CLASSIFICATION	We also want to match with the right bracket of the tag or some other terminator
WITHOUT_CLASSIFICATION	We've found the matching tag but do we have the correct instance with matching attributes?
WITHOUT_CLASSIFICATION	Read the name of the child tag and then reset read position back to that child tag.
WITHOUT_CLASSIFICATION	Skip any whitespace till we should be on an equals sign.
WITHOUT_CLASSIFICATION	Skip any whitespace till we should be on a quote symbol.
WITHOUT_CLASSIFICATION	No other uses of string in PGMLHandler
WITHOUT_CLASSIFICATION	Handle other uses of <private> contents
WITHOUT_CLASSIFICATION	Sanity check - the returned path item placement strategy should match the one in the UML. If it doesn't, it could be that the UML was created with an older argo version, and the new argo version use a different placement strategy. If they don't match, just use the default.
WITHOUT_CLASSIFICATION	If any of the values are null, ignore the element.
WITHOUT_CLASSIFICATION	If the PathItemPlacement was unknown, leave the diagram with the default settings.
WITHOUT_CLASSIFICATION	For a match to be found, it has to have the same owner, and the same long class name.
WITHOUT_CLASSIFICATION	A list of the path item attributes for this container. The list is populated during parsing, them processed at endElement() private List<Hashtable<String, String>> pathItemAttrs = new ArrayList<Hashtable<String, String>>();
WITHOUT_CLASSIFICATION	This code has to go within the startElement block after the strings have been matched.
WITHOUT_CLASSIFICATION	Method 1: (collect data and assign later in endElement() method). Hashtable<String, String> ht = new Hashtable<String, String>(); ht.put("classname", classname); ht.put("figclassname", figclassname); ht.put("ownerhref", ownerhref); ht.put("angle", angle); ht.put("offset", offset); pathItemAttrs.add(ht);
WITHOUT_CLASSIFICATION	Create a new diagram wide settings block which is backed by the project-wide defaults that we were passed
WITHOUT_CLASSIFICATION	Ignore non-private elements within FigNode groups
WITHOUT_CLASSIFICATION	Handle ItemUID in container contents
WITHOUT_CLASSIFICATION	Discard class name, x y w h
WITHOUT_CLASSIFICATION	The owner should always have already been set in the constructor
WITHOUT_CLASSIFICATION	happens when 'is' comes from a zip file
WITHOUT_CLASSIFICATION	continue with null stream, readDiagram(...) will take care of it
WITHOUT_CLASSIFICATION	TODO: Localize these
WITHOUT_CLASSIFICATION	If the id does not look like a top-level Fig then we can assume that this is an id of a FigEdgePort inside some FigEdge. So extract the FigEdgePort from the FigEdge and return that as the FigNode.
WITHOUT_CLASSIFICATION	If there is no dot then this must be a top level Fig and can be assumed to be a FigNode.
WITHOUT_CLASSIFICATION	We are looking first to match with 3 different constructor types. We would not expect a Fig to have any mix of these. Any constructor other than these should be deprecated so we look for these first. Fig(DiagramEdgeSettings, DiagramSettings) Fig(Object, Rectangle, DiagramSettings) Fig(Rectangle, DiagramSettings)
WITHOUT_CLASSIFICATION	FigNodeModelElements should match here
WITHOUT_CLASSIFICATION	FigEdgeModelElements should match here (they have no bounds)
WITHOUT_CLASSIFICATION	Retain the previous project file even when the save operation crashes in the middle. Also create a backup file after saving.
WITHOUT_CLASSIFICATION	frank: in case of exception delete name and mv name+"#" back to name if name+"#" exists this is the "rollback" to old file
WITHOUT_CLASSIFICATION	Fall back to GEF's handling if we couldn't find an appropriate constructor
WITHOUT_CLASSIFICATION	myWriter,
WITHOUT_CLASSIFICATION	Empty constructor
WITHOUT_CLASSIFICATION	Empty constructor
WITHOUT_CLASSIFICATION	for compatibility with older format
WITHOUT_CLASSIFICATION	<model> is not used in current implementation
WITHOUT_CLASSIFICATION	<model> is not used in current implementation
WITHOUT_CLASSIFICATION	|| model == null
WITHOUT_CLASSIFICATION	|| model == null
WITHOUT_CLASSIFICATION	we have to give a message to user and set the system to unsaved!
WITHOUT_CLASSIFICATION	Write out header section
WITHOUT_CLASSIFICATION	Note we assume members are ordered correctly already
WITHOUT_CLASSIFICATION	let's initialize the progressMgr
WITHOUT_CLASSIFICATION	Run through any stylesheet upgrades
WITHOUT_CLASSIFICATION	Don't use systemId here or it will get opened in preference to inputStream.
WITHOUT_CLASSIFICATION	UML 2.x files could also contain a profile model. Try again with uml:Profile as main tag.
WITHOUT_CLASSIFICATION	let's update the progress
WITHOUT_CLASSIFICATION	If we're trying to load a file from a future version complain and refuse.
WITHOUT_CLASSIFICATION	Empty constructor
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	No more we can do here on failure
WITHOUT_CLASSIFICATION	Buffer containing characters which have been decoded from the bytes in inBB.
WITHOUT_CLASSIFICATION	RegEx pattern for XML declaration and, optionally, DOCTYPE Backslashes are doubled up - one for Java, one for Regex
WITHOUT_CLASSIFICATION	Convert from bytes back to characters
WITHOUT_CLASSIFICATION	rewind our character buffer
WITHOUT_CLASSIFICATION	Remove anything that matches our pattern
WITHOUT_CLASSIFICATION	Remove null characters at the end
WITHOUT_CLASSIFICATION	Reencode the remaining characters as bytes again
WITHOUT_CLASSIFICATION	and write them to our output stream
WITHOUT_CLASSIFICATION	Skip the <?xml... first line
WITHOUT_CLASSIFICATION	cat.debug("NOTE: TodoParser handleStartTag:" + e.getName());
WITHOUT_CLASSIFICATION	NOP
WITHOUT_CLASSIFICATION	This is expected to be safe, don't add a try block here
WITHOUT_CLASSIFICATION	cat.debug("Added ToDoItem: " + _headline);
WITHOUT_CLASSIFICATION	static variables
WITHOUT_CLASSIFICATION	@see org.xml.sax.ContentHandler#startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)
WITHOUT_CLASSIFICATION	@see org.xml.sax.ContentHandler#endElement(java.lang.String, java.lang.String, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.xml.sax.ContentHandler#characters(char[], int, int)
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	Retain the previous project file even when the save operation crashes in the middle. Also create a backup file after saving.
WITHOUT_CLASSIFICATION	These strings match the XML element names in the argo.tee exactly.
WITHOUT_CLASSIFICATION	The following is deprecated, but can never be removed to preserve backward compatibility with old project files
WITHOUT_CLASSIFICATION	protected methods
WITHOUT_CLASSIFICATION	empty constructor
WITHOUT_CLASSIFICATION	abstract methods
WITHOUT_CLASSIFICATION	non-abstract methods
WITHOUT_CLASSIFICATION	e.g:org.argouml.uml.generator.ui.ClassGenerationDialog -> poseidon.jar
WITHOUT_CLASSIFICATION	convenience methods
WITHOUT_CLASSIFICATION	end class SAXParserBase
WITHOUT_CLASSIFICATION	Stop UI interception
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see javax.swing.filechooser.FileFilter#getDescription()
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	Retain the previous project file even when the save operation crashes in the middle. Also create a backup file after saving.
WITHOUT_CLASSIFICATION	if save did not raise an exception and name+"#" exists move name+"#" to name+"~" this is the correct backup file
WITHOUT_CLASSIFICATION	frank: in case of exception delete name and mv name+"#" back to name if name+"#" exists this is the "rollback" to old file
WITHOUT_CLASSIFICATION	we have to give a message to user and set the system to unsaved!
WITHOUT_CLASSIFICATION	we have to give a message to user and set the system to unsaved!
WITHOUT_CLASSIFICATION	Make sure the file doesn't exist so the user will get prompted to choose a new name
WITHOUT_CLASSIFICATION	possibly use the following instead MemberFilePersister persister = new DiagramMemberFilePersister();
WITHOUT_CLASSIFICATION	class methods
WITHOUT_CLASSIFICATION	end class XMLTokenTableBase
WITHOUT_CLASSIFICATION	These are the file formats I know about:
WITHOUT_CLASSIFICATION	If anything goes wrong return the stack trace as a string so that we get some useful feedback.
WITHOUT_CLASSIFICATION	Return just the comment edges for a specific layer. TODO: Document: Diagram / layer? @param diagram The diagram. @return a {@link List} with the edges.
WITHOUT_CLASSIFICATION	make sure this setting exists in the configuration file to facilitate changing:
WITHOUT_CLASSIFICATION	Is row at top of screen?
WITHOUT_CLASSIFICATION	@see javax.swing.filechooser.FileFilter#getDescription()
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	FileFilter API
WITHOUT_CLASSIFICATION	this check for files without extension...
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	end class XMLElement
WITHOUT_CLASSIFICATION	for AndroMDA
WITHOUT_CLASSIFICATION	For some reason, this alleged directory is a single file This could be that there is some confusion or just the normal, that a single file was selected and is supposed to be imported.
WITHOUT_CLASSIFICATION	Get the contents of the directory
WITHOUT_CLASSIFICATION	The following test can cause trouble with links, because links are accepted as directories, even if they link files. Links could also result in infinite loops. For this reason we don't do this traversing recursively.
WITHOUT_CLASSIFICATION	If this file is a directory
WITHOUT_CLASSIFICATION	load profile name
WITHOUT_CLASSIFICATION	Yes, scroll up one row
WITHOUT_CLASSIFICATION	Testing: Works Ok.
WITHOUT_CLASSIFICATION	if there is only one package in the model, we should suppose it's the profile model, if there is more than one, we take the ones marked as <<profile>>
WITHOUT_CLASSIFICATION	load profile dependencies
WITHOUT_CLASSIFICATION	Set up the property panels for critics:
WITHOUT_CLASSIFICATION	init profiles defined in jar files
WITHOUT_CLASSIFICATION	We have our own UML2 profile, but it is not used. Instead, by the following line the build-in eclipse UML2 standard profile and primitive types implementation are used.
WITHOUT_CLASSIFICATION	Missing WFRs
WITHOUT_CLASSIFICATION	Association Class 4.5.3.2 [1]
WITHOUT_CLASSIFICATION	Testing: does not fire.
WITHOUT_CLASSIFICATION	Testing: does not fire.
WITHOUT_CLASSIFICATION	4.5.3.2 [2]
WITHOUT_CLASSIFICATION	Behavioral Feature 4.5.3.5 [2]
WITHOUT_CLASSIFICATION	TODO: Partly overlaps CrOppEndVsAttr.
WITHOUT_CLASSIFICATION	Tested with fabricated XMI - OK.
WITHOUT_CLASSIFICATION	Tested with fabricated XMI - OK.
WITHOUT_CLASSIFICATION	Tested with fabricated XMI - OK.
WITHOUT_CLASSIFICATION	4.5.3.20 [4]
WITHOUT_CLASSIFICATION	+ "a.allConnections->exists(r | r.type.oclIsKindOf(Actor)) and "
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAIfExpression(tudresden.ocl.parser.node.AIfExpression)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseALogicalExpressionTail(tudresden.ocl.parser.node.ALogicalExpressionTail)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseARelationalExpressionTail(tudresden.ocl.parser.node.ARelationalExpressionTail)
WITHOUT_CLASSIFICATION	UseCase 4.11.3.5 [2]
WITHOUT_CLASSIFICATION	Classifier 4.5.3.8 [5]
WITHOUT_CLASSIFICATION	GeneralizableElement 4.5.3.20 [1]
WITHOUT_CLASSIFICATION	DataType 4.5.3.12 [1]
WITHOUT_CLASSIFICATION	Actor 4.11.3.1 [1]
WITHOUT_CLASSIFICATION	Namespace 4.5.3.26 [2]
WITHOUT_CLASSIFICATION	UseCase 4.11.3.5 [1]
WITHOUT_CLASSIFICATION	Actor 4.11.3.1 [2]
WITHOUT_CLASSIFICATION	Tested OK, except in some cases, depending on the sequence of the EPs. Probably the implementation of "forAll (x, y | ..." does not cover all combinations.
WITHOUT_CLASSIFICATION	UseCase 4.11.3.5 [4]
WITHOUT_CLASSIFICATION	UseCase 4.11.3.5 [3]
WITHOUT_CLASSIFICATION	ActionState 4.13.3.2 [3] Issue 715
WITHOUT_CLASSIFICATION	no default type for UML2
WITHOUT_CLASSIFICATION	the UML Profile is always present and default
WITHOUT_CLASSIFICATION	register the built-in profiles
WITHOUT_CLASSIFICATION	if an exception is raised file is unusable
WITHOUT_CLASSIFICATION	if the list does not exist add the code generation and good practices profiles as default
WITHOUT_CLASSIFICATION	this profile could have not been loaded when the default profile configuration was loaded at first, so we need to do it again
WITHOUT_CLASSIFICATION	We assume profile is contained in a single extent
WITHOUT_CLASSIFICATION	Nothing to delete if we couldn't get the packages
WITHOUT_CLASSIFICATION	If we found an old-style name, update it to the new package name
WITHOUT_CLASSIFICATION	Make sure the names didn't change again
WITHOUT_CLASSIFICATION	simply use name as it is
WITHOUT_CLASSIFICATION	if element is an AssociationEnd use the namespace of containing association
WITHOUT_CLASSIFICATION	if one side is null, compare with the equality operator
WITHOUT_CLASSIFICATION	XXX: hypotheses for AFeatureCall: fwd = op, val = head
WITHOUT_CLASSIFICATION	hypotheses no time expression (only invariants)
WITHOUT_CLASSIFICATION	For a iterator call we should provide: (a) the variables (b) the expression to be evaluated on each step (c) the lambda-evaluator to evaluate it
WITHOUT_CLASSIFICATION	XXX hypothesis: no time expression (inv)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAConstraint(tudresden.ocl.parser.node.AConstraint)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAClassifierContext(tudresden.ocl.parser.node.AClassifierContext)
WITHOUT_CLASSIFICATION	these operations are ok for lists too
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, "OCL FEATURE CALL: " + subject + ""+ type +""+ feature + "" + parameters);
WITHOUT_CLASSIFICATION	XXX this should be done in CollectionsModelInterpreter but it can't trigger another invokeFeature...
WITHOUT_CLASSIFICATION	Logger. private static final Logger LOG = Logger.getLogger(DefaultOclEvaluator.class.getName());
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, "OCL: " + ocl);
WITHOUT_CLASSIFICATION	propagate
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	if test fails this element should not be in the result set
WITHOUT_CLASSIFICATION	if test is ok this element should not be in the result set
WITHOUT_CLASSIFICATION	these operations are ok for bags too
WITHOUT_CLASSIFICATION	4.5.2.1 Abstraction
WITHOUT_CLASSIFICATION	4.5.2.3 Association
WITHOUT_CLASSIFICATION	Additional Operation 4.5.3.1 [1]
WITHOUT_CLASSIFICATION	4.5.2.5 AssociationEnd
WITHOUT_CLASSIFICATION	Additional Operation 4.5.3.3 [1]
WITHOUT_CLASSIFICATION	4.5.2.6 Attribute
WITHOUT_CLASSIFICATION	4.5.2.7 BehavioralFeature
WITHOUT_CLASSIFICATION	4.5.2.8 Binding
WITHOUT_CLASSIFICATION	4.5.2.9 Class
WITHOUT_CLASSIFICATION	4.5.2.10 Classifier
WITHOUT_CLASSIFICATION	TODO specifiedEnd??
WITHOUT_CLASSIFICATION	4.5.2.11 Comment
WITHOUT_CLASSIFICATION	4.5.2.12 Component
WITHOUT_CLASSIFICATION	Additional Operation in 4.5.3.9
WITHOUT_CLASSIFICATION	No, scroll down one row
WITHOUT_CLASSIFICATION	4.5.2.14 Dependency
WITHOUT_CLASSIFICATION	4.5.2.18 ElementOwnership
WITHOUT_CLASSIFICATION	4.5.2.19 Enumeration
WITHOUT_CLASSIFICATION	4.5.2.20 EnumerationLiteral
WITHOUT_CLASSIFICATION	4.5.2.21 Feature
WITHOUT_CLASSIFICATION	4.5.2.23 Generalizable Element
WITHOUT_CLASSIFICATION	Additional Operation in 4.5.3.20
WITHOUT_CLASSIFICATION	4.5.2.26 Method
WITHOUT_CLASSIFICATION	4.5.2.27 ModelElement
WITHOUT_CLASSIFICATION	avoiding null names
WITHOUT_CLASSIFICATION	As extended by 4.6.2.2
WITHOUT_CLASSIFICATION	Additional Operations in 4.5.3.25
WITHOUT_CLASSIFICATION	Additional Operations in 4.5.3.26
WITHOUT_CLASSIFICATION	4.5.2.29 Node
WITHOUT_CLASSIFICATION	4.5.2.30 Operation
WITHOUT_CLASSIFICATION	4.5.2.31 Parameter
WITHOUT_CLASSIFICATION	4.5.2.35 ProgrammingLanguageDataType
WITHOUT_CLASSIFICATION	Set the icon:
WITHOUT_CLASSIFICATION	@see java.lang.Object#equals(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.lang.Object#hashCode()
WITHOUT_CLASSIFICATION	@see java.awt.Component#getMinimumSize()
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	4.5.2.37 StructuralFeature
WITHOUT_CLASSIFICATION	4.5.2.38 TemplateArgument
WITHOUT_CLASSIFICATION	4.5.2.39 TemplateParameter
WITHOUT_CLASSIFICATION	4.11.3.5 UseCase
WITHOUT_CLASSIFICATION	The operation specificationPath results in a set containing all surrounding Namespaces that are not instances of Package. specificationPath : Set(Namespace) specificationPath = self.allSurroundingNamespaces->select(n | n.oclIsKindOf(Subsystem) or n.oclIsKindOf(Class))
WITHOUT_CLASSIFICATION	4.5.3.2 AssociationClass
WITHOUT_CLASSIFICATION	The operation allConnections results in the set of all AssociationEnds of the AssociationClass, including all connections defined by its parent (transitive closure).
WITHOUT_CLASSIFICATION	4.6.2.3 Stereotype
WITHOUT_CLASSIFICATION	stereotypeConstraint ?
WITHOUT_CLASSIFICATION	4.6.2.4 TagDefinition
WITHOUT_CLASSIFICATION	4.6.2.5 TaggedValue
WITHOUT_CLASSIFICATION	add adapters that do nothing for keyboard and mouse actions
WITHOUT_CLASSIFICATION	discard the event if its source is not from the correct type
WITHOUT_CLASSIFICATION	Guard against error conditions if climb search wasn't successful
WITHOUT_CLASSIFICATION	Sets the mouse cursor to hourglass mode
WITHOUT_CLASSIFICATION	Start receiving all events and consume them if necessary
WITHOUT_CLASSIFICATION	Activate the glass pane capabilities
WITHOUT_CLASSIFICATION	Stop receiving all events
WITHOUT_CLASSIFICATION	Deactivate the glass pane capabilities
WITHOUT_CLASSIFICATION	Sets the mouse cursor back to the regular pointer
WITHOUT_CLASSIFICATION	no initialization required
WITHOUT_CLASSIFICATION	end class SpacerPanel
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#setTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.Transferable#getTransferData(java.awt.datatransfer.DataFlavor)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.Transferable#getTransferDataFlavors()
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.Transferable#isDataFlavorSupported(java.awt.datatransfer.DataFlavor)
WITHOUT_CLASSIFICATION	@see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	Called when the user has pressed Save. Performs "Save" in all Tabs.
WITHOUT_CLASSIFICATION	Climb the component hierarchy until a RootPaneContainer is found or until the very top
WITHOUT_CLASSIFICATION	end class SplashPanel
WITHOUT_CLASSIFICATION	Retrieve an existing GlassPane if old one already exist or create a new one, otherwise return null
WITHOUT_CLASSIFICATION	Add settings from the settings registry.
WITHOUT_CLASSIFICATION	keep track of the visible window associated w/the component useful during event filtering
WITHOUT_CLASSIFICATION	show a chooser dialog for the file name, only xmi is allowed
WITHOUT_CLASSIFICATION	If a toolbar was requested, create an empty one.
WITHOUT_CLASSIFICATION	Increase width to accommodate all tabs on one row.
WITHOUT_CLASSIFICATION	TODO: Localize
WITHOUT_CLASSIFICATION	TODO: Localize
WITHOUT_CLASSIFICATION	Called when the user has pressed Cancel. Performs "Cancel" in all Tabs.
WITHOUT_CLASSIFICATION	end class TabText
WITHOUT_CLASSIFICATION	If a recursive call from setVisible(), just return
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	windowOpen state will be changed when window is activated
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	We have to tell the settings tab in which project the settings reside:
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	We only request focus the first time we become visible
WITHOUT_CLASSIFICATION	Use Case
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowOpened(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	Do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	Handle the same as an explicit cancel
WITHOUT_CLASSIFICATION	savePosition(prpTodo, TabToDo.class); savePosition(prpProperties, TabProps.class); savePosition(prpDocumentation, TabDocumentation.class); savePosition(prpStyle, TabStyle.class); savePosition(prpSource, TabSrc.class); savePosition(prpConstraints, TabConstraints.class); savePosition(prpTaggedValues, TabTaggedValues.class);
WITHOUT_CLASSIFICATION	defer work until fetched/visible
WITHOUT_CLASSIFICATION	Actor
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabKey()
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	loadPosition(prpTodo, TabToDo.class); loadPosition(prpProperties, TabProps.class); loadPosition(prpDocumentation, TabDocumentation.class); loadPosition(prpStyle, TabStyle.class); loadPosition(prpSource, TabSrc.class); loadPosition(prpConstraints, TabConstraints.class); loadPosition(prpTaggedValues, TabTaggedValues.class);
WITHOUT_CLASSIFICATION	------------- Rule management --------------
WITHOUT_CLASSIFICATION	----------- name -------------------------
WITHOUT_CLASSIFICATION	------ all rules ----------
WITHOUT_CLASSIFICATION	TODO: factor out @param rule the rule to be added
WITHOUT_CLASSIFICATION	Put the current pane in a scroll pane.
WITHOUT_CLASSIFICATION	end class StylePanelFigText
WITHOUT_CLASSIFICATION	NOTE: These must stay in this order to match rendering styles
WITHOUT_CLASSIFICATION	The boundary box as held in the target fig, and as listed in the boundary box style field (null if we don't have anything valid)
WITHOUT_CLASSIFICATION	Only reset the text if the two are not the same (i.e the fig has moved, rather than we've just edited the text, when setTargetBBox() will have made them the same). Note that styleBounds could be null, so we do the test this way round.
WITHOUT_CLASSIFICATION	Change the fill colour
WITHOUT_CLASSIFICATION	Change the line colour
WITHOUT_CLASSIFICATION	Can't do anything if we don't have a fig.
WITHOUT_CLASSIFICATION	Parse the boundary box text. Null is returned if it is empty or invalid, which causes no change. Otherwise we tell GEF we are making a change, make the change and tell GEF we've finished.
WITHOUT_CLASSIFICATION	Get the text in the field, and don't do anything if the field is empty.
WITHOUT_CLASSIFICATION	Parse the string as if possible
WITHOUT_CLASSIFICATION	Empty implementation - we only care about keyTyped
WITHOUT_CLASSIFICATION	Empty implementation - we only care about keyTyped
WITHOUT_CLASSIFICATION	ignored - will never be called
WITHOUT_CLASSIFICATION	add preloading progress bar?
WITHOUT_CLASSIFICATION	JasonsThemes
WITHOUT_CLASSIFICATION	TODO - lets pass in Project as a constructor argument
WITHOUT_CLASSIFICATION	Make up a default
WITHOUT_CLASSIFICATION	lafClass == null ||
WITHOUT_CLASSIFICATION	Set to the default LAF
WITHOUT_CLASSIFICATION	top, left, bottom, right
WITHOUT_CLASSIFICATION	If LAF is Metal (either set explicitly, or as the default)
WITHOUT_CLASSIFICATION	Set a custom LAF
WITHOUT_CLASSIFICATION	@see javax.swing.JTree#fireTreeCollapsed(javax.swing.tree.TreePath)
WITHOUT_CLASSIFICATION	@see javax.swing.JTree#setModel(javax.swing.tree.TreeModel)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getName()
WITHOUT_CLASSIFICATION	TODO: Localize
WITHOUT_CLASSIFICATION	TODO: Localize
WITHOUT_CLASSIFICATION	It looks better if the height increases, too
WITHOUT_CLASSIFICATION	TODO: 10 and 120 were found by trial and error. Calculate them.
WITHOUT_CLASSIFICATION	pack();
WITHOUT_CLASSIFICATION	Not localized:
WITHOUT_CLASSIFICATION	Alphabetic order!
WITHOUT_CLASSIFICATION	Alphabetic order!
WITHOUT_CLASSIFICATION	end class AboutBox
WITHOUT_CLASSIFICATION	Save project at slightly lower priority to keep UI responsive
WITHOUT_CLASSIFICATION	saves the project
WITHOUT_CLASSIFICATION	MVW: We should use default font sizes as much as possible. BTW, this impacts only the width, and reduces readibility:
WITHOUT_CLASSIFICATION	setFont(LookAndFeelMgr.getInstance().getSmallFont());
WITHOUT_CLASSIFICATION	This enables tooltips for tree; this one won't be shown:
WITHOUT_CLASSIFICATION	The default (16) puts the icons too close together:
WITHOUT_CLASSIFICATION	------------ methods that override JTree methods ---------
WITHOUT_CLASSIFICATION	If the name is too long or multi-line (e.g. for comments) then we reduce to the first line or 80 chars.
WITHOUT_CLASSIFICATION	Look for stereotype
WITHOUT_CLASSIFICATION	Use default formatting for any other type of UML element
WITHOUT_CLASSIFICATION	------------- other methods ------------------
WITHOUT_CLASSIFICATION	Labels at the left ...
WITHOUT_CLASSIFICATION	... and fields at the right.
WITHOUT_CLASSIFICATION	The user's full name:
WITHOUT_CLASSIFICATION	The user's email:
WITHOUT_CLASSIFICATION	The project description:
WITHOUT_CLASSIFICATION	This non-editable field shows the version of the ArgoUML that last saved this project:
WITHOUT_CLASSIFICATION	We need to fill the whole pane, so that the description field can take all available space:
WITHOUT_CLASSIFICATION	There is no default description.
WITHOUT_CLASSIFICATION	Defer all work until we're actually needed
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	these are blue in Metal Default Theme
WITHOUT_CLASSIFICATION	these are gray in Metal Default Theme
WITHOUT_CLASSIFICATION	ActionListener implementation
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getPrimary1()
WITHOUT_CLASSIFICATION	private JCheckBox jchbBold = null;
WITHOUT_CLASSIFICATION	find and add all subdirectories
WITHOUT_CLASSIFICATION	private JCheckBox jchbItalic = null;
WITHOUT_CLASSIFICATION	Initialize font faces list
WITHOUT_CLASSIFICATION	Most of this code originates from ActionOpenProject.
WITHOUT_CLASSIFICATION	Initialize font sizes list
WITHOUT_CLASSIFICATION	jContentPane.add(getJchbBold(), gridBagConstraints2); jContentPane.add(getJchbItalic(), gridBagConstraints3);
WITHOUT_CLASSIFICATION	Try adding the extension from the chosen filter.
WITHOUT_CLASSIFICATION	MouseListener implementation
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	these are blue in Metal Default Theme
WITHOUT_CLASSIFICATION	these are gray in Metal Default Theme
WITHOUT_CLASSIFICATION	KeyListener implementation
WITHOUT_CLASSIFICATION	ListSelectionListener implementation
WITHOUT_CLASSIFICATION	diagrams are not placed in search results
WITHOUT_CLASSIFICATION	Only return once per diagram so we don't, for example, find a class as a diagram element and also as a child of a package which is on the diagram
WITHOUT_CLASSIFICATION	no related
WITHOUT_CLASSIFICATION	TODO: tabs for class, state, usecase, help
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	TabResults has really large preferred height, so divide in half to reduce size of dialog which will be sized based on this preferred size.
WITHOUT_CLASSIFICATION	Load project at slightly lower priority to keep UI responsive
WITHOUT_CLASSIFICATION	JTabbedPane tabs = new JTabbedPane(); mainPanel.add(tabs, BorderLayout.CENTER); tabs.addTab("All Diagrams", allDiagrams);
WITHOUT_CLASSIFICATION	The south panel always has tabs - but they are added (later) elsewhere.
WITHOUT_CLASSIFICATION	loads the project
WITHOUT_CLASSIFICATION	default tab todo
WITHOUT_CLASSIFICATION	Special case for backward compatibility
WITHOUT_CLASSIFICATION	default tab todo
WITHOUT_CLASSIFICATION	Select prop panel if current panel is not appropriate for selected target
WITHOUT_CLASSIFICATION	not visible any more - so remove as listener
WITHOUT_CLASSIFICATION	Newly selected tab may have stale target info, so generate a new set target event for it to refresh it
WITHOUT_CLASSIFICATION	update the previously selected tab
WITHOUT_CLASSIFICATION	The other tabs need to be updated depending on the selection.
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	TODO: Quick return here for target == null? - tfm
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	---------------- listener management ----------------
WITHOUT_CLASSIFICATION	--------------- tree nodes -------------------------
WITHOUT_CLASSIFICATION	------------- tree structure -----------------
WITHOUT_CLASSIFICATION	see getValue(), setValue()
WITHOUT_CLASSIFICATION	Create a timer.
WITHOUT_CLASSIFICATION	Mount the glasspane on the component window
WITHOUT_CLASSIFICATION	keep track of the glasspane as an instance variable
WITHOUT_CLASSIFICATION	Start interception UI interactions
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	If action comes in with no modifiers, it is a pure keyboard event (e.g. spacebar), so do it. Anything else is probably a mouse event, so ignore it. Mouse events are dealt with by mousePressed() instead (see bottom of page).
WITHOUT_CLASSIFICATION	end class StylePanel
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	Make sure the correspondence that we depend on doesn't change
WITHOUT_CLASSIFICATION	getContentPane().add(_menuBar, BorderLayout.NORTH);
WITHOUT_CLASSIFICATION	allows me to ask "Do you want to save first?"
WITHOUT_CLASSIFICATION	Add listener for project changes
WITHOUT_CLASSIFICATION	add listener to get notified when active diagram changes
WITHOUT_CLASSIFICATION	Add a listener to focus changes. Rationale: reset the undo manager to start a new chain.
WITHOUT_CLASSIFICATION	We get many many events (why?), so let's filter:
WITHOUT_CLASSIFICATION	create the todopane
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.JFrame#getJMenuBar()
WITHOUT_CLASSIFICATION	@see java.awt.Component#setVisible(boolean)
WITHOUT_CLASSIFICATION	There are various details panes all of which could hold different tabs pages according to users settings. Place each pane in the required border area.
WITHOUT_CLASSIFICATION	Toolbar boundary is the area between the menu and the status bar. It contains the workarea at centre and the toolbar position north, south, east or west.
WITHOUT_CLASSIFICATION	Add target listeners for details panes
WITHOUT_CLASSIFICATION	Convenience methods to return saved width and height values
WITHOUT_CLASSIFICATION	In theory there can be multiple details pane (work in progress). It must first be determined which details page contains the properties tab. Bob Tarling 7 Dec 2002
WITHOUT_CLASSIFICATION	The trySave method results in the save taking place in another thread. If that completes without error the ProjectBrowser.exit() method will be called which will actually exist the system.
WITHOUT_CLASSIFICATION	end class WindowCloser
WITHOUT_CLASSIFICATION	the project changed
WITHOUT_CLASSIFICATION	Designer.TheDesigner.getToDoList().removeAllElements();
WITHOUT_CLASSIFICATION	update all panes
WITHOUT_CLASSIFICATION	/ TargetListener methods implemented so notified when selected diagram changes. Used to update the window title.
WITHOUT_CLASSIFICATION	this method is invoked from several places, so we have to check whether if the project uri is set or not
WITHOUT_CLASSIFICATION	does the file really exists?
WITHOUT_CLASSIFICATION	project file doesn't exist. let's pop up a message dialog..
WITHOUT_CLASSIFICATION	..and let's ask the user whether he wants to save the actual project into a new file or not
WITHOUT_CLASSIFICATION	save action has been cancelled
WITHOUT_CLASSIFICATION	Attempt to save this project under a new name.
WITHOUT_CLASSIFICATION	Prompt the user for the new name.
WITHOUT_CLASSIFICATION	let's call the real save method
WITHOUT_CLASSIFICATION	Repair any errors in the project
WITHOUT_CLASSIFICATION	notification of menu bar
WITHOUT_CLASSIFICATION	Simulate some errors to repair. Replace with junits - Bob
WITHOUT_CLASSIFICATION	Change to true to enable testing
WITHOUT_CLASSIFICATION	A Fig with a null owner
WITHOUT_CLASSIFICATION	A Fig with a null layer
WITHOUT_CLASSIFICATION	A Fig with a removed model element
WITHOUT_CLASSIFICATION	Remove the old project first. It's wasteful to create a temp empty project, but too much of ArgoUML depends on having a current project
WITHOUT_CLASSIFICATION	Let's save this project in the mru list
WITHOUT_CLASSIFICATION	Do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	Let's save this project as the last used one in the configuration file
WITHOUT_CLASSIFICATION	an error that can be corrected by the user, so no stack trace, but instead an explanation and a hint how to fix
WITHOUT_CLASSIFICATION	an error that can be corrected by the user, so no stack trace, but instead an explanation and a hint how to fix
WITHOUT_CLASSIFICATION	This is temporary. Load project should create a new project with its own UndoManager and so there should be no Command
WITHOUT_CLASSIFICATION	Make sure save action is always reinstated
WITHOUT_CLASSIFICATION	We clear the save-required flag on the Swing event thread in the hopes that it gets done after any other background work (listener updates) that is being done there
WITHOUT_CLASSIFICATION	adding project files icon
WITHOUT_CLASSIFICATION	end class ProjectBrowser
WITHOUT_CLASSIFICATION	Defer initialization until we're visible
WITHOUT_CLASSIFICATION	Make the result inmediately visible in case of apply:
WITHOUT_CLASSIFICATION	Disabled since it gives various problems: e.g. the toolbar icons get too wide. Also the default does not give the new java 5.0 looks. SwingUtilities.updateComponentTreeUI(SwingUtilities.getRootPane(this));
WITHOUT_CLASSIFICATION	filled in later
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabSave()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabCancel()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabKey()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabPanel()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getRowCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	Do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	Create new menu item if it doesn't exist for this class.
WITHOUT_CLASSIFICATION	Make this change persistant
WITHOUT_CLASSIFICATION	If menus don't containt menu item necessary for this class, create it
WITHOUT_CLASSIFICATION	If visibility is already changed for this class, respect it.
WITHOUT_CLASSIFICATION	If there is persistant state for this toolbar, respect it, or add it to persistance data
WITHOUT_CLASSIFICATION	Queue to event thread to prevent race during close
WITHOUT_CLASSIFICATION	Add toolbar.
WITHOUT_CLASSIFICATION	Register popup menu with toolbar.
WITHOUT_CLASSIFICATION	these settings are needed to make the ProgressMonitor pop up early
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowActivated(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowDeiconified(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowIconified(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	Add settings from the settings registry.
WITHOUT_CLASSIFICATION	Increase width to accommodate all tabs on one row.
WITHOUT_CLASSIFICATION	windowOpen state will be changed when window is activated
WITHOUT_CLASSIFICATION	Called when the user has pressed Save. Performs "Save" in all Tabs.
WITHOUT_CLASSIFICATION	Called when the user has pressed Cancel. Performs "Cancel" in all Tabs.
WITHOUT_CLASSIFICATION	We only request focus the first time we become visible
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	Handle the same as an explicit cancel
WITHOUT_CLASSIFICATION	File load/save gets done on a background thread, so we'll probably have to queue this to the Swing event thread
WITHOUT_CLASSIFICATION	TODO: concatenate? - tfm overwrite for now
WITHOUT_CLASSIFICATION	end class StylePanelFigRRect
WITHOUT_CLASSIFICATION	Let the parent do its refresh.
WITHOUT_CLASSIFICATION	lets redraw the box
WITHOUT_CLASSIFICATION	@see java.awt.Component#getPreferredSize()
WITHOUT_CLASSIFICATION	@see java.awt.Component#getMinimumSize()
WITHOUT_CLASSIFICATION	Called when the user selects a tab, by clicking or otherwise. @see javax.swing.event.ChangeListener#stateChanged(javax.swing.event.ChangeEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	We don't know what thread events will be delivered on, so make sure we run Swing methods on the Swing thread
WITHOUT_CLASSIFICATION	This instead of the label ??? displayPane.setBorder(new TitledBorder( Translator.localize("Display: ")));
WITHOUT_CLASSIFICATION	add in front of the others add the label in front of the "pane"
WITHOUT_CLASSIFICATION	and finally, adjust the scrollbars to show the Fig
WITHOUT_CLASSIFICATION	% thresholds for bar color changes
WITHOUT_CLASSIFICATION	making it possible to jump to the modelroots
WITHOUT_CLASSIFICATION	org.argouml.ui.TabTable TabMetrics TabJavaSrc | TabSrc TabUMLDisplay TabHash
WITHOUT_CLASSIFICATION	Timer action method. Periodically update our stats and force a repaint.
WITHOUT_CLASSIFICATION	Virtual memory (heap) stats
WITHOUT_CLASSIFICATION	Thin bar to show current allocated heap size
WITHOUT_CLASSIFICATION	Thin bar to show current used
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabPanel()
WITHOUT_CLASSIFICATION	Do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	the introducing label
WITHOUT_CLASSIFICATION	how to handle empty target lists? probably the MultiEditorPane should only show an empty pane in that case
WITHOUT_CLASSIFICATION	private JPanel constraintsTab = new JPanel();
WITHOUT_CLASSIFICATION	The child is sometimes not found when the tree is being updated
WITHOUT_CLASSIFICATION	private JTabbedPane tabs = new JTabbedPane();
WITHOUT_CLASSIFICATION	tabs.setMinimumSize(new Dimension(300, 250));
WITHOUT_CLASSIFICATION	private JPanel modifiedTab = new JPanel();
WITHOUT_CLASSIFICATION	The ActivityGraph.
WITHOUT_CLASSIFICATION	private JPanel tagValsTab = new JPanel();
WITHOUT_CLASSIFICATION	open space at gridy = 2;
WITHOUT_CLASSIFICATION	mainPanel.add(north, BorderLayout.NORTH);
WITHOUT_CLASSIFICATION	Any type
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	TODO: Localize
WITHOUT_CLASSIFICATION	MouseListener implementation
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	This text is for the developers. It doesn't need to be localized.
WITHOUT_CLASSIFICATION	These shouldn't really be <br> instead of <p> elements, but the lines all get run together when pasted into a browser window.
WITHOUT_CLASSIFICATION	JPanel north = new JPanel(); north.setLayout(new BorderLayout()); north.add(tabs, BorderLayout.CENTER);
WITHOUT_CLASSIFICATION	initConstraintsTab(); tabs.addTab(Translator.localize("tab.constraints"), constraintsTab); tabs.setEnabledAt(3, false);
WITHOUT_CLASSIFICATION	initTagValsTab(); tabs.addTab(Translator.localize("dialog.find.tab.tagged-values"), tagValsTab); tabs.setEnabledAt(2, false);
WITHOUT_CLASSIFICATION	end class FindDialog
WITHOUT_CLASSIFICATION	name += " in " + dName;
WITHOUT_CLASSIFICATION	Not in UML 2.x (or metatypes) type.addItem(PredicateMType.create( Model.getMetaTypes().getActivityGraph()));
WITHOUT_CLASSIFICATION	Set the name and icon:
WITHOUT_CLASSIFICATION	help tab is 0
WITHOUT_CLASSIFICATION	end runGC_actionPerformed()
WITHOUT_CLASSIFICATION	end class PredicateMType
WITHOUT_CLASSIFICATION	end updateInfo()
WITHOUT_CLASSIFICATION	end class NavigatorPane
WITHOUT_CLASSIFICATION	end copy_actionPerformed()
WITHOUT_CLASSIFICATION	end class ActionGotoDiagram
WITHOUT_CLASSIFICATION	end class SystemInfoDialog
WITHOUT_CLASSIFICATION	clean the history
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	But exclude elements that enclose others, since their algorithms to calculate the minimum size does not take enclosed objects into account:
WITHOUT_CLASSIFICATION	super(Translator.localize("action.size-to-fit-contents"));
WITHOUT_CLASSIFICATION	unsupported.
WITHOUT_CLASSIFICATION	Only resize elements which the user would also be able to resize:
WITHOUT_CLASSIFICATION	if a default action was voided then we have to save it
WITHOUT_CLASSIFICATION	Set the name:
WITHOUT_CLASSIFICATION	let's load the default shortcut for every action
WITHOUT_CLASSIFICATION	end class ActionFind
WITHOUT_CLASSIFICATION	let's load the current shortcut from the configuration (as a string)
WITHOUT_CLASSIFICATION	generate menu
WITHOUT_CLASSIFICATION	it should never go here!
WITHOUT_CLASSIFICATION	view menu
WITHOUT_CLASSIFICATION	file menu
WITHOUT_CLASSIFICATION	align submenu
WITHOUT_CLASSIFICATION	edit menu
WITHOUT_CLASSIFICATION	create menu
WITHOUT_CLASSIFICATION	arrange menu
WITHOUT_CLASSIFICATION	help menu
WITHOUT_CLASSIFICATION	help menu
WITHOUT_CLASSIFICATION	This ID is used as DEFAULT_ID !
WITHOUT_CLASSIFICATION	end class ActionAboutArgoUML
WITHOUT_CLASSIFICATION	distribute submenu
WITHOUT_CLASSIFICATION	end class ActionPageSetup
WITHOUT_CLASSIFICATION	trap focus traversal keys also
WITHOUT_CLASSIFICATION	let's add the key printing logic
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	The "Close window" shortcut (ALT+F4) actually can't be registered as a shortcut, because it closes the configuration dialog!
WITHOUT_CLASSIFICATION	if a not-default current shortcut was added, then we have to save it
WITHOUT_CLASSIFICATION	if the actual is not going to be saved, then try to remove it (as it could have been cancelled)
WITHOUT_CLASSIFICATION	no modifiers - let's check if the key is valid
WITHOUT_CLASSIFICATION	middle of shortcut
WITHOUT_CLASSIFICATION	Only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	add last recently used list _before_ exit menu
WITHOUT_CLASSIFICATION	KeyStroke f7 = KeyStroke.getKeyStroke(KeyEvent.VK_F7, 0);
WITHOUT_CLASSIFICATION	and exit menu entry starting with separator.
WITHOUT_CLASSIFICATION	This used to be deferred, but it's only 30-40 msec of work.
WITHOUT_CLASSIFICATION	now, let's set up the "selected action" container
WITHOUT_CLASSIFICATION	generate.add(Actions.GenerateWeb);
WITHOUT_CLASSIFICATION	Add the help menu item.
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the name and icon:
WITHOUT_CLASSIFICATION	clean the history
WITHOUT_CLASSIFICATION	Comment out when we are ready to release undo/redo JMenuItem undoItem = edit.add( ProjectActions.getInstance().getUndoAction()); setMnemonic(undoItem, "Undo"); ShortcutMgr.assignAccelerator(undoItem, ShortcutMgr.ACTION_UNDO); JMenuItem redoItem = edit.add( ProjectActions.getInstance().getRedoAction()); setMnemonic(redoItem, "Redo"); ShortcutMgr.assignAccelerator(redoItem, ShortcutMgr.ACTION_REDO); edit.addSeparator();
WITHOUT_CLASSIFICATION	JMenuItem cutItem = edit.add(ActionCut.getInstance()); setMnemonic(cutItem, "Cut"); setAccelerator(cutItem, ctrlX); JMenuItem copyItem = edit.add(ActionCopy.getInstance()); setMnemonic(copyItem, "Copy"); setAccelerator(copyItem, ctrlC); JMenuItem pasteItem = edit.add(ActionPaste.getInstance()); setMnemonic(pasteItem, "Paste"); setAccelerator(pasteItem, ctrlV); edit.addSeparator();
WITHOUT_CLASSIFICATION	Create the edit toolbar based on the Menu. All menuItems that have an Icon are presumed to be based upon an Action, and these Actions are used in the toolbar.
WITHOUT_CLASSIFICATION	setHelpMenu(help);
WITHOUT_CLASSIFICATION	Component or Action
WITHOUT_CLASSIFICATION	set maximum length of menu entry
WITHOUT_CLASSIFICATION	JMenuItem item = _fileMenu.add(new ActionReopenProject(filename));
WITHOUT_CLASSIFICATION	the text is used by the event handler for opening the project
WITHOUT_CLASSIFICATION	create all nessessary configuration keys for lru
WITHOUT_CLASSIFICATION	holds file menu
WITHOUT_CLASSIFICATION	text is short, tooltip is long
WITHOUT_CLASSIFICATION	read existing file names from configuration
WITHOUT_CLASSIFICATION	empty entry stops reading --> last line!
WITHOUT_CLASSIFICATION	this is the recent count
WITHOUT_CLASSIFICATION	delete all existing entries
WITHOUT_CLASSIFICATION	add new entry as first entry
WITHOUT_CLASSIFICATION	add other existing entries, but filter the just added one
WITHOUT_CLASSIFICATION	save count
WITHOUT_CLASSIFICATION	and store configuration props
WITHOUT_CLASSIFICATION	end class ActionExit
WITHOUT_CLASSIFICATION	box.setLocationRelativeTo(jframe);
WITHOUT_CLASSIFICATION	end class ActionHelp
WITHOUT_CLASSIFICATION	instantiation not allowed
WITHOUT_CLASSIFICATION	end class ActionPrint
WITHOUT_CLASSIFICATION	let's add the table, inside a JScrollPane
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getRowCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	Do nothing! The next time we refresh, we will fetch the values again.
WITHOUT_CLASSIFICATION	Do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	init from config read number, write result as new default and prepare keys
WITHOUT_CLASSIFICATION	get already existing names from menu actions real file names, not action names !
WITHOUT_CLASSIFICATION	let's enable the radiobuttons container
WITHOUT_CLASSIFICATION	updating the radiobuttons container's title
WITHOUT_CLASSIFICATION	let's select the correct radio button
WITHOUT_CLASSIFICATION	no shortcuts --> NONE
WITHOUT_CLASSIFICATION	current shortcut == default --> DEFAULT
WITHOUT_CLASSIFICATION	customized shortcut --> CUSTOM
WITHOUT_CLASSIFICATION	let's reload the shortcuts
WITHOUT_CLASSIFICATION	conflict detected: showing a warning to the user, instead of saving shortcuts
WITHOUT_CLASSIFICATION	saving shortcuts
WITHOUT_CLASSIFICATION	if a shortcut has been select then we have to check if the actual action is in conflict with other ones
WITHOUT_CLASSIFICATION	this shortcut was already been assigned to another action; let's pop-up a message for the user
WITHOUT_CLASSIFICATION	blanking the old action's shortcut.. and now refreshing the table.
WITHOUT_CLASSIFICATION	re-selecting the old row, without changing the target - and without throwing another ListSelectionEvent!
WITHOUT_CLASSIFICATION	let's change the target
WITHOUT_CLASSIFICATION	duplicate shortcut not found; let's check for duplicates
WITHOUT_CLASSIFICATION	there's a duplicate: let's recheck if there is a conflict
WITHOUT_CLASSIFICATION	updating the shortcut field
WITHOUT_CLASSIFICATION	updating the table data
WITHOUT_CLASSIFICATION	updating the actions
WITHOUT_CLASSIFICATION	the shortcut has already been assigned to another action!
WITHOUT_CLASSIFICATION	if the given object is a KeyStroke instance, then we ca
WITHOUT_CLASSIFICATION	let's update also the actions array
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	show a chooser dialog for the file name, only xmi is allowed
WITHOUT_CLASSIFICATION	The default nr of rows is 8, but since we have 9 perspectives by default now, setting to 9 is nicer.
WITHOUT_CLASSIFICATION	Check if multiple items are selected.
WITHOUT_CLASSIFICATION	profile section: dealing with profiles in different states
WITHOUT_CLASSIFICATION	1. a noneditable applied profile
WITHOUT_CLASSIFICATION	just no item added in this case
WITHOUT_CLASSIFICATION	3. the editable unapplied profile
WITHOUT_CLASSIFICATION	end of profile section
WITHOUT_CLASSIFICATION	Can't delete last top level model
WITHOUT_CLASSIFICATION	Determine if only diagrams are in the target list.
WITHOUT_CLASSIFICATION	"x nodes and x edges"
WITHOUT_CLASSIFICATION	Check to see if all targets are classifiers before adding an option to create an association between them all
WITHOUT_CLASSIFICATION	test if this element can be contained by the target
WITHOUT_CLASSIFICATION	iterate through all possible model elements to determine which are valid to be contained by the selected target
WITHOUT_CLASSIFICATION	end class ActionAddExistingRelatedNode
WITHOUT_CLASSIFICATION	this element can be contained add a menu item that allows the user to take that action
WITHOUT_CLASSIFICATION	... otherwise we select the item below the mousepointer.
WITHOUT_CLASSIFICATION	We preserve the current (multiple) selection, if we are over part of it ...
WITHOUT_CLASSIFICATION	unimplemented - we only care about expanding
WITHOUT_CLASSIFICATION	end class ExplorerMouseListener
WITHOUT_CLASSIFICATION	does nothing.
WITHOUT_CLASSIFICATION	need to update the selection state.
WITHOUT_CLASSIFICATION	Perform recursive search of subtree rooted at 'node', selecting all nodes which have a userObject matching one of our targets.
WITHOUT_CLASSIFICATION	get the elements
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	target may appear multiple places in the tree, so we don't stop here (but it's expensive to search the whole tree) - tfm - 20070904 targets.remove(t); break;
WITHOUT_CLASSIFICATION	scan the visible rows for duplicates of this elem and select them
WITHOUT_CLASSIFICATION	check which targetmanager method to call
WITHOUT_CLASSIFICATION	we must call the correct method on targetmanager for each added or removed target
WITHOUT_CLASSIFICATION	we can't remove the targets in one go, we have to do it one by one.
WITHOUT_CLASSIFICATION	setTargets(e.getNewTargets());
WITHOUT_CLASSIFICATION	setTargets(e.getNewTargets());
WITHOUT_CLASSIFICATION	at the top right bottom left bottom
WITHOUT_CLASSIFICATION	the dialog is modal
WITHOUT_CLASSIFICATION	sortJListModel(ruleLibraryList);
WITHOUT_CLASSIFICATION	disable the buttons for now, since no selection has been made yet
WITHOUT_CLASSIFICATION	the text will be set later
WITHOUT_CLASSIFICATION	the text will be set later
WITHOUT_CLASSIFICATION	remove the ones already selected (if a perspective is selected)
WITHOUT_CLASSIFICATION	add them
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	update the label (which shows the number of rules)
WITHOUT_CLASSIFICATION	must add an editable list of new ExplorerPerspective's to the list model so that the original ones are not changed in the case of a cancel action by the user.
WITHOUT_CLASSIFICATION	set the newly selected item in the library list
WITHOUT_CLASSIFICATION	update the label (which shows the number of rules)
WITHOUT_CLASSIFICATION	set the newly selected item in the library list
WITHOUT_CLASSIFICATION	remove the rule from the library list
WITHOUT_CLASSIFICATION	The name of the UMLDiagram represented by this node has changed.
WITHOUT_CLASSIFICATION	uml model events
WITHOUT_CLASSIFICATION	notation events
WITHOUT_CLASSIFICATION	Handle remove for non-UML elements (e.g. diagrams)
WITHOUT_CLASSIFICATION	Get the selected targets (UML ModelElements) from the TargetManager.
WITHOUT_CLASSIFICATION	project events
WITHOUT_CLASSIFICATION	show a chooser dialog for the file name, only xmi is allowed
WITHOUT_CLASSIFICATION	get one of the default profile dirs, if available (as a default value for the following save dialog)
WITHOUT_CLASSIFICATION	save profile
WITHOUT_CLASSIFICATION	register it as a user profile
WITHOUT_CLASSIFICATION	this is safe because getName always returns a string of some type
WITHOUT_CLASSIFICATION	load user perspectives
WITHOUT_CLASSIFICATION	get the perspective name
WITHOUT_CLASSIFICATION	make sure there are some rules...
WITHOUT_CLASSIFICATION	get the rules
WITHOUT_CLASSIFICATION	get the rule name
WITHOUT_CLASSIFICATION	create the rule
WITHOUT_CLASSIFICATION	rule name but no rules
WITHOUT_CLASSIFICATION	add the perspective
WITHOUT_CLASSIFICATION	no user defined perspectives
WITHOUT_CLASSIFICATION	one last check that some loaded.
WITHOUT_CLASSIFICATION	works for both statediagram as activitygraph
WITHOUT_CLASSIFICATION	Enter here go rules only relevant for UML 2 empty for now
WITHOUT_CLASSIFICATION	The drag gesture recognizer fires events in response to drag gestures in a component.
WITHOUT_CLASSIFICATION	specifies valid actions
WITHOUT_CLASSIFICATION	Eliminates right mouse clicks as valid actions
WITHOUT_CLASSIFICATION	First argument: Component to associate the target with Second argument: DropTargetListener
WITHOUT_CLASSIFICATION	Get the cell renderer (which is a JLabel) for the path being dragged.
WITHOUT_CLASSIFICATION	The layout manager would normally do this:
WITHOUT_CLASSIFICATION	Get a buffered image of the selection for dragging a ghost image
WITHOUT_CLASSIFICATION	Ask the cell renderer to paint itself into the BufferedImage. Make the image ghostlike.
WITHOUT_CLASSIFICATION	Now paint a gradient UNDER the ghosted JLabel text (but not under the icon if any).
WITHOUT_CLASSIFICATION	Make the gradient ghostlike:
WITHOUT_CLASSIFICATION	Remember the path being dragged (because if it is being moved, we will have to delete it later).
WITHOUT_CLASSIFICATION	We pass our drag image just in case it IS supported by the platform.
WITHOUT_CLASSIFICATION	If the destination is not a NameSpace, then abort:
WITHOUT_CLASSIFICATION	If the destination is a DataType, then abort:
WITHOUT_CLASSIFICATION	We are sure "dest" is a Namespace now.
WITHOUT_CLASSIFICATION	MVW: These are the WFRs for DataType: [1] A DataType can only contain Operations, which all must be queries. self.allFeatures->forAll(f | f.oclIsKindOf(Operation) and f.oclAsType(Operation).isQuery) [2] A DataType cannot contain any other ModelElements. self.allContents->isEmpty IMHO we should enforce these WFRs here. ... so it is still possible to copy or move query operations, hence we should allow this.
WITHOUT_CLASSIFICATION	Let's check all dragged elements - if one of these may be dropped, then the drag is valid. The others will be ignored when dropping.
WITHOUT_CLASSIFICATION	empty implementation - not used.
WITHOUT_CLASSIFICATION	empty implementation - not used.
WITHOUT_CLASSIFICATION	empty implementation - not used.
WITHOUT_CLASSIFICATION	Figure out which row we're on.
WITHOUT_CLASSIFICATION	If we are not on a row then ignore this autoscroll request
WITHOUT_CLASSIFICATION	We are sure "dest" is a Namespace now.
WITHOUT_CLASSIFICATION	Autoscroll Interface... The following code was borrowed from the book: Java Swing By Robert Eckstein, Marc Loy & Dave Wood Paperback - 1221 pages 1 Ed edition (September 1998) O'Reilly & Associates; ISBN: 156592455X The relevant chapter of which can be found at: http:www.oreilly.com/catalog/jswing/chapter/dnd.beta.pdf
WITHOUT_CLASSIFICATION	Now decide if the row is at the top of the screen or at the bottom. We do this to make the previous row (or the next row) visible as appropriate. If were at the absolute top or bottom, just return the first or last row respectively.
WITHOUT_CLASSIFICATION	Set up a hover timer, so that a node will be automatically expanded or collapsed if the user lingers on it for more than a short time.
WITHOUT_CLASSIFICATION	isRootPath
WITHOUT_CLASSIFICATION	Set timer to one-shot mode
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, "dragOver");
WITHOUT_CLASSIFICATION	The next condition becomes false when dragging in something from another application.
WITHOUT_CLASSIFICATION	If a drag image is not supported by the platform, then draw my own drag image.
WITHOUT_CLASSIFICATION	Rub out the last ghost image and cue line:
WITHOUT_CLASSIFICATION	And remember where we are about to draw the new ghost image:
WITHOUT_CLASSIFICATION	Just rub out the last cue line
WITHOUT_CLASSIFICATION	In any case draw (over the ghost image if necessary) a cue line indicating where a drop will occur.
WITHOUT_CLASSIFICATION	And include the cue line in the area to be rubbed out next time
WITHOUT_CLASSIFICATION	Testcase: drag something from another application into ArgoUML, and the explorer shows the drop icon, instead of the noDrop.
WITHOUT_CLASSIFICATION	to prohibit dropping onto the drag source:
WITHOUT_CLASSIFICATION	If the destination is not a NameSpace, then reject:
WITHOUT_CLASSIFICATION	If the destination is a DataType, then reject:
WITHOUT_CLASSIFICATION	Prevent hover timer from doing an unwanted expandPath or collapsePath:
WITHOUT_CLASSIFICATION	Clear the ghost image:
WITHOUT_CLASSIFICATION	get new parent node
WITHOUT_CLASSIFICATION	get the model elements that are being transfered.
WITHOUT_CLASSIFICATION	The user-DropActions are: Ctrl + Shift -> ACTION_LINK Ctrl -> ACTION_COPY Shift -> ACTION_MOVE (none) -> ACTION_MOVE
WITHOUT_CLASSIFICATION	Only accept COPY or MOVE gestures (ie LINK is not supported)
WITHOUT_CLASSIFICATION	Only accept COPY or MOVE gestures (ie LINK is not supported)
WITHOUT_CLASSIFICATION	Do this if you want to prohibit dropping onto the drag source...
WITHOUT_CLASSIFICATION	Do this if you want to prohibit dropping onto the drag source...
WITHOUT_CLASSIFICATION	end class
WITHOUT_CLASSIFICATION	remove references for gc
WITHOUT_CLASSIFICATION	This should only be helpful for old garbage collectors.
WITHOUT_CLASSIFICATION	Avoid doing this too early in the initialization process
WITHOUT_CLASSIFICATION	Avoid recursively updating the same child
WITHOUT_CLASSIFICATION	@see javax.swing.tree.DefaultTreeModel#insertNodeInto(javax.swing.tree.MutableTreeNode, javax.swing.tree.MutableTreeNode, int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.DefaultTreeModel#removeNodeFromParent(javax.swing.tree.MutableTreeNode)
WITHOUT_CLASSIFICATION	This is somewhat inconsistent with the design of the constructor that receives the root object by argument. If this is okay then there may be no need for a constructor with that argument.
WITHOUT_CLASSIFICATION	Enumerate the current children of node to find out which now sorts in different order, since these must be moved
WITHOUT_CLASSIFICATION	Avoid our deinitialization here The node will be added back to the tree again
WITHOUT_CLASSIFICATION	For each reordered node, find it's new position among the current children and move it there
WITHOUT_CLASSIFICATION	Avoid our initialization here
WITHOUT_CLASSIFICATION	Collect the current set of objects that should be children to this node
WITHOUT_CLASSIFICATION	Handle WeakExplorerNodes
WITHOUT_CLASSIFICATION	Remove the node from removeSet
WITHOUT_CLASSIFICATION	Remove obj3 from weakNodes and newChildren
WITHOUT_CLASSIFICATION	Remember that children are not TreeNodes but UserObjects
WITHOUT_CLASSIFICATION	Add any remaining nodes
WITHOUT_CLASSIFICATION	it is the combo for "order"
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Order the new children, the dependencies cannot and need not be ordered
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	Sequence diagrams are not shown as children of the collaboration that they show but as children of the classifier/operation the collaboration represents. Statediagrams and activitydiagrams are shown as children of the statemachine or activitygraph they belong to.
WITHOUT_CLASSIFICATION	was ""
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	abstractions are represented in the Inheritance Node.
WITHOUT_CLASSIFICATION	abstractions are represented in the Inheritance Node.
WITHOUT_CLASSIFICATION	abstractions are represented in the Inheritance Node.
WITHOUT_CLASSIFICATION	abstractions are represented in the Inheritance Node.
WITHOUT_CLASSIFICATION	the name of this instance of diagram
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	Also show unattached sequence diagrams:
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	in UML2, we don't want to see element imports in profiles
WITHOUT_CLASSIFICATION	(MAssociationEnd)
WITHOUT_CLASSIFICATION	(MAssociationEnd)
WITHOUT_CLASSIFICATION	(MAssociationEnd)
WITHOUT_CLASSIFICATION	Rule for Project->Root (Top level) Elements. TODO: As currently implemented it returns all top level elements in the model repository, not just those in a given project. Since we only support a single project at a time currently, these are equivalent but this will need to be enhanced with additional bookkeeping in Project when we support multiple open projects - tfm. TODO: I changed it to get the roots from the project. It was showing the profiles that were loaded but were not applied to the current project - maurelio1234. @author Tom Morris <tfmorris@gmail.com>
WITHOUT_CLASSIFICATION	in UML2, some elements are not to be shown
WITHOUT_CLASSIFICATION	don't show a profile application
WITHOUT_CLASSIFICATION	don't show element imports in profiles
WITHOUT_CLASSIFICATION	don't show extensions in profiles
WITHOUT_CLASSIFICATION	&& Model.getFacade().isAProperty(o)
WITHOUT_CLASSIFICATION	don't show base_... properties in stereotypes
WITHOUT_CLASSIFICATION	"N/A" or "x nodes and x edges"
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	Transition
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	TODO: what?
WITHOUT_CLASSIFICATION	Todo: What?
WITHOUT_CLASSIFICATION	First get the collection of ElementResidence
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	TODO: what?
WITHOUT_CLASSIFICATION	only targets we didn't have allready count
WITHOUT_CLASSIFICATION	If nothing selected, go to last selected target
WITHOUT_CLASSIFICATION	Needed for Argo startup :-(
WITHOUT_CLASSIFICATION	Remove duplicates and take care of getOwner() and remove nulls:
WITHOUT_CLASSIFICATION	|| !targets.contains(target)
WITHOUT_CLASSIFICATION	targets.remove(target);
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	implement set-like behaviour. The same element may not be added more then once.
WITHOUT_CLASSIFICATION	we put the targets 'backwards' in the history since the first target in the addedTargets array is the first one selected.
WITHOUT_CLASSIFICATION	cannot break here since an object can be multiple times in history
WITHOUT_CLASSIFICATION	CommentEdge - the owner of a FigEdgeNote
WITHOUT_CLASSIFICATION	check if there are new elements in the list if the old and new list are of the same size set the oldTargets to the correct selection
WITHOUT_CLASSIFICATION	If not found, try the parent namespace
WITHOUT_CLASSIFICATION	Listen for the removal of diagrams from project
WITHOUT_CLASSIFICATION	give priority to standard documentation tag
WITHOUT_CLASSIFICATION	Figs on a diagram without an owning model element
WITHOUT_CLASSIFICATION	end class DocumentationManager
WITHOUT_CLASSIFICATION	TODO: Needs localization
WITHOUT_CLASSIFICATION	end class ChildGenRelated
WITHOUT_CLASSIFICATION	Convert the string (e.g. "aaa,bbb,ccc") into separate stereotype-names (e.g. "aaa", "bbb", "ccc").
WITHOUT_CLASSIFICATION	adds all stereotypes defined at the top level namespaces
WITHOUT_CLASSIFICATION	and now remove them
WITHOUT_CLASSIFICATION	collect the to be removed stereotypes
WITHOUT_CLASSIFICATION	the name of this type of diagram
WITHOUT_CLASSIFICATION	add stereotypes
WITHOUT_CLASSIFICATION	Loop through each element in the namespace, recursing.
WITHOUT_CLASSIFICATION	end class UUIDManager
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#setValueAt(java.lang.Object, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.util.ChildGenerator#gen(java.lang.Object)
WITHOUT_CLASSIFICATION	Instance
WITHOUT_CLASSIFICATION	comments
WITHOUT_CLASSIFICATION	For all other model elements, return any elements associated in any way
WITHOUT_CLASSIFICATION	adds all stereotypes defined at the profiles applied to the current namespace
WITHOUT_CLASSIFICATION	adds all stereotypes defined at the profiles applied to the current project
WITHOUT_CLASSIFICATION	TableModel implementation
WITHOUT_CLASSIFICATION	the name of this type of ModelElement
WITHOUT_CLASSIFICATION	the name of this instance of ModelElement
WITHOUT_CLASSIFICATION	the name of the parent diagram instance
WITHOUT_CLASSIFICATION	the name of this type of Object
WITHOUT_CLASSIFICATION	not safe to presume the destination is the comment
WITHOUT_CLASSIFICATION	this also sets the target as a convenient side effect
WITHOUT_CLASSIFICATION	This is the tooltip of a comment link
WITHOUT_CLASSIFICATION	Class
WITHOUT_CLASSIFICATION	end class ProjectMemberModel
WITHOUT_CLASSIFICATION	??
WITHOUT_CLASSIFICATION	??
WITHOUT_CLASSIFICATION	??
WITHOUT_CLASSIFICATION	Association
WITHOUT_CLASSIFICATION	Attribute
WITHOUT_CLASSIFICATION	State
WITHOUT_CLASSIFICATION	Operation
WITHOUT_CLASSIFICATION	Interface
WITHOUT_CLASSIFICATION	Link
WITHOUT_CLASSIFICATION	This function will, by design, contain long lists of i18n keys. It might be tempting to shorten these by constructing them from the parts but please then consider that we might loose the possibility to build tools to statically check the property files against this file.
WITHOUT_CLASSIFICATION	umlReserved.add("document");
WITHOUT_CLASSIFICATION	replace all occurances of OFFENDER with the name of the first offender
WITHOUT_CLASSIFICATION	check for all uppercase and/or mixed with underscores
WITHOUT_CLASSIFICATION	umlReserved.add("file");
WITHOUT_CLASSIFICATION	umlReserved.add("node");
WITHOUT_CLASSIFICATION	umlReserved.add("send");
WITHOUT_CLASSIFICATION	The modelelement must have been deleted - ignore this - it will pass.
WITHOUT_CLASSIFICATION	TODO: This could just work off the names in the UML profile TODO: It doesn't look like it matches what's in the UML 1.4 spec
WITHOUT_CLASSIFICATION	umlReserved.add("destroy");
WITHOUT_CLASSIFICATION	self.allConnections->forAll(ar|ar.participant <> self)
WITHOUT_CLASSIFICATION	end class CrCircularAssocClass
WITHOUT_CLASSIFICATION	(MAttribute)
WITHOUT_CLASSIFICATION	If the name is only underscores
WITHOUT_CLASSIFICATION	@see javax.swing.Icon#paintIcon(java.awt.Component, java.awt.Graphics, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.Icon#getIconWidth()
WITHOUT_CLASSIFICATION	@see javax.swing.Icon#getIconHeight()
WITHOUT_CLASSIFICATION	@see javax.swing.Icon#paintIcon(java.awt.Component, java.awt.Graphics, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.Icon#getIconWidth()
WITHOUT_CLASSIFICATION	@see javax.swing.Icon#getIconHeight()
WITHOUT_CLASSIFICATION	umlReserved.add("initial"); umlReserved.add("final"); umlReserved.add("fork"); umlReserved.add("join"); umlReserved.add("history");
WITHOUT_CLASSIFICATION	umlReserved.add("copy"); umlReserved.add("create");
WITHOUT_CLASSIFICATION	Types can probably have associations, but we should not nag at them not having any. utility is a namespace collection - also not strictly required to have associations.
WITHOUT_CLASSIFICATION	end class ClAttributeCompartment
WITHOUT_CLASSIFICATION	check whether constant, constants are often weird and thus not a problem
WITHOUT_CLASSIFICATION	why are we here?
WITHOUT_CLASSIFICATION	If the classifier does not have a name, then no problem - the model is not finished anyhow.
WITHOUT_CLASSIFICATION	added by Eric Lefevre 13 Mar 1999: we must check if the FigText for attributes is drawn before drawing things over it
WITHOUT_CLASSIFICATION	Abstract elements do not necessarily require associations
WITHOUT_CLASSIFICATION	TODO: different critic or special message for classes that inherit all ops but define none of their own.
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	added by Eric Lefevre 13 Mar 1999: we must check if the FigText for operations is drawn before drawing things over it
WITHOUT_CLASSIFICATION	special cases for use cases Extending use cases and use case that are being included are not required to have associations.
WITHOUT_CLASSIFICATION	for use cases we need to check for extend/includes actors cannot have them, so no need to check
WITHOUT_CLASSIFICATION	Get the ends from the association (we know there are two), and the types associated with them.
WITHOUT_CLASSIFICATION	The association that triggered the critic. Its just possible the association is no longer there, in which case we return null
WITHOUT_CLASSIFICATION	end class ClOperationCompartment
WITHOUT_CLASSIFICATION	First step. Create the panel if not already done and options are available. Otherwise it retains its default value of null.
WITHOUT_CLASSIFICATION	Now create the five options
WITHOUT_CLASSIFICATION	Get the names of the two ends. If there are none (i.e they are currently anonymous), use the ArgoUML convention of "(anon)" for the names
WITHOUT_CLASSIFICATION	Default (any other step) is to return nothing
WITHOUT_CLASSIFICATION	Just completed the first step where we make our choices. First see if we have a choice. We always should, so print a rude message if we don't
WITHOUT_CLASSIFICATION	Set the appropriate aggregation on each end
WITHOUT_CLASSIFICATION	It is quite possible that the cause of the problem has by now been deleted, in which case we will throw an exception if we try to change things. Catch this tidily.
WITHOUT_CLASSIFICATION	Start is a composite aggregation of end
WITHOUT_CLASSIFICATION	Start is a shared aggregation of end
WITHOUT_CLASSIFICATION	End is a composite aggregation of start
WITHOUT_CLASSIFICATION	End is a shared aggregation of start
WITHOUT_CLASSIFICATION	No aggregation
WITHOUT_CLASSIFICATION	Someone took our association away.
WITHOUT_CLASSIFICATION	Can't finish if our parent can't
WITHOUT_CLASSIFICATION	Can finish if it's step 0
WITHOUT_CLASSIFICATION	Can finish if we're on step1 and have actually made a choice
WITHOUT_CLASSIFICATION	Otherwise we can't finish
WITHOUT_CLASSIFICATION	TODO: The WFR doesn't restrict this to Classifiers - tfm
WITHOUT_CLASSIFICATION	TODO: The WFR doesn't restrict this to Classifiers - tfm
WITHOUT_CLASSIFICATION	Model.getFacade().getModelElement(
WITHOUT_CLASSIFICATION	)
WITHOUT_CLASSIFICATION	replace all occurances of OFFENDER with the name of the first offender
WITHOUT_CLASSIFICATION	check if there is no OCL_END; if so, the critic expression is not correct and can not be expanded
WITHOUT_CLASSIFICATION	Get the Association and its connections. Iterate over all the AssociationEnds and check that each connected classifier is in the same sub-system or model
WITHOUT_CLASSIFICATION	display related methods
WITHOUT_CLASSIFICATION	end class CrInterfaceAllPublic
WITHOUT_CLASSIFICATION	return original string if no replacements made
WITHOUT_CLASSIFICATION	If we drop out there is no problem
WITHOUT_CLASSIFICATION	Only look at associations
WITHOUT_CLASSIFICATION	end class CrCrossNamespaceAssoc
WITHOUT_CLASSIFICATION	TODO: different critic for packages consisting only of references to elements of other packages?
WITHOUT_CLASSIFICATION	The next AssociationEnd, and its classifier. Check the classifier is in the namespace of the association. If not we have a problem.
WITHOUT_CLASSIFICATION	original class was not abstract
WITHOUT_CLASSIFICATION	theStereotype.setStereotype(???);
WITHOUT_CLASSIFICATION	found a concrete subclass
WITHOUT_CLASSIFICATION	Nothing to do.
WITHOUT_CLASSIFICATION	no concrete subclasses defined, this class is "useless"
WITHOUT_CLASSIFICATION	see if there is already an element with the same name
WITHOUT_CLASSIFICATION	end class CrClassMustBeAbstract
WITHOUT_CLASSIFICATION	end class CrUselessAbstract
WITHOUT_CLASSIFICATION	(MClassifier)
WITHOUT_CLASSIFICATION	Only look at classes
WITHOUT_CLASSIFICATION	TODO: different critic or special message for classes that inherit all ops but define none of their own.
WITHOUT_CLASSIFICATION	utility is a namespace collection - also not strictly required to have operations.
WITHOUT_CLASSIFICATION	end class CrTooManyAssoc
WITHOUT_CLASSIFICATION	end class CrUselessInterface
WITHOUT_CLASSIFICATION	end class CrComponentInstanceWithoutClassifier
WITHOUT_CLASSIFICATION	end class CrTooManyClasses
WITHOUT_CLASSIFICATION	We don't consider secondary stuff.
WITHOUT_CLASSIFICATION	if the object does not have a name, than no problem
WITHOUT_CLASSIFICATION	types can probably contain operations, but we should not nag at them not having any.
WITHOUT_CLASSIFICATION	Types don't need a constructor.
WITHOUT_CLASSIFICATION	Utilities usually do not require a constructor either
WITHOUT_CLASSIFICATION	Check for uninitialised instance variables and constructor.
WITHOUT_CLASSIFICATION	Get all the features (giving up if there are none). Then loop through finding all operations. Each time we find one, we compare its signature with all previous (held in collection operSeen), and then if it doesn't match add it to the collection.
WITHOUT_CLASSIFICATION	There is a constructor.
WITHOUT_CLASSIFICATION	end class CrTooManyStates
WITHOUT_CLASSIFICATION	We have found a non-static one that is not initialized.
WITHOUT_CLASSIFICATION	Compare against all earlier operations. If there's a match we've found the problem
WITHOUT_CLASSIFICATION	Check that the parameter lists match.
WITHOUT_CLASSIFICATION	Add to the collection and round to look at the next one
WITHOUT_CLASSIFICATION	yeah right...we don't have an operation (and thus no
WITHOUT_CLASSIFICATION	This pair of params where the same. Lets check the next pair.
WITHOUT_CLASSIFICATION	Only do this for classifiers
WITHOUT_CLASSIFICATION	Get the next non-return parameter. Null if non left.
WITHOUT_CLASSIFICATION	If we drop out here, there was no match and we have no problem
WITHOUT_CLASSIFICATION	Check that the names match.
WITHOUT_CLASSIFICATION	Both lists have the same length
WITHOUT_CLASSIFICATION	Both lists have the same length.
WITHOUT_CLASSIFICATION	Different lengths:
WITHOUT_CLASSIFICATION	end class CrMultiComposite
WITHOUT_CLASSIFICATION	Compare the type of the parameters. If any of the types is null, then we have a match.
WITHOUT_CLASSIFICATION	normal model elements are not allowed to have spaces, but for States we make an exception
WITHOUT_CLASSIFICATION	initialize test data
WITHOUT_CLASSIFICATION	end class CrIllegalName
WITHOUT_CLASSIFICATION	dm is a transition
WITHOUT_CLASSIFICATION	initialize new ToDoItem
WITHOUT_CLASSIFICATION	the source of the transition is a pseudostate
WITHOUT_CLASSIFICATION	the source of the transition is a choice
WITHOUT_CLASSIFICATION	end class CrTooManyAttr
WITHOUT_CLASSIFICATION	critiquing API
WITHOUT_CLASSIFICATION	end class CrZeroLengthEdge
WITHOUT_CLASSIFICATION	(MStateVertex)
WITHOUT_CLASSIFICATION	(MAssociationEnd)
WITHOUT_CLASSIFICATION	only classes with name need a constructor
WITHOUT_CLASSIFICATION	Forks have their own outgoing transitions critic
WITHOUT_CLASSIFICATION	types can probably have variables, but we should not nag at them not having any.
WITHOUT_CLASSIFICATION	code generation
WITHOUT_CLASSIFICATION	utility is a namespace collection - also not strictly required to have variables.
WITHOUT_CLASSIFICATION	If we find an instance variable that is not a constant we have succeeded
WITHOUT_CLASSIFICATION	I am only prepared to go this far.
WITHOUT_CLASSIFICATION	(Classifier)
WITHOUT_CLASSIFICATION	first element is e.g. the class, but we need to have its namespace to recompute the offenders.
WITHOUT_CLASSIFICATION	Compound critics
WITHOUT_CLASSIFICATION	warn about inherited name conflicts, different critic?
WITHOUT_CLASSIFICATION	warn about inherited name conflicts, different critic?
WITHOUT_CLASSIFICATION	(MAssociation)
WITHOUT_CLASSIFICATION	Only look at Associations
WITHOUT_CLASSIFICATION	container state / composite state
WITHOUT_CLASSIFICATION	Iterate over all the AssociationEnds. We only have a problem if 1) there is an end connected to an Interface and 2) an end other than that end is navigable.
WITHOUT_CLASSIFICATION	both ends must be classes, otherwise there is nothing to merge
WITHOUT_CLASSIFICATION	We can give up looking if we've hit both criteria
WITHOUT_CLASSIFICATION	both ends must be navigable, otherwise there is nothing to merge
WITHOUT_CLASSIFICATION	End at an Interface? Navigable other end?
WITHOUT_CLASSIFICATION	end class CrMergeClasses
WITHOUT_CLASSIFICATION	Specify design issue category and knowledge type
WITHOUT_CLASSIFICATION	If we drop out we didn't meet both criteria, and all is well.
WITHOUT_CLASSIFICATION	The next AssociationEnd
WITHOUT_CLASSIFICATION	If its an interface we have an interface end, otherwise its something else and we should see if it is navigable. We don't check that the end is a Classifier, rather than its child ClassifierRole, since we have effectively eliminated that possiblity in rejecting AssociationRoles above.
WITHOUT_CLASSIFICATION	end class CrNavFromInterface
WITHOUT_CLASSIFICATION	(MCompositeState)
WITHOUT_CLASSIFICATION	end class CrNoInitialState
WITHOUT_CLASSIFICATION	critiquing API
WITHOUT_CLASSIFICATION	end class CrInstanceWithoutClassifier
WITHOUT_CLASSIFICATION	Now we are sure dm is a Composite State.
WITHOUT_CLASSIFICATION	In DeploymentDiagrams the situation is not the same as in other diagrams only classes, interfaces and objects can intersect each other while they are not the EnclosingFig, so you have to prouve only these elements.
WITHOUT_CLASSIFICATION	Now we are sure dm is a StateVertex.
WITHOUT_CLASSIFICATION	Now we are sure dm is a State.
WITHOUT_CLASSIFICATION	If dm is the top state of the statemachine, then it is not supposed to have incoming transitions.
WITHOUT_CLASSIFICATION	(MAssociationEnd)
WITHOUT_CLASSIFICATION	(MAssociation)
WITHOUT_CLASSIFICATION	container state / composite state
WITHOUT_CLASSIFICATION	end class CrInvalidSynch
WITHOUT_CLASSIFICATION	no good trigger
WITHOUT_CLASSIFICATION	end class CrConflictingComposites
WITHOUT_CLASSIFICATION	end class CrAlreadyRealizes
WITHOUT_CLASSIFICATION	end class CrUnnavigableAssoc
WITHOUT_CLASSIFICATION	TODO: GenNavigableClasses?
WITHOUT_CLASSIFICATION	end class CrDisambigStateName
WITHOUT_CLASSIFICATION	(MAssociationEnd)
WITHOUT_CLASSIFICATION	(MAssociation)
WITHOUT_CLASSIFICATION	end class WizMEName
WITHOUT_CLASSIFICATION	Only for associations
WITHOUT_CLASSIFICATION	Get the assocations and connections. No problem (there is a separate critic) if this is not a binary association or is an association role.
WITHOUT_CLASSIFICATION	Loop through the associations, counting the ends with aggregations
WITHOUT_CLASSIFICATION	A problem if we found more than 1 aggregation
WITHOUT_CLASSIFICATION	end class CrMultipleAgg
WITHOUT_CLASSIFICATION	end class CrNameConflictAC
WITHOUT_CLASSIFICATION	end class WizNavigable
WITHOUT_CLASSIFICATION	end class CrFinalSubclassed
WITHOUT_CLASSIFICATION	no good trigger
WITHOUT_CLASSIFICATION	TODO: AssociationRole
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, "Finding children for " + o.getClass());
WITHOUT_CLASSIFICATION	argument can be an instanceof a Fig which we ignore
WITHOUT_CLASSIFICATION	no need for trigger on "specialization"
WITHOUT_CLASSIFICATION	end class CrCircularInheritance
WITHOUT_CLASSIFICATION	end class CrNonAggDataType
WITHOUT_CLASSIFICATION	test an unknown file
WITHOUT_CLASSIFICATION	container state / composite state
WITHOUT_CLASSIFICATION	no good trigger
WITHOUT_CLASSIFICATION	(MTransition)
WITHOUT_CLASSIFICATION	WFR Transitions, OMG UML 1.3
WITHOUT_CLASSIFICATION	Only work for associations
WITHOUT_CLASSIFICATION	WFR Transitions, OMG UML 1.3
WITHOUT_CLASSIFICATION	No problem if this is an association role.
WITHOUT_CLASSIFICATION	Loop through all the ends, comparing the name against those already seen (ignoring any with no name). No problem if there are no connections defined, we will fall through immediately.
WITHOUT_CLASSIFICATION	end class CrInterfaceOperOnly
WITHOUT_CLASSIFICATION	Ignore non-existent and empty names
WITHOUT_CLASSIFICATION	Is the name already in the list of those seen, if not add it and go on round.
WITHOUT_CLASSIFICATION	Only work for associatins
WITHOUT_CLASSIFICATION	If we drop out there were no clashes
WITHOUT_CLASSIFICATION	@see javax.swing.Icon#paintIcon(java.awt.Component, java.awt.Graphics, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.Icon#getIconWidth()
WITHOUT_CLASSIFICATION	@see javax.swing.Icon#getIconHeight()
WITHOUT_CLASSIFICATION	(MAssociationEnd)
WITHOUT_CLASSIFICATION	(MAssociation)
WITHOUT_CLASSIFICATION	Now we are sure dm is a StateVertex.
WITHOUT_CLASSIFICATION	Now we are sure dm is a State.
WITHOUT_CLASSIFICATION	Now we are sure dm is a Composite State.
WITHOUT_CLASSIFICATION	end class ClClassName
WITHOUT_CLASSIFICATION	If dm is the top state of the statemachine, then it is not supposed to have outgoing transitions.
WITHOUT_CLASSIFICATION	end class CrTooManyOper
WITHOUT_CLASSIFICATION	end class CrTooManyTransitions
WITHOUT_CLASSIFICATION	general
WITHOUT_CLASSIFICATION	Loop through the associations, looking for one with aggregation
WITHOUT_CLASSIFICATION	If drop out, we're OK
WITHOUT_CLASSIFICATION	end class CrNWayAgg.java
WITHOUT_CLASSIFICATION	end class CrOppEndConflict
WITHOUT_CLASSIFICATION	we could check for base class of the stereotype but the condition normally covers it all.
WITHOUT_CLASSIFICATION	intentional: if there is nonsense in the field, we return false
WITHOUT_CLASSIFICATION	intentional: if there is nonsense in the field, we do not set the value
WITHOUT_CLASSIFICATION	fireNodeRemoved(node);
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.Diagram#setName(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#containsNode(java.lang.Object)
WITHOUT_CLASSIFICATION	newEdge.setDiElement( GraphChangeAdapter.getInstance().createElement(gm, edge));
WITHOUT_CLASSIFICATION	/ End GEF methods
WITHOUT_CLASSIFICATION	not allowed
WITHOUT_CLASSIFICATION	return;
WITHOUT_CLASSIFICATION	TODO: Comments are on Element in UML 2.x
WITHOUT_CLASSIFICATION	Create a diagram. This 4-arg version is only for internal use. The 'namespace' argument is deprecated and not used in the new APIs.
WITHOUT_CLASSIFICATION	This shouldn't be possible, but just in case
WITHOUT_CLASSIFICATION	fail silently as we expect users to accidentally drop on to wrong component
WITHOUT_CLASSIFICATION	Create the UML connection of the given type between the given model elements. default aggregation (none)
WITHOUT_CLASSIFICATION	Commentlinks for comments. Iterate over all the comment links to find the comment and annotated elements.
WITHOUT_CLASSIFICATION	The connection is not valid unless both nodes are in this graph model.
WITHOUT_CLASSIFICATION	The diagram are always owned by the model in this first implementation.
WITHOUT_CLASSIFICATION	IMPORTANT - These MUST remain in order!
WITHOUT_CLASSIFICATION	singleton, no instantiation
WITHOUT_CLASSIFICATION	The special value <code>null</code> is used internally to indicate that the default value should be inherited from the next level of settings.
WITHOUT_CLASSIFICATION	Repeat until no faults are fixed
WITHOUT_CLASSIFICATION	Diagram appearance settings with project scope:
WITHOUT_CLASSIFICATION	We can not remove this and have the application manage things directly based on the font, since only the names should be bold.
WITHOUT_CLASSIFICATION	Some cached fonts based on the above settings
WITHOUT_CLASSIFICATION	Since body ever looks at the type of the diagram appearance event, we can simplify from sending every existing event to one event only. But since there is no catch-all event defined, we just use one. Rationale: reduce the number of total refreshes of the drawing.
WITHOUT_CLASSIFICATION	If we've got a local (uninherited) font name or size or if we've got no parent to inherit from recompute our cached fonts
WITHOUT_CLASSIFICATION	This class is a temporary wrapper around the GEF UndoManager. This will be changed when GEF is modified to create commands and provide an observer interface for ArgoUML to receive them. <p> TODO: How does this relate to {@link org.argouml.kernel.DefaultUndoManager}? @author Bob Tarling
WITHOUT_CLASSIFICATION	Listen for name changes so we can veto them if we don't like them
WITHOUT_CLASSIFICATION	get all the classes from the diagram
WITHOUT_CLASSIFICATION	The fix
WITHOUT_CLASSIFICATION	The report
WITHOUT_CLASSIFICATION	The report
WITHOUT_CLASSIFICATION	The fix
WITHOUT_CLASSIFICATION	The fix
WITHOUT_CLASSIFICATION	The fix
WITHOUT_CLASSIFICATION	2. Make sure that all Figs are visible
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddNode(java.lang.Object)
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	TODO: These should get replaced immediately by the creating initialization code, but make sure we've got a default just in case.
WITHOUT_CLASSIFICATION	1. Make sure all Figs in the Diagrams layer refer back to that layer.
WITHOUT_CLASSIFICATION	maybe we have a modelelement that is part of some other fig
WITHOUT_CLASSIFICATION	Register for notification of any global changes that would affect our rendering
WITHOUT_CLASSIFICATION	Add the diagram as a listener to the namespace so that when the namespace is removed the diagram is deleted also.
WITHOUT_CLASSIFICATION	4. Make sure all FigNodes and FigEdges have an owner The report
WITHOUT_CLASSIFICATION	3. Make sure all FigEdges are attached to a valid FigNode The report
WITHOUT_CLASSIFICATION	5. Make sure all FigNodes and FigEdges have a valid owner The report
WITHOUT_CLASSIFICATION	4. Make sure the only FigGroups on a diagram are also FigNodes The report
WITHOUT_CLASSIFICATION	Do nothing, override in subclass.
WITHOUT_CLASSIFICATION	If we haven't succeeded in getting a namespace then abort
WITHOUT_CLASSIFICATION	This should always be true, but just in case...
WITHOUT_CLASSIFICATION	The diagram to be laid out.
WITHOUT_CLASSIFICATION	List of objects. NOTE: This methods which read/write this don't appear to be used.
WITHOUT_CLASSIFICATION	Point at which to start layout (initial state goes here). The X coordinate must be greater than half the width of the widest figure to be placed (because figures are centered on this location).
WITHOUT_CLASSIFICATION	Amount to increment Y position by for each node placed. We pack them densely on the assumption that the user is going to split them into at least two swimlanes.
WITHOUT_CLASSIFICATION	FinalState element for ActivityDiagram
WITHOUT_CLASSIFICATION	Find our Initial State
WITHOUT_CLASSIFICATION	Place all the nodes
WITHOUT_CLASSIFICATION	Place the final state last with a little separation
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	If we're trying to set the namespace to the existing value then don't do any more work.
WITHOUT_CLASSIFICATION	Recursively place all nodes pointed to by outgoing transitions. Because of the recursive algorithm multiple outgoing transitions will end up very lopsided because one entire subgraph will be done before dealing with the other transition(s). @param seen set of nodes seen so far @param node the node to collect neighbors for
WITHOUT_CLASSIFICATION	figClone.seperator = (FigLine) it.next();
WITHOUT_CLASSIFICATION	Needed for project deletion
WITHOUT_CLASSIFICATION	we want to maintain a minimum size for the partition
WITHOUT_CLASSIFICATION	TODO: midpoints for side handles
WITHOUT_CLASSIFICATION	We removed the last partition, so now remove the pool, too:
WITHOUT_CLASSIFICATION	no action required in case of veto on setName
WITHOUT_CLASSIFICATION	This test needed for project deletion
WITHOUT_CLASSIFICATION	TODO: side handles
WITHOUT_CLASSIFICATION	Listen to activitygraph deletion, delete this diagram.
WITHOUT_CLASSIFICATION	actions for toolbar
WITHOUT_CLASSIFICATION	no action required
WITHOUT_CLASSIFICATION	The namespace of the activitygraph is changed!
WITHOUT_CLASSIFICATION	getActionSubactivityState()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphNodeRenderer#getFigNodeFor( org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer, java.lang.Object, java.util.Map)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	The space between the 2 text figs is: PADDING. @see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	we want to maintain a minimum size for the partition
WITHOUT_CLASSIFICATION	Class to display graphics for a UML ObjectFlowState in a diagram.<p> The Fig of this modelElement may either represent the following UMLelements: <p> (1) an ObjectFlowState with a Classifier as type, or <p> (2) an ObjectFlowState with a ClassifierInState as type. <p> In both cases (1) and (2), the Fig shows the underlined name of the Classifier, and in the latter case (2), it shows also the names of the states of the ClassifierInState. <p> In the examples in the UML standard, this is written like<pre> PurchaseOrder [approved] </pre> i.e. in 2 lines. The first line is underlined, to indicate that it is an instance (object).<p> The fact that the first line is underlined, and the 2nd not, is the reason to implement them in 2 separate Figs.<p> TODO: Allow stereotypes to be shown. @author mvw
WITHOUT_CLASSIFICATION	Model.getActivityGraphsHelper() .isAddingActivityGraphAllowed(base);
WITHOUT_CLASSIFICATION	TODO: We may return the following when the relocate() has been implemented.
WITHOUT_CLASSIFICATION	TODO: We may return something useful when the relocate() has been implemented.
WITHOUT_CLASSIFICATION	register for events from the type
WITHOUT_CLASSIFICATION	Create a map of partitions keyed by x coordinate
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	Sort the x coordinates into order
WITHOUT_CLASSIFICATION	the state name
WITHOUT_CLASSIFICATION	Set the drop location in the case of D&D:
WITHOUT_CLASSIFICATION	If the layer is null, then most likely we are being deleted.
WITHOUT_CLASSIFICATION	Don't listen to all property names We only need to listen to its "type", and "remove".
WITHOUT_CLASSIFICATION	the height of the blank space above and below the text figs:
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	Override setBounds to keep shapes looking right. @see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)
WITHOUT_CLASSIFICATION	Although not generally true for GEF, for Argo we know that the layer is a LayerPerspective which knows the associated diagram
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	and listen to name changes of the submachine
WITHOUT_CLASSIFICATION	both have the same settings
WITHOUT_CLASSIFICATION	both have the same owner
WITHOUT_CLASSIFICATION	add them back to front
WITHOUT_CLASSIFICATION	Let our superclass sort itself out first
WITHOUT_CLASSIFICATION	add the listeners to the newOwner
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.SelectionButtons#getNewNode(int)
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	MutableGraphModel implementation
WITHOUT_CLASSIFICATION	Set up the property panels for activity diagrams:
WITHOUT_CLASSIFICATION	overrule the single-line name-fig created by the parent
WITHOUT_CLASSIFICATION	A binary association is not a node so reject.
WITHOUT_CLASSIFICATION	setBlinkPorts(false); make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	TODO: Do we need to clone the stereotype(s)?
WITHOUT_CLASSIFICATION	(MGeneralization)
WITHOUT_CLASSIFICATION	The stereoDim has height=2, even if it is empty, hence the -2 below:
WITHOUT_CLASSIFICATION	the width needs to be > the height
WITHOUT_CLASSIFICATION	Both ends must be defined and nodes that are on the graph already.
WITHOUT_CLASSIFICATION	GraphModel implementation
WITHOUT_CLASSIFICATION	TODO:?
WITHOUT_CLASSIFICATION	((MClassifier)node).setNamespace(_collab.getNamespace());
WITHOUT_CLASSIFICATION	TODO: assumes public, user pref for default visibility?
WITHOUT_CLASSIFICATION	Add the given edge to the graph, if valid. @see org.tigris.gef.graph.MutableGraphModel#addEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	TODO: We may return the following when the relocate() has been implemented.
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	The NotationProvider for the ClassifierRole. <p> The syntax is for UML is: <pre> baselist := [base] [, base] classifierRole := [name] [/ role] [: baselist] </pre></p> The <code>name</code> is the Instance name, not used currently. See ClassifierRoleNotationUml for details.<p> This syntax is compatible with the UML 1.4 specification.
WITHOUT_CLASSIFICATION	TODO: assumes public
WITHOUT_CLASSIFICATION	The stereotype. Width is the same as the cover, height is its default (since the font is not yet set). The text should be centered.
WITHOUT_CLASSIFICATION	throws PropertyVetoException
WITHOUT_CLASSIFICATION	(MElementImport)
WITHOUT_CLASSIFICATION	getStereotypeFig().setFilled(false);
WITHOUT_CLASSIFICATION	end class CollabDiagramGraphModel
WITHOUT_CLASSIFICATION	In the rather unlikely case that we have no name, we give up.
WITHOUT_CLASSIFICATION	The big port. Color of the big port is irrelevant
WITHOUT_CLASSIFICATION	The name. Width is the same as the cover, height is the default. The text of the name will be centered by default. In the same place as the stereotype, since at this stage the stereotype is not displayed. Being a classifier role it is underlined
WITHOUT_CLASSIFICATION	The cover.
WITHOUT_CLASSIFICATION	At least one stereotype is visible
WITHOUT_CLASSIFICATION	Remember where we are at present, so we can tell GEF later. Then check we are as big as the minimum size
WITHOUT_CLASSIFICATION	Set the bounds of the bigPort and cover
WITHOUT_CLASSIFICATION	Work out the padding each side, depending on whether the stereotype is displayed and set bounds accordingly
WITHOUT_CLASSIFICATION	Record the changes in the instance variables of our parent, tell GEF and trigger the edges to reconsider themselves.
WITHOUT_CLASSIFICATION	singleton
WITHOUT_CLASSIFICATION	this one behaves differently, hence seperated:
WITHOUT_CLASSIFICATION	this one behaves differently, hence seperated:
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#calcBounds()
WITHOUT_CLASSIFICATION	Although not generally true for GEF, for Argo we know that the layer is a LayerPerspective which knows the associated diagram
WITHOUT_CLASSIFICATION	TODO: We may return something useful when the relocate() has been implemented.
WITHOUT_CLASSIFICATION	GraphModel implementation
WITHOUT_CLASSIFICATION	TODO:?
WITHOUT_CLASSIFICATION	A binary association is not a node so reject.
WITHOUT_CLASSIFICATION	Both ends must be defined and nodes that are on the graph already.
WITHOUT_CLASSIFICATION	end class FigAssociationRole
WITHOUT_CLASSIFICATION	If location is non-null, convert to a rectangle that we can use
WITHOUT_CLASSIFICATION	TODO -> settings
WITHOUT_CLASSIFICATION	the figs that make up this group
WITHOUT_CLASSIFICATION	the figs that make up this group
WITHOUT_CLASSIFICATION	_x = first.getX(); _y = first.getY();
WITHOUT_CLASSIFICATION	_x = first.getX(); _y = first.getY();
WITHOUT_CLASSIFICATION	Set up the property panels for collaboration diagrams:
WITHOUT_CLASSIFICATION	this is neat...
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addNodeRelatedEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphNodeRenderer#getFigNodeFor( org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer, java.lang.Object, java.util.Map)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.PopupGenerator#getPopUpActions(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	Although not generally true for GEF, for Argo we know that the layer is a LayerPerspective which knows the associated diagram
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	TODO: assumes public
WITHOUT_CLASSIFICATION	Modifiers ...
WITHOUT_CLASSIFICATION	TODO: assumes public, user pref for default visibility? do I have to check the namespace here? (Toby)
WITHOUT_CLASSIFICATION	elementOrdering(figures);
WITHOUT_CLASSIFICATION	elementOrdering(figures);
WITHOUT_CLASSIFICATION	Set up the property panels for deployment diagrams:
WITHOUT_CLASSIFICATION	actions for toolbar
WITHOUT_CLASSIFICATION	Getters for plugin modules:
WITHOUT_CLASSIFICATION	so it still looks like a cube
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.PopupGenerator#getPopUpActions(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	add the listeners to the newOwner
WITHOUT_CLASSIFICATION	elementOrdering(figures);
WITHOUT_CLASSIFICATION	elementOrdering(figures);
WITHOUT_CLASSIFICATION	Modifiers ...
WITHOUT_CLASSIFICATION	_bigPort.setBounds(x+1, y+1, w-2, h-2);
WITHOUT_CLASSIFICATION	nothing extra to do currently
WITHOUT_CLASSIFICATION	North, South, West, East, South-West
WITHOUT_CLASSIFICATION	end class PredIsStartpackage
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addNode(java.lang.Object)
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	If the layer is null, then most likely we are being deleted.
WITHOUT_CLASSIFICATION	GraphModel implementation
WITHOUT_CLASSIFICATION	MutableGraphModel implementation
WITHOUT_CLASSIFICATION	Both ends must be defined and nodes that are on the graph already.
WITHOUT_CLASSIFICATION	VetoableChangeListener implementation
WITHOUT_CLASSIFICATION	throws PropertyVetoException
WITHOUT_CLASSIFICATION	singleton
WITHOUT_CLASSIFICATION	end class StateDiagramGraphModel
WITHOUT_CLASSIFICATION	Don't do it for comment.
WITHOUT_CLASSIFICATION	(MElementImport)
WITHOUT_CLASSIFICATION	(MTransition)
WITHOUT_CLASSIFICATION	prevent no changes...
WITHOUT_CLASSIFICATION	If a UML object is found, you can not remove selected elms.
WITHOUT_CLASSIFICATION	check parameter types:
WITHOUT_CLASSIFICATION	If nothing is selected, then not allowed to remove it.
WITHOUT_CLASSIFICATION	If only Figs without owner are selected, then you can remove them!
WITHOUT_CLASSIFICATION	end class PredIsFinalState
WITHOUT_CLASSIFICATION	This presumes that the layer is set after the owner:
WITHOUT_CLASSIFICATION	If it is concurrent and contains concurrent regions, the bottom region has a minimum height
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigEdge#setFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#paint(java.awt.Graphics)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.PopupGenerator#getPopUpActions(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	The purpose of this method is not explained and it give give NPE depending on z order of figs as they are read. For now ignore if null but for future lets delete this.
WITHOUT_CLASSIFICATION	We only handle the case where a region has been removed:
WITHOUT_CLASSIFICATION	Check if multiple items are selected:
WITHOUT_CLASSIFICATION	Check if multiple items are selected:
WITHOUT_CLASSIFICATION	If it is concurrent and contains concurrent regions, the regions are resized
WITHOUT_CLASSIFICATION	None of the menu-items below apply when multiple modelelements are selected:
WITHOUT_CLASSIFICATION	do we need to
WITHOUT_CLASSIFICATION	The returned list of Figs is sorted according layout: from top to bottom.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	This makes dragging connected edges very smooth. @see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	The event source is the owner stub state
WITHOUT_CLASSIFICATION	event processing
WITHOUT_CLASSIFICATION	end class FigCompositeState
WITHOUT_CLASSIFICATION	The event source is the submachine state
WITHOUT_CLASSIFICATION	TargetManager.getInstance().addTargetListener(this);
WITHOUT_CLASSIFICATION	ignored - fixed rendering
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	Event handlers
WITHOUT_CLASSIFICATION	Cmd API
WITHOUT_CLASSIFICATION	end class ActionCreatePseudostate
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	Set the drop location in the case of D&D:
WITHOUT_CLASSIFICATION	event processing
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	The submachine has got a new name
WITHOUT_CLASSIFICATION	The event source is the stub state's referenced state or one of the referenced state's path.
WITHOUT_CLASSIFICATION	This indicates a change in association, not name - tfm
WITHOUT_CLASSIFICATION	All states in the new reference state's path are added as listeners
WITHOUT_CLASSIFICATION	The source was the referenced state that has got a new name.
WITHOUT_CLASSIFICATION	ignored - rendering is fixed
WITHOUT_CLASSIFICATION	The source was one of the referenced state's path which has got a new name.
WITHOUT_CLASSIFICATION	The old submachine container is deleted as listener
WITHOUT_CLASSIFICATION	The Referenced State or one of his path's states has got a new name
WITHOUT_CLASSIFICATION	The new submachine container is added as listener
WITHOUT_CLASSIFICATION	All states in the old reference state's path are deleted as listeners
WITHOUT_CLASSIFICATION	Translate any old style sequence diagrams
WITHOUT_CLASSIFICATION	Just swap order of arguments to get to new form
WITHOUT_CLASSIFICATION	Translate any sequence diagrams create with any previous svn work in progress
WITHOUT_CLASSIFICATION	Get the first existing FigNode and if it exists set the y position and height of _pers to be the same as it.
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	ignored - rendering is fixed
WITHOUT_CLASSIFICATION	ignore mouse clicks
WITHOUT_CLASSIFICATION	ignore mouse clicks
WITHOUT_CLASSIFICATION	The Machine State has got a new name
WITHOUT_CLASSIFICATION	This assert fails for the TestPropertyPanels, file GUITestPropertyPanels.zargo:
WITHOUT_CLASSIFICATION	assert w == h;
WITHOUT_CLASSIFICATION	The Machine State has been deleted from model
WITHOUT_CLASSIFICATION	Ignore w and h from here on.
WITHOUT_CLASSIFICATION	keep d even or odd, just like the line width:
WITHOUT_CLASSIFICATION	leave some space below the "include"
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphNodeRenderer#getFigNodeFor( org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer, java.lang.Object, java.util.Map)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphEdgeRenderer#getFigEdgeFor( org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer, java.lang.Object, java.util.Map)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	Although not generally true for GEF, for Argo we know that the layer is a LayerPerspective which knows the associated diagram
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	both have the same settings
WITHOUT_CLASSIFICATION	both have the same owner
WITHOUT_CLASSIFICATION	TODO -> settings
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	There are one or more regions so find the one that the vertex was dropped in
WITHOUT_CLASSIFICATION	The vertex was dropped onto the diagram. Get the region as the first Region in the StateMachine. If there is no region in the StateMachine then create one.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigStateVertex#initNotationProviders (java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#removeFromDiagramImpl()
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.PopupGenerator#getPopUpActions(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	noop - fixed rendering
WITHOUT_CLASSIFICATION	There are no regions so create one and place the vertex there.
WITHOUT_CLASSIFICATION	Temporary start private static final Color[] COLOR_ARRAY = { Color.RED, Color.BLUE, Color.CYAN, Color.YELLOW, Color.GREEN}; private int nextColor = 0; Temporary end
WITHOUT_CLASSIFICATION	setBlinkPorts(false); make port invisble unless mouse enters
WITHOUT_CLASSIFICATION	there can only be one
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getUseTrapRect()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.PopupGenerator#getPopUpActions(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	We aren't able to resize neither the top bound from the first region nor the bottom bound from the last region.
WITHOUT_CLASSIFICATION	The group must be resized if a text field exceed the bounds
WITHOUT_CLASSIFICATION	if curHandle.index is 0 or 2, the adjacent region is the previous region but if it is 5 or 7, the adjacent region is the next region. curHandle.index show which corner of the bound we are dragging.
WITHOUT_CLASSIFICATION	A Concurrent region cannot have incoming or outgoing transitions so incoming or outgoing transitions are redirected to its concurrent composite state container.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseMotionListener#mouseDragged(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseMotionListener#mouseMoved(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	nothing we can do about veto, so just ignore it
WITHOUT_CLASSIFICATION	nothing we can do about veto, so just ignore it
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	singleton
WITHOUT_CLASSIFICATION	event processing
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	/ event handlers - MouseListener and MouseMotionListener implementation
WITHOUT_CLASSIFICATION	or just the owner?
WITHOUT_CLASSIFICATION	Listen to machine deletion, to delete the diagram.
WITHOUT_CLASSIFICATION	this in case we are being deleted
WITHOUT_CLASSIFICATION	The namespace of the statemachine is changed!
WITHOUT_CLASSIFICATION	return;
WITHOUT_CLASSIFICATION	return;
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	A binary association is not a node so reject.
WITHOUT_CLASSIFICATION	throws PropertyVetoException
WITHOUT_CLASSIFICATION	If location is non-null, convert to a rectangle that we can use
WITHOUT_CLASSIFICATION	prevent no changes...
WITHOUT_CLASSIFICATION	check parameter types:
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	Model.getStateMachinesHelper() .isAddingStatemachineAllowed(base);
WITHOUT_CLASSIFICATION	Set up the property panels for statechart diagrams:
WITHOUT_CLASSIFICATION	if location is null here the position of the new figNode is set after in org.tigris.gef.base.ModePlace.mousePressed(MouseEvent e)
WITHOUT_CLASSIFICATION	MModelElement modelElement = elementImport.getModelElement();
WITHOUT_CLASSIFICATION	top of the hierarchy is ME:
WITHOUT_CLASSIFICATION	top of the hierarchy is ME:
WITHOUT_CLASSIFICATION	then Generalizable Element
WITHOUT_CLASSIFICATION	then Generalizable Element
WITHOUT_CLASSIFICATION	then Classifier & Package
WITHOUT_CLASSIFICATION	navigable.... only want incoming
WITHOUT_CLASSIFICATION	then Classifier
WITHOUT_CLASSIFICATION	MutableGraphModel implementation
WITHOUT_CLASSIFICATION	VetoableChangeListener implementation
WITHOUT_CLASSIFICATION	cast the params
WITHOUT_CLASSIFICATION	N.B. A node which is an Association is either a n-ary association or the Class part of an AssociationClass
WITHOUT_CLASSIFICATION	check param types: only some connections are legal uml connections:
WITHOUT_CLASSIFICATION	set the new end type!
WITHOUT_CLASSIFICATION	rerouting the destination:
WITHOUT_CLASSIFICATION	rerouting the source:
WITHOUT_CLASSIFICATION	empty at the moment
WITHOUT_CLASSIFICATION	move down
WITHOUT_CLASSIFICATION	empty at the moment
WITHOUT_CLASSIFICATION	empty at the moment
WITHOUT_CLASSIFICATION	move more right
WITHOUT_CLASSIFICATION	move left
WITHOUT_CLASSIFICATION	use left and right, up and down
WITHOUT_CLASSIFICATION	calculate the higher and lower Figs
WITHOUT_CLASSIFICATION	the amount of the "sidestep"
WITHOUT_CLASSIFICATION	If center points are "close enough" we just adjust the endpoints of the line a little bit. Otherwise we add a jog in the middle to deal with the offset. TODO: Epsilon is currently fixed, but could probably be computed dynamically as 10% of the width of the narrowest figure or some other value which is visually not noticeable.
WITHOUT_CLASSIFICATION	currentEdge.setBetweenNearestPoints(false);
WITHOUT_CLASSIFICATION	LOG.debug(result + " node1: " + this + ", node2 " + node);
WITHOUT_CLASSIFICATION	split = (split == null || split.isStandalone()) ? node : split;
WITHOUT_CLASSIFICATION	(xOffset - curW) / 2;
WITHOUT_CLASSIFICATION	Element is allowed, but only NamedElement can return nonempty list
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Set the drop location in the case of D&D:
WITHOUT_CLASSIFICATION	self associations are special cases. No need to let the maze runner find the way.
WITHOUT_CLASSIFICATION	Link does not exist in UML2
WITHOUT_CLASSIFICATION	now we construct the zig zag inheritance line getUnderlyingFig()
WITHOUT_CLASSIFICATION	Class to display graphics for a UML Link in a diagram. <p> The underlined association name is shown next to the middle of the path. TODO: Show more notation as described in the standard: "A rolename may be shown at each end of the link. An association name may be shown near the path. If present, it is underlined to indicate an instance. Links do not have instance names, they take their identity from the instances that they relate. Multiplicity is not shown for links because they are instances. Other association adornments (aggregation, composition, navigation) may be shown on the link ends."
WITHOUT_CLASSIFICATION	Text group to contain name & stereotype
WITHOUT_CLASSIFICATION	end class FigLink
WITHOUT_CLASSIFICATION	The next line is needed so that we have the right dimension when drawing this Fig on the diagram by pressing down the mouse button, even before releasing the mouse button:
WITHOUT_CLASSIFICATION	Stereotype covers NameFig:
WITHOUT_CLASSIFICATION	Compartments from top to bottom:
WITHOUT_CLASSIFICATION	Make all the parts match the main fig
WITHOUT_CLASSIFICATION	by default, do not show operations nor attributes:
WITHOUT_CLASSIFICATION	We're going to change the name immediately, so just use ""
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	actions for toolbar
WITHOUT_CLASSIFICATION	TODO: place comments near connected classes TODO: place from middle towards outer edges? (or place largest groups first)
WITHOUT_CLASSIFICATION	boolean hasPackages = false; TODO: move "package in row" to NodeRow
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	This calls the getters to fetch actions even though the action variables are defined is instances of this class. This is because any number of action getters could have been overridden in a descendant and it is the action from that overridden method that should be returned in the array.
WITHOUT_CLASSIFICATION	since UML2, this must appear before the isAClass clause
WITHOUT_CLASSIFICATION	this rectangle marks the operation section; all operations are inside it
WITHOUT_CLASSIFICATION	2nd compartment, so adjust Y appropriately
WITHOUT_CLASSIFICATION	TODO: We should be able to just call renderingChanged on the child figs here instead of doing an updateOperations...
WITHOUT_CLASSIFICATION	TODO: We just need to get someone to re-render a single line of text which represents the element here, but I'm not sure how to do that. - tfm TODO: Bob replies - we shouldn't be interested in this event here. The FigFeature (or its notation) should be listen for change and the FigFeature should be update from that.
WITHOUT_CLASSIFICATION	Collect the set of model elements that we want to listen to
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#translate(int, int)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	add the listeners to the newOwner
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	Make all the parts match the main fig
WITHOUT_CLASSIFICATION	check if any stereotype is defined
WITHOUT_CLASSIFICATION	and the stereotypes of its features
WITHOUT_CLASSIFICATION	and its features
WITHOUT_CLASSIFICATION	and the parameter of its operations
WITHOUT_CLASSIFICATION	Update the listeners to match the desired set using the minimal update facility
WITHOUT_CLASSIFICATION	Modifier ...
WITHOUT_CLASSIFICATION	Create a Body that reacts to double-clicks and jumps to a diagram.
WITHOUT_CLASSIFICATION	Add ...
WITHOUT_CLASSIFICATION	Visibility ...
WITHOUT_CLASSIFICATION	Set properties of the stereotype box. Initially not set to be displayed, but this will be changed when we try to render it, if we find we have a stereotype.
WITHOUT_CLASSIFICATION	There are 2 boxes showing lines: the tab and the body.
WITHOUT_CLASSIFICATION	This populates the stereotypes area:
WITHOUT_CLASSIFICATION	else nothing changed
WITHOUT_CLASSIFICATION	else nothing changed
WITHOUT_CLASSIFICATION	we got at least one stereotype
WITHOUT_CLASSIFICATION	the user wants to hide them
WITHOUT_CLASSIFICATION	Modifier ...
WITHOUT_CLASSIFICATION	Visibility ...
WITHOUT_CLASSIFICATION	The figPoly is located at the right of the name text. The nameFig size is increased, so that it fits its text, and the figPoly next to the text, all within the boundaries of the nameFig.
WITHOUT_CLASSIFICATION	If we have any number of stereotypes displayed, then allow some space for that (only width, height is included in nameFig):
WITHOUT_CLASSIFICATION	take into account the tab is not as wide as the body:
WITHOUT_CLASSIFICATION	we want at least some of the package body to be displayed
WITHOUT_CLASSIFICATION	And now aSize has the answer
WITHOUT_CLASSIFICATION	Save our old boundaries (needed later), and get minimum size info. "aSize" will be used to maintain a running calculation of our size at various points.
WITHOUT_CLASSIFICATION	The new size can not be smaller than the minimum.
WITHOUT_CLASSIFICATION	Now resize all sub-figs, including not displayed figs. Start by the name. We override the getMinimumSize if it is less than our view (21 pixels hardcoded!). Add in the shared extra, plus in this case the correction.
WITHOUT_CLASSIFICATION	Now sort out the stereotype display. If the stereotype is displayed, move the upper boundary of the name compartment up and set new bounds for the name and the stereotype compartments and the stereoLineBlinder that blanks out the line between the two
WITHOUT_CLASSIFICATION	Advance currentY to where the start of the body box is, remembering that it overlaps the next box by 1 pixel. Calculate the size of the body box, and update the Y pointer past it if it is displayed.
WITHOUT_CLASSIFICATION	-1 for 1 pixel overlap
WITHOUT_CLASSIFICATION	set bounds of big box
WITHOUT_CLASSIFICATION	The figPoly is located at the right edge of the nameFig. The nameFig size is such that it at least fits its text, and the figPoly next to the text. Making the package bigger, causes the figPoly to stick to the right edge.
WITHOUT_CLASSIFICATION	Now force calculation of the bounds of the figure, update the edges and trigger anyone who's listening to see if the "bounds" property has changed.
WITHOUT_CLASSIFICATION	Only show the menuitems if they make sense:
WITHOUT_CLASSIFICATION	save first
WITHOUT_CLASSIFICATION	while
WITHOUT_CLASSIFICATION	If we get here then we didn't get the default diagram.
WITHOUT_CLASSIFICATION	Try to create a new class diagram.
WITHOUT_CLASSIFICATION	if package
WITHOUT_CLASSIFICATION	if doubleclicks
WITHOUT_CLASSIFICATION	change prefix
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	add the listeners to the newOwner
WITHOUT_CLASSIFICATION	and its features
WITHOUT_CLASSIFICATION	end class FigPackage
WITHOUT_CLASSIFICATION	Readonly class: no generalization, no association to self
WITHOUT_CLASSIFICATION	end class StylePanelFigPackage
WITHOUT_CLASSIFICATION	In the DeploymentDiagram there are no Generalizations
WITHOUT_CLASSIFICATION	Self-association isn't draggable
WITHOUT_CLASSIFICATION	end class StylePanelFigInterface
WITHOUT_CLASSIFICATION	No Generalizations on Deployment Diagram
WITHOUT_CLASSIFICATION	and its stereotypes
WITHOUT_CLASSIFICATION	event handling
WITHOUT_CLASSIFICATION	event handling
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	Set the drop location in the case of D&D:
WITHOUT_CLASSIFICATION	Set the drop location in the case of D&D:
WITHOUT_CLASSIFICATION	add the listeners to the newOwner
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	Stereotype covers NameFig:
WITHOUT_CLASSIFICATION	Compartments from top to bottom:
WITHOUT_CLASSIFICATION	Make all the parts match the main fig
WITHOUT_CLASSIFICATION	Collect the set of model elements that we want to listen to
WITHOUT_CLASSIFICATION	and its features
WITHOUT_CLASSIFICATION	and the stereotypes of its features
WITHOUT_CLASSIFICATION	and the parameter of its operations
WITHOUT_CLASSIFICATION	Use super because not fully init'd
WITHOUT_CLASSIFICATION	and its enumerationLiterals
WITHOUT_CLASSIFICATION	And now add listeners to them all:
WITHOUT_CLASSIFICATION	Put all the bits together, suppressing bounds calculations until we're all done for efficiency.
WITHOUT_CLASSIFICATION	The next line is needed so that we have the right dimension when drawing this Fig on the diagram by pressing down the mouse button, even before releasing the mouse button:
WITHOUT_CLASSIFICATION	stereotype fig covers the name fig:
WITHOUT_CLASSIFICATION	Set the bounds of the figure to the total of the above
WITHOUT_CLASSIFICATION	If moved into an Package
WITHOUT_CLASSIFICATION	If default Namespace is not already set
WITHOUT_CLASSIFICATION	The next if-clause is important for the Deployment-diagram it detects if the enclosing fig is a component, in this case the container will be set for the owning Interface
WITHOUT_CLASSIFICATION	Testing: Add a parameter to an operation on an Interface. Does the Interface Fig adapt its width?
WITHOUT_CLASSIFICATION	Set up the property panels for class diagrams:
WITHOUT_CLASSIFICATION	The figure that holds the text of the note.
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	@see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyPressed(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	Update the listeners to match the desired set using the minimal update facility
WITHOUT_CLASSIFICATION	Get the size of the text field.
WITHOUT_CLASSIFICATION	Mark this as newly created. This is to get round the problem with creating figs for loaded comments that had stereotypes. They are saved with their dimensions INCLUDING the stereotype, but since we pretend the stereotype is not visible, we add height the first time we render such a comment. This is a complete fudge, and really we ought to address how comment objects with stereotypes are saved. But that will be hard work.
WITHOUT_CLASSIFICATION	update the relative sizes and positions of internel Figs
WITHOUT_CLASSIFICATION	update any text, colors, fonts, etc.
WITHOUT_CLASSIFICATION	parse the text that was edited
WITHOUT_CLASSIFICATION	Resize the text figure
WITHOUT_CLASSIFICATION	resize the FigNode to accomodate the new text
WITHOUT_CLASSIFICATION	Not used, do nothing.
WITHOUT_CLASSIFICATION	Not used, do nothing.
WITHOUT_CLASSIFICATION	Resize the big port around the figure
WITHOUT_CLASSIFICATION	The text element has no border, so the line color doesn't matter.
WITHOUT_CLASSIFICATION	The text is always opaque.
WITHOUT_CLASSIFICATION	? 2LINE_WIDTH?
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphNodeRenderer#getFigNodeFor( org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer, java.lang.Object, java.util.Map)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigEdge#setFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	Make a seamless integration of the text in the note figure.
WITHOUT_CLASSIFICATION	user interaction methods
WITHOUT_CLASSIFICATION	accessor methods
WITHOUT_CLASSIFICATION	If we have a stereotype displayed, then allow some space for that (width and height)
WITHOUT_CLASSIFICATION	And add the gaps around the textfield to get the minimum size of the note.
WITHOUT_CLASSIFICATION	Since this is a complex polygon, there's no easy way to resize it.
WITHOUT_CLASSIFICATION	Just move the corner to it's new position.
WITHOUT_CLASSIFICATION	/ Internal methods
WITHOUT_CLASSIFICATION	Remove the commentedge. If there are more then one comment-edges between the 2 objects, then delete them all.
WITHOUT_CLASSIFICATION	all connected edges
WITHOUT_CLASSIFICATION	Only adjust the stereotype height if we are not newly created. This gets round the problem of loading classes with stereotypes defined, which have the height already including the stereotype.
WITHOUT_CLASSIFICATION	Whatever happened we are no longer newly created, so clear the flag. Then set the bounds for the rectangle we have defined.
WITHOUT_CLASSIFICATION	end class StylePanelFigClass
WITHOUT_CLASSIFICATION	TODO: get tip string from comment
WITHOUT_CLASSIFICATION	This one is still usable, so let's retain it,
WITHOUT_CLASSIFICATION	the last one needs extra space below it
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#removeFromDiagram()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigEdge#setDestFigNode(org.tigris.gef.presentation.FigNode)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigEdge#setSourceFigNode(org.tigris.gef.presentation.FigNode)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	Although not generally true for GEF, for Argo we know that the layer is a LayerPerspective which knows the associated diagram
WITHOUT_CLASSIFICATION	Although not generally true for GEF, for Argo we know that the layer is a LayerPerspective which knows the associated diagram
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	event handling
WITHOUT_CLASSIFICATION	Set the drop location in the case of D&D:
WITHOUT_CLASSIFICATION	contructors
WITHOUT_CLASSIFICATION	Modifiers ...
WITHOUT_CLASSIFICATION	The next line is needed so that we have the right dimension when drawing this Fig on the diagram by pressing down the mouse button, even before releasing the mouse button:
WITHOUT_CLASSIFICATION	Make all the parts match the main fig
WITHOUT_CLASSIFICATION	Visibility ...
WITHOUT_CLASSIFICATION	stereotype fig covers the name fig:
WITHOUT_CLASSIFICATION	element will normally be null when called from PGML parser It will get it's source & destination set later in attachEdges
WITHOUT_CLASSIFICATION	Unfortunately the Fig and it's associated CommentEdge will not be fully initialized yet here if we're being loaded from a PGML file. The remainder of the initialization will happen when set{Dest|Source}FigNode are called from PGMLStackParser.attachEdges()
WITHOUT_CLASSIFICATION	unimplemented
WITHOUT_CLASSIFICATION	Alternatively, we could just return null here, so that you can not create a comment just linked to a comment this way - which is a bit uncommon, but not illegal, so for consistency, we better allow it.
WITHOUT_CLASSIFICATION	return null;
WITHOUT_CLASSIFICATION	Class to display a Stereotype declaration figure using Classifier box notation.<p> TODO: This is just a place-holder right now! - tfm This needs to show tags and constraints.
WITHOUT_CLASSIFICATION	Add...
WITHOUT_CLASSIFICATION	Show ...
WITHOUT_CLASSIFICATION	register for tagDefinitions:
WITHOUT_CLASSIFICATION	TODO: constraints, ...
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractAction#isEnabled()
WITHOUT_CLASSIFICATION	Set the drop location in the case of D&D:
WITHOUT_CLASSIFICATION	Make all the parts match the main fig
WITHOUT_CLASSIFICATION	Put all the bits together, suppressing bounds calculations until we're all done for efficiency.
WITHOUT_CLASSIFICATION	The next line is needed so that we have the right dimension when drawing this Fig on the diagram by pressing down the mouse button, even before releasing the mouse button:
WITHOUT_CLASSIFICATION	TODO: Need named Tags and Constraints compartments here addFig(tagsFig); addFig(constraintsFig);
WITHOUT_CLASSIFICATION	If moved into an Package
WITHOUT_CLASSIFICATION	If default Namespace is not already set
WITHOUT_CLASSIFICATION	When this is called from PGMLStackParser.attachEdges, we finished the initialization of owning pseudo element (CommentEdge)
WITHOUT_CLASSIFICATION	If the Operation/Reception is abstract, then the text will be set to italics.
WITHOUT_CLASSIFICATION	avoid GEF calcDrawingArea bug when nothing in a diagram.
WITHOUT_CLASSIFICATION	TODO: Add Tags & Constraints addMenu.add(TargetManager.getInstance().getAddAttributeAction()); addMenu.add(TargetManager.getInstance().getAddOperationAction());
WITHOUT_CLASSIFICATION	avoid GEF calcDrawingArea bug when nothing in a diagram.
WITHOUT_CLASSIFICATION	No generalizations in Deployment Diagrams
WITHOUT_CLASSIFICATION	the diagram image data
WITHOUT_CLASSIFICATION	copy the gif image to the clipboard
WITHOUT_CLASSIFICATION	the diagram image data
WITHOUT_CLASSIFICATION	hide grid, otherwise can't see anything
WITHOUT_CLASSIFICATION	bigPort.setFilled(f);
WITHOUT_CLASSIFICATION	background color.
WITHOUT_CLASSIFICATION	2 Pixel padding after compartment
WITHOUT_CLASSIFICATION	Set up hide all / show all
WITHOUT_CLASSIFICATION	Perform the action
WITHOUT_CLASSIFICATION	Only the bigPort may be filled
WITHOUT_CLASSIFICATION	?LINE_WIDTH?
WITHOUT_CLASSIFICATION	see parent
WITHOUT_CLASSIFICATION	?LINE_WIDTH?
WITHOUT_CLASSIFICATION	We remove all of them:
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.undo.UndoableAction#isEnabled()
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	?LINE_WIDTH?
WITHOUT_CLASSIFICATION	If we don't have a fig for this UML object, we'll need to add one. We set the bounds, but they will be reset later.
WITHOUT_CLASSIFICATION	but its position may have been changed:
WITHOUT_CLASSIFICATION	bounds not relevant here, but I am perfectionist...
WITHOUT_CLASSIFICATION	We need to set a new notationprovider, since the Notation language may have been changed:
WITHOUT_CLASSIFICATION	add it again (but now in the right sequence)
WITHOUT_CLASSIFICATION	Now put the text in We must handle the case where the text is null
WITHOUT_CLASSIFICATION	No longer abstract to allow subclasses to remove, so we provide a null default implementation
WITHOUT_CLASSIFICATION	If this is not overridden it will revert to the old behavior All internal subclasses have been updated, but this if for compatibility of non-ArgoUML extensions.
WITHOUT_CLASSIFICATION	Find the compartment fig for this umlObject:
WITHOUT_CLASSIFICATION	Override superclass to do nothing. Fill property cannot be changed.
WITHOUT_CLASSIFICATION	Override superclass to do nothing. Line width cannot be changed.
WITHOUT_CLASSIFICATION	Override superclass to do nothing. Line width property cannot be changed.
WITHOUT_CLASSIFICATION	aggregation
WITHOUT_CLASSIFICATION	end class ActionSrcMultOneToMany
WITHOUT_CLASSIFICATION	TODO: set font?
WITHOUT_CLASSIFICATION	to circumvent too many registered listeners
WITHOUT_CLASSIFICATION	static variables
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#hit(java.awt.Rectangle)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Calling connect() will add the edge to the GraphModel and any LayerPersectives on that GraphModel will get a edgeAdded event and will add an appropriate FigEdge (determined by the GraphEdgeRenderer).
WITHOUT_CLASSIFICATION	ending editing
WITHOUT_CLASSIFICATION	USED BY PGML.tee
WITHOUT_CLASSIFICATION	Actually return the FigEdge that the FigEdgePort is part of.
WITHOUT_CLASSIFICATION	throw new IllegalArgumentException();
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	event handling
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	If the user selects an Action that is already selected in sticky mode (double clicked) then we turn off sticky mode and make sure no action is selected.
WITHOUT_CLASSIFICATION	Here the actions to divide a region
WITHOUT_CLASSIFICATION	The 1st region has an invisible divider line (the box is always invisible):
WITHOUT_CLASSIFICATION	Throw out any previous elements that were enclosed but are not a concurrent region; let's move them onto the first region:
WITHOUT_CLASSIFICATION	linewidth?
WITHOUT_CLASSIFICATION	The divider line should be visible, so no need to change its color.
WITHOUT_CLASSIFICATION	Make the composite state 1 region higher:
WITHOUT_CLASSIFICATION	TODO: Verify this. IIUC, then this triggers the CompountStateFig to draw itself correctly. Hence, there was a reason to wait this long to make the state concurrent.
WITHOUT_CLASSIFICATION	Look for the dashed edge
WITHOUT_CLASSIFICATION	We have the dashed edge now find the opposite FigNode
WITHOUT_CLASSIFICATION	Prevent triggering too many events by setName().
WITHOUT_CLASSIFICATION	not???
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Consume to stop other modes from trying to take over
WITHOUT_CLASSIFICATION	marker interface only
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#removeFromDiagram()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)
WITHOUT_CLASSIFICATION	Only reset the text if the two are not the same (i.e the fig has moved, rather than we've just edited the text, when setTargetBBox() will have made them the same). Note that styleBounds could be null, so we do the test this way round.
WITHOUT_CLASSIFICATION	Can't do anything if we don't have a fig.
WITHOUT_CLASSIFICATION	2 Pixel padding after compartment
WITHOUT_CLASSIFICATION	or vice versa?
WITHOUT_CLASSIFICATION	Provide feedback to the user that their name was not accepted
WITHOUT_CLASSIFICATION	Subtract the the offset of the click, to take account of user having not initially clicked in the centre.
WITHOUT_CLASSIFICATION	super returns -1 if any of GEFs buttons was hit (but maybe one of the not-GEF-buttons)
WITHOUT_CLASSIFICATION	Do not show border line, make transparent:
WITHOUT_CLASSIFICATION	cleanup of unused FigText's
WITHOUT_CLASSIFICATION	TODO: This doesn't do anything special with keywords. They should probably go first.
WITHOUT_CLASSIFICATION	There is one fig more in the group than (stereotypes + keyword):
WITHOUT_CLASSIFICATION	The keyword fig already exists.
WITHOUT_CLASSIFICATION	This will contain the Figs that we do not need anymore:
WITHOUT_CLASSIFICATION	bounds not relevant here
WITHOUT_CLASSIFICATION	bounds not relevant here
WITHOUT_CLASSIFICATION	The stereotype fig already exists.
WITHOUT_CLASSIFICATION	The boundary box as held in the target fig, and as listed in the boundary box style field (null if we don't have anything valid)
WITHOUT_CLASSIFICATION	remove all stereotypes that have a graphical icon
WITHOUT_CLASSIFICATION	TODO: check!
WITHOUT_CLASSIFICATION	set new bounds for all included figs
WITHOUT_CLASSIFICATION	StylePanelFigClass relies on getPanelTarget() to return a FigCompartmentBox
WITHOUT_CLASSIFICATION	Get class box, because we will set it's bounding box
WITHOUT_CLASSIFICATION	Get class box, because we will set it's bounding box in text field
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Calling connect() will add the edge to the GraphModel and any LayerPersectives on that GraphModel will get a edgeAdded event and will add an appropriate FigEdge (determined by the GraphEdgeRenderer).
WITHOUT_CLASSIFICATION	The keyword fig does not exist yet. Let's create one:
WITHOUT_CLASSIFICATION	keywords which look like a stereotype (e.g. <<interface>>) have no owner
WITHOUT_CLASSIFICATION	if there are no stereotypes, we return (0,0), preventing double lines in the class (see issue 4939)
WITHOUT_CLASSIFICATION	end class StylePanelFigAssociationClass
WITHOUT_CLASSIFICATION	/ Constructors /
WITHOUT_CLASSIFICATION	/ Main methods /
WITHOUT_CLASSIFICATION	Create the singleton if it does not exist, and then return it
WITHOUT_CLASSIFICATION	When a new target is selected, we have to check if it 's a use case. Then, the icone "add extension point" have to become enabled.
WITHOUT_CLASSIFICATION	Find the target in the project browser. We can only do anything if its a use case.
WITHOUT_CLASSIFICATION	Create a new extension point and make it the browser target. Then invoke the superclass action method.
WITHOUT_CLASSIFICATION	end class ActionAddExtensionPoint
WITHOUT_CLASSIFICATION	We have already confirmed the connection is valid
WITHOUT_CLASSIFICATION	Detach any edges (such as comment edges) already attached to the FigAssociation before the FigAssociation is removed. They'll later be re-attached to the new FigNodeAssociation
WITHOUT_CLASSIFICATION	If there are bits of an association class then remember their location and path.
WITHOUT_CLASSIFICATION	Create the new FigNodeAssociation and locate it.
WITHOUT_CLASSIFICATION	Add the association ends to the graph model
WITHOUT_CLASSIFICATION	Add the edges (such as comment edges) that were on the old FigAssociation to our new FigNodeAssociation and make sure they are positioned correctly.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DropTargetListener#dragEnter( java.awt.dnd.DropTargetDragEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DropTargetListener#dragOver( java.awt.dnd.DropTargetDragEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DropTargetListener#dropActionChanged( java.awt.dnd.DropTargetDragEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	get the model elements that are being transfered.
WITHOUT_CLASSIFICATION	multiplicity
WITHOUT_CLASSIFICATION	end class ModeCreateAssociation
WITHOUT_CLASSIFICATION	&& ((UMLDiagram) dia).doesAccept(dtde.getSource())
WITHOUT_CLASSIFICATION	Create a new FigText instance based on the given mouse down event and the state of the parent Editor.
WITHOUT_CLASSIFICATION	System.err.println("NullPointerException ignored.");
WITHOUT_CLASSIFICATION	end class SPFigEdgeModelElement
WITHOUT_CLASSIFICATION	System.err.println("NullPointerException ignored.");
WITHOUT_CLASSIFICATION	Get all our sub Figs and hit them with the big stick too
WITHOUT_CLASSIFICATION	Only show the path item when there is an owning namespace.
WITHOUT_CLASSIFICATION	Only show the path item when there is an owning namespace.
WITHOUT_CLASSIFICATION	enumerate all selected figures and update their path accordingly
WITHOUT_CLASSIFICATION	Force the line-width to 0, since the FigGroup that contains the stereotype may want to show a border, but we don't.
WITHOUT_CLASSIFICATION	compartments
WITHOUT_CLASSIFICATION	TODO: Support commentEdges. TODO: Support associations to self. @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	add
WITHOUT_CLASSIFICATION	20 = height of name fig ?
WITHOUT_CLASSIFICATION	Now force calculation of the bounds of the figure, update the edges and trigger anyone who's listening to see if the "bounds" property has changed.
WITHOUT_CLASSIFICATION	2LINE_WIDTH? or extra padding?
WITHOUT_CLASSIFICATION	Set properties of the stereotype box.
WITHOUT_CLASSIFICATION	The nameFig is transparent, since this is a box and the fill color is drawn by the bigPort.
WITHOUT_CLASSIFICATION	Use "aSize" to build up the minimum size. Start with the size of the name compartment and build up.
WITHOUT_CLASSIFICATION	Only take into account the stereotype width, not the height, since the height is included in the name fig:
WITHOUT_CLASSIFICATION	Add the height of all the compartments (if there are any), and check their minimum width:
WITHOUT_CLASSIFICATION	Save our old boundaries so it can be used in property message later
WITHOUT_CLASSIFICATION	Make sure we don't try to set things smaller than the minimum
WITHOUT_CLASSIFICATION	The box for the compartments is somewhere inside the outside bounds:
WITHOUT_CLASSIFICATION	Now the new nameFig height will include the stereotype height:
WITHOUT_CLASSIFICATION	The new height can not be less than the name height:
WITHOUT_CLASSIFICATION	Calculate the minimum needed height for all the compartments:
WITHOUT_CLASSIFICATION	Distribute the extra height over the visible compartments:
WITHOUT_CLASSIFICATION	Increase the height of the fig:
WITHOUT_CLASSIFICATION	Finally set the bounds of the big box and the border fig:
WITHOUT_CLASSIFICATION	hide compartment
WITHOUT_CLASSIFICATION	Hiding one compartment means that the Fig returns to minimal dimensions:
WITHOUT_CLASSIFICATION	@see javax.swing.JComponent#setVisible(boolean)
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.PathConv#stuffPoint(java.awt.Point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.PathConv#setClosestPoint(java.awt.Point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.PathConv#applyOffsetAmount(java.awt.Point, java.awt.Point, int, java.awt.Point)
WITHOUT_CLASSIFICATION	Alternatively, we could reduce the height of the Fig by the height of this one hidden compartment. But that would not be possible for the width - so we better return to minimal dimensions overall.
WITHOUT_CLASSIFICATION	show compartment
WITHOUT_CLASSIFICATION	This sets the lineWidth of all in the group:
WITHOUT_CLASSIFICATION	NameFig and StereotypeFig are handled by parent.
WITHOUT_CLASSIFICATION	forceRepaintShadow();
WITHOUT_CLASSIFICATION	Update the diagram, and other users of these settings:
WITHOUT_CLASSIFICATION	@jve:decl-index=0:visual-constraint="10,10"
WITHOUT_CLASSIFICATION	find the point offset on the line that gives a correct offset
WITHOUT_CLASSIFICATION	default angle is 90 deg.
WITHOUT_CLASSIFICATION	Boundary condition in GEF, make sure this is LESS THAN, not equal
WITHOUT_CLASSIFICATION	If we're using a fixed offset, just add it and return No collision detection is done in this case
WITHOUT_CLASSIFICATION	Check for a collision between our computed position and the edge
WITHOUT_CLASSIFICATION	increase offset by 2px at a time
WITHOUT_CLASSIFICATION	Get the points representing the poly line for our edge
WITHOUT_CLASSIFICATION	increase offset by increments until we're clear
WITHOUT_CLASSIFICATION	limit our retries in case its too hard to get free
WITHOUT_CLASSIFICATION	If we timed out, give it one more try on the other side
WITHOUT_CLASSIFICATION	count >= limit
WITHOUT_CLASSIFICATION	Force the line-width to 0, since the FigGroup that contains the stereotype may want to show a border, but we don't.
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, "Final point #" + count + " " + result + " offset of " + scaledOffset);
WITHOUT_CLASSIFICATION	segment size for computing slope
WITHOUT_CLASSIFICATION	Two points for line segment used to compute slope of path here NOTE that this is the average slope, not instantaneous, so it will give screwy results near bends in the path
WITHOUT_CLASSIFICATION	If our position was clamped, try to make it up on the other end
WITHOUT_CLASSIFICATION	Can't get the slope of a point. Just return an arbitrary point.
WITHOUT_CLASSIFICATION	Our angle theta is arctan(opposite/adjacent) Because y increases going down the screen, positive angles are clockwise rather than counterclockwise
WITHOUT_CLASSIFICATION	This shouldn't happen, because of our line segment size check
WITHOUT_CLASSIFICATION	"We're going vertical!" - Goose in "Top Gun"
WITHOUT_CLASSIFICATION	Arctan only returns -PI/2 to PI/2 Handle the other two quadrants and normalize to 0 - 2PI
WITHOUT_CLASSIFICATION	Quadrant II & III
WITHOUT_CLASSIFICATION	Quadrant IV
WITHOUT_CLASSIFICATION	Set the following for some backward compatibility with old algorithm
WITHOUT_CLASSIFICATION	Add displacement angle to slope
WITHOUT_CLASSIFICATION	Transform to 0 - 2PI range if we've gone all the way around circle
WITHOUT_CLASSIFICATION	Compute our deltas
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE,result.x + ", " + result.y + " theta = " + theta 180 / Math.PI + " dx = " + dx + " dy = " + dy);
WITHOUT_CLASSIFICATION	Load the standard colour, just add an alpha channel.
WITHOUT_CLASSIFICATION	Should never get here. If we do, return the inner point.
WITHOUT_CLASSIFICATION	Called by propertyChange
WITHOUT_CLASSIFICATION	this does a calcBounds()
WITHOUT_CLASSIFICATION	NOTE: This listener needs to always be active even if this tab isn't visible
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.Diagram#getClassAndModelID()
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	The clone method that should clone the JGraph with it's contents and the toolbar with it's contents. Since both JGraph as the toolbar are coming from the GEF framework, cloning them will be hard work and should actually not be placed here but in a clone method of the JGraph and the Toolbar. @see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see java.awt.Component#setVisible(boolean)
WITHOUT_CLASSIFICATION	If location is non-null, convert to a rectangle that we can use
WITHOUT_CLASSIFICATION	The following is the default implementation for diagrams of which the owner is a namespace.
WITHOUT_CLASSIFICATION	source source position destination destination position number of objects to be copied
WITHOUT_CLASSIFICATION	"unnamed " +
WITHOUT_CLASSIFICATION	TODO: should update to size of diagram contents
WITHOUT_CLASSIFICATION	This should not be needed if the above is correct, but let's be sure:
WITHOUT_CLASSIFICATION	This should not be needed if the above is correct, but let's be sure:
WITHOUT_CLASSIFICATION	ActionPaste.getInstance().setEnabled( Globals.clipBoard != null && !Globals.clipBoard.isEmpty());
WITHOUT_CLASSIFICATION	next statement gives us a clone JGraph but not a cloned Toolbar
WITHOUT_CLASSIFICATION	@see org.tigris.gef.event.ModeChangeListener#modeChange(org.tigris.gef.event.ModeChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseMotionListener#mouseMoved(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	remains selected
WITHOUT_CLASSIFICATION	the old selection
WITHOUT_CLASSIFICATION	Target might not have been initialised yet.
WITHOUT_CLASSIFICATION	add to selection
WITHOUT_CLASSIFICATION	Optimize for the normal case to minimize target changes
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	Assuming the target is some model element.
WITHOUT_CLASSIFICATION	how to handle empty target lists? probably the TabDiagram should only show an empty pane in that case
WITHOUT_CLASSIFICATION	Assuming the target is some model element.
WITHOUT_CLASSIFICATION	was ""
WITHOUT_CLASSIFICATION	Although we register for notification of diagrams being deleted, we currently depend on the TargetManager to assign a new target when this happens When we implement MDI and have our own list of open diagrams we can ressurect the use of this
WITHOUT_CLASSIFICATION	Any Swing work done here needs to be queued to the AWT thread since we don't know what thread our event will arrive on
WITHOUT_CLASSIFICATION	- RedrawManager.lock();
WITHOUT_CLASSIFICATION	- RedrawManager.lock();
WITHOUT_CLASSIFICATION	getLayerManager().getActiveLayer().paint(g);
WITHOUT_CLASSIFICATION	- RedrawManager.unlock(); - _redrawer.repairDamage();
WITHOUT_CLASSIFICATION	getLayerManager().getActiveLayer().paint(g);
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see javax.swing.Action#getValue(java.lang.String)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	This makes the text not touch the text-border line:
WITHOUT_CLASSIFICATION	TODO: We don't currently have any settings that can change on a per-fig basis, so we can just use the project/diagram defaults settings = new DiagramSettings(renderSettings);
WITHOUT_CLASSIFICATION	Certain types of fixed text (e.g. a FigStereotype with a keyword) may not have an owner
WITHOUT_CLASSIFICATION	Now, we link it to the modelelements which are represented by FigNode
WITHOUT_CLASSIFICATION	update all tools' enabled status
WITHOUT_CLASSIFICATION	remember the fig for later
WITHOUT_CLASSIFICATION	Let's build the comment first, unlinked.
WITHOUT_CLASSIFICATION	Prevent e.g. AssociationClasses from being added trice:
WITHOUT_CLASSIFICATION	Select the new comment as target
WITHOUT_CLASSIFICATION	Create the Node Fig for the comment itself and draw it
WITHOUT_CLASSIFICATION	Create the comment links and draw them
WITHOUT_CLASSIFICATION	Place the comment Fig on the nicest spot on the diagram
WITHOUT_CLASSIFICATION	If we're drawing from an edge
WITHOUT_CLASSIFICATION	$NON-NLS-<n>$
WITHOUT_CLASSIFICATION	$NON-NLS-<n>$
WITHOUT_CLASSIFICATION	$NON-NLS-<n>$
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.undo.UndoableAction#isEnabled()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#paint(java.awt.Graphics)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.PopupGenerator#getPopUpActions(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Calling connect() will add the edge to the GraphModel and any LayerPersectives on that GraphModel will get a edgeAdded event and will add an appropriate FigEdge (determined by the GraphEdgeRenderer).
WITHOUT_CLASSIFICATION	user made a false start
WITHOUT_CLASSIFICATION	So, the target is a MAssociationRole
WITHOUT_CLASSIFICATION	MVW This is not the correct way, but it allows connecting a CommentEdge to it! See e.g. ActionAddNote for the correct way. Testcase: 1. Select the message. 2. Click the Comment tool.
WITHOUT_CLASSIFICATION	end class ActionAddMessage
WITHOUT_CLASSIFICATION	let's use groups to construct the different text sections at the association
WITHOUT_CLASSIFICATION	No further listeners required in this case - the rest is handled by the notationProvider and sub-Figs.
WITHOUT_CLASSIFICATION	This only happens if model-change events arrive before we are completely constructed.
WITHOUT_CLASSIFICATION	x^2 + y^2 = r^2 (equation of a circle)
WITHOUT_CLASSIFICATION	max distance is set at 100 pixels, (rSquared = 100^2)
WITHOUT_CLASSIFICATION	east
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#removeFromDiagram()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	end class FigAssociation
WITHOUT_CLASSIFICATION	Note that "multiplicity" is what is the notation is listening for in UML1.4 "uppervalue" are listened to in UML2. It is not currently why it is not required to register for "lowerValue" also.
WITHOUT_CLASSIFICATION	no need to listen to these property changes - the notationProvider takes care of this.
WITHOUT_CLASSIFICATION	no need to listen to these property changes - the notationProvider takes care of this.
WITHOUT_CLASSIFICATION	, new String[] {"name", "visibility", "stereotype"}
WITHOUT_CLASSIFICATION	, new String[] {"name", "visibility", "stereotype"}
WITHOUT_CLASSIFICATION	These are a list of arrow types.
WITHOUT_CLASSIFICATION	Added to the arrow type for navigable
WITHOUT_CLASSIFICATION	Finished editing. Parse the text that was edited. Only the role is editable, hence:
WITHOUT_CLASSIFICATION	figEdge.showHelp(role.getParsingHelp()); role.setText();
WITHOUT_CLASSIFICATION	Pass everything else to superclass
WITHOUT_CLASSIFICATION	end class ActionNavigability
WITHOUT_CLASSIFICATION	Nothing yet. Later maybe something like:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	putNotationArgument("showAssociationName", getSettings().isShowAssociationNames());
WITHOUT_CLASSIFICATION	The text the user has filled in the textfield is first checked to see if it's a valid multiplicity. If so then that is the multiplicity to be set. If not the input is rejected.
WITHOUT_CLASSIFICATION	Fonts and colors should get updated automatically for contained figs
WITHOUT_CLASSIFICATION	There is none...
WITHOUT_CLASSIFICATION	only initialized to prevent warning
WITHOUT_CLASSIFICATION	not supported for this target
WITHOUT_CLASSIFICATION	make space for the clarifier margin between text and border
WITHOUT_CLASSIFICATION	This next line presumes that the 1st fig with this owner is the previous port - and consequently nullifies the owner of this 1st fig.
WITHOUT_CLASSIFICATION	Add a listener for changes to any property
WITHOUT_CLASSIFICATION	Check if multiple items are selected:
WITHOUT_CLASSIFICATION	Show ...
WITHOUT_CLASSIFICATION	popupAddOffset should be equal to the number of items added here:
WITHOUT_CLASSIFICATION	TODO: The following is carried over from setOwner, but probably isn't needed renderingChanged(); It does the following (add as needed): updateNameText(); updateStereotypeText(); updateStereotypeIcon(); updateBounds(); damage();
WITHOUT_CLASSIFICATION	Be careful here since subclasses could have overridden this with the assumption that it wouldn't be called before the constructors finished
WITHOUT_CLASSIFICATION	TODO: MVW: I think this has to be: clone.nameFig = (FigSingleLineText) cloneFig; but have not the means to investigate, since this code is not yet used. Enable the menu-items for Copy/Paste to test... BTW: In some other FigNodeModelElement classes I see the same mistake.
WITHOUT_CLASSIFICATION	this rectangle marks the whole modelelement figure; everything is inside it:
WITHOUT_CLASSIFICATION	Clone this figure. After the base clone method has been called determine which child figs of the clone represent the name, stereotype and port. <p> TODO: enclosedFigs, encloser and eventSenders may also need to be cloned. @see java.lang.Object#clone() @return the cloned figure
WITHOUT_CLASSIFICATION	Idem here: clone.stereotypeFig = (FigStereotypesGroup) cloneFig;
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getEnclosingFig()
WITHOUT_CLASSIFICATION	update any text, colors, fonts, etc.
WITHOUT_CLASSIFICATION	parse the text that was edited
WITHOUT_CLASSIFICATION	add stereotype view submenu
WITHOUT_CLASSIFICATION	The node's been placed on the diagram
WITHOUT_CLASSIFICATION	Add stereotypes submenu
WITHOUT_CLASSIFICATION	Set the namespace of the enclosed model element to the namespace of the encloser.
WITHOUT_CLASSIFICATION	Find all ElementResidences between the class and the component:
WITHOUT_CLASSIFICATION	There was no ElementResidence yet, so let's create one:
WITHOUT_CLASSIFICATION	The node's been placed within some Fig
WITHOUT_CLASSIFICATION	There were 2 ElementResidences .. strange case.
WITHOUT_CLASSIFICATION	There is already a correct ElementResidence
WITHOUT_CLASSIFICATION	The owner is already linked to the component
WITHOUT_CLASSIFICATION	We are getting events we don't want. Filter them out.
WITHOUT_CLASSIFICATION	Only update the bounds if they change:
WITHOUT_CLASSIFICATION	We handle and consume editing events
WITHOUT_CLASSIFICATION	resize the FigNode to accommodate the new text
WITHOUT_CLASSIFICATION	If the source of the event is an UML object, e.g. the owner of this Fig (but not always only the owner is shown, e.g. for a class, also its attributes are shown), then the UML model has been changed.
WITHOUT_CLASSIFICATION	TODO: Should this not be an assert?
WITHOUT_CLASSIFICATION	west
WITHOUT_CLASSIFICATION	If the user double clicks on any part of this FigNode, pass it down to one of the internal Figs. This allows the user to initiate direct text editing. @see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	south
WITHOUT_CLASSIFICATION	event handlers - MouseListener implementation
WITHOUT_CLASSIFICATION	Convert null to empty string and clear help message
WITHOUT_CLASSIFICATION	it is done
WITHOUT_CLASSIFICATION	this enables direct text editing for sub figs of a FigGroup object:
WITHOUT_CLASSIFICATION	either layer or owner was null
WITHOUT_CLASSIFICATION	Default is to do nothing
WITHOUT_CLASSIFICATION	Default is to do nothing
WITHOUT_CLASSIFICATION	Default is to do nothing
WITHOUT_CLASSIFICATION	Default is to do nothing
WITHOUT_CLASSIFICATION	This test needed for a FigPool
WITHOUT_CLASSIFICATION	Get model listeners removed:
WITHOUT_CLASSIFICATION	is used as InstanceSpecification, see UMLDeploymentDiagram
WITHOUT_CLASSIFICATION	TODO: what about ObjectNode? return org.eclipse.uml2.uml.ObjectNode.class;
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(ActionEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	TODO: State & Vertex are independent classes in UML 2.1
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	only initialized to prevent warning
WITHOUT_CLASSIFICATION	not supported for this target
WITHOUT_CLASSIFICATION	internal methods
WITHOUT_CLASSIFICATION	TODO assert modelElement != null???
WITHOUT_CLASSIFICATION	Default for name and stereotype is no border
WITHOUT_CLASSIFICATION	Override FigNode implementation to keep setOwner from getting called.
WITHOUT_CLASSIFICATION	TODO: Use per-project undo manager, not global
WITHOUT_CLASSIFICATION	TODO: Use per-project undo manager, not global
WITHOUT_CLASSIFICATION	TODO: Use per-project undo manager, not global
WITHOUT_CLASSIFICATION	TODO: Use per-project undo manager, not global
WITHOUT_CLASSIFICATION	Use DiagramInterface to add classes to diagram
WITHOUT_CLASSIFICATION	ActionAddAllClassesFromModel
WITHOUT_CLASSIFICATION	we have an edge (the UML modelelement!)
WITHOUT_CLASSIFICATION	situation 1
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigEdge#setFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	Text group to contain name & stereotype
WITHOUT_CLASSIFICATION	computeRoute(); this recomputes the route if you reload the diagram.
WITHOUT_CLASSIFICATION	in case someone turns it on
WITHOUT_CLASSIFICATION	Do not allow fill to change. We should see through the text to the color of the main FIg background.
WITHOUT_CLASSIFICATION	Now force minimum dimensions for the text:
WITHOUT_CLASSIFICATION	Now add the areas around the text to return the complete size:
WITHOUT_CLASSIFICATION	calculate the source and dest figs for to self assoc
WITHOUT_CLASSIFICATION	reset the pointIndex
WITHOUT_CLASSIFICATION	check pre-conds
WITHOUT_CLASSIFICATION	Set-up:
WITHOUT_CLASSIFICATION	the fig that was under the mouse when it was released
WITHOUT_CLASSIFICATION	make a nice little target area:
WITHOUT_CLASSIFICATION	and find the Fig:
WITHOUT_CLASSIFICATION	last is the top fig.
WITHOUT_CLASSIFICATION	check intermediate post-condition.
WITHOUT_CLASSIFICATION	delegate the re-routing to graphmodels.
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	set it to an invalid number by default to make sure it is set correctly.
WITHOUT_CLASSIFICATION	figPoly.setFillColor(col);
WITHOUT_CLASSIFICATION	figClone._polygon = (Polygon) _polygon.clone();
WITHOUT_CLASSIFICATION	north
WITHOUT_CLASSIFICATION	Do nothing until code is reviewed
WITHOUT_CLASSIFICATION	Do nothing until code is reviewed
WITHOUT_CLASSIFICATION	TODO: Do nothing until code is reviewed
WITHOUT_CLASSIFICATION	Message
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Crazy numbering scheme at work here. Here's how the handle numbers are laid out. Values 0-7 are defined by GEF and go left to right, top to bottom (ie not clockwise or counterclockwise). Values 10-14 zigzag North, South, West, East, Southwest. If you can correctly guess where 15 will go, you should buy a lottery ticket immediately. <pre> 10 0-------1-------2 | | 12 3 4 13 | | 14 5-------6-------7 11 </pre>
WITHOUT_CLASSIFICATION	ClassifierRole ClassifierRole
WITHOUT_CLASSIFICATION	Simulate a press of the mouse above the calculated point:
WITHOUT_CLASSIFICATION	Calculate the drop location, and place every n-th element at an offset proportional to n.
WITHOUT_CLASSIFICATION	super implementation found a hit
WITHOUT_CLASSIFICATION	Take canvas scrolling into account. The implementation below does place the element correctly when the canvas has been scrolled.
WITHOUT_CLASSIFICATION	Simulate a release of the mouse:
WITHOUT_CLASSIFICATION	Overridden in order to implement PathCompartmentContainer.
WITHOUT_CLASSIFICATION	do nothing by default
WITHOUT_CLASSIFICATION	Don't allow drag outside of bounds of diagram
WITHOUT_CLASSIFICATION	Overridden in order to implement PathCompartmentContainer.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#paint(java.awt.Graphics)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#calcBounds()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#removeFromDiagram()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	If the user has selected ModePlace either by a diagram tool or AddToDiagram then we don't want to show the clarifiers.
WITHOUT_CLASSIFICATION	If the user has selected ModePlace either by a diagram tool or AddToDiagram then we don't want to show the toolbelt items.
WITHOUT_CLASSIFICATION	Remember what handle was clicked for the case where the drag is released over empty space
WITHOUT_CLASSIFICATION	transparent cyan
WITHOUT_CLASSIFICATION	yellow
WITHOUT_CLASSIFICATION	translucent green
WITHOUT_CLASSIFICATION	super(ModeCreatePolyEdge.class, "edgeClass", Model.getMetaTypes().getAssociation(), name);
WITHOUT_CLASSIFICATION	set this to true on to enable debugging figs
WITHOUT_CLASSIFICATION	anchor position
WITHOUT_CLASSIFICATION	The EnumerationLiteral uses a dedicated notation that supports parsing "name1;name2;name3" and stereotypes. Also supports deleting a literal by erasing text.
WITHOUT_CLASSIFICATION	TODO: The UML does not seem to define this name. Or is it?
WITHOUT_CLASSIFICATION	The serialVersionUID (generated by Eclipse)
WITHOUT_CLASSIFICATION	UML spec for Generalizations doesn't call for name
WITHOUT_CLASSIFICATION	Name & stereotypes get updated by superclass
WITHOUT_CLASSIFICATION	Update the discriminator if it changed
WITHOUT_CLASSIFICATION	show it
WITHOUT_CLASSIFICATION	fig.calcBounds();
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	we only take the filename, not the whole system path
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	event handlers - MouseListener implementation
WITHOUT_CLASSIFICATION	The following does not seem to work - centered the Fig instead. getNameFig().setJustificationByName("center");
WITHOUT_CLASSIFICATION	get the widest of all textfigs calculate the total height
WITHOUT_CLASSIFICATION	Create the new FigAssociation edge to replace the node
WITHOUT_CLASSIFICATION	Center the NameFig, since center justification does not seem to work.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Do nothing, this rect will always be transparent
WITHOUT_CLASSIFICATION	Do nothing, this rect will always be transparent
WITHOUT_CLASSIFICATION	@see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	update any text, colors, fonts, etc.
WITHOUT_CLASSIFICATION	update the relative sizes and positions of internel Figs
WITHOUT_CLASSIFICATION	popupAddOffset should be equal to the number of items added here:
WITHOUT_CLASSIFICATION	Add stereotypes submenu
WITHOUT_CLASSIFICATION	We handle and consume editing events
WITHOUT_CLASSIFICATION	Detach any non-associationend edges (such as comment edges) already attached before this association node is removed. They'll later be re-attached to the new FigAssociation
WITHOUT_CLASSIFICATION	Now we can remove ourself (which will also remove the attached association ends edges)
WITHOUT_CLASSIFICATION	Add the non-associationend edges (such as comment edges) that were originally attached to this and attach them to the new FigAssociation and make sure they are positioned correctly.
WITHOUT_CLASSIFICATION	List of model element listeners we've registered.
WITHOUT_CLASSIFICATION	Added this part to load the extra menu content
WITHOUT_CLASSIFICATION	Owner related todo items:
WITHOUT_CLASSIFICATION	Fig related todo items:
WITHOUT_CLASSIFICATION	parse the text that was edited
WITHOUT_CLASSIFICATION	Pass everything except editing events to superclass
WITHOUT_CLASSIFICATION	If the source of the event is an UML object, then the UML model has been changed.
WITHOUT_CLASSIFICATION	The following is a possible future improvement of the modelChanged() function. Michiel: Propose not to do this to keep architecture stable.
WITHOUT_CLASSIFICATION	Default implementation is to do nothing
WITHOUT_CLASSIFICATION	Default implementation is to do nothing
WITHOUT_CLASSIFICATION	TODO: Update setting
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	We moused over an object just as it was deleted transient condition - doesn't require I18N
WITHOUT_CLASSIFICATION	TODO: We don't have any settings that can change per-fig currently so we can just use the default settings; settings = new DiagramSettings(renderSettings);
WITHOUT_CLASSIFICATION	Default implementation is to do nothing
WITHOUT_CLASSIFICATION	Default implementation is to do nothing
WITHOUT_CLASSIFICATION	Default implementation is to do nothing
WITHOUT_CLASSIFICATION	Default implementation is to do nothing
WITHOUT_CLASSIFICATION	Required for MouseListener interface, but we only care about clicks
WITHOUT_CLASSIFICATION	Required for MouseListener interface, but we only care about clicks
WITHOUT_CLASSIFICATION	Required for MouseListener interface, but we only care about clicks
WITHOUT_CLASSIFICATION	Required for MouseListener interface, but we only care about clicks
WITHOUT_CLASSIFICATION	No need to update if model element went away
WITHOUT_CLASSIFICATION	Required for KeyListener interface, but not used
WITHOUT_CLASSIFICATION	Required for KeyListener interface, but not used
WITHOUT_CLASSIFICATION	Both ends must be defined and nodes that are on the graph already.
WITHOUT_CLASSIFICATION	internal methods
WITHOUT_CLASSIFICATION	If the edge is from a circle to a circle (e.g. between use cases) we have our own implementation overriding GEF. Which attempts to keep the edges perpendicular if the edge is already close to perpendicular.
WITHOUT_CLASSIFICATION	newFC = _content;
WITHOUT_CLASSIFICATION	GEF sets a different Fig than the one that we had at construction time, so we need to set its color and width
WITHOUT_CLASSIFICATION	place the edge on the layer and update the diagram
WITHOUT_CLASSIFICATION	end computeRoute
WITHOUT_CLASSIFICATION	TODO: Does this help?
WITHOUT_CLASSIFICATION	If this is not a circle to circle edge we default to let GEF calculate edge route.
WITHOUT_CLASSIFICATION	? two iterations of refinement, maybe should be a for-loop
WITHOUT_CLASSIFICATION	Give up if the assocation ends don't have a type defined
WITHOUT_CLASSIFICATION	Get the two ends of any valid edge
WITHOUT_CLASSIFICATION	Only allow binary associations
WITHOUT_CLASSIFICATION	Set the drop location in the case of D&D:
WITHOUT_CLASSIFICATION	TODO: assumes public
WITHOUT_CLASSIFICATION	(MElementImport)
WITHOUT_CLASSIFICATION	Modifiers ...
WITHOUT_CLASSIFICATION	This sets the lineWidth of all in the group:
WITHOUT_CLASSIFICATION	NameFig and StereotypeFig are handled by parent.
WITHOUT_CLASSIFICATION	If the line angle is less than 3 degrees then snap the line straight
WITHOUT_CLASSIFICATION	/ Methods that implement the MutableGraphModel interface /
WITHOUT_CLASSIFICATION	A dependency potentially has many clients and suppliers. We only consider the first of each (not clear that we should really accept the case where there is more than one of either)
WITHOUT_CLASSIFICATION	Add the node, check that it is an actor or use case and add it to the model namespace.
WITHOUT_CLASSIFICATION	Tell GEF its changed
WITHOUT_CLASSIFICATION	Add the element and place it in the namespace of the model
WITHOUT_CLASSIFICATION	Tell GEF
WITHOUT_CLASSIFICATION	Suggest that actors may not connect (see JavaDoc comment about this).
WITHOUT_CLASSIFICATION	Everything else is OK
WITHOUT_CLASSIFICATION	Remove a node
WITHOUT_CLASSIFICATION	Remove an edge
WITHOUT_CLASSIFICATION	Something was added - nothing for us to worry about
WITHOUT_CLASSIFICATION	Invoke the parent constructor first
WITHOUT_CLASSIFICATION	Invoke the parent refresh first
WITHOUT_CLASSIFICATION	end class StylePanelFigUseCase
WITHOUT_CLASSIFICATION	initialize any other Figs here
WITHOUT_CLASSIFICATION	Only the head should be filled (not the text)
WITHOUT_CLASSIFICATION	Accumulate a bounding box for all the Figs in the group.
WITHOUT_CLASSIFICATION	name updating
WITHOUT_CLASSIFICATION	Text fig to hold the <<include>> label
WITHOUT_CLASSIFICATION	The <<include>> label. It's not a true stereotype, so don't use the stereotype support
WITHOUT_CLASSIFICATION	TRY SOME ACTION ERRORS
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	Set the drop location in the case of D&D:
WITHOUT_CLASSIFICATION	Check if multiple items are selected:
WITHOUT_CLASSIFICATION	Make all the parts match the main fig
WITHOUT_CLASSIFICATION	If the element import is in the old owned, it means it must have been removed. Make sure the associated model element is removed.
WITHOUT_CLASSIFICATION	By default we don't show the attribute check box. Mark this object as a listener for the check box.
WITHOUT_CLASSIFICATION	These are the positions of child figs inside this fig They must be added in the constructor in this order. For now the name must not be last as this would force zero width lines (until GEF is fixed)
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order Put this rectangle behind the rest, so it goes first
WITHOUT_CLASSIFICATION	Make the line dashed
WITHOUT_CLASSIFICATION	Add an arrow with an open arrow head
WITHOUT_CLASSIFICATION	Make the edge go between nearest points
WITHOUT_CLASSIFICATION	Create a new version of the relevant fig
WITHOUT_CLASSIFICATION	The nodes at the two ends
WITHOUT_CLASSIFICATION	The figs for the two end nodes
WITHOUT_CLASSIFICATION	Link the new include relationship in to the ends
WITHOUT_CLASSIFICATION	Link the new dependency in to the ends
WITHOUT_CLASSIFICATION	Side effect: This creates the fig:
WITHOUT_CLASSIFICATION	A use case has an external separator. External means external to the compartment box. This horizontal line sticks out of the box, and touches the ellipse edge.
WITHOUT_CLASSIFICATION	by default, do not show extension points:
WITHOUT_CLASSIFICATION	Use arbitrary dimensions for now.
WITHOUT_CLASSIFICATION	Get the parent vector first
WITHOUT_CLASSIFICATION	Formula for a is described in the overall class description.
WITHOUT_CLASSIFICATION	For an ellipse, we can put the box in the middle:
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#paint(java.awt.Graphics)
WITHOUT_CLASSIFICATION	Make the edge go between nearest points
WITHOUT_CLASSIFICATION	Add menu to add an extension point or note. Placed one before last, so the "Properties" entry is always last.
WITHOUT_CLASSIFICATION	Where there is more than one supplier or client, take the first element in each case. There really ought to be a check that there are some here for safety.
WITHOUT_CLASSIFICATION	Modifier menu. Placed one before last, so the "Properties" entry is always last.
WITHOUT_CLASSIFICATION	Work out the radii of the ellipse, a and b. The top right corner of the ellipse (Cartesian coordinates, centered on the origin) will be at (x,y)
WITHOUT_CLASSIFICATION	Result as integers, rounded up. We ensure that the radii are integers for convenience.
WITHOUT_CLASSIFICATION	Use the code from the FigCircle, not the one from Fig.
WITHOUT_CLASSIFICATION	Let's register for events from all modelelements that change the name or body text:
WITHOUT_CLASSIFICATION	Register for name changes, added extensionPoints and abstract makes the text italic. All Figs need to listen to "remove", too:
WITHOUT_CLASSIFICATION	register for extension points:
WITHOUT_CLASSIFICATION	Set bounds will be called from our superclass constructor before our constructor has run, so make sure this gets set up if needed.
WITHOUT_CLASSIFICATION	Set up FigText to hold the condition.
WITHOUT_CLASSIFICATION	Join all into a group
WITHOUT_CLASSIFICATION	UML spec for Extend doesn't call for name nor stereotype
WITHOUT_CLASSIFICATION	Make sure the line is dashed
WITHOUT_CLASSIFICATION	Set up the property panels for use case diagrams:
WITHOUT_CLASSIFICATION	Actions specific to the use case diagram toolbar
WITHOUT_CLASSIFICATION	The renderer should be a singleton
WITHOUT_CLASSIFICATION	Allow all Packages and Classifiers..
WITHOUT_CLASSIFICATION	TRY THE PREDECESSORS
WITHOUT_CLASSIFICATION	If location is non-null, convert to a rectangle that we can use
WITHOUT_CLASSIFICATION	TODO: This is using the default platform character encoding specifying an encoding will produce more predictable results
WITHOUT_CLASSIFICATION	The <<extend>> label. It's not a true stereotype, so don't use the stereotype support int y = getNameFig().getBounds().height;
WITHOUT_CLASSIFICATION	Place in the middle of the line and ensure the line is dashed. Add an arrow with an open arrow head. Remember that for an extends relationship, the arrow points to the base use case, but because of the way we draw it, that is still the destination end.
WITHOUT_CLASSIFICATION	Let the group recalculate its bounds and then tell GEF we've finished.
WITHOUT_CLASSIFICATION	We accept a Package, but not a Model or a Subsystem.
WITHOUT_CLASSIFICATION	If we do not exclude a Model here, then dropping the Model on a UseCase diagram causes a package to be drawn.
WITHOUT_CLASSIFICATION	empty list
WITHOUT_CLASSIFICATION	private constructor to enforce singleton
WITHOUT_CLASSIFICATION	some convenience methods
WITHOUT_CLASSIFICATION	read until the end section is found, discard generated content
WITHOUT_CLASSIFICATION	Constructor. <p> TODO: Correct? @param nodes The UML elements, typically classifiers, to generate. @param inModel <code>true</code> if the path is in the model.
WITHOUT_CLASSIFICATION	Class Table
WITHOUT_CLASSIFICATION	Select Buttons
WITHOUT_CLASSIFICATION	Output Directory
WITHOUT_CLASSIFICATION	Compile Checkbox
WITHOUT_CLASSIFICATION	TODO: the last argument (recursive flag) should be a selectable option
WITHOUT_CLASSIFICATION	skip backup files. This is actually a workaround for the cpp generator, which always creates backup files (it's a bug).
WITHOUT_CLASSIFICATION	TODO: Should be improved so that it's recognized whether there is something selected that can actually be generated Nothing selected in the diagram
WITHOUT_CLASSIFICATION	TODO: This is using the default platform character encoding. Specifying an encoding will produce more predictable results
WITHOUT_CLASSIFICATION	TODO: Get saved default directory outputDirectoryComboBox.getModel().setSelectedItem(savedDir);
WITHOUT_CLASSIFICATION	TODO: Get default output directory from user settings Project p = ProjectManager.getManager().getCurrentProject(); p.getProjectSettings().setGenerationOutputDir(path);
WITHOUT_CLASSIFICATION	Generate Button --------------------------------------
WITHOUT_CLASSIFICATION	remove trailing /
WITHOUT_CLASSIFICATION	classify nodes by base path
WITHOUT_CLASSIFICATION	else ignore
WITHOUT_CLASSIFICATION	generate the files
WITHOUT_CLASSIFICATION	Doesn't really matter what set we use.
WITHOUT_CLASSIFICATION	Show Filechooser to select OutputDirectory
WITHOUT_CLASSIFICATION	end class ClassGenerationDialog
WITHOUT_CLASSIFICATION	end class TableModelClassChecks
WITHOUT_CLASSIFICATION	Try Changing the direction of m7
WITHOUT_CLASSIFICATION	private constructor to enforce singleton
WITHOUT_CLASSIFICATION	The diagram already exists in this project. Select it as the current target.
WITHOUT_CLASSIFICATION	TableModel implementation
WITHOUT_CLASSIFICATION	ArgoEventPump.fireEvent( new ArgoImporterEvent(ArgoEventTypes.IMPORTER_ADDED, gen));
WITHOUT_CLASSIFICATION	Check if this diagram already exists in the project
WITHOUT_CLASSIFICATION	Otherwise create a new classdiagram for the package.
WITHOUT_CLASSIFICATION	if the classifier is not in the current diagram, add it:
WITHOUT_CLASSIFICATION	The following calls are ORDER DEPENDENT. Not sure why, but the layer add must come before the model add or we'll end up with duplicate figures in the diagram. - tfm
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	the class is in the diagram so we are on a second pass, find the fig for this class can update its visible state.
WITHOUT_CLASSIFICATION	add edges for a 2-pass r.e. process we might have already added the class but not its edges
WITHOUT_CLASSIFICATION	"Java" is the default module for historical reasons, but it's not required to be there
WITHOUT_CLASSIFICATION	the previous line helps, but we better check again:
WITHOUT_CLASSIFICATION	not a SuffixFilter selected, so we take all
WITHOUT_CLASSIFICATION	filter out all unchanged files
WITHOUT_CLASSIFICATION	set the lastModified value
WITHOUT_CLASSIFICATION	return Arrays.copyOf(selectedFiles, selectedFiles.length);
WITHOUT_CLASSIFICATION	iss.setValue(countFiles + (i + 1) / 10);
WITHOUT_CLASSIFICATION	Roughly equivalent to and derived from old Import.doFile()
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.JFileChooser#approveSelection()
WITHOUT_CLASSIFICATION	@see javax.swing.JFileChooser#cancelSelection()
WITHOUT_CLASSIFICATION	New style importers don't create diagrams, so we'll do it based on the list of newElements that they created
WITHOUT_CLASSIFICATION	Do layout even if problems occurred during import
WITHOUT_CLASSIFICATION	Add messages from caught exceptions
WITHOUT_CLASSIFICATION	Select the correct diagram (implicitly creates it)
WITHOUT_CLASSIFICATION	Add the element to the diagram
WITHOUT_CLASSIFICATION	Print an exception trace to a string buffer
WITHOUT_CLASSIFICATION	TODO: Get the list of extended settings from the current language importer and add those too
WITHOUT_CLASSIFICATION	level 0 import detail
WITHOUT_CLASSIFICATION	level 1 import detail
WITHOUT_CLASSIFICATION	level 2 import detail
WITHOUT_CLASSIFICATION	build the configPanel:
WITHOUT_CLASSIFICATION	de-selects the fig minimising & layout if we are not creating diagrams
WITHOUT_CLASSIFICATION	select the level of import 0 - classifiers only 1 - classifiers plus feature specifications 2 - full import, feature detail
WITHOUT_CLASSIFICATION	cp1252 is often the default, but windows-1252 is the name listed by Charset.availableCharsets
WITHOUT_CLASSIFICATION	Get the extension panel for the configuration settings.
WITHOUT_CLASSIFICATION	ExplorerEventAdaptor.getInstance().structureChanged(); ProjectBrowser.getInstance().getStatusBar().showProgress(0);
WITHOUT_CLASSIFICATION	Create chooser for objects we are to import. Old style modules get to provide their own (although I don't believe any of them do), while new style modules get the a chooser provided by us (which matches what the abstract class FileImportSupport used to provide).
WITHOUT_CLASSIFICATION	this is because of the (senseless?) "All files" FileFilter
WITHOUT_CLASSIFICATION	Parsing file x of z.
WITHOUT_CLASSIFICATION	progress bar
WITHOUT_CLASSIFICATION	For some reason, this alleged directory is a single file This could be that there is some confusion or just the normal, that a single file was selected and is supposed to be imported.
WITHOUT_CLASSIFICATION	Get the contents of the directory
WITHOUT_CLASSIFICATION	The following test can cause trouble with links, because links are accepted as directories, even if they link files. Links could also result in infinite loops. For this reason we don't do this traversing recursively.
WITHOUT_CLASSIFICATION	If this file is a directory
WITHOUT_CLASSIFICATION	TODO: Add filename ?
WITHOUT_CLASSIFICATION	can't remove the last file
WITHOUT_CLASSIFICATION	can't remove from existing one so create new one.
WITHOUT_CLASSIFICATION	Error/warning messageArea
WITHOUT_CLASSIFICATION	gbc.gridheight = 10;
WITHOUT_CLASSIFICATION	cancel/close button
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	the introducing label
WITHOUT_CLASSIFICATION	User closing the progress window is interpreted as cancel request
WITHOUT_CLASSIFICATION	panel for controls
WITHOUT_CLASSIFICATION	This method can be called only if there's a valid selection so go ahead and remove whatever's selected.
WITHOUT_CLASSIFICATION	nothings left, disable firing.
WITHOUT_CLASSIFICATION	Select an index.
WITHOUT_CLASSIFICATION	removed item in last position
WITHOUT_CLASSIFICATION	Just quit
WITHOUT_CLASSIFICATION	the text box containing the problem messages
WITHOUT_CLASSIFICATION	continue and abort buttons
WITHOUT_CLASSIFICATION	listeners
WITHOUT_CLASSIFICATION	stores the action command into the UMLPlainTextDocument class which is also used for setProperty and getProperty
WITHOUT_CLASSIFICATION	TODO: this seems to be called at startup only so no check so far
WITHOUT_CLASSIFICATION	Add an invisible button to be used when everything is off
WITHOUT_CLASSIFICATION	| removed to workaround problems with autosplit OCLEditor.OPTIONMASK_AUTOSPLIT
WITHOUT_CLASSIFICATION	TabModelTarget interface methods
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentShown(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Update our model with our saved target
WITHOUT_CLASSIFICATION	There is no need to test if classes is empty because the shouldBeEnabled mechanism blanks out the possibility to choose this alternative in this case.
WITHOUT_CLASSIFICATION	List classes = getCandidates(); return classes.size() > 0;
WITHOUT_CLASSIFICATION	Our first button is invisible. Selecting it deselects all visible buttons.
WITHOUT_CLASSIFICATION	Set editor's model
WITHOUT_CLASSIFICATION	check ocl parsing constraints
WITHOUT_CLASSIFICATION	do not create a constraint:
WITHOUT_CLASSIFICATION	Parse and check specified constraint.
WITHOUT_CLASSIFICATION	Ignored: Highly unlikely, and what would we do anyway? log it
WITHOUT_CLASSIFICATION	Split constraint body, if user wants us to
WITHOUT_CLASSIFICATION	the constraint _must_ be owned by a namespace
WITHOUT_CLASSIFICATION	the constraint _must_ be owned by a namespace
WITHOUT_CLASSIFICATION	Store constraint body
WITHOUT_CLASSIFICATION	New constraint, first time setData is called
WITHOUT_CLASSIFICATION	a runtime exception that occurs when some internal test fails
WITHOUT_CLASSIFICATION	Check name for consistency with spec
WITHOUT_CLASSIFICATION	Set name
WITHOUT_CLASSIFICATION	Also set name in constraint body -- Added 03/14/2001
WITHOUT_CLASSIFICATION	replace name
WITHOUT_CLASSIFICATION	OK, so that didn't work out... Just ignore any problems and don't set the name in the constraint body better had log it.
WITHOUT_CLASSIFICATION	TODO: Why is this ignored? - tfm - 20070110
WITHOUT_CLASSIFICATION	TRY PREDECESSORS
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	cmd.setObjects(run.getParams().get(0));
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentHidden(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	We have no model event listeners, so no need to do anything
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	TODO: I18N Don't use the empty string for this or it won't show in the list
WITHOUT_CLASSIFICATION	It would be better if we didn't need the container to get the target. This constructor can have zero parameters as soon as we improve targetChanged.
WITHOUT_CLASSIFICATION	TODO: Here too?
WITHOUT_CLASSIFICATION	TODO: Here too?
WITHOUT_CLASSIFICATION	This should not be necessary, but let's be sure:
WITHOUT_CLASSIFICATION	end of interval
WITHOUT_CLASSIFICATION	start of interval
WITHOUT_CLASSIFICATION	Remove old listeners:
WITHOUT_CLASSIFICATION	in middle of interval
WITHOUT_CLASSIFICATION	Allow listening to other elements:
WITHOUT_CLASSIFICATION	Allow listening to other elements:
WITHOUT_CLASSIFICATION	Add new listeners:
WITHOUT_CLASSIFICATION	MVW: This can never happen, isn't it?
WITHOUT_CLASSIFICATION	makes sure we can select 'none'
WITHOUT_CLASSIFICATION	TODO: For large lists, this is doing a linear search of literally thousands of elements
WITHOUT_CLASSIFICATION	Don't try to test this if we're removing the element
WITHOUT_CLASSIFICATION	we tried to remove a value
WITHOUT_CLASSIFICATION	Object[] args = { newValue };
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireIntervalRemoved( Object, int, int)
WITHOUT_CLASSIFICATION	@see TargetListener#targetAdded(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetRemoved(TargetEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	if one or the other is null or they are not equal
WITHOUT_CLASSIFICATION	Do not set buildingModel = false here, otherwise the action for selection is performed.
WITHOUT_CLASSIFICATION	catch callers attempting to use one without other
WITHOUT_CLASSIFICATION	as long as they aren't both null (or a really rare identical string pointer)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	TODO: this seems to be called at startup only so no check so far
WITHOUT_CLASSIFICATION	may only occur as child of the model or in a package
WITHOUT_CLASSIFICATION	to rupdate the diagram set the stimulus name again TODO: Explain that this really works also in the MDR case. Linus is a sceptic.
WITHOUT_CLASSIFICATION	if event source is unknown or the event source is the container's target then update the field
WITHOUT_CLASSIFICATION	check the possibility that this is a promiscuous event
WITHOUT_CLASSIFICATION	a deployment diagram shows something about the whole model according to the UML spec, but we rely on the caller to enforce that if desired.
WITHOUT_CLASSIFICATION	a deployment diagram shows something about the whole model according to the uml spec
WITHOUT_CLASSIFICATION	For a deployment diagram, not just any namespace will do - we need a package.
WITHOUT_CLASSIFICATION	ns is a namespace, but not a package
WITHOUT_CLASSIFICATION	ommit root package name; it's the model's root
WITHOUT_CLASSIFICATION	there is a selection
WITHOUT_CLASSIFICATION	end class ActionCopy
WITHOUT_CLASSIFICATION	Add a predicate for ArgoUML's default capabilities:
WITHOUT_CLASSIFICATION	Parser.ParseAndUpdate(modelObject, s);
WITHOUT_CLASSIFICATION	remove from the model
WITHOUT_CLASSIFICATION	It is a UML element that is not a ModelElement
WITHOUT_CLASSIFICATION	lets see if this diagram has some figs on it
WITHOUT_CLASSIFICATION	no content of diagram
WITHOUT_CLASSIFICATION	we can delete figs like figrects now too
WITHOUT_CLASSIFICATION	TODO: If a namespace with sub-classdiagrams is deleted, then { confirmStr += Translator.localize( "optionpane.remove-from-model-will-remove-subdiagram"); doAsk = true; }
WITHOUT_CLASSIFICATION	we cannot delete the last diagram
WITHOUT_CLASSIFICATION	we cannot delete the model itself
WITHOUT_CLASSIFICATION	static variables
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.text.Document#remove(int, int)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	ArgoDiagram activeDiagram = DiagramUtils.getActiveDiagram(); return (activeDiagram instanceof UMLClassDiagram);
WITHOUT_CLASSIFICATION	TODO: Probably really want to cancel editing ((FigTextEditor) focusOwner).cancelEditing();
WITHOUT_CLASSIFICATION	usage of other sureRemove method is legacy. They should be integrated.
WITHOUT_CLASSIFICATION	the diagram contains figs so lets ask the user if he/she is sure
WITHOUT_CLASSIFICATION	TODO: This catch block needs to be narrower and do something with the caught exception - tfm 20071120 Ignore
WITHOUT_CLASSIFICATION	TODO: All of the following can be broken if we have multiple targets selected
WITHOUT_CLASSIFICATION	OK Button ------------------------------------------
WITHOUT_CLASSIFICATION	Delete Button
WITHOUT_CLASSIFICATION	confirm with the user that he wants to delete, presenting the list of settings to delete
WITHOUT_CLASSIFICATION	procede with the deletion in the model
WITHOUT_CLASSIFICATION	disable the button since no row will be selected now
WITHOUT_CLASSIFICATION	end class SourcePathDialog
WITHOUT_CLASSIFICATION	Mutators hold write lock & will deadlock if use is not thread safe
WITHOUT_CLASSIFICATION	Mutators hold write lock & will deadlock if use is not thread-safe
WITHOUT_CLASSIFICATION	The user cancelled!
WITHOUT_CLASSIFICATION	Custom button text:
WITHOUT_CLASSIFICATION	0
WITHOUT_CLASSIFICATION	1
WITHOUT_CLASSIFICATION	2
WITHOUT_CLASSIFICATION	3
WITHOUT_CLASSIFICATION	TRY SOME PREDECESSOR ERRORS
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.text.Document#remove(int, int)
WITHOUT_CLASSIFICATION	Try adding the extension from the chosen filter.
WITHOUT_CLASSIFICATION	adding project files icon
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	do not use a custom Icon the titles of buttons default button title
WITHOUT_CLASSIFICATION	NOTE: This may be called from a different thread, so we need to be careful of the threading restrictions imposed by AbstractDocument for mutators to be sure we don't deadlock.
WITHOUT_CLASSIFICATION	end class ActionOpenProject
WITHOUT_CLASSIFICATION	TODO: see if the new target has a TV that we can proxy
WITHOUT_CLASSIFICATION	Try adding the default extension.
WITHOUT_CLASSIFICATION	LOG.debug("is a Base or Multiplicity");
WITHOUT_CLASSIFICATION	end class ActionSaveProjectAs
WITHOUT_CLASSIFICATION	only need to this from super()
WITHOUT_CLASSIFICATION	--------------------------------------------------------
WITHOUT_CLASSIFICATION	----- setup similar to the super() implementation -----
WITHOUT_CLASSIFICATION	This action performs the layout and triggers a redraw of the editor pane. @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	/ Proxy methods for real UMLModelElementTaggedValue /
WITHOUT_CLASSIFICATION	load of the new project just reuse of the ActionOpen object
WITHOUT_CLASSIFICATION	Rearrange the diagram layout
WITHOUT_CLASSIFICATION	Leave logging commented out by default for efficiency LOG.debug("determine rendering for: " + value); LOG.debug("show icon: " + showIcon);
WITHOUT_CLASSIFICATION	targets ought to be UML objects or diagrams
WITHOUT_CLASSIFICATION	TODO: We shouldn't need this as well as the above.
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	end class TabProps
WITHOUT_CLASSIFICATION	If our map has any entries for this type, it's a connection type
WITHOUT_CLASSIFICATION	Get the list of valid model item pairs for the given connection type
WITHOUT_CLASSIFICATION	See if there's a pair in this list that match the given model elements
WITHOUT_CLASSIFICATION	@see TargettableModelView#getTargettableModel()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	we tried to remove a value
WITHOUT_CLASSIFICATION	put everything together
WITHOUT_CLASSIFICATION	no title looks better
WITHOUT_CLASSIFICATION	now remove the ones already applied.
WITHOUT_CLASSIFICATION	make lists
WITHOUT_CLASSIFICATION	make buttons
WITHOUT_CLASSIFICATION	ignored this event
WITHOUT_CLASSIFICATION	make buttons layout
WITHOUT_CLASSIFICATION	make listeners
WITHOUT_CLASSIFICATION	Remove the element from Available List
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#setItem(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#getEditorComponent()
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#addActionListener(java.awt.event.ActionListener)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#removeActionListener(java.awt.event.ActionListener)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Implements the source path controller. NOTE: If requested in the future this could be returned from the language modules. TODO: Update this to use the UML 1.4 TagDefinition mechanism instead of UML 1.3 String type tag types. The TagDefinition can be made more specific so that it just applies to Components with a <<sourceModule>> stereotype or something similar. - tfm @author euluis @since 0.17.1
WITHOUT_CLASSIFICATION	end of SourcePathControllerImpl class definition
WITHOUT_CLASSIFICATION	sb.append(Model.getFacade().getName(c));
WITHOUT_CLASSIFICATION	sb.append((String) Model.getFacade().getBody(c));
WITHOUT_CLASSIFICATION	MModelElement
WITHOUT_CLASSIFICATION	next statement is necessary to update the textfield if the selection is equal to what was allready selected
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#selectAll()
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#getItem()
WITHOUT_CLASSIFICATION	@see java.awt.event.FocusListener#focusGained(java.awt.event.FocusEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	necessary to create distance between the textfield and the icon.
WITHOUT_CLASSIFICATION	make new column with LabelledLayout
WITHOUT_CLASSIFICATION	Comment.name text field - editing disabled
WITHOUT_CLASSIFICATION	Comment.body text field - editing disabled
WITHOUT_CLASSIFICATION	Since there are no buttons on this panel, we have to set the size of the buttonpanel, otherwise the title would not be aligned right.
WITHOUT_CLASSIFICATION	Only change the background colour if it is supplied by the LAF. Otherwise leave look and feel to handle this itself.
WITHOUT_CLASSIFICATION	In this case, the bounds are determined by the FigEdge
WITHOUT_CLASSIFICATION	In this case, the bounds are determined by the FigEdge
WITHOUT_CLASSIFICATION	In this case, the bounds (of the box) are determined by the FigClassAssociationClass
WITHOUT_CLASSIFICATION	In this case, the bounds (of the box) are determined by the FigClassAssociationClass
WITHOUT_CLASSIFICATION	A newly created AssociationClass may not have all its parts created by the time we are called
WITHOUT_CLASSIFICATION	A newly created AssociationClass may not have all its parts created by the time we are called
WITHOUT_CLASSIFICATION	TODO: Defer most of this work if the panel isn't visible - tfm
WITHOUT_CLASSIFICATION	@see TargetListener#targetAdded(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetRemoved(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	how to handle empty target lists? probably the TabProps should only show an empty pane in that case
WITHOUT_CLASSIFICATION	chooser.setSelectedFile(new File(fileName));
WITHOUT_CLASSIFICATION	So, let's do it the hard way:
WITHOUT_CLASSIFICATION	TODO: The following can be used when we drop Java 5 support or when an ImageIO GIF writer plugin is bundled cmd = new SaveGIFAction2(Translator.localize("action.save-gif"));
WITHOUT_CLASSIFICATION	If the diagram is empty, GEF won't write anything, leaving us with an empty (and invalid) file. Handle this case ourselves to prevent this from happening.
WITHOUT_CLASSIFICATION	Anything else is handled the normal way
WITHOUT_CLASSIFICATION	Create an image which will do deferred rendering of the GEF diagram on demand as data is pulled from it
WITHOUT_CLASSIFICATION	Action to save a diagram as a GIF image in a supplied OutputStream. TODO: This requires Java 6 in its current state, so don't use. @author Tom Morris <tfmorris@gmail.com>
WITHOUT_CLASSIFICATION	NOTE: GEF's GIF writer uses Jeff Poskanzer's GIF encoder, but that saves a copy of the entire image in an internal buffer before starting work, defeating the whole purpose of our incremental rendering.
WITHOUT_CLASSIFICATION	Java SE 6 has a native GIF writer, but it's not in Java 5. One is available in the JAI-ImageIO library, but we don't currently bundle that and at 6+ MB it seems like a heavyweight solution, but I don't have time to produce a stripped down version right now - tfm https:jai-imageio.dev.java.net/
WITHOUT_CLASSIFICATION	LayerPerspective layer = DiagramUtils.getActiveDiagram().getLayer();
WITHOUT_CLASSIFICATION	Anything else is handled the normal way
WITHOUT_CLASSIFICATION	Create an image which will do deferred rendering of the GEF diagram on demand as data is pulled from it
WITHOUT_CLASSIFICATION	Action to save a diagram as a GIF image in a supplied OutputStream. TODO: This requires Java 6 in its current state, so don't use. @author Tom Morris <tfmorris@gmail.com>
WITHOUT_CLASSIFICATION	we actually are computing max x & max y, not width & height
WITHOUT_CLASSIFICATION	Convert max x/y to width/height
WITHOUT_CLASSIFICATION	Get a DOMImplementation
WITHOUT_CLASSIFICATION	Create an instance of org.w3c.dom.Document
WITHOUT_CLASSIFICATION	Create an instance of the SVG Generator
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	LayerPerspective layer = DiagramUtils.getActiveDiagram().getLayer();
WITHOUT_CLASSIFICATION	we actually are computing max x & max y, not width & height
WITHOUT_CLASSIFICATION	Convert max x/y to width/height
WITHOUT_CLASSIFICATION	Get a DOMImplementation
WITHOUT_CLASSIFICATION	Create an instance of org.w3c.dom.Document
WITHOUT_CLASSIFICATION	Create an instance of the SVG Generator
WITHOUT_CLASSIFICATION	make it stretch vertically
WITHOUT_CLASSIFICATION	"org.argouml.cognitive.critics",
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnClass(int)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	handle multivalued tagged value
WITHOUT_CLASSIFICATION	handle multivalued tagged value
WITHOUT_CLASSIFICATION	Target has been deleted
WITHOUT_CLASSIFICATION	If the row is past the end of our current collection, return an empty string so they can add a new value
WITHOUT_CLASSIFICATION	tagValue = true;
WITHOUT_CLASSIFICATION	for debugging
WITHOUT_CLASSIFICATION	Return the ith element from a Collection. @param collection collection to get element from @param index index of the element to be returned @return the object
WITHOUT_CLASSIFICATION	We really shouldn't add it until after it is set up, but we need it to have an owner for the following method calls
WITHOUT_CLASSIFICATION	Since we aren't sure of ordering, fire event for whole table
WITHOUT_CLASSIFICATION	no way, we have to give up
WITHOUT_CLASSIFICATION	Do nothing during the deprecation period, then it can be removed.
WITHOUT_CLASSIFICATION	@see javax.swing.DefaultListModel#contains(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.DefaultListModel#addElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see TargetListener#targetAdded(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetRemoved(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireContentsChanged( Object, int, int)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	Allow listening to other elements:
WITHOUT_CLASSIFICATION	Allow listening to other elements:
WITHOUT_CLASSIFICATION	we tried to remove a value
WITHOUT_CLASSIFICATION	get the first editable extent (which is OK unless there is more than one editable extent)
WITHOUT_CLASSIFICATION	This can throw an exception if the target has been deleted. We don't want to try locking the repository because this is called from the event delivery thread and could cause a deadlock. Instead catch the exception and leave the model empty.
WITHOUT_CLASSIFICATION	end class ActionImportFromSources
WITHOUT_CLASSIFICATION	Don't test changed element if it was deleted
WITHOUT_CLASSIFICATION	this is never downlighted...
WITHOUT_CLASSIFICATION	Only specified format are allowed.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see TargetListener#targetAdded(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetRemoved(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentHidden(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentShown(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentMoved(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentResized(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Add stereotypes submenu
WITHOUT_CLASSIFICATION	Set up the target and its model element variant.
WITHOUT_CLASSIFICATION	Set the tooltip of the arrow to open combined tools:
WITHOUT_CLASSIFICATION	If the target has changed notify the third party listener if it exists and dispatch a new element event listener to ourself. Otherwise dispatch a target reasserted to ourself.
WITHOUT_CLASSIFICATION	Set the minimum and preferred equal, so that the size is fixed for the labelledlayout.
WITHOUT_CLASSIFICATION	This will add a new ModelElement event listener after update is complete
WITHOUT_CLASSIFICATION	We presume that the container equals this PropPanel.
WITHOUT_CLASSIFICATION	Refresh the target for all our children which weren't getting while not visible
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(ActionEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	This works - we do get an event - and now refresh the UI:
WITHOUT_CLASSIFICATION	to manage the case there are no label/component pairs but just one component
WITHOUT_CLASSIFICATION	If the component is a JLabel which has another component assigned then position/size the label and calculate the size of the registered component
WITHOUT_CLASSIFICATION	Assumes the next child is the labelled component
WITHOUT_CLASSIFICATION	Make sure the component width isn't any greater than its maximum allowed width
WITHOUT_CLASSIFICATION	If the child component is resizable then we don't know it's actual size yet. It will be calculated later as a proportion of the available left over space. For now this is flagged as zero.
WITHOUT_CLASSIFICATION	If a preferred height is not given or is the same as the minimum height then fix the height of this row.
WITHOUT_CLASSIFICATION	Project p = ProjectManager.getManager().getCurrentProject(); Collection elems = ModelManagementHelper.getHelper() .getAllModelElementsOfKind(MClassifier.class);
WITHOUT_CLASSIFICATION	Expressions are DataTypes, not independent model elements be careful not to reuse them
WITHOUT_CLASSIFICATION	Allow listening to other elements: removeOtherModelEventListeners(listTarget);
WITHOUT_CLASSIFICATION	setDoubleBuffered(true);
WITHOUT_CLASSIFICATION	TRY SOME MORE COMPLEX MOVING
WITHOUT_CLASSIFICATION	Implements backspace functionality
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.CaretListener#caretUpdate(javax.swing.event.CaretEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	Allow listening to other elements:
WITHOUT_CLASSIFICATION	Allow listening to other elements:
WITHOUT_CLASSIFICATION	we tried to remove a value
WITHOUT_CLASSIFICATION	there is a selection
WITHOUT_CLASSIFICATION	This can throw an exception if the target has been deleted. We don't want to try locking the repository because this is called from the event delivery thread and could cause a deadlock. Instead catch the exception and leave the model empty.
WITHOUT_CLASSIFICATION	Don't test changed element if it was deleted
WITHOUT_CLASSIFICATION	end class ActionCut
WITHOUT_CLASSIFICATION	Allow listening to other elements: addOtherModelEventListeners(listTarget);
WITHOUT_CLASSIFICATION	if there is a selection on the clipboard
WITHOUT_CLASSIFICATION	get localised strings once only
WITHOUT_CLASSIFICATION	setting the icon
WITHOUT_CLASSIFICATION	setting the tooltip to type and name
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	static variables
WITHOUT_CLASSIFICATION	@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentShown(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentHidden(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Update our model with our saved target
WITHOUT_CLASSIFICATION	Stop updating model when we're not visible
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	in UML2, a td is a property of a stereotype in a profile
WITHOUT_CLASSIFICATION	Only update our model if we're visible
WITHOUT_CLASSIFICATION	Most likely cause of this is that someone deleted our target with the event pump turned off so we didn't get notification. Nothing we can do about it now and we are changing targets anyway, so just log it.
WITHOUT_CLASSIFICATION	This target is a statemachine, for which no diagram exists yet, so, let's use it.
WITHOUT_CLASSIFICATION	end class TabTaggedValues
WITHOUT_CLASSIFICATION	setEnabled((Globals.clipBoard != null && !Globals.clipBoard.isEmpty()) || !isSystemClipBoardEmpty());
WITHOUT_CLASSIFICATION	end class ActionPaste
WITHOUT_CLASSIFICATION	The target is a valid context.
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(ActionEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Let's just build a Statemachine, and put it in a suitable namespace.
WITHOUT_CLASSIFICATION	Follow well-formedness rule for a Class [2]. Determine the owning namespace for the statemachine:
WITHOUT_CLASSIFICATION	upperPanel.setBorder(BorderFactory.createEtchedBorder());
WITHOUT_CLASSIFICATION	buttonBox.add(Box.createRigidArea(new Dimension(0, 20)));
WITHOUT_CLASSIFICATION	String title = getUI().getDialogTitle(this);
WITHOUT_CLASSIFICATION	Test if the given namespace is a valid namespace to add the diagram to. TODO: This method was created to facilitate the merge of this class with ActionAddDiagram. @param ns the namespace to check @return Returns <code>true</code> if valid.
WITHOUT_CLASSIFICATION	TODO: Since there may be multiple top level elements in a project, this should be using the default Namespace (currently undefined) or something similar
WITHOUT_CLASSIFICATION	button action:
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Make sure it's parseable as an number
WITHOUT_CLASSIFICATION	ignored - we just skipped inserting it in our document
WITHOUT_CLASSIFICATION	select.setText(Translator.localize("action.select"));
WITHOUT_CLASSIFICATION	select.add(ActionAddEventAsDeferrableEvent.SINGLETON);
WITHOUT_CLASSIFICATION	newMenu.setText(Translator.localize("action.new"));
WITHOUT_CLASSIFICATION	(MExtend)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	repair action for possible NP after load
WITHOUT_CLASSIFICATION	(MClassifier)
WITHOUT_CLASSIFICATION	TRY SOME MORE ERRORS
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	(MModelElement)
WITHOUT_CLASSIFICATION	to be able to remove dep's later
WITHOUT_CLASSIFICATION	to be able to remove dependencies later
WITHOUT_CLASSIFICATION	ADDONLY_COMMAND determines a changeability kind. TODO: Removed from UML 2.x. Phase out of UI - tfm - 20070529
WITHOUT_CLASSIFICATION	TODO: Removed from UML 2.x - phase out usage - tfm 20070530
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	because we're listening for stereotypes being added and removed but we're really interested in their owned tag definitions, the default implementation won't work for us
WITHOUT_CLASSIFICATION	end class ActionAddAttribute
WITHOUT_CLASSIFICATION	Ask to be notified of any changes to TagDefinitions so that we can track new ones, name changes, etc
WITHOUT_CLASSIFICATION	since UML2 it's easier: TDs only via stereotypes
WITHOUT_CLASSIFICATION	Just mark for rebuild next time since we use lazy loading
WITHOUT_CLASSIFICATION	A stereotype got applied or removed Just mark for rebuild next time since we use lazy loading
WITHOUT_CLASSIFICATION	@see Namespace#pushNamespaceElement(NamespaceElement)
WITHOUT_CLASSIFICATION	@see java.lang.Object#hashCode()
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.Dialog#nameButtons()
WITHOUT_CLASSIFICATION	All strings collate before all UML elements
WITHOUT_CLASSIFICATION	All strings collate before all UML elements
WITHOUT_CLASSIFICATION	Compare path of two elements in reverse order (inner to outer) using a primary strength text collator. This will collate e, E, �, � together, but not eliminate non-identical strings which collate in the same place. @return equivalent of list1.compareTo(list2)
WITHOUT_CLASSIFICATION	and then by their enclosing path to fully distinguish them
WITHOUT_CLASSIFICATION	Elements are collated first by name hoping for a quick solution
WITHOUT_CLASSIFICATION	Keep track of first non-equal comparison to use in case the case-insensitive comparisons all end up equal
WITHOUT_CLASSIFICATION	Add the action to the component
WITHOUT_CLASSIFICATION	It's illegal in UML to have multiple elements in a namespace with the same name, but if it happens, keep them distinct so the user has a chance of catching the error. Pick an arbitrary, but stable, collating order. We don't call them equal because otherwise one will get eliminated from the TreeSet where this comparator is used.
WITHOUT_CLASSIFICATION	If the strings differed only in non-primary characteristics at some point (case, accent, etc) pick an arbitrary, but stable, collating order.
WITHOUT_CLASSIFICATION	{transient=false, volatile=false}
WITHOUT_CLASSIFICATION	Argo customization
WITHOUT_CLASSIFICATION	prohibit instantiation
WITHOUT_CLASSIFICATION	KeyEvent.isActionKey() method
WITHOUT_CLASSIFICATION	Apparently this object had no getItemUID
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	Apparently this object had no getUUID
WITHOUT_CLASSIFICATION	Apparently it had a getItemUID, but we're not allowed to call it
WITHOUT_CLASSIFICATION	Apparently it had a getItemUID, but we're not allowed to call it
WITHOUT_CLASSIFICATION	Apparently it had a getItemUID, but we're not allowed to call it
WITHOUT_CLASSIFICATION	Apparently this object had no setItemUID
WITHOUT_CLASSIFICATION	Apparently it had a setItemUID, but we're not allowed to call it
WITHOUT_CLASSIFICATION	Apparently it had a setItemUID, but we're not allowed to call it
WITHOUT_CLASSIFICATION	class preloading, so packages are there...
WITHOUT_CLASSIFICATION	...getPackage() can return null's, so we have to cater for this:
WITHOUT_CLASSIFICATION	make this thread interruptible, if called from SwingWorker
WITHOUT_CLASSIFICATION	Switch the value back off, so that we will get notified again next time.
WITHOUT_CLASSIFICATION	Ignore any nested exceptions. We don't want infinite loop.
WITHOUT_CLASSIFICATION	Didn't work.
WITHOUT_CLASSIFICATION	Create a proxy object around this handler that can be reflectively added as an Apple ApplicationListener
WITHOUT_CLASSIFICATION	Likely a NoSuchMethodException or an IllegalAccessException loading/invoking eawt.Application methods
WITHOUT_CLASSIFICATION	All of the ApplicationListener methods are void; return null regardless of what happens
WITHOUT_CLASSIFICATION	If the target method returns a boolean, use that as a hint
WITHOUT_CLASSIFICATION	For eclipse setup
WITHOUT_CLASSIFICATION	For ant setup
WITHOUT_CLASSIFICATION	When running from maven
WITHOUT_CLASSIFICATION	If we're setting a handler, enable the About menu item by calling com.apple.eawt.Application reflectively
WITHOUT_CLASSIFICATION	If we're setting a handler, enable the Preferences menu item by calling com.apple.eawt.Application reflectively
WITHOUT_CLASSIFICATION	Override OSXAdapter.callTarget to send information on the file to be opened
WITHOUT_CLASSIFICATION	Ignore if the directory does not exist. This error will throw when running from the ant setup.
WITHOUT_CLASSIFICATION	Ignore if the directory does not exist. This error will throw when running from the Eclipse setup.
WITHOUT_CLASSIFICATION	Ignore if the directory does not exist. This error will throw when running from the Eclipse setup.
WITHOUT_CLASSIFICATION	"org.argouml.notation.providers",fails because sub-packages fail (?) "org.argouml.notation.providers.java", "org.argouml.notation.providers.uml", "org.argouml.notation",fails because sub-packages fail (?) "org.argouml.notation.ui",
WITHOUT_CLASSIFICATION	There was a comment saying that the below has no cycles, but Classycle thinks there's a cycle here too, so I believe there really is one - tfm 20070702 "org.argouml.uml.cognitive.critics",
WITHOUT_CLASSIFICATION	TODO:{"org.argouml.ui", "org.argouml.cognitive.ui"},fails due to subpackages TODO:{"org.argouml.cognitive", "org.argouml.cognitive.critics"},
WITHOUT_CLASSIFICATION	{"org.argouml.kernel", "org.argouml.uml.diagram.ui"},why does this fail?
WITHOUT_CLASSIFICATION	do nothing by design
WITHOUT_CLASSIFICATION	These 3 steps are only needed for the 2 cases indicated with a X below.
WITHOUT_CLASSIFICATION	Obey the contract ourselves!
WITHOUT_CLASSIFICATION	register all of the event listener trackers
WITHOUT_CLASSIFICATION	remove all of the listeners
WITHOUT_CLASSIFICATION	fire all of the diagram events
WITHOUT_CLASSIFICATION	fire all of the generator events
WITHOUT_CLASSIFICATION	fire all of the help events
WITHOUT_CLASSIFICATION	fire all of the notation events
WITHOUT_CLASSIFICATION	verify all events were fired correctly
WITHOUT_CLASSIFICATION	keep track of total events fired
WITHOUT_CLASSIFICATION	keep track of which events fired
WITHOUT_CLASSIFICATION	X X
WITHOUT_CLASSIFICATION	initialize the event listener trackers which verify that all of the proper events were fired
WITHOUT_CLASSIFICATION	Display events are fired on the Swing event thread. We need to wait for them to be dispatched NOTE: if more display events are added to this test, this one needs to be last
WITHOUT_CLASSIFICATION	Notation events are fired on the Swing event thread. We assume that serializing on the final call is sufficient
WITHOUT_CLASSIFICATION	counts each bit that has been fired
WITHOUT_CLASSIFICATION	ResolvedCritic(String, List)
WITHOUT_CLASSIFICATION	ResolvedCritic(Critic, ListSet)
WITHOUT_CLASSIFICATION	ResolvedCritic(Critic, ListSet, boolean)
WITHOUT_CLASSIFICATION	testmc should now have an ItemUID so we should be able to create without adding a new ItemUID
WITHOUT_CLASSIFICATION	EnabledCM isRelevant checks if the critic is enabled initialize this to true to verify isRelevant returns true
WITHOUT_CLASSIFICATION	verify isRelevant returns true
WITHOUT_CLASSIFICATION	set enabled to false and check the opposite condition
WITHOUT_CLASSIFICATION	verify isRelevant not is false
WITHOUT_CLASSIFICATION	NotSnoozedCM isRelevant checks if the critic is snoozed snooze the critic to verify isRelevant returns false
WITHOUT_CLASSIFICATION	unsnooze the critic to verify the critic is not relevant
WITHOUT_CLASSIFICATION	verify isRelevant is true
WITHOUT_CLASSIFICATION	CurDecisionCM isRelevant checks to see if the critic has any decisions that have a priority > 0 and less than the priority of the critic. By default the critic has no decisions so isRelevant should return false.
WITHOUT_CLASSIFICATION	verify isRelevant is still false
WITHOUT_CLASSIFICATION	isRelevant should now be true
WITHOUT_CLASSIFICATION	isRelevant should still be true
WITHOUT_CLASSIFICATION	initialize test data
WITHOUT_CLASSIFICATION	initialize the ToDoList
WITHOUT_CLASSIFICATION	add a ToDoItem
WITHOUT_CLASSIFICATION	redundantly add item again which should be ignored
WITHOUT_CLASSIFICATION	size should be 1 since addition of second item would have been ignored
WITHOUT_CLASSIFICATION	retrieve item
WITHOUT_CLASSIFICATION	remove item
WITHOUT_CLASSIFICATION	size should be 0 since item was removed
WITHOUT_CLASSIFICATION	initialize the GoalModel
WITHOUT_CLASSIFICATION	check that the model was initialized with the unspecified goal
WITHOUT_CLASSIFICATION	change priority of unspecified goal so we can verify it was updated
WITHOUT_CLASSIFICATION	first verify that the set goal priority did not add an extra goal
WITHOUT_CLASSIFICATION	check that the model correctly updates a goal's priority
WITHOUT_CLASSIFICATION	test the removal of a goal
WITHOUT_CLASSIFICATION	number of goals should now be 0
WITHOUT_CLASSIFICATION	start desiring a goal which should add a goal and bump the size to 1
WITHOUT_CLASSIFICATION	number of goals should now be 1
WITHOUT_CLASSIFICATION	stop desiring the goal which should remove it from the model
WITHOUT_CLASSIFICATION	UMLSequenceDiagram seqdiag = new UMLSequenceDiagram();
WITHOUT_CLASSIFICATION	initialize test data
WITHOUT_CLASSIFICATION	This test calls ToDoList.addElement which requires the Model. We are able to get away with using the Mock model.
WITHOUT_CLASSIFICATION	checkAssignIDToObject(seqdiag, true, true);
WITHOUT_CLASSIFICATION	FigEdgeNote has no UUID
WITHOUT_CLASSIFICATION	checkAssignIDToObject(figassociationrole, true, true);
WITHOUT_CLASSIFICATION	checkAssignIDToObject(fighistorystate, true, true);
WITHOUT_CLASSIFICATION	checkAssignIDToObject(figstate, true, true);
WITHOUT_CLASSIFICATION	initialize basic parameters that are different from Decision.UNSPEC
WITHOUT_CLASSIFICATION	initialize a decision object with parameters
WITHOUT_CLASSIFICATION	initialize a decision object with parameters
WITHOUT_CLASSIFICATION	verify parameters were initialized correctly by the constructor
WITHOUT_CLASSIFICATION	set the priority to a different value
WITHOUT_CLASSIFICATION	set the priority to a different value
WITHOUT_CLASSIFICATION	verify the priority was correctly updated
WITHOUT_CLASSIFICATION	verify the priority was correctly updated
WITHOUT_CLASSIFICATION	set the name to a different value
WITHOUT_CLASSIFICATION	set the name to a different value
WITHOUT_CLASSIFICATION	verify the name property was correctly updated
WITHOUT_CLASSIFICATION	following the update the priority should be equivalent to Decision.UNSPEC
WITHOUT_CLASSIFICATION	test that properties were correctly initialized by the constructor
WITHOUT_CLASSIFICATION	initialize the Checklist
WITHOUT_CLASSIFICATION	add some test data
WITHOUT_CLASSIFICATION	add some test data
WITHOUT_CLASSIFICATION	verify the size of the list
WITHOUT_CLASSIFICATION	verify the size of the list
WITHOUT_CLASSIFICATION	verify the items were correctly added
WITHOUT_CLASSIFICATION	verify the items were correctly added
WITHOUT_CLASSIFICATION	test that the category and description are correct
WITHOUT_CLASSIFICATION	create a new list to test the addAll
WITHOUT_CLASSIFICATION	create a new list to test the addAll
WITHOUT_CLASSIFICATION	add all of the test items from the first list
WITHOUT_CLASSIFICATION	add all of the test items from the first list
WITHOUT_CLASSIFICATION	verify the size of the new list
WITHOUT_CLASSIFICATION	verify the size of the new list
WITHOUT_CLASSIFICATION	initialize the ChecklistStatus
WITHOUT_CLASSIFICATION	Construct a CheckItem
WITHOUT_CLASSIFICATION	(1) test that the properties were correctly initialized
WITHOUT_CLASSIFICATION	reset the values to something different
WITHOUT_CLASSIFICATION	(2) Construct another CheckItem
WITHOUT_CLASSIFICATION	test that the properties were correctly initialized
WITHOUT_CLASSIFICATION	verify that the equivalence test works
WITHOUT_CLASSIFICATION	initialize SnoozeOrder
WITHOUT_CLASSIFICATION	snooze and verify its been enabled
WITHOUT_CLASSIFICATION	unsnooze and verify its been disabled
WITHOUT_CLASSIFICATION	maybe next test is going to change in future
WITHOUT_CLASSIFICATION	test with a class in a package
WITHOUT_CLASSIFICATION	Let's make it a bit more difficult by setting the target:
WITHOUT_CLASSIFICATION	test with a class and an inner class
WITHOUT_CLASSIFICATION	test with a class and an inner class
WITHOUT_CLASSIFICATION	test with a class and class diagram
WITHOUT_CLASSIFICATION	test with a class and class diagram
WITHOUT_CLASSIFICATION	try with Statediagram
WITHOUT_CLASSIFICATION	try with Statediagram
WITHOUT_CLASSIFICATION	try with Statediagram
WITHOUT_CLASSIFICATION	try with Statediagram
WITHOUT_CLASSIFICATION	Put the statemachine in the namespace of the class:
WITHOUT_CLASSIFICATION	test with a package and a class and activity diagram
WITHOUT_CLASSIFICATION	test with a package and a class and activity diagram
WITHOUT_CLASSIFICATION	build the Activity Diagram
WITHOUT_CLASSIFICATION	build the Activity Diagram
WITHOUT_CLASSIFICATION	In the next line, replacing makeEmptyProject by getCurrentProject fails the test, except when run in Eclipse. MVW: I have no idea why.
WITHOUT_CLASSIFICATION	We no longer send individual events, so next code is obsolete:
WITHOUT_CLASSIFICATION	We initialised Java Notation, so let's activate it:
WITHOUT_CLASSIFICATION	Needed for initialisations:
WITHOUT_CLASSIFICATION	set MetaProfile as a default profile
WITHOUT_CLASSIFICATION	create a dependency from the project's model to the MetaProfile
WITHOUT_CLASSIFICATION	remove the MetaProfile from the project's profile configuration
WITHOUT_CLASSIFICATION	save the project into a new file
WITHOUT_CLASSIFICATION	setup a user defined profile
WITHOUT_CLASSIFICATION	TRY GUARD/ITERATOR SYNTAX
WITHOUT_CLASSIFICATION	create a new project and assert that it has the MetaProfile as part of the project's profile configuration
WITHOUT_CLASSIFICATION	assert that the project's model element that had a dependency to the MetaProfile doesn't get inconsistent
WITHOUT_CLASSIFICATION	reopen the project and assert that the MetaProfile isn't part of the profile configuration, including the fact that the stereotype <<Critic>> isn't found
WITHOUT_CLASSIFICATION	assert that the project's model elements that had a dependency to the UML profile for Java are consistent
WITHOUT_CLASSIFICATION	add it to the project configuration
WITHOUT_CLASSIFICATION	add it to the project configuration
WITHOUT_CLASSIFICATION	create a dependency between the project's model and the user defined profile
WITHOUT_CLASSIFICATION	create a dependency between the project's model and the user defined profile
WITHOUT_CLASSIFICATION	save the project
WITHOUT_CLASSIFICATION	save the project
WITHOUT_CLASSIFICATION	load the project
WITHOUT_CLASSIFICATION	assert that the model element that depends on the profile is consistent
WITHOUT_CLASSIFICATION	remove the user defined profile and the directory where it is
WITHOUT_CLASSIFICATION	Success - expected exception
WITHOUT_CLASSIFICATION	Clean up after ourselves by deleting profile model
WITHOUT_CLASSIFICATION	Test both forms of addBaseClass
WITHOUT_CLASSIFICATION	Test remaining form of removeBaseClass
WITHOUT_CLASSIFICATION	by default the build already builds one default EP
WITHOUT_CLASSIFICATION	$JUnit-BEGIN$
WITHOUT_CLASSIFICATION	$JUnit-END$
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#tearDown()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	Flag to enable performance testing - off by default
WITHOUT_CLASSIFICATION	initialize the model and profile subsystems to simulate a fresh ArgoUML session
WITHOUT_CLASSIFICATION	20 sec.
WITHOUT_CLASSIFICATION	Add one child.
WITHOUT_CLASSIFICATION	Performance testing parameters
WITHOUT_CLASSIFICATION	Add grandchild.
WITHOUT_CLASSIFICATION	Create a generalizable element with an element without children.
WITHOUT_CLASSIFICATION	Check periodically to see if we've exceeded time limit
WITHOUT_CLASSIFICATION	Add another child.
WITHOUT_CLASSIFICATION	Tree is created depth first, so this should be at the bottom
WITHOUT_CLASSIFICATION	Try changing namespace of element and make sure results track
WITHOUT_CLASSIFICATION	Populate our namespace hierarchy to the requested depth. Total number of created elements is children^maxLevel, so be careful not to increase parameters too much.
WITHOUT_CLASSIFICATION	TRY SOME GUARD/ITERATOR ERRORS
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#TestCase(String)
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	Make sure we have a root model for TagDefinitions to get put in.
WITHOUT_CLASSIFICATION	create the tree of objects
WITHOUT_CLASSIFICATION	copy package p1 into p2 package
WITHOUT_CLASSIFICATION	change the structure in p1 package
WITHOUT_CLASSIFICATION	verify the copied package
WITHOUT_CLASSIFICATION	verify the copied class
WITHOUT_CLASSIFICATION	verify the copied nested package and the copied interface
WITHOUT_CLASSIFICATION	verify the copied attribute
WITHOUT_CLASSIFICATION	See if we can copy a class right off
WITHOUT_CLASSIFICATION	Change things
WITHOUT_CLASSIFICATION	Change things
WITHOUT_CLASSIFICATION	Change things
WITHOUT_CLASSIFICATION	Change things
WITHOUT_CLASSIFICATION	Assert that the copy isn't modified when the source changes
WITHOUT_CLASSIFICATION	Assert that the copy isn't modified when the source changes
WITHOUT_CLASSIFICATION	See if the other copy was just a lucky shot
WITHOUT_CLASSIFICATION	See if the other copy was just a lucky shot
WITHOUT_CLASSIFICATION	See if the other copy was just a lucky shot
WITHOUT_CLASSIFICATION	See if the other copy was just a lucky shot
WITHOUT_CLASSIFICATION	See if the other copy was just a lucky shot
WITHOUT_CLASSIFICATION	See if two copies look like copies of eachother
WITHOUT_CLASSIFICATION	See if two copies look like copies of eachother
WITHOUT_CLASSIFICATION	See if two copies look like copies of eachother
WITHOUT_CLASSIFICATION	See if we can copy a datatype right off
WITHOUT_CLASSIFICATION	See if two copies look like copies of each other
WITHOUT_CLASSIFICATION	See if two copies look like copies of each other
WITHOUT_CLASSIFICATION	See if we can copy an interface right off
WITHOUT_CLASSIFICATION	Create a new tagged value with the given type and value and add it to a ModelElement.
WITHOUT_CLASSIFICATION	Update an existing tagged value on a model element.
WITHOUT_CLASSIFICATION	See if we can copy a package right off
WITHOUT_CLASSIFICATION	See if we can copy a stereotype right off
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	"Permission",
WITHOUT_CLASSIFICATION	Check to see if association still exists
WITHOUT_CLASSIFICATION	Expected IllegalArgumentException seen
WITHOUT_CLASSIFICATION	A parameterized class can only be the client of a single binding
WITHOUT_CLASSIFICATION	exception expected - test success
WITHOUT_CLASSIFICATION	expected - test success
WITHOUT_CLASSIFICATION	expected - test success
WITHOUT_CLASSIFICATION	Create a new arg list with a different set of args (but same types)
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	not static
WITHOUT_CLASSIFICATION	Test passed
WITHOUT_CLASSIFICATION	Test passed
WITHOUT_CLASSIFICATION	NOT UML1.4
WITHOUT_CLASSIFICATION	non existent in UML1
WITHOUT_CLASSIFICATION	Not in UML1.4
WITHOUT_CLASSIFICATION	Not in UML1.4
WITHOUT_CLASSIFICATION	Not in UML1.4
WITHOUT_CLASSIFICATION	Not in UML1.4
WITHOUT_CLASSIFICATION	not in UML1.4
WITHOUT_CLASSIFICATION	This is not a well formed model in a strict sense. See the multiplicity in UML 1.3 Figure 2-5.
WITHOUT_CLASSIFICATION	returns List
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	Deleting the stereotype should cascade to the TagDefinition, then the TaggedValue
WITHOUT_CLASSIFICATION	TODO: constraints TODO: required tags
WITHOUT_CLASSIFICATION	Enumerate declaring class
WITHOUT_CLASSIFICATION	NOTE: Although it's not shown in the UML 1.4 spec, a TemplateArgument appears to be a datavalue (like MultiplicityRange) and can not be reused in multiple instances. The UML diagrams don't show it as a composition, but it effectively is.
WITHOUT_CLASSIFICATION	Must be called after setImplementation.
WITHOUT_CLASSIFICATION	Enumerate fields
WITHOUT_CLASSIFICATION	Enumerate constructors
WITHOUT_CLASSIFICATION	Indicate that the test was validated
WITHOUT_CLASSIFICATION	TODO: Look up class in truth table
WITHOUT_CLASSIFICATION	Check superclass. Make sure this class does not extend or reference non-ArgoUML classes
WITHOUT_CLASSIFICATION	Enumerate methods Enumerate method arguments
WITHOUT_CLASSIFICATION	Not currently present as token in Model.getFacade(). NIF: runTruthTest(Model.getFacade().isAElement(o), Model.getFacade().ELEMENT); NIF: runTruthTest(Model.getFacade().isAExpression(o), Model.getFacade().EXPRESSION); NIF: runTruthTest(Model.getFacade().isAExtensionPoint(o), Model.getFacade().EXTENSION_POINT); NIF: runTruthTest(Model.getFacade().isAFeature(o), Model.getFacade().FEATURE);
WITHOUT_CLASSIFICATION	NIF: runTruthTest(Model.getFacade().isAInteraction(o), Model.getFacade().INTERACTION);
WITHOUT_CLASSIFICATION	NIF: unTruthTest(Model.getFacade().isAMethod(o), Model.getMetaTypes().getMethod());
WITHOUT_CLASSIFICATION	runTruthTest(Model.getFacade().isARelationship(o), Model.getMetaTypes().getRelationship());
WITHOUT_CLASSIFICATION	NIF: runTruthTest(Model.getFacade().isAStructuralFeature(o), Model.getMetaTypes().getStructuralFeature()); NIF: runTruthTest(Model.getFacade().isATaggedValue(o), Model.getMetaTypes().getTaggedValue());
WITHOUT_CLASSIFICATION	Call methods that exists for all objects and that always return something meaningful
WITHOUT_CLASSIFICATION	Call methods that exists for all objects and that always return something meaningful
WITHOUT_CLASSIFICATION	Multiplicity, MultiplicityRange, and all Expression subtypes don't have 0-argument create methods, so we special case them.
WITHOUT_CLASSIFICATION	Find the create method in the offical API
WITHOUT_CLASSIFICATION	Now get the factory implementation method to be invoked
WITHOUT_CLASSIFICATION	Here it is another object sent to the test.
WITHOUT_CLASSIFICATION	Here it is another object sent to the test.
WITHOUT_CLASSIFICATION	abstract
WITHOUT_CLASSIFICATION	abstract
WITHOUT_CLASSIFICATION	abstract
WITHOUT_CLASSIFICATION	Make sure we start off clean
WITHOUT_CLASSIFICATION	Delete the model and make sure everything inside goes with it
WITHOUT_CLASSIFICATION	The association should have same namespace as from class
WITHOUT_CLASSIFICATION	Only one end should be navigable
WITHOUT_CLASSIFICATION	"UseCaseInstance", Gone in UML 2.x & unused by ArgoUML
WITHOUT_CLASSIFICATION	Set namespace so buildAssocationRole works
WITHOUT_CLASSIFICATION	Correct Exception was thrown.
WITHOUT_CLASSIFICATION	Correct Exception was thrown.
WITHOUT_CLASSIFICATION	Correct Exception was thrown.
WITHOUT_CLASSIFICATION	Correct Exception was thrown.
WITHOUT_CLASSIFICATION	Build an activity graph with a single action state the way the GUI would
WITHOUT_CLASSIFICATION	This is a private method in Model.
WITHOUT_CLASSIFICATION	Handling methods that doesn't return
WITHOUT_CLASSIFICATION	Handling the isInitiated method
WITHOUT_CLASSIFICATION	Handling the initialise method
WITHOUT_CLASSIFICATION	Handle methods which return opaque objects
WITHOUT_CLASSIFICATION	one of the expected errors, just ignore
WITHOUT_CLASSIFICATION	Could not find model.
WITHOUT_CLASSIFICATION	Could not find model.
WITHOUT_CLASSIFICATION	Handle UML 1.4 metamodel which is a MOF 1.3 model
WITHOUT_CLASSIFICATION	Get a node's name along with the name of its parent (which we'll use to find the factory to create it with.
WITHOUT_CLASSIFICATION	UML 1.4
WITHOUT_CLASSIFICATION	UML 2.x
WITHOUT_CLASSIFICATION	XMI 2.1
WITHOUT_CLASSIFICATION	XMI 1.1
WITHOUT_CLASSIFICATION	Remap specific classes
WITHOUT_CLASSIFICATION	Only remap package if we didn't remap specific class
WITHOUT_CLASSIFICATION	The following UML 1.4 elements have been removed from UML 2.x, so we don't bother testing them.
WITHOUT_CLASSIFICATION	A few of our factories are slightly different than as declared in the UML 1.4 metamodel, so we remap them here. <metamodel, argouml>
WITHOUT_CLASSIFICATION	Packages to be remapped
WITHOUT_CLASSIFICATION	For those things which we've already migrated to UML 2.x syntax we need to map them back to their UML 1.4 equivalents during the migration period.
WITHOUT_CLASSIFICATION	Subsystem has been removed from UML 2.x
WITHOUT_CLASSIFICATION	TRY THE ACTIONS
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	abstract
WITHOUT_CLASSIFICATION	abstract
WITHOUT_CLASSIFICATION	This is the XMI version used to encode the metamodel. We could parse deeper to pull out the actual UML version. The UML 1.4 version is at XMI/XMI.header/XMI.model[@xmi.version]. The UML 2.1.1 metamodel doesn't actually seem to contain its version.
WITHOUT_CLASSIFICATION	Because UML 1.4 & 2.1 metamodels are organized differently we need to traverse the hierarchy looking for our owning Package.
WITHOUT_CLASSIFICATION	Specific classes to be remapped remap.put("", "");
WITHOUT_CLASSIFICATION	Go the other way to lookup an element by path
WITHOUT_CLASSIFICATION	...
WITHOUT_CLASSIFICATION	...
WITHOUT_CLASSIFICATION	...
WITHOUT_CLASSIFICATION	ActivityGraphs
WITHOUT_CLASSIFICATION	Instance (in UML 1.4) and Classifier are abstract and not tested
WITHOUT_CLASSIFICATION	Extend, Include, UseCaseInstance & ExtensionPoint not implemented
WITHOUT_CLASSIFICATION	assertNotNull(Model.getUmlFactory().buildNode( Model.getMetaTypes().getExtend())); assertNotNull(Model.getUmlFactory().buildNode( Model.getMetaTypes().getInclude())); assertNotNull(Model.getUmlFactory().buildNode( Model.getMetaTypes().getUseCaseInstance())); assertNotNull(Model.getUmlFactory().buildNode( Model.getMetaTypes().getExtensionPoint())); ...
WITHOUT_CLASSIFICATION	State is concrete in UML 1.3, but becomes abstract in UML 1.4, so we never allow it to be created (and don't test creation)
WITHOUT_CLASSIFICATION	new InitProfileSubsystem().init();
WITHOUT_CLASSIFICATION	This should work now that they both have names
WITHOUT_CLASSIFICATION	this call could easily fall if there is e.g. no public default constructor. If it fails tweak the if/else tree above to accommodate the parameter or check if we need to test the particular method at all.
WITHOUT_CLASSIFICATION	If method not supported ignore failure
WITHOUT_CLASSIFICATION	Fine!
WITHOUT_CLASSIFICATION	Fine!
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	assertNotNull(Model.getUmlFactory().buildNode( Model.getMetaTypes().getState()));
WITHOUT_CLASSIFICATION	CommonBehaviorFactory DataTypesFactory ExtensionMechanismsFactory ModelManagementFactory
WITHOUT_CLASSIFICATION	set up all parameters. Some methods are invoked with primitives or collections, so we need to create them accordingly
WITHOUT_CLASSIFICATION	The following should fail
WITHOUT_CLASSIFICATION	and leave things unchanged
WITHOUT_CLASSIFICATION	This one should work except Java is not registered by default assertTrue(settings.setNotationLanguage("Java")); assertEquals("Java", settings.getNotationLanguage());
WITHOUT_CLASSIFICATION	NotationProviderFactory2.getInstance().addNotationProvider(1234, name, MyNP.class); NotationProvider notationProvider = NotationProviderFactory2.getInstance().getNotationProvider( 1234, new Object()); assertTrue("Test notation provider for 1234 not found", notationProvider != null);
WITHOUT_CLASSIFICATION	Constructor.
WITHOUT_CLASSIFICATION	Constructor. @param me an Object
WITHOUT_CLASSIFICATION	Everything fine...
WITHOUT_CLASSIFICATION	Everything fine...
WITHOUT_CLASSIFICATION	Everything fine...
WITHOUT_CLASSIFICATION	reuse signal event:
WITHOUT_CLASSIFICATION	reuse call event:
WITHOUT_CLASSIFICATION	reuse time event:
WITHOUT_CLASSIFICATION	reuse change event:
WITHOUT_CLASSIFICATION	try creating a string from the generated modelelements:
WITHOUT_CLASSIFICATION	try creating a TimeEvent
WITHOUT_CLASSIFICATION	try changing the triggertype to ChangeEvent
WITHOUT_CLASSIFICATION	nested class:
WITHOUT_CLASSIFICATION	nested class:
WITHOUT_CLASSIFICATION	No need to check any further if we fail the 1st part.
WITHOUT_CLASSIFICATION	START TESTING STUFF
WITHOUT_CLASSIFICATION	TRY MOVING IN A SIMPLE MANER
WITHOUT_CLASSIFICATION	TRY SOME ERRORS
WITHOUT_CLASSIFICATION	For a Transition use indirection through source StateVertex
WITHOUT_CLASSIFICATION	If we can't find a model, return the outermost containing model element
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	Everything fine...
WITHOUT_CLASSIFICATION	Everything fine...
WITHOUT_CLASSIFICATION	Everything fine...
WITHOUT_CLASSIFICATION	Everything fine...
WITHOUT_CLASSIFICATION	This swaps the direction of m3:
WITHOUT_CLASSIFICATION	This swaps the direction of m3 back: the colon is obliged, but the / not and the 2nd dot also not
WITHOUT_CLASSIFICATION	Notation allows to add or modify things, not remove. Hence, this does nothing:
WITHOUT_CLASSIFICATION	The expected exception is thrown.
WITHOUT_CLASSIFICATION	Both diagram types shall show sequence numbers when requested:
WITHOUT_CLASSIFICATION	But the collaboration diagram refuses to leave them out:
WITHOUT_CLASSIFICATION	If the message has a name, but no action, then show the name:
WITHOUT_CLASSIFICATION	If a message has a name and a named operation, then show the operation:
WITHOUT_CLASSIFICATION	If a message has a name and a named operation and a script, then show the script:
WITHOUT_CLASSIFICATION	TODO: Should there really be () here?
WITHOUT_CLASSIFICATION	If a message has a name and a named operation and an empty script, then show the operation:
WITHOUT_CLASSIFICATION	If a message has a name and a named operation and an expression with no script, then show the operation:
WITHOUT_CLASSIFICATION	If a message has a name and a named operation and a named script with parameters, then show the script:
WITHOUT_CLASSIFICATION	TODO: Why is there a space before the ( here, and not in case of the operation name?
WITHOUT_CLASSIFICATION	The action still has the argument from above.
WITHOUT_CLASSIFICATION	If a message has a name and a named operation and a script with parameters but without name, then show the operation name:
WITHOUT_CLASSIFICATION	this is not a very useful transition
WITHOUT_CLASSIFICATION	One of everything
WITHOUT_CLASSIFICATION	Upper / Lower case
WITHOUT_CLASSIFICATION	Mixed case
WITHOUT_CLASSIFICATION	A complex internal transition
WITHOUT_CLASSIFICATION	These are NOT entry/exit/do activities!
WITHOUT_CLASSIFICATION	Long list of internals
WITHOUT_CLASSIFICATION	or should the 1 be 0 ?
WITHOUT_CLASSIFICATION	deleting it all
WITHOUT_CLASSIFICATION	we want the b: Foo attribute, that is the second in the list
WITHOUT_CLASSIFICATION	If there is no script, then the language should not be maintained.
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	Success - expected exception
WITHOUT_CLASSIFICATION	Everything fine...
WITHOUT_CLASSIFICATION	Create file
WITHOUT_CLASSIFICATION	This is the normal case.
WITHOUT_CLASSIFICATION	Load a project which contains links to it
WITHOUT_CLASSIFICATION	test project readable files
WITHOUT_CLASSIFICATION	Standard UML 1.4 profile
WITHOUT_CLASSIFICATION	Create a default profile and record its contents
WITHOUT_CLASSIFICATION	Write the profile out to a temp file
WITHOUT_CLASSIFICATION	Read it back in to a new empty project
WITHOUT_CLASSIFICATION	Clean up our two models and the extent that we read profile in to
WITHOUT_CLASSIFICATION	setting up the dependent profile creation
WITHOUT_CLASSIFICATION	actual call that executes everything
WITHOUT_CLASSIFICATION	verifications
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	TODO: the following cleans up left overs from previous tests, but, preferably we shouldn't have to do this...
WITHOUT_CLASSIFICATION	create profile model
WITHOUT_CLASSIFICATION	create profile model
WITHOUT_CLASSIFICATION	save the profile into a xmi file
WITHOUT_CLASSIFICATION	save the profile into a xmi file
WITHOUT_CLASSIFICATION	Called during teardown
WITHOUT_CLASSIFICATION	Called during teardown
WITHOUT_CLASSIFICATION	remove leftovers from other tests
WITHOUT_CLASSIFICATION	TODO: User defined profile support untested currently + "\t\t<userDefined>\n" + "\t\t\t<filename>\n" + "foo.profile\n" + "</filename>\n" + "\t\t\t<model>\n" + "foo.profile.package\n" + "\t\t\t</model>\n" + "\t\t</userDefined>\n"
WITHOUT_CLASSIFICATION	There seems to be cases where we don't erase the profile. Let's make sure it is deleted.
WITHOUT_CLASSIFICATION	[euluis] Using Windows style initial path, don't know if this fails in nixes.
WITHOUT_CLASSIFICATION	ensure that model subsystem implementation doesn't remember the profiles by changing their names and directories
WITHOUT_CLASSIFICATION	but, lookout, it doesn't work both ways
WITHOUT_CLASSIFICATION	assertEquals(DefaultOclEvaluator.getInstance().evaluate(vt, mi, "x.oclIsKindOf(Classifier)"), true);
WITHOUT_CLASSIFICATION	on a headless system (without display) this will crash
WITHOUT_CLASSIFICATION	private JPanel propertyPane;
WITHOUT_CLASSIFICATION	contains instances of each modelelement used for testing so that we only use each modelelement once
WITHOUT_CLASSIFICATION	propertyPane = TabProps
WITHOUT_CLASSIFICATION	theDetailsPane.getNamedTab(Translator.localize("tab.properties"));
WITHOUT_CLASSIFICATION	currently this is in this try block as it does not work _propertyPanel always has size 0,0
WITHOUT_CLASSIFICATION	ProjectBrowser exposes functionality, not components. assertNotNull(pb.getTabProps()); assertNotNull(pb.getStatusBar());
WITHOUT_CLASSIFICATION	Make sure this test happens on the AWT event thread
WITHOUT_CLASSIFICATION	JPanel docPane = pane.getTab(TabDocumentation.class);
WITHOUT_CLASSIFICATION	The target list is empty, re-emptying it again should not generate any events:
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	new target is of type object, refresh should not be called
WITHOUT_CLASSIFICATION	commented out next piece to remove failure of testcase. The testcase is probably correct but the implementation of DetailsPane is not pane.getTabs().setSelectedComponent(docPane); pane.targetSet(e); assertEquals(docPane, pane.getTabs().getSelectedComponent());
WITHOUT_CLASSIFICATION	new target is a fig, refresh should be called
WITHOUT_CLASSIFICATION	Setting one target should generate one event:
WITHOUT_CLASSIFICATION	new target is of type UMLClassDiagram, refresh should not be called
WITHOUT_CLASSIFICATION	TODO: We could check that the contents of the files differ.
WITHOUT_CLASSIFICATION	new target is a modelelement, refresh should not be called
WITHOUT_CLASSIFICATION	testing with subset of targets
WITHOUT_CLASSIFICATION	set same target again should not generate new events:
WITHOUT_CLASSIFICATION	TabProps gets selected! So, 2nd time right
WITHOUT_CLASSIFICATION	adding same targets list again should not generate new events:
WITHOUT_CLASSIFICATION	adding same target again should not generate new events:
WITHOUT_CLASSIFICATION	reverse order
WITHOUT_CLASSIFICATION	now remove one target by setting subset:
WITHOUT_CLASSIFICATION	TODO: the following fails due to the XMI writing saving all top level model elements and because even if there was no empty project, by creating a class, the undo mechanism in the project manager will force the creation of an empty project. assertEquals(1, profileModels.size());
WITHOUT_CLASSIFICATION	NOTE: we have to do this due to leftovers from other tests being causing strange errors when running in Eclipse.
WITHOUT_CLASSIFICATION	all tests should consider the threshold as inclusive value
WITHOUT_CLASSIFICATION	this test is a bit stupid, but nevertheless...
WITHOUT_CLASSIFICATION	{A, A} are offenders
WITHOUT_CLASSIFICATION	everything ok
WITHOUT_CLASSIFICATION	everything ok
WITHOUT_CLASSIFICATION	same name, same participants, two offenders
WITHOUT_CLASSIFICATION	same name, different classes, everything ok
WITHOUT_CLASSIFICATION	same name, different classes, everything ok
WITHOUT_CLASSIFICATION	same name, same participants, two offenders
WITHOUT_CLASSIFICATION	{A,A,B,B} are offenders
WITHOUT_CLASSIFICATION	{} no offenders
WITHOUT_CLASSIFICATION	simply create 3 usecases and an actor in a package with individual names
WITHOUT_CLASSIFICATION	generalizations are not required to have unique names within a namespace
WITHOUT_CLASSIFICATION	All use cases and actors require associations hence all predicates evalulate to true
WITHOUT_CLASSIFICATION	build association build association between actor and top use case.
WITHOUT_CLASSIFICATION	test for return parameters. they can ALSO fail!
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#tearDown()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	Arbitrary settings - not used used for testing
WITHOUT_CLASSIFICATION	Arbitrary settings - not used used for testing
WITHOUT_CLASSIFICATION	the graph should stay the same.
WITHOUT_CLASSIFICATION	build extend these parameters seem to be in correct order add an extend. We do not need an assoc on the extending use case
WITHOUT_CLASSIFICATION	build include it seems that the parameters for build include are just the other way round add an include: we do not need to have associtions on one
WITHOUT_CLASSIFICATION	setup
WITHOUT_CLASSIFICATION	Handle the simple cases Anything very exotic will fail, but that will be our clue that the test needs to be extended
WITHOUT_CLASSIFICATION	real test
WITHOUT_CLASSIFICATION	Some arbitrary bounds and settings - unused in test
WITHOUT_CLASSIFICATION	Make sure everything created gets deleted
WITHOUT_CLASSIFICATION	This needs to be a concrete metatype, so we can't use the general, but abstract, Classifier. Replace with its concrete subtypes.
WITHOUT_CLASSIFICATION	This needs to be a concrete metatype, so we can't use the general, but abstract, Classifier. Replace with its concrete subtypes.
WITHOUT_CLASSIFICATION	setup the Project due to its use in SourcePathTableModel ctor
WITHOUT_CLASSIFICATION	create a class model element
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#tearDown()
WITHOUT_CLASSIFICATION	@see AbstractTestActionAddDiagram#getValidNamespaceClasses()
WITHOUT_CLASSIFICATION	@see TestCase#setUp()
WITHOUT_CLASSIFICATION	@see TestCase#setUp()
WITHOUT_CLASSIFICATION	save the project
WITHOUT_CLASSIFICATION	Tests used to be coded to assume immediate event delivery. They've been modified to use flush() where needed. - tfm oldEventPolicy = MFactoryImpl.getEventPolicy(); MFactoryImpl.setEventPolicy(MFactoryImpl.EVENT_POLICY_IMMEDIATE);
WITHOUT_CLASSIFICATION	Return a package to use as the Namespace.
WITHOUT_CLASSIFICATION	restore original event policy - not supported by MDR - tfm MFactoryImpl.setEventPolicy(oldEventPolicy);
WITHOUT_CLASSIFICATION	assertNotNull(actionSupplier.getValue(Action.SMALL_ICON));
WITHOUT_CLASSIFICATION	cont.setTarget(elem);
WITHOUT_CLASSIFICATION	Testing with more than one, since it failed with a manual test I made.
WITHOUT_CLASSIFICATION	assertNotNull(actionClient.getValue(Action.SMALL_ICON));
WITHOUT_CLASSIFICATION	The following will bring up a dialog box, so can't be run headless actionSupplier.actionPerformed(new ActionEvent(this, 0, "foo"));
WITHOUT_CLASSIFICATION	The following will bring up a dialog box, so can't be run headless actionClient.actionPerformed(new ActionEvent(this, 0, "foo"));
WITHOUT_CLASSIFICATION	create a new empty project
WITHOUT_CLASSIFICATION	Inconclusive
WITHOUT_CLASSIFICATION	Inconclusive
WITHOUT_CLASSIFICATION	setup a user defined profile which isn't loaded by the model subsystem and contains a stereotype and this contains a tag definition
WITHOUT_CLASSIFICATION	add the profile stereotype to the class
WITHOUT_CLASSIFICATION	add the profile to the project configuration
WITHOUT_CLASSIFICATION	This works when running the test from within Eclipse. Apparently Eclipse runs the tests using a class-loader that has the tests Folder among the URL:s.
WITHOUT_CLASSIFICATION	create a class in the project model
WITHOUT_CLASSIFICATION	check that the tag definition is returned by {@link UMLTagDefinitionComboBoxModel#getApplicableTagDefinitions(Object)}
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	If no project was entered on the command line, try to reload the most recent project if that option is true
WITHOUT_CLASSIFICATION	Set the screen layout to what the user left it before, or to reasonable defaults.
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	case 4 erase it
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	TreeModel implementation
WITHOUT_CLASSIFICATION	TreeModel implementation
WITHOUT_CLASSIFICATION	ToDoListListener implementation
WITHOUT_CLASSIFICATION	case 1 after(...)
WITHOUT_CLASSIFICATION	initialize the model and profile subsystems to simulate a fresh ArgoUML session
WITHOUT_CLASSIFICATION	We have the path provided from the build script.
WITHOUT_CLASSIFICATION	Check the localized parts.
WITHOUT_CLASSIFICATION	Wait for all Model subsystem events to be delivered
WITHOUT_CLASSIFICATION	Wait for all AWT events to be dispatched and processed
WITHOUT_CLASSIFICATION	Check here if there are no incoming call actions if not then create an activation at the top of the lifeline
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphModel#getPorts(java.lang.Object)
WITHOUT_CLASSIFICATION	if save did not raise an exception and name+"#" exists move name+"#" to name+"~" this is the correct backup file
WITHOUT_CLASSIFICATION	calcBounds();
WITHOUT_CLASSIFICATION	For classifiers
WITHOUT_CLASSIFICATION	This is null as until the first stereotype declaration is seen. After that it is non-null.
WITHOUT_CLASSIFICATION	newOp.setOwnerScope(op.getOwnerScope()); not needed in case of operation
WITHOUT_CLASSIFICATION	includes the "/" the "seq_expr" from the header javadoc the ":" is not included in "number" - it is always present
WITHOUT_CLASSIFICATION	Model.getExtensionMechanismsFactory().buildTaggedValue( tagName, new String[] {"true"}, Model.getFacade().getRoot(umlObject));
WITHOUT_CLASSIFICATION	MClassifiers cannot be Bag
WITHOUT_CLASSIFICATION	If the model repository doesn't manage a DI model then we must generate our Figs by inspecting PGML
WITHOUT_CLASSIFICATION	Read xsltStream into a temporary file Get url for temp file. openStream from url and wrap in StreamSource
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	if the object does not have a name, than no problem
WITHOUT_CLASSIFICATION	tree value isSelected(dont want a colored background) isExpanded isLeaf row(not important for rendering) hasFocus (dont want a focus rectangle)
WITHOUT_CLASSIFICATION	If we don't have it, find the trigger. If this fails it will keep its default value of null
WITHOUT_CLASSIFICATION	@Override public final void setHeadline(String s) { setupHeadAndDesc(); }
WITHOUT_CLASSIFICATION	We need to find the stereotype with the name "create" and the base class BehavioralFeature in the model. If there is none then we create one and put it there.
WITHOUT_CLASSIFICATION	first element is e.g. the class, but we need to have its namespace to recompute the offenders.
WITHOUT_CLASSIFICATION	- RedrawManager.unlock(); - _redrawer.repairDamage();
WITHOUT_CLASSIFICATION	if this composite state is not attached to a statemachine it is not the toplevel composite state.
WITHOUT_CLASSIFICATION	Get the assocations and connections. No problem (there is a separate critic) if this is a binary association or is an association role.
WITHOUT_CLASSIFICATION	If this was an association then there will be relevant information to fetch out of the mode arguments. If it not an association then these will be passed forward harmlessly as null.
WITHOUT_CLASSIFICATION	find selected rows and make a list of the model elements that are selected
WITHOUT_CLASSIFICATION	TreeCellRenderer implementation
WITHOUT_CLASSIFICATION	Build namespace hierarchy like this: g a /\ b c /\ d e f
WITHOUT_CLASSIFICATION	private PropertyprpTodo; private PropertyprpProperties; private PropertyprpDocumentation; private PropertyprpStyle; private PropertyprpSource; private PropertyprpConstraints; private PropertyprpTaggedValues;
WITHOUT_CLASSIFICATION	always fire changes in the case something has changed in the composition of the taggedValues collection.
WITHOUT_CLASSIFICATION	Build up an array list of the heights of each label/component pair. Heights of zero indicate a proportional height.
WITHOUT_CLASSIFICATION	CmdPaste cmd = new CmdPaste(); cmd.doIt();
WITHOUT_CLASSIFICATION	stereotypes applied to the target mostly control which TDs (but see below for other listeners too)
WITHOUT_CLASSIFICATION	TODO: Add referenceValue for tagged values which have a non-primitive type
WITHOUT_CLASSIFICATION	add a decision but set the critic priority to 0 so isRelevant should still be false
WITHOUT_CLASSIFICATION	TODO: We should also test that the object have been removed from their namespace. Collection c = Model.getFacade().getOwnedElements(p.getRoot());
WITHOUT_CLASSIFICATION	Because the notation events get dispatched on the Swing event thread, we need to use invokeAndWait to make sure that we don't return until they've been delivered
WITHOUT_CLASSIFICATION	Parent is Element, but it has no attributes or associations to check checkElementCopy(e1, e2);
WITHOUT_CLASSIFICATION	Extra careful now, not to keep any references to the second argument.
WITHOUT_CLASSIFICATION	Auto-create a return message for a call message
WITHOUT_CLASSIFICATION	get the source of the return message
WITHOUT_CLASSIFICATION	get the dest of the return message
WITHOUT_CLASSIFICATION	GridBagConstraints gridBagConstraints3 = new GridBagConstraints(); gridBagConstraints3.gridx = 2; gridBagConstraints3.anchor = GridBagConstraints.NORTHWEST; gridBagConstraints3.insets = new Insets(5, 5, 0, 0); gridBagConstraints3.gridy = 3; GridBagConstraints gridBagConstraints2 = new GridBagConstraints(); gridBagConstraints2.gridx = 0; gridBagConstraints2.anchor = GridBagConstraints.NORTHWEST; gridBagConstraints2.insets = new Insets(5, 5, 0, 0); gridBagConstraints2.gridy = 3;
WITHOUT_CLASSIFICATION	Fig spf = null; Fig dpf = null; FigNode sfn = null; FigNode dfn = null;
WITHOUT_CLASSIFICATION	If the event originated from the window w/glass pane, consume the event
WITHOUT_CLASSIFICATION	Add GUI-internal stuff. GUI-internal stuff is panes, tabs, menu items that are part of the GUI subsystem i.e. a class in the org.argouml.ui-package. Things that are not part of the GUI, like everything that has any knowledge about UML, Diagrams, Code Generation, Reverse Engineering, creates and registers itself when that subsystem or module is loaded.
WITHOUT_CLASSIFICATION	The workarea is all the visible space except the menu, toolbar and status bar. Workarea is laid out as a BorderSplitPane where the various components that make up the argo application can be positioned.
WITHOUT_CLASSIFICATION	iterate through the tabbed panels to determine whether they should be enabled.
WITHOUT_CLASSIFICATION	Always select properties panel if defaultToProperties is true, and if properties panel is appropriate for selected perspective
WITHOUT_CLASSIFICATION	tabs.addTab(Translator.localize("dialog.find.tab.name-and-location"), nameLocTab);
WITHOUT_CLASSIFICATION	_tableModel.setTarget(_target); _table.setModel(_tableModel);
WITHOUT_CLASSIFICATION	if the current shortcut has not been set, then the actual shortcut value is the default one
WITHOUT_CLASSIFICATION	if the user cancelled the operation, we don't have to save anything
WITHOUT_CLASSIFICATION	create the return message modelelement with the interaction and the collaboration
WITHOUT_CLASSIFICATION	Generate and register the OSXAdapter, passing the methods we wish to use as delegates for various com.apple.eawt.ApplicationListener methods
WITHOUT_CLASSIFICATION	TODO: no Links in UML 2
WITHOUT_CLASSIFICATION	nothing we can do about veto, so just ignore it
WITHOUT_CLASSIFICATION	event handling
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	Fig accessors
WITHOUT_CLASSIFICATION	event handlers - MouseListener implementation
WITHOUT_CLASSIFICATION	the UML object wrong end of the edge
WITHOUT_CLASSIFICATION	We are going to add the ones still valid & new ones in the right sequence:
WITHOUT_CLASSIFICATION	This is perfectly normal and happens among other things within the call to setDiagram (below).
WITHOUT_CLASSIFICATION	events
WITHOUT_CLASSIFICATION	if the new edge implements the MouseListener interface it has to receive the mouseReleased() event
WITHOUT_CLASSIFICATION	user feedback
WITHOUT_CLASSIFICATION	needs to be updated for changes in Notation subsystem - tfm String nameStr = Notation.generate(this, getOwner()).trim(); getNameFig().setText(nameStr);
WITHOUT_CLASSIFICATION	GraphFactory implementation
WITHOUT_CLASSIFICATION	adapted from SelectionWButtons from line 280 calls a helper method to avoid this edge disappearing if the new source and dest are the same node.
WITHOUT_CLASSIFICATION	Give up if we are already on the graph. This is a bit inconistent with canAddNode above.
WITHOUT_CLASSIFICATION	Link the new extend relationship in to the ends. Remember we draw from the extension use case to the base use case.
WITHOUT_CLASSIFICATION	TODO: This is using the default platform character encoding specifying an encoding will produce more predictable results
WITHOUT_CLASSIFICATION	Check against "" is needed for backward compatibility. Don't remove without checking subclasses and warning downstream developers - tfm - 20081211
WITHOUT_CLASSIFICATION	next line does give user.home back but this is not compliant with how the project.uri works and therefore open and save project as give different starting directories. String directory = Globals.getLastDirectory();
WITHOUT_CLASSIFICATION	Correct the activator value
WITHOUT_CLASSIFICATION	We know this is a return action now. It must be pointing the opposite way to the activator.
WITHOUT_CLASSIFICATION	Java SE 6 has a native GIF writer, but it's not in Java 5. One is available in the JAI-ImageIO library, but we don't currently bundle that and at 6+ MB it seems like a heavyweight solution, but I don't have time to produce a stripped down version right now - tfm https:jai-imageio.dev.java.net/
WITHOUT_CLASSIFICATION	we don't want to show some nasty gray background color, now do we?
WITHOUT_CLASSIFICATION	Although we've historically written out the DOCTYPE, the DTD doesn't actually exist and this line will get stripped by the .uml file persister + "<!DOCTYPE profile SYSTEM \"profile.dtd\" >\n"
WITHOUT_CLASSIFICATION	check that the tag definition is returned by {@link UMLTagDefinitionComboBoxModel#getApplicableTagDefinitions(Object)}
WITHOUT_CLASSIFICATION	TODO real numbers not yet supported assertEquals(DefaultOclEvaluator.getInstance() .evaluate(null, null, "1.5"), 1.5);
WITHOUT_CLASSIFICATION	REMEMBER to change this if you change the number of MEs with source path settings
WITHOUT_CLASSIFICATION	put the x at the right side of the activation if needed
WITHOUT_CLASSIFICATION	Make sure there is the minimum gap above the message being drawn
WITHOUT_CLASSIFICATION	Make sure there is the minimum gap below the message being drawn
WITHOUT_CLASSIFICATION	The FigMessage that triggered this FigActivation into existence
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	This module will still register as enabled for UML1.4 but it won't actually do anything.
WITHOUT_CLASSIFICATION	Get the region as the first Region in the State. If there is no region in the StateMachine then create one.
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	Create the layer
WITHOUT_CLASSIFICATION	Create the renderer
WITHOUT_CLASSIFICATION	If we're not provided a namespace then get it from the diagram or the root
WITHOUT_CLASSIFICATION	Link the previous/next reference of the swimlanes according to the x order.
WITHOUT_CLASSIFICATION	GraphModel implementation
WITHOUT_CLASSIFICATION	make space for the clarifier for vertical symmetry margin between text and border
WITHOUT_CLASSIFICATION	MutableGraphModel implementation
WITHOUT_CLASSIFICATION	actions for toolbar
WITHOUT_CLASSIFICATION	VetoableChangeListener implementation
WITHOUT_CLASSIFICATION	contructors
WITHOUT_CLASSIFICATION	event processing
WITHOUT_CLASSIFICATION	The purpose of this method is not explained and it give give NPE depending on z order of figs as they are read. For now ignore if null but for future lets delete this.
WITHOUT_CLASSIFICATION	Fig accessors
WITHOUT_CLASSIFICATION	fig accessors
WITHOUT_CLASSIFICATION	can't have a connection between 2 interfaces: get the 'other' end type
WITHOUT_CLASSIFICATION	If there's only a single child (and we're it's only parent), set a hint for where to place it when we get to its row
WITHOUT_CLASSIFICATION	Use "aSize" to build up the minimum size. Start with the size of the name fig and build up.
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddNode(java.lang.Object)
WITHOUT_CLASSIFICATION	Both ends must be defined and nodes that are on the graph already.
WITHOUT_CLASSIFICATION	if we are the dest and is a call action, create the activation, but don't add it until the height is set.
WITHOUT_CLASSIFICATION	if we are the dest and is a call action, create the activation, but don't add it until the height is set.
WITHOUT_CLASSIFICATION	if we are the destination of a create action, create the entire activation
WITHOUT_CLASSIFICATION	if we are the target of a destroy action the figlifeline ends here and we add the activation
WITHOUT_CLASSIFICATION	if we are the source of a return action the activation ends here.
WITHOUT_CLASSIFICATION	If we have a currentAct object that means have reached the end of the lifeline with a call or a create not returned. Add the activation to the list after setting its height to end at the end of the lifeline.
WITHOUT_CLASSIFICATION	we do nothing. No call to the parent
WITHOUT_CLASSIFICATION	we don't recalculate activations, just move them
WITHOUT_CLASSIFICATION	if is a classifier role, it must return all the related messages.
WITHOUT_CLASSIFICATION	if is a message, it must return the sender and the receiver of the message.
WITHOUT_CLASSIFICATION	Comments from anywhere in the model are allowed
WITHOUT_CLASSIFICATION	All other types of elements must be in this namespace
WITHOUT_CLASSIFICATION	we initialize the coordinates.
WITHOUT_CLASSIFICATION	we do nothing
WITHOUT_CLASSIFICATION	manage if cursor x is less than lastX1
WITHOUT_CLASSIFICATION	manage if cursor x is more than lastX2
WITHOUT_CLASSIFICATION	manage changes of direction...
WITHOUT_CLASSIFICATION	I have no direction yet
WITHOUT_CLASSIFICATION	we move down or up the messages that are downward the broom
WITHOUT_CLASSIFICATION	we recalculate all the activations
WITHOUT_CLASSIFICATION	we draw a cross
WITHOUT_CLASSIFICATION	we don't let the user move the messages horizontally.
WITHOUT_CLASSIFICATION	if the edge is near the bottom of the classifier roles, we enlarge all the FigClassifierRoles in the diagram.
WITHOUT_CLASSIFICATION	super(Model.getFacade().getName(op), null);
WITHOUT_CLASSIFICATION	we need the edge to be complete
WITHOUT_CLASSIFICATION	if the added edge is a Create Message it will affect the position of the ClassifierRole so it should be repositioned
WITHOUT_CLASSIFICATION	the initial x is the left side of the activation
WITHOUT_CLASSIFICATION	the initial x is the left side of the activation
WITHOUT_CLASSIFICATION	put the x at the right side of the activation if needed
WITHOUT_CLASSIFICATION	if the y coordinate is before the classifier role y, we place the start in the corner of the fighead.
WITHOUT_CLASSIFICATION	if the y coordinate is inside the head, the x must be in the border of the headFig.
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigEdge#setFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigStateVertex#initNotationProviders (java.lang.Object)
WITHOUT_CLASSIFICATION	if the y coordinate is before the classifier role y, we place the start in the corner of the fighead.
WITHOUT_CLASSIFICATION	if the y coordinate is inside the head, the x must be in the border of the headFig.
WITHOUT_CLASSIFICATION	Use a different notation as Messages on a collaboration diagram:
WITHOUT_CLASSIFICATION	This next argument may be used to switch off the generation of sequence numbers - this is still to be implemented. They are less desired in sequence diagrams, since they do not add any information. In collaboration diagrams they are needed, and they are still optional in sequence diagrams.
WITHOUT_CLASSIFICATION	Operations ...
WITHOUT_CLASSIFICATION	TODO: add logging, but this will never happen and is handled
WITHOUT_CLASSIFICATION	If possible we determine this by checking the destination and source Figs are the same. If this is not possible because the edge is not yet connected then we check the model.
WITHOUT_CLASSIFICATION	we update the activations...
WITHOUT_CLASSIFICATION	for performance, we check if this is a selfmessage if it is, we have just updated the activations
WITHOUT_CLASSIFICATION	This call seems not very robust. Yet to determine cause.
WITHOUT_CLASSIFICATION	this constructor is needed for PGMLStackParser to load saved diagrams. It does nothing, because PGMLStackParser will call setPoints later.
WITHOUT_CLASSIFICATION	vertical resizing
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	This module will still register as enabled for UML1.4 but it won't actually do anything.
WITHOUT_CLASSIFICATION	Get the region as the first Region in the State. If there is no region in the StateMachine then create one.
WITHOUT_CLASSIFICATION	There are no regions so create one and place the vertex there.
WITHOUT_CLASSIFICATION	There are one or more regions so find the one that the vertex was dropped in
WITHOUT_CLASSIFICATION	The vertex was dropped onto the diagram. Get the region as the first Region in the StateMachine. If there is no region in the StateMachine then create one.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#removeFromDiagramImpl()
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.PopupGenerator#getPopUpActions(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	Create the layer
WITHOUT_CLASSIFICATION	nothing we can do about veto, so just ignore it
WITHOUT_CLASSIFICATION	Create the renderer
WITHOUT_CLASSIFICATION	Although not generally true for GEF, for Argo we know that the layer is a LayerPerspective which knows the associated diagram
WITHOUT_CLASSIFICATION	in this event we do nothing, only stop drawing the broom.
WITHOUT_CLASSIFICATION	There is a bug in GEF where positioning nodes can affect edge positions. We need to do 3 iterations to protect against that.
WITHOUT_CLASSIFICATION	1. Remember current message paths
WITHOUT_CLASSIFICATION	2. Reposition and resize nodes
WITHOUT_CLASSIFICATION	3. Now reposition messages based on their original position
WITHOUT_CLASSIFICATION	Compute the initial center position of the CR
WITHOUT_CLASSIFICATION	horizontal resizing
WITHOUT_CLASSIFICATION	Compute the final center position of the CR
WITHOUT_CLASSIFICATION	Self messages act differently so it is needed to move them separetly. Only self messages of selected CR should be horizontally translated.
WITHOUT_CLASSIFICATION	Create the graph model
WITHOUT_CLASSIFICATION	Y position of the new CR should match existing CRs Y position
WITHOUT_CLASSIFICATION	Init the sequence diagrams from the module
WITHOUT_CLASSIFICATION	debugging and looking at fig.headFig.figs[1]._currText I can see that it's working, but how to test it?
WITHOUT_CLASSIFICATION	Operations that work on elements:
WITHOUT_CLASSIFICATION	Operations that work on classes of objects:
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Object getImportedPackage(Object element);
WITHOUT_CLASSIFICATION	Object getIncludingCase(Object handle);
WITHOUT_CLASSIFICATION	Javadoc reviewed above this point - tfm /
WITHOUT_CLASSIFICATION	Object getImportingNamespace(Object element);
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Object createStereotype();
WITHOUT_CLASSIFICATION	Implementation Note: Unlike many of the interfaces to the model there is no control to force a single instance of an XmiReader. This is to allow work objects generated by the implementation to be garbage collected when an XmiReader instance falls out of scope.
WITHOUT_CLASSIFICATION	ADiagramElementProperty delegate methods
WITHOUT_CLASSIFICATION	@see org.omg.uml.diagraminterchange.ADiagramElementProperty#add( org.omg.uml.diagraminterchange.DiagramElement, org.omg.uml.diagraminterchange.Property)
WITHOUT_CLASSIFICATION	@see org.omg.uml.diagraminterchange.ADiagramElementProperty#exists( org.omg.uml.diagraminterchange.DiagramElement, org.omg.uml.diagraminterchange.Property)
WITHOUT_CLASSIFICATION	@see org.omg.uml.diagraminterchange.ADiagramElementProperty#getProperty( org.omg.uml.diagraminterchange.DiagramElement)
WITHOUT_CLASSIFICATION	easy interface to properties
WITHOUT_CLASSIFICATION	Here follows the interfaces that contain the enums of different kinds in the UML meta-model.
WITHOUT_CLASSIFICATION	Flow is not in UML 2.x - don't implement
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	additional support for tagged values
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Here follows the interfaces that contain the enums of different kinds in the UML meta-model.
WITHOUT_CLASSIFICATION	static variables
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	public methods
WITHOUT_CLASSIFICATION	end class UUIDManager
WITHOUT_CLASSIFICATION	Write out something for us to read back in
WITHOUT_CLASSIFICATION	Now read it and check the results.
WITHOUT_CLASSIFICATION	Create an empty file and try to read it
WITHOUT_CLASSIFICATION	Depends on implementation:
WITHOUT_CLASSIFICATION	TODO:
WITHOUT_CLASSIFICATION	Construct an exception with a message and a causing exception. @param message the message @param c the cause of the exception public XmiReferenceException(String message, Throwable c) { super(message, c); }
WITHOUT_CLASSIFICATION	The netbeans SAXParser sets line number and column number to -1.
WITHOUT_CLASSIFICATION	The xerces SAXParser sets line number and column number to 1.
WITHOUT_CLASSIFICATION	Not true in general, but should be true for our test models
WITHOUT_CLASSIFICATION	This throws org.argouml.model.XmiException: Unknown element in XMI file : Model because the UML 1.3->1.4 converter can only handle XMI 1.0, not 1.1
WITHOUT_CLASSIFICATION	TODO:
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	If the region is changed to another region then we make sure that a delete event is not fired as a result. $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	In this case, either the container was not set, or it was not contained in a statemachine.
WITHOUT_CLASSIFICATION	The only way a region is set to null is if we're deleting the vertex in which case we do nothing special so that the removal of the state triggers a delete event.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	TODO:
WITHOUT_CLASSIFICATION	In UML a message could have an Action. In UML2 it never does.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	No body found.
WITHOUT_CLASSIFICATION	oops we already have the body
WITHOUT_CLASSIFICATION	return handle.stringValue();
WITHOUT_CLASSIFICATION	public Collection<Element> getExtendedElements(Object handle) {
WITHOUT_CLASSIFICATION	For a Transition use indirection through source StateVertex
WITHOUT_CLASSIFICATION	Gone from UML 2.x throw new NotImplementedException();
WITHOUT_CLASSIFICATION	Get all the relationships, that this model element has. and filter everything, that is not an import.
WITHOUT_CLASSIFICATION	Can't be done in the general case of federated repositories, but at least get what we can find for the current resource set
WITHOUT_CLASSIFICATION	MultiplicityElement is now an interface implemented by element types that support multiplicities - tfm
WITHOUT_CLASSIFICATION	should be Element not EObject really
WITHOUT_CLASSIFICATION	Classifier powerType =
WITHOUT_CLASSIFICATION	TODO: Signal -> Receptions association not navigable in this direction
WITHOUT_CLASSIFICATION	in UML2, the tag definition is the attribute itself
WITHOUT_CLASSIFICATION	usage differs from UML1
WITHOUT_CLASSIFICATION	usage differs from UML1
WITHOUT_CLASSIFICATION	Transitions can have multiple Triggers now
WITHOUT_CLASSIFICATION	Gone in UML 2.x
WITHOUT_CLASSIFICATION	ActionState, CallState, and SubactivityState have been replaced in UML 2.0 by explicitly modeled Actions
WITHOUT_CLASSIFICATION	TODO: Double check - tfm
WITHOUT_CLASSIFICATION	TODO: gone in UML 2
WITHOUT_CLASSIFICATION	TODO: Gone in UML 2
WITHOUT_CLASSIFICATION	TODO: Double check - tfm
WITHOUT_CLASSIFICATION	TODO: double check - tfm
WITHOUT_CLASSIFICATION	below for UML 1.4 compatibility
WITHOUT_CLASSIFICATION	TODO: double check - tfm
WITHOUT_CLASSIFICATION	TODO: Changed from UML 1.4
WITHOUT_CLASSIFICATION	TODO: gone in UML 2
WITHOUT_CLASSIFICATION	TODO: changed for UML 2.x
WITHOUT_CLASSIFICATION	TODO: gone from UML 2
WITHOUT_CLASSIFICATION	has <<subsystem>> stereotype
WITHOUT_CLASSIFICATION	TODO: Not exact, but close
WITHOUT_CLASSIFICATION	&& ((Action) handle).get
WITHOUT_CLASSIFICATION	Not in UML2
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Even though this is not relevant for UML2 we have code calling this that expects it for UML1.4 and we must handle it gracefully.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	return ((RedefinableElement) handle).isRoot(); TODO: One part of UML 2.1.1 spec says that this is as above, but it appears to be gone - tfm
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	lifeline.setRepresents(prop);
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	A composite state contains at least one region
WITHOUT_CLASSIFICATION	an AssociationEnd is now a Property owned by an Association
WITHOUT_CLASSIFICATION	throw new NotImplementedException( "This is not a UML2 element"); $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	TODO: Exception has been removed for UML 2.x just return Signal for now - tfm
WITHOUT_CLASSIFICATION	Gone in UML 2.x - just Classifier now
WITHOUT_CLASSIFICATION	TODO: Not really the same thing, but close
WITHOUT_CLASSIFICATION	The name of the meta type is the class name (after the last .) and before the "Impl" or end of class name.
WITHOUT_CLASSIFICATION	TODO: Gone in UML 2.x Return place holder for now
WITHOUT_CLASSIFICATION	TODO: no separate SyncState in UML 2.1 - tfm
WITHOUT_CLASSIFICATION	ActionSequence.class
WITHOUT_CLASSIFICATION	ClassifierInState.class
WITHOUT_CLASSIFICATION	Argument.class
WITHOUT_CLASSIFICATION	AttributeLink.class
WITHOUT_CLASSIFICATION	UninterpretedAction.class
WITHOUT_CLASSIFICATION	Access should be fast
WITHOUT_CLASSIFICATION	Iteration should be fast
WITHOUT_CLASSIFICATION	LiteralSpecification
WITHOUT_CLASSIFICATION	i.e. eventType == Notification.REMOVE
WITHOUT_CLASSIFICATION	implements CommandStack
WITHOUT_CLASSIFICATION	list.add("OpaqueExpression");
WITHOUT_CLASSIFICATION	LiteralSpecification list.add("LiteralNull");When other ok
WITHOUT_CLASSIFICATION	list.add("LiteralInteger");When other ok
WITHOUT_CLASSIFICATION	list.add("LiteralUnlimitedNatural");When other ok
WITHOUT_CLASSIFICATION	list.add("InstanceValue");
WITHOUT_CLASSIFICATION	TODO else => Exception !
WITHOUT_CLASSIFICATION	Can't be changed
WITHOUT_CLASSIFICATION	rewrite it after change setExpression ?
WITHOUT_CLASSIFICATION	as write in UML specification, we have size(bodies)==size(langs) we must have tabValues.length%2==0
WITHOUT_CLASSIFICATION	LiteralSpecification
WITHOUT_CLASSIFICATION	Can't be set
WITHOUT_CLASSIFICATION	rewrite it after change setExpression ?
WITHOUT_CLASSIFICATION	as write in UML specification, we have size(bodies)==size(langs) we must have tabValues.length%2==0
WITHOUT_CLASSIFICATION	A Link is an Assocation in UML2.x
WITHOUT_CLASSIFICATION	Link does not exist in UML2, a link is represented just as an association
WITHOUT_CLASSIFICATION	must not be used in UML2; we model a method as a OpaqueBehavior object that already has a body, so there is no need to have an intermediate expression object
WITHOUT_CLASSIFICATION	We need a method (operation implementation) to store the method body.
WITHOUT_CLASSIFICATION	Maybe this operation already has a method, that fits our purpose? In this case, try to reuse it, instead of creating a new implementation.
WITHOUT_CLASSIFICATION	Check, if we have to create a new implementation.
WITHOUT_CLASSIFICATION	Create a new implementation.
WITHOUT_CLASSIFICATION	And set the specification to the current operation.
WITHOUT_CLASSIFICATION	Add it to the operation's methods.
WITHOUT_CLASSIFICATION	Look, if there's already a java implementation
WITHOUT_CLASSIFICATION	Try to get the corresponding body and set it to the current body This _should_ work, if all the bodies were stored with their corresponding languages.
WITHOUT_CLASSIFICATION	Job done.
WITHOUT_CLASSIFICATION	It seems, there was no implementation of our current target language, so we just add one.
WITHOUT_CLASSIFICATION	We cannot set the body of this model element type.
WITHOUT_CLASSIFICATION	Removed from UML 2.x
WITHOUT_CLASSIFICATION	also parse 1_ or 0_N etc.
WITHOUT_CLASSIFICATION	WARNING - This has containment side effects! Eclipse UML2 will move the Property from the Classifier to the Association when the navigability is changed.
WITHOUT_CLASSIFICATION	$NON-NLS-1$$NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	for other xmi files with further namespaces:
WITHOUT_CLASSIFICATION	eclipse namespaces:
WITHOUT_CLASSIFICATION	For the .uml files in the eclipse jar files, we need this:
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Not needed currently for UML 2
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	final Object scope,
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	The attribute 'targetScope' of an AssociationEnd in UML1.x is no longer supported in UML2.x
WITHOUT_CLASSIFICATION	Nothing to do
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#getSource(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#getDestination(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#move(java.lang.Object, org.argouml.model.UmlHelper.Direction)
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	in UML2, we model a method as a Behavior (initially OpaqueBehavior)
WITHOUT_CLASSIFICATION	The interface realization will be created in the client namespace (client is a namespace)
WITHOUT_CLASSIFICATION	Extent ignored for eUML2 implementation (required for NetBeans MDR)
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#move(java.lang.Object, org.argouml.model.UmlHelper.Direction)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ExtensionMechanismsHelper#getCommonTaggedValueTypes()
WITHOUT_CLASSIFICATION	cmd.setObjects(run.getParams().get(0));
WITHOUT_CLASSIFICATION	maybe UML2 has these as constants somewhere
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	also apply subprofiles:
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Sets the value of an element#s property (tagged value). This method makes sure that a Collection of values is set if and only if the property is multivalued (upper multiplicity value greater 1), so passing a collection is safe. @see org.argouml.model.ExtensionMechanismsHelper#setValueOfTag(java.lang.Object, java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	commonTaggedValueTypes.add(org.eclipse.uml2.uml.resource.UMLResource.)
WITHOUT_CLASSIFICATION	remove base class by destroying the extension
WITHOUT_CLASSIFICATION	consider the property multiplicity
WITHOUT_CLASSIFICATION	or getDefaultValueFor(prop)?
WITHOUT_CLASSIFICATION	too bad, we choose to take the first value
WITHOUT_CLASSIFICATION	ready to set the value finally
WITHOUT_CLASSIFICATION	in case of a tagged value, the type shouldn't be set here
WITHOUT_CLASSIFICATION	not implementable in UML2, because property is missing
WITHOUT_CLASSIFICATION	also unapply subprofiles:
WITHOUT_CLASSIFICATION	also define subprofiles:
WITHOUT_CLASSIFICATION	{AssociationRole.class, ClassifierRole.class, },
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	{Link.class, Instance.class, }, {Transition.class, StateVertex.class, },
WITHOUT_CLASSIFICATION	{Message.class, ClassifierRole.class },
WITHOUT_CLASSIFICATION	Note for UML2 the aggregation ends are swapped
WITHOUT_CLASSIFICATION	Extend, but only between two use cases. Remember we draw from the extension port to the base port.
WITHOUT_CLASSIFICATION	in UML2 subsystem is a Component with <<subsystem>> stereotype so this must occur after the metaTypes.getComponent() case
WITHOUT_CLASSIFICATION	find the passed in container in validContainmentMap
WITHOUT_CLASSIFICATION	determine if metaType is a valid element for container
WITHOUT_CLASSIFICATION	UML 1.4.2 Spec section 4.5.3.20 [5] A GeneralizableElement may only be a child of GeneralizableElement of the same kind.
WITHOUT_CLASSIFICATION	specifies valid elements for a Region to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Region to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Region to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Package to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Package to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Package to contain
WITHOUT_CLASSIFICATION	valid elements for a Profile to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a class to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a classifier to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an Interface to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Signal to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an Actor to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Use Case to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Use Case to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Component to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Node to contain
WITHOUT_CLASSIFICATION	$NON-NLS-1$$NON-NLS-2$
WITHOUT_CLASSIFICATION	A list of valid connections between elements, the connection type first and then the elements to be connected
WITHOUT_CLASSIFICATION	If there isn't a 3rd column then this represents a connection of elements of the same type.
WITHOUT_CLASSIFICATION	If there is a 3rd column then this represents a connection of between 2 different types of element.
WITHOUT_CLASSIFICATION	If the array hasn't been flagged to indicate otherwise swap elements the elemnts and add again.
WITHOUT_CLASSIFICATION	specifies valid elements for a DataType to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an Operation to contain
WITHOUT_CLASSIFICATION	valid elements for a Stereotype to contain
WITHOUT_CLASSIFICATION	valid elements for an Action to contain
WITHOUT_CLASSIFICATION	trying to get a built-in standard profile from eclipse UML2
WITHOUT_CLASSIFICATION	Removed from UML 2
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Roll back transaction to remove any partial results read
WITHOUT_CLASSIFICATION	We shouldn't get here, but just in case... We want a wide exception catcher to make sure our transaction always gets ended
WITHOUT_CLASSIFICATION	If we can find a nested SAX exception, it will have information on the line number, etc.
WITHOUT_CLASSIFICATION	Ignore if the extent never got created or has been deleted
WITHOUT_CLASSIFICATION	InputSource xformedInput = chainedTransform(transformFiles, pIs);
WITHOUT_CLASSIFICATION	InputSource xformedInput = chainedTransform(transformFiles, pIs);
WITHOUT_CLASSIFICATION	@see org.argouml.model.XmiReader#getXMIUUIDToObjectMap()
WITHOUT_CLASSIFICATION	Set up reader to be first filter in chain
WITHOUT_CLASSIFICATION	Set up source for style sheet
WITHOUT_CLASSIFICATION	Create & set up temporary output file
WITHOUT_CLASSIFICATION	In UML2.x there is no metaclass named Method, but we use the 'method' association of BehavioralFeature
WITHOUT_CLASSIFICATION	ret.setIsLeaf(false); ret.setIsRoot(false);
WITHOUT_CLASSIFICATION	Create filter for each style sheet and chain to previous filter/reader
WITHOUT_CLASSIFICATION	Create transformer and do transformation
WITHOUT_CLASSIFICATION	Set up for next iteration
WITHOUT_CLASSIFICATION	Create & set up temporary output file
WITHOUT_CLASSIFICATION	Silently ignore anything specified by caller attempt to continue
WITHOUT_CLASSIFICATION	we presume the stream is encoded using the default char encoding
WITHOUT_CLASSIFICATION	Delete the old extent first
WITHOUT_CLASSIFICATION	LOG.log(Level.WARNING, "Unable to find extent " + extent);
WITHOUT_CLASSIFICATION	Set the storage id for our repository so that MofIds will be unique (they are composed as "storageId":"serialNumber"). NOTE: The storage manager only looks for a few property names such as the StorageFactoryClassName. Everything else needs to be prefixed with "MDRStorageProperty." which gets deleted from the property name before it and its associated value are copied to an internal property table separate from the system property table.
WITHOUT_CLASSIFICATION	Connect to the repository
WITHOUT_CLASSIFICATION	Create an extent and read in our metamodel (M2 model)
WITHOUT_CLASSIFICATION	Create and start event pump first so it's available for all others
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getDiagramInterchangeModel()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getFacade()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getModelEventPump()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getActivityGraphsFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getActivityGraphsHelper()
WITHOUT_CLASSIFICATION	handles all children of relationship including extend and include which are not members of core
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Disable event delivery during model load
WITHOUT_CLASSIFICATION	If we've got a streaming input, copy it to make sure we'll be able to rewind it if necessary
WITHOUT_CLASSIFICATION	Use a transaction to avoid the performance penalty (3x) of MDR's autocommit mode
WITHOUT_CLASSIFICATION	If a UML 1.3 file, attempt to upgrade it to UML 1.4
WITHOUT_CLASSIFICATION	Roll back transaction from first attempt & start new one
WITHOUT_CLASSIFICATION	Clear the associated ID maps & reset starting collection
WITHOUT_CLASSIFICATION	Make sure we always have a default extent. The old extent will get deleted as part of creating the new extent.
WITHOUT_CLASSIFICATION	DataTypes is next so it's available for Kinds, ModelManagement, & Extensions
WITHOUT_CLASSIFICATION	Initialize remaining factories and helpers (but defer heavyweight ones until needed)
WITHOUT_CLASSIFICATION	Create a default extent for the user UML model. This will get replaced if a new model is read in from an XMI file.
WITHOUT_CLASSIFICATION	NOTE: If we switch to a persistent repository like the b-tree repository we'll want to keep the old extent(s) around
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCollaborationsFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCommonBehaviorHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCopyHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCoreFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCoreHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getDataTypesFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getDataTypesHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getExtensionMechanismsFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getModelManagementFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getModelManagementHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getStateMachinesFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getStateMachinesHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getUmlFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getUmlHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getUseCasesFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getUseCasesHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getChangeableKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getAggregationKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getPseudostateKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getScopeKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getConcurrencyKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getDirectionKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getOrderingKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.CommonBehaviorHelper#setNodeInstance(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	Elements created after file load won't have index entries
WITHOUT_CLASSIFICATION	Normally the extent should exist already, but in the case of making an empty project, we may not have an extent yet, so create a default extent
WITHOUT_CLASSIFICATION	Private constructor for common work needed by both public constructors.
WITHOUT_CLASSIFICATION	end our transaction
WITHOUT_CLASSIFICATION	@see org.argouml.model.ExtensionMechanismsHelper#getAllPossibleStereotypes(java.util.Collection, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ExtensionMechanismsHelper#getCommonTaggedValueTypes()
WITHOUT_CLASSIFICATION	there is nothing to do in UML1.4
WITHOUT_CLASSIFICATION	forbid instantiation
WITHOUT_CLASSIFICATION	MDR classes may have a UML or Uml prefix which should be removed.
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	@see org.argouml.model.MetaTypes#getAbstraction()
WITHOUT_CLASSIFICATION	Delete Stimulii which have this as their dispatchAction
WITHOUT_CLASSIFICATION	Delete Messages which have this as their action
WITHOUT_CLASSIFICATION	Delete LinkEnds
WITHOUT_CLASSIFICATION	Delete AttributeLinks where this is the value
WITHOUT_CLASSIFICATION	Delete Stimuli which have this as a Sender or Receiver
WITHOUT_CLASSIFICATION	binary link
WITHOUT_CLASSIFICATION	Delete all SendActions which have this as signal
WITHOUT_CLASSIFICATION	Delete all SignalEvents which have this as the signal
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#deleteCollection(java.util.Collection)
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#getSource(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#getDestination(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#move(java.lang.Object, org.argouml.model.UmlHelper.Direction)
WITHOUT_CLASSIFICATION	Text was stored in name in UML 1.3
WITHOUT_CLASSIFICATION	The name of the meta type is the class name (after the last .) and before the next $ or end of class name.
WITHOUT_CLASSIFICATION	Delete CollaborationInstanceSets where this is the last participatingInstance
WITHOUT_CLASSIFICATION	Delete InteractionInstanceSets where this is the last participatingStimulus
WITHOUT_CLASSIFICATION	handles all children of relationship including extend and include which are not members of core
WITHOUT_CLASSIFICATION	this doesn't support I18N or multiple states, but it's just a default
WITHOUT_CLASSIFICATION	Partitions are composite elements and will get deleted implicitly Partition contents don't need to be deleted or checked
WITHOUT_CLASSIFICATION	@see org.netbeans.api.xmi.XMIReferenceProvider#getReference(javax.jmi.reflect.RefObject)
WITHOUT_CLASSIFICATION	Look for an existing reference matching our MofID
WITHOUT_CLASSIFICATION	probably redundant - just in case
WITHOUT_CLASSIFICATION	delete Messages which have this as sender or receiver
WITHOUT_CLASSIFICATION	Helper interfaces and methods.
WITHOUT_CLASSIFICATION	CHECKSTYLE:OFF - ignore too many parameters since API is fixed by MDR
WITHOUT_CLASSIFICATION	CHECKSTYLE:ON
WITHOUT_CLASSIFICATION	Shorthand notation for convenience
WITHOUT_CLASSIFICATION	Quick exit if it's a transaction event (we get a lot of them and they are all ignored)
WITHOUT_CLASSIFICATION	The 4-arg version of this method depends on this ordering. Don't change it!
WITHOUT_CLASSIFICATION	InteractionInstanceSets will get deleted automatically because they are associated by composition
WITHOUT_CLASSIFICATION	If this is the only message contained in the Interaction we delete the Interaction
WITHOUT_CLASSIFICATION	Object from a different file, register with superclass so it can resolve all references
WITHOUT_CLASSIFICATION	@see org.netbeans.lib.jmi.xmi.XmiContext#getReference(java.lang.String, java.lang.String)
WITHOUT_CLASSIFICATION	/ Begin AndroMDA Code /
WITHOUT_CLASSIFICATION	if the model URL has a suffix of '.zip' or '.jar', get the suffix without it and store it in the urlMap
WITHOUT_CLASSIFICATION	Several tries to construct a URL that really exists.
WITHOUT_CLASSIFICATION	If systemId is publicId previously mapped from a systemId, try to use the systemId.
WITHOUT_CLASSIFICATION	Try to find suffix in module list.
WITHOUT_CLASSIFICATION	search the classpath
WITHOUT_CLASSIFICATION	Give up and let superclass deal with it.
WITHOUT_CLASSIFICATION	remove the first prefix because it may be an archive (like magicdraw)
WITHOUT_CLASSIFICATION	We've got a profile read pending - handle it ourselves now
WITHOUT_CLASSIFICATION	shouldn't happen
WITHOUT_CLASSIFICATION	Otherwise if it's not something we've already read, just punt to the super class.
WITHOUT_CLASSIFICATION	Unfortunately the MDR super implementation throws DebugException with just the message from the causing exception rather than nesting the exception itself, so we don't have all the information we'd like
WITHOUT_CLASSIFICATION	Only add MOF elements, not primitive datatypes
WITHOUT_CLASSIFICATION	Only add MOF elements, not primitive datatypes
WITHOUT_CLASSIFICATION	For Transition use indirection through target StateVertex
WITHOUT_CLASSIFICATION	Look for an existing reference matching our MofID
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Get all (UML) metaclasses
WITHOUT_CLASSIFICATION	Object[] args = { typeName, elemName }; misc.name.element-import = Imported {0}: {1} return Translator .localize("misc.name.element-import", args);
WITHOUT_CLASSIFICATION	Although this only handles one level of package, it is OK for UML 1.4 because of clustering Get the right UML package in the extent
WITHOUT_CLASSIFICATION	Return the metatype proxy
WITHOUT_CLASSIFICATION	we must find out if the activator itself does not have message as it's activator
WITHOUT_CLASSIFICATION	An activator can't also be a predecessor of a message
WITHOUT_CLASSIFICATION	This double 'for' loop may be optimised as follows: - Use arrays in stead of a Set for bases - Have the second loop start from the element after base1 ... but I chose not to do this, since the gain is small, and this is only used for a lazily filled combo. BTW: This is also used by Notation.
WITHOUT_CLASSIFICATION	An Association can only have a single unnamed ClassifierRole, so
WITHOUT_CLASSIFICATION	if we are unnamed eliminate all classifiers which are already the base of some role
WITHOUT_CLASSIFICATION	eliminate Classifiers which already have an unnamed role
WITHOUT_CLASSIFICATION	WFR 2.10.3.3 #4
WITHOUT_CLASSIFICATION	eliminate Classifiers which already have an unnamed role
WITHOUT_CLASSIFICATION	We need to verify that ns is a Package, if not - find its parent package! Otherwise this causes an exception when creating a sequence diagram for a ClassifierRole.
WITHOUT_CLASSIFICATION	No initialization currently
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	if we are unnamed eliminate all classifiers which are already the base of some role
WITHOUT_CLASSIFICATION	|| context instanceof Collaboration || context instanceof Model
WITHOUT_CLASSIFICATION	@see org.netbeans.lib.jmi.xmi.XMIHeaderProvider#writeHeader(java.io.Writer)
WITHOUT_CLASSIFICATION	NOTE: The <XMI.header></XMI.header> is provided for us
WITHOUT_CLASSIFICATION	Not implemented in MDR
WITHOUT_CLASSIFICATION	@see org.argouml.model.AbstractModelEventPump#addModelEventListener(java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.AbstractModelEventPump#addModelEventListener(java.beans.PropertyChangeListener, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.AbstractModelEventPump#removeModelEventListener(java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.AbstractModelEventPump#removeModelEventListener(java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.AbstractModelEventPump#removeModelEventListener(java.beans.PropertyChangeListener, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.AbstractModelEventPump#addClassModelEventListener(java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	Clean up index entries
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	Create a change event for the corresponding property
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	Create an event for the other end of the association
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	and a change event for that end
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	Create a change event for the associated property
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	Create an event for the other end of the association
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	Create a change event for the associated property
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	Cut down on debugging noise
WITHOUT_CLASSIFICATION	Unregister deleted instances after all events have been delivered
WITHOUT_CLASSIFICATION	Any given listener is only called once even if it is registered for multiple relevant matches
WITHOUT_CLASSIFICATION	This will include all subtypes registered
WITHOUT_CLASSIFICATION	(LOG.isDebugEnabled()
WITHOUT_CLASSIFICATION	For debugging you probably want either this OR the logging for every event which is fired - not both
WITHOUT_CLASSIFICATION	LOG.isDebugEnabled()
WITHOUT_CLASSIFICATION	Fetch the key before going in synchronized mode
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, " Class " + name + " has subtypes : " + names.get(name));
WITHOUT_CLASSIFICATION	convert classname to RefObject
WITHOUT_CLASSIFICATION	If we don't have a MofClass, see if we can get one from the instance
WITHOUT_CLASSIFICATION	If we still don't have a MofClass, something's wrong
WITHOUT_CLASSIFICATION	throw new IllegalArgumentException("Property '" + attribute + "' doesn't exist in metamodel");
WITHOUT_CLASSIFICATION	If there isn't a 3rd column then this represents a connection of elements of the same type.
WITHOUT_CLASSIFICATION	Save the model (current)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ChangeableKind#getAddOnly()
WITHOUT_CLASSIFICATION	Lookup primary key, creating new entry if needed
WITHOUT_CLASSIFICATION	Lookup primary key, creating new entry if needed
WITHOUT_CLASSIFICATION	If there are no subkeys, register using our special value to indicate that this is a primary key only registration
WITHOUT_CLASSIFICATION	UML 2.x only
WITHOUT_CLASSIFICATION	UML 2.x only
WITHOUT_CLASSIFICATION	UML 2.x only
WITHOUT_CLASSIFICATION	Look for a TagDefinition matching the given name
WITHOUT_CLASSIFICATION	Create a new TagDefinition if none found
WITHOUT_CLASSIFICATION	only add all if there are some to add.
WITHOUT_CLASSIFICATION	Clear target so that multiple copies have no effect (other than inefficiency)
WITHOUT_CLASSIFICATION	Delete all TaggedValues with this type
WITHOUT_CLASSIFICATION	Used by the copy functions. Do not call this function directly. @param source The stereotype to copy from. @param target The object becoming a copy.
WITHOUT_CLASSIFICATION	"Element");
WITHOUT_CLASSIFICATION	Well formedness rule 4.12.3.1 CompositeState [4] There have to be at least two composite substates in a concurrent composite state. If this is broken by deletion of substate then we delete the other remaining substates.
WITHOUT_CLASSIFICATION	The effect will get deleted automatically by MDR, unlike the Guard.
WITHOUT_CLASSIFICATION	Although Usage & Permission are Dependencies, they need to be include separately because of the way lookup works
WITHOUT_CLASSIFICATION	The following is specifically for Realizations
WITHOUT_CLASSIFICATION	The next 3 restrictions for Abstraction seem to be Argo specific not something the UML spec requires - tfm - 20070215
WITHOUT_CLASSIFICATION	A list of valid connections between elements, the connection type first and then the elements to be connected
WITHOUT_CLASSIFICATION	TODO: constraints TODO: required tags
WITHOUT_CLASSIFICATION	specifies valid elements for a Model to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Model to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Package to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a classifier to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an Interface to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Signal to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an Actor to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Use Case to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Use Case to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Node to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Enumeration to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a DataType to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Operation to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an Event to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an State to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an CallState to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an SimpleState to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an SubactivityState to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an ActionState to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an ActionState to contain
WITHOUT_CLASSIFICATION	supports implementation of some special elements not supported by buildNode
WITHOUT_CLASSIFICATION	the list of namespaces to return
WITHOUT_CLASSIFICATION	If our map has any entries for this type, it's a connection type
WITHOUT_CLASSIFICATION	Get the list of valid model item pairs for the given connection type
WITHOUT_CLASSIFICATION	See if there's a pair in this list that match the given model elements
WITHOUT_CLASSIFICATION	find the passed in container in validContainmentMap
WITHOUT_CLASSIFICATION	determine if metaType is a valid element for container
WITHOUT_CLASSIFICATION	UML 1.4.2 Spec section 4.5.3.20 [5] A GeneralizableElement may only be a child of GeneralizableElement of the same kind.
WITHOUT_CLASSIFICATION	Begin a transaction - we'll do a bunch of reads first to collect a set of elements to delete - then delete them all
WITHOUT_CLASSIFICATION	no else here to make sure Classifier with its double inheritance goes ok
WITHOUT_CLASSIFICATION	no else here to make sure AssociationClass goes ok
WITHOUT_CLASSIFICATION	no else to handle multiple inheritance of linkobject
WITHOUT_CLASSIFICATION	If we get this with the repository locked, it means our root model element was already deleted. Nothing to do...
WITHOUT_CLASSIFICATION	Our wrapped version of the same error
WITHOUT_CLASSIFICATION	end our transaction
WITHOUT_CLASSIFICATION	if there are no owned elements then return empty list
WITHOUT_CLASSIFICATION	This enforces the following well-formedness rule. <p>Well formedness rule 4.12.3.1 CompositeState [4] There have to be at least two composite substates in a concurrent composite state.<p> If this is broken by deletion of substate then we change the parent composite substate to be not concurrent.
WITHOUT_CLASSIFICATION	We don't care about the value - just want to see if it throws
WITHOUT_CLASSIFICATION	Recurse into ourself for each parent
WITHOUT_CLASSIFICATION	the following should always be true
WITHOUT_CLASSIFICATION	If we were handed a Classifier to start, this must be a Classifier
WITHOUT_CLASSIFICATION	we have to follow the arrows..
WITHOUT_CLASSIFICATION	|| ns instanceof UseCase see comment below
WITHOUT_CLASSIFICATION	NOTE: Although WFR #3 in section 2.11.3.5 UseCase of the UML 1.4 spec says "A UseCase cannot contain any Classifiers," the OCL is actually self.contents->isEmpty which would seem to imply it can't contain any elements - tfm - 20060416
WITHOUT_CLASSIFICATION	Made following changes from OCL in UML 1.4 section 2.9.3.16: CollaborationInstance -> CollaborationInstanceSet Stimuli -> Stimulus
WITHOUT_CLASSIFICATION	A Profile is a special package having the <<profile>> stereotype which can only contain the following types
WITHOUT_CLASSIFICATION	|| modelElement instanceof StateMachine
WITHOUT_CLASSIFICATION	A Profile is a special package having the <<profile>> stereotype
WITHOUT_CLASSIFICATION	There actually don't appear to be any restrictions on the namespace for a Generalization. The UML 1.4 WFR 2.5.3.20 #3 refers to GeneralizableElements, not Generalizations - tfm
WITHOUT_CLASSIFICATION	only build a namepace if needed, with
WITHOUT_CLASSIFICATION	return struc.getOwner().getNamespace().getOwnedElement().contains( struc.getType());
WITHOUT_CLASSIFICATION	self.allConnections->forAll(r | self.namespace.allContents->includes(r.participant) )
WITHOUT_CLASSIFICATION	d.supplier.oclAsType(GeneralizableElement). allParents.oclAsType(Namespace).ownedElement->select (e | e. elementOwnership.visibility = #public)->includes (r.participant) or
WITHOUT_CLASSIFICATION	d.supplier.oclAsType(Namespace).ownedElement->select (e | e.elementOwnership.visibility = #public)->includes (r.participant) or
WITHOUT_CLASSIFICATION	d.supplier.oclAsType(Package).allImportedElements->select ( e | e. elementImport.visibility = #public) ->includes (r.participant) ) )
WITHOUT_CLASSIFICATION	Get the namespace hierarchy for each element
WITHOUT_CLASSIFICATION	Traverse the lists looking for the last (innermost) match
WITHOUT_CLASSIFICATION	This is an expensive method that we should ensure is called rarely. Hence info level to track easily.
WITHOUT_CLASSIFICATION	UML 1.4 WFR 2.5.3.1 #3
WITHOUT_CLASSIFICATION	UML 1.4 WFR 2.5.3.1 #3 - no aggregation for N-ary associations
WITHOUT_CLASSIFICATION	We silently ignore requests which conflict with UML 1.4 WFR 2.5.3.1 #3 - no aggregation for n-ary associations
WITHOUT_CLASSIFICATION	If we made something aggregate, make sure the other ends conform to UML 1.4 WFR 2.5.3.1 #2 - no more than one aggregate end
WITHOUT_CLASSIFICATION	UML 1.4 WFR 2.5.3.1 #3 - no aggregation for N-ary associations
WITHOUT_CLASSIFICATION	<em>Warning: when changing the implementation of this method be warned that the sequence of the if then else tree DOES matter.</em> Most notably, do not move the setNamespace method any level up in the tree.<p>
WITHOUT_CLASSIFICATION	All text was stored in name field in UML 1.3
WITHOUT_CLASSIFICATION	Returns nothing
WITHOUT_CLASSIFICATION	Boolean, String, Integer, Long, Float, Double, etc
WITHOUT_CLASSIFICATION	This method is CPU intensive and therefore needs to be as efficient as possible.
WITHOUT_CLASSIFICATION	Because we get the metatype class stripped of its reflective proxies, we need to jump through a hoop or two to find it in the metamodel, then work from there to get its proxy.
WITHOUT_CLASSIFICATION	Remove any elements not in requested namespace
WITHOUT_CLASSIFICATION	Check whether model element is contained in given namespace/container.
WITHOUT_CLASSIFICATION	Get Classifiers in Namespace
WITHOUT_CLASSIFICATION	Get Features owned by those Classifiers
WITHOUT_CLASSIFICATION	Select those Features which are BehavioralFeatures
WITHOUT_CLASSIFICATION	Should these also be deleted?
WITHOUT_CLASSIFICATION	This is silly, but for backward compatibility
WITHOUT_CLASSIFICATION	TODO: This is the 2nd part of this method:
WITHOUT_CLASSIFICATION	For a Classifier: <pre> [10] The operation allContents returns a Set containing all ModelElements contained in the Classifier together with the contents inherited from its parents. allContents : Set(ModelElement); allContents = self.contents->union( self.parent.allContents->select(e | e.elementOwnership.visibility = #public or e.elementOwnership.visibility = #protected)) where parent is defined for GeneralizableElement as: [1] The operation parent returns a Set containing all direct parents parent : Set(GeneralizableElement); parent = self.generalization.parent </pre><p>
WITHOUT_CLASSIFICATION	For a Collaboration: <pre> [1 ] The operation allContents results in the set of all ModelElements contained in the Collaboration together with those contained in the parents except those that have been specialized. allContents : Set(ModelElement); allContents = self.contents->union ( self.parent.allContents->reject ( e | self.contents.name->include (e.name) )) parent here is the GeneralizableElement definition </pre>
WITHOUT_CLASSIFICATION	wellformednessrules and preconditions
WITHOUT_CLASSIFICATION	UML 1.4 WFR 2.5.3.1 #3 - no aggregation for N-ary associations
WITHOUT_CLASSIFICATION	equal
WITHOUT_CLASSIFICATION	greater
WITHOUT_CLASSIFICATION	less than
WITHOUT_CLASSIFICATION	binary association
WITHOUT_CLASSIFICATION	delete LinkEnds which have this as their associationEnd
WITHOUT_CLASSIFICATION	delete AttributeLinks where this is the Attribute
WITHOUT_CLASSIFICATION	delete CreateActions which have this as their instantiation
WITHOUT_CLASSIFICATION	@see org.argouml.model.ActivityGraphsHelper#findClassifierByName( java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	Delete dependencies where this is the only client
WITHOUT_CLASSIFICATION	Delete dependencies where this is the only supplier
WITHOUT_CLASSIFICATION	delete CallActions which have this as their operation
WITHOUT_CLASSIFICATION	delete CallEvents which have this as their operation
WITHOUT_CLASSIFICATION	TODO: All the ToDos in the doCopyFoo methods below are inherited from the NSUML implementation and do not reflect new issues. One additional thing which does need to be dealt with is the copying of any attributes which have been added since this code was implemented for UML 1.3.
WITHOUT_CLASSIFICATION	Nothing more to do.
WITHOUT_CLASSIFICATION	Used by the copy functions. Do not call this function directly. TODO: actions? instances? collaborations etc? @param source the source classifier @param target the target classifier
WITHOUT_CLASSIFICATION	Copy all the Features
WITHOUT_CLASSIFICATION	Used by the copy functions. Do not call this function directly. TODO: generalizations, specializations? @param source the source generalizable element @param target the target generalizable element
WITHOUT_CLASSIFICATION	Used by the copy functions. Do not call this function directly. TODO: template parameters, default type TODO: constraining elements TODO: flows, dependencies, comments, bindings, contexts ??? TODO: contents, residences ??? @param source the source me @param target the target me
WITHOUT_CLASSIFICATION	Nothing more to do, don't copy owned elements.
WITHOUT_CLASSIFICATION	copy raised signals:
WITHOUT_CLASSIFICATION	Set the name so that superclasses can find the newly created element in the model, if necessary.
WITHOUT_CLASSIFICATION	Note that if we're copying this element then we must also be allowed to copy other necessary objects.
WITHOUT_CLASSIFICATION	Don't explicitly check if element is null
WITHOUT_CLASSIFICATION	Return 1..1 multiplicity for empty string
WITHOUT_CLASSIFICATION	Convert "" to "0.." instead of ".."
WITHOUT_CLASSIFICATION	In this case, either the container was not set, or it was not contained in a statemachine.
WITHOUT_CLASSIFICATION	according WFR: in case of ActivityGraph only.
WITHOUT_CLASSIFICATION	For consistency with attribute and operation, give it a default name and location
WITHOUT_CLASSIFICATION	Delete Extends which have this as their only ExtensionPoint
WITHOUT_CLASSIFICATION	delete Extends where this is the base
WITHOUT_CLASSIFICATION	delete Includes where this is the addition
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	Test multipe items registered for single key set
WITHOUT_CLASSIFICATION	Remove with null item should remove all entries for key
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	Need to copy the lists since we will be moving the elements one by one:
WITHOUT_CLASSIFICATION	Deleting "source" here would probably delete the parameters...
WITHOUT_CLASSIFICATION	Only set the name if it differs from the text.
WITHOUT_CLASSIFICATION	Need to copy the lists since we will be moving the elements:
WITHOUT_CLASSIFICATION	This is not necessarily the current diagram!
WITHOUT_CLASSIFICATION	Remove the old fig from the diagram, so we can draw the new one in its place:
WITHOUT_CLASSIFICATION	p.moveToTrash(source);
WITHOUT_CLASSIFICATION	As soon as we've created a notation and have registered it listener force an event to go to the listener so it draws for the first time.
WITHOUT_CLASSIFICATION	If there are no subkeys, register using our special value to indicate that this is a primary key only registration
WITHOUT_CLASSIFICATION	Made following change from OCL in UML 1.4 section 2.9.3.22: CollaborationInstance -> CollaborationInstanceSet
WITHOUT_CLASSIFICATION	If there is a 3rd column then this represents a connection of between 2 different types of element.
WITHOUT_CLASSIFICATION	Elements which will be deleted when their container is deleted don't get added to the list of elements to be deleted (but we still want to traverse them looking for other elements to be deleted)
WITHOUT_CLASSIFICATION	Technically this is legal, but a StructuralFeature should probably only ever have an owner instead of a namespace. - tfm
WITHOUT_CLASSIFICATION	We'll put the association in the namespace of whichever end is not navigable and is writeable. If they both are, we'll use the namepace of c1.
WITHOUT_CLASSIFICATION	EnumerationLiterals should get deleted implicitly since they are associated by composition
WITHOUT_CLASSIFICATION	Set the namespace to that of the base as first choice, or that of the addition as second choice.
WITHOUT_CLASSIFICATION	UML2 only
WITHOUT_CLASSIFICATION	Editor editor = Globals.curEditor(); GraphModel gm = editor.getGraphModel(); LayerDiagram lay = ((LayerDiagram) editor.getLayerManager().getActiveLayer());
WITHOUT_CLASSIFICATION	Have we handled UML2 here?
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Get all classifiers in all top level packages of all profiles
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	We got passed an unmodifiable List. Copy it and sort the result
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased( java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	Set up the property panels for UML elements:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	Build up an array list of the heights of each label/component pair. Heights of zero indicate a proportional height.
WITHOUT_CLASSIFICATION	Make sure the component width isn't any greater than its maximum allowed width
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	If we do not set it to null first, then we get a MDR DebugException:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#addElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxModel#setSelectedItem(java.lang.Object)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	This can throw an exception if the target has been deleted. We don't want to try locking the repository because this is called from the event delivery thread and could cause a deadlock. Instead catch the exception and leave the model empty.
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see javax.swing.DefaultListModel#contains(java.lang.Object)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	we tried to remove a value
WITHOUT_CLASSIFICATION	Allow listening to other elements:
WITHOUT_CLASSIFICATION	Don't test changed element if it was deleted
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireContentsChanged( Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireIntervalAdded( Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireIntervalRemoved( Object, int, int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	Do nothing by design.
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	Allow null
WITHOUT_CLASSIFICATION	This is explained by WFR 2 of a StructuralFeature: The type of a StructuralFeature must be a Class, DataType, or Interface. @see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	restricting types for tagged values
WITHOUT_CLASSIFICATION	classifier is way too much in UML 2.x
WITHOUT_CLASSIFICATION	the minimum set of standard types
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	keep them sorted
WITHOUT_CLASSIFICATION	We got passed an unmodifiable List. Copy it and sort the result
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#addOtherModelEventListeners(java.lang.Object)
WITHOUT_CLASSIFICATION	Make a copy of the modelelements:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#isValidElement( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#getSelectedModelElement()
WITHOUT_CLASSIFICATION	Add stereotypes submenu
WITHOUT_CLASSIFICATION	the method
WITHOUT_CLASSIFICATION	the selected operation
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildPopup(javax.swing.JPopupMenu, int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#setTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	make sure we know it when a classifier is added as a base
WITHOUT_CLASSIFICATION	make sure we know it when a classifier is added as a base
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#removeOtherModelEventListeners(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	base is already set to this assoc...
WITHOUT_CLASSIFICATION	This check is needed, otherwise the setbase() below gives an exception.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	Just in case the existing selected element is from elsewhere make sure it is in the list
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	The selected value may be "" to clear the represented classifier.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	private boolean mustRefresh;
WITHOUT_CLASSIFICATION	mustRefresh = true;
WITHOUT_CLASSIFICATION	This should not happen.
WITHOUT_CLASSIFICATION	if it has no language, then we assume it is not an instance of OpaqueExpression, so we leave it null and handle elsewhere
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	/ Build the field /
WITHOUT_CLASSIFICATION	/ Add field(s) to panel /
WITHOUT_CLASSIFICATION	click on the already selected value must not call setValue
WITHOUT_CLASSIFICATION	The 2 Radios have only one information.
WITHOUT_CLASSIFICATION	Update the model, and then notify
WITHOUT_CLASSIFICATION	When call by contructor : no one is selected
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	private boolean mustRefresh;
WITHOUT_CLASSIFICATION	mustRefresh = true;
WITHOUT_CLASSIFICATION	This should not happen.
WITHOUT_CLASSIFICATION	If we do not set it to null first, then we get a MDR DebugException:
WITHOUT_CLASSIFICATION	Expressions are DataTypes, not independent model elements be careful not to reuse them
WITHOUT_CLASSIFICATION	We need to to this otherwise there is no notification and diagram isn't change
WITHOUT_CLASSIFICATION	needed for notification
WITHOUT_CLASSIFICATION	if the control is a panel, add it
WITHOUT_CLASSIFICATION	To be really sure, let's add the operation that is linked to the action in the model, too - if it is not listed yet. We need this, incase an operation is moved out of the package, or maybe with imported XMI...
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	fill the list with items
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	in UML2, the target is already the "expression" (Opaque...)
WITHOUT_CLASSIFICATION	reuse Opaque..., just set it's attributes
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	Expressions are DataTypes, not independent model elements be careful not to reuse them
WITHOUT_CLASSIFICATION	make it stretch vertically
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event. DocumentEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	If we do not set it to null first, then we get a MDR DebugException:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	make it stretch vertically
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBox#doIt(ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	p = new UMLValueSpecificationPanel(model, propertyName);
WITHOUT_CLASSIFICATION	MModelElement
WITHOUT_CLASSIFICATION	if not, it is a control and must be labeled...
WITHOUT_CLASSIFICATION	only association end has an aggregation option box
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	Create it [Here, OpaqueExpression which is the first choice] Note that if we edit the Initial value in the diagram (double clic) it was replaced by an OpaqueExpression
WITHOUT_CLASSIFICATION	Destroy it
WITHOUT_CLASSIFICATION	title = "" because already done for Optional
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	We got passed an unmodifiable List. Copy it and sort the result
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	Force the parent to redraw
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	Do not set buildingModel = false here, otherwise the action for selection is performed.
WITHOUT_CLASSIFICATION	Add new listeners:
WITHOUT_CLASSIFICATION	makes sure we can select 'none'
WITHOUT_CLASSIFICATION	TODO: For large lists, this is doing a linear search of literally thousands of elements
WITHOUT_CLASSIFICATION	TODO: Here too?
WITHOUT_CLASSIFICATION	Check against "" is needed for backward compatibility. Don't remove without checking subclasses and warning downstream developers - tfm - 20081211
WITHOUT_CLASSIFICATION	start of interval
WITHOUT_CLASSIFICATION	end of interval
WITHOUT_CLASSIFICATION	in middle of interval
WITHOUT_CLASSIFICATION	Allow listening to other elements:
WITHOUT_CLASSIFICATION	makes sure we can select 'none'
WITHOUT_CLASSIFICATION	Add new listeners:
WITHOUT_CLASSIFICATION	Don't try to test this if we're removing the element
WITHOUT_CLASSIFICATION	we tried to remove a value
WITHOUT_CLASSIFICATION	It would be better if we didn't need the container to get the target. This constructor can have zero parameters as soon as we improve targetChanged.
WITHOUT_CLASSIFICATION	Allow listening to other elements:
WITHOUT_CLASSIFICATION	@see javax.swing.ListModel#getElementAt(int)
WITHOUT_CLASSIFICATION	@see javax.swing.ListModel#getSize()
WITHOUT_CLASSIFICATION	catch callers attempting to use one without other
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxModel#setSelectedItem(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxModel#getSelectedItem()
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireContentsChanged( Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireIntervalAdded( Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireIntervalRemoved( Object, int, int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	Mutators hold write lock & will deadlock if use is not thread safe
WITHOUT_CLASSIFICATION	@see javax.swing.text.Document#remove(int, int)
WITHOUT_CLASSIFICATION	Mutators hold write lock & will deadlock if use is not thread-safe
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	Do nothing by design.
WITHOUT_CLASSIFICATION	NOTE: This may be called from a different thread, so we need to be careful of the threading restrictions imposed by AbstractDocument for mutators to be sure we don't deadlock.
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Mutators hold write lock & will deadlock if use is not thread safe
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox#buildModel()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	super(new LabelledLayout());
WITHOUT_CLASSIFICATION	c.insets = new Insets(1, 1, 1, 1);
WITHOUT_CLASSIFICATION	Get the list: OpaqueExpression, LiteralString,...
WITHOUT_CLASSIFICATION	By default, the first value of the combobox is selected.
WITHOUT_CLASSIFICATION	Get current InitialValue
WITHOUT_CLASSIFICATION	Select the Current type in the combobox
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	default : 0 => OpaqueExpression set to 1 for test
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	If we do not set it to null first, then we get a MDR DebugException:
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	Create the body and language Field
WITHOUT_CLASSIFICATION	Create other panel element
WITHOUT_CLASSIFICATION	create Panel containing the previous field
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	Our comparator will throw an InvalidElementException if the old list contains deleted elements (eg after a new project is loaded) so remove all the old contents first
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	make it stretch vertically
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	There are no composite states, so this will work:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	Allow null
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#setTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	make sure we know it when a classifier is added as a base
WITHOUT_CLASSIFICATION	make sure we know it when a classifier is added as a base
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	make it stretch vertically
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel#buildModelList()
WITHOUT_CLASSIFICATION	Get all classifiers in our model TODO: We need the property panels to have some reference to the project they belong to instead of using deprecated functionality
WITHOUT_CLASSIFICATION	Get all classifiers in all top level packages of all profiles
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	The selected value may be "" to clear the represented operation.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	ignored - we just skipped inserting it in our document
WITHOUT_CLASSIFICATION	Allow null
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	Make sure it's parseable as an number
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#setItem(java.lang.Object)
WITHOUT_CLASSIFICATION	we don't want to show some nasty gray background color, now do we?
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#getEditorComponent()
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#addActionListener(java.awt.event.ActionListener)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#removeActionListener(java.awt.event.ActionListener)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#selectAll()
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#getItem()
WITHOUT_CLASSIFICATION	we don't want to show some nasty gray background color, now do we?
WITHOUT_CLASSIFICATION	we don't want to show some nasty gray background color, now do we?
WITHOUT_CLASSIFICATION	necessary to create distance between the textfield and the icon.
WITHOUT_CLASSIFICATION	necessary to create distance between the textfield and the icon.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBox2#UMLComboBox2( UMLComboBoxModel, Action)
WITHOUT_CLASSIFICATION	next statement is necessary to update the textfield if the selection is equal to what was allready selected
WITHOUT_CLASSIFICATION	@see java.awt.event.FocusListener#focusGained(java.awt.event.FocusEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#setItem(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#getEditorComponent()
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#addActionListener(java.awt.event.ActionListener)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#removeActionListener(java.awt.event.ActionListener)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#selectAll()
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#getItem()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	Temporary until SimpleListModel is used for all
WITHOUT_CLASSIFICATION	Temporary until SimpleListModel is used for all
WITHOUT_CLASSIFICATION	Create popup tool if we have a single row
WITHOUT_CLASSIFICATION	Create add and remove buttons if needed first
WITHOUT_CLASSIFICATION	then any new buttons
WITHOUT_CLASSIFICATION	Pushing this to the end of the AWT thread seems to be the only way to get this to update correctly
WITHOUT_CLASSIFICATION	button action:
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	TODO: Probably really want to cancel editing ((FigTextEditor) focusOwner).cancelEditing();
WITHOUT_CLASSIFICATION	The 5 main component : 2 label, a panel for langage , a panel with button, a textarea
WITHOUT_CLASSIFICATION	Translator.localize("button.delete")
WITHOUT_CLASSIFICATION	Copy previous element
WITHOUT_CLASSIFICATION	Copy next element
WITHOUT_CLASSIFICATION	Translator.localize("button.move-up")
WITHOUT_CLASSIFICATION	Copy in memory the current
WITHOUT_CLASSIFICATION	Copy the previous value in the current
WITHOUT_CLASSIFICATION	Copy the current in the previous
WITHOUT_CLASSIFICATION	Copy in memory the current
WITHOUT_CLASSIFICATION	Copy the next value in the current
WITHOUT_CLASSIFICATION	Copy the current in the next
WITHOUT_CLASSIFICATION	Layout
WITHOUT_CLASSIFICATION	The 2 component: a textField and a list
WITHOUT_CLASSIFICATION	Layout
WITHOUT_CLASSIFICATION	Extract the icon that is used by the tree control for the current look and feel
WITHOUT_CLASSIFICATION	Add a new entry in the list and select it. Translator.localize("button.add") +
WITHOUT_CLASSIFICATION	necessary to create distance between the textfield and the icon.
WITHOUT_CLASSIFICATION	Eclipse UML2 implementation classes often start with "UML" $NON-NLS-1$
WITHOUT_CLASSIFICATION	Eclipse UML2 implementation classes end with "Impl" $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ Make sure we have a recognized file extension $NON-NLS-1$
WITHOUT_CLASSIFICATION	If the eUML.resources system property is defined then we are in a stand alone application, else we're in an Eclipse plug in. The eUML.resource should contain the path to the org.eclipse.uml2.uml.resource jar plugin. $NON-NLS-1$
WITHOUT_CLASSIFICATION	slope of the line we're finding the normal to is slope, and the normal is the negative reciprocal slope is (p1.y - p2.y) / (p1.x - p2.x) so recip is - (p1.x - p2.x) / (p1.y - p2.y)
WITHOUT_CLASSIFICATION	UML1.4 only
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	Set the child components to the heights in the array list calculating the height of any proportional component on the fly.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.ActionSetMultiplicity#setSelectedItem( java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	If we have a model but no list then build the list with preferred constructor. Eventually all lists should be built this way.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see javax.swing.DefaultListModel#addElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent )
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#removeOtherModelEventListeners(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange( java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	If the component is a JLabel which has another component assigned then position/size the label and calculate the size of the registered component
WITHOUT_CLASSIFICATION	If the child component is resizable then we don't know it's actual size yet. It will be calculated later as a proportion of the available left over space. For now this is flagged as zero.
WITHOUT_CLASSIFICATION	If a preferred height is not given or is the same as the minimum height then fix the height of this row.
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event. DocumentEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	We only have this here until we have stereotypes list on property panel
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	The property value has changed so rebuild our view. @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel#isValidElement(java.lang.Object)
WITHOUT_CLASSIFICATION	So, we found a Classifier that is not a ClassifierInState. And at least one state has been selected. Well, let's correct that:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	Not in UML1.4
WITHOUT_CLASSIFICATION	Not in UML1.4
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBox#UMLComboBox( UMLComboBoxModel, Action, boolean)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	Layout
WITHOUT_CLASSIFICATION	Language has changed
WITHOUT_CLASSIFICATION	Translator.localize("button.move-down")
WITHOUT_CLASSIFICATION	Object icon = ResourceLoaderWrapper.lookupIcon(s); putValue(Action.NAME, Translator.localize(s)); putValue(Action.SMALL_ICON, icon); Set the tooltip string: putValue(Action.SHORT_DESCRIPTION, Translator.localize(s));
WITHOUT_CLASSIFICATION	MDR has a hardcoded printStackTrace on all exceptions, even if they're caught, which is unsightly, so we handle unknown elements ourselves rather than letting MDR throw an exception for us to catch. org/netbeans/lib/jmi/util/Logger.java This can be uses to disable logging. Default output is System.err setProperty("org.netbeans.lib.jmi.Logger.fileName", "") org.netbeans.mdr.Logger The property org.netbeans.lib.jmi.Logger controls the minimum severity level for logging
WITHOUT_CLASSIFICATION	Commit our transaction
WITHOUT_CLASSIFICATION	not in UML1.4
WITHOUT_CLASSIFICATION	Ignore any error. The transaction may already have been unwound as part of exception processing by MDR
WITHOUT_CLASSIFICATION	Give the resolver.getIdToObjectMap() entries priority over entries with the same UUID from resolver.getIdToObjectMaps() because entries in resolver.getIdToObjectMaps() are historic.
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCollaborationsHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCommonBehaviorFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getExtensionMechanismsHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getMetaTypes()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getMessageSort()
WITHOUT_CLASSIFICATION	@see org.argouml.model.CommonBehaviorHelper#setReceiver(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	Nothing to do - we get all events automatically
WITHOUT_CLASSIFICATION	handles all children of relationship including extend and include which are not members of core
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#move(java.lang.Object, org.argouml.model.UmlHelper.Direction)
WITHOUT_CLASSIFICATION	Remember the system id of our root document so that we can write out profiles and linked models to a different file if requested
WITHOUT_CLASSIFICATION	For now just skip registering this and ignore the request, but the real issue is that MagicDraw serializes the same object in two different composition associations, first in the referencing file and second in the referenced file
WITHOUT_CLASSIFICATION	if we've found the module model, log it and place it in the map so we don't have to find it if we need it again.
WITHOUT_CLASSIFICATION	/ End AndroMDA Code /
WITHOUT_CLASSIFICATION	returns a List
WITHOUT_CLASSIFICATION	Simulates UML2 getting the aggregation from the opposite end
WITHOUT_CLASSIFICATION	find the bases of the connected classifierroles so that we can see what associations are between them. If there are bases then the associations between those bases form the possible bases. Otherwise the bases are formed by all associations in the namespace of the collaboration
WITHOUT_CLASSIFICATION	@see org.argouml.model.AbstractModelEventPump#addModelEventListener(java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#critique(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#supports(org.argouml.cognitive.Decision)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getSupportedDecisions()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#addSupportedDecision(org.argouml.cognitive.Decision)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#supports(org.argouml.cognitive.Goal)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getSupportedGoals()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#addSupportedGoal(org.argouml.cognitive.Goal)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#containsKnowledgeType(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#addKnowledgeType(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#expand(java.lang.String, ListSet)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#isActive()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#isEnabled()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedMetatypes()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#supports(org.argouml.cognitive.Decision)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getSupportedDecisions()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#supports(org.argouml.cognitive.Goal)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getSupportedGoals()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#containsKnowledgeType(java.lang.String)
WITHOUT_CLASSIFICATION	Just returns the descr param. @see org.argouml.cognitive.Poster#expand(java.lang.String, ListSet)
WITHOUT_CLASSIFICATION	Get the generic clarifier for this designer/poster. @see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#snooze()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#unsnooze()
WITHOUT_CLASSIFICATION	Does not do anything. @see org.argouml.cognitive.Poster#fixIt(org.argouml.cognitive.ToDoItem, java.lang.Object)
WITHOUT_CLASSIFICATION	Just returns false. @see org.argouml.cognitive.Poster#canFixIt(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#supports(org.argouml.cognitive.Decision)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#supports(org.argouml.cognitive.Goal)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#containsKnowledgeType(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#expand(java.lang.String, org.argouml.cognitive.ListSet)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#fixIt(org.argouml.cognitive.ToDoItem, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#getTarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#shouldBeEnabled(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsAdded(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsRemoved(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoListChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsAdded(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsRemoved(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoListChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.WizStep#setTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsAdded(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsRemoved(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoListChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded( TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved( TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.ProjectFilePersister#doLoad(java.io.File)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsAdded(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsRemoved(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoListChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsAdded(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsRemoved(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoListChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsAdded(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsRemoved(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoListChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsAdded(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsRemoved(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoListChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.ArgoGeneratorEventListener#generatorChanged(org.argouml.application.events.ArgoGeneratorEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.ArgoGeneratorEventListener#generatorAdded(org.argouml.application.events.ArgoGeneratorEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.ArgoGeneratorEventListener#generatorRemoved(org.argouml.application.events.ArgoGeneratorEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.NotationName#getConfigurationValue()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.NotationName#sameNotationAs(org.argouml.notation.NotationName)
WITHOUT_CLASSIFICATION	Add an element listener and remember the registration. @param element element to listen for changes on @see org.argouml.model.ModelEventPump#addModelEventListener(PropertyChangeListener, Object, String)
WITHOUT_CLASSIFICATION	Utility function to add a listener for a given property name and remember the registration. @param element element to listen for changes on @param property name of property to listen for changes of @see org.argouml.model.ModelEventPump#addModelEventListener(PropertyChangeListener, Object, String)
WITHOUT_CLASSIFICATION	Utility function to add a listener for an array of property names and remember the registration. @param element element to listen for changes on @param property array of property names (Strings) to listen for changes of @see org.argouml.model.ModelEventPump#addModelEventListener(PropertyChangeListener, Object, String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	Utility function to remove an element listener and adapt the remembered list of registration. @param element element to listen for changes on @see org.argouml.model.ModelEventPump#addModelEventListener(PropertyChangeListener, Object, String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#updateListener(java.beans.PropertyChangeListener, java.lang.Object, java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse( java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.notation.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.notation.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.notation.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.notation.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabRefresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabSave()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabCancel()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#getTabKey()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#getTabPanel()
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.ArgoNotationEventListener#notationChanged(org.argouml.application.events.ArgoNotationEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.ArgoNotationEventListener#notationAdded(org.argouml.application.events.ArgoNotationEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.ArgoNotationEventListener#notationRemoved(org.argouml.application.events.ArgoNotationEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.ArgoNotationEventListener#notationProviderAdded(org.argouml.application.events.ArgoNotationEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.ArgoNotationEventListener#notationProviderRemoved(org.argouml.application.events.ArgoNotationEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.SAXParserBase#handleStartElement( org.argouml.persistence.XMLElement)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.SAXParserBase#handleEndElement( org.argouml.persistence.XMLElement)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.SAXParserBase#isElementOfInterest(String)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.MemberFilePersister#getMainTag()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#getExtension()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#getDesc()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.XmiFilePersister#isSaveEnabled()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.MemberFilePersister#getMainTag()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#getExtension()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#getDesc()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#isSaveEnabled()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.ProjectFilePersister#doLoad(java.io.File)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.XMLTokenTableBase#setupTokens()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.MemberFilePersister#getMainTag()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.MemberFilePersister#load(org.argouml.kernel.Project, java.io.InputStream)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.MemberFilePersister#save(org.argouml.kernel.ProjectMember, java.io.OutputStream)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#getExtension()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#getDesc()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.ProjectFilePersister#doLoad(java.io.File)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#getExtension()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.XMLTokenTableBase#setupTokens()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#getExtension()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#getDesc()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#isSaveEnabled()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#getDesc()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#isSaveEnabled()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.ProjectFilePersister#doLoad(java.io.File)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.ProfileManager#lookForRegisteredProfile(java.lang.String)
WITHOUT_CLASSIFICATION	@param pc @see org.argouml.profile.ProfileManager#applyConfiguration(org.argouml.kernel.ProfileConfiguration)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.ModelInterpreter#invokeFeature(java.util.HashMap, java.lang.Object, java.lang.String, java.lang.String, java.lang.Object[])
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.ModelInterpreter#getBuiltInSymbol(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Critic#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.OclExpressionEvaluator#evaluate(java.util.HashMap, org.argouml.profile.internal.ocl.ModelInterpreter, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.ModelInterpreter#invokeFeature(java.util.HashMap, java.lang.Object, java.lang.String, java.lang.String, java.lang.Object[])
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.ModelInterpreter#getBuiltInSymbol(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.uml14.Bag#count(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#setMaximumProgress(int)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.ModelInterpreter#getBuiltInSymbol(java.lang.String)
WITHOUT_CLASSIFICATION	Returns the target of this tab. @see org.argouml.ui.TabTarget#getTarget()
WITHOUT_CLASSIFICATION	Refresh the text of the tab. @see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabRefresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabSave()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabCancel()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#getTabKey()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#getTabPanel()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.AbstractArgoJPanel#spawn()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#setTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#getTarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	Style panels only apply when a Fig is selected. @see org.argouml.ui.TabTarget#shouldBeEnabled(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded( TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved( TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()
WITHOUT_CLASSIFICATION	Report a progress to the ProgressMonitor window. @see org.argouml.persistence.ProgressListener#progress(org.argouml.persistence.ProgressEvent)
WITHOUT_CLASSIFICATION	Report a progress to the ProgressMonitor window. @see org.argouml.application.api.ProgressMonitor#updateProgress(int)
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#isCanceled()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#close()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#notifyMessage(java.lang.String, java.lang.String, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#notifyNullAction()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.CommandLineInterface#doCommand(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabCancel()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabRefresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabSave()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.PerspectiveManagerListener#addPerspective(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.PerspectiveManagerListener#removePerspective(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.TreeModelUMLEventListener#modelElementChanged(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.TreeModelUMLEventListener#modelElementAdded(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.TreeModelUMLEventListener#modelElementRemoved(java.lang.Object)
WITHOUT_CLASSIFICATION	the model structure has changed significantly, eg a new project. @see org.argouml.ui.explorer.TreeModelUMLEventListener#structureChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	NOTE: No longer a separate type in UML 2.1
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.WeakExplorerNode#subsumes(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.WeakExplorerNode#subsumes(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.WeakExplorerNode#subsumes(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.WeakExplorerNode#subsumes(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getChildren( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.WeakExplorerNode#subsumes(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.WeakExplorerNode#subsumes(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.AbstractProjectMember#getType()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.AbstractProjectMember#getZipFileExtension()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoItem#deselect()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoItem#select()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.AbstractProjectMember#getType()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.AbstractProjectMember#getZipFileExtension()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.checklist.CheckItem#expand(java.lang.String, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.AbstractCrUnconventionalName#computeSuggestion(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.Clarifier#setFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.Clarifier#setToDoItem(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.Clarifier#hit(int, int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.Clarifier#setFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.Clarifier#setToDoItem(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.Clarifier#hit(int, int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#predicate( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem(Object, Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.UMLWizard#getNumSteps()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.WizMEName#makePanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.WizMEName#doAction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.AbstractCrUnconventionalName#computeSuggestion(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#doAction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.AbstractCrUnconventionalName#computeSuggestion(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedMetatypes()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.profile.Profile#getProfileIdentifier()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.AbstractCrUnconventionalName#computeSuggestion(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedMetatypes()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#doAction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#makePanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#canFinish()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.UMLWizard#setSuggestion(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#doAction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#getNumSteps()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#makePanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#doAction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#getNumSteps()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#makePanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#doAction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#canGoNext()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#canFinish()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#makePanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#doAction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.Clarifier#setFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.Clarifier#setToDoItem(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.Clarifier#hit(int, int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#doAction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#makePanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#getNumSteps()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#makePanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#canFinish()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#doAction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.AbstractProjectMember#getType()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.AbstractProjectMember#getZipFileExtension()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.ProjectMember#repair()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.Layouter#add(org.argouml.uml.diagram.layout.LayoutedObject)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.Layouter#remove(org.argouml.uml.diagram.layout.LayoutedObject)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.Layouter#getObjects()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.Layouter#getObject(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.Layouter#layout()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getLabelName()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getDependentElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.Layouter#getMinimumDiagramSize()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getOwner()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#isRelocationAllowed(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.activity.ui.FigActionState#getNotationProviderType()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigStateVertex#makeSelection()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#initNotationProviders(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#renderingChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#textEdited(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#textEditStarted(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#modelChanged(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#updateListeners(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#updateNameText()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#clone()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#addEnclosedFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.activity.ui.SelectionActionState#getNewNodeType(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#modelChanged(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getLabelName()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#isRelocationAllowed(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#getNotationProviderType()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getUmlActions()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getLabelName()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#isRelocationAllowed(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)
WITHOUT_CLASSIFICATION	If the new encloser is null, and the old one is a Component, then the "enclosed" Fig has been moved on the diagram. This causes the model to be adapted as follows: remove the elementResidence between the "enclosed" and the oldEncloser. @see org.argouml.ui.ArgoDiagram#changeFigEncloser(org.tigris.gef.presentation.FigNode, org.tigris.gef.presentation.FigNode, org.tigris.gef.presentation.FigNode)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#getNotationProviderType()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#updateListeners(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.UMLMutableGraphSupport#isRemoveFromDiagramAllowed(Collection)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigHistoryState#getH()
WITHOUT_CLASSIFICATION	The Transition has a name text box. It contains: <ul> <li>The event-signature <li>The guard condition between [] <li>The action expression </ul><p> The content of the text box is generated by its own notationProvider. @see org.argouml.uml.diagram.ui.FigEdgeModelElement#getNotationProviderType()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#getDestination()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#getSource()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialHeight()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialWidth()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialX()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialY()
WITHOUT_CLASSIFICATION	Update the text labels. @see org.argouml.uml.diagram.ui.FigNodeModelElement#modelChanged(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	Update the text labels and listeners. @see org.argouml.uml.diagram.ui.FigNodeModelElement#modelChanged(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#updateListeners(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialHeight()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialWidth()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialX()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialY()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigStateVertex#initNotationProviders(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#removeFromDiagramImpl()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#renderingChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#textEditStarted(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#textEdited(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#modelChanged(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#renderingChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialHeight()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialWidth()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialX()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialY()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialHeight()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialWidth()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialX()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialY()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigHistoryState#getH()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getLabelName()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getDependentElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#isRelocationAllowed(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.LayoutedEdge#layout()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode#getTypeOrderNumer()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode#calculateWeight()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode#getRank()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode#getWeight()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode#isStandalone()
WITHOUT_CLASSIFICATION	Nothing is editable, since a Link takes its identity from the Association. @see org.argouml.uml.diagram.ui.FigEdgeModelElement#canEdit( org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	Listen also to the association, of which the link is an instantiation, since we want to update the rendering when the association name changes. @see org.argouml.uml.diagram.ui.FigEdgeModelElement#updateListeners( java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#getDestination()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#getSource()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#setNamespace(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getUmlActions()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getLabelName()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#isRelocationAllowed(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#renderingChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#updateStereotypeText()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#textEditStarted(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportSettings#getImportLevel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.StereotypeContainer#isStereotypeVisible()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.StereotypeContainer#setStereotypeVisible(boolean)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.VisibilityContainer#isVisibilityVisible()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.VisibilityContainer#setVisibilityVisible(boolean)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.DelayedVChangeListener#delayedVetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#textEdited(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#textEditStarted(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#updateStereotypeText()
WITHOUT_CLASSIFICATION	Only refresh the tab if the bounds propertyChange event arrives. @see org.argouml.ui.StylePanel#refresh(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	Listen for a RemoveAssociationEvent between the comment and the annotated element. When recieved delete the CommentEdge and this FigEdgeNote. @see org.argouml.uml.diagram.ui.FigEdgeModelElement#modelChanged(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigSingleLineText#removeFromDiagram()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigSingleLineText#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigSingleLineText#removeFromDiagram()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigSingleLineText#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.AbstractActionCheckBoxMenuItem#toggleValueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.AbstractActionCheckBoxMenuItem#valueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	If we're drawing to an edge then only allow if the start is a comment @see org.argouml.uml.diagram.ui.ModeCreateGraphEdge#isConnectionValid(org.tigris.gef.presentation.Fig, org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#setTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#getTarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#shouldBeEnabled(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#canEdit(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#modelChanged(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.StylePanelFig#setTargetBBox()
WITHOUT_CLASSIFICATION	Only refresh the tab if the bounds propertyChange event arrives. @see org.argouml.ui.StylePanel#refresh(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.StylePanelFig#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	If we're drawing to an edge then only allow if the start is a comment @see org.argouml.uml.diagram.ui.ModeCreateGraphEdge#isConnectionValid(org.tigris.gef.presentation.Fig, org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEditableCompartment#getUmlCollection()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEditableCompartment#getNotationType()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.AbstractActionRadioMenuItem#toggleValueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabRefresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabSave()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabCancel()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#getTabKey()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#getTabPanel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.AbstractActionRadioMenuItem#toggleValueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.Relocatable#isRelocationAllowed(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.Relocatable#relocate(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.AbstractActionCheckBoxMenuItem#toggleValueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.AbstractActionCheckBoxMenuItem#valueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#getTarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#shouldBeEnabled(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded( TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved( TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEditableCompartment#getUmlCollection()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEditableCompartment#getNotationType()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#updateListeners(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#getNotationProviderType()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportSettings#getInputSourceEncoding()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#textEdited(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#textEditStarted(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.AbstractActionCheckBoxMenuItem#toggleValueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.AbstractActionCheckBoxMenuItem#valueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.AbstractActionRadioMenuItem#toggleValueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#getNotationProviderType()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#updateListeners(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#textEdited(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#textEditStarted(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.DelayedVChangeListener#delayedVetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.PathContainer#isPathVisible()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.PathContainer#setPathVisible(boolean)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.AbstractActionRadioMenuItem#toggleValueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#canEdit(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigSingleLineText#removeFromDiagram()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#getNotationProviderType()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#updateListeners( java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#renderingChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#getNameFig()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#getNameBounds()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEditableCompartment#getUmlCollection()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEditableCompartment#getNotationType()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#canEdit(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#modelChanged(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#updateListeners(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.DelayedVChangeListener#delayedVetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#updateListeners(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	The only thing we need to deal with is updating is the condition text. @see org.argouml.uml.diagram.ui.FigEdgeModelElement#modelChanged(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getUmlActions()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getLabelName()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#isRelocationAllowed(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportSettings#isCreateDiagramsSelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportSettings#isMinimiseFigsSelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportSettingsInternal#isDiagramLayoutSelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportSettingsInternal#isDescendSelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportSettingsInternal#isChangedOnlySelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportSettings#getInputSourceEncoding()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportCommon#getImportLevel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportCommon#isCreateDiagramsChecked()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportCommon#isMinimiseFigsChecked()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportCommon#isDiagramLayoutSelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportCommon#isDescendSelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportCommon#isChangedOnlySelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.SettingsTypes.BooleanSelection#isSelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.SettingsTypes.BooleanSelection#getDefaultValue()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportSettingTypes.UniqueSelection#getDefaultSelection()
WITHOUT_CLASSIFICATION	We return a new List with the options instead of the options themself because we don't want the user to be able to change the options. @see org.argouml.uml.reveng.SettingsTypes.UniqueSelection#getOptions()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportSettingTypes.UniqueSelection#setSelection(int)
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#close()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#isCanceled()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#notifyMessage(java.lang.String, java.lang.String, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#notifyNullAction()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#updateMainTask(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#updateSubTask(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.ProgressListener#progress(org.argouml.persistence.ProgressEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#getTarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceComponent#targetChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceComponent#targetReasserted()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.ActionAddDiagram#createDiagram(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.ActionAddDiagram#isValidNamespace(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.ActionNewDiagram#createDiagram()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceComponent#targetChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceComponent#targetReasserted()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.ActionAddDiagram#createDiagram(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.ActionAddDiagram#createDiagram(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.ActionAddDiagram#isValidNamespace(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceComponent#targetChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceComponent#targetReasserted()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.PropPanel#shouldBeEnabled(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#setTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.SourcePathController#getSourcePath(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.SourcePathController#getSourcePathSettings()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.SourcePathController#setSourcePath(org.argouml.uml.ui.SourcePathTableModel)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.SourcePathController#setSourcePath( java.lang.Object, java.io.File)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.SourcePathController#deleteSourcePath(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.SourcePathController#getAllModelElementsWithSourcePath()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBox2#UMLComboBox2( UMLComboBoxModel2, Action, boolean)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.PropPanel#shouldBeEnabled(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#getTarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#shouldBeEnabled(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.DelayedVChangeListener#delayedVetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceComponent#targetChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceComponent#targetReasserted()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargettableModelView#getTargettableModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#getTarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#shouldBeEnabled(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceContainer#getProfile()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceContainer#getModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceContainer#formatElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceContainer#formatNamespace(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceContainer#formatCollection(java.util.Iterator)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildPopup(javax.swing.JPopupMenu, int)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargettableModelView#getTargettableModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#setTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#getTarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#shouldBeEnabled(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargettableModelView#getTargettableModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.ActionAddDiagram#createDiagram(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.ActionAddDiagram#createDiagram(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.ActionAddDiagram#isValidNamespace(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.state_machines.ActionNewEvent#createEvent( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.state_machines.ActionNewEvent#createEvent( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.state_machines.ActionNewEvent#createEvent(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.state_machines.ActionNewEvent#createEvent( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLRadioButtonPanel#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLRadioButtonPanel#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLRadioButtonPanel#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionAddModelElement#getChoices()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionAddModelElement#getDialogTitle()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionAddModelElement#getSelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionAddModelElement#getChoices()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionAddModelElement#getDialogTitle()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionAddModelElement#getSelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLRadioButtonPanel#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLRadioButtonPanel#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#setSelectedItem(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.Namespace#peekNamespaceElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.Namespace#popNamespaceElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.Namespace#getBaseNamespace()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.Namespace#getCommonNamespace( org.argouml.uml.util.namespace.Namespace)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.Namespace#iterator()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.Namespace#isEmpty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.Namespace#setDefaultScopeToken(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.NamespaceElement#getNamespaceElement()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.CommandLineInterface#doCommand(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getFacade()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getDiagramInterchangeModel()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getModelEventPump()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getActivityGraphsFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getActivityGraphsHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCollaborationsFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCollaborationsHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCommonBehaviorFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCommonBehaviorHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCoreFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCoreHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getDataTypesFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getDataTypesHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getExtensionMechanismsFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getExtensionMechanismsHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getModelManagementFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getModelManagementHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getStateMachinesFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getStateMachinesHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getUmlFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getUmlHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getUseCasesFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getUseCasesHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getMessageSort()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getMetaTypes()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getChangeableKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getAggregationKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getPseudostateKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getScopeKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getConcurrencyKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getDirectionKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getOrderingKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getVisibilityKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getXmiReader()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getXmiWriter(java.lang.Object, java.io.Writer, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCopyHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getNamespace()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getNamespace()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getNamespace()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getNamespace()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui. AbstractTestActionAddDiagram#getValidNamespaceClasses()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getNamespace()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#isRelocationAllowed(java.lang.Object)
WITHOUT_CLASSIFICATION	Overridden purely to keep our superclass from removing the listener that we just added. @see org.argouml.uml.diagram.ui.FigEdgeModelElement#updateListeners(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#renderingChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.StateMachinesHelper#getSource(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.UseCasesHelper#getAllUseCases(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#addListenersToModel(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#move(java.lang.Object, org.argouml.model.UmlHelper.Direction)
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#move(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#removeClassModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#addModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#addModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#addModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#addModelEventListener( java.beans.PropertyChangeListener, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#removeModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#removeModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#removeModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#removeModelEventListener( java.beans.PropertyChangeListener, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#addClassModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#addClassModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#removeClassModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ExtensionMechanismsHelper#getStereotypes(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.CoreHelper#clearStereotypes(java.lang.Object) All methods below similarly override methods in CoreHelper.
WITHOUT_CLASSIFICATION	@see org.argouml.model.CollaborationsHelper#getAllClassifierRoles(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.CommonBehaviorHelper#getSource(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ActivityGraphsHelper#findClassifierByName(java.lang.Object, java.lang.String) all methods below similarly implement methods from ActivityGraphsHelper
WITHOUT_CLASSIFICATION	Returns the value of an element's property (tagged value). This method makes sure that a Collection of values is returned if and only if the property is multivalued (upper multiplicity value greater 1). @see org.argouml.model.Facade#getValueOfTag(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.AbstractModelEventPump#removeClassModelEventListener(java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#startPumpingEvents()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#stopPumpingEvents()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#flushModelEvents()
WITHOUT_CLASSIFICATION	@see org.argouml.model.AggregationKind#getAggregate()
WITHOUT_CLASSIFICATION	@see org.argouml.model.PseudostateKind#getChoice()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ChangeableKind#getChangeable()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ScopeKind#getClassifier()
WITHOUT_CLASSIFICATION	@see org.argouml.model.AggregationKind#getComposite()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ConcurrencyKind#getConcurrent()
WITHOUT_CLASSIFICATION	@see org.argouml.model.PseudostateKind#getDeepHistory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.PseudostateKind#getFork()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ChangeableKind#getFrozen()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ConcurrencyKind#getGuarded()
WITHOUT_CLASSIFICATION	@see org.argouml.model.DirectionKind#getInParameter()
WITHOUT_CLASSIFICATION	@see org.argouml.model.PseudostateKind#getInitial()
WITHOUT_CLASSIFICATION	@see org.argouml.model.DirectionKind#getInOutParameter()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ScopeKind#getInstance()
WITHOUT_CLASSIFICATION	@see org.argouml.model.PseudostateKind#getJoin()
WITHOUT_CLASSIFICATION	@see org.argouml.model.PseudostateKind#getJunction()
WITHOUT_CLASSIFICATION	@see org.argouml.model.AggregationKind#getNone()
WITHOUT_CLASSIFICATION	@see org.argouml.model.OrderingKind#getOrdered()
WITHOUT_CLASSIFICATION	@see org.argouml.model.DirectionKind#getOutParameter()
WITHOUT_CLASSIFICATION	@see org.argouml.model.VisibilityKind#getPackage()
WITHOUT_CLASSIFICATION	@see org.argouml.model.VisibilityKind#getPrivate()
WITHOUT_CLASSIFICATION	@see org.argouml.model.VisibilityKind#getProtected()
WITHOUT_CLASSIFICATION	@see org.argouml.model.VisibilityKind#getPublic()
WITHOUT_CLASSIFICATION	@see org.argouml.model.DirectionKind#getReturnParameter()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ConcurrencyKind#getSequential()
WITHOUT_CLASSIFICATION	@see org.argouml.model.PseudostateKind#getShallowHistory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.OrderingKind#getUnordered()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ExtensionMechanismsFactory#createTaggedValue()
WITHOUT_CLASSIFICATION	@see org.argouml.model.CoreHelper#clearStereotypes(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.CopyHelper#copy(java.lang.Object, java.lang.Object) Make a copy of element in the given namespace.<p> This function is a dispatcher that calls the copyElement(Element,Namespace) function from XXXFactory.<p> This function may fail and return null for any of the following reasons: <ol> <li>No copy function is known for element's type. <li>The copy function fails or throws. </ol> @param anelement is the element to copy. @param ans the namespace @return a copy of element, or null. @throws IllegalArgumentException if element is null.
WITHOUT_CLASSIFICATION	Because we map both ends of an association we'll see many names twice LOG.log(Level.FINE, "Duplicate property name found - {0}:{1}", new Object[]{typeName, propertyName});
WITHOUT_CLASSIFICATION	Builds an initialized stereotype with no namespace. A stereotype must have a namespace so this method is unsafe. Use buildStereotype(String, Object). @param text is the name of the stereotype @return an initialized stereotype.
WITHOUT_CLASSIFICATION	Used by the copy functions. Do not call this function directly. @param source The stereotype to copy from. @param target The object becoming a copy.
WITHOUT_CLASSIFICATION	If the array hasn't been flagged to indicate otherwise swap elements the elements and add again.
WITHOUT_CLASSIFICATION	specifies valid elements for a class to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Component to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an ObjectFlowState to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an SimpleState to contain
WITHOUT_CLASSIFICATION	Extend, but only between two use cases. Remember we draw from the extension port to the base port.
WITHOUT_CLASSIFICATION	default parameter name
WITHOUT_CLASSIFICATION	build all other elements using existing buildNode
WITHOUT_CLASSIFICATION	There is a bug in the version of MDR (20050711) that we use that causes it to fail to delete aggregate elements which are single valued and where the aggregate end is listed second in the association defined in the metamodel. For the UML 1.4 metamodel, this affects a StateMachine's top StateVertex and a Transition's Guard. See issue 4948 & 5227 - tfm 20080713
WITHOUT_CLASSIFICATION	In UML 1.3, the name is the only place to store text. In UML 1.4, there is a body as well, but some tools still seem to use name.
WITHOUT_CLASSIFICATION	Although not represented in the OCL (or our Java), the English text of WFR #4 of Section 2.10.3.4 in the UML 1.4 spec is more restrictive - "[4] A Collaboration may only contain ClassifierRoles and AssociationRoles, the Generalizations and the Constraints between them, and Actions used in the Collaboration's Interactions."
WITHOUT_CLASSIFICATION	The following from the original NSUML implemenetation was attempting to implement WFR #1 from section 2.5.3.32 of the UML 1.4 spec, but if there is an owner set, no namespace is valid. The checks for this WFR, if desired, need to go in setOwner() and setType() - tfm
WITHOUT_CLASSIFICATION	or self.allConnections->forAll( r | self.namespace.allContents->excludes (r.participant) implies self.namespace.clientDependency->exists (d | d.oclIsTypeOf(Permission) and d.stereotype.name = 'access' and
WITHOUT_CLASSIFICATION	Return a list of namespaces enclosing this element. The list is ordered outer to inner. i.e. it starts at the root model.
WITHOUT_CLASSIFICATION	ScopeKind, VisibilityKind, PseudostateKind, etc Doesn't include Boolean though, despite what UML 1.4 spec says
WITHOUT_CLASSIFICATION	For a Namespace: <pre> [2] The operation allContents results in a Set containing all ModelElements contained by the Namespace. allContents : Set(ModelElement); allContents = self.contents where contents = self.ownedElement -> union(self.namespace, contents) </pre><p>
WITHOUT_CLASSIFICATION	For a Package: <pre> [3] The operation allContents results in a Set containing the ModelElements owned by or imported by the Package or one of its ancestors. allContents : Set(ModelElement); allContents = self.contents->union( self.parent.allContents->select(e | e.elementOwnership.visibility = #public or e.elementOwnership.visibility = #protected)) where the required operations are defined as : [1] The operation contents results in a Set containing the ModelElements owned by or imported by the Package. contents : Set(ModelElement) contents = self.ownedElement->union(self.importedElement) [2] The operation allImportedElements results in a Set containing the ModelElements imported by the Package or one of its parents. allImportedElements : Set(ModelElement) allImportedElements = self.importedElement->union( self.parent.oclAsType(Package).allImportedElements->select( re | re.elementImport.visibility = #public or re.elementImport.visibility = #protected)) </pre>
WITHOUT_CLASSIFICATION	Get the implementations of this operations and look for an OpaqueBehavior.
WITHOUT_CLASSIFICATION	TODO: In UML 2.0, ClassifierRole, AssociationRole, and AssociationEndRole have been replaced by the internal structure of the Collaboration
WITHOUT_CLASSIFICATION	For a Transition use indirection through source StateVertex
WITHOUT_CLASSIFICATION	TODO: unimplemented return ((Property) handle).gets
WITHOUT_CLASSIFICATION	Removed from UML 2.x and deprecated in Model API so we won't implement it throw new NotImplementedException(); we do not throw an exception because ArgoUML still uses this
WITHOUT_CLASSIFICATION	This doesn't work in UML2: both owner and property needed!
WITHOUT_CLASSIFICATION	TODO: Restructured in UML 2
WITHOUT_CLASSIFICATION	TODO: Gone in UML 2.1 It is now an InstanceSpecification with an Association as its classifier
WITHOUT_CLASSIFICATION	list.add("LiteralReal");UML 2.4 End LiteralSpecification
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Link does not exist in UML2, a link is represented just as an association
WITHOUT_CLASSIFICATION	Search for our current target language.
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	The attribute 'targetScope' of an AssociationEnd in UML1.x is no longer supported in UML2.x
WITHOUT_CLASSIFICATION	cmd.setObjects(run.getParams().get(0));
WITHOUT_CLASSIFICATION	handles all children of relationship including extend and include which are not members of core
WITHOUT_CLASSIFICATION	Although Usage & Permission are Dependencies, they need to be include separately because of the way lookup works
WITHOUT_CLASSIFICATION	The next 3 restrictions for Abstraction seem to be Argo specific not something the UML spec requires - tfm - 20070215 There is no need for these because they arn't used by buildConnection() - b00__1 {Abstraction.class, org.eclipse.uml2.uml.Class.class, org.eclipse.uml2.uml.Class.class, null, }, {Abstraction.class, org.eclipse.uml2.uml.Package.class,org.eclipse.uml2.uml.Package.class, null, }, {Abstraction.class, Component.class, Interface.class, null, },
WITHOUT_CLASSIFICATION	specifies valid elements for a Enumeration to contain
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	@see java.lang.Object#equals(java.lang.Object)
WITHOUT_CLASSIFICATION	This module will still register as enabled for UML1.4 but it won't actually do anything.
WITHOUT_CLASSIFICATION	@see java.util.Collection#remove(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.util.Collection#contains(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.lang.Object#hashCode() This will result in rather bad performance but at least we will not violate the contract together with {@link #equals(Object)}.
WITHOUT_CLASSIFICATION	@see java.util.Collection#size()
WITHOUT_CLASSIFICATION	@see java.util.Collection#isEmpty()
WITHOUT_CLASSIFICATION	@see java.util.Collection#iterator()
WITHOUT_CLASSIFICATION	@see java.util.Collection#toArray()
WITHOUT_CLASSIFICATION	@see java.util.Collection#toArray(java.lang.Object[])
WITHOUT_CLASSIFICATION	@see java.util.Collection#add(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.util.Collection#containsAll(java.util.Collection)
WITHOUT_CLASSIFICATION	@see java.util.Collection#addAll(java.util.Collection)
WITHOUT_CLASSIFICATION	@see java.util.Collection#retainAll(java.util.Collection)
WITHOUT_CLASSIFICATION	@see java.util.Collection#removeAll(java.util.Collection)
WITHOUT_CLASSIFICATION	@see java.util.Collection#clear()
WITHOUT_CLASSIFICATION	@see java.util.List#addAll(int, java.util.Collection)
WITHOUT_CLASSIFICATION	@see java.util.List#get(int)
WITHOUT_CLASSIFICATION	@see java.util.List#set(int, java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.util.List#add(int, java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.util.List#remove(int)
WITHOUT_CLASSIFICATION	@see java.util.List#indexOf(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.util.List#lastIndexOf(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.util.List#listIterator()
WITHOUT_CLASSIFICATION	@see java.util.List#listIterator(int)
WITHOUT_CLASSIFICATION	@see java.util.List#subList(int, int)
WITHOUT_CLASSIFICATION	@see java.lang.Object#hashCode() This is a rather bad hash solution but with the {@link #equals(Object)} defined as below, it is not possible to do better.
WITHOUT_CLASSIFICATION	@see java.lang.Object#hashCode()
WITHOUT_CLASSIFICATION	@see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	@see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	@see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	@see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.Orientable#setOrientation(Orientation)
WITHOUT_CLASSIFICATION	@see java.util.Observable#notifyObservers(java.lang.Object)
WITHOUT_CLASSIFICATION	@see Observable#notifyObservers()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnClass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getName()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getPrimary2()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getPrimary3()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSecondary1()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSecondary2()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSecondary3()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getControlTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSystemTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getUserTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getMenuTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSubTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getWindowTitleFont()
WITHOUT_CLASSIFICATION	@see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentHidden(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getRowCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#setValueAt(java.lang.Object, int, int)
WITHOUT_CLASSIFICATION	@see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnClass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getRowCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#setValueAt(java.lang.Object, int, int)
WITHOUT_CLASSIFICATION	@see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	Updates the button if the current row changes @see javax.swing.event.TableModelListener#tableChanged(javax.swing.event.TableModelEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	Refresh the table when a critique is enabled/disabled @see java.util.Observer#update(java.util.Observable, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnClass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getRowCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#setValueAt(java.lang.Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChild(java.lang.Object, int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getIndexOfChild( java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#removeTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getIndexOfChild(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getIndexOfChild(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#valueForPathChanged( javax.swing.tree.TreePath, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#addTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#removeTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getRoot()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChild(java.lang.Object, int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#valueForPathChanged( javax.swing.tree.TreePath, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#addTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#removeTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChild(java.lang.Object, int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getIndexOfChild(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#valueForPathChanged( javax.swing.tree.TreePath, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#addTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#removeTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChild(java.lang.Object, int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getIndexOfChild( java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#valueForPathChanged( javax.swing.tree.TreePath, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#addTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#removeTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see javax.swing.event.TreeSelectionListener#valueChanged(javax.swing.event.TreeSelectionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#getNotificationInfo()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#getNotificationInfo()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.ModeCreateFigPoly#createNewItem(java.awt.event.MouseEvent, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#getNotificationInfo()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#getNotificationInfo()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#getNotificationInfo()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#getNotificationInfo()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#getNotificationInfo()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)
WITHOUT_CLASSIFICATION	@see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#setValueAt( java.lang.Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnClass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabRefresh()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabSave()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabCancel()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabKey()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabPanel()
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.ModelFacade#getClassifier(java.lang.String)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.Type#navigateQualified( java.lang.String, tudresden.ocl.check.types.Type[])
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.Type2#navigateParameterizedQuery( java.lang.String, tudresden.ocl.check.types.Type[])
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.Type#navigateParameterized( java.lang.String, tudresden.ocl.check.types.Type[])
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.Type#conformsTo(tudresden.ocl.check.types.Type)
WITHOUT_CLASSIFICATION	@see java.lang.Object#equals(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.lang.Object#hashCode()
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.Type#navigateQualified( java.lang.String, tudresden.ocl.check.types.Type[])
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.Type2#navigateParameterizedQuery( java.lang.String, tudresden.ocl.check.types.Type[])
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.Type#navigateParameterized( java.lang.String, tudresden.ocl.check.types.Type[])
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.Type#conformsTo(tudresden.ocl.check.types.Type)
WITHOUT_CLASSIFICATION	@see java.lang.Object#equals(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.lang.Object#hashCode()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.persistence.pgml.HandlerFactory#getHandler( HandlerStack, Object, String, String, String, Attributes)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.persistence.pgml.PGMLStackParser#setAttrs( org.tigris.gef.presentation.Fig, org.xml.sax.Attributes)
WITHOUT_CLASSIFICATION	@see org.xml.sax.EntityResolver#resolveEntity(java.lang.String, java.lang.String)
WITHOUT_CLASSIFICATION	@see javax.swing.filechooser.FileFilter#getDescription()
WITHOUT_CLASSIFICATION	@see javax.swing.filechooser.FileFilter#accept(java.io.File)
WITHOUT_CLASSIFICATION	@see java.io.InputStream#read()
WITHOUT_CLASSIFICATION	@see java.io.InputStream#read(byte[], int, int)
WITHOUT_CLASSIFICATION	@see java.lang.Throwable#printStackTrace()
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.Type#hasState(java.lang.String)
WITHOUT_CLASSIFICATION	@see java.lang.Throwable#printStackTrace(java.io.PrintStream)
WITHOUT_CLASSIFICATION	@see java.lang.Throwable#printStackTrace(java.io.PrintWriter)
WITHOUT_CLASSIFICATION	@see ProfileModelLoader#loadModel(ProfileReference)
WITHOUT_CLASSIFICATION	@see java.io.FileFilter#accept(java.io.File)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAAdditiveExpressionTail(tudresden.ocl.parser.node.AAdditiveExpressionTail)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAMultiplicativeExpressionTail(tudresden.ocl.parser.node.AMultiplicativeExpressionTail)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAUnaryUnaryExpression(tudresden.ocl.parser.node.AUnaryUnaryExpression)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAPostfixExpressionTail(tudresden.ocl.parser.node.APostfixExpressionTail)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAFeaturePrimaryExpression(tudresden.ocl.parser.node.AFeaturePrimaryExpression)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#outAEmptyFeatureCallParameters(tudresden.ocl.parser.node.AEmptyFeatureCallParameters)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAFeatureCallParameters(tudresden.ocl.parser.node.AFeatureCallParameters)
WITHOUT_CLASSIFICATION	@param node @see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAStandardDeclarator(tudresden.ocl.parser.node.AStandardDeclarator)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseALetExpression(tudresden.ocl.parser.node.ALetExpression)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#outAStringLiteral(tudresden.ocl.parser.node.AStringLiteral)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#outARealLiteral(tudresden.ocl.parser.node.ARealLiteral)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#outAIntegerLiteral(tudresden.ocl.parser.node.AIntegerLiteral)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#outABooleanLiteral(tudresden.ocl.parser.node.ABooleanLiteral)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#outAEnumLiteral(tudresden.ocl.parser.node.AEnumLiteral)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseALiteralCollection(tudresden.ocl.parser.node.ALiteralCollection)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAExpressionListOrRange(tudresden.ocl.parser.node.AExpressionListOrRange)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAListExpressionListOrRangeTail(tudresden.ocl.parser.node.AListExpressionListOrRangeTail)
WITHOUT_CLASSIFICATION	@see java.awt.Component#getPreferredSize()
WITHOUT_CLASSIFICATION	@see java.awt.Component#getSize()
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowActivated(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowClosed(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowDeactivated(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowDeiconified(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowIconified(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowClosing(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabCancel()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabKey()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabPanel()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabRefresh()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabSave()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabCancel()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabPanel()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.FocusListener#focusGained(java.awt.event.FocusEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyPressed(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyReleased(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	Tests if enter is pressed in the _bbodField so we need to set the target bounds. @see java.awt.event.KeyListener#keyTyped(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.IStatusBar#showStatus(java.lang.String)
WITHOUT_CLASSIFICATION	Override paint so we can set a flag the first time we're called and notify any waiting threads that the splash screen has been painted. @see java.awt.Component#paint(java.awt.Graphics)
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getPrimary2()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getPrimary3()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSecondary1()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSecondary2()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSecondary3()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getControlTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSystemTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getUserTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getMenuTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSubTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getWindowTitleFont()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractAction.AbstractAction()
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractAction.AbstractAction(java.lang.String)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractAction.AbstractAction( java.lang.String, javax.swing.Icon)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyPressed(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyReleased(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyTyped(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getName()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getPrimary2()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getPrimary3()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSecondary1()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSecondary2()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSecondary3()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getControlTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSystemTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getUserTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getMenuTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSubTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getWindowTitleFont()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.Dialog#nameButtons()
WITHOUT_CLASSIFICATION	@see java.awt.Component#getMinimumSize()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.Orientable#setOrientation(org.tigris.swidgets.Orientation)
WITHOUT_CLASSIFICATION	@see TargetListener#targetAdded(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetRemoved(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.Component#getLocale()
WITHOUT_CLASSIFICATION	@see java.awt.Window#dispose()
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowClosing(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange( java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowClosed(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabRefresh()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabRefresh()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabSave()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabCancel()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabKey()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabPanel()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#setValueAt( java.lang.Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnClass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowDeactivated(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.ListCellRenderer#getListCellRendererComponent( javax.swing.JList, java.lang.Object, int, boolean, boolean)
WITHOUT_CLASSIFICATION	@see javax.swing.JComponent#paintComponent(java.awt.Graphics)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowOpened(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowClosing(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	Catches a mouseevent and calls mySingleClick and myDoubleClick if a tab is clicked which is selected. @see java.awt.event.MouseListener#mouseClicked(MouseEvent)
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabRefresh()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabSave()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabCancel()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabKey()
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getRoot()
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChild(java.lang.Object, int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getIndexOfChild(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#valueForPathChanged(javax.swing.tree.TreePath, java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.Dialog#nameButtons()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.Component#getMinimumSize() sets minimum size to 120,100
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.MenuListener#menuSelected(javax.swing.event.MenuEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.MenuListener#menuDeselected(javax.swing.event.MenuEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.MenuListener#menuCanceled(javax.swing.event.MenuEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.Cmd#undoIt()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabKey()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabPanel()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnClass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	Compares obj1 and obj2 sorting by user object type, then name. Diagrams are sorted first, then packages, then other types. sorts by name within type groups. Nulls are sorted first for names. @see java.util.Comparator#compare(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.event.TreeWillExpandListener#treeWillCollapse(javax.swing .event.TreeExpansionEvent)
WITHOUT_CLASSIFICATION	Updates stereotype setting, adds all children per treemodel 'build on demand' design. @see javax.swing.event.TreeWillExpandListener#treeWillExpand(javax.swing .event.TreeExpansionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.TreeExpansionListener#treeCollapsed( javax.swing.event.TreeExpansionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.TreeExpansionListener#treeExpanded( javax.swing.event.TreeExpansionEvent) Updates the selection state.
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeNode#isLeaf()
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Do string compare of names of UML objects. Comparison is case insensitive using a primary strength collator in the user's locale. @see java.util.Comparator#compare(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DragSourceListener#dragDropEnd(java.awt.dnd.DragSourceDropEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DragSourceListener#dragEnter(java.awt.dnd.DragSourceDragEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DragSourceListener#dragExit(java.awt.dnd.DragSourceEvent)
WITHOUT_CLASSIFICATION	This is not the correct location to set the cursor. The commented out code illustrates the calculation of coordinates. @see java.awt.dnd.DragSourceListener#dragOver(java.awt.dnd.DragSourceDragEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DragSourceListener#dropActionChanged(java.awt.dnd.DragSourceDragEvent)
WITHOUT_CLASSIFICATION	Ok, we've been told to scroll because the mouse cursor is in our scroll zone. @see java.awt.dnd.Autoscroll#autoscroll(java.awt.Point)
WITHOUT_CLASSIFICATION	Calculate the insets for the JTREE, not the viewport the tree is in. This makes it a bit messy. @see java.awt.dnd.Autoscroll#getAutoscrollInsets()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DropTargetListener#dragEnter(java.awt.dnd.DropTargetDragEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DropTargetListener#dragExit(java.awt.dnd.DropTargetEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DropTargetListener#dropActionChanged(java.awt.dnd.DropTargetDragEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationListener#handleNotification(javax.management.Notification, java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.Action#getValue(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.util.ChildGenerator#gen(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getRowCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnClass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddNode(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addNodeRelatedEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphListener#nodeAdded(org.tigris.gef.graph.GraphEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphListener#edgeAdded(org.tigris.gef.graph.GraphEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphListener#nodeRemoved(org.tigris.gef.graph.GraphEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphListener#edgeRemoved(org.tigris.gef.graph.GraphEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphListener#graphChanged(org.tigris.gef.graph.GraphEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.Diagram#initialize(java.lang.Object)
WITHOUT_CLASSIFICATION	Override setBounds to keep shapes looking right. The classifier and state Figs are nicely centered vertically, and stretched out over the full width, to allow easy selection with the mouse. The Fig can only be shrunk to half its original size - so that it is not reducible to a few pixels only. @see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int) Override setBounds to keep shapes looking right.
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	Return all ports on node or edge. @see org.tigris.gef.graph.GraphModel#getPorts(java.lang.Object)
WITHOUT_CLASSIFICATION	Return the node or edge that owns the given port. @see org.tigris.gef.graph.BaseGraphModel#getOwner(java.lang.Object)
WITHOUT_CLASSIFICATION	Return all edges going to given port. @see org.tigris.gef.graph.GraphModel#getInEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	Return all edges going from given port. @see org.tigris.gef.graph.GraphModel#getOutEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	Return true if the given object is a valid node in this graph. @see org.tigris.gef.graph.MutableGraphModel#canAddNode(java.lang.Object)
WITHOUT_CLASSIFICATION	Return true if the given object is a valid edge in this graph. @see org.tigris.gef.graph.MutableGraphModel#canAddEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	Add the given node to the graph, if valid. @see org.tigris.gef.graph.MutableGraphModel#addNode(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addNodeRelatedEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	Return true if the two given ports can be connected by a kind of edge to be determined by the ports. @see org.tigris.gef.graph.MutableGraphModel#canConnect(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphFactory#makeNode()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigGroup#addFig(Fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#calcBounds()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigGroup#addFig(Fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphNodeRenderer#getFigNodeFor( org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer, java.lang.Object, java.util.Map)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphModel#getPorts(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.BaseGraphModel#getOwner(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphModel#getInEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphModel#getOutEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddNode(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addNode(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphEdgeRenderer#getFigEdgeFor( org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer, java.lang.Object, java.util.Map)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	Override setBounds to keep shapes looking right. @see org.tigris.gef.presentation.Fig#setBounds(int, int, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setEnclosingFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setEnclosingFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setEnclosingFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.util.Predicate#predicate(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphModel#getPorts(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.BaseGraphModel#getOwner(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphModel#getInEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphModel#getOutEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddNode(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addNodeRelatedEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canConnect(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#connect(java.lang.Object, java.lang.Object, java.lang.Class)
WITHOUT_CLASSIFICATION	@see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.util.Predicate#predicate(java.lang.Object)
WITHOUT_CLASSIFICATION	Overridden to make it possible to include a stateVertex in a composite state. @see org.tigris.gef.presentation.Fig#setEnclosingFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getUseTrapRect()
WITHOUT_CLASSIFICATION	Override setBounds to keep shapes looking right. @see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getUseTrapRect()
WITHOUT_CLASSIFICATION	Override setBounds to keep shapes looking right. @see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setBounds(int, int, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	This function only sets the color of the divider line (since that is the only visible part), and can be used to make the divider line invisible for the top region in a composite state. @see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setBounds(int, int, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphModel#getPorts(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.BaseGraphModel#getOwner(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphModel#getOutEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddNode(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addNode(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getUseTrapRect()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyReleased(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyTyped(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setEnclosingFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getUseTrapRect()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setBounds(int, int, int, int)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigText#setTextFilled(boolean)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.ClipboardOwner#lostOwnership( java.awt.datatransfer.Clipboard, java.awt.datatransfer.Transferable)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.Transferable#getTransferDataFlavors()
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.Transferable#isDataFlavorSupported( java.awt.datatransfer.DataFlavor)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.Transferable#getTransferData( java.awt.datatransfer.DataFlavor)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.Transferable#getTransferDataFlavors()
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.Transferable#isDataFlavorSupported( java.awt.datatransfer.DataFlavor)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.Transferable#getTransferData( java.awt.datatransfer.DataFlavor)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#classNameAndBounds()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigNode#hitPort(int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigGroup#hitFig(java.awt.Rectangle)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#isSelectable()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigNode#getPortFig(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigEdge#setFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.SelectionButtons#paintButtons(Graphics)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DropTargetListener#dragExit( java.awt.dnd.DropTargetEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DropTargetListener#drop( java.awt.dnd.DropTargetDropEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#translate(int, int)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	Overridden to set Argo-specific RenderingHints to determine whether or not antialiasing should be turned on. @see org.tigris.gef.base.Editor#paint(java.awt.Graphics)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseMotionListener#mouseMoved(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	Overridden to set Argo-specific RenderingHints to determine whether or not antialiasing should be turned on. @see org.tigris.gef.base.Editor#paint(java.awt.Graphics)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#getNotificationInfo()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.ModeCreatePolyEdge#mouseReleased(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	Updates the modelelement container if the fig is moved in or out another fig. If this fig doesn't have an enclosing fig anymore, the namespace of the diagram will be the owning modelelement. If this fig is moved inside another FigNodeModelElement the owner of that fignodemodelelement will be the owning modelelement. @see org.tigris.gef.presentation.FigNode#setEnclosingFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getEnclosedFigs()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyPressed(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyReleased(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyTyped(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#classNameAndBounds()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#calcBounds()
WITHOUT_CLASSIFICATION	Necessary since GEF contains some errors regarding the hit subject. @see org.tigris.gef.presentation.Fig#hit(Rectangle)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#removeFromDiagram()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigNode#isDragConnectable()
WITHOUT_CLASSIFICATION	Need to 'arm' the rerouting capability with mouseDragged(). <p> Don't arm if the edtior's current mode is a figedge create mode, because once a new edge has been created it is not deselected, therefore on the next create an unwanted reroute is performed. @see java.awt.event.MouseMotionListener#mouseDragged(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	Override setBounds to keep shapes looking right. @see org.tigris.gef.presentation.Fig#setBounds(int, int, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.Command#execute()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphFactory#makeGraphModel()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphFactory#makeEdge()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphFactory#makeNode()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.SelectionButtons#paint(java.awt.Graphics)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.SelectionButtons#paintButtons(Graphics)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.SelectionButtons#getNewNode(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.Selection#dragHandle(int, int, int, int, org.tigris.gef.presentation.Handle)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	Makes sure that the edges stick to the outline of the fig. @see org.tigris.gef.presentation.Fig#getGravityPoints()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#damage()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	If the user double clicks on any part of this FigNode, pass it down to one of the internal Figs. This allows the user to initiate direct text editing. @see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyPressed(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyReleased(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyTyped(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLayer(org.tigris.gef.base.Layer)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#hit(java.awt.Rectangle)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#removeFromDiagram()
WITHOUT_CLASSIFICATION	Makes sure that the edges stick to the outline of the fig. @see org.tigris.gef.presentation.Fig#getGravityPoints()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#paint(java.awt.Graphics)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event. ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event. ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event. ActionEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.Dialog#nameButtons()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnClass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getRowCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#setValueAt( java.lang.Object, int, int)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.ListModel#getElementAt(int)
WITHOUT_CLASSIFICATION	@see javax.swing.ListModel#getSize()
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxModel#setSelectedItem(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxModel#getSelectedItem()
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireContentsChanged( Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireIntervalAdded( Object, int, int)
WITHOUT_CLASSIFICATION	@see TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	The property value has changed so rebuild our view. @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetAdded(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetRemoved(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked( java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased( java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.CaretListener#caretUpdate(javax.swing.event.CaretEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.ListCellRenderer#getListCellRendererComponent( javax.swing.JList, java.lang.Object, int, boolean, boolean)
WITHOUT_CLASSIFICATION	@see javax.swing.text.Document#getDefaultRootElement()
WITHOUT_CLASSIFICATION	@see javax.swing.text.Document#getLength()
WITHOUT_CLASSIFICATION	@see javax.swing.text.Document#render(Runnable r)
WITHOUT_CLASSIFICATION	@see javax.swing.text.Document#getText(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.ListCellRenderer#getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getRowCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#setValueAt(java.lang.Object, int, int)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans. PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.beans.VetoableChangeListener#vetoableChange(java.beans. PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.DelayedVChangeListener#delayedVetoableChange(java. beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireIntervalAdded( Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireIntervalRemoved( Object, int, int)
WITHOUT_CLASSIFICATION	@see AbstractAction#actionPerformed(ActionEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.Orientable#setOrientation(org.tigris.swidgets.Orientation)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.DefaultListModel#contains(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.DefaultListModel#addElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see TargetListener#targetAdded(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetRemoved(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireContentsChanged( Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireIntervalAdded( Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireIntervalRemoved( Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeCellRenderer#getTreeCellRendererComponent( javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)
WITHOUT_CLASSIFICATION	@see java.awt.event.FocusListener#focusLost(java.awt.event.FocusEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.CaretListener#caretUpdate(javax.swing.event.CaretEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.FocusListener#focusGained(java.awt.event.FocusEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	@see javax.swing.filechooser.FileFilter#accept(java.io.File)
WITHOUT_CLASSIFICATION	@see javax.swing.filechooser.FileFilter#getDescription()
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange( java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.util.Enumeration#hasMoreElements()
WITHOUT_CLASSIFICATION	@see java.util.Enumeration#nextElement()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see PropertyChangeListener#propertyChange(PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#tearDown()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see TestCase#tearDown()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	Here we are actually violating the test independance since we keep the DetailsPane from test to test. The reason to do this is to make it possible to run the tests with less memory requirements. Hopefully someone might eventually fix the DetailsPane so that it is garbage collected properly and this is no longer needed. @see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#runTest()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see TargetListener#targetAdded(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetRemoved(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetAdded(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetRemoved(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#tearDown()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see AbstractTestActionAddDiagram#getValidNamespaceClasses()
WITHOUT_CLASSIFICATION	@see AbstractTestActionAddDiagram#getValidNamespaceClasses()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see AbstractTestActionAddDiagram#getValidNamespaceClasses()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#tearDown()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#tearDown()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#tearDown()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addNode(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	This method is overridden in order to ignore change of the y coordinate during dragging. @see org.tigris.gef.presentation.FigNode#superTranslate(int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphFactory#makeNode()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphNodeRenderer#getFigNodeFor( org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer, java.lang.Object, java.util.Map)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphEdgeRenderer#getFigEdgeFor( org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer, java.lang.Object, java.util.Map)
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	Although not generally true for GEF, for Argo we know that the layer is a LayerPerspective which knows the associated diagram
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	end class StartCritics
WITHOUT_CLASSIFICATION	initialized in static initializer block below
WITHOUT_CLASSIFICATION	Needs to happen after initialization is done & modules loaded
WITHOUT_CLASSIFICATION	create an anonymous class as a kind of adaptor for the cognitive System to provide proper translation/i18n.
WITHOUT_CLASSIFICATION	The reason the gui is initialized before the commands are run is that some of the commands will use the projectbrowser.
WITHOUT_CLASSIFICATION	Initialize the module loader. At least the plug-ins that provide profiles need to be initialized before the project is loaded, because some of these profile may have been set as default profiles and need to be applied to the project as soon as it has been created or loaded. The first instance of a Project is needed during the GUI initialization.
WITHOUT_CLASSIFICATION	The string <code>log4j.configuration</code> is the same string found in {@link org.apache.log4j.Configuration.DEFAULT_CONFIGURATION_FILE} but if we use the reference, then log4j configures itself and clears the system property and we never know if it was set. If it is set, then we let the static initializer in {@link Argo} perform the initialization.
WITHOUT_CLASSIFICATION	A subclass of JPanel that can act as a tab in the DetailsPane or MultiEditorPane. Added functionality:<p> Spawning: When the tab is double-clicked, this JPanel will generate a separate window of the same size and with the same contents. This is almost like "tearing off" a tab.<p> TODO: Spawning of windows disabled in spawn()<p> Title: This JPanel keeps track of its own title.<p> Icon: This JPanel keeps track of its own icon; i.e. an arrow pointing to the panel that it gives details of.<p> Orientation: This JPanel is Orientable.<p> Cloning: This JPanel may be cloned.<p> This class used to be named TabSpawnable. Renamed since it is not a Tab, but a Panel, and being spawnable is not any more its main purpose.
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	Notation events are likely to cause GEF/Swing operations, so we dispatch them on the Swing event thread as a convenience so that the receiving notationChanged() methods don't need to deal with it
WITHOUT_CLASSIFICATION	@param item the todo item @param reason the reason TODO: Use it! @return <code>true</code> if the argument was a component of this list; <code>false</code> otherwise @throws UnresolvableException unable to resolve
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	issue resolution
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	static accessors
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#isLeaf(java.lang.Object)
WITHOUT_CLASSIFICATION	This needs to iterate to fill entire output raster if implemented return image.copyData(outRaster);
WITHOUT_CLASSIFICATION	Catch all exceptions and errors, however severe
WITHOUT_CLASSIFICATION	Notify the user that the modules in the list that are selected but not enabled were not possible to enable and that are not selected that we cannot disable. Currently we just log this. TODO: We could eventually pop up some warning window.
WITHOUT_CLASSIFICATION	if we have only one return value and without type, the return param string is ": ,", we remove it
WITHOUT_CLASSIFICATION	If the script of the Action is empty, (or only specifies arguments and no method name) then we generate a string based on a different model element:
WITHOUT_CLASSIFICATION	MMessage
WITHOUT_CLASSIFICATION	MMessage
WITHOUT_CLASSIFICATION	MMessage
WITHOUT_CLASSIFICATION	MMessage
WITHOUT_CLASSIFICATION	(MMessage)
WITHOUT_CLASSIFICATION	(MMessage)
WITHOUT_CLASSIFICATION	(MMessage)
WITHOUT_CLASSIFICATION	no state with the given name is found, so we have to reject the complete user's input
WITHOUT_CLASSIFICATION	Now let's check if the new line is already present in the old list of internal transitions; if it is, then mark the old one to be retained (i.e. do not create a new one), if it isn't, continue with parsing:
WITHOUT_CLASSIFICATION	case 1
WITHOUT_CLASSIFICATION	check for more literals (';' separated):
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.Type#hasState(java.lang.String)
WITHOUT_CLASSIFICATION	if save did not raise an exception and name+"#" exists move name+"#" to name+"~" this is the correct backup file
WITHOUT_CLASSIFICATION	frank: in case of exception delete name and mv name+"#" back to name if name+"#" exists this is the "rollback" to old file
WITHOUT_CLASSIFICATION	Skip the 2 lines <?xml version="1.0" encoding="UTF-8" ?> <!DOCTYPE pgml SYSTEM "pgml.dtd">
WITHOUT_CLASSIFICATION	Search all attributes found to those expected. If any don't match then turn off the found flag so that we search for the next matching tag.
WITHOUT_CLASSIFICATION	Now we're into processing each specific path item strategy. At the moment, we only know PathItemPlacement
WITHOUT_CLASSIFICATION	for compatibility with older format
WITHOUT_CLASSIFICATION	If we're about to upgrade the file lets take an archive of it first.
WITHOUT_CLASSIFICATION	No more we can do here on failure
WITHOUT_CLASSIFICATION	Write any left over bytes in the input buffer (perhaps from a partially decoded character)
WITHOUT_CLASSIFICATION	NOP
WITHOUT_CLASSIFICATION	To persist to and from zargo (zipped file) storage containing seperate xmi, argo, plgml and todo zip entries. @author Bob Tarling TODO: Review use of this against ZargoFilePersister - Bob
WITHOUT_CLASSIFICATION	Add the path of the model to the search path, so we can read dependent models
WITHOUT_CLASSIFICATION	we only need to add the classloader once and if and only if there is at least a profile in the JAR
WITHOUT_CLASSIFICATION	Testing: does not fire.
WITHOUT_CLASSIFICATION	Testing: does not fire.
WITHOUT_CLASSIFICATION	Testing: does not fire.
WITHOUT_CLASSIFICATION	Testing: does not fire.
WITHOUT_CLASSIFICATION	Testing: does not fire.
WITHOUT_CLASSIFICATION	Testing: does not fire.
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAFeatureCall(tudresden.ocl.parser.node.AFeatureCall)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.ModelInterpreter#invokeFeature(java.util.Map, java.lang.Object, java.lang.String, java.lang.String, java.lang.Object[])
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.ModelInterpreter#invokeFeature(java.util.Map, java.lang.Object, java.lang.String, java.lang.String, java.lang.Object[])
WITHOUT_CLASSIFICATION	TODO: isStatic in UML 2.x
WITHOUT_CLASSIFICATION	Additional Operations in 4.5.3.8
WITHOUT_CLASSIFICATION	4.5.2.13 Constraint
WITHOUT_CLASSIFICATION	4.5.2.24 Generalization
WITHOUT_CLASSIFICATION	4.5.2.28 Namespace
WITHOUT_CLASSIFICATION	Do not set buildingModel = false here, otherwise the action for selection is performed.
WITHOUT_CLASSIFICATION	prpTodo = createProperty("label.todo-pane", positions, TabToDo.class); prpProperties = createProperty("label.properties-pane", positions, TabProps.class); prpDocumentation = createProperty("label.documentation-pane", positions, TabDocumentation.class); prpStyle = createProperty("label.style-pane", positions, TabStyle.class); prpSource = createProperty("label.source-pane", positions, TabSrc.class); prpConstraints = createProperty("label.constraints-pane", positions, TabConstraints.class); prpTaggedValues = createProperty("label.tagged-values-pane", positions, TabTaggedValues.class); Property[] propertyList = new Property[] { prpTodo, prpProperties, prpDocumentation, prpStyle, prpSource, prpConstraints, prpTaggedValues, }; Arrays.sort(propertyList); top.add(new JScrollPane(new PropertyTable( propertyList, paneColumnHeader, positionColumnHeader)), BorderLayout.CENTER);
WITHOUT_CLASSIFICATION	Parse the boundary box text. Null is returned if it is empty or invalid, which causes no change. Otherwise we tell GEF we are making a change, make the change and tell GEF we've finished.
WITHOUT_CLASSIFICATION	TODO: Add double click listener
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getPrimary1()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getPrimary1()
WITHOUT_CLASSIFICATION	if the current shortcut has been set but is void, then the current shortcut is not set --> then the default value does not change
WITHOUT_CLASSIFICATION	Only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	Only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	Only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	Only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	Only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	Only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	2. the profile configuration, holding noneditable applied profiles
WITHOUT_CLASSIFICATION	the text will be set later
WITHOUT_CLASSIFICATION	private static final StereotypeView[] stereotypeViewMap; static { stereotypeViewMap = new StereotypeView[3]; StereotypeView. stereotypeViewMap[DiagramAppearance.STEREOTYPE_VIEW_TEXTUAL] = StereotypeView.TEXTUAL; stereotypeViewMap[DiagramAppearance.STEREOTYPE_VIEW_BIG_ICON] = StereotypeView.BIG_ICON; stereotypeViewMap[DiagramAppearance.STEREOTYPE_VIEW_SMALL_ICON] = StereotypeView.SMALL_ICON; }
WITHOUT_CLASSIFICATION	This class represents all Diagrams within ArgoUML. It is based upon the GEF Diagram.<p> It adds a namespace, and the capability to delete itself when its namespace is deleted. <p> TODO: MVW: I am not sure of the following:<p> The "namespace" of the diagram is e.g. used when creating new elements that are shown on the diagram; they will have their namespace set according this. It is NOT necessarily equal to the "owner". <p> MVW: I doubt all following: The "namespace" of the diagram is e.g. used to register a listener to the UML model, to be notified if this element is removed; which will imply that this diagram has to be deleted, too. <p> Hence the namespace of e.g. a collaboration diagram should be the represented classifier or, in case of a represented operation, the classifier that owns this operation. And the namespace of the statechart diagram should be the namespace of its statemachine.
WITHOUT_CLASSIFICATION	The fix
WITHOUT_CLASSIFICATION	A binary association is not a node so reject.
WITHOUT_CLASSIFICATION	Make all the parts match the main fig
WITHOUT_CLASSIFICATION	and the stereotypes of its features
WITHOUT_CLASSIFICATION	stereotype fig covers the name fig:
WITHOUT_CLASSIFICATION	Notation settings are different since, we know that, at a minimum, the isShowPath() setting can change because with implement PathContainer, so we make sure that we have a private copy of the notation settings.
WITHOUT_CLASSIFICATION	null elements represent new constraints, which will be added to the target the first time any actual editing takes place. This is done to ensure syntactical correctness of constraints stored with the target.
WITHOUT_CLASSIFICATION	Mutators hold write lock & will deadlock if use is not thread safe
WITHOUT_CLASSIFICATION	test with a class and class diagram
WITHOUT_CLASSIFICATION	Constructor for a {@link FigClass} during file load.<p> Parent {@link org.argouml.uml.diagram.ui.FigNodeModelElement} will have created the main box {@link #getBigPort()} and its name {@link #getNameFig()} and stereotype (@link #getStereotypeFig()}. This constructor creates a box for the attributes and operations.<p> The properties of all these graphic elements are adjusted appropriately. The main boxes are all filled and have outlines. TODO: which is wrong, since the bigPort is filled, too. @param element model element to be represented by this fig. @param bounds rectangle describing bounds @param settings rendering settings
WITHOUT_CLASSIFICATION	When this is called from PGMLStackParser.attachEdges, we finished the initialization of owning pseudo element (CommentEdge)
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	Override superclass to do nothing. Fill property cannot be changed.
WITHOUT_CLASSIFICATION	Override superclass to do nothing. Fill property cannot be changed.
WITHOUT_CLASSIFICATION	A Fig designed to be the child of some FigNode or FigEdge to display the stereotypes of the model element represented by the parent Fig. Currently, multiple stereotypes are shown stacked one on top of the other, each enclosed by guillemets.<p> The minimum width of this fig is the largest minimum width of its child figs. The minimum height of this fig is the total minimum height of its child figs.<p> The owner of this Fig is the UML element that is extended with the stereotypes. We are listening to changes to the model: addition and removal of stereotypes. <p> This fig supports showing one keyword as the first "stereotype" in the list. <p> There is no way to remove a keyword fig, once added. <p> TODO: Allow for UML2 style display where all stereotypes are displayed in the same guillemet pair and are delimited by commas. The style should be changeable by calling getOrientation(Orientation). The swidget Orientation class can be used for this. @author Bob Tarling
WITHOUT_CLASSIFICATION	The source of an association end should not be the classifier. If it is the user has drawn the wrong way round so we swap here.
WITHOUT_CLASSIFICATION	We want to maintain a minimum width for the fig. Also, add the border dimensions to the minimum space required for its contents:
WITHOUT_CLASSIFICATION	Make sure we don't try to set things smaller than the minimum
WITHOUT_CLASSIFICATION	If requested height equals needed height then do nothing; it fits exactly.
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, "Slope = " + theta / Math.PI + "PI " + theta / Math.PI 180.0);
WITHOUT_CLASSIFICATION	Test-case for the above code: Draw a class. Create a stereotype for it by clicking on the prop-panel tool, and name it. Remove the class from the diagram. Drag the class from the explorer on the diagram. Select the stereotype in the explorer, and change its name in the prop-panel to something longer. The longer name does not make the class Fig wider unless the above code is added.
WITHOUT_CLASSIFICATION	If we have no source and dest connector then we assume this is load of an old UML1.4 diagram from before this data was saved in PGML. For UML1.4 we can assume the source is first connection and destination is last connection stored in repository for this association.
WITHOUT_CLASSIFICATION	Note that "multiplicity" is what is the notation is listening for in UML1.4 "uppervalue" are listened to in UML2. It is not currently why it is not required to register for "lowerValue" also.
WITHOUT_CLASSIFICATION	Some subclasses will try to use this
WITHOUT_CLASSIFICATION	FigClass calls setBoundsImpl before we set the stereotypeFigProfileIcon
WITHOUT_CLASSIFICATION	TODO: Use per-project undo manager, not global
WITHOUT_CLASSIFICATION	TODO: Use per-project undo manager, not global
WITHOUT_CLASSIFICATION	TODO: Use per-project undo manager, not global
WITHOUT_CLASSIFICATION	Perhaps something like the following would workd. If not, then traverse up the component hierarchy to a MultEditorPane Rectangle drawingArea = Globals.curEditor().getJComponent().getVisibleRect();
WITHOUT_CLASSIFICATION	Default implementation is to do nothing
WITHOUT_CLASSIFICATION	/ Methods that implement the GraphModel itself /
WITHOUT_CLASSIFICATION	/ Methods that implement the VetoableChangeListener interface /
WITHOUT_CLASSIFICATION	Only interested in the "ownedElement" property. Either something has been added to the namespace for this model, or removed. In the latter case the "something" will be in the old value of the property, which is the collection of owned elements, and the new value will be the element import describing the model element and the model from which it was removed
WITHOUT_CLASSIFICATION	The figs for the two end nodes
WITHOUT_CLASSIFICATION	The figs for the two end nodes
WITHOUT_CLASSIFICATION	Private utility routine to work out the (positive) x coordinate of a point on an oval, given the radii and y coordinate.<p> TODO: Use this to calculate the separator lines! @param a radius in X direction @param b radius in Y direction @param y Y coordinate @return Positive X coordinate for the given Y coordinate
WITHOUT_CLASSIFICATION	the responsibility of determining if the given target is a correct one for this tab has been moved from the DetailsPane to the member tabs of the details pane. Reason for this is that the details pane is configurable and cannot know what's the correct target for some tab.
WITHOUT_CLASSIFICATION	If the diagram is empty, GEF won't write anything, leaving us with an empty (and invalid) file. Handle this case ourselves to prevent this from happening.
WITHOUT_CLASSIFICATION	NOTE: GEF's GIF writer uses Jeff Poskanzer's GIF encoder, but that saves a copy of the entire image in an internal buffer before starting work, defeating the whole purpose of our incremental rendering.
WITHOUT_CLASSIFICATION	Expressions are DataTypes, not independent model elements be careful not to reuse them
WITHOUT_CLASSIFICATION	TODO: The next text was copied - to adapt. Sets the target. If the old target is an UML Element, it also removes the model from the element listener list of the target. If the new target is an UML Element, the model is added as element listener to the new target. <p> This function is called when the user changes the target. Hence, this shall not result in any UML model changes.<p> This function looks a lot like the one in UMLComboBoxModel2. <p> As a possible future extension, we could allow listening to other model elements. @param theNewTarget the new target
WITHOUT_CLASSIFICATION	fire all of the status events
WITHOUT_CLASSIFICATION	fire all of the profile events
WITHOUT_CLASSIFICATION	verify isRelevant returns true
WITHOUT_CLASSIFICATION	DesignGoalsCM checks if the critic isRelevantToGoals of the Designer this value is always true for the Critic base class so DesignerGoal should always return true in this condition
WITHOUT_CLASSIFICATION	update the priority of the critic to be the same priority as the decision
WITHOUT_CLASSIFICATION	check that the model was initialized with one goal
WITHOUT_CLASSIFICATION	number of goals should now be 0
WITHOUT_CLASSIFICATION	Arbitrary settings - not used used for testing
WITHOUT_CLASSIFICATION	FigAssociationRole figassociationrole = new FigAssociationRole();
WITHOUT_CLASSIFICATION	initialize basic parameters that are different from Decision.UNSPEC
WITHOUT_CLASSIFICATION	verify parameters were initialized correctly by the constructor
WITHOUT_CLASSIFICATION	verify the name property was correctly updated
WITHOUT_CLASSIFICATION	following the update the priority should be equivalent to Decision.UNSPEC
WITHOUT_CLASSIFICATION	test that the category and description are correct
WITHOUT_CLASSIFICATION	update the values
WITHOUT_CLASSIFICATION	verify SnoozeOrder starts off not snoozed
WITHOUT_CLASSIFICATION	snooze and verify its been enabled
WITHOUT_CLASSIFICATION	snooze and verify its been enabled
WITHOUT_CLASSIFICATION	test with a class and class diagram
WITHOUT_CLASSIFICATION	test with a class and class diagram
WITHOUT_CLASSIFICATION	test with a class and class diagram
WITHOUT_CLASSIFICATION	pce = (PropertyChangeEvent) rxdEvent.getSource(); assertTrue("Wrong event name", pce.getPropertyName().equals( DiagramAppearance.KEY_DEFAULT_SHADOW_WIDTH.getKey())); String value = (String) pce.getOldValue(); int i = Integer.parseInt(value); assertTrue("Wrong old event value", i == 4); assertTrue("Wrong new event value", ((String) pce.getNewValue()).equals("2"));
WITHOUT_CLASSIFICATION	Change things
WITHOUT_CLASSIFICATION	Assert that the copy isn't modified when the source changes
WITHOUT_CLASSIFICATION	Assert that the copy isn't modified when the source changes
WITHOUT_CLASSIFICATION	Assert that the copy isn't modified when the source changes
WITHOUT_CLASSIFICATION	Create a different client to bind to the same supplier
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	This comment was included in a previous version (before 1/2005) of the test which had this assertion commented out: ------ Interaction should not be removed when removing ClassifierRole... maybe if the last message is removed from the interaction but even then it's doubtfull since it will probably lead to backward compatibility problems in save formats. ------ but my reading of the UML 1.4 specification is that an Interaction without at least one message is definitely illegal, so MDR is doing the right thing by removing it in this case where we only have a single message, which then gets deleted. - tfm
WITHOUT_CLASSIFICATION	Get a list of UML metaclass names from the XMI document. <p> Though some of the DOM methods such as getAttributes may return null values under other conditions, in the context of this test and assuming a valid XMI file none should occur. <p> Hence there is no special checking for those abnormal cases, allowing the test to fail simply with a NullPointerException, with this comment indicating that either the input data is incorrect or the test needs to be improved.
WITHOUT_CLASSIFICATION	Test creating modelelements from a given notation, and then re-generate the notation-string again, and check if they are equal. Some of these tests are not very usefulll, since they may fail on white space differences. TODO: White space should best be ignored.
WITHOUT_CLASSIFICATION	changing the sequence only
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	Make sure the contents match what we expect
WITHOUT_CLASSIFICATION	Make sure we got what we started with
WITHOUT_CLASSIFICATION	Clean up our model and the extent that we read profile in to
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	TODO: the following fails due to the XMI writing saving all top level model elements and because even if there was no empty project, by creating a class, the undo mechanism in the project manager will force the creation of an empty project. assertEquals(1, profileModels.size());
WITHOUT_CLASSIFICATION	we recalculate all the activations
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
TEST	TODO should this be done even if not a full test plan? and what if load fails?
TEST	TODO: improve this test $NON-NLS-1$ $NON-NLS-2$ Missing variable name
TEST	TODO - need a lot more tests
TEST	TODO enable some proper tests!!
TEST	TODO add tests for SaveGraphics
TEST	TODO add tests for ReportSaveGraphics
TEST	TODO these assertions should be separate tests
TEST	TODO: need more tests
TEST	TODO some more invalid sequence tests needed
TEST	TODO add tests to check for: - name clash - long option abbreviations (match shortest unique abbreviation)
TEST	TODO - need a lot more tests
TEST	TODO make these separate tests?
WITHOUT_CLASSIFICATION	???
WITHOUT_CLASSIFICATION	Class to be used to create the Method. Will be non-null if either Class or Object was provided during construction. Can be used instead of invokee, e.g. when using interfaces.
WITHOUT_CLASSIFICATION	If invokee was provided, then clazz has been set up
WITHOUT_CLASSIFICATION	Now eliminate any classpath entries that do not "match" the search
WITHOUT_CLASSIFICATION	Finds all classes that extend the classes in the listSuperClasses ArrayList, searching in the listAllClasses ArrayList. @param superClasses the base classes to find subclasses for @param listAllClasses the collection of classes to search in @param innerClasses indicate whether to include inner classes in the search @return ArrayList of the subclasses
WITHOUT_CLASSIFICATION	Finds all classes that extend the class, searching in the listAllClasses ArrayList. @param theClass the parent class @param listAllClasses the collection of classes to search in @param listSubClasses the collection of discovered subclasses @param innerClasses indicates whether inners classes should be included in the search
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	THREAD PROPERTIES
WITHOUT_CLASSIFICATION	NUMBER OF THREADS
WITHOUT_CLASSIFICATION	RAMP-UP
WITHOUT_CLASSIFICATION	LOOP COUNT
WITHOUT_CLASSIFICATION	mainPanel.add(threadPropsPanel, BorderLayout.NORTH); add(mainPanel, BorderLayout.CENTER);
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Sampler error action buttons
WITHOUT_CLASSIFICATION	Defaults to continue
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------ Fields ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------- Methods -------------------------------------------
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------- Methods implemented from org.xml.sax.ContentHandler -----------------------------------------------------------------------
WITHOUT_CLASSIFICATION	An additional note on using HashSets to store URLs: I just discovered that obtaining the hashCode of a java.net.URL implies a domain-name resolution process. This means significant delays can occur, even more so if the domain name is not resolvable. Whether this can be a problem in practical situations I can't tell, but thought I'd keep a note just in case... BTW, note that using a List and removing duplicates via scan would not help, since URL.equals requires name resolution too. The above problem has now been addressed with the URLString and URLCollection classes.
WITHOUT_CLASSIFICATION	A dummy class to pass the pointer of URL.
WITHOUT_CLASSIFICATION	Now parse the DOM tree
WITHOUT_CLASSIFICATION	Clear maps
WITHOUT_CLASSIFICATION	Defaults
WITHOUT_CLASSIFICATION	If it was a HTTP GET request, then all parameters in the URL has been handled by the sampler.setPath above, so we just need to do parse the rest of the request if it is not a GET request
WITHOUT_CLASSIFICATION	Check if it was a multipart http post request
WITHOUT_CLASSIFICATION	Get the post data using the content encoding of the request
WITHOUT_CLASSIFICATION	we start to iterate through the elements
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	synchronize with FixedQueueExecutor
WITHOUT_CLASSIFICATION	JMSMessageID cannot be null
WITHOUT_CLASSIFICATION	++ These are JMX file names and must not be changed $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	+JMX file attribute names - do not change any values! $NON-NLS-1$
WITHOUT_CLASSIFICATION	This will only work with an Applet .class file. Ideally, this should be upgraded to work with Objects (IE) and archives (.jar and .zip) files as well.
WITHOUT_CLASSIFICATION	Instantiate the sampler
WITHOUT_CLASSIFICATION	OK, because find only returns correct element types
WITHOUT_CLASSIFICATION	Property was found in a config element. Whether or not it matched the value in the sampler, we're done with this property -- don't look at lower-priority configs:
WITHOUT_CLASSIFICATION	HashMap to save ssl connection between Jmeter proxy and browser
WITHOUT_CLASSIFICATION	get the component parts Assume domains must have at least 2 parts, e.g. apache.org Don't try matching against .org; however we don't check .co.uk here
WITHOUT_CLASSIFICATION	Check if we found an accept-charset attribute on the form
WITHOUT_CLASSIFICATION	The next line looks odd, but proxied HTTP requests look like: GET http:www.apache.org/foundation/ HTTP/1.1 i.e. url starts with "http:", not "/" whereas HTTPS proxy requests look like: CONNECT www.google.co.uk:443 HTTP/1.1 followed by GET /?gws_rd=cr HTTP/1.1
WITHOUT_CLASSIFICATION	A HTTP RESPONSE HEADER LOOKS ALOT LIKE: HTTP/1.0 200 OK Date: Wednesday, 02-Feb-94 23:04:12 GMT Server: NCSA/1.1 MIME-version: 1.0 Last-modified: Monday, 15-Nov-93 23:33:16 GMT Content-Type: text/html Content-Length: 2345 \r\n
WITHOUT_CLASSIFICATION	Count the retries as well in the time
WITHOUT_CLASSIFICATION	for result
WITHOUT_CLASSIFICATION	Make sure the sample start time and sample end time are recorded in order not to confuse the statistics calculation methods: if an error occurs and an exception is thrown it is possible that the result.sampleStart() or result.sampleEnd() won't be called
WITHOUT_CLASSIFICATION	We've finished with the request, so we can add the LocalAddress to it for display
WITHOUT_CLASSIFICATION	Handle the various methods
WITHOUT_CLASSIFICATION	Set up the local address if one exists
WITHOUT_CLASSIFICATION	a well-behaved browser is supposed to send 'Connection: close' with the last request to an HTTP server. Instead, most browsers leave it to the server to close the connection after their timeout period. Leave it to the JMeter user to decide.
WITHOUT_CLASSIFICATION	encoding does not really matter here
WITHOUT_CLASSIFICATION	Add any files Cannot retrieve parts once added to the MultiPartEntity, so have to save them here.
WITHOUT_CLASSIFICATION	We get the posted bytes using the encoding used to create it
WITHOUT_CLASSIFICATION	In a post request which is not multipart, we only support parameters, no file upload is allowed
WITHOUT_CLASSIFICATION	Just append all the parameter values, and use that as the post body
WITHOUT_CLASSIFICATION	Allow the mimetype of the file to control the content type This is not obvious in GUI if you are not uploading any files, but just sending the content of nameless parameters
WITHOUT_CLASSIFICATION	Allow the mimetype of the file to control the content type This is not obvious in GUI if you are not uploading any files, but just sending the content of nameless parameters
WITHOUT_CLASSIFICATION	We use the encoding which should be used according to the HTTP spec, which is UTF-8
WITHOUT_CLASSIFICATION	N.B. Revision 323346 introduced the ClassCast check, but then used iter.next() to fetch the item to be cast, thus skipping the element that did not cast. Reverted to work more like the original code, but with the check in place. Added a warning message so can track whether it is necessary
WITHOUT_CLASSIFICATION	Don't break the world just because this failed:
WITHOUT_CLASSIFICATION	if concurrent download emb. resources, add to a list for async gets later
WITHOUT_CLASSIFICATION	Thread pool Executor to get resources use a LinkedBlockingQueue, note: max pool size doesn't effect
WITHOUT_CLASSIFICATION	The following three can be discussed: should they be from the first request or from the final one? I chose to do it this way because that's what browsers do: they show the final URL of the redirect chain in the location field.
WITHOUT_CLASSIFICATION	Commons HttpClient only
WITHOUT_CLASSIFICATION	Set the content length
WITHOUT_CLASSIFICATION	Make the connection ready for sending post data
WITHOUT_CLASSIFICATION	Check if target of merge is reasonable
WITHOUT_CLASSIFICATION	We must ask the user if it is ok to close current project i.e. it is OPEN
WITHOUT_CLASSIFICATION	don't change name if merging
WITHOUT_CLASSIFICATION	Allow for missing optional jars
WITHOUT_CLASSIFICATION	Does not appear to be used externally; called by #loadProjectFile()
WITHOUT_CLASSIFICATION	convertTree(tree);
WITHOUT_CLASSIFICATION	If we are loading a new test plan, initialize the tree with the testplan node we are loading
WITHOUT_CLASSIFICATION	These are handled specially by addToTree
WITHOUT_CLASSIFICATION	Document doc = null;
WITHOUT_CLASSIFICATION	write to file
WITHOUT_CLASSIFICATION	Make the connection ready for sending post data
WITHOUT_CLASSIFICATION	Make the connection ready for sending post data
WITHOUT_CLASSIFICATION	@see org.apache.jmeter.gui.action.Command#getActionNames()
WITHOUT_CLASSIFICATION	boolean toReturn = true;
WITHOUT_CLASSIFICATION	don't automatically expand when merging
WITHOUT_CLASSIFICATION	+JMX file attributes - do not change values! $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ -JMX file attributes
WITHOUT_CLASSIFICATION	Called by JMeter#startGui()
WITHOUT_CLASSIFICATION	no error as default
WITHOUT_CLASSIFICATION	Helper method to simplify code
WITHOUT_CLASSIFICATION	one builder for all requests in a thread
WITHOUT_CLASSIFICATION	but we do trap this error to make tests work better
WITHOUT_CLASSIFICATION	may well happen
WITHOUT_CLASSIFICATION	should never happen
WITHOUT_CLASSIFICATION	Note: initialised with error = failure = false
WITHOUT_CLASSIFICATION	HC3.1 does not have the method
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	should never happen
WITHOUT_CLASSIFICATION	means counting from end
WITHOUT_CLASSIFICATION	No point continuing Mainly for bsh.EvalError
WITHOUT_CLASSIFICATION	create a parser:
WITHOUT_CLASSIFICATION	doc =
WITHOUT_CLASSIFICATION	if everything went fine then xml schema validation is valid
WITHOUT_CLASSIFICATION	Only set message if error not yet flagged
WITHOUT_CLASSIFICATION	Helper method to construct SAX error details
WITHOUT_CLASSIFICATION	Can be caused by: - failure to read XSD file - xml does not match XSD
WITHOUT_CLASSIFICATION	Can be caused by: - premature end of file - non-whitespace content after trailer
WITHOUT_CLASSIFICATION	Static int to signify the type of logical comparitor to assert
WITHOUT_CLASSIFICATION	is the Sample the correct size?
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Use the name of the test element, otherwise cannot enable/disable debug from the GUI
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	the signer certificate
WITHOUT_CLASSIFICATION	@param response @return
WITHOUT_CLASSIFICATION	has the Sample lasted too long?
WITHOUT_CLASSIFICATION	ensure the manager is initialised we don't currently need to do anything further, as this sets the default https protocol
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ These are the names of the get/set methods
WITHOUT_CLASSIFICATION	no point in checking if we don't have anything to compare against
WITHOUT_CLASSIFICATION	no error as default
WITHOUT_CLASSIFICATION	create parser
WITHOUT_CLASSIFICATION	String md5Result = DigestUtils.md5Hex(resultData);
WITHOUT_CLASSIFICATION	evaluate result
WITHOUT_CLASSIFICATION	package protected so can be accessed by test class
WITHOUT_CLASSIFICATION	return with an error
WITHOUT_CLASSIFICATION	These constants are used both for the JMX file and for the setters/getters $NON-NLS-1$
WITHOUT_CLASSIFICATION	return with an error
WITHOUT_CLASSIFICATION	flush
WITHOUT_CLASSIFICATION	Run tidy.
WITHOUT_CLASSIFICATION	return with no error
WITHOUT_CLASSIFICATION	write output to file
WITHOUT_CLASSIFICATION	return with no error
WITHOUT_CLASSIFICATION	check if filename defined
WITHOUT_CLASSIFICATION	close file
WITHOUT_CLASSIFICATION	open file
WITHOUT_CLASSIFICATION	"" is not the same as no realm
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	no error as default
WITHOUT_CLASSIFICATION	Mask should contain all types (but not NOT)
WITHOUT_CLASSIFICATION	The string to check (Url or data)
WITHOUT_CLASSIFICATION	Allow testing of failure codes
WITHOUT_CLASSIFICATION	What are we testing against?
WITHOUT_CLASSIFICATION	Assume it is the URL
WITHOUT_CLASSIFICATION	Assume it is the URL
WITHOUT_CLASSIFICATION	do it once outside loop
WITHOUT_CLASSIFICATION	Not should always succeed against an empty result
WITHOUT_CLASSIFICATION	Get the Matcher for this thread
WITHOUT_CLASSIFICATION	should never happen...
WITHOUT_CLASSIFICATION	+ JMX file attributes $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ - JMX file attributes
WITHOUT_CLASSIFICATION	reset the bsh.Interpreter before each execution
WITHOUT_CLASSIFICATION	script file name (if present)
WITHOUT_CLASSIFICATION	parameters to pass to script file (or script)
WITHOUT_CLASSIFICATION	script area
WITHOUT_CLASSIFICATION	Don't let the input field shrink too much
WITHOUT_CLASSIFICATION	Send POST data from <code>Entry</code> to the open connection. @param connection <code>URLConnection</code> where POST data should be sent @return a String show what was posted. Will not contain actual file upload content @exception IOException if an I/O exception occurs
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	file panel $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Assume it is the URL
WITHOUT_CLASSIFICATION	USER_INPUT
WITHOUT_CLASSIFICATION	class attributes
WITHOUT_CLASSIFICATION	USER_INPUT
WITHOUT_CLASSIFICATION	USER_INPUT
WITHOUT_CLASSIFICATION	USER_INPUT
WITHOUT_CLASSIFICATION	doctype
WITHOUT_CLASSIFICATION	doctype
WITHOUT_CLASSIFICATION	Names for the fields $NON-NLS-1$
WITHOUT_CLASSIFICATION	instance attributes
WITHOUT_CLASSIFICATION	format (HMTL, XHTML, XML)
WITHOUT_CLASSIFICATION	errors only
WITHOUT_CLASSIFICATION	thresholds
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	Drop the last character:
WITHOUT_CLASSIFICATION	store the operator
WITHOUT_CLASSIFICATION	default
WITHOUT_CLASSIFICATION	Put the check boxes in a column in a panel
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.createTestElement()
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.modifyTestElement(TestElement)
WITHOUT_CLASSIFICATION	Assume URL
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	USER_INPUT
WITHOUT_CLASSIFICATION	USER_INPUT
WITHOUT_CLASSIFICATION	initialize to empty string, this will fail the assertion
WITHOUT_CLASSIFICATION	md5HexInput.addFocusListener(this);
WITHOUT_CLASSIFICATION	@return
WITHOUT_CLASSIFICATION	Should Tidy be quiet?
WITHOUT_CLASSIFICATION	@param element
WITHOUT_CLASSIFICATION	Should we download external DTDs?
WITHOUT_CLASSIFICATION	Called by XPathAssertionGui
WITHOUT_CLASSIFICATION	Report Tidy errors as Assertion failure?
WITHOUT_CLASSIFICATION	Process tolerant settings
WITHOUT_CLASSIFICATION	Show Tidy warnings ?
WITHOUT_CLASSIFICATION	Called by XPathAssertionGui
WITHOUT_CLASSIFICATION	Non-Tidy options
WITHOUT_CLASSIFICATION	Tidy options
WITHOUT_CLASSIFICATION	Called by XPathExtractorGui
WITHOUT_CLASSIFICATION	Called by XPathExtractorGui
WITHOUT_CLASSIFICATION	samp.setDomain(this.getDomain()); samp.setPort(this.getPort());
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	panel.add(signerCheckByFile);
WITHOUT_CLASSIFICATION	Access needed from CSVDataSet
WITHOUT_CLASSIFICATION	Store the resource keys
WITHOUT_CLASSIFICATION	default (e.g. if test plan does not have definition)
WITHOUT_CLASSIFICATION	N.B. this class is shared between threads (NoThreadClone) so all access to variables needs to be protected by a lock (either sync. or volatile) to ensure safe publication.
WITHOUT_CLASSIFICATION	This class is not cloned per thread, so this is shared
WITHOUT_CLASSIFICATION	Used for per-thread/user numbers Cannot be static, as random numbers are not to be shared between instances
WITHOUT_CLASSIFICATION	nextInt(n) returns values in the range [0,n), so n must be set to max-min+1
WITHOUT_CLASSIFICATION	This can overflow
WITHOUT_CLASSIFICATION	This is used as an error indicator
WITHOUT_CLASSIFICATION	check for overflow too
WITHOUT_CLASSIFICATION	Cannot use getThreadContext() as we are not cloned per thread
WITHOUT_CLASSIFICATION	Use format to create number; if it fails, use the default
WITHOUT_CLASSIFICATION	The original name of the property
WITHOUT_CLASSIFICATION	variables are unlikely to contain spaces, so most likely a translation
WITHOUT_CLASSIFICATION	reset the value
WITHOUT_CLASSIFICATION	user-specified key
WITHOUT_CLASSIFICATION	treat the same as EOF
WITHOUT_CLASSIFICATION	i.e. EOF
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	N.B. Must be in this class for the TestBean code to work
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Allow for missing optional jars
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	These variable names must have .displayName properties and agree with the getXXX()/setXXX() methods $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	These group names must have .displayName properties $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	if we found a TestPlan, then we are on our way to the TestFragment
WITHOUT_CLASSIFICATION	only try to load the JMX test plan if there is one
WITHOUT_CLASSIFICATION	filter the tree for a TestFragment.
WITHOUT_CLASSIFICATION	ensure counts are updated correctly
WITHOUT_CLASSIFICATION	These items are shared between threads in a group by the clone() method They are initialised by testStarted() so don't need to be serialised
WITHOUT_CLASSIFICATION	TODO ?? (JMeterTreeNode) selectedNode.clone();
WITHOUT_CLASSIFICATION	Ensure global counters and lock are shared across threads in the group
WITHOUT_CLASSIFICATION	Insert the subControllersAndSamplers into random list positions.
WITHOUT_CLASSIFICATION	nodePath.add(selectedNode.getName());
WITHOUT_CLASSIFICATION	We clone to avoid enabling existing node
WITHOUT_CLASSIFICATION	Returns the selection value as a int, with the value set to zero if it is out of range.
WITHOUT_CLASSIFICATION	Set the selection once per iteration
WITHOUT_CLASSIFICATION	Create a new list containing numElements null elements.
WITHOUT_CLASSIFICATION	Replace subControllersAndSamplers with reordered copy.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Retrieve the formatted data using the same encoding used to create it
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.createTestElement()
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.modifyTestElement(TestElement)
WITHOUT_CLASSIFICATION	Set the position when next is first called, and don't overwrite until reInitialize is called.
WITHOUT_CLASSIFICATION	setDone(true);
WITHOUT_CLASSIFICATION	We've gone through the whole list and are now back at the start point of our search.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ throughput.addActionListener(this);
WITHOUT_CLASSIFICATION	start/end index default value for string getters and setters
WITHOUT_CLASSIFICATION	implements UnsharedComponent
WITHOUT_CLASSIFICATION	Although the default is not the same as for the string value, it is only used internally
WITHOUT_CLASSIFICATION	Although the default is not the same as for the string value, it is only used internally
WITHOUT_CLASSIFICATION	Prevent entry if nothing to do
WITHOUT_CLASSIFICATION	These must not be static, otherwise Language change does not work $NON-NLS-1$
WITHOUT_CLASSIFICATION	PERTHREAD FIELD
WITHOUT_CLASSIFICATION	In case we are converting back from floating point, drop the decimal fraction $NON-NLS-1$
WITHOUT_CLASSIFICATION	TYPE FIELD
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	TEXT FIELD
WITHOUT_CLASSIFICATION	TEXT FIELD
WITHOUT_CLASSIFICATION	TEXT FIELD
WITHOUT_CLASSIFICATION	TEXT FIELD
WITHOUT_CLASSIFICATION	TEXT FIELD
WITHOUT_CLASSIFICATION	Standalone
WITHOUT_CLASSIFICATION	Embedded
WITHOUT_CLASSIFICATION	JPanel loopPanel = new JPanel(new BorderLayout(5, 0));
WITHOUT_CLASSIFICATION	Only replace default if it is provided
WITHOUT_CLASSIFICATION	may be null for PUT In an application/x-www-form-urlencoded request, we only support parameters, no file upload is allowed
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	Should not happen
WITHOUT_CLASSIFICATION	implements UnsharedComponent
WITHOUT_CLASSIFICATION	Fetch some variables
WITHOUT_CLASSIFICATION	LOOP LABEL $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	+ JMX file attributes $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ - JMX file attributes
WITHOUT_CLASSIFICATION	Checkbox $NON-NLS-1$
WITHOUT_CLASSIFICATION	================= internal business =================
WITHOUT_CLASSIFICATION	DROP-DOWN MENU
WITHOUT_CLASSIFICATION	number of previous matches
WITHOUT_CLASSIFICATION	reset previous result
WITHOUT_CLASSIFICATION	e.g. DTD not reachable
WITHOUT_CLASSIFICATION	this method assumes UTF-8 input data
WITHOUT_CLASSIFICATION	Can happen for bad input document
WITHOUT_CLASSIFICATION	============= object properties ================
WITHOUT_CLASSIFICATION	Permissible values: true - match against headers false or absent - match against body (this was the original default) URL - match against URL These are passed to the setUseField() method Do not change these values!
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Will already have been logged by XPathUtil fail the sample
WITHOUT_CLASSIFICATION	Just in case Clear any other remaining variables
WITHOUT_CLASSIFICATION	What to match against. N.B. do not change the string value or test plans will break! $NON-NLS-1$
WITHOUT_CLASSIFICATION	NOTE: responseData encoding is server specific Therefore we do byte -> unicode -> byte conversion to ensure UTF-8 encoding as required by XPathUtil convert unicode String -> UTF-8 bytes $NON-NLS-1$
WITHOUT_CLASSIFICATION	ensure old value is not left defined
WITHOUT_CLASSIFICATION	ensure old value is not left defined
WITHOUT_CLASSIFICATION	Fetch some variables
WITHOUT_CLASSIFICATION	Only replace default if it is provided
WITHOUT_CLASSIFICATION	Note: match.groups() includes group 0
WITHOUT_CLASSIFICATION	refname has already been set to the default (if present)
WITHOUT_CLASSIFICATION	Number of refName_n variable sets to keep
WITHOUT_CLASSIFICATION	Number of refName_n variable sets to keep
WITHOUT_CLASSIFICATION	Save the count
WITHOUT_CLASSIFICATION	Original match behaviour
WITHOUT_CLASSIFICATION	Original match behaviour
WITHOUT_CLASSIFICATION	< 0 means we save all the matches
WITHOUT_CLASSIFICATION	remove any single matches
WITHOUT_CLASSIFICATION	Remove any left-over variables
WITHOUT_CLASSIFICATION	no need to process further
WITHOUT_CLASSIFICATION	Remove the group count
WITHOUT_CLASSIFICATION	How many groups are there?
WITHOUT_CLASSIFICATION	remove the remaining _gn vars
WITHOUT_CLASSIFICATION	trailing string is not empty
WITHOUT_CLASSIFICATION	Contains Strings and Integers
WITHOUT_CLASSIFICATION	remove the g0,g1...gn vars
WITHOUT_CLASSIFICATION	add match as Integer
WITHOUT_CLASSIFICATION	string is not empty
WITHOUT_CLASSIFICATION	Allow for property not yet being set (probably only applies to Test cases)
WITHOUT_CLASSIFICATION	Random match
WITHOUT_CLASSIFICATION	for request Data
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ e.g. "Transfer-Encoding: chunked", which is processed automatically by the underlying protocol $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ pseudo-header for reporting Local Address $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ For handling caching $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ e.g. public, max-age=259200 e.g. Date Header of response
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Use format to create number; if it fails, use the default
WITHOUT_CLASSIFICATION	< 0 means we save all the matches
WITHOUT_CLASSIFICATION	Save the count
WITHOUT_CLASSIFICATION	Remove any left-over variables
WITHOUT_CLASSIFICATION	no need to process further
WITHOUT_CLASSIFICATION	Random match
WITHOUT_CLASSIFICATION	Next line
WITHOUT_CLASSIFICATION	Next line
WITHOUT_CLASSIFICATION	Used for per-thread/user storage of increment in Thread Group Main loop
WITHOUT_CLASSIFICATION	So we know which button is selected
WITHOUT_CLASSIFICATION	reset
WITHOUT_CLASSIFICATION	Used for per-thread/user numbers
WITHOUT_CLASSIFICATION	Cannot use getThreadContext() as not cloned per thread
WITHOUT_CLASSIFICATION	get to 'path' part of the URL, preserving schema, auth, host if present
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	can be specified in jmeter.properties $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	This class is not cloned per thread, so this is shared @GuardedBy("this")
WITHOUT_CLASSIFICATION	Although the lock appears to be an instance lock, in fact the lock is shared between all threads in a thread group, but different thread groups have different locks - see the clone() method below The lock ensures that all the variables are processed together, which is important for functions such as __CSVRead and _StringFromFile.
WITHOUT_CLASSIFICATION	Lock object must exist
WITHOUT_CLASSIFICATION	ensure that clones share the same lock object
WITHOUT_CLASSIFICATION	super.mergeIn(element);
WITHOUT_CLASSIFICATION	Don't process the NAME column
WITHOUT_CLASSIFICATION	Enable DELETE (which may already be enabled, but it won't hurt)
WITHOUT_CLASSIFICATION	Enable DELETE (which may already be enabled, but it won't hurt)
WITHOUT_CLASSIFICATION	Highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	Highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	Disable DELETE if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	Disable DELETE if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	Verify for a ".." component at next iteration
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Table still contains one or more rows, so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Table still contains one or more rows, so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	paramTable.setRowSelectionAllowed(true); paramTable.setColumnSelectionAllowed(true);
WITHOUT_CLASSIFICATION	property values are strings
WITHOUT_CLASSIFICATION	paramTable.setCellSelectionEnabled(true); paramTable.setPreferredScrollableViewportSize(new Dimension(100, 70));
WITHOUT_CLASSIFICATION	Send the mail ...
WITHOUT_CLASSIFICATION	Send the mail ...
WITHOUT_CLASSIFICATION	create some properties and get the default Session
WITHOUT_CLASSIFICATION	create a message
WITHOUT_CLASSIFICATION	This can't happen (how should utf8 not be supported!?!), so just throw an Error:
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	for request Data
WITHOUT_CLASSIFICATION	setter/getter - JavaDoc-Comments not needed...
WITHOUT_CLASSIFICATION	-1 is the code for a failed sample.
WITHOUT_CLASSIFICATION	private void setSuccessCount(long count) { this.successCount = count; }
WITHOUT_CLASSIFICATION	private void setFailureCount(long count) { this.failureCount = count; }
WITHOUT_CLASSIFICATION	sends the result to the visualiser updates the model used for sending e-mails
WITHOUT_CLASSIFICATION	Actions
WITHOUT_CLASSIFICATION	Action targets
WITHOUT_CLASSIFICATION	public static final int THREAD_GROUP = 1;
WITHOUT_CLASSIFICATION	This means no sample is saved
WITHOUT_CLASSIFICATION	take copy so cannot get NPE
WITHOUT_CLASSIFICATION	Gui components
WITHOUT_CLASSIFICATION	private ButtonGroup actionButtons;
WITHOUT_CLASSIFICATION	State variables
WITHOUT_CLASSIFICATION	Target
WITHOUT_CLASSIFICATION	Action
WITHOUT_CLASSIFICATION	Duration
WITHOUT_CLASSIFICATION	The property name to be used to look up the display string
WITHOUT_CLASSIFICATION	For calculating throughput across all threads
WITHOUT_CLASSIFICATION	For holding the ThrougputInfo objects for all ThreadGroups. Keyed by AbstractThreadGroup objects
WITHOUT_CLASSIFICATION	If previous time is zero, then target will be in the past. This is what we want, so first sample is run without a delay.
WITHOUT_CLASSIFICATION	assume the sample will run as soon as the delay has expired
WITHOUT_CLASSIFICATION	Calculate the delay based on the mode
WITHOUT_CLASSIFICATION	N.B. we fetch the throughput each time, as it may vary during a test
WITHOUT_CLASSIFICATION	Total number of threads
WITHOUT_CLASSIFICATION	Active threads in this group
WITHOUT_CLASSIFICATION	All threads - alternate calculation
WITHOUT_CLASSIFICATION	All threads in this group - alternate calculation
WITHOUT_CLASSIFICATION	no need to sync as one per instance
WITHOUT_CLASSIFICATION	Add to cache
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	can be specified in jmeter.properties $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	Cannot happen
WITHOUT_CLASSIFICATION	String in the panel Do not make these static, otherwise language changes don't work $NON-NLS-1$
WITHOUT_CLASSIFICATION	We did not replace the entry so use the existing one
WITHOUT_CLASSIFICATION	e.g. 0 i.e. 1
WITHOUT_CLASSIFICATION	We're behind schedule -- try to catch up: assume the sample will run immediately
WITHOUT_CLASSIFICATION	For access from test code
WITHOUT_CLASSIFICATION	Synchronize on the info object's MUTEX to ensure Multiple threads don't update the scheduled time simultaneously
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	For access from test code
WITHOUT_CLASSIFICATION	Unique Barrier creation ensured by synchronized setup
WITHOUT_CLASSIFICATION	must be defined
WITHOUT_CLASSIFICATION	Instantiate requestview classes
WITHOUT_CLASSIFICATION	Ensure transient object is created by the server
WITHOUT_CLASSIFICATION	DELAY DEVIATION
WITHOUT_CLASSIFICATION	Lazy init
WITHOUT_CLASSIFICATION	use later
WITHOUT_CLASSIFICATION	AVG DELAY
WITHOUT_CLASSIFICATION	Prepare the Request tabbed pane
WITHOUT_CLASSIFICATION	place raw tab in first position (first tab)
WITHOUT_CLASSIFICATION	Hint to background color on bottom tabs (grey, not blue)
WITHOUT_CLASSIFICATION	We assume the argument value is encoded according to the HTTP spec, i.e. UTF-8
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Create the panels for the regexp tab
WITHOUT_CLASSIFICATION	go to first line
WITHOUT_CLASSIFICATION	Construct a multi-line string with all matches
WITHOUT_CLASSIFICATION	Add regexp tester pane $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	private static final int LIMIT_STR_SIZE = 100; private boolean isRoot;
WITHOUT_CLASSIFICATION	if other node type, we will just skip it
WITHOUT_CLASSIFICATION	MAIN PANEL
WITHOUT_CLASSIFICATION	NAME
WITHOUT_CLASSIFICATION	description Panel
WITHOUT_CLASSIFICATION	number Panel
WITHOUT_CLASSIFICATION	information display Panel
WITHOUT_CLASSIFICATION	boolean resized = true;
WITHOUT_CLASSIFICATION	rounds!
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	MAIN PANEL
WITHOUT_CLASSIFICATION	NAME
WITHOUT_CLASSIFICATION	Set up the table itself
WITHOUT_CLASSIFICATION	everyone is free to swing on its side :) add(infoPanel, BorderLayout.EAST);
WITHOUT_CLASSIFICATION	Note: the resource string won't respond to locale-changes, however this does not matter as it is only used when pasting to the clipboard
WITHOUT_CLASSIFICATION	dimension of the SplineGraph is the same resized = false;
WITHOUT_CLASSIFICATION	Sample number (string) Start Time Thread Name Label Sample Time Status Bytes
WITHOUT_CLASSIFICATION	dimension changed resized = true;
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Add the main panel and the graph
WITHOUT_CLASSIFICATION	Column renderers
WITHOUT_CLASSIFICATION	The object used for each row
WITHOUT_CLASSIFICATION	table.getTableHeader().setReorderingAllowed(false);
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Make a internal list of all results to allow reload data with filter or interval
WITHOUT_CLASSIFICATION	Default checked $NON-NLS-1$
WITHOUT_CLASSIFICATION	Set up footer of table which displays numerics of the graphs
WITHOUT_CLASSIFICATION	Generate x-axis label and associated color
WITHOUT_CLASSIFICATION	Set up the table with footer
WITHOUT_CLASSIFICATION	Sampler selection
WITHOUT_CLASSIFICATION	internal list of all results
WITHOUT_CLASSIFICATION	Use for x-axis scale
WITHOUT_CLASSIFICATION	we check the count to see if we have exceeded the number of lines to parse. There's no way to know where to stop in the file. Therefore we use break to escape the while loop when we've reached the count.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	MAIN PANEL
WITHOUT_CLASSIFICATION	reset colors index
WITHOUT_CLASSIFICATION	List of value by sampler
WITHOUT_CLASSIFICATION	We want to retain insertion order, so LinkedHashMap is necessary
WITHOUT_CLASSIFICATION	canvas size
WITHOUT_CLASSIFICATION	Draw the graph
WITHOUT_CLASSIFICATION	Test can't have a duration more than 2^31 secs (cast from long to int)
WITHOUT_CLASSIFICATION	Calculate intermediate values (if needed)
WITHOUT_CLASSIFICATION	log.debug("data["+s+"]["+idx+"]: " + data[s][idx]);
WITHOUT_CLASSIFICATION	If clic on the Graph tab, make the graph (without apply interval or filter)
WITHOUT_CLASSIFICATION	if use dynamic graph size is checked, we disable the dimension fields
WITHOUT_CLASSIFICATION	Force reload data
WITHOUT_CLASSIFICATION	Not 'else if' because forceReloadData
WITHOUT_CLASSIFICATION	Reload data from file
WITHOUT_CLASSIFICATION	Reload data form internal list of results
WITHOUT_CLASSIFICATION	Calculate the test duration. Needs to xAxis Labels and getData.
WITHOUT_CLASSIFICATION	Button
WITHOUT_CLASSIFICATION	Button
WITHOUT_CLASSIFICATION	Search field
WITHOUT_CLASSIFICATION	checkboxes
WITHOUT_CLASSIFICATION	$NON-NLS-1$ default: bold
WITHOUT_CLASSIFICATION	default: circle
WITHOUT_CLASSIFICATION	default option
WITHOUT_CLASSIFICATION	Keep copies of the two editors needed
WITHOUT_CLASSIFICATION	could be <HTML lang=""> $NON-NLS-1$
WITHOUT_CLASSIFICATION	Look for a case variation
WITHOUT_CLASSIFICATION	ditto $NON-NLS-1$
WITHOUT_CLASSIFICATION	To disable downloading and rendering of images and frames, enable the editor-kit. The Stream property can then be
WITHOUT_CLASSIFICATION	Must be done before setContentType
WITHOUT_CLASSIFICATION	now we create the compiled pattern and add it to the arraylist
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	the child to be removed will always be 0 'cos as the nodes are removed the nth node will become (n-1)th
WITHOUT_CLASSIFICATION	get the text response and image icon to determine which is NOT null
WITHOUT_CLASSIFICATION	Bug can generate RTE
WITHOUT_CLASSIFICATION	number of nodes
WITHOUT_CLASSIFICATION	number of non extreme nodes (_m-2)
WITHOUT_CLASSIFICATION	the number of nodes is defined by the length of r
WITHOUT_CLASSIFICATION	grab the nodes
WITHOUT_CLASSIFICATION	computes interpolation coefficients
WITHOUT_CLASSIFICATION	creation of the interpolation structure
WITHOUT_CLASSIFICATION	local variables
WITHOUT_CLASSIFICATION	local variables
WITHOUT_CLASSIFICATION	initialize system structures (just to be safe)
WITHOUT_CLASSIFICATION	initialize the diagonal of the system matrix (A) to 4
WITHOUT_CLASSIFICATION	initialize the two minor diagonals of A to 1
WITHOUT_CLASSIFICATION	initialize B
WITHOUT_CLASSIFICATION	di (degree 0)
WITHOUT_CLASSIFICATION	ci (degree 1)
WITHOUT_CLASSIFICATION	bi (degree 2)
WITHOUT_CLASSIFICATION	ai (degree 3)
WITHOUT_CLASSIFICATION	intermediate arrays
WITHOUT_CLASSIFICATION	Jacobi convergence test
WITHOUT_CLASSIFICATION	init newX and oldX arrays to 0
WITHOUT_CLASSIFICATION	main iteration
WITHOUT_CLASSIFICATION	verify t belongs to the curve (range [0, _m-1])
WITHOUT_CLASSIFICATION	silent error, consider the curve is constant outside its range
WITHOUT_CLASSIFICATION	seek the good interval for t and get the piece of curve on it
WITHOUT_CLASSIFICATION	the polynomial calculation is done by the (fast) Euler method
WITHOUT_CLASSIFICATION	computes auto-scaling and absolute plots
WITHOUT_CLASSIFICATION	shouldn't draw negative values
WITHOUT_CLASSIFICATION	we want to return the context that is actually in the map if it's the first put we will have a null result
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	MAIN PANEL
WITHOUT_CLASSIFICATION	Settings panes
WITHOUT_CLASSIFICATION	the number of non extreme nodes is the number of intervals minus 1, i.e. the length of r minus 2
WITHOUT_CLASSIFICATION	the upper limit of the curve range belongs by definition to the last interval
WITHOUT_CLASSIFICATION	Jacobi system resolving results are stored in _rS computes the coefficients (di, ci, bi, ai) from the results
WITHOUT_CLASSIFICATION	computes relative auto-scaled plots to fit in the specified area
WITHOUT_CLASSIFICATION	computes the value of the curve at the pecified abscissa and relative to the beginning of the right piece of Spline curve
WITHOUT_CLASSIFICATION	return label
WITHOUT_CLASSIFICATION	initialize GUI.
WITHOUT_CLASSIFICATION	show the grid lines, to turn it off, set it to zero
WITHOUT_CLASSIFICATION	Test mail button
WITHOUT_CLASSIFICATION	reset the paint counter
WITHOUT_CLASSIFICATION	Failures count
WITHOUT_CLASSIFICATION	set the Y Axis to round
WITHOUT_CLASSIFICATION	Does not need to be synch. because it is only accessed from the sampler thread The ClientPool does access it in a different thread, but ClientPool is fully synch.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Used by Request Panel $NON-NLS-1$
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.visualizers.request.RequestView#init()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.visualizers.request.RequestView#clearData()
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	go to first line
WITHOUT_CLASSIFICATION	Construct a multi-line string with all matches
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	Don't display Request headers label if rh is null or empty
WITHOUT_CLASSIFICATION	Implementation of the ActionListener-Interface.
WITHOUT_CLASSIFICATION	Methods used to store and retrieve the MailerVisualizer.
WITHOUT_CLASSIFICATION	Methods to implement the ModelListener.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ don't set empty to keep cssJquery cssJqueryField.setText(""); $NON-NLS-1$ $NON-NLS-1$ don't set empty to keep attribute this.attributeField.setText(""); $NON-NLS-1$ don't change impl this.cssJqueryLabeledChoice.setText(HtmlExtractor.DEFAULT_EXTRACTOR);
WITHOUT_CLASSIFICATION	Create the panels for the cssJquery tab
WITHOUT_CLASSIFICATION	most current subclasses can process text
WITHOUT_CLASSIFICATION	Could be SampleResult or AssertionResult
WITHOUT_CLASSIFICATION	add a message when no request data (ex. Java request)
WITHOUT_CLASSIFICATION	to save last select tab (raw/parsed)
WITHOUT_CLASSIFICATION	Result column renderers
WITHOUT_CLASSIFICATION	Response headers column renderers
WITHOUT_CLASSIFICATION	Response fields column renderers
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	The object used for each row
WITHOUT_CLASSIFICATION	The object used for each row
WITHOUT_CLASSIFICATION	Add cssJquery tester pane $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	N.B. these are not multi-threaded, so don't make it static ISO format $NON-NLS-1$
WITHOUT_CLASSIFICATION	one space for blank header $NON-NLS-1$ one space for blank header $NON-NLS-1$
WITHOUT_CLASSIFICATION	Key Value
WITHOUT_CLASSIFICATION	Key Value
WITHOUT_CLASSIFICATION	Key Value
WITHOUT_CLASSIFICATION	create tables The object used for each row
WITHOUT_CLASSIFICATION	Response Data $NON-NLS-1$ Request Data $NON-NLS-1$ Sampler result $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ Create the panels for the other tabs
WITHOUT_CLASSIFICATION	Clear all data before display a new
WITHOUT_CLASSIFICATION	We are displaying a SampleResult
WITHOUT_CLASSIFICATION	reset for reuse
WITHOUT_CLASSIFICATION	reset for reuse
WITHOUT_CLASSIFICATION	no need to change the foreground color
WITHOUT_CLASSIFICATION	response message label
WITHOUT_CLASSIFICATION	Done
WITHOUT_CLASSIFICATION	Parsed response headers
WITHOUT_CLASSIFICATION	Reset search
WITHOUT_CLASSIFICATION	restore tabbed pane parsed if needed
WITHOUT_CLASSIFICATION	restore last selected tab
WITHOUT_CLASSIFICATION	Remove the other (parsed) tab if present
WITHOUT_CLASSIFICATION	Cache for object-message, only used when parsing from a file because in text-area property replacement might have been used
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Hint to background color on bottom tabs (grey, not blue)
WITHOUT_CLASSIFICATION	Set up the 1st table Result with empty headers
WITHOUT_CLASSIFICATION	quieten Findbugs default - do nothing
WITHOUT_CLASSIFICATION	Add styles to use for different types of status messages
WITHOUT_CLASSIFICATION	Prepare the Results tabbed pane
WITHOUT_CLASSIFICATION	Set up the 3rd table
WITHOUT_CLASSIFICATION	Set up the 2nd table
WITHOUT_CLASSIFICATION	Create the split pane
WITHOUT_CLASSIFICATION	Create the split pane
WITHOUT_CLASSIFICATION	Add search text extension
WITHOUT_CLASSIFICATION	Maximum size that we will display
WITHOUT_CLASSIFICATION	Add sample
WITHOUT_CLASSIFICATION	Add any assertion that failed as children of the sample node
WITHOUT_CLASSIFICATION	Add any assertion that failed as children of the sample node
WITHOUT_CLASSIFICATION	Prepare the common tab
WITHOUT_CLASSIFICATION	init right side with first render
WITHOUT_CLASSIFICATION	to restore last tab used
WITHOUT_CLASSIFICATION	drop-down list for renderer
WITHOUT_CLASSIFICATION	if no results render in jmeter.properties, load Standard (default)
WITHOUT_CLASSIFICATION	Instantiate render classes
WITHOUT_CLASSIFICATION	preset to "Text" option
WITHOUT_CLASSIFICATION	to restore last selected tab (better user-friendly)
WITHOUT_CLASSIFICATION	Remove old right side
WITHOUT_CLASSIFICATION	create and add a new right side
WITHOUT_CLASSIFICATION	To display current sampler result before change
WITHOUT_CLASSIFICATION	in the case the test uses a file, we set it locally and prevent loading the file repeatedly
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	MAIN PANEL
WITHOUT_CLASSIFICATION	NAME
WITHOUT_CLASSIFICATION	the child to be removed will always be 0 'cos as the nodes are removed the nth node will become (n-1)th
WITHOUT_CLASSIFICATION	Processes Assertions display a SampleResult
WITHOUT_CLASSIFICATION	Set the status for the node
WITHOUT_CLASSIFICATION	NOOP state is held by component
WITHOUT_CLASSIFICATION	TEXTAREA LABEL
WITHOUT_CLASSIFICATION	TEXTAREA
WITHOUT_CLASSIFICATION	define max scale y axis
WITHOUT_CLASSIFICATION	if the title graph is empty, we can assume some default
WITHOUT_CLASSIFICATION	replace _xAxisTitle to null (don't display x axis title)
WITHOUT_CLASSIFICATION	Stroke and shape line settings
WITHOUT_CLASSIFICATION	Lines colors
WITHOUT_CLASSIFICATION	Define chart type (line)
WITHOUT_CLASSIFICATION	Y Axis ruler
WITHOUT_CLASSIFICATION	~a tic every 50 px
WITHOUT_CLASSIFICATION	Increment cannot be < 1
WITHOUT_CLASSIFICATION	Manage legend placement
WITHOUT_CLASSIFICATION	return new Dimension(width, 400);
WITHOUT_CLASSIFICATION	int width = getWidth();
WITHOUT_CLASSIFICATION	will always be within range of an int: as must be < width
WITHOUT_CLASSIFICATION	Don't start yet if stop between samples
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	We want to retain insertion order, so LinkedHashMap is necessary
WITHOUT_CLASSIFICATION	define max scale y axis
WITHOUT_CLASSIFICATION	replace _xAxisTitle to null (don't display x axis title)
WITHOUT_CLASSIFICATION	if the "Title of Graph" is empty, we can assume some default
WITHOUT_CLASSIFICATION	Same ViewResultsTree
WITHOUT_CLASSIFICATION	Needed by Visualizer interface
WITHOUT_CLASSIFICATION	Educated guess
WITHOUT_CLASSIFICATION	if the labels are too long, they'll be "squeezed" to make the chart viewable.
WITHOUT_CLASSIFICATION	Y Axis
WITHOUT_CLASSIFICATION	new Font("SansSerif", Font.PLAIN, 10)
WITHOUT_CLASSIFICATION	enable embedded html resources
WITHOUT_CLASSIFICATION	----------- get/set methods -------------------
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	MAIN PANEL
WITHOUT_CLASSIFICATION	Column renderers
WITHOUT_CLASSIFICATION	TODO Charset ?
WITHOUT_CLASSIFICATION	Synch is needed because multiple threads can update the counts.
WITHOUT_CLASSIFICATION	SortFilterModel mySortedModel = new SortFilterModel(myStatTableModel);
WITHOUT_CLASSIFICATION	Search field
WITHOUT_CLASSIFICATION	prepare highlighter to show text find with search command
WITHOUT_CLASSIFICATION	new search?
WITHOUT_CLASSIFICATION	save search position
WITHOUT_CLASSIFICATION	Display not found message and reset search
WITHOUT_CLASSIFICATION	add listener to intercept texttofind changes and reset search
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	MAIN PANEL
WITHOUT_CLASSIFICATION	Column renderers
WITHOUT_CLASSIFICATION	checkboxes
WITHOUT_CLASSIFICATION	Reset search
WITHOUT_CLASSIFICATION	Synch is needed because multiple threads can update the counts.
WITHOUT_CLASSIFICATION	Buttons
WITHOUT_CLASSIFICATION	when Enter is pressed, search start
WITHOUT_CLASSIFICATION	default not visible
WITHOUT_CLASSIFICATION	Search text in response data
WITHOUT_CLASSIFICATION	DocumentListener method
WITHOUT_CLASSIFICATION	DocumentListener method
WITHOUT_CLASSIFICATION	DocumentListener method
WITHOUT_CLASSIFICATION	desactivate or not specials regexp char
WITHOUT_CLASSIFICATION	Label count Mean Min Max Std Dev. Error %age Throughput kB/sec avg. pageSize
WITHOUT_CLASSIFICATION	All rows have this class
WITHOUT_CLASSIFICATION	Synch is needed because a clear can occur while add occurs
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	MAIN PANEL
WITHOUT_CLASSIFICATION	Add the main panel and the graph
WITHOUT_CLASSIFICATION	A button for adding new arguments to the table. private JButton add; A button for removing arguments from the table. private JButton delete;
WITHOUT_CLASSIFICATION	Force a minimum table height of 70 pixels
WITHOUT_CLASSIFICATION	p.add(makeButtonPanel(), BorderLayout.SOUTH);
WITHOUT_CLASSIFICATION	new Functor("setName"), $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	OK, because used in synchronised method
WITHOUT_CLASSIFICATION	We have received one more sample
WITHOUT_CLASSIFICATION	Set up the graph with header, footer, Y axis and graph display
WITHOUT_CLASSIFICATION	Methods used in creating the GUI
WITHOUT_CLASSIFICATION	protected void initializeTableModel() { tableModel = new ObjectTableModel( new String[] { ArgumentsPanel.COLUMN_NAMES_0, ArgumentsPanel.COLUMN_NAMES_1, ENCODE_OR_NOT, INCLUDE_EQUALS }, new Functor[] { new Functor("getName"), new Functor("getValue"), new Functor("isAlwaysEncoded"), new Functor("isUseEquals") }, new Functor[] { new Functor("setName"), new Functor("setValue"), new Functor("setAlwaysEncoded"), new Functor("setUseEquals") }, new Class[] { String.class, String.class, Boolean.class, Boolean.class }); }
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Column renderers
WITHOUT_CLASSIFICATION	Default checked $NON-NLS-1$
WITHOUT_CLASSIFICATION	Default checked $NON-NLS-1$
WITHOUT_CLASSIFICATION	Default checked $NON-NLS-1$
WITHOUT_CLASSIFICATION	The text field should expand horizontally, but have a fixed height
WITHOUT_CLASSIFICATION	This column actually consists of a row with two sub-columns The first column contains the labels, and the second column contains the fields.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	MAIN PANEL
WITHOUT_CLASSIFICATION	Sampler selection
WITHOUT_CLASSIFICATION	canvas size
WITHOUT_CLASSIFICATION	If clic on the Graph tab, make the graph (without apply interval or filter)
WITHOUT_CLASSIFICATION	if use dynamic graph size is checked, we disable the dimension fields
WITHOUT_CLASSIFICATION	Force reload data
WITHOUT_CLASSIFICATION	Not 'else if' because forceReloadData
WITHOUT_CLASSIFICATION	Button
WITHOUT_CLASSIFICATION	Button
WITHOUT_CLASSIFICATION	Search field
WITHOUT_CLASSIFICATION	checkboxes
WITHOUT_CLASSIFICATION	$NON-NLS-1$ default: bold
WITHOUT_CLASSIFICATION	default option
WITHOUT_CLASSIFICATION	TODO Charset ?
WITHOUT_CLASSIFICATION	$NON-NLS-1$ default: normal
WITHOUT_CLASSIFICATION	Label count Mean median 90% Min Max Error %age Throughpur pageSize
WITHOUT_CLASSIFICATION	API expects null, not empty array
WITHOUT_CLASSIFICATION	API expects null, not empty array
WITHOUT_CLASSIFICATION	Changing color for column
WITHOUT_CLASSIFICATION	called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	first lets draw the grid
WITHOUT_CLASSIFICATION	draw the X axis
WITHOUT_CLASSIFICATION	draw the Y axis
WITHOUT_CLASSIFICATION	now draw the bar chart
WITHOUT_CLASSIFICATION	we sort the objects
WITHOUT_CLASSIFICATION	calculate the height
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	the test plan has to have more than 200 samples for it to generate half way decent distribution graph. the larger the sample, the better the results.
WITHOUT_CLASSIFICATION	if the height is less than one, we set it to one pixel
WITHOUT_CLASSIFICATION	draw a red line for 90% point
WITHOUT_CLASSIFICATION	draw an orange line for 50% point
WITHOUT_CLASSIFICATION	"<?xml "
WITHOUT_CLASSIFICATION	Skip the leading bytes (if any)
WITHOUT_CLASSIFICATION	there is also a javax.swing.text.Document class.
WITHOUT_CLASSIFICATION	clear result tab on Ctrl-E
WITHOUT_CLASSIFICATION	Must return a valid node, or may generate an NPE
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	MAIN PANEL
WITHOUT_CLASSIFICATION	Add the main panel and the graph
WITHOUT_CLASSIFICATION	We have received one more sample
WITHOUT_CLASSIFICATION	Set up the graph with header, footer, Y axis and graph display
WITHOUT_CLASSIFICATION	Methods used in creating the GUI
WITHOUT_CLASSIFICATION	These are not currently updated
WITHOUT_CLASSIFICATION	@GuardedBy("this")
WITHOUT_CLASSIFICATION	@GuardedBy("this")
WITHOUT_CLASSIFICATION	@GuardedBy("this")
WITHOUT_CLASSIFICATION	this.graph.clear();
WITHOUT_CLASSIFICATION	compute the new Spline curve
WITHOUT_CLASSIFICATION	do nothing, wait for the next pile to complete
WITHOUT_CLASSIFICATION	made currentSample volatile
WITHOUT_CLASSIFICATION	Find JMeter home dir from the initial classpath
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Java on Mac OS can add a second entry to the initial classpath $NON-NLS-1$
WITHOUT_CLASSIFICATION	e.g. started from IDE with full classpath Allow override $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Add standard jar locations to initial classpath
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	only accept jar files $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	usesUNC
WITHOUT_CLASSIFICATION	ClassFinder needs the classpath
WITHOUT_CLASSIFICATION	Ensure that directory URLs end in "/" $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	ClassFinder needs this
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Make the addURL method visible
WITHOUT_CLASSIFICATION	needed for ShutdownClient
WITHOUT_CLASSIFICATION	If the -t flag is to "LAST", then the last loaded file (if any) is used
WITHOUT_CLASSIFICATION	Set it
WITHOUT_CLASSIFICATION	Reset it
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ jmeter.log $NON-NLS-1$ sample result log file $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Properties to be sent to remote servers
WITHOUT_CLASSIFICATION	should remote engines be stopped at end of non-GUI test?
WITHOUT_CLASSIFICATION	Check option combinations
WITHOUT_CLASSIFICATION	Also initialises JMeter logging
WITHOUT_CLASSIFICATION	The following is needed for HTTPClient. (originally tried doing this in HTTPSampler2, but it appears that it was done too late when running in GUI mode) Set the commons logging default to Avalon Logkit, if not already defined
WITHOUT_CLASSIFICATION	Set some (hopefully!) useful properties
WITHOUT_CLASSIFICATION	Start the server
WITHOUT_CLASSIFICATION	most recent
WITHOUT_CLASSIFICATION	Update classloader if necessary
WITHOUT_CLASSIFICATION	bshinit,log);
WITHOUT_CLASSIFICATION	Do what would be done earlier
WITHOUT_CLASSIFICATION	Do what would be done earlier
WITHOUT_CLASSIFICATION	Should not have any text arguments
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Set it
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	for Httpclient for Httpclient
WITHOUT_CLASSIFICATION	Process command line property definitions These can potentially occur multiple times
WITHOUT_CLASSIFICATION	Set it
WITHOUT_CLASSIFICATION	Reset it
WITHOUT_CLASSIFICATION	Set category
WITHOUT_CLASSIFICATION	Set root level
WITHOUT_CLASSIFICATION	Checks for LAST or LASTsuffix. Returns the LAST name with .JMX replaced by suffix.
WITHOUT_CLASSIFICATION	most recent $NON-NLS-1$
WITHOUT_CLASSIFICATION	run test in batch mode
WITHOUT_CLASSIFICATION	only add Summariser if it can not be shared with the ResultCollector
WITHOUT_CLASSIFICATION	not Replaceable Controller
WITHOUT_CLASSIFICATION	Not enabled
WITHOUT_CLASSIFICATION	Not enabled
WITHOUT_CLASSIFICATION	Not a TestElement
WITHOUT_CLASSIFICATION	Not a ReplaceableController
WITHOUT_CLASSIFICATION	Listen to test and handle tidyup after non-GUI test completes. If running a remote test, then after waiting a few seconds for listeners to finish files, it calls ClientJMeterEngine.tidyRMI() to deal with the Naming Timer Thread.
WITHOUT_CLASSIFICATION	keep track of remote tests
WITHOUT_CLASSIFICATION	NOT YET USED private JMeter _parent;
WITHOUT_CLASSIFICATION	_parent = unused;
WITHOUT_CLASSIFICATION	it will be null unless remoteStop = true
WITHOUT_CLASSIFICATION	Allow listeners to close files
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Allow enough time for JVM to exit
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Replacement only needs to occur when starting the engine @see StandardJMeterEngine.run()
WITHOUT_CLASSIFICATION	Highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	Deliberate use of deprecated ctor Create non-GUI version to avoid headless problems
WITHOUT_CLASSIFICATION	Remove the disabled items For GUI runs this is done in Start.java
WITHOUT_CLASSIFICATION	This cannot be a JMeter class variable, because properties are not initialised until later.
WITHOUT_CLASSIFICATION	This is a daemon thread, which should only reach here if there are other non-daemon threads still active
WITHOUT_CLASSIFICATION	Only accept commands from the local host
WITHOUT_CLASSIFICATION	Needs to be public for tests
WITHOUT_CLASSIFICATION	needs to be public for testing
WITHOUT_CLASSIFICATION	Skip parameters with a blank name (allows use of optional variables in parameter lists)
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.createTestElement()
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.createTestElement()
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.modifyTestElement(TestElement)
WITHOUT_CLASSIFICATION	Enable DELETE (which may already be enabled, but it won't hurt)
WITHOUT_CLASSIFICATION	Enable DELETE (which may already be enabled, but it won't hurt)
WITHOUT_CLASSIFICATION	Highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	Disable DELETE if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	Disable DELETE if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	Disable DELETE if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	Disable DELETE if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	Because CollectionProperty.mergeIn will not prevent adding two properties of the same name, we need to select the first value so that this element's values prevail over defaults provided by configuration elements:
WITHOUT_CLASSIFICATION	will only contain Argument or HTTPArgument
WITHOUT_CLASSIFICATION	add(makeTitlePanel(), BorderLayout.NORTH);
WITHOUT_CLASSIFICATION	Force the table to be at least 70 pixels high
WITHOUT_CLASSIFICATION	only contains Argument (or HTTPArgument)
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.createTestElement()
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.modifyTestElement(TestElement)
WITHOUT_CLASSIFICATION	Enable DELETE (which may already be enabled, but it won't hurt)
WITHOUT_CLASSIFICATION	Table still contains one or more rows, so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	Table still contains one or more rows, so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	Force a minimum table height of 70 pixels
WITHOUT_CLASSIFICATION	If a table cell is being edited, we should accept the current value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	Evaluate the condition, which can be: blank or LAST = was the last sampler OK? otherwise, evaluate the condition to see if it is not "false" If blank, only evaluate at the end of the loop Must only be called at start and end of loop @param loopEnd - are we at loop end? @return true means OK to continue
WITHOUT_CLASSIFICATION	If a table cell is being edited, we must cancel the editing before deleting the row
WITHOUT_CLASSIFICATION	If a table cell is being edited, we must cancel the editing before deleting the row
WITHOUT_CLASSIFICATION	Highlight (select) the appropriate rows.
WITHOUT_CLASSIFICATION	Hide Window on ESC
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	change to false after the first insert
WITHOUT_CLASSIFICATION	Do update on Enter
WITHOUT_CLASSIFICATION	In spite of the name, this is actually used to determine if the loop controller is repeatable. The value is only used in nextIsNull() when the loop end condition has been detected: If forever==true, then it calls resetLoopCount(), otherwise it calls setDone(true). Loop Controllers always set forever=true, so that they will be executed next time the parent invokes them. Thread Group sets the value false, so nextIsNull() sets done, and the Thread Group will not be repeated. However, it's not clear that a Thread Group could ever be repeated.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	for unit test code @see TestIfController
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	If blank, only check previous sample when at end of loop $NON-NLS-1$
WITHOUT_CLASSIFICATION	cnd may be null if next() called us $NON-NLS-1$
WITHOUT_CLASSIFICATION	Evaluation occurs when nbLoops is not yet evaluated or when nbLoops is equal to special value INFINITE_LOOP_COUNT
WITHOUT_CLASSIFICATION	now evaluate the condition using JavaScript
WITHOUT_CLASSIFICATION	We should only evalute the condition if it is the first time ( first "iteration" ) we are called. For subsequent calls, we are inside the IfControllerGroup, so then we just pass the control to the next item inside the if control
WITHOUT_CLASSIFICATION	If-test is false, need to re-initialize indexes
WITHOUT_CLASSIFICATION	for getIterCount
WITHOUT_CLASSIFICATION	Runtime is zero - no point staying around
WITHOUT_CLASSIFICATION	??
WITHOUT_CLASSIFICATION	This is needed for OnceOnly to work like other Loop Controllers
WITHOUT_CLASSIFICATION	Only create the map if it is required
WITHOUT_CLASSIFICATION	May be replaced by RandomOrderController
WITHOUT_CLASSIFICATION	incrementCurrent();
WITHOUT_CLASSIFICATION	must be a controller
WITHOUT_CLASSIFICATION	must be a controller
WITHOUT_CLASSIFICATION	can only match once
WITHOUT_CLASSIFICATION	i.e. "true"
WITHOUT_CLASSIFICATION	default true for compatibility
WITHOUT_CLASSIFICATION	/ Transaction Controller - parent
WITHOUT_CLASSIFICATION	Check if transaction is done
WITHOUT_CLASSIFICATION	This transaction is done
WITHOUT_CLASSIFICATION	Sample the children of the transaction
WITHOUT_CLASSIFICATION	If we do not get any sub samplers, the transaction is done
WITHOUT_CLASSIFICATION	Transaction Controller - additional sample
WITHOUT_CLASSIFICATION	must be the start of the subtree
WITHOUT_CLASSIFICATION	Assume success
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.createTestElement()
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.createTestElement()
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.modifyTestElement(TestElement)
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.modifyTestElement(TestElement)
WITHOUT_CLASSIFICATION	Standalone
WITHOUT_CLASSIFICATION	Embedded
WITHOUT_CLASSIFICATION	This transaction is done
WITHOUT_CLASSIFICATION	Assume success
WITHOUT_CLASSIFICATION	Check if it is the start of a new transaction must be the start of the subtree
WITHOUT_CLASSIFICATION	We need to call the super.next, instead of this.next, which is done in GenericController, because if we call this.next(), it will return the TransactionSampler, and we do not want that. We need to get the next real sampler or controller
WITHOUT_CLASSIFICATION	Must be the end of the controller
WITHOUT_CLASSIFICATION	We have sampled one of our children
WITHOUT_CLASSIFICATION	We must set res to null now, before sending the event for the transaction, so that we can ignore that event in our sampleOccured method
WITHOUT_CLASSIFICATION	Check if we are still sampling our children
WITHOUT_CLASSIFICATION	Accumulate waiting time for later
WITHOUT_CLASSIFICATION	log.warn("Constructor only intended for use in testing");
WITHOUT_CLASSIFICATION	ensure name is available for debugging
WITHOUT_CLASSIFICATION	It is the JMeterThread which knows how to sample a real sampler
WITHOUT_CLASSIFICATION	Another subsample for the transaction
WITHOUT_CLASSIFICATION	Set Response code of transaction
WITHOUT_CLASSIFICATION	The transaction fails if any sub sample fails
WITHOUT_CLASSIFICATION	Add the sub result to the transaction result
WITHOUT_CLASSIFICATION	Add current time to total for later use (exclude pause time)
WITHOUT_CLASSIFICATION	If selected, then generate parent sample, otherwise as per original controller
WITHOUT_CLASSIFICATION	if selected, add duration of timers to total runtime
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.createTestElement()
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.createTestElement()
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.createTestElement()
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.createTestElement()
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.modifyTestElement(TestElement)
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.modifyTestElement(TestElement)
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.modifyTestElement(TestElement)
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.modifyTestElement(TestElement)
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	The Loop Controller panel can be displayed standalone or inside another panel. For standalone, we want to display the TITLE, NAME, etc. (everything). However, if we want to display it within another panel, we just display the Loop Count fields (not the TITLE and NAME).
WITHOUT_CLASSIFICATION	The Loop Controller panel can be displayed standalone or inside another panel. For standalone, we want to display the TITLE, NAME, etc. (everything). However, if we want to display it within another panel, we just display the Loop Count fields (not the TITLE and NAME).
WITHOUT_CLASSIFICATION	Standalone
WITHOUT_CLASSIFICATION	Standalone
WITHOUT_CLASSIFICATION	Embedded
WITHOUT_CLASSIFICATION	Embedded
WITHOUT_CLASSIFICATION	TEXT FIELD $NON-NLS-1$
WITHOUT_CLASSIFICATION	LOOP LABEL $NON-NLS-1$
WITHOUT_CLASSIFICATION	SECONDS LABEL $NON-NLS-1$
WITHOUT_CLASSIFICATION	TEXT FIELD $NON-NLS-1$
WITHOUT_CLASSIFICATION	This check-box defines whether to save WorkBench content or not
WITHOUT_CLASSIFICATION	FOREVER CHECKBOX $NON-NLS-1$
WITHOUT_CLASSIFICATION	Don't wrap this error - display it as is
WITHOUT_CLASSIFICATION	Condition LABEL
WITHOUT_CLASSIFICATION	limit the changes to client only test elements
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	TEXT FIELD $NON-NLS-1$
WITHOUT_CLASSIFICATION	Use expression instead of Javascript $NON-NLS-1$
WITHOUT_CLASSIFICATION	Evaluate All checkbox $NON-NLS-1$
WITHOUT_CLASSIFICATION	TEXT FIELD This means exit if last sample failed $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Used by both StandardJMeterEngine and ClientJMeterEngine. In the latter case, only ResultCollectors are updated, as only these are relevant to the client, and updating other elements causes all sorts of problems. skip certain processing for remote tests
WITHOUT_CLASSIFICATION	Called by JMeter ListenToTest if remoteStop is true
WITHOUT_CLASSIFICATION	Sent later
WITHOUT_CLASSIFICATION	Should we create our own copy of the RMI registry?
WITHOUT_CLASSIFICATION	Create this object using the specified port (0 means anonymous)
WITHOUT_CLASSIFICATION	should perhaps be log.warn, but this causes the client-server test to fail
WITHOUT_CLASSIFICATION	Throw an Exception to ensure caller knows ...
WITHOUT_CLASSIFICATION	close window where another remote client might jump in
WITHOUT_CLASSIFICATION	sets active = true
WITHOUT_CLASSIFICATION	Mail on userlist reported NPE here - looks like only happens if there are network errors, but check anyway
WITHOUT_CLASSIFICATION	Called by: - ClientJMeterEngine.exe() which is called on remoteStop
WITHOUT_CLASSIFICATION	Tidy up any objects we created
WITHOUT_CLASSIFICATION	Help with garbage control
WITHOUT_CLASSIFICATION	The list of current thread groups; may be setUp, main, or tearDown.
WITHOUT_CLASSIFICATION	May be null if called from Unit test
WITHOUT_CLASSIFICATION	May be null if called from Unit test
WITHOUT_CLASSIFICATION	e.g. not yet started
WITHOUT_CLASSIFICATION	ConcurrentHashMap does not need synch. here
WITHOUT_CLASSIFICATION	End of code to allow engine to be controlled remotely
WITHOUT_CLASSIFICATION	Is testplan serialised?
WITHOUT_CLASSIFICATION	Can't use for loop here because we remove elements
WITHOUT_CLASSIFICATION	Deliberate use of deprecated method
WITHOUT_CLASSIFICATION	we totally failed to stop the test
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	ConcurrentHashMap does not need synch. here
WITHOUT_CLASSIFICATION	Allow engine and threads to be stopped from outside a thread e.g. from beanshell server Assumes that there is only one instance of the engine at any one time so it is not guaranteed to work ...
WITHOUT_CLASSIFICATION	ConcurrentHashMap does not need synch. here
WITHOUT_CLASSIFICATION	ConcurrentHashMap does not need synch. here
WITHOUT_CLASSIFICATION	else will be done by threadFinished()
WITHOUT_CLASSIFICATION	no point continuing
WITHOUT_CLASSIFICATION	TL - S&E
WITHOUT_CLASSIFICATION	Merge in any additional test listeners currently only used by the function parser
WITHOUT_CLASSIFICATION	no longer needed
WITHOUT_CLASSIFICATION	for each thread group, generate threads hand each thread the sampler controller and the listeners, and the timer
WITHOUT_CLASSIFICATION	for each setup thread group
WITHOUT_CLASSIFICATION	for each setup thread group
WITHOUT_CLASSIFICATION	wait for all Setup Threads To Exit
WITHOUT_CLASSIFICATION	The groups have all completed now
WITHOUT_CLASSIFICATION	Here's where the test really starts. Run a Full GC now: it's no harm at all (just delays test start by a tiny amount) and hitting one too early in the test can impair results for short tests.
WITHOUT_CLASSIFICATION	still running at this point, i.e. setUp was not cancelled for each thread group
WITHOUT_CLASSIFICATION	wait for all Test Threads To Exit
WITHOUT_CLASSIFICATION	The groups have all completed now
WITHOUT_CLASSIFICATION	wait for Post threads to stop
WITHOUT_CLASSIFICATION	ConcurrentHashMap does not need protecting
WITHOUT_CLASSIFICATION	Will be null if StopTest thread has started
WITHOUT_CLASSIFICATION	Needs to be run in a separate thread to allow RMI call to return OK
WITHOUT_CLASSIFICATION	Allow RMI to complete
WITHOUT_CLASSIFICATION	TL - all
WITHOUT_CLASSIFICATION	don't add the timer
WITHOUT_CLASSIFICATION	Should we match using regexes?
WITHOUT_CLASSIFICATION	Created during class init; not modified thereafter
WITHOUT_CLASSIFICATION	ignore self
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	i.e. shutdown/stopped during main thread groups re-enable for tearDown if necessary
WITHOUT_CLASSIFICATION	ignore Setup and Post here. We could have filtered the searcher. but then future Thread Group objects wouldn't execute.
WITHOUT_CLASSIFICATION	Must not convert TestElement.gui_class etc
WITHOUT_CLASSIFICATION	end of thread groups No TGs found
WITHOUT_CLASSIFICATION	This should be enough to allow server to exit. default is false
WITHOUT_CLASSIFICATION	Remote exit Called by RemoteJMeterEngineImpl.rexit() and by notifyTestListenersOfEnd() iff exitAfterTest is true; in turn that is called by the run() method and the StopTest class also called
WITHOUT_CLASSIFICATION	Classnames must contain this string [.functions.] $NON-NLS-1$ Classnames must not contain this string [.gui.] $NON-NLS-1$
WITHOUT_CLASSIFICATION	Check can cast for clone Don't clone NoThreadClone unless honourNoThreadClone == false
WITHOUT_CLASSIFICATION	clone will produce correct type
WITHOUT_CLASSIFICATION	Dummy methods needed by Function interface
WITHOUT_CLASSIFICATION	For use by FunctionHelper
WITHOUT_CLASSIFICATION	For use by FunctionHelper
WITHOUT_CLASSIFICATION	Handle escapes
WITHOUT_CLASSIFICATION	found "${"
WITHOUT_CLASSIFICATION	i.e. '\\'
WITHOUT_CLASSIFICATION	save leading text
WITHOUT_CLASSIFICATION	set to start of string
WITHOUT_CLASSIFICATION	Function does not exist, so treat as per missing variable
WITHOUT_CLASSIFICATION	variable, or function with no parameter list
WITHOUT_CLASSIFICATION	ensure that setParameters() is called.
WITHOUT_CLASSIFICATION	end of buffer
WITHOUT_CLASSIFICATION	store the following character
WITHOUT_CLASSIFICATION	Detect functionName() so this does not generate empty string as the parameter
WITHOUT_CLASSIFICATION	Normal exit occurs here
WITHOUT_CLASSIFICATION	Should not happen with StringReader
WITHOUT_CLASSIFICATION	Dropped out, i.e. did not find closing ')'
WITHOUT_CLASSIFICATION	Needed for serialisation testing
WITHOUT_CLASSIFICATION	The default title for the Menu bar
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	Process escaped characters Store the \
WITHOUT_CLASSIFICATION	The application name $NON-NLS-1$
WITHOUT_CLASSIFICATION	This is used to keep track of local (non-remote) tests The name is chosen to be an unlikely host-name $NON-NLS-1$
WITHOUT_CLASSIFICATION	Allow display/hide LoggerPanel
WITHOUT_CLASSIFICATION	Transparent JButton with no border
WITHOUT_CLASSIFICATION	Allow display/hide toolbar
WITHOUT_CLASSIFICATION	file New operation may set to null, so just return app name
WITHOUT_CLASSIFICATION	Allow display/hide Log Error/Fatal counter
WITHOUT_CLASSIFICATION	TestStateListener implementation
WITHOUT_CLASSIFICATION	enable drag&drop, install a custom transfer handler
WITHOUT_CLASSIFICATION	add the toolbar
WITHOUT_CLASSIFICATION	Check for file lists specifically
WITHOUT_CLASSIFICATION	used by AbstractReportGui
WITHOUT_CLASSIFICATION	helper method - also used by constructor
WITHOUT_CLASSIFICATION	This stores the state of the TestElement
WITHOUT_CLASSIFICATION	Ensure we use default bundle
WITHOUT_CLASSIFICATION	Sampler error action buttons
WITHOUT_CLASSIFICATION	are we saving the whole tree?
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	N.B. originally called clear() @see also Clearable
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	TEXTAREA
WITHOUT_CLASSIFICATION	allow for windows / chars in filename $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	BeanInfo objects also contain locale-sensitive data -- flush them away:
WITHOUT_CLASSIFICATION	$NON-NLS-1$ define AWT WM_CLASS string
WITHOUT_CLASSIFICATION	throws HeadlessException
WITHOUT_CLASSIFICATION	Defaults to continue
WITHOUT_CLASSIFICATION	space between borders and text
WITHOUT_CLASSIFICATION	Generates Configure pop-up dialogue for Listeners from all methods in SampleSaveConfiguration with the signature "boolean saveXXX()". There must be a corresponding "void setXXX(boolean)" method, and a property save_XXX which is used to name the field on the dialogue.
WITHOUT_CLASSIFICATION	Target server panel
WITHOUT_CLASSIFICATION	Limit length of log content
WITHOUT_CLASSIFICATION	If LOGGER_PANEL_MAX_LENGTH is 0, it means all log events are kept
WITHOUT_CLASSIFICATION	The current node is now updated
WITHOUT_CLASSIFICATION	Probably a missing jar
WITHOUT_CLASSIFICATION	Forget about all GUIs we've created so far: we'll need to re-created them all!
WITHOUT_CLASSIFICATION	FIrst make sure we save the content of the current GUI (since we will flush it away):
WITHOUT_CLASSIFICATION	Should we allow directories?
WITHOUT_CLASSIFICATION	Enable file revert action if a file is used
WITHOUT_CLASSIFICATION	If saveWorkBench
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	@see org.apache.jmeter.gui.action.Command#getActionNames()
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Now put the current GUI in place. [This code was copied from the EditCommand action -- we can't just trigger the action because that would populate the current node with the contents of the new GUI -- which is empty.] Fetch once Probably caused by unit testing on headless system
WITHOUT_CLASSIFICATION	strPathsOrJars - pathnames or jarfiles to search for classes classNames - required parent class(es) or annotations $NON-NLS-1$ innerClasses - should we include inner classes? contains - classname should contain this string Ignore the classes which are specific to the reporting tool $NON-NLS-1$ notContains - classname should not contain this string annotations - true if classnames are annotations
WITHOUT_CLASSIFICATION	Whether to skip the delete confirmation dialogue $NON-NLS-1$
WITHOUT_CLASSIFICATION	Save parent node for later
WITHOUT_CLASSIFICATION	Ignored
WITHOUT_CLASSIFICATION	set the window visible immediately
WITHOUT_CLASSIFICATION	N.B. this only reloads if necessary (ignores the reference)
WITHOUT_CLASSIFICATION	Add this node
WITHOUT_CLASSIFICATION	Add all the child nodes of the node we are adding
WITHOUT_CLASSIFICATION	Ensure the dialog is only created when it is first needed In turn this avoids scanning the templates until first needed
WITHOUT_CLASSIFICATION	Make sure the file ends with proper extension
WITHOUT_CLASSIFICATION	Check if the user is trying to save to an existing file
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Prevent instantiation
WITHOUT_CLASSIFICATION	Prevent instantiation
WITHOUT_CLASSIFICATION	VK_PLUS + CTRL_DOWN_MASK did not work...
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Note: Windows user preferences are stored relative to: HKEY_CURRENT_USER\Software\JavaSoft\Prefs
WITHOUT_CLASSIFICATION	Do not save, user does not want to overwrite
WITHOUT_CLASSIFICATION	Only update the stored copy of the tree for a full save refetch, because convertSubTree affects it
WITHOUT_CLASSIFICATION	package protected to allow access from test code
WITHOUT_CLASSIFICATION	requires JMeterTreeNode
WITHOUT_CLASSIFICATION	we can only move a single node
WITHOUT_CLASSIFICATION	move to the parent
WITHOUT_CLASSIFICATION	move as a child of the next sibling
WITHOUT_CLASSIFICATION	Commented as per sebb http:mail-archives.apache.org/mod_mbox/jmeter-dev/201307.mbox/%3CCAOGo0VZ0z3GMbfsq_gSB%2Bp7nTUqLng6Gy2ecvYbD8_AKb-Dt5w%40mail.gmail.com%3E
WITHOUT_CLASSIFICATION	So elements can only be added as children
WITHOUT_CLASSIFICATION	select the node
WITHOUT_CLASSIFICATION	We must ask the user if it is ok to close current project
WITHOUT_CLASSIFICATION	Load the file for this recent file command
WITHOUT_CLASSIFICATION	Get the preference for the recent files
WITHOUT_CLASSIFICATION	Create the menu item
WITHOUT_CLASSIFICATION	Use the index as the name, used when processing the action
WITHOUT_CLASSIFICATION	Set the KeyStroke to use
WITHOUT_CLASSIFICATION	Add the menu item
WITHOUT_CLASSIFICATION	Add separator as the last item
WITHOUT_CLASSIFICATION	Update menu items to reflect recent files
WITHOUT_CLASSIFICATION	Update menu items to reflect recent files
WITHOUT_CLASSIFICATION	Check if the new file is already in the recent list
WITHOUT_CLASSIFICATION	Add the new file at the start of the list
WITHOUT_CLASSIFICATION	Remove the last item from the list if it was a brand new file
WITHOUT_CLASSIFICATION	Store the recent files
WITHOUT_CLASSIFICATION	Assume no recent files
WITHOUT_CLASSIFICATION	Update the menu items
WITHOUT_CLASSIFICATION	Get the menu item
WITHOUT_CLASSIFICATION	At least one recent file menu item is visible
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ reduce font
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.gui.action.AbstractAction#getActionNames()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.gui.action.AbstractAction#doAction(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	reset previous result
WITHOUT_CLASSIFICATION	Hide Window on ESC
WITHOUT_CLASSIFICATION	Do not save, user does not want to overwrite
WITHOUT_CLASSIFICATION	Note: Windows user preferences are stored relative to: HKEY_CURRENT_USER\Software\JavaSoft\Prefs
WITHOUT_CLASSIFICATION	Limit the length of the menu text if needed
WITHOUT_CLASSIFICATION	If we are merging in another test plan, we know the test plan is dirty now
WITHOUT_CLASSIFICATION	Only check if we have not found any differences so far
WITHOUT_CLASSIFICATION	Do search on Enter
WITHOUT_CLASSIFICATION	do search
WITHOUT_CLASSIFICATION	Don't clear the plan
WITHOUT_CLASSIFICATION	Get the file name of the current project
WITHOUT_CLASSIFICATION	Check if the user has loaded any file
WITHOUT_CLASSIFICATION	Check if the user wants to drop any changes
WITHOUT_CLASSIFICATION	Check if the user wants to revert
WITHOUT_CLASSIFICATION	Close the current project
WITHOUT_CLASSIFICATION	Reload the project
WITHOUT_CLASSIFICATION	Spaces are not allowed in property names read from files
WITHOUT_CLASSIFICATION	e.g. windows xp => windows
WITHOUT_CLASSIFICATION	get the JComponent from the visualizer
WITHOUT_CLASSIFICATION	$NON-NLS-1$ jmeter.properties
WITHOUT_CLASSIFICATION	Engine may be null if it has not correctly started
WITHOUT_CLASSIFICATION	GuiPackage.getInstance().getMainFrame().showStoppingMessage(name);
WITHOUT_CLASSIFICATION	Minimal dimensions for dialog box
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Don't clear the plan
WITHOUT_CLASSIFICATION	Check if the user wants to drop any changes
WITHOUT_CLASSIFICATION	Get the string given from the choose and check the file extension.
WITHOUT_CLASSIFICATION	Check if the user wants to create from template
WITHOUT_CLASSIFICATION	Bottom buttons bar
WITHOUT_CLASSIFICATION	center position and 50% of screen size
WITHOUT_CLASSIFICATION	Created by XStream reading templates.xml
WITHOUT_CLASSIFICATION	N.B. Must use LinkedHashMap for field type XStream creates a plain HashMap if one uses Map as the field type.
WITHOUT_CLASSIFICATION	templates i
WITHOUT_CLASSIFICATION	field TemplateManager#templates $NON-NLS-1$
WITHOUT_CLASSIFICATION	field Template#name $NON-NLS-1$
WITHOUT_CLASSIFICATION	for relative links
WITHOUT_CLASSIFICATION	i.e. no disabled icon found
WITHOUT_CLASSIFICATION	Must therefore set the enabled icon so there is at least some icon
WITHOUT_CLASSIFICATION	super(new JMeterTreeNode(new WorkBenchGui().createTestElement(), null)); TestElement tp = new TestPlanGui().createTestElement(); initTree(tp);
WITHOUT_CLASSIFICATION	super(new JMeterTreeNode(new WorkBench(), null)); TestElement tp = new TestPlan(); initTree(tp, new WorkBench());
WITHOUT_CLASSIFICATION	The node can be added in non GUI mode at startup
WITHOUT_CLASSIFICATION	Remove the workbench and testplan nodes
WITHOUT_CLASSIFICATION	Insert the test plan node
WITHOUT_CLASSIFICATION	endWindow = window;
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Check for file lists specifically
WITHOUT_CLASSIFICATION	Check for file lists specifically
WITHOUT_CLASSIFICATION	This check the state of the TestElement and if returns false it disable the loaded node
WITHOUT_CLASSIFICATION	Init the tree Assumes this is only called from GUI mode
WITHOUT_CLASSIFICATION	Let others know that the tree content has changed. This should not be necessary, but without it, nodes are not shown when the user uses the Close menu item
WITHOUT_CLASSIFICATION	Container endWindow; JPopupMenu pop;
WITHOUT_CLASSIFICATION	Get the Main Frame.
WITHOUT_CLASSIFICATION	Close any Main Menu that is open
WITHOUT_CLASSIFICATION	updateMainMenu(((JMeterGUIComponent) getCurrentNode().getUserObject()).createPopupMenu());
WITHOUT_CLASSIFICATION	hold the nodes that should be removed on drop
WITHOUT_CLASSIFICATION	only allow a drag&drop inside the current jvm
WITHOUT_CLASSIFICATION	sort the selected tree path by row
WITHOUT_CLASSIFICATION	if child and a parent are selected : only keep the parent
WITHOUT_CLASSIFICATION	remove unneeded nodes
WITHOUT_CLASSIFICATION	the tree accepts a jmx file
WITHOUT_CLASSIFICATION	the copy is disabled
WITHOUT_CLASSIFICATION	Do not allow a drop on the drag source selections.
WITHOUT_CLASSIFICATION	TestPlan and WorkBench are the only children of the root
WITHOUT_CLASSIFICATION	Do not allow a non-leaf node to be moved into one of its children
WITHOUT_CLASSIFICATION	re-use node association logic
WITHOUT_CLASSIFICATION	deal with the jmx files
WITHOUT_CLASSIFICATION	Get drop location and mode
WITHOUT_CLASSIFICATION	drop mode == DropMode.ON
WITHOUT_CLASSIFICATION	first copy the children as the call to copy.add will modify the collection we're iterating on
WITHOUT_CLASSIFICATION	expand the destination node
WITHOUT_CLASSIFICATION	If icon has not been defined, then use GUI_CLASS property
WITHOUT_CLASSIFICATION	may be null during startup
WITHOUT_CLASSIFICATION	Override in order to provide type safety
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$$NON-NLS-2$
WITHOUT_CLASSIFICATION	close.setPreferredSize(d);
WITHOUT_CLASSIFICATION	c.gridx = 1; c.gridy = 2; g.setConstraints(close, c); panel.add(close);
WITHOUT_CLASSIFICATION	JFileChooser jfc = null;
WITHOUT_CLASSIFICATION	for use by test code only
WITHOUT_CLASSIFICATION	Instance Variables
WITHOUT_CLASSIFICATION	Constructors
WITHOUT_CLASSIFICATION	Modifying
WITHOUT_CLASSIFICATION	Override the implementations of the superclass, forwarding all methods from the CellEditor interface to our delegate.
WITHOUT_CLASSIFICATION	Implementing the TreeCellEditor Interface
WITHOUT_CLASSIFICATION	Implementing the CellEditor Interface
WITHOUT_CLASSIFICATION	Protected EditorDelegate class
WITHOUT_CLASSIFICATION	This won't work right if we remove components. But we don't, so I'm not going to worry about it right now.
WITHOUT_CLASSIFICATION	Datefields are not thread-safe $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	HELP MENU $NON-NLS-1$
WITHOUT_CLASSIFICATION	OPTIONS MENU $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Dummy constructor to allo JUnit tests to work
WITHOUT_CLASSIFICATION	Do nothing; the current time will be returned
WITHOUT_CLASSIFICATION	Convert position in buffer to Calendar type Assumes that pos >=0 (which is true for getCaretPosition())
WITHOUT_CLASSIFICATION	if beyond the end then set to the end
WITHOUT_CLASSIFICATION	Update the current field. The addend is only expected to be +1/-1, but other values will work. N.B. the roll() method only supports changes by a single unit - up or down
WITHOUT_CLASSIFICATION	JMenu reportMenu; JMenuItem analyze;
WITHOUT_CLASSIFICATION	Restore position
WITHOUT_CLASSIFICATION	List for recent files menu items
WITHOUT_CLASSIFICATION	Lists for remote engines menu items
WITHOUT_CLASSIFICATION	If the Add menu already exists, remove it.
WITHOUT_CLASSIFICATION	Insert the Add menu as the first menu item in the Edit menu.
WITHOUT_CLASSIFICATION	Called by MainFrame#setEditMenu() which is called by EditCommand#doAction and GuiPackage#localeChanged
WITHOUT_CLASSIFICATION	There was a NPE being thrown without the null check here.. JKB
WITHOUT_CLASSIFICATION	If we are enabling the Edit-->Add menu item, then we also need to enable the Edit menu. The Edit menu may already be enabled, but there's no harm it trying to enable it again.
WITHOUT_CLASSIFICATION	show the classname to the user
WITHOUT_CLASSIFICATION	This is used by the ChangeLanguage class to define the Locale
WITHOUT_CLASSIFICATION	Also used by org.apache.jmeter.resources.PackageTest
WITHOUT_CLASSIFICATION	Note: the item name is used by ChangeLanguage to create a Locale for that language, so need to ensure that the language strings are valid If they exist, use the Locale language constants. Also, need to ensure that the names are valid resource entries too.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Overrides superclass method
WITHOUT_CLASSIFICATION	From the Java Look and Feel Guidelines: If all items in a menu are disabled, then disable the menu. Makes sense.
WITHOUT_CLASSIFICATION	Listener on model changes to maintain correct focusability
WITHOUT_CLASSIFICATION	Add the recent files, which will also add a separator that is visible when needed
WITHOUT_CLASSIFICATION	override action behaviour
WITHOUT_CLASSIFICATION	This is also used by LookAndFeelCommand
WITHOUT_CLASSIFICATION	For testing only at present
WITHOUT_CLASSIFICATION	Mostly delegates to model
WITHOUT_CLASSIFICATION	Set default single model
WITHOUT_CLASSIFICATION	Next two methods implement new API by delegation to model
WITHOUT_CLASSIFICATION	Restore state display
WITHOUT_CLASSIFICATION	Listen for enable changes
WITHOUT_CLASSIFICATION	Empty override of superclass method
WITHOUT_CLASSIFICATION	Convenience cast
WITHOUT_CLASSIFICATION	Assume that the UI has not changed since the checkbos was created
WITHOUT_CLASSIFICATION	Iterate state
WITHOUT_CLASSIFICATION	Overrides of superclass methods
WITHOUT_CLASSIFICATION	Fire ActionEvent
WITHOUT_CLASSIFICATION	force the events to fire
WITHOUT_CLASSIFICATION	Empty overrides of superclass methods
WITHOUT_CLASSIFICATION	Send ItemEvent
WITHOUT_CLASSIFICATION	Set internal state
WITHOUT_CLASSIFICATION	Send ChangeEvent
WITHOUT_CLASSIFICATION	derived from: http:www.coderanch.com/t/342563/GUI/java/TriState-CheckBox
WITHOUT_CLASSIFICATION	Nimbus works - after a fashion - with this
WITHOUT_CLASSIFICATION	drawCross(g, x, y);
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$;
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	href="#"
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	This won't work right if we remove components. But we don't, so I'm not going to worry about it right now.
WITHOUT_CLASSIFICATION	Predefined strings for makeMenu(). These are used as menu categories in the menuMap Hashmap, and also for resource lookup in messages.properties
WITHOUT_CLASSIFICATION	Needed for all but Nimbus Nimbus works - after a fashion - with this Nimbus works - after a fashion - with this reset
WITHOUT_CLASSIFICATION	private void drawCross(Graphics g, int x, int y) { g.drawLine(x + (iconWidth - 4), y + 2, x + 3, y + (iconHeight - 5)); g.drawLine(x + (iconWidth - 4), y + 3, x + 3, y + (iconHeight - 4)); g.drawLine(x + 3, y + 2, x + (iconWidth - 4), y + (iconHeight - 5)); g.drawLine(x + 3, y + 3, x + (iconWidth - 4), y + (iconHeight - 4)); }
WITHOUT_CLASSIFICATION	paintIcon
WITHOUT_CLASSIFICATION	For use by test code only
WITHOUT_CLASSIFICATION	MENU_ADD_xxx - controls which items are in the ADD menu MENU_PARENT_xxx - controls which items are in the Insert Parent menu
WITHOUT_CLASSIFICATION	if type is unknown
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ Don't try to instantiate these
WITHOUT_CLASSIFICATION	No point instantiating class
WITHOUT_CLASSIFICATION	Allow headless testing
WITHOUT_CLASSIFICATION	Don't add it again
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Empty box $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Can't add a Workbench anywhere
WITHOUT_CLASSIFICATION	Can't add a TestPlan anywhere
WITHOUT_CLASSIFICATION	Force TestFragment to only be pastable under a Test Plan
WITHOUT_CLASSIFICATION	allow everything else
WITHOUT_CLASSIFICATION	Samplers and Controllers need not apply ... but AbstractThreadGroup (Controller) is OK
WITHOUT_CLASSIFICATION	AbstractThreadGroup is only allowed under a TestPlan
WITHOUT_CLASSIFICATION	Includes thread group; anything goes
WITHOUT_CLASSIFICATION	Samplers and Controllers need not apply ...
WITHOUT_CLASSIFICATION	All other
WITHOUT_CLASSIFICATION	Is any node an instance of one of the classes?
WITHOUT_CLASSIFICATION	Is any node an instance of one of the classes, but not an exception?
WITHOUT_CLASSIFICATION	Methods used for Test cases
WITHOUT_CLASSIFICATION	all table cells are editable
WITHOUT_CLASSIFICATION	Close action dialog box when tapping Escape key
WITHOUT_CLASSIFICATION	Prepare dialog box
WITHOUT_CLASSIFICATION	determine location on screen
WITHOUT_CLASSIFICATION	must be CLOSE or SAVE_CLOSE COMMANDS
WITHOUT_CLASSIFICATION	text backup
WITHOUT_CLASSIFICATION	double click
WITHOUT_CLASSIFICATION	view only
WITHOUT_CLASSIFICATION	double (pressed) click
WITHOUT_CLASSIFICATION	in main table (evt mousePressed because cell is editable)
WITHOUT_CLASSIFICATION	else do nothing (cell isn't a string to edit)
WITHOUT_CLASSIFICATION	add the button to the button group
WITHOUT_CLASSIFICATION	add the button
WITHOUT_CLASSIFICATION	implicit return empty toolbar if icons == null
WITHOUT_CLASSIFICATION	Get the standard toolbar properties
WITHOUT_CLASSIFICATION	already reported by IconToolbarBean
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	in seconds
WITHOUT_CLASSIFICATION	in seconds
WITHOUT_CLASSIFICATION	If a table cell is being edited, we must cancel the editing before deleting the row
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	this.setPreferredSize(new Dimension(400,150));
WITHOUT_CLASSIFICATION	i.e. bypass the Functors
WITHOUT_CLASSIFICATION	Mainly needed for unit test Serialisable tests
WITHOUT_CLASSIFICATION	N.B. NoThreadClone is used to ensure that the testStarted() methods will share the same instance as the sampleOccured() methods, so the testStarted() method can fetch the Totals accumulator object for the samples to be stored in.
WITHOUT_CLASSIFICATION	Ensure that a report is not skipped if we are slightly late in checking the time.
WITHOUT_CLASSIFICATION	This map allows summarisers with the same name to contribute to the same totals.
WITHOUT_CLASSIFICATION	@GuardedBy("accumulators") - needed to ensure consistency between this and instanceCount
WITHOUT_CLASSIFICATION	@GuardedBy("accumulators") number of active tests
WITHOUT_CLASSIFICATION	Cached copy of Totals for this instance. The variables do not need to be synchronised, as they are not shared between threads However the contents do need to be synchronized.
WITHOUT_CLASSIFICATION	@GuardedBy("myTotals")
WITHOUT_CLASSIFICATION	Name of the accumulator. Set up by testStarted().
WITHOUT_CLASSIFICATION	Constructor is initially called once for each occurrence in the test plan. For GUI, several more instances are created. Then clear is called at start of test. Called several times during test startup. The name will not necessarily have been set at this point.
WITHOUT_CLASSIFICATION	Contains the items needed to collect stats for a summariser
WITHOUT_CLASSIFICATION	copy the data to minimise the synch time
WITHOUT_CLASSIFICATION	stop double-reporting
WITHOUT_CLASSIFICATION	Only if we have updated them
WITHOUT_CLASSIFICATION	$NON-NLS-1$ for intermediate use output line buffer
WITHOUT_CLASSIFICATION	Rate is effectively infinite
WITHOUT_CLASSIFICATION	e.g. NullPointerException
WITHOUT_CLASSIFICATION	Avalon only
WITHOUT_CLASSIFICATION	Avalon only
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Only print final delta if there were some samples in the delta and there has been at least one sample reported previously
WITHOUT_CLASSIFICATION	rounded seconds No point displaying decimals (less than 1% error) decimal would be zero
WITHOUT_CLASSIFICATION	fractional seconds This will round
WITHOUT_CLASSIFICATION	The testStarted/testEnded methods are called at the start and end of a test. However, when a test is run on multiple nodes, there is no guarantee that all the testStarted() methods will be called before all the threadStart() or sampleOccurred() methods for other threads - nor that testEnded() will only be called after all sampleOccurred() calls. The ordering is only guaranteed within a single test.
WITHOUT_CLASSIFICATION	We're not done yet
WITHOUT_CLASSIFICATION	boolean autoScale = true;
WITHOUT_CLASSIFICATION	setup drawing area
WITHOUT_CLASSIFICATION	draw grid
WITHOUT_CLASSIFICATION	draw axis
WITHOUT_CLASSIFICATION	draw data lines
WITHOUT_CLASSIFICATION	Constructor is initially called once for each occurrence in the test plan For GUI, several more instances are created Then clear is called at start of test Called several times during test startup The name will not necessarily have been set at this point.
WITHOUT_CLASSIFICATION	e.g. in non-GUI mode
WITHOUT_CLASSIFICATION	This string is used to identify local test runs, so must not be a valid host name $NON-NLS-1$
WITHOUT_CLASSIFICATION	Static variables
WITHOUT_CLASSIFICATION	Lock used to guard static mutable variables
WITHOUT_CLASSIFICATION	@GuardedBy("LOCK")
WITHOUT_CLASSIFICATION	@GuardedBy("LOCK")
WITHOUT_CLASSIFICATION	Keep track of the file writer and the configuration, as the instance used to close them is not the same as the instance that creates them. This means one cannot use the saved PrintWriter or use getSaveConfig()
WITHOUT_CLASSIFICATION	Instance variables (guarded by volatile)
WITHOUT_CLASSIFICATION	Unfortunately AbstractTestElement does not call super.clone()
WITHOUT_CLASSIFICATION	successOnly and errorOnly cannot both be set
WITHOUT_CLASSIFICATION	No need for the hook now
WITHOUT_CLASSIFICATION	Only add the hook once
WITHOUT_CLASSIFICATION	No point reading the file if there's no visualiser
WITHOUT_CLASSIFICATION	probably Avalon format
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Only for use by CSVSaveService
WITHOUT_CLASSIFICATION	Constructor is initially called once for each occurrence in the test plan For GUI, several more instances are created Then clear is called at start of test Called several times during test startup The name will not necessarily have been set at this point.
WITHOUT_CLASSIFICATION	@GuardedBy("LOCK")
WITHOUT_CLASSIFICATION	@GuardedBy("LOCK")
WITHOUT_CLASSIFICATION	We are processing XML Assume XStream
WITHOUT_CLASSIFICATION	Ensure that the sample save config is not shared between copied nodes N.B. clone only seems to be used for client-server tests
WITHOUT_CLASSIFICATION	Find the name of the directory containing the file and create it - if there is one
WITHOUT_CLASSIFICATION	TODO Charset ? Get the first line, and see if it is XML
WITHOUT_CLASSIFICATION	Can't do it as a static initialisation, because SaveService is being constructed when this is called
WITHOUT_CLASSIFICATION	Write the EOL separately so we generate LF line ends on Unix and Windows $NON-NLS-1$
WITHOUT_CLASSIFICATION	Write the EOL separately so we generate LF line ends on Unix and Windows $NON-NLS-1$
WITHOUT_CLASSIFICATION	Added in version 1.1 $NON-NLS-1$
WITHOUT_CLASSIFICATION	returns false if directory already exists, so need to check again
WITHOUT_CLASSIFICATION	else if might have been created by another process so not a problem
WITHOUT_CLASSIFICATION	returns false if the file did not contain the terminator
WITHOUT_CLASSIFICATION	found the string
WITHOUT_CLASSIFICATION	reads to end of line OR end of file
WITHOUT_CLASSIFICATION	!saveAsXml
WITHOUT_CLASSIFICATION	Truncate the file
WITHOUT_CLASSIFICATION	should throw exception back to caller
WITHOUT_CLASSIFICATION	Used by: MonitorHealthVisualizer.add(SampleResult res)
WITHOUT_CLASSIFICATION	+ JMX property names; do not change
WITHOUT_CLASSIFICATION	- JMX property names
WITHOUT_CLASSIFICATION	Constructor for use during startup (intended for non-GUI use) @param name of summariser
WITHOUT_CLASSIFICATION	This is called once for each occurrence in the test plan, before the start of the test. The super.clear() method clears the name (and all other properties), so it is called last.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	NOTUSED private static final String DATABASE = "db"; $NON_NLS-1$
WITHOUT_CLASSIFICATION	Only for use by CSVSaveService
WITHOUT_CLASSIFICATION	Associate sample with file name
WITHOUT_CLASSIFICATION	Mutable int to keep track of sample count
WITHOUT_CLASSIFICATION	chunk the output if necessary
WITHOUT_CLASSIFICATION	Should we save the sample?
WITHOUT_CLASSIFICATION	finish processing samples
WITHOUT_CLASSIFICATION	Needed to avoid Class cast error in Clear.java
WITHOUT_CLASSIFICATION	may be the empty string
WITHOUT_CLASSIFICATION	client log file
WITHOUT_CLASSIFICATION	N.B. to add a new field, remember the following - static _xyz - instance xyz=_xyz - clone s.xyz = xyz (perhaps) - setXyz(boolean) - saveXyz() - update SampleSaveConfigurationConverter to add new fields to marshall() and shouldSerialiseMember() - update SampleResultConverter and/or HTTPSampleConverter - update CSVSaveService: CSV_XXXX, makeResultFromDelimitedString, printableFieldNamesToString, static{} - update messages.properties to add save_xyz entry - update jmeter.properties to add new property - update listeners.xml to add new property, CSV and XML names etc. - take screenshot sample_result_config.png - update listeners.xml and component_reference.xml with new dimensions (might not change)
WITHOUT_CLASSIFICATION	Not currently needed by any Remoteable classes Anyway, would probably be too expensive in terms of network traffic void testIterationStart(LoopIterationEvent event);
WITHOUT_CLASSIFICATION	ensure output is flushed
WITHOUT_CLASSIFICATION	server log file
WITHOUT_CLASSIFICATION	Holds details of which sample attributes to save. The pop-up dialogue for this is created by the class SavePropertyDialog, which assumes: For each field XXX - methods have the signature "boolean saveXXX()" - a corresponding "void setXXX(boolean)" method - messages.properties contains the key save_XXX
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	--------------------------------------------------------------------- PROPERTY FILE CONSTANTS ---------------------------------------------------------------------
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	Initialise values from properties
WITHOUT_CLASSIFICATION	Save bytes read $NON_NLS-1$
WITHOUT_CLASSIFICATION	Save URL $NON_NLS-1$
WITHOUT_CLASSIFICATION	Save fileName for ResultSaver $NON_NLS-1$
WITHOUT_CLASSIFICATION	Save hostname for ResultSaver $NON_NLS-1$
WITHOUT_CLASSIFICATION	Don't save this, as it is derived from the time format
WITHOUT_CLASSIFICATION	$NON_NLS-1$ $NON_NLS-1$ $NON_NLS-1$ $NON_NLS-1$ $NON_NLS-1$ $NON_NLS-1$ $NON_NLS-1$
WITHOUT_CLASSIFICATION	Prepare for a pretty date
WITHOUT_CLASSIFICATION	Make transient as we don't want to save the SimpleDataFormat class Also, there's currently no way to change the value via the GUI, so changing it later means editting the JMX, or recreating the Listener.
WITHOUT_CLASSIFICATION	Defaults from properties:
WITHOUT_CLASSIFICATION	reversed compare allows for null
WITHOUT_CLASSIFICATION	Don't save this, as not settable via GUI
WITHOUT_CLASSIFICATION	Don't save this - only needed for processing CSV headers currently
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	optional processing instruction for line 2; e.g. <?xml-stylesheet type="text/xsl" href="../extras/jmeter-results-detail-report_21.xsl"?> $NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$ N.B. Remember to update the equals and hashCode methods when adding new variables.
WITHOUT_CLASSIFICATION	Give access to initial configuration
WITHOUT_CLASSIFICATION	is derived from properties only
WITHOUT_CLASSIFICATION	We know we are comparing to another SampleSaveConfiguration
WITHOUT_CLASSIFICATION	/ Start of standard save/set access methods /
WITHOUT_CLASSIFICATION	as per 2.0 branch
WITHOUT_CLASSIFICATION	/ End of standard field accessors /
WITHOUT_CLASSIFICATION	maintain relationship
WITHOUT_CLASSIFICATION	Defaults to empty;
WITHOUT_CLASSIFICATION	Used by old Save service
WITHOUT_CLASSIFICATION	Used by SampleSaveConfigurationConverter.unmarshall()
WITHOUT_CLASSIFICATION	Get appropriate sender class governed by the behaviour set in the JMeter property
WITHOUT_CLASSIFICATION	Static fields are set by the server when the class is constructed
WITHOUT_CLASSIFICATION	@GuardedBy("sampleStore")
WITHOUT_CLASSIFICATION	Locate the statistical sample colector
WITHOUT_CLASSIFICATION	store the new statistical result collector
WITHOUT_CLASSIFICATION	add a new wrapper samplevent
WITHOUT_CLASSIFICATION	Checking for and creating initial timestamp to check against
WITHOUT_CLASSIFICATION	synchronized(sampleStore)
WITHOUT_CLASSIFICATION	List of variable names to be saved in JTL files
WITHOUT_CLASSIFICATION	The values. Entries may be null, but there will be the correct number.
WITHOUT_CLASSIFICATION	The hostname cannot change during a run, so safe to cache it just once
WITHOUT_CLASSIFICATION	Only for Unit tests
WITHOUT_CLASSIFICATION	Needs to be accessible from Test code
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	OK
WITHOUT_CLASSIFICATION	variables maintained by server code @GuardedBy("sampleStore") maintain separate count of samples for speed
WITHOUT_CLASSIFICATION	The default used by {@link #setResponseData(String, String)}
WITHOUT_CLASSIFICATION	empty arrays which can be returned instead of null
WITHOUT_CLASSIFICATION	Never return null
WITHOUT_CLASSIFICATION	Never return null
WITHOUT_CLASSIFICATION	Never return null
WITHOUT_CLASSIFICATION	Never return null
WITHOUT_CLASSIFICATION	e.g. text/html; charset=utf-8
WITHOUT_CLASSIFICATION	TODO timeStamp == 0 means either not yet initialised or no stamp available (e.g. when loading a results file)
WITHOUT_CLASSIFICATION	Allow for non-sample time
WITHOUT_CLASSIFICATION	Don't return null if not set
WITHOUT_CLASSIFICATION	@GuardedBy("this"")
WITHOUT_CLASSIFICATION	(is this really the character set?) e.g. ISO-8895-1, UTF-8
WITHOUT_CLASSIFICATION	Allows override of sample size in case sampler does not want to store all the data
WITHOUT_CLASSIFICATION	Allow read-only access from test code
WITHOUT_CLASSIFICATION	How long between checks of nanotime; default 5000ms; set to <=0 to disable the thread
WITHOUT_CLASSIFICATION	$NON-NLS-1$;
WITHOUT_CLASSIFICATION	Make sure we start with a reasonable value
WITHOUT_CLASSIFICATION	Allow testcode access to the settings
WITHOUT_CLASSIFICATION	Allow test code to change the default useNanoTime setting
WITHOUT_CLASSIFICATION	Allow test code to change the default useNanoTime and nanoThreadSleep settings
WITHOUT_CLASSIFICATION	Helper method to get 1 ms resolution timing.
WITHOUT_CLASSIFICATION	Helper method to maintain timestamp relationships
WITHOUT_CLASSIFICATION	For use by SaveService only. @param stamp - this may be a start time or an end time @param elapsed
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	OK TODO ??
WITHOUT_CLASSIFICATION	Create unique object as marker for end of queue
WITHOUT_CLASSIFICATION	OK OK OK OK files is created automatically, and applies per instance OK
WITHOUT_CLASSIFICATION	OK OK OK
WITHOUT_CLASSIFICATION	OK OK Don't copy this; it is per instance resultFileName = res.resultFileName;
WITHOUT_CLASSIFICATION	TODO ?? OK OK
WITHOUT_CLASSIFICATION	N.B. default charset is used deliberately here
WITHOUT_CLASSIFICATION	N.B. default charset is used deliberately here
WITHOUT_CLASSIFICATION	Extract charset and store as DataEncoding N.B. The meta tag: <META http-equiv="content-type" content="text/html; charset=foobar"> is now processed by HTTPSampleResult#getDataEncodingWithDefault $NON-NLS-1$
WITHOUT_CLASSIFICATION	handle: ContentType: text/plain; charset=ISO-8859-1; format=flowed
WITHOUT_CLASSIFICATION	Check for quoted string $NON-NLS-1$ remove quotes
WITHOUT_CLASSIFICATION	List of types that are known to be binary
WITHOUT_CLASSIFICATION	List of types that are known to be ascii, although they may appear to be binary
WITHOUT_CLASSIFICATION	Determine if content-type is known to be binary, i.e. not displayable as text. @param ct content type @return true if content-type is of type binary.
WITHOUT_CLASSIFICATION	Helper methods N.B. setStartTime must be called before setEndTime setStartTime is used by HTTPSampleResult to clone the parent sampler and allow the original start time to be kept
WITHOUT_CLASSIFICATION	how many times we had to wait to queue a sample
WITHOUT_CLASSIFICATION	Can now afford to wait a bit longer between checks
WITHOUT_CLASSIFICATION	created by client
WITHOUT_CLASSIFICATION	created by server in readResolve method
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Note: this is an instance field (and is not transient), so is created by the JMeter client and propagated to the server instance by RMI. [a static field would be recreated on the server, and would pick up the server properties] $NON-NLS-1$
WITHOUT_CLASSIFICATION	client
WITHOUT_CLASSIFICATION	client log file
WITHOUT_CLASSIFICATION	server log file
WITHOUT_CLASSIFICATION	Checking for and creating initial timestamp to check against
WITHOUT_CLASSIFICATION	synchronized(sampleStore)
WITHOUT_CLASSIFICATION	how long we had to wait (nanoSeconds)
WITHOUT_CLASSIFICATION	for reading from CSV files ignored currently
WITHOUT_CLASSIFICATION	returns null if nothing on queue currently
WITHOUT_CLASSIFICATION	Wait longer than a clock pulse (generally 10-15ms) Catch an early clock pulse to reduce slop.
WITHOUT_CLASSIFICATION	OK because sampleStore is of type ArrayList<SampleEvent>
WITHOUT_CLASSIFICATION	Created by SampleSenderFactory
WITHOUT_CLASSIFICATION	Strip the response data before writing, but only for a successful request.
WITHOUT_CLASSIFICATION	we failed to add the element first time
WITHOUT_CLASSIFICATION	server
WITHOUT_CLASSIFICATION	try to process as many as possible
WITHOUT_CLASSIFICATION	Compute bytes before stripping
WITHOUT_CLASSIFICATION	Configuration items, set up by readResolve
WITHOUT_CLASSIFICATION	should be a user provided class name
WITHOUT_CLASSIFICATION	Static fields are resolved on the server
WITHOUT_CLASSIFICATION	instance fields are copied from the client instance
WITHOUT_CLASSIFICATION	Set clonedSet;
WITHOUT_CLASSIFICATION	Server-only work item
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Extended property name $NON-NLS-1$
WITHOUT_CLASSIFICATION	clonedSet = new HashSet();
WITHOUT_CLASSIFICATION	Need to maintain our own elapsed timer to ensure more accurate aggregation
WITHOUT_CLASSIFICATION	May be called by XStream
WITHOUT_CLASSIFICATION	Copy data that is shared between samples (i.e. the key items):
WITHOUT_CLASSIFICATION	Assume result is OK because we add the sample count in later
WITHOUT_CLASSIFICATION	Add Sample Counter
WITHOUT_CLASSIFICATION	Add Error Counter
WITHOUT_CLASSIFICATION	Overrides SampleResult
WITHOUT_CLASSIFICATION	for reading CSV files
WITHOUT_CLASSIFICATION	superclass is not typed
WITHOUT_CLASSIFICATION	Ensure output follows version
WITHOUT_CLASSIFICATION	Names of DataHolder entries for JTL processing $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Names of DataHolder entries for JMX processing $NON-NLS-1$
WITHOUT_CLASSIFICATION	Override wrapMapper in order to insert the Wrapper in the chain
WITHOUT_CLASSIFICATION	Provide our own aliasing using strings rather than classes
WITHOUT_CLASSIFICATION	Translate alias to classname and then delegate to wrapped class
WITHOUT_CLASSIFICATION	Translate to alias and then delegate to wrapped class
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	was type, but that caused FindBugs warning
WITHOUT_CLASSIFICATION	This is needed to stop XStream keeping copies of each class
WITHOUT_CLASSIFICATION	The XML header, with placeholder for encoding, since that is controlled by property $NON-NLS-1$
WITHOUT_CLASSIFICATION	Default file name $NON-NLS-1$
WITHOUT_CLASSIFICATION	Property name used to define file name $NON-NLS-1$
WITHOUT_CLASSIFICATION	Default to overall format, and then to version 2.2
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Define file format property names $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Define file format versions $NON-NLS-1$
WITHOUT_CLASSIFICATION	Holds the mappings from the saveservice properties file Key: alias Entry: full class name There may be multiple aliases which map to the same class
WITHOUT_CLASSIFICATION	Holds the reverse mappings Key: full class name Entry: primary alias
WITHOUT_CLASSIFICATION	This is written to JMX files by ScriptWrapperConverter read from properties file; written to JMX files
WITHOUT_CLASSIFICATION	Must match _version property value in saveservice.properties used to ensure saveservice.properties and SaveService are updated simultaneously Expected version $NON-NLS-1$
WITHOUT_CLASSIFICATION	Internal information only read from saveservice.properties file $NON-NLS-1$ Must match Revision id value in saveservice.properties, used to ensure saveservice.properties and SaveService are updated simultaneously Expected value $NON-NLS-1$ read from properties file $NON-NLS-1$
WITHOUT_CLASSIFICATION	Helper method to simplify alias creation from properties
WITHOUT_CLASSIFICATION	Can have multiple aliases for same target classname
WITHOUT_CLASSIFICATION	Load the alias properties
WITHOUT_CLASSIFICATION	now create the aliases
WITHOUT_CLASSIFICATION	Remove the leading "_"
WITHOUT_CLASSIFICATION	For converters to use
WITHOUT_CLASSIFICATION	Called by Save function
WITHOUT_CLASSIFICATION	Get the OutputWriter to use
WITHOUT_CLASSIFICATION	Use deprecated method, to avoid duplicating code
WITHOUT_CLASSIFICATION	Use deprecated method, to avoid duplicating code
WITHOUT_CLASSIFICATION	Ensure terminated properly
WITHOUT_CLASSIFICATION	Used by Test code
WITHOUT_CLASSIFICATION	Used by Test code
WITHOUT_CLASSIFICATION	Get the InputReader to use
WITHOUT_CLASSIFICATION	Used by ResultCollector.sampleOccurred(SampleEvent event)
WITHOUT_CLASSIFICATION	Used by ResultCollector#recordStats()
WITHOUT_CLASSIFICATION	Routines for TestSaveService
WITHOUT_CLASSIFICATION	Allow test code to check for spurious class references
WITHOUT_CLASSIFICATION	boolean OK = true;
WITHOUT_CLASSIFICATION	don't bother checking class is present if it is to be updated
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Extract version digits from String of the form #Revision: n.mm # (where # is actually $ above)
WITHOUT_CLASSIFICATION	Check if we have a encoding to use from properties
WITHOUT_CLASSIFICATION	Check if we have a encoding to use from properties
WITHOUT_CLASSIFICATION	Check if we have a encoding to use from properties
WITHOUT_CLASSIFICATION	We use the default character set encoding of the JRE
WITHOUT_CLASSIFICATION	We use the default character set encoding of the JRE
WITHOUT_CLASSIFICATION	We use the default character set encoding of the JRE
WITHOUT_CLASSIFICATION	Used by ResultCollector when creating output files
WITHOUT_CLASSIFICATION	Write XML header if we have the charset to use for encoding
WITHOUT_CLASSIFICATION	We do not use getEncoding method of Writer, since that returns the historical name
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	--------------------------------------------------------------------- XML RESULT FILE CONSTANTS AND FIELD NAME CONSTANTS ---------------------------------------------------------------------
WITHOUT_CLASSIFICATION	Used by ScriptWrapperConverter
WITHOUT_CLASSIFICATION	Shared with TestElementSaver $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Probably no point in converting this to return a SampleEvent
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Called by SaveService.loadTree(InputStream reader) if XStream loading fails
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	OK $NON-NLS-1$
WITHOUT_CLASSIFICATION	Do upgrade translation:
WITHOUT_CLASSIFICATION	must always agree
WITHOUT_CLASSIFICATION	Delete any properties whose name converts to the empty string
WITHOUT_CLASSIFICATION	Create the property:
WITHOUT_CLASSIFICATION	OK
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Called by ResultCollector#loadExistingFile() if XStream loading fails
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	--------------------------------------------------------------------- ADDITIONAL CSV RESULT FILE CONSTANTS AND FIELD NAME CONSTANTS ---------------------------------------------------------------------
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Used to enclose variable name labels, to distinguish from any of the above labels $NON-NLS-1$
WITHOUT_CLASSIFICATION	Initial config from properties
WITHOUT_CLASSIFICATION	Date formats to try if the time format does not parse as milliseconds
WITHOUT_CLASSIFICATION	$NON-NLS-1$ (for compatibility, this is the original default)
WITHOUT_CLASSIFICATION	Enough to read the header column names Get the first line, and see if it is the header
WITHOUT_CLASSIFICATION	not a valid header
WITHOUT_CLASSIFICATION	may change the format later restart from beginning
WITHOUT_CLASSIFICATION	may be updated
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	This assumes the header names are all single words with no spaces word followed by 0 or more repeats of (non-word char + word) where the non-word char (\2) is the same e.g. abc|def|ghi but not abd|def~ghi $NON-NLS-1$ last entries may be quoted strings
WITHOUT_CLASSIFICATION	Save the name for error reporting
WITHOUT_CLASSIFICATION	method is only ever called from one thread at a time so it's OK to use a static DateFormat
WITHOUT_CLASSIFICATION	can this happen?
WITHOUT_CLASSIFICATION	Strip off the trailing delimiter
WITHOUT_CLASSIFICATION	Map header names to set() methods
WITHOUT_CLASSIFICATION	These entries must be in the same order as columns are saved/restored.
WITHOUT_CLASSIFICATION	Both these are needed in the list even though they set the same variable
WITHOUT_CLASSIFICATION	Try default delimiter
WITHOUT_CLASSIFICATION	now validate the result
WITHOUT_CLASSIFICATION	failed to recognise the header
WITHOUT_CLASSIFICATION	We know the column names all exist, so create the config
WITHOUT_CLASSIFICATION	Check if the line is a header
WITHOUT_CLASSIFICATION	Check for Quoted variable names
WITHOUT_CLASSIFICATION	they are always last
WITHOUT_CLASSIFICATION	unknown column name
WITHOUT_CLASSIFICATION	out of order
WITHOUT_CLASSIFICATION	Don't add delimiter first time round
WITHOUT_CLASSIFICATION	These methods handle parameters that could contain delimiters or quotes:
WITHOUT_CLASSIFICATION	These methods handle parameters that cannot contain delimiters or quotes
WITHOUT_CLASSIFICATION	Find the first non-null message
WITHOUT_CLASSIFICATION	Need both sample and error count to be any use
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	did not find \n, put the character back
WITHOUT_CLASSIFICATION	Need to append something so delimiter is added
WITHOUT_CLASSIFICATION	=================================== CSV quote/unquote handling ==============================
WITHOUT_CLASSIFICATION	Private versions of what might eventually be part of Commons-CSV or Commons-Lang/Io...
WITHOUT_CLASSIFICATION	double the quote char
WITHOUT_CLASSIFICATION	doubled quote => quote
WITHOUT_CLASSIFICATION	State of the parser
WITHOUT_CLASSIFICATION	Remove following \n if present
WITHOUT_CLASSIFICATION	Do we have some data, or a trailing empty field? we have some data we've started a field Just seen ""
WITHOUT_CLASSIFICATION	while not EOF EOF (or end of string) so collect any remaining data
WITHOUT_CLASSIFICATION	This is not currently used by JMeter code. As it uses Sun-specific code (the only such in JMeter), it has been commented out for now.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	Delete any properties whose name converts to the empty string
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	rethrow other errors
WITHOUT_CLASSIFICATION	mainly for TestElementConverter
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	Don't save empty comments - except for the TestPlan (to maintain compatibility)
WITHOUT_CLASSIFICATION	Skip special properties if required
WITHOUT_CLASSIFICATION	remap the class name
WITHOUT_CLASSIFICATION	could be null if it has been deleted via NameUpdater
WITHOUT_CLASSIFICATION	could be null if it has been deleted via NameUpdater
WITHOUT_CLASSIFICATION	No need to check version, just process the attributes if present
WITHOUT_CLASSIFICATION	Only decode strings if inVersion = 1.0
WITHOUT_CLASSIFICATION	Names of properties that are handled specially
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Otherwise don't save anything - no point
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	If we have a file, but no data, then read the file
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	Skip special properties if required
WITHOUT_CLASSIFICATION	No need to check version, just process the attributes if present
WITHOUT_CLASSIFICATION	could be null if it has been deleted via NameUpdater
WITHOUT_CLASSIFICATION	Don't save empty comments
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Always decode
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	$NON-NLS-1$ Must be same as Header.HNAME - but that is built later
WITHOUT_CLASSIFICATION	N.B. These must agree with the new member names in SampleSaveConfiguration $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Additional member names which are currently not written out $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	These are new fields; not saved unless true
WITHOUT_CLASSIFICATION	These fields are not currently saved or restored
WITHOUT_CLASSIFICATION	Save most things
WITHOUT_CLASSIFICATION	Save the new fields - but only if they are not the default
WITHOUT_CLASSIFICATION	Helper method to simplify marshall routine
WITHOUT_CLASSIFICATION	Maintain backward compatibility (bytes was not in the JMX file)
WITHOUT_CLASSIFICATION	Make sure decoding follows input file
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	@GuardedBy("this")
WITHOUT_CLASSIFICATION	@GuardedBy("this") NOTE this also guards against possible window in checkForOpenFiles()
WITHOUT_CLASSIFICATION	volatile needed to ensure safe publication
WITHOUT_CLASSIFICATION	Cannot be instantiated
WITHOUT_CLASSIFICATION	getParentFile() may not work on relative paths
WITHOUT_CLASSIFICATION	checks for entries in use
WITHOUT_CLASSIFICATION	tidy up any unused entries
WITHOUT_CLASSIFICATION	Must first convert to absolute path names to ensure parents are available
WITHOUT_CLASSIFICATION	read first line and forget
WITHOUT_CLASSIFICATION	need to check if we are at EOF already
WITHOUT_CLASSIFICATION	already at EOF
WITHOUT_CLASSIFICATION	OK, we still have some data, restore it
WITHOUT_CLASSIFICATION	If file encoding is specified, read using that encoding, otherwise use default platform encoding
WITHOUT_CLASSIFICATION	If file encoding is specified, write using that encoding, otherwise use default platform encoding
WITHOUT_CLASSIFICATION	package access for test code only
WITHOUT_CLASSIFICATION	Some known attribute names, just for convenience:
WITHOUT_CLASSIFICATION	Store the resource bundle as an attribute of the BeanDescriptor:
WITHOUT_CLASSIFICATION	Localize the property names and descriptions:
WITHOUT_CLASSIFICATION	we also provide the resource bundle
WITHOUT_CLASSIFICATION	i is used below
WITHOUT_CLASSIFICATION	Set the bean's property to the value we just obtained:
WITHOUT_CLASSIFICATION	We can't assign null to primitive types.
WITHOUT_CLASSIFICATION	Can occur running headless on Jenkins
WITHOUT_CLASSIFICATION	value was not provided, and this is allowed
WITHOUT_CLASSIFICATION	Not an expression (isn't or can't be), not null.
WITHOUT_CLASSIFICATION	The known tags are assumed to be valid:
WITHOUT_CLASSIFICATION	Was not a tag, so if we can't accept other values...
WITHOUT_CLASSIFICATION	Delegate the final check to the typeEditor:
WITHOUT_CLASSIFICATION	setAsText failed: not valid
WITHOUT_CLASSIFICATION	setAsText succeeded: valid
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	/ final because called from ctor
WITHOUT_CLASSIFICATION	Localize the bean name $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	not an expression (isn't or can't be), not null.
WITHOUT_CLASSIFICATION	Provide an initial edit value if necessary -- this is an heuristic that tries to provide the most convenient initial edit value:
WITHOUT_CLASSIFICATION	not interested in this method.
WITHOUT_CLASSIFICATION	Not an expression (isn't or can't be), not null. may throw IllegalArgumentExc.
WITHOUT_CLASSIFICATION	not an expression (can't be or isn't), not null.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	so we can detect it
WITHOUT_CLASSIFICATION	so we can detect it
WITHOUT_CLASSIFICATION	Revert to the previous value:
WITHOUT_CLASSIFICATION	ensure value is propagated to editor
WITHOUT_CLASSIFICATION	Get and sort the property descriptors:
WITHOUT_CLASSIFICATION	should be quicker to find the editors if they are registered.
WITHOUT_CLASSIFICATION	private static final Logger log = LoggingManager.getLoggerForClass();
WITHOUT_CLASSIFICATION	$NON-NLS-$
WITHOUT_CLASSIFICATION	Obtain the propertyEditors:
WITHOUT_CLASSIFICATION	Index is also used for accessing editors array
WITHOUT_CLASSIFICATION	Don't get editors for hidden or non-read-write properties:
WITHOUT_CLASSIFICATION	we check the class type above
WITHOUT_CLASSIFICATION	Initialize the editor with the provided default value or null:
WITHOUT_CLASSIFICATION	In case of BSF and JSR elements i want to add textAreaEditor as a listener to scriptLanguage ComboBox.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Some editors do tiny transformations (e.g. "true" to "True",...): may throw IllegalArgumentException
WITHOUT_CLASSIFICATION	Initialize the GUI:
WITHOUT_CLASSIFICATION	acceptsNull acceptsExpressions acceptsOther
WITHOUT_CLASSIFICATION	Uninitialized -- set it to the defaults:
WITHOUT_CLASSIFICATION	Now set the editors to the element's values:
WITHOUT_CLASSIFICATION	for labels
WITHOUT_CLASSIFICATION	for editors
WITHOUT_CLASSIFICATION	for panels
WITHOUT_CLASSIFICATION	if the displayName is the empty string, leave it like that.
WITHOUT_CLASSIFICATION	might be null (e.g. in testing)
WITHOUT_CLASSIFICATION	Map of translations for tags; only created if there is at least one tag and a ResourceBundle has been provided.
WITHOUT_CLASSIFICATION	The minimum index of the tags in the combo box
WITHOUT_CLASSIFICATION	The maximum index of the tags in the combo box
WITHOUT_CLASSIFICATION	only for use from test code
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Add a 0-sized invisible component that will take all the vertical space that nobody wants:
WITHOUT_CLASSIFICATION	track where tags start ...
WITHOUT_CLASSIFICATION	... and where they end
WITHOUT_CLASSIFICATION	Check if the entry index corresponds to a tag, if so return the tag This also works if the tags were not translated
WITHOUT_CLASSIFICATION	Not a tag entry, return the original value
WITHOUT_CLASSIFICATION	will revert to last valid value if invalid
WITHOUT_CLASSIFICATION	Replace a string with its translation, if one exists
WITHOUT_CLASSIFICATION	not sure if null is passed in but no harm in setting it
WITHOUT_CLASSIFICATION	not sure if null is passed in but no harm in setting it
WITHOUT_CLASSIFICATION	A quick verification, just in case:
WITHOUT_CLASSIFICATION	Get the beanInfo:
WITHOUT_CLASSIFICATION	In other GUI component, clearGUI resets the value to defaults one as there is one GUI per Element With TestBeanGUI as it's shared, its default values are only known here, we must call setValues with element (as it holds default values) otherwise we will get values as computed by customizer reset and not default ones
WITHOUT_CLASSIFICATION	Fetch data from screen fields
WITHOUT_CLASSIFICATION	Copy all property values from the map into the element:
WITHOUT_CLASSIFICATION	cannot be null
WITHOUT_CLASSIFICATION	Copy all property values into the map:
WITHOUT_CLASSIFICATION	handles hex as well
WITHOUT_CLASSIFICATION	Some editors may need the descriptor
WITHOUT_CLASSIFICATION	Create a button to trigger the file chooser:
WITHOUT_CLASSIFICATION	Create a panel containing the combo and the button:
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	not sure if null is passed in but no harm in setting it
WITHOUT_CLASSIFICATION	handles hex as well
WITHOUT_CLASSIFICATION	configure(element); super.clear(); set name, enabled. put the default values back into the new element
WITHOUT_CLASSIFICATION	Programming error. Don't continue.
WITHOUT_CLASSIFICATION	Programming error. Don't continue.
WITHOUT_CLASSIFICATION	We don't want to show expert beans in the menus unless we're in expert mode:
WITHOUT_CLASSIFICATION	may be impossible, but no harm in checking ...
WITHOUT_CLASSIFICATION	- JMX
WITHOUT_CLASSIFICATION	Get a WrapperEditor to provide the field or combo -- we'll delegate most methods to it:
WITHOUT_CLASSIFICATION	acceptsNull acceptsExpressions acceptsOther default
WITHOUT_CLASSIFICATION	assume it's string
WITHOUT_CLASSIFICATION	+ JMX attributes - do not change
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	There's only 1 test plan, so can cache the mode here
WITHOUT_CLASSIFICATION	- JMX field names
WITHOUT_CLASSIFICATION	create transient item
WITHOUT_CLASSIFICATION	we set the classpath
WITHOUT_CLASSIFICATION	Action to be taken when a Sampler error occurs
WITHOUT_CLASSIFICATION	Property name
WITHOUT_CLASSIFICATION	Thread-specific variables saved here to save recalculation
WITHOUT_CLASSIFICATION	clone should never return null
WITHOUT_CLASSIFICATION	clone should never return null
WITHOUT_CLASSIFICATION	Only samplers have the thread context set up by JMeterThread at present, so suppress the warning for now
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.samplers.RemoteThreadsListener#threadFinished()
WITHOUT_CLASSIFICATION	clone should never return null
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	this("Test Plan"); setFunctionalMode(false); setSerialized(false);
WITHOUT_CLASSIFICATION	setFunctionalMode(false); setSerialized(false);
WITHOUT_CLASSIFICATION	log.warn("ThreadContext was not set up - should only happen in JUnit testing..." ,new Throwable("Debug"));
WITHOUT_CLASSIFICATION	Default implementation
WITHOUT_CLASSIFICATION	Moved from JMeter class
WITHOUT_CLASSIFICATION	lifecycle methods
WITHOUT_CLASSIFICATION	JMX property name: do not change
WITHOUT_CLASSIFICATION	value is the correct class
WITHOUT_CLASSIFICATION	value is of type Collection<JMeterProperty>
WITHOUT_CLASSIFICATION	private static StringProperty defaultProperty = new StringProperty();
WITHOUT_CLASSIFICATION	name cannot be null
WITHOUT_CLASSIFICATION	Two null values -- return equal
WITHOUT_CLASSIFICATION	empty collection, local var is here to allow SuppressWarnings
WITHOUT_CLASSIFICATION	empty collection
WITHOUT_CLASSIFICATION	empty collection
WITHOUT_CLASSIFICATION	should not happen
WITHOUT_CLASSIFICATION	should not happen
WITHOUT_CLASSIFICATION	empty collection ok to cast, local var is here to allow SuppressWarnings
WITHOUT_CLASSIFICATION	N.B. Other classes rely on this returning just the string.
WITHOUT_CLASSIFICATION	|| !ctx.isSamplingStarted()
WITHOUT_CLASSIFICATION	synch is probably not needed as only called before run starts
WITHOUT_CLASSIFICATION	this is only possible for 3rd party controllers by default
WITHOUT_CLASSIFICATION	Called from multiple threads
WITHOUT_CLASSIFICATION	Backward compatibility
WITHOUT_CLASSIFICATION	check there is a GUI
WITHOUT_CLASSIFICATION	check there is a GUI
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Expensive, so do once
WITHOUT_CLASSIFICATION	i.e. "true"
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	based on this scheduler is enabled or disabled
WITHOUT_CLASSIFICATION	Gives access to parent thread threadGroup
WITHOUT_CLASSIFICATION	For access to stop methods.
WITHOUT_CLASSIFICATION	The following variables may be set/read from multiple threads.
WITHOUT_CLASSIFICATION	may be set from a different thread
WITHOUT_CLASSIFICATION	ensure that interrupt cannot overlap with shutdown
WITHOUT_CLASSIFICATION	TL - IS
WITHOUT_CLASSIFICATION	See below for reason for this change. Just in case this causes problems, allow the change to be backed out
WITHOUT_CLASSIFICATION	threadContext is not thread-safe, so keep within thread
WITHOUT_CLASSIFICATION	Might be found by contoller.next()
WITHOUT_CLASSIFICATION	prevent any further interrupts
WITHOUT_CLASSIFICATION	make sure current interrupt is finished, prevent another starting yet
WITHOUT_CLASSIFICATION	Allow any pending interrupt to complete (OK because currentSampler == null)
WITHOUT_CLASSIFICATION	Find parent controllers of current sampler
WITHOUT_CLASSIFICATION	OK to call TestBeanHelper.prepare()
WITHOUT_CLASSIFICATION	Check if we are running a transaction
WITHOUT_CLASSIFICATION	Find the package for the transaction
WITHOUT_CLASSIFICATION	Check if the transaction is done
WITHOUT_CLASSIFICATION	Get the transaction sample result
WITHOUT_CLASSIFICATION	Check assertions for the transaction sample
WITHOUT_CLASSIFICATION	Notify listeners with the transaction sample result
WITHOUT_CLASSIFICATION	Transaction is done, we do not have a sampler to sample
WITHOUT_CLASSIFICATION	recursive call
WITHOUT_CLASSIFICATION	Check if we have a sampler to sample
WITHOUT_CLASSIFICATION	Get the sampler ready to sample
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	TestBeanHelper.prepare() is OK
WITHOUT_CLASSIFICATION	check there is a GUI
WITHOUT_CLASSIFICATION	check there is a GUI
WITHOUT_CLASSIFICATION	OK to call TestBeanHelper.prepare()
WITHOUT_CLASSIFICATION	Must not ignore this one Make sure errors are output to the log file
WITHOUT_CLASSIFICATION	Tell the monitor we are done Remove the ThreadLocal entry
WITHOUT_CLASSIFICATION	Perform the actual sample
WITHOUT_CLASSIFICATION	If we got any results, then perform processing on the result
WITHOUT_CLASSIFICATION	Do not send subsamples to listeners which receive the transaction sample
WITHOUT_CLASSIFICATION	Do not send subsamples to listeners which receive the transaction sample
WITHOUT_CLASSIFICATION	Add the result as subsample of transaction if we are in a transaction
WITHOUT_CLASSIFICATION	Check if thread or test should be stopped
WITHOUT_CLASSIFICATION	Finish up
WITHOUT_CLASSIFICATION	checks the scheduler to stop the iteration
WITHOUT_CLASSIFICATION	Check if this instance is present in transaction listener list
WITHOUT_CLASSIFICATION	Check for the same instance
WITHOUT_CLASSIFICATION	listeners = controller.getListeners();
WITHOUT_CLASSIFICATION	set the scheduler to start
WITHOUT_CLASSIFICATION	call ThreadListener.threadStarted()
WITHOUT_CLASSIFICATION	call ThreadListener.threadFinished()
WITHOUT_CLASSIFICATION	probably not possible, but check anyway
WITHOUT_CLASSIFICATION	Called by StandardJMeterEngine, TestAction and AccessLogSampler
WITHOUT_CLASSIFICATION	delay between checks
WITHOUT_CLASSIFICATION	Don't bother reporting stop test interruptions
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	fetch once; must be done under lock (also protects against null)
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	delay between checks
WITHOUT_CLASSIFICATION	Used by DebugSampler
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	Only create the map if it is required
WITHOUT_CLASSIFICATION	all implementations extend TestElement
WITHOUT_CLASSIFICATION	All implementations extend TestElement
WITHOUT_CLASSIFICATION	int
WITHOUT_CLASSIFICATION	Number of active threads in this group
WITHOUT_CLASSIFICATION	Copy our name into that of the controller otherwise name reverts
WITHOUT_CLASSIFICATION	5 seconds
WITHOUT_CLASSIFICATION	+ JMX entries - do not change the string values
WITHOUT_CLASSIFICATION	- JMX entries
WITHOUT_CLASSIFICATION	if true the Scheduler is enabled
WITHOUT_CLASSIFICATION	set the start time for the Thread Duration is in seconds
WITHOUT_CLASSIFICATION	Force a sensible start time
WITHOUT_CLASSIFICATION	Enables the scheduler
WITHOUT_CLASSIFICATION	maximum pause to use
WITHOUT_CLASSIFICATION	Fetch once; needs to stay constant
WITHOUT_CLASSIFICATION	needs to be same time for all threads in the group
WITHOUT_CLASSIFICATION	set start and end time
WITHOUT_CLASSIFICATION	N.B. Context needs to be fetched in the correct thread
WITHOUT_CLASSIFICATION	Store context from Root Thread to pass it to created threads
WITHOUT_CLASSIFICATION	Copy in ThreadStarter thread context from calling Thread
WITHOUT_CLASSIFICATION	needs to be constant for all threads
WITHOUT_CLASSIFICATION	else start immediately
WITHOUT_CLASSIFICATION	set the endtime for the Thread
WITHOUT_CLASSIFICATION	Duration is in seconds, starting from when the threads start
WITHOUT_CLASSIFICATION	ramp-up delay (except first)
WITHOUT_CLASSIFICATION	no point continuing beyond the end time
WITHOUT_CLASSIFICATION	Already waited
WITHOUT_CLASSIFICATION	ThreadStarter is daemon, but we don't want sampler threads to be so too
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Ignored
WITHOUT_CLASSIFICATION	return all the associated counts together
WITHOUT_CLASSIFICATION	set stop flag interrupt sampler if possible
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	set the start time for the Thread Duration is in seconds
WITHOUT_CLASSIFICATION	@GuardedGy("this")
WITHOUT_CLASSIFICATION	@GuardedGy("this")
WITHOUT_CLASSIFICATION	@GuardedGy("this")
WITHOUT_CLASSIFICATION	@GuardedGy("this")
WITHOUT_CLASSIFICATION	@GuardedGy("this")
WITHOUT_CLASSIFICATION	Currently only used by JMeterThread
WITHOUT_CLASSIFICATION	Check if the property exists
WITHOUT_CLASSIFICATION	Relative start-up time
WITHOUT_CLASSIFICATION	NOT USED
WITHOUT_CLASSIFICATION	Must be an old test plan
WITHOUT_CLASSIFICATION	Initialise the gui field values
WITHOUT_CLASSIFICATION	Maximum size to convert a document to text (default 10Mb)
WITHOUT_CLASSIFICATION	-1 to disable the write limit
WITHOUT_CLASSIFICATION	open the stream
WITHOUT_CLASSIFICATION	close the stream
WITHOUT_CLASSIFICATION	The string is made private so the compiler can't propagate it into JMeterUtils. (Java compilers may make copies of final variables) This ensures that JMeterUtils always gets the correct version, even if JMeterUtils is not re-compiled during the build.
WITHOUT_CLASSIFICATION	This assumes that the JMV treats a class file as a resource (not all do).
WITHOUT_CLASSIFICATION	Convert to URL for manifest
WITHOUT_CLASSIFICATION	default to plain version
WITHOUT_CLASSIFICATION	Not instantiable
WITHOUT_CLASSIFICATION	Allow reversion to original shared session context
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	If we are using a single session Otherwise
WITHOUT_CLASSIFICATION	Also set up HttpClient defaults
WITHOUT_CLASSIFICATION	No point doing this on a per-connection basis, as there is currently no way to configure it. So we leave it to the defaults set up in the SSL Context
WITHOUT_CLASSIFICATION	HttpsURLConnection secureConn = (HttpsURLConnection) conn; secureConn.setSSLSocketFactory(this.getContext().getSocketFactory());
WITHOUT_CLASSIFICATION	Creates new SSL context @return SSL context @throws GeneralSecurityException
WITHOUT_CLASSIFICATION	Now wrap the default managers with our key manager
WITHOUT_CLASSIFICATION	Get the default trust managers
WITHOUT_CLASSIFICATION	Wrap the defaults in our custom trust manager
WITHOUT_CLASSIFICATION	implementation moved to JmeterKeystore as only that has the keyType info
WITHOUT_CLASSIFICATION	++ For TestBean implementations only passed to file or script
WITHOUT_CLASSIFICATION	file to source (overrides script)
WITHOUT_CLASSIFICATION	script (if file not provided)
WITHOUT_CLASSIFICATION	BSF/JSR223 language to use -- For TestBean implementations only
WITHOUT_CLASSIFICATION	can be the empty string
WITHOUT_CLASSIFICATION	For use by the server script
WITHOUT_CLASSIFICATION	Characters per second to emulate
WITHOUT_CLASSIFICATION	Save the actual socket
WITHOUT_CLASSIFICATION	Override so we can intercept the stream
WITHOUT_CLASSIFICATION	Forward all the SSLSocket methods to the input socket
WITHOUT_CLASSIFICATION	Also forward all the Socket methods.
WITHOUT_CLASSIFICATION	ScriptRuntime.call(cx, fun, global, args, global);
WITHOUT_CLASSIFICATION	Must wrap non-scriptable objects before presenting to Rhino
WITHOUT_CLASSIFICATION	includes JavaScriptException, rethrows Errors
WITHOUT_CLASSIFICATION	superclass does not support types
WITHOUT_CLASSIFICATION	Initialize context and global scope object
WITHOUT_CLASSIFICATION	Read-only access after class has been initialised
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Re-throw Errors because we're supposed to let the JVM see it Don't re-throw StackOverflows, because we know we've corrected the situation by aborting the loop and a long stacktrace would end up on the user's console
WITHOUT_CLASSIFICATION	Calculate each time, as likely to be called for each add
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Characters per second to emulate
WITHOUT_CLASSIFICATION	likely a wrapped exception from a LiveConnect call. Display its stack trace as a diagnostic
WITHOUT_CLASSIFICATION	For n values in an aggregate sample the average value = (val/n) So need to add n (val/n) (val/n) = val val / n
WITHOUT_CLASSIFICATION	load additionnal name conversion rules from plugins
WITHOUT_CLASSIFICATION	If we are creating a JSR223 element, add the cache key property. Note that this cannot be done in the JSR223BeanInfoSupport class because that causes problems with the group; its properties are not always set up before they are needed. This cause various issues with the GUI: - wrong field attributes (should not allow null) - sometimes GUI is completely mangled - field appears at start rather than at end. - the following warning is logged: jmeter.testbeans.gui.GenericTestBeanCustomizer: org.apache.jmeter.util.JSR223TestElement#cacheKey does not appear to have been configured Adding the group here solves these issues, and it's also possible to add the key just before the script panel to which it relates. It's not yet clear why this should be, but it looks as though createPropertyGroup does not work properly if it is called from any subclasses of this class.
WITHOUT_CLASSIFICATION	names are Strings
WITHOUT_CLASSIFICATION	no point dividing by 1
WITHOUT_CLASSIFICATION	1024=bytes per kb
WITHOUT_CLASSIFICATION	account for multiple samples not yet intialised
WITHOUT_CLASSIFICATION	1000 = millisecs/sec
WITHOUT_CLASSIFICATION	Conversions for milli and nano seconds
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Characters per second to emulate
WITHOUT_CLASSIFICATION	Use actual class name for log
WITHOUT_CLASSIFICATION	Most subclasses will need these:
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	@GuardedBy("this")
WITHOUT_CLASSIFICATION	@GuardedBy("this")
WITHOUT_CLASSIFICATION	@GuardedBy("this")
WITHOUT_CLASSIFICATION	we have a file, read and process it
WITHOUT_CLASSIFICATION	we have a file, read and process it
WITHOUT_CLASSIFICATION	Wraps the socket in a slow SSL socket if necessary
WITHOUT_CLASSIFICATION	What host am I running on?
WITHOUT_CLASSIFICATION	Special flag for use in debugging resources
WITHOUT_CLASSIFICATION	Provide Random numbers to whomever wants one
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	for java sockets for Commons Httpclient sockets
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Done by finally block: fileReader.close();
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ For use in debugging: $NON-NLS-1$
WITHOUT_CLASSIFICATION	Are we the default language?
WITHOUT_CLASSIFICATION	JMeter.fail("Could not read internal resource. " + "Archive is broken.");
WITHOUT_CLASSIFICATION	Keep existing settings
WITHOUT_CLASSIFICATION	Don't change locale from en_GB to en
WITHOUT_CLASSIFICATION	language change worked Check if we at least found the correct language:
WITHOUT_CLASSIFICATION	no need to reset Locale
WITHOUT_CLASSIFICATION	Reset Locale if necessary so other locales are properly handled
WITHOUT_CLASSIFICATION	Special mode for debugging resource handling
WITHOUT_CLASSIFICATION	Special mode for debugging resource handling
WITHOUT_CLASSIFICATION	Can be returned by headless hosts
WITHOUT_CLASSIFICATION	Can be returned by headless hosts
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Redisplay.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	file to source (overrides script)
WITHOUT_CLASSIFICATION	script (if file not provided)
WITHOUT_CLASSIFICATION	Use actual class name for log
WITHOUT_CLASSIFICATION	Most subclasses will need these:
WITHOUT_CLASSIFICATION	End Method
WITHOUT_CLASSIFICATION	$NON-NLS-1$ reader = xmlFactory.newSAXParser().getXMLReader();
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Done
WITHOUT_CLASSIFICATION	TODO Charset ?
WITHOUT_CLASSIFICATION	TODO Charset ?
WITHOUT_CLASSIFICATION	Empty value $NON-NLS-1$
WITHOUT_CLASSIFICATION	If not empty then script in ScriptText will be compiled and cached
WITHOUT_CLASSIFICATION	LRUMap does not support generics (yet)
WITHOUT_CLASSIFICATION	Add variables for access to context and variables
WITHOUT_CLASSIFICATION	For use in debugging:
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	Also handles read(byte[])
WITHOUT_CLASSIFICATION	-- For TestBean implementations only
WITHOUT_CLASSIFICATION	ensure variables are not null
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ Set params as a single line $NON-NLS-1$ and set as an array $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Characters per second to emulate
WITHOUT_CLASSIFICATION	Override so we can intercept the stream
WITHOUT_CLASSIFICATION	Override so we can intercept the stream
WITHOUT_CLASSIFICATION	Overridden by non-TestBean implementations to return the property value instead
WITHOUT_CLASSIFICATION	Overridden by non-TestBean implementations to return the property value instead
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	@GuardedBy("this")
WITHOUT_CLASSIFICATION	now temp2 has the lowest of the three components
WITHOUT_CLASSIFICATION	This sequence is borrowed from: org.apache.commons.httpclient.protocol.ReflectionSocketFactory.createSocket
WITHOUT_CLASSIFICATION	convert to telnet port
WITHOUT_CLASSIFICATION	Prompt is unnecessary
WITHOUT_CLASSIFICATION	Reset for other users
WITHOUT_CLASSIFICATION	Tell server that we are done
WITHOUT_CLASSIFICATION	TODO - charset?
WITHOUT_CLASSIFICATION	this.setDaemon(true);
WITHOUT_CLASSIFICATION	Have we yet tried to load the truststore?
WITHOUT_CLASSIFICATION	Ensure not null
WITHOUT_CLASSIFICATION	The password can be defined as a property; this dialogue is provided to allow it to be entered at run-time. However, this does not gain much, as the dialogue does not (yet) support hidden input ...
WITHOUT_CLASSIFICATION	we've tried ...
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Should not happen
WITHOUT_CLASSIFICATION	empty if not provided use the system property to determine the type otherwise use the name
WITHOUT_CLASSIFICATION	Also handles write(byte[])
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	@GuardedBy("this")
WITHOUT_CLASSIFICATION	@GuardedBy("this")
WITHOUT_CLASSIFICATION	Temporary copies, so can set the final ones
WITHOUT_CLASSIFICATION	This class is not serialised The interpreter instance for this class
WITHOUT_CLASSIFICATION	Script file to initialize the Interpreter with
WITHOUT_CLASSIFICATION	Logger to use during initialization and script run
WITHOUT_CLASSIFICATION	Called from ctor, so must be private (or final, but it does not seem useful elsewhere)
WITHOUT_CLASSIFICATION	Do this before starting the script
WITHOUT_CLASSIFICATION	Check file so we can distinguish file error from script error
WITHOUT_CLASSIFICATION	Cannot find the file locally, so try the bin directory
WITHOUT_CLASSIFICATION	Programming error
WITHOUT_CLASSIFICATION	Also programming error
WITHOUT_CLASSIFICATION	For use by Unit Tests
WITHOUT_CLASSIFICATION	configure the document builder factory
WITHOUT_CLASSIFICATION	elements have empty nodeValue, but we are usually interested in their content
WITHOUT_CLASSIFICATION	default empty array to prevent NPEs
WITHOUT_CLASSIFICATION	No point checking an empty keystore
WITHOUT_CLASSIFICATION	Note: if is == null, the arrays will be empty
WITHOUT_CLASSIFICATION	API expects null not empty array, see http:docs.oracle.com/javase/6/docs/api/javax/net/ssl/X509KeyManager.html
WITHOUT_CLASSIFICATION	i.e. is == null
WITHOUT_CLASSIFICATION	i.e. is == null
WITHOUT_CLASSIFICATION	number of samples in this entry
WITHOUT_CLASSIFICATION	The following getters may appear not to be used - however they are invoked via the Functor class
WITHOUT_CLASSIFICATION	No samples collected ...
WITHOUT_CLASSIFICATION	Better behaviour when howLong=0 or lastTime=0
WITHOUT_CLASSIFICATION	Better behaviour when howLong=0 or lastTime=0
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.createTestElement()
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.modifyTestElement(TestElement)
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	1024=bytes per kb
WITHOUT_CLASSIFICATION	We really should never get here because eval will throw an exception if xpath is invalid, but whatever, better safe
WITHOUT_CLASSIFICATION	No samples collected ...
WITHOUT_CLASSIFICATION	Better behaviour when howLong=0 or lastTime=0
WITHOUT_CLASSIFICATION	this is our first sample, set the start time to current timestamp
WITHOUT_CLASSIFICATION	this is our first sample, set the start time to current timestamp
WITHOUT_CLASSIFICATION	Always update the end time
WITHOUT_CLASSIFICATION	= elapsed
WITHOUT_CLASSIFICATION	Appears not to be used - however it is invoked via the Functor class
WITHOUT_CLASSIFICATION	Only for use by test code
WITHOUT_CLASSIFICATION	Code duplicated from getPageSize()
WITHOUT_CLASSIFICATION	A checkbox choosing whether or not only successes should be logged.
WITHOUT_CLASSIFICATION	Overrides AbstractJMeterGuiComponent.configure(TestElement)
WITHOUT_CLASSIFICATION	keep track of classes created
WITHOUT_CLASSIFICATION	(for instructional purposes only!)
WITHOUT_CLASSIFICATION	Perform the sampling
WITHOUT_CLASSIFICATION	Start timing
WITHOUT_CLASSIFICATION	Do something here ...
WITHOUT_CLASSIFICATION	Set up the sample result details
WITHOUT_CLASSIFICATION	End timimg
WITHOUT_CLASSIFICATION	Helper method
WITHOUT_CLASSIFICATION	Helper method to set up the GUI screen
WITHOUT_CLASSIFICATION	Standard setup
WITHOUT_CLASSIFICATION	Add the standard title
WITHOUT_CLASSIFICATION	Specific setup
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	The name of the property used to hold our data $NON-NLS-1$
WITHOUT_CLASSIFICATION	...
WITHOUT_CLASSIFICATION	Note: the file panel already includes the error logging checkbox, so we don't have to add it explicitly.
WITHOUT_CLASSIFICATION	Did sample succeed? Sampler data
WITHOUT_CLASSIFICATION	Create a data input text field @return the panel for entering the data
WITHOUT_CLASSIFICATION	Do something ...
WITHOUT_CLASSIFICATION	Do something ...
WITHOUT_CLASSIFICATION	A String property:
WITHOUT_CLASSIFICATION	Number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	We have a default
WITHOUT_CLASSIFICATION	Throwable wanted
WITHOUT_CLASSIFICATION	Comment wanted
WITHOUT_CLASSIFICATION	Common output function
WITHOUT_CLASSIFICATION	Routine to perform the output (also used by __logn() function)
WITHOUT_CLASSIFICATION	$NON-NLS-1
WITHOUT_CLASSIFICATION	$NON-NLS-1
WITHOUT_CLASSIFICATION	N.B. if the string is not recognised, DEBUG is assumed
WITHOUT_CLASSIFICATION	Thread method is potentially expensive
WITHOUT_CLASSIFICATION	Allow variable to be omitted
WITHOUT_CLASSIFICATION	vars can be null if run from TestPlan
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	@see TestRegexFunction for unit tests
WITHOUT_CLASSIFICATION	Remove initial empty entry
WITHOUT_CLASSIFICATION	$NON-NLS1$ $NON-NLS1$
WITHOUT_CLASSIFICATION	vars will be null on TestPlan
WITHOUT_CLASSIFICATION	did we find BeanShell?
WITHOUT_CLASSIFICATION	Number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	Number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	Relatively expensive operation, so do it once
WITHOUT_CLASSIFICATION	Pass in some variables
WITHOUT_CLASSIFICATION	Mainly for bsh.EvalError
WITHOUT_CLASSIFICATION	Execute the script
WITHOUT_CLASSIFICATION	Helper method for use by scripts
WITHOUT_CLASSIFICATION	Can happen if called during test closedown
WITHOUT_CLASSIFICATION	Parameters are stored here
WITHOUT_CLASSIFICATION	For unit tests, see TestJexlFunction
WITHOUT_CLASSIFICATION	String or Integer
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	N.B. Stop reading the file if we get a blank line: This allows for trailing comments in the file
WITHOUT_CLASSIFICATION	vars will be null on TestPlan
WITHOUT_CLASSIFICATION	Now evaluate the script, getting the result
WITHOUT_CLASSIFICATION	two delimiters in a row; add an empty String
WITHOUT_CLASSIFICATION	Lines in the file, split into columns
WITHOUT_CLASSIFICATION	0-based
WITHOUT_CLASSIFICATION	name of the file
WITHOUT_CLASSIFICATION	Catch the trailing delimiter
WITHOUT_CLASSIFICATION	the beginning of the line is a "delimiter" so that ,a,b,c returns "" "a" "b" "c"
WITHOUT_CLASSIFICATION	will be null if function is used on TestPlan
WITHOUT_CLASSIFICATION	return JMeterContextService.getContext().getCurrentSampler().getName();
WITHOUT_CLASSIFICATION	Added to support external testing
WITHOUT_CLASSIFICATION	Only modified by static block so no need to synchronize subsequent read-only access
WITHOUT_CLASSIFICATION	May be null if function is used on TestPlan
WITHOUT_CLASSIFICATION	@GuardedBy("this")
WITHOUT_CLASSIFICATION	@GuardedBy("this")
WITHOUT_CLASSIFICATION	@GuardedBy("this")
WITHOUT_CLASSIFICATION	@GuardedBy("this")
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	desc.add("Use fully qualified host name: TRUE/FALSE (Default FALSE)"); $NON-NLS-1$
WITHOUT_CLASSIFICATION	vars will be null on TestPlan
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	Number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	We have a default
WITHOUT_CLASSIFICATION	Throwable wanted
WITHOUT_CLASSIFICATION	@GuardedBy("this") needed for error messages
WITHOUT_CLASSIFICATION	@GuardedBy("this") Buffered reader
WITHOUT_CLASSIFICATION	DecimalFormat adds the number to the end of the format if there are no formatting characters, so we need a way to prevent this from messing up the file name.
WITHOUT_CLASSIFICATION	@GuardedBy("this") should we try to open the file?
WITHOUT_CLASSIFICATION	Have we used myCurrent yet? Set to 1 if start number is missing (to allow for end without start)
WITHOUT_CLASSIFICATION	Low chances to be non numeric, we parse
WITHOUT_CLASSIFICATION	Low chances to be non numeric, we parse
WITHOUT_CLASSIFICATION	To avoid re-opening the file repeatedly after an error, only try to open it in the first execute() call (It may be re=opened at EOF, but that will cause at most one failure.)
WITHOUT_CLASSIFICATION	Don't process invalid numbers
WITHOUT_CLASSIFICATION	Don't process invalid numbers (including "")
WITHOUT_CLASSIFICATION	Has chances to be a var
WITHOUT_CLASSIFICATION	for next time
WITHOUT_CLASSIFICATION	EOF, re-open file
WITHOUT_CLASSIFICATION	Did we open the file?
WITHOUT_CLASSIFICATION	Can be null if called from Config item testEnded() method
WITHOUT_CLASSIFICATION	Are we processing a file sequence?
WITHOUT_CLASSIFICATION	there is no variable name
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	Number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	This Map serves two purposes: - maps names to containers - ensures only one container per file across all threads The key is the concatenation of the file name and the XPath string
WITHOUT_CLASSIFICATION	File was not opened successfully Are we processing a file sequence?
WITHOUT_CLASSIFICATION	N.B. setParameters is called before the test proper is started, and thus variables are not interpreted at this point So defer the file open until later to allow variable file names to be used.
WITHOUT_CLASSIFICATION	varName keeps its value and sum has not taken into account non numeric or overflowing number
WITHOUT_CLASSIFICATION	Split string provided
WITHOUT_CLASSIFICATION	@GuardedBy("fileContainers")
WITHOUT_CLASSIFICATION	We don't have a local copy
WITHOUT_CLASSIFICATION	Prevent separate instantiation
WITHOUT_CLASSIFICATION	The cache of file packs - for faster local access
WITHOUT_CLASSIFICATION	save the global copy
WITHOUT_CLASSIFICATION	There's no global copy either
WITHOUT_CLASSIFICATION	save our local copy
WITHOUT_CLASSIFICATION	Parameter list
WITHOUT_CLASSIFICATION	All done, so return
WITHOUT_CLASSIFICATION	All done now ,so return the empty string - this allows the caller to append __CSVRead(file,next) to the last instance of __CSVRead(file,col) N.B. It is important not to read any further lines at this point, otherwise the wrong line can be retrieved when using multiple threads.
WITHOUT_CLASSIFICATION	Need to reset the containers for repeated runs; about the only way for functions to detect that a run is starting seems to be the setParameters() call.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	May be null if function is used on TestPlan
WITHOUT_CLASSIFICATION	Can be null if called from Config item testEnded() method
WITHOUT_CLASSIFICATION	Parameter list
WITHOUT_CLASSIFICATION	what column is wanted?
WITHOUT_CLASSIFICATION	Need to reset the containers for repeated runs; about the only way for functions to detect that a run is starting seems to be the setParameters() call.
WITHOUT_CLASSIFICATION	The cache of file packs - used to improve thread access
WITHOUT_CLASSIFICATION	means platform default
WITHOUT_CLASSIFICATION	empty encoding, return to platorm default
WITHOUT_CLASSIFICATION	Only needed locally
WITHOUT_CLASSIFICATION	This Map serves two purposes: - maps file names to containers - ensures only one container per file across all threads
WITHOUT_CLASSIFICATION	Called by CSVRead(x,next) - sets the row to nil so the next row will be picked up the next time round
WITHOUT_CLASSIFICATION	called by CSVRead(file,alias)
WITHOUT_CLASSIFICATION	First call
WITHOUT_CLASSIFICATION	Already logged
WITHOUT_CLASSIFICATION	Already logged
WITHOUT_CLASSIFICATION	Save in case needed later
WITHOUT_CLASSIFICATION	Not yet open
WITHOUT_CLASSIFICATION	we have a variable name
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	vars will be null on TestPlan
WITHOUT_CLASSIFICATION	For unit tests, see TestJexlFunction
WITHOUT_CLASSIFICATION	Now evaluate the script, getting the result
WITHOUT_CLASSIFICATION	name of the file
WITHOUT_CLASSIFICATION	0-based
WITHOUT_CLASSIFICATION	Can be null if called from Config item testEnded() method
WITHOUT_CLASSIFICATION	Can be null if called from Config item testEnded() method
WITHOUT_CLASSIFICATION	means no restriction
WITHOUT_CLASSIFICATION	Only obtain and cast the return if needed
WITHOUT_CLASSIFICATION	empty chars, return to null
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	should we return original value?
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	Number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	vars will be null on TestPlan
WITHOUT_CLASSIFICATION	vars will be null on TestPlan
WITHOUT_CLASSIFICATION	Has chances to be a var
WITHOUT_CLASSIFICATION	there is no variable name
WITHOUT_CLASSIFICATION	Default to milliseconds
WITHOUT_CLASSIFICATION	probably does not need to be synch (always accessed through ThreadLocal?) give access to Test code
WITHOUT_CLASSIFICATION	vars will be null on Test Plan
WITHOUT_CLASSIFICATION	MAXINT = 2,147,483,647
WITHOUT_CLASSIFICATION	Not found
WITHOUT_CLASSIFICATION	Only modified in class init
WITHOUT_CLASSIFICATION	We have a 3rd parameter
WITHOUT_CLASSIFICATION	Resolve any aliases
WITHOUT_CLASSIFICATION	$NON_NLS-1$ $NON_NLS-1$
WITHOUT_CLASSIFICATION	Not synchronised, so can't be shared
WITHOUT_CLASSIFICATION	Allow for empty name
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	vars will be null on TestPlan
WITHOUT_CLASSIFICATION	varName keeps its value and sum has not taken into account non numeric or overflowing number
WITHOUT_CLASSIFICATION	Values for creating tokens
WITHOUT_CLASSIFICATION	divisor is a positive number should never case NFE
WITHOUT_CLASSIFICATION	Convert to a shorter String for test purposes @return the string value
WITHOUT_CLASSIFICATION	this may need mangling due to peeks
WITHOUT_CLASSIFICATION	cached character == Integer.MAX_VALUE when invalid
WITHOUT_CLASSIFICATION	Reached end of input arguments - perform final processing
WITHOUT_CLASSIFICATION	Key is String or Integer
WITHOUT_CLASSIFICATION	strip the null
WITHOUT_CLASSIFICATION	variables used while parsing options.
WITHOUT_CLASSIFICATION	Yes, so the second argument is missing
WITHOUT_CLASSIFICATION	Keep track of token separator
WITHOUT_CLASSIFICATION	should never get to here when stringIndex != 0
WITHOUT_CLASSIFICATION	Long optional arg must have = as separator
WITHOUT_CLASSIFICATION	non-null Comparators don't appear to be used at present
WITHOUT_CLASSIFICATION	consume stray character
WITHOUT_CLASSIFICATION	Are we about to start a new option?
WITHOUT_CLASSIFICATION	strip the -
WITHOUT_CLASSIFICATION	2nd argument
WITHOUT_CLASSIFICATION	its a long option
WITHOUT_CLASSIFICATION	Parse the arguments that are not options
WITHOUT_CLASSIFICATION	if it is a short option then parse it else ...
WITHOUT_CLASSIFICATION	equivalent to new TreeMap((Comparator)null);
WITHOUT_CLASSIFICATION	private static final Logger log = LoggingManager.getLoggerForClass();
WITHOUT_CLASSIFICATION	Make sure the hashCode depends on the order as well
WITHOUT_CLASSIFICATION	super-class does not use generics
WITHOUT_CLASSIFICATION	super-class does not use generics
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Ignored
WITHOUT_CLASSIFICATION	TODO - charset?
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	this occurs when id == 0 and user has not supplied a descriptor for arguments
WITHOUT_CLASSIFICATION	if get to an arg barrier then return to normal mode else continue accumulating options
WITHOUT_CLASSIFICATION	strip the - -- sequence .. it can either mean a change of state to STATE_NO_OPTIONS or else a long option
WITHOUT_CLASSIFICATION	find order.indexOf(currentKey) using == rather than equals() there may be multiple entries which compare equals (Bug 50898) This will be slightly slower than the built-in method, but replace() is not used frequently.
WITHOUT_CLASSIFICATION	Used for the RuntimeException to short-circuit the traversal $NON-NLS-1$
WITHOUT_CLASSIFICATION	N.B. The keys can be either JMeterTreeNode or TestElement
WITHOUT_CLASSIFICATION	do nothing - means object is found
WITHOUT_CLASSIFICATION	Just in case
WITHOUT_CLASSIFICATION	short circuit traversal when found
WITHOUT_CLASSIFICATION	saves current position in data List
WITHOUT_CLASSIFICATION	end method
WITHOUT_CLASSIFICATION	capture the output
WITHOUT_CLASSIFICATION	helper method to allow input and output to be changed for chaining
WITHOUT_CLASSIFICATION	ensure the application does not hang if it requests input
WITHOUT_CLASSIFICATION	capture the intermediate output
WITHOUT_CLASSIFICATION	not yet terminated
WITHOUT_CLASSIFICATION	not yet terminated N.B. proc.destroy() is called by the finally clause in the run() method
WITHOUT_CLASSIFICATION	we are capturing output Default charset is probably appropriate here.
WITHOUT_CLASSIFICATION	The DNAME which is used if none is provided $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ (do not change) $NON-NLS-1$ (Firefox and Windows) $NON-NLS-1$ (Opera)
WITHOUT_CLASSIFICATION	i.e. does keytool support -gencert and -ext ?
WITHOUT_CLASSIFICATION	not instantiable
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Create cert for CA using root (requires Java 7 for gencert)
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	import the signed CA cert into the store (root already there) - both are needed to sign the domain certificates
WITHOUT_CLASSIFICATION	Create the self-signed keypairs (requires Java 7 for -ext flag)
WITHOUT_CLASSIFICATION	rem generate cert for DOMAIN using CA (requires Java7 for gencert) and import it
WITHOUT_CLASSIFICATION	generate the request
WITHOUT_CLASSIFICATION	Export the Root CA for Firefox/Chrome/IE
WITHOUT_CLASSIFICATION	generate the certificate and store in output file
WITHOUT_CLASSIFICATION	generate the keypair for the host
WITHOUT_CLASSIFICATION	create the certificate rem ku:c=dig,keyE means KeyUsage:criticial=digitalSignature,keyEncipherment
WITHOUT_CLASSIFICATION	Copy for Opera
WITHOUT_CLASSIFICATION	alias subject
WITHOUT_CLASSIFICATION	A temporary cache for the focus listener
WITHOUT_CLASSIFICATION	get the certificate request
WITHOUT_CLASSIFICATION	default charset
WITHOUT_CLASSIFICATION	inport the certificate
WITHOUT_CLASSIFICATION	Add the sub components
WITHOUT_CLASSIFICATION	Register the handler for focus listening. This handler will only notify the registered when the text changes from when the focus is gained to when it is lost.
WITHOUT_CLASSIFICATION	Add the sub components
WITHOUT_CLASSIFICATION	Functor count = 0 is handled specially
WITHOUT_CLASSIFICATION	Necessary to avoid NPE when testing serialisation
WITHOUT_CLASSIFICATION	Necessary to avoid NPE when testing serialisation
WITHOUT_CLASSIFICATION	if provided
WITHOUT_CLASSIFICATION	Compare if the value has changed, since we received focus.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	@GuardedBy("this")
WITHOUT_CLASSIFICATION	should not happen
WITHOUT_CLASSIFICATION	Register the handler for focus listening. This handler will only notify the registered when the text changes from when the focus is gained to when it is lost.
WITHOUT_CLASSIFICATION	Register the handler for focus listening. This handler will only notify the registered when the text changes from when the focus is gained to when it is lost.
WITHOUT_CLASSIFICATION	Add the sub components
WITHOUT_CLASSIFICATION	Compare if the value has changed, since we received focus.
WITHOUT_CLASSIFICATION	A temporary cache for the focus listener
WITHOUT_CLASSIFICATION	used by TableEditor
WITHOUT_CLASSIFICATION	used by TableEditor
WITHOUT_CLASSIFICATION	We use 80% of height
WITHOUT_CLASSIFICATION	private JMenu menu;
WITHOUT_CLASSIFICATION	(Comment 16, Huw)
WITHOUT_CLASSIFICATION	uninstantiable
WITHOUT_CLASSIFICATION	treats last line specially Last line Allow for missing terminator
WITHOUT_CLASSIFICATION	Constructors
WITHOUT_CLASSIFICATION	NOTUSED Dimension dim = layoutSize(parent, false);
WITHOUT_CLASSIFICATION	work out the total size
WITHOUT_CLASSIFICATION	otherwise there's a vgap too many Work out the anchor paint
WITHOUT_CLASSIFICATION	do layout
WITHOUT_CLASSIFICATION	closes reader as well
WITHOUT_CLASSIFICATION	N.B time pattern is passed to java.text.SimpleDateFormat
WITHOUT_CLASSIFICATION	Predefined format patterns, selected by the property log_format_type (see jmeter.properties) The new-line is added later
WITHOUT_CLASSIFICATION	$NON_NLS-1$ $NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$ $NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	non-instantiable - static methods only
WITHOUT_CLASSIFICATION	now set the individual categories (if any)
WITHOUT_CLASSIFICATION	Further configuration
WITHOUT_CLASSIFICATION	Make sure same hierarchy is used
WITHOUT_CLASSIFICATION	This happens if the default log-target id-ref specifies a non-existent target
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	key is the type to collect (usually long), value = count of entries
WITHOUT_CLASSIFICATION	We use a TreeMap because we need the entries to be sorted
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	For n values in an aggregate sample the average value = (val/n) So need to add n (val/n) (val/n) = val val / n
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	Running values, updated for each sample
WITHOUT_CLASSIFICATION	Set the top-level defaults $NON_NLS-1$
WITHOUT_CLASSIFICATION	This can happen if a log-target id-ref specifies a non-existent target
WITHOUT_CLASSIFICATION	Helper method to ensure that format is initialised if initializeLogging() has not yet been called.
WITHOUT_CLASSIFICATION	If the name contains at least one set of paired single-quotes, reformat using DateFormat
WITHOUT_CLASSIFICATION	remove the package prefix
WITHOUT_CLASSIFICATION	e.g. Long.MAX_VALUE
WITHOUT_CLASSIFICATION	e.g. Long.MIN_VALUE
WITHOUT_CLASSIFICATION	use Math.round () instead of simple (long) to provide correct value rounding
WITHOUT_CLASSIFICATION	ignored. May happen occasionally, but no harm done if so.
WITHOUT_CLASSIFICATION	For n same values in sum of square is equal to nval^2
WITHOUT_CLASSIFICATION	no need to divide by 1
WITHOUT_CLASSIFICATION	insert new value
WITHOUT_CLASSIFICATION	If non-null, then any object provided to invoke() is ignored.
WITHOUT_CLASSIFICATION	Methondname must always be provided.
WITHOUT_CLASSIFICATION	If non-null, then any argument list passed to invoke() will be ignored.
WITHOUT_CLASSIFICATION	Argument types used to create the method. May be provided explicitly, or derived from the constructor argument list.
WITHOUT_CLASSIFICATION	This depends on the class or invokee and either args or types; it is set once by doCreateMethod(), which must be the only method to access it.
WITHOUT_CLASSIFICATION	If class not provided, default to invokee class, else null
WITHOUT_CLASSIFICATION	If types not provided, default to argument types, else null
WITHOUT_CLASSIFICATION	Low level invocation routine. Should only be called after any defaults have been applied.
WITHOUT_CLASSIFICATION	If invokee was provided, then clazz has been set up
WITHOUT_CLASSIFICATION	Low-level (recursive) routine to define the method - if not already defined. Synchronized to protect access to methodToInvoke.
WITHOUT_CLASSIFICATION	static only
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Should never happen
WITHOUT_CLASSIFICATION	Use constructor class if present use invokee if provided use argumenrs if provided
WITHOUT_CLASSIFICATION	parent classes to check are inner classes OK?
WITHOUT_CLASSIFICATION	Potentially expensive; do it once
WITHOUT_CLASSIFICATION	Potentially expensive; do it once
WITHOUT_CLASSIFICATION	No need to check it again
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	No need to check it again
WITHOUT_CLASSIFICATION	It does not contain a required string
WITHOUT_CLASSIFICATION	It contains a banned string
WITHOUT_CLASSIFICATION	are inner classes OK?
WITHOUT_CLASSIFICATION	annotation classes to check
WITHOUT_CLASSIFICATION	For each directory in the search path, add all the jars found there
WITHOUT_CLASSIFICATION	Find all jars in the search path
WITHOUT_CLASSIFICATION	Should only be called with classes that extend annotations
WITHOUT_CLASSIFICATION	first get all the classes
WITHOUT_CLASSIFICATION	subClassList);
WITHOUT_CLASSIFICATION	Returns the classpath entries that match the search list of jars and paths
WITHOUT_CLASSIFICATION	find all jar files or paths that end with strPathOrJar
WITHOUT_CLASSIFICATION	no need to look further
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	might throw an exception, assume this is ignorable
WITHOUT_CLASSIFICATION	Converts a class file from the text stored in a Jar file to a version that can be used in Class.forName(). @param strClassName the class name from a Jar file @return String the Java-style dotted version of the name
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$ remove ".class"
WITHOUT_CLASSIFICATION	Recursive call
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	we have a single character; could be a token it is a token
WITHOUT_CLASSIFICATION	Remove trailing splitter
WITHOUT_CLASSIFICATION	Found splitChar at end of line
WITHOUT_CLASSIFICATION	This is the new length
WITHOUT_CLASSIFICATION	we saw a delimiter last time so add the default
WITHOUT_CLASSIFICATION	"<?xml "
WITHOUT_CLASSIFICATION	EOF
WITHOUT_CLASSIFICATION	$NON-NLS-1$ add zero padding
WITHOUT_CLASSIFICATION	@see TestJorphanUtils for unit tests
WITHOUT_CLASSIFICATION	$NON-NLS-1$ add zero padding
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	This is the name of the HotSpot Diagnostic platform MBean (Sun Java 1.6) See: http:download.oracle.com/javase/6/docs/jre/api/management/extension/com/sun/management/HotSpotDiagnosticMXBean.html
WITHOUT_CLASSIFICATION	SingletonHolder idiom for lazy initialisation
WITHOUT_CLASSIFICATION	These are needed for invoking the method
WITHOUT_CLASSIFICATION	If we could not find the method, store the exception here
WITHOUT_CLASSIFICATION	Only invoked by IODH class
WITHOUT_CLASSIFICATION	get the platform beans
WITHOUT_CLASSIFICATION	should never fail See if we can actually find the object Should never happen
WITHOUT_CLASSIFICATION	Prevent useless dump attempts
WITHOUT_CLASSIFICATION	the string so far
WITHOUT_CLASSIFICATION	opened tags
WITHOUT_CLASSIFICATION	don't do anything
WITHOUT_CLASSIFICATION	java.util.Date d = null;
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Potentially expensive; do it once
WITHOUT_CLASSIFICATION	-- JMX file attributes - do not change
WITHOUT_CLASSIFICATION	Don't instantiate class
WITHOUT_CLASSIFICATION	++ JMX file attributes - do not change
WITHOUT_CLASSIFICATION	i.e. no filter
WITHOUT_CLASSIFICATION	The test object, i.e. the instance of the class containing the test method This is the same as testCase for JUnit3 tests but different for JUnit4 tests which use a wrapper
WITHOUT_CLASSIFICATION	The TestCase to run
WITHOUT_CLASSIFICATION	the Method objects for setUp (@Before) and tearDown (@After) methods Will be null if not provided or not required
WITHOUT_CLASSIFICATION	The method name to be invoked
WITHOUT_CLASSIFICATION	Method should add the JUnit testXXX method to the list at the end, since the sequence matters. @param methodName
WITHOUT_CLASSIFICATION	The wrapper used to invoke the method
WITHOUT_CLASSIFICATION	Assume success
WITHOUT_CLASSIFICATION	The name of the class containing the method
WITHOUT_CLASSIFICATION	Do not use TestCase.run(TestResult) method, since it will call setUp and tearDown. Doing that will result in calling the setUp and tearDown method twice and the elapsed time will include setup and teardown.
WITHOUT_CLASSIFICATION	create a new TestResult
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Convert JUnit4 failure to Junit3 style
WITHOUT_CLASSIFICATION	copy the original stack trace
WITHOUT_CLASSIFICATION	we should log a warning, but allow the test to keep running
WITHOUT_CLASSIFICATION	this should be externalized to the properties
WITHOUT_CLASSIFICATION	probably should not happen
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	copy the original stack trace
WITHOUT_CLASSIFICATION	if the string constructor is not null, we use it. if the string constructor is null, we use the empty constructor to get a new instance
WITHOUT_CLASSIFICATION	first we see if the class declares a string constructor. if it is doesn't we look for empty constructor.
WITHOUT_CLASSIFICATION	we have to check and make sure the constructor is accessible. if we didn't it would throw an exception and cause a NPE.
WITHOUT_CLASSIFICATION	Must be final to create instance
WITHOUT_CLASSIFICATION	NO NEED TO INITIALIZE WHEN getCreateOneInstancePerSample is true cause it will be done in sample
WITHOUT_CLASSIFICATION	Convert JUnit4 AssertionError failures to JUnit3 style so will be treated as failure rather than error.
WITHOUT_CLASSIFICATION	Calling a method via reflection results in wrapping any Exceptions in ITE; unwrap these here so runProtected can allocate them correctly.
WITHOUT_CLASSIFICATION	Dummy to ensure there is a test to run
WITHOUT_CLASSIFICATION	Generates expected Exception
WITHOUT_CLASSIFICATION	Dummy to ensure there is a test to run
WITHOUT_CLASSIFICATION	Dummy to ensure there is a test to run
WITHOUT_CLASSIFICATION	Dummy to ensure there is a test to run
WITHOUT_CLASSIFICATION	Dummy to ensure there is a test to run
WITHOUT_CLASSIFICATION	let bad input fail silently
WITHOUT_CLASSIFICATION	Succeeds only if Before method - verifyTwo() - is run.
WITHOUT_CLASSIFICATION	Fails to generate expected Exception
WITHOUT_CLASSIFICATION	or if you have assertions enabled
WITHOUT_CLASSIFICATION	should always fail
WITHOUT_CLASSIFICATION	should not fail
WITHOUT_CLASSIFICATION	Generate a test error
WITHOUT_CLASSIFICATION	will generate Divide by zero error
WITHOUT_CLASSIFICATION	will generate Divide by zero error
WITHOUT_CLASSIFICATION	Normal test failure
WITHOUT_CLASSIFICATION	Generate test error
WITHOUT_CLASSIFICATION	equation for calculating the weight w = (int)(33 (used/max))
WITHOUT_CLASSIFICATION	changed the logic for BEA Weblogic in the case a user uses Tomcat's status servlet without any modifications. Weblogic will return nothing for the connector, therefore we need to check the size of the list. Peter 12.22.04
WITHOUT_CLASSIFICATION	int spare = cntr.getThreadInfo().getMaxSpareThreads();
WITHOUT_CLASSIFICATION	loop to fetch desired connector
WITHOUT_CLASSIFICATION	default : get first connector
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	CRLF blank line found
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	private MonitorModel DATA;
WITHOUT_CLASSIFICATION	log.warn("Only for use in unit testing");
WITHOUT_CLASSIFICATION	log.warn("Only for use in unit testing");
WITHOUT_CLASSIFICATION	log.warn("Only for use in unit testing");
WITHOUT_CLASSIFICATION	log.warn("Only for use in unit testing");
WITHOUT_CLASSIFICATION	we check to see if the lastSelectedPath is null after we clear, it would return null
WITHOUT_CLASSIFICATION	this.DATA = null; this.DATA = stat;
WITHOUT_CLASSIFICATION	I18N: Contains fixed English text ...
WITHOUT_CLASSIFICATION	DATA = model;
WITHOUT_CLASSIFICATION	draw grid only when x is 1. If we didn't the grid line would draw over the data lines making it look bad.
WITHOUT_CLASSIFICATION	optional connector name prefix
WITHOUT_CLASSIFICATION	private List workerslist;
WITHOUT_CLASSIFICATION	the equations
WITHOUT_CLASSIFICATION	for now just swallow the exception
WITHOUT_CLASSIFICATION	surl can be null if read from a file
WITHOUT_CLASSIFICATION	let bad input fail silently
WITHOUT_CLASSIFICATION	MAIN PANEL
WITHOUT_CLASSIFICATION	Add the main panel and the graph
WITHOUT_CLASSIFICATION	called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	let bad input fail silently
WITHOUT_CLASSIFICATION	Should never happen
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	private boolean startDoc = false; private boolean endDoc = false;
WITHOUT_CLASSIFICATION	this.startDoc = true; Reset all work variables so reusing the instance starts afresh.
WITHOUT_CLASSIFICATION	this.startDoc = false; this.endDoc = true;
WITHOUT_CLASSIFICATION	let bad input fail silently
WITHOUT_CLASSIFICATION	Note: the element is a ConfigTestElement, so cannot use FTPSampler access methods
WITHOUT_CLASSIFICATION	N.B. Originally there was only one filename, and only get(RETR) was supported To maintain backwards compatibility, the property name needs to remain the same $NON-NLS-1$
WITHOUT_CLASSIFICATION	Use binary mode file transfer? $NON-NLS-1$
WITHOUT_CLASSIFICATION	used for interrupting the sampler
WITHOUT_CLASSIFICATION	Assume failure
WITHOUT_CLASSIFICATION	should probably come from the setup dialog
WITHOUT_CLASSIFICATION	Could not access file or other error
WITHOUT_CLASSIFICATION	TODO - charset?
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	called by HttpRequestHdr
WITHOUT_CLASSIFICATION	LF blank line found
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	MAIN PANEL
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Are we uploading? $NON-NLS-1$
WITHOUT_CLASSIFICATION	Should the file data be saved in the response? $NON-NLS-1$
WITHOUT_CLASSIFICATION	No need to close this No need to close this
WITHOUT_CLASSIFICATION	The value is not encoded
WITHOUT_CLASSIFICATION	Let the GUI show that it will not be encoded
WITHOUT_CLASSIFICATION	Get the filename
WITHOUT_CLASSIFICATION	Set the values retrieved for the file upload
WITHOUT_CLASSIFICATION	Find the first empty line of the multipart, it signals end of headers for multipart Agents are supposed to terminate lines in CRLF:
WITHOUT_CLASSIFICATION	regular expression used to match against embedded resource URLs
WITHOUT_CLASSIFICATION	need to clear because the
WITHOUT_CLASSIFICATION	OPTIONAL TASKS
WITHOUT_CLASSIFICATION	2 columns size
WITHOUT_CLASSIFICATION	used by HttpTestSampleGui
WITHOUT_CLASSIFICATION	WEB REQUEST PANEL
WITHOUT_CLASSIFICATION	set this false to suppress some items for use in HTTP Request defaults
WITHOUT_CLASSIFICATION	called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Set false for AJP
WITHOUT_CLASSIFICATION	Body data
WITHOUT_CLASSIFICATION	Tabbed pane that contains parameters and raw body
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Default changed in 2.3 and again in 2.4
WITHOUT_CLASSIFICATION	Concurrent resources download $NON-NLS-1$
WITHOUT_CLASSIFICATION	See modifyTestElement
WITHOUT_CLASSIFICATION	Embedded URL match regex $NON-NLS-1$
WITHOUT_CLASSIFICATION	WEB REQUEST PANEL
WITHOUT_CLASSIFICATION	Textfield uses \n (LF) to delimit lines; we need to send CRLF. Rather than change the way that arguments are processed by the samplers for raw data, it is easier to fix the data. On retrival, CRLF is converted back to LF for storage in the text field. See
WITHOUT_CLASSIFICATION	If RAW data and Parameters match we allow switching
WITHOUT_CLASSIFICATION	Convert CRLF to CR, see modifyTestElement
WITHOUT_CLASSIFICATION	all sub-components with setFont(null) inherit this font
WITHOUT_CLASSIFICATION	Only display the port number if it is meaningfully specified
WITHOUT_CLASSIFICATION	WEB SERVER PANEL
WITHOUT_CLASSIFICATION	autoRedirects and followRedirects cannot both be selected
WITHOUT_CLASSIFICATION	Implementation
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	PROTOCOL
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	CONTENT_ENCODING
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	If there is no data, then switching between Parameters and Raw should be allowed with no further user interaction.
WITHOUT_CLASSIFICATION	If there is data in the Raw panel, then the user should be prevented from switching (that would be easy to track).
WITHOUT_CLASSIFICATION	If the Parameter data can be converted (i.e. no names), we warn the user that the Parameter data will be lost.
WITHOUT_CLASSIFICATION	If the Parameter data cannot be converted to Raw, then the user should be prevented from doing so raise an error dialog
WITHOUT_CLASSIFICATION	Cached value
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	package-protected to allow access by unit-test cases
WITHOUT_CLASSIFICATION	helper method to save the cache entry
WITHOUT_CLASSIFICATION	invalid dates must be treated as expired
WITHOUT_CLASSIFICATION	if no-cache is present, ensure that expiresDate remains null, which forces revalidation
WITHOUT_CLASSIFICATION	the max-age directive overrides the Expires header,
WITHOUT_CLASSIFICATION	No max-age && No expires
WITHOUT_CLASSIFICATION	date or lastModified may be null or in bad format
WITHOUT_CLASSIFICATION	else expiresDate computed in (expires!=null) condition is used
WITHOUT_CLASSIFICATION	Helper method to deal with missing headers - Commons HttpClient
WITHOUT_CLASSIFICATION	Apache HttpClient
WITHOUT_CLASSIFICATION	Is the sample result OK to cache? i.e is it in the 2xx range?
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	+ JMX attributes, do not change values $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ -
WITHOUT_CLASSIFICATION	i.e. not using Expires Check that we are processing Expires/CacheControl
WITHOUT_CLASSIFICATION	see https:developer.mozilla.org/en/HTTP_Caching_FAQ see http:www.ietf.org/rfc/rfc2616.txt#13.2.4
WITHOUT_CLASSIFICATION	cache the value
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	echo back
WITHOUT_CLASSIFICATION	Check if we have read all the headers
WITHOUT_CLASSIFICATION	We know when to stop reading, so we can allow the read method to block
WITHOUT_CLASSIFICATION	No divider was found
WITHOUT_CLASSIFICATION	use null for no expiry
WITHOUT_CLASSIFICATION	Store session cookies as well as unexpired ones
WITHOUT_CLASSIFICATION	Store session cookies as well as unexpired ones
WITHOUT_CLASSIFICATION	Has its own debug log; removes matching cookies
WITHOUT_CLASSIFICATION	Has its own debug log; removes matching cookies
WITHOUT_CLASSIFICATION	This means the cookie was wrong for the URL
WITHOUT_CLASSIFICATION	This means the cookie was wrong for the URL
WITHOUT_CLASSIFICATION	tweak diff HC3 vs HC4
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	The headers and body are divided by a blank line (the \r is to allow for the CR before LF) $NON-NLS-1$
WITHOUT_CLASSIFICATION	If we know the content length, we can allow the reading of the request to block until more data arrives. If it is chunked transfer, we cannot allow the reading to block, because we do not know when to stop reading, because the chunked transfer is not properly supported yet
WITHOUT_CLASSIFICATION	Check how much of the body we have already read as part of reading the headers We subtract two bytes for the crlf divider between header and body
WITHOUT_CLASSIFICATION	The reqest has no body, or it has a transfer encoding we do not support. In either case, we read any data available
WITHOUT_CLASSIFICATION	We use multi-line mask so can prefix the line with ^ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	use null for no expiry
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Needs to be package-protected to avoid problem with serialisation tests
WITHOUT_CLASSIFICATION	start off with a merged object as a copy of the local object
WITHOUT_CLASSIFICATION	iterate thru each of the other headers
WITHOUT_CLASSIFICATION	find the same property in the local headers
WITHOUT_CLASSIFICATION	we have a match
WITHOUT_CLASSIFICATION	prefer values from the other object
WITHOUT_CLASSIFICATION	the other object has an empty value, so remove this value from the merged object
WITHOUT_CLASSIFICATION	use the other object's value
WITHOUT_CLASSIFICATION	break out of the inner loop
WITHOUT_CLASSIFICATION	the other object has a new value to be added to the merged
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	TODO Charset ?
WITHOUT_CLASSIFICATION	finally, merge the names so it's clear they've been merged
WITHOUT_CLASSIFICATION	Saves the error if one occurs
WITHOUT_CLASSIFICATION	Listen on main socket
WITHOUT_CLASSIFICATION	Pass request to new thread
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	TODO Charset ? $NON-NLS-1$
WITHOUT_CLASSIFICATION	TODO Charset ? $NON-NLS-1$
WITHOUT_CLASSIFICATION	Only used by GUI
WITHOUT_CLASSIFICATION	Timeout occurred. Ignore, and keep looping until we're told to stop running.
WITHOUT_CLASSIFICATION	Ensure that there is always a collection available
WITHOUT_CLASSIFICATION	default level allow override by system properties
WITHOUT_CLASSIFICATION	final int _ignored = 1;
WITHOUT_CLASSIFICATION	++ JMX tag values $NON-NLS-1$
WITHOUT_CLASSIFICATION	Can't have two matching cookies
WITHOUT_CLASSIFICATION	ensure that the initial cookies are copied to the per-thread instances
WITHOUT_CLASSIFICATION	long max was used to represent a non-expiring cookie, but that caused problems
WITHOUT_CLASSIFICATION	Used by GUI
WITHOUT_CLASSIFICATION	Used by GUI
WITHOUT_CLASSIFICATION	$NON-NLS-1$ -- JMX tag values
WITHOUT_CLASSIFICATION	only save unexpired cookies
WITHOUT_CLASSIFICATION	flag - if all machines within a given domain can access the variable. (from http:www.cookiecentral.com/faq/ 3.5)
WITHOUT_CLASSIFICATION	ensure data is set up OK initially
WITHOUT_CLASSIFICATION	do nothing, the cookie manager has to accept changes.
WITHOUT_CLASSIFICATION	do nothing, the cookie manager has to accept changes.
WITHOUT_CLASSIFICATION	Scan for any matching cookies
WITHOUT_CLASSIFICATION	TODO Charset ?
WITHOUT_CLASSIFICATION	Remove all the cookies.
WITHOUT_CLASSIFICATION	Used by HttpMirrorServer
WITHOUT_CLASSIFICATION	No need to call clear
WITHOUT_CLASSIFICATION	and as a string
WITHOUT_CLASSIFICATION	Used for saving entries to a file
WITHOUT_CLASSIFICATION	wait for server to stop
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	regular expression used to match against embedded resource URLs
WITHOUT_CLASSIFICATION	OPTIONAL TASKS
WITHOUT_CLASSIFICATION	Use this instead of getLabelResource() otherwise getDocAnchor() below does not work
WITHOUT_CLASSIFICATION	flag - if all machines within a given domain can access the variable. (from http:www.cookiecentral.com/faq/ 3.5)
WITHOUT_CLASSIFICATION	Column numbers - must agree with order above
WITHOUT_CLASSIFICATION	only http and https are supported
WITHOUT_CLASSIFICATION	Obtain another URL with an explicit port:
WITHOUT_CLASSIFICATION	Allow for old format file without mechanism support
WITHOUT_CLASSIFICATION	this should never happen anyway, we'll continue with url2 set to null.
WITHOUT_CLASSIFICATION	For use by AJP
WITHOUT_CLASSIFICATION	Allow for old format file without the extra columnns
WITHOUT_CLASSIFICATION	Needs to be package protected for Unit test
WITHOUT_CLASSIFICATION	Embedded URL match regex
WITHOUT_CLASSIFICATION	does not apply to Java implementation
WITHOUT_CLASSIFICATION	add a listener to activate or not concurrent dwn.
WITHOUT_CLASSIFICATION	URL CONFIG
WITHOUT_CLASSIFICATION	includes \n
WITHOUT_CLASSIFICATION	Bottom (embedded resources, source address and optional tasks)
WITHOUT_CLASSIFICATION	2 column size
WITHOUT_CLASSIFICATION	called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	RETRIEVE IMAGES $NON-NLS-1$
WITHOUT_CLASSIFICATION	go to 1st line
WITHOUT_CLASSIFICATION	Download concurrent resources $NON-NLS-1$
WITHOUT_CLASSIFICATION	Is monitor $NON-NLS-1$
WITHOUT_CLASSIFICATION	only contains HTTPFileArg elements
WITHOUT_CLASSIFICATION	Use MD5 $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Add a new field source ip address (for HC implementations only) default: IP/Hostname
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ default: IP/Hostname
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Button for browsing webservice wsdl
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Web Methods
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	improve xml display
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	add the proxy elements
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	MAIN PANEL
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	we only put HTTPFileArgs in it
WITHOUT_CLASSIFICATION	$NON-NLS-1$ Permit dynamic resize of TextArea
WITHOUT_CLASSIFICATION	We get the AuthManager and pass it to the WSDLHelper once the sampler is updated to Axis, all of this stuff should not be necessary. Now I just need to find the time and motivation to do it.
WITHOUT_CLASSIFICATION	if use proxy is checked, we enable the text fields for the host and port
WITHOUT_CLASSIFICATION	required for unit tests
WITHOUT_CLASSIFICATION	Disable DELETE and BROWSE buttons if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	Disable DELETE and BROWSE if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	create the JTable that holds header per row
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.createTestElement()
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.modifyTestElement(TestElement)
WITHOUT_CLASSIFICATION	Enable DELETE (which may already be enabled, but it won't hurt)
WITHOUT_CLASSIFICATION	Highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	Highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	Force a minimum table height of 70 pixels
WITHOUT_CLASSIFICATION	called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	Highlight (select) the appropriate rows.
WITHOUT_CLASSIFICATION	all table cells are editable
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Table still contains one or more rows, so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	If a table cell is being edited, we must cancel the editing before deleting the row.
WITHOUT_CLASSIFICATION	If a table cell is being edited, we must cancel the editing before deleting the row.
WITHOUT_CLASSIFICATION	Disable the DELETE and SAVE buttons if no rows remaining after delete
WITHOUT_CLASSIFICATION	$NON-NLS-1$ --
WITHOUT_CLASSIFICATION	Enable the DELETE and SAVE buttons if they are currently disabled.
WITHOUT_CLASSIFICATION	If a table cell is being edited, we should accept the current value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	Non-expiring
WITHOUT_CLASSIFICATION	Disable the DELETE and SAVE buttons if no rows remaining after delete.
WITHOUT_CLASSIFICATION	preset to default impl
WITHOUT_CLASSIFICATION	create the JTable that holds one cookie per row
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	++ Action command names $NON-NLS-1$
WITHOUT_CLASSIFICATION	Highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	Table still contains one or more rows, so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	drop-down list for renderer
WITHOUT_CLASSIFICATION	if no results render in jmeter.properties, load Standard (default)
WITHOUT_CLASSIFICATION	called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	If a table cell is being edited, we should accept the current value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	If a table cell is being edited, we must cancel the editing before deleting the row
WITHOUT_CLASSIFICATION	only contains Argument (or HTTPArgument)
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ removed expiration because it's just an annoyance for static cookies
WITHOUT_CLASSIFICATION	If a table cell is being edited, we must cancel the editing before deleting the row.
WITHOUT_CLASSIFICATION	Table still contains one or more rows, so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	Table still contains one or more rows, so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	If a table cell is being edited, we should accept the current value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	Enable the DELETE and SAVE buttons if they are currently disabled.
WITHOUT_CLASSIFICATION	Enable the DELETE and SAVE buttons if they are currently disabled.
WITHOUT_CLASSIFICATION	Disable the DELETE and SAVE buttons if no rows remaining after delete.
WITHOUT_CLASSIFICATION	Button Panel
WITHOUT_CLASSIFICATION	create the JTable that holds auth per row
WITHOUT_CLASSIFICATION	Ignore non-HTTP samplers
WITHOUT_CLASSIFICATION	&& !isPathExtensionNoQuestionmark()
WITHOUT_CLASSIFICATION	&& !isPathExtensionNoEquals()
WITHOUT_CLASSIFICATION	&& !isPathExtensionNoEquals() && !isPathExtensionNoQuestionmark()
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	if ! isPathExtension()
WITHOUT_CLASSIFICATION	Highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	all table cells are editable
WITHOUT_CLASSIFICATION	Don't get tripped up by RE chars in the arg name
WITHOUT_CLASSIFICATION	name="sessionid" value="value"
WITHOUT_CLASSIFICATION	----------------------------------------------------------------------- Methods -----------------------------------------------------------------------
WITHOUT_CLASSIFICATION	return the current value (don't forget the prefix!)
WITHOUT_CLASSIFICATION	increment the value
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	transient Perl5Compiler compiler = new Perl5Compiler(); $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	PreProcessors are cloned per-thread, so this will be saved per-thread $NON-NLS-1$
WITHOUT_CLASSIFICATION	;sessionid=value $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	value="value" name="sessionid" $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------ Constructors ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------ Methods implemented from interface org.apache.jmeter.config.Modifier ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------ Methods ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	if a mask for this argument exists
WITHOUT_CLASSIFICATION	values to be masked must be set in the WebApp to ""
WITHOUT_CLASSIFICATION	create instances needed for parsing
WITHOUT_CLASSIFICATION	XMLReaderFactory.createXMLReader(vendorParseClass);
WITHOUT_CLASSIFICATION	register content handler
WITHOUT_CLASSIFICATION	register error handler
WITHOUT_CLASSIFICATION	parse
WITHOUT_CLASSIFICATION	------------------------------------------- Constants and Data Members -------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------- Constructors -------------------------------------------
WITHOUT_CLASSIFICATION	initalise pointer to first user
WITHOUT_CLASSIFICATION	Use round robin allocation of user details
WITHOUT_CLASSIFICATION	no entries in all users, therefore create an empty Map object
WITHOUT_CLASSIFICATION	if parameter name exists in http request then change its value with value obtained with regular expression
WITHOUT_CLASSIFICATION	verify if regex groups exists
WITHOUT_CLASSIFICATION	Note UserParameterXML accesses this variable to obtain the Set data via method getParsedParameters()
WITHOUT_CLASSIFICATION	cannot be first line either
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	------------------------------------------- Constants and Data Members -------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------- Methods -------------------------------------------
WITHOUT_CLASSIFICATION	haven't got to reset paramname & paramvalue but did it to keep the code looking correct
WITHOUT_CLASSIFICATION	These are used as GUI item names; LOWERBOUND, UPPERBOUND and INCREMENT are used in the focusLost() method
WITHOUT_CLASSIFICATION	must create a new object, or else end up with a set full of the same Map object
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------- Methods (used by UserParameterXML to get XML parameters from XML file) -----------------------------------------------------------------------
WITHOUT_CLASSIFICATION	this.updateUI();
WITHOUT_CLASSIFICATION	boolean pass = true;
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Next line
WITHOUT_CLASSIFICATION	called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	UTF-8 unsupported? You must be joking!
WITHOUT_CLASSIFICATION	N.B. Since the tags are extracted from an HTML Form, any values must already have been encoded
WITHOUT_CLASSIFICATION	The value is in the second group
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Cache of parsers - parsers must be re-usable
WITHOUT_CLASSIFICATION	Is there a cached parser?
WITHOUT_CLASSIFICATION	cache the parser
WITHOUT_CLASSIFICATION	The Set is used to ignore duplicated binary files. Using a LinkedHashSet to avoid unnecessary overhead in iterating the elements in the set later on. As a side-effect, this will keep them roughly in order, which should be a better model of browser behaviour.
WITHOUT_CLASSIFICATION	A dummy class to pass the pointer of URL.
WITHOUT_CLASSIFICATION	then we need to download the binary
WITHOUT_CLASSIFICATION	we check the input tag type for image
WITHOUT_CLASSIFICATION	Putting the string first means it works even if the attribute is null
WITHOUT_CLASSIFICATION	Now look for URLs in the STYLE attribute
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	we check the input tag type for image
WITHOUT_CLASSIFICATION	then we need to download the binary
WITHOUT_CLASSIFICATION	Putting the string first means it works even if the attribute is null
WITHOUT_CLASSIFICATION	Now look for URLs in the STYLE attribute
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	case Node.TEXT_NODE: break;
WITHOUT_CLASSIFICATION	Helper method to get an attribute value, if it exists @param attrs list of attributs @param attname attribute name @return
WITHOUT_CLASSIFICATION	Note there's 3 capturing groups per value
WITHOUT_CLASSIFICATION	Number of capturing groups possibly containing Base HREFs:
WITHOUT_CLASSIFICATION	Check for a BASE HREF:
WITHOUT_CLASSIFICATION	Doesn't even look like a URL? Maybe it isn't: Ignore the exception.
WITHOUT_CLASSIFICATION	url.replace('+',' ');
WITHOUT_CLASSIFICATION	No WARN message to avoid performance impact
WITHOUT_CLASSIFICATION	Private iterator used to unwrap the URL from the URLString class
WITHOUT_CLASSIFICATION	Unwraps the URLString class to return the URL
WITHOUT_CLASSIFICATION	Noop
WITHOUT_CLASSIFICATION	Try to ensure that more javascript code is processed OK ...
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Listen on main socket
WITHOUT_CLASSIFICATION	Timeout occurred. Ignore, and keep looping until we're told to stop running.
WITHOUT_CLASSIFICATION	A dummy class to pass the pointer of URL.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	we check the input tag type for image
WITHOUT_CLASSIFICATION	then we need to download the binary
WITHOUT_CLASSIFICATION	Putting the string first means it works even if the attribute is null
WITHOUT_CLASSIFICATION	Now look for URLs in the STYLE attribute
WITHOUT_CLASSIFICATION	Now parse the DOM tree
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	a url is always in a Tag.
WITHOUT_CLASSIFICATION	first we check to see if body tag has a background set
WITHOUT_CLASSIFICATION	look for applets
WITHOUT_CLASSIFICATION	look for Objects
WITHOUT_CLASSIFICATION	second, if the tag was a composite tag, recursively parse its children.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ proxy.binary.filetype=binary
WITHOUT_CLASSIFICATION	Optionally number the requests
WITHOUT_CLASSIFICATION	running number
WITHOUT_CLASSIFICATION	Pass request to new proxy thread
WITHOUT_CLASSIFICATION	Use default encoding
WITHOUT_CLASSIFICATION	Tell the sampler to do a multipart post
WITHOUT_CLASSIFICATION	Set the form data
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Used by GUI
WITHOUT_CLASSIFICATION	and as a string
WITHOUT_CLASSIFICATION	Set the file uploads
WITHOUT_CLASSIFICATION	Remove the header for content-type and content-length, since those values will most likely be incorrect when the sampler performs the multipart request, because the boundary string will change
WITHOUT_CLASSIFICATION	used when postData is pure xml (eg. an xml-rpc call) or for PUT
WITHOUT_CLASSIFICATION	It is the most common post request, with parameter name and values We also assume this if no content type is present, to be most backwards compatible, but maybe we should only parse arguments if the content type is as expected standard name=value postData
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Just put the whole postbody as the value of a parameter used when postData is pure xml (ex. an xml-rpc call)
WITHOUT_CLASSIFICATION	Although the spec says UTF-8 should be used for encoding URL parameters, most browser use ISO-8859-1 for default if encoding is not known. We use null for contentEncoding, then the url parameters will be added with the value in the URL, and the "encode?" flag set to false
WITHOUT_CLASSIFICATION	Set the content encoding
WITHOUT_CLASSIFICATION	Check if the request itself tells us what the encoding is
WITHOUT_CLASSIFICATION	Check if we know the encoding of the page
WITHOUT_CLASSIFICATION	Check if we know the encoding of the form
WITHOUT_CLASSIFICATION	Form encoding has priority over page encoding
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	wait for server to stop
WITHOUT_CLASSIFICATION	Must agree with the order of entries in the drop-down created in ProxyControlGui.createGroupingPanel() private static final int GROUPING_NO_GROUPS = 0;
WITHOUT_CLASSIFICATION	$NON-NLS-1$ - JMX file attributes
WITHOUT_CLASSIFICATION	Note: Windows user preferences are stored relative to: HKEY_CURRENT_USER\Software\JavaSoft\Prefs
WITHOUT_CLASSIFICATION	Original numeric order (we now use strings)
WITHOUT_CLASSIFICATION	$NON-NLS-1$ Detect if user has pressed a new link
WITHOUT_CLASSIFICATION	for ssl connection
WITHOUT_CLASSIFICATION	Proxy configuration SSL
WITHOUT_CLASSIFICATION	should not happen
WITHOUT_CLASSIFICATION	Keys for user preferences
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	Should we match using regexes?
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Whether to use dymanic key generation (if supported) $NON-NLS-1$;
WITHOUT_CLASSIFICATION	The alias to be used if dynamic host names are not possible $NON-NLS-1$
WITHOUT_CLASSIFICATION	If this is defined, it is assumed to be the alias of a user-supplied certificate; overrides dynamic mode $NON-NLS-1$
WITHOUT_CLASSIFICATION	user-provided keystore keystore generated by JMeter; single entry
WITHOUT_CLASSIFICATION	Whether to use the redirect disabling feature (can be switched off if it does not work)
WITHOUT_CLASSIFICATION	Although this field is mutable, it is only accessed within the synchronized method deliverSampler()
WITHOUT_CLASSIFICATION	When was the last sample seen?
WITHOUT_CLASSIFICATION	maintain original behaviour
WITHOUT_CLASSIFICATION	Convert the old numeric types - just in case someone wants to reload the workbench
WITHOUT_CLASSIFICATION	make sure we log the error
WITHOUT_CLASSIFICATION	the url matches the last redirect
WITHOUT_CLASSIFICATION	Save Location so resulting sample can be disabled
WITHOUT_CLASSIFICATION	OK, because find only returns correct element types
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Package protected to allow test case access
WITHOUT_CLASSIFICATION	Package protected to allow test case access
WITHOUT_CLASSIFICATION	If no expressions are specified, we let the sample pass
WITHOUT_CLASSIFICATION	Check that we have a content type
WITHOUT_CLASSIFICATION	Check if the include pattern is matched
WITHOUT_CLASSIFICATION	Check if the exclude pattern is matched
WITHOUT_CLASSIFICATION	Not 100% sure, but I believe this can't happen, so I'll log and throw an error:
WITHOUT_CLASSIFICATION	Not 100% sure, but I believe this can't happen, so I'll log and throw an error:
WITHOUT_CLASSIFICATION	Look for elements directly within the HTTP proxy:
WITHOUT_CLASSIFICATION	Look for arguments elements in the target controller or higher up:
WITHOUT_CLASSIFICATION	Special case for the TestPlan's Arguments sub-element:
WITHOUT_CLASSIFICATION	Remember this was first in its batch
WITHOUT_CLASSIFICATION	Decent value for timers
WITHOUT_CLASSIFICATION	Huh! don't store this one!
WITHOUT_CLASSIFICATION	If we're not storing subsequent samplers, we'll need the first sampler to do all the work...:
WITHOUT_CLASSIFICATION	Find the last controller in the target to store the sampler there:
WITHOUT_CLASSIFICATION	There's a few properties which are excluded from this processing:
WITHOUT_CLASSIFICATION	go on with next property.
WITHOUT_CLASSIFICATION	Build the replacer from all the variables in the collection:
WITHOUT_CLASSIFICATION	TL - TE
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$; $NON-NLS-1$;
WITHOUT_CLASSIFICATION	Assume we have already created the store
WITHOUT_CLASSIFICATION	Assume we have already created the store
WITHOUT_CLASSIFICATION	no CA key - probably the wrong store type. cannot continue
WITHOUT_CLASSIFICATION	store is faulty, we need to recreate it if cert is not valid, flag up to recreate it
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	store is faulty, we need to recreate it if cert is not valid, flag up to recreate it
WITHOUT_CLASSIFICATION	message includes the file name
WITHOUT_CLASSIFICATION	no existing file or not valid Alphanum to avoid issues with command-line quoting we use same password for both
WITHOUT_CLASSIFICATION	no existing file or not valid Alphanum to avoid issues with command-line quoting we use same password for both
WITHOUT_CLASSIFICATION	This should now work
WITHOUT_CLASSIFICATION	This should now work
WITHOUT_CLASSIFICATION	The subject may be either a host or a domain
WITHOUT_CLASSIFICATION	reload to pick up new aliases reloading is very quick compared with creating an entry currently
WITHOUT_CLASSIFICATION	not a wildcard
WITHOUT_CLASSIFICATION	This should only be called for a specific host
WITHOUT_CLASSIFICATION	ensure Proxy threads cannot interfere with each other
WITHOUT_CLASSIFICATION	reload after adding alias
WITHOUT_CLASSIFICATION	safer to start afresh
WITHOUT_CLASSIFICATION	the keystore for use by the Proxy
WITHOUT_CLASSIFICATION	Allow list of headers to be overridden $NON-NLS-1$
WITHOUT_CLASSIFICATION	Use with SSL connection
WITHOUT_CLASSIFICATION	For identifying log messages
WITHOUT_CLASSIFICATION	keystore for SSL keys; fixed at config except for dynamic host key generation
WITHOUT_CLASSIFICATION	Check which HTTPSampler class we should use
WITHOUT_CLASSIFICATION	Now, parse initial request (in case it is a CONNECT request)
WITHOUT_CLASSIFICATION	Should not happen, but if it does we don't want to continue
WITHOUT_CLASSIFICATION	Re-parse (now it's the http request over SSL)
WITHOUT_CLASSIFICATION	most likely this is because of a certificate error
WITHOUT_CLASSIFICATION	Now parse the DOM tree
WITHOUT_CLASSIFICATION	we start to iterate through the elements
WITHOUT_CLASSIFICATION	a url is always in a Tag.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	With ssl request, url is host:port (without https: or path) $NON-NLS-1$
WITHOUT_CLASSIFICATION	Create a Header Manager to ensure that the browsers headers are captured and sent to the server
WITHOUT_CLASSIFICATION	Needed for HTTPSampler2
WITHOUT_CLASSIFICATION	Needed for HTTPSampler2
WITHOUT_CLASSIFICATION	Find the page encoding and possibly encodings for forms in the page in the response from the web server
WITHOUT_CLASSIFICATION	ignored, already processed
WITHOUT_CLASSIFICATION	Generate result (if nec.) and populate it
WITHOUT_CLASSIFICATION	Generate result (if nec.) and populate it
WITHOUT_CLASSIFICATION	Generate result (if nec.) and populate it
WITHOUT_CLASSIFICATION	We don't want to store any cookies in the generated test plan
WITHOUT_CLASSIFICATION	Always remove cookies Always remove authorization Remove additional headers
WITHOUT_CLASSIFICATION	deliverSampler allows sampler to be null, but result must not be null
WITHOUT_CLASSIFICATION	pick up any recent changes from other threads
WITHOUT_CLASSIFICATION	the host has a key already
WITHOUT_CLASSIFICATION	the host matches a domain; use its key
WITHOUT_CLASSIFICATION	add the remaining parts
WITHOUT_CLASSIFICATION	Check if alias is suitable here, rather than waiting for connection to fail
WITHOUT_CLASSIFICATION	drop empty trailing content
WITHOUT_CLASSIFICATION	We don't want this passed on to browser
WITHOUT_CLASSIFICATION	We don't want this passed on to browser
WITHOUT_CLASSIFICATION	Fix the content length
WITHOUT_CLASSIFICATION	Get rid of the query and the ?
WITHOUT_CLASSIFICATION	Remaining implementations delegate to the wrapped key manager
WITHOUT_CLASSIFICATION	Only check form tags
WITHOUT_CLASSIFICATION	Find the action / form url
WITHOUT_CLASSIFICATION	Just use the first one of the possible many charsets
WITHOUT_CLASSIFICATION	NOTREAD $NON-NLS-1$
WITHOUT_CLASSIFICATION	saved copy of first line for error reports
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	second, if the tag was a composite tag, recursively parse its children.
WITHOUT_CLASSIFICATION	Get rid of the query and the ?
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	TODO - charset?
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	parse other header lines, looking for Content-Length
WITHOUT_CLASSIFICATION	Save the last valid content length one
WITHOUT_CLASSIFICATION	Keep the raw post data
WITHOUT_CLASSIFICATION	will be host:port for CONNECT
WITHOUT_CLASSIFICATION	SSL connection
WITHOUT_CLASSIFICATION	Don't try to adjust the host name
WITHOUT_CLASSIFICATION	it must be a proxied HTTPS request $NON-NLS-1$
WITHOUT_CLASSIFICATION	JAVA Impl accepts URLs with unsafe characters so don't do anything
WITHOUT_CLASSIFICATION	Split line into name/value pairs and store in headers if relevant If name = "content-length", then return value as int, else return 0
WITHOUT_CLASSIFICATION	Nothing to do
WITHOUT_CLASSIFICATION	Get the boundary string for the multiparts from the content type
WITHOUT_CLASSIFICATION	Parsing Methods
WITHOUT_CLASSIFICATION	chop to "server.name:x/thing"
WITHOUT_CLASSIFICATION	chop to "server.name:x/thing"
WITHOUT_CLASSIFICATION	chop to server.name:xx $NON-NLS-1$
WITHOUT_CLASSIFICATION	chop to server.name $NON-NLS-1$
WITHOUT_CLASSIFICATION	Handle IPv6 urls
WITHOUT_CLASSIFICATION	chop to server.name:xx
WITHOUT_CLASSIFICATION	chop to server.name
WITHOUT_CLASSIFICATION	Generate Error Body
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Prevent both redirect types from being selected
WITHOUT_CLASSIFICATION	300 codes tell client to do actions
WITHOUT_CLASSIFICATION	Use regexes to match the source data
WITHOUT_CLASSIFICATION	Proxy can take some while to start up; show a wating cursor
WITHOUT_CLASSIFICATION	This is applied to fields that should cause a restart when changed $NON-NLS-1$
WITHOUT_CLASSIFICATION	- action names
WITHOUT_CLASSIFICATION	Resource names for column headers $NON-NLS-1$
WITHOUT_CLASSIFICATION	Used by itemListener $NON-NLS-1$
WITHOUT_CLASSIFICATION	System.err.println("Enable Restart");
WITHOUT_CLASSIFICATION	Handles groupingMode. actionPerfomed is not suitable, as that seems to be activated whenever the Proxy is selected in the Test Plan Also handles samplerTypeName
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Drop the last character:
WITHOUT_CLASSIFICATION	Highlight (select) the appropriate rows.
WITHOUT_CLASSIFICATION	Highlight (select) the appropriate rows.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Default value $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ maintain original default
WITHOUT_CLASSIFICATION	Default value $NON-NLS-1$
WITHOUT_CLASSIFICATION	Action listener will be added later
WITHOUT_CLASSIFICATION	Ignore everything else
WITHOUT_CLASSIFICATION	Note: position of these elements in the menu must match the corresponding ProxyControl.GROUPING_ values. $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Stop action notifications while we shuffle this around:
WITHOUT_CLASSIFICATION	Include request body if it is a post or put or patch
WITHOUT_CLASSIFICATION	Reinstate action notifications:
WITHOUT_CLASSIFICATION	never null
WITHOUT_CLASSIFICATION	Set the current value:
WITHOUT_CLASSIFICATION	never null
WITHOUT_CLASSIFICATION	can share these
WITHOUT_CLASSIFICATION	Don't redirect the following: 300 = Multiple choice 304 = Not Modified 305 = Use Proxy 306 = (Unused)
WITHOUT_CLASSIFICATION	get the start of the file
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Preserve original case
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Update the dataEncoding
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Extract the content-type if present $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ Maximum connection retries
WITHOUT_CLASSIFICATION	$NON-NLS-1$ Temporary copies, so can set the final ones
WITHOUT_CLASSIFICATION	N.B. this needs to be done before opening the connection
WITHOUT_CLASSIFICATION	Update follow redirects setting just for this connection
WITHOUT_CLASSIFICATION	N.B. must be done after opening connection
WITHOUT_CLASSIFICATION	works OK even if ContentEncoding is null
WITHOUT_CLASSIFICATION	Normal InputStream is not available
WITHOUT_CLASSIFICATION	N.B. this closes 'in'
WITHOUT_CLASSIFICATION	Add all the headers from the HeaderManager
WITHOUT_CLASSIFICATION	Get all the request properties, which are the headers set on the connection
WITHOUT_CLASSIFICATION	Exclude the COOKIE header, since cookie is reported separately in the sample
WITHOUT_CLASSIFICATION	value is a List of Strings
WITHOUT_CLASSIFICATION	Count the retries as well in the time
WITHOUT_CLASSIFICATION	Check cache for an entry with an Expires header in the future
WITHOUT_CLASSIFICATION	Start with 0 so tries at least once, and retries at most MAX_CONN_RETRIES times
WITHOUT_CLASSIFICATION	Attempt the connection:
WITHOUT_CLASSIFICATION	we don't want interrupt to try disconnection again
WITHOUT_CLASSIFICATION	try again
WITHOUT_CLASSIFICATION	This should never happen, but...
WITHOUT_CLASSIFICATION	Nice, we've got a connection. Finish sending the request:
WITHOUT_CLASSIFICATION	Request sent. Now get the response:
WITHOUT_CLASSIFICATION	Done with the sampling proper.
WITHOUT_CLASSIFICATION	Now collect the results into the HTTPSampleResult:
WITHOUT_CLASSIFICATION	Cannot be null here
WITHOUT_CLASSIFICATION	e.g. text/html; charset=ISO-8859-1
WITHOUT_CLASSIFICATION	if either a file or path location is given, get the file object. we have a file
WITHOUT_CLASSIFICATION	Set details from the actual response Needs to be done before response can be stored
WITHOUT_CLASSIFICATION	Sampling proper - establish the connection and read the response: Repeatedly try to connect:
WITHOUT_CLASSIFICATION	Store any cookies received in the cookie manager:
WITHOUT_CLASSIFICATION	If we redirected automatically, the URL may have changed
WITHOUT_CLASSIFICATION	has been seen in a redirect use header (if possible) if no message found
WITHOUT_CLASSIFICATION	Don't process again
WITHOUT_CLASSIFICATION	Save cache information
WITHOUT_CLASSIFICATION	Random class for generating random numbers.
WITHOUT_CLASSIFICATION	return the absolutePath of the file
WITHOUT_CLASSIFICATION	The method will check to see if JMeter was started in NonGui mode. If it was, it will try to pick up the proxy host and port values if they were passed to JMeter.java.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	+ JMX file attribut names - do not change! $NON-NLS-1$
WITHOUT_CLASSIFICATION	we check to see if the proxy host and port are set
WITHOUT_CLASSIFICATION	This method uses Apache soap util to create the proper DOM elements. @return Element
WITHOUT_CLASSIFICATION	get filename or ""
WITHOUT_CLASSIFICATION	Note that the filename is also used as a key to the pool (if used) Documents provided in the testplan are not currently pooled, as they may change between samples.
WITHOUT_CLASSIFICATION	we created the document
WITHOUT_CLASSIFICATION	Must be local content - or not using pool
WITHOUT_CLASSIFICATION	Consider using Apache commons pool to create a pool of document builders or make sure XMLParserUtils creates builders efficiently.
WITHOUT_CLASSIFICATION	Suppress messages to stdout
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	we don't want interrupt to try disconnection again We don't want to continue using this connection, even if KeepAlive is set May not exist
WITHOUT_CLASSIFICATION	calling disconnect doesn't close the connection immediately, but indicates we're through with it. The JVM should close it when necessary. we don't want interrupt to try disconnection again Disconnect unless using KeepAlive
WITHOUT_CLASSIFICATION	it's not set, lets check if the user passed proxy host and port from command line
WITHOUT_CLASSIFICATION	it's not set, lets check if the user passed proxy host and port from command line
WITHOUT_CLASSIFICATION	must be a "here" document
WITHOUT_CLASSIFICATION	Required to satisfy HTTPSamplerBase Should not be called, as we override sample()
WITHOUT_CLASSIFICATION	$NON-NLS-1$ - JMX file attribut names - do not change!
WITHOUT_CLASSIFICATION	Assume it will fail ditto $NON-NLS-1$
WITHOUT_CLASSIFICATION	set the response defaults
WITHOUT_CLASSIFICATION	WARNING - could be large
WITHOUT_CLASSIFICATION	if a blank HeaderManager exists, try to get the SOAPHTTPConnection. After the first request, there should be a connection object stored with the cookie header info.
WITHOUT_CLASSIFICATION	set the auth. thanks to KiYun Roe for contributing the patch I cleaned up the patch slightly. 5-26-05
WITHOUT_CLASSIFICATION	check the proxy
WITHOUT_CLASSIFICATION	if use proxy is set, we try to pick up the proxy host and port from either the text fields or from JMeterUtil if they were passed from command line
WITHOUT_CLASSIFICATION	if for some reason the host is blank and the port is zero, the sampler will fail silently
WITHOUT_CLASSIFICATION	API uses raw types
WITHOUT_CLASSIFICATION	It is not possible to access the actual HTTP response code, so we assume no data means failure
WITHOUT_CLASSIFICATION	Scheme used for slow HTTP sockets. Cannot be set as a default, because must be set on an HttpClient instance.
WITHOUT_CLASSIFICATION	We always want to override the HTTPS scheme, because we want to trust all certificates and hosts
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Done with the sampling proper.
WITHOUT_CLASSIFICATION	Now collect the results into the HTTPSampleResult:
WITHOUT_CLASSIFICATION	If we redirected automatically, the URL may have changed
WITHOUT_CLASSIFICATION	Store any cookies received in the cookie manager:
WITHOUT_CLASSIFICATION	Save cache information
WITHOUT_CLASSIFICATION	condensed length (without \r) Add \r for each header Add \r for initial header final \r\n before data
WITHOUT_CLASSIFICATION	by not reading the response for real, it improves the performance on slow clients
WITHOUT_CLASSIFICATION	reponse code doesn't really apply, since the soap driver doesn't provide a response code
WITHOUT_CLASSIFICATION	Create a set of default parameters from the ones initially created. This allows the defaults to be overridden if necessary from the properties file.
WITHOUT_CLASSIFICATION	Set up HTTP scheme override if necessary
WITHOUT_CLASSIFICATION	We always want to override the HTTPS scheme
WITHOUT_CLASSIFICATION	Accessed from multiple threads
WITHOUT_CLASSIFICATION	can throw IOException
WITHOUT_CLASSIFICATION	perform the sample
WITHOUT_CLASSIFICATION	Needs to be done after execute to pick up all the headers
WITHOUT_CLASSIFICATION	We've finished with the request, so we can add the LocalAddress to it for display
WITHOUT_CLASSIFICATION	HTTP protocol violation, but avoids NPE
WITHOUT_CLASSIFICATION	record some sizes to allow HTTPSampleResult.getBytes() with different options
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Follow redirects and download page resources if appropriate:
WITHOUT_CLASSIFICATION	pick up headers if failed to execute the request
WITHOUT_CLASSIFICATION	protocol:[user:pass@]host:[port]
WITHOUT_CLASSIFICATION	Always create hash because we will always need it
WITHOUT_CLASSIFICATION	Allow for null strings
WITHOUT_CLASSIFICATION	otherwise proxy String fields may be null
WITHOUT_CLASSIFICATION	No proxy, so don't check proxy fields
WITHOUT_CLASSIFICATION	Lookup key - must agree with all the values used to create the HttpClient.
WITHOUT_CLASSIFICATION	One-time init for this client
WITHOUT_CLASSIFICATION	set retry count
WITHOUT_CLASSIFICATION	Override the defualt schemes as necessary
WITHOUT_CLASSIFICATION	Set up proxy details
WITHOUT_CLASSIFICATION	save the agent for next time round
WITHOUT_CLASSIFICATION	Use special field ip source address (for pseudo 'ip spoofing')
WITHOUT_CLASSIFICATION	reset in case was set previously
WITHOUT_CLASSIFICATION	Allow the mimetype of the file to control the content type
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Exclude the COOKIE header, since cookie is reported separately in the sample
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	N.B. need to separate protocol from authority otherwise http:server would match https:erver could use separate fields, but simpler to combine them
WITHOUT_CLASSIFICATION	Method left empty here, but allows subclasses to override
WITHOUT_CLASSIFICATION	header[0] is not the status line... $NON-NLS-1$
WITHOUT_CLASSIFICATION	remove any port specification $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	no need to specify the port if it is the default
WITHOUT_CLASSIFICATION	Get all the request headers
WITHOUT_CLASSIFICATION	Helper class so we can generate request data without dumping entire file contents
WITHOUT_CLASSIFICATION	encoding does not really matter here
WITHOUT_CLASSIFICATION	Buffer to hold the post body, except file content
WITHOUT_CLASSIFICATION	Check if we should do a multipart/form-data or an application/x-www-form-urlencoded post request
WITHOUT_CLASSIFICATION	If a content encoding is specified, we use that as the encoding of any parameter values
WITHOUT_CLASSIFICATION	Write the request to our own stream
WITHOUT_CLASSIFICATION	Create the parts Add any parameters
WITHOUT_CLASSIFICATION	We get the posted bytes using the encoding used to create it
WITHOUT_CLASSIFICATION	$NON-NLS-1$ this is the default used by HttpClient
WITHOUT_CLASSIFICATION	not multipart Check if the header manager had a content type header This allows the user to specify his own content-type for a POST request
WITHOUT_CLASSIFICATION	If there are no arguments, we can send a file as the body of the request TODO: needs a multiple file upload scenerio
WITHOUT_CLASSIFICATION	If getSendFileAsPostBody returned true, it's sure that file is not null
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	We get the posted bytes using the encoding used to create it
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	We just add placeholder text for file content
WITHOUT_CLASSIFICATION	If a content encoding is specified, we set it as http parameter, so that the post body will be encoded in the specified content encoding
WITHOUT_CLASSIFICATION	If none of the arguments have a name specified, we just send all the values as the post body
WITHOUT_CLASSIFICATION	Just append all the parameter values, and use that as the post body
WITHOUT_CLASSIFICATION	Note: if "Encoded?" is not selected, arg.getEncodedValue is equivalent to arg.getValue
WITHOUT_CLASSIFICATION	Note: if "Encoded?" is not selected, arg.getEncodedValue is equivalent to arg.getValue
WITHOUT_CLASSIFICATION	Let StringEntity perform the encoding
WITHOUT_CLASSIFICATION	It is a normal post request, with parameter names and values
WITHOUT_CLASSIFICATION	Set the content type
WITHOUT_CLASSIFICATION	Add the parameters
WITHOUT_CLASSIFICATION	Use the default encoding for urls
WITHOUT_CLASSIFICATION	The HTTPClient always urlencodes both name and value, so if the argument is already encoded, we have to decode it before adding it to the post request
WITHOUT_CLASSIFICATION	The value is already encoded by the user Must decode the value now, so that when the httpclient encodes it, we end up with the same value as the user had entered.
WITHOUT_CLASSIFICATION	Add the parameter, httpclient will urlencode it
WITHOUT_CLASSIFICATION	Buffer to hold the entity body
WITHOUT_CLASSIFICATION	we provide the MIME type here
WITHOUT_CLASSIFICATION	Check for local contentEncoding (charset) override; fall back to default for content body we do this here rather so we can use the same charset to retrieve the data
WITHOUT_CLASSIFICATION	Only create this if we are overriding whatever default there may be If there are no arguments, we can send a file as the body of the request
WITHOUT_CLASSIFICATION	Just append all the parameter values, and use that as the entity body
WITHOUT_CLASSIFICATION	Check if we have any content to send for body
WITHOUT_CLASSIFICATION	We get the posted bytes using the charset that was used to create them
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	If getSendFileAsPostBody returned true, it's sure that file is not null no need for content-type here
WITHOUT_CLASSIFICATION	If none of the arguments have a name specified, we just send all the values as the entity body
WITHOUT_CLASSIFICATION	If the request entity is repeatable, we can send it first to our own stream, so we can return it
WITHOUT_CLASSIFICATION	this probably cannot happen
WITHOUT_CLASSIFICATION	Does not need to be synchronised, as all access is from same thread
WITHOUT_CLASSIFICATION	don't try twice
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	may be the empty string
WITHOUT_CLASSIFICATION	N.B. It's not po ssible to forward threadStarted() to the implementation class. This is because Config items are not processed until later, and HTTPDefaults may define the implementation
WITHOUT_CLASSIFICATION	Forward to sampler
WITHOUT_CLASSIFICATION	Forward to sampler
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	force reopen on next sample
WITHOUT_CLASSIFICATION	Content-length
WITHOUT_CLASSIFICATION	Marker for query string attribute
WITHOUT_CLASSIFICATION	+ JMX names - do not change $NON-NLS-1$
WITHOUT_CLASSIFICATION	More general attributes not supported
WITHOUT_CLASSIFICATION	Authorization
WITHOUT_CLASSIFICATION	Host always
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	content-type
WITHOUT_CLASSIFICATION	content-type
WITHOUT_CLASSIFICATION	we need to use up the int now
WITHOUT_CLASSIFICATION	int mark =
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Dummy
WITHOUT_CLASSIFICATION	Methods needed by subclasses to get access to the implementation
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Help convert existing JMX files which use HTTPSampler[2] nodes
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase#testIterationStart(org.apache.jmeter.engine.event.LoopIterationEvent)
WITHOUT_CLASSIFICATION	Ignored
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	KEY = TCPKEY or ERRKEY, Entry= Socket or String
WITHOUT_CLASSIFICATION	superclass does not support types
WITHOUT_CLASSIFICATION	TODO - charset?
WITHOUT_CLASSIFICATION	$NON-NLS-1$ default value: false
WITHOUT_CLASSIFICATION	default for concurrent pool (do not change)
WITHOUT_CLASSIFICATION	Shown as Parameter Name on the GUI
WITHOUT_CLASSIFICATION	- JMX names
WITHOUT_CLASSIFICATION	Default concurrent pool size for download embedded resources
WITHOUT_CLASSIFICATION	The default setting to be used (i.e. historic)
WITHOUT_CLASSIFICATION	for Thread Pool for resources but no need to use a special value?
WITHOUT_CLASSIFICATION	Use for ComboBox Source Address Type. Preserve order (specially with localization)
WITHOUT_CLASSIFICATION	$NON-NLS-1$ default value: 60 secs
WITHOUT_CLASSIFICATION	FILE_FIELD is kept for backward compatibility with old test plans $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ Supported methods:
WITHOUT_CLASSIFICATION	IMAGE_PARSER now really means EMBEDDED_PARSER $NON-NLS-1$
WITHOUT_CLASSIFICATION	i.e. GET
WITHOUT_CLASSIFICATION	Derive the mapping of content types to parsers
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Store MD5 hash instead of storing response $NON-NLS-1$
WITHOUT_CLASSIFICATION	Not synch, but it is not modified after creation
WITHOUT_CLASSIFICATION	returns empty array for null
WITHOUT_CLASSIFICATION	Code /
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Skip parameters with a blank name (allows use of optional variables in parameter lists)
WITHOUT_CLASSIFICATION	If there is one file with no parameter name, the file will be sent as post body.
WITHOUT_CLASSIFICATION	We use multipart if we have been told so, or files are present and the files should not be send as the post body
WITHOUT_CLASSIFICATION	We know that URL arguments should always be encoded in UTF-8 according to spec
WITHOUT_CLASSIFICATION	Parse the arguments in querystring, assuming specified encoding for values
WITHOUT_CLASSIFICATION	Check if there are any difference between name and value and their encoded name and value
WITHOUT_CLASSIFICATION	If there is no difference, we mark it as not needing encoding
WITHOUT_CLASSIFICATION	private method to allow AsyncSample to reset the value without performing checks
WITHOUT_CLASSIFICATION	private method to allow AsyncSample to reset the value without performing checks
WITHOUT_CLASSIFICATION	allow use of relative file URLs
WITHOUT_CLASSIFICATION	HTTP URLs must be absolute, allow file to be relative $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Add the query string if it is a HTTP GET or DELETE request
WITHOUT_CLASSIFICATION	Get the query string encoded in specified encoding If no encoding is specified by user, we will get it encoded in UTF-8, which is what the HTTP spec says
WITHOUT_CLASSIFICATION	Already contains a prefix
WITHOUT_CLASSIFICATION	If default port for protocol is used, we do not include port in URL
WITHOUT_CLASSIFICATION	We use the encoding which should be used according to the HTTP spec, which is UTF-8
WITHOUT_CLASSIFICATION	Check if the sampler has a specified content encoding
WITHOUT_CLASSIFICATION	Encode the parameter value in the specified content encoding
WITHOUT_CLASSIFICATION	records the existance of an equal sign
WITHOUT_CLASSIFICATION	We do not know the content encoding of the query string
WITHOUT_CLASSIFICATION	Append body if it is a post or put
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	need to handle four cases: - string contains name=value - string contains name= - string contains name - empty string
WITHOUT_CLASSIFICATION	is there a separator? case of name=value, name=
WITHOUT_CLASSIFICATION	If we know the encoding, we can decode the argument value, to make it easier to read for the user
WITHOUT_CLASSIFICATION	If we do not know the encoding, we just use the encoded value The browser has already done the encoding, so save the values as is
WITHOUT_CLASSIFICATION	we have a name
WITHOUT_CLASSIFICATION	we don't; use the default parser
WITHOUT_CLASSIFICATION	Iterate through the URLs and download each image:
WITHOUT_CLASSIFICATION	Get the URL matcher
WITHOUT_CLASSIFICATION	don't fetch unless pattern compiles
WITHOUT_CLASSIFICATION	For concurrent get resources
WITHOUT_CLASSIFICATION	See catch clause below
WITHOUT_CLASSIFICATION	There were some spaces in the URL
WITHOUT_CLASSIFICATION	I don't think localMatcher can be null here, but check just in case
WITHOUT_CLASSIFICATION	we have a pattern and the URL does not match, so skip it
WITHOUT_CLASSIFICATION	default: serial download embedded resources
WITHOUT_CLASSIFICATION	IF for download concurrent embedded resources
WITHOUT_CLASSIFICATION	init with default value
WITHOUT_CLASSIFICATION	sample all resources with threadpool
WITHOUT_CLASSIFICATION	call normal shutdown (wait ending all tasks)
WITHOUT_CLASSIFICATION	put a timeout if tasks couldn't terminate
WITHOUT_CLASSIFICATION	add result to main sampleResult
WITHOUT_CLASSIFICATION	did all the tasks finish?
WITHOUT_CLASSIFICATION	Not intended to be instantiated
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	kill any remaining tasks
WITHOUT_CLASSIFICATION	@param res HTTPSampleResult to check @return parser class name (may be "") or null if entry does not exist
WITHOUT_CLASSIFICATION	Browsers seem to tolerate Location headers with spaces, replacing them automatically with %20. We want to emulate this behaviour.
WITHOUT_CLASSIFICATION	The redirect URL we got was not a valid URL
WITHOUT_CLASSIFICATION	Only add sample if it is a sample of valid url redirect, i.e. that we have actually sampled the URL
WITHOUT_CLASSIFICATION	Now populate the any totalRes fields that need to come from lastRes:
WITHOUT_CLASSIFICATION	Method to set files list to be uploaded. @param value HTTPFileArgs object that stores file list to be uploaded.
WITHOUT_CLASSIFICATION	no point saving an empty list
WITHOUT_CLASSIFICATION	Method to get files list to be uploaded.
WITHOUT_CLASSIFICATION	Weed out the empty files
WITHOUT_CLASSIFICATION	NOOP to provide based empty impl and avoid breaking existing implementations
WITHOUT_CLASSIFICATION	may also happen if long value > int.max
WITHOUT_CLASSIFICATION	for new test plans that don't have FILE/PARAM/MIME properties
WITHOUT_CLASSIFICATION	Updated the property lists
WITHOUT_CLASSIFICATION	We don't want to use CacheManager clone but the parent one, and CacheManager is Thread Safe
WITHOUT_CLASSIFICATION	Non-instantiable
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	If we redirected automatically, the URL may have changed
WITHOUT_CLASSIFICATION	If getSendFileAsPostBody returned true, it's sure that file is not null
WITHOUT_CLASSIFICATION	Allow the mimetype of the file to control the content type
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Implement these here, to avoid re-implementing for sub-classes (previously these were implemented in all TestElements)
WITHOUT_CLASSIFICATION	8kB is the (max) size to have the latency ('the first packet') Enough for MD5
WITHOUT_CLASSIFICATION	OK, we have an old-style file definition save it Now deal with any additional file arguments
WITHOUT_CLASSIFICATION	-1 means not defined
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Control reuse of cached SSL Context in subsequent iterations
WITHOUT_CLASSIFICATION	e.g. .apache.org $NON-NLS-1$
WITHOUT_CLASSIFICATION	e.g. www.apache.org
WITHOUT_CLASSIFICATION	Get hostname
WITHOUT_CLASSIFICATION	N.B. These values are used in jmeter.properties (jmeter.httpsampler) - do not change They can alse be used as the implementation name
WITHOUT_CLASSIFICATION	+ JMX implementation attribute values (also displayed in GUI) - do not change $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ - JMX
WITHOUT_CLASSIFICATION	Helper class (callback) for applying parameter definitions
WITHOUT_CLASSIFICATION	get past separator
WITHOUT_CLASSIFICATION	Put request does not use multipart, so no need for boundary
WITHOUT_CLASSIFICATION	Get the encoding to use for the request
WITHOUT_CLASSIFICATION	If there are no arguments, we can send a file as the body of the request
WITHOUT_CLASSIFICATION	Create the content length we are going to write
WITHOUT_CLASSIFICATION	We create the post body content now, so we know the size
WITHOUT_CLASSIFICATION	Just append all the parameter values, and use that as the put body
WITHOUT_CLASSIFICATION	Keep the content, will be sent later
WITHOUT_CLASSIFICATION	Set the content length
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Request sent. Now get the response:
WITHOUT_CLASSIFICATION	Done with the sampling proper.
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	Now collect the results into the HTTPSampleResult:
WITHOUT_CLASSIFICATION	e.g. text/html; charset=ISO-8859-1
WITHOUT_CLASSIFICATION	Needs to be done after execute to pick up all the headers
WITHOUT_CLASSIFICATION	HTTP protocol violation, but avoids NPE
WITHOUT_CLASSIFICATION	record some sizes to allow HTTPSampleResult.getBytes() with different options
WITHOUT_CLASSIFICATION	Handle the various methods
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Allows HTTPSamplerProxy to call threadFinished; subclasses can override if necessary
WITHOUT_CLASSIFICATION	Allows HTTPSamplerProxy to call notifyFirstSampleAfterLoopRestart; subclasses can override if necessary
WITHOUT_CLASSIFICATION	Provide access to HTTPSamplerBase methods
WITHOUT_CLASSIFICATION	did not want to spoof the IP address
WITHOUT_CLASSIFICATION	OK to set pre-emptive auth?
WITHOUT_CLASSIFICATION	Needs to be accessible by HTTPSampler2
WITHOUT_CLASSIFICATION	Set default parameters as needed
WITHOUT_CLASSIFICATION	Process Commons HttpClient parameters file $NON-NLS-1$
WITHOUT_CLASSIFICATION	If the pre-emptive parameter is undefined, then we can set it as needed otherwise we should do what the user requested.
WITHOUT_CLASSIFICATION	Handle old-style JMeter properties
WITHOUT_CLASSIFICATION	This must be done last, as must not be overridden
WITHOUT_CLASSIFICATION	We do our own cookie handling
WITHOUT_CLASSIFICATION	May generate IllegalArgumentException
WITHOUT_CLASSIFICATION	HC3.1 does not have the method
WITHOUT_CLASSIFICATION	Set any default request headers
WITHOUT_CLASSIFICATION	Setup connection
WITHOUT_CLASSIFICATION	will be null for HEAD
WITHOUT_CLASSIFICATION	tmp inputstream needs to have a good counting
WITHOUT_CLASSIFICATION	Pick up Actual path (after redirects)
WITHOUT_CLASSIFICATION	Can be missing, e.g. on redirect
WITHOUT_CLASSIFICATION	Exclude the COOKIE header, since cookie is reported separately in the sample
WITHOUT_CLASSIFICATION	Store any cookies received in the cookie manager:
WITHOUT_CLASSIFICATION	Save cache information
WITHOUT_CLASSIFICATION	Follow redirects and download page resources if appropriate:
WITHOUT_CLASSIFICATION	pick up headers if failed to execute the request
WITHOUT_CLASSIFICATION	Set up the local address if one exists
WITHOUT_CLASSIFICATION	Use special field ip source address (for pseudo 'ip spoofing')
WITHOUT_CLASSIFICATION	Method left empty here, but allows subclasses to override
WITHOUT_CLASSIFICATION	remove any port specification $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Get all the request headers
WITHOUT_CLASSIFICATION	add a \r\n
WITHOUT_CLASSIFICATION	e.g. some kinds of invalid URL
WITHOUT_CLASSIFICATION	already include the \r\n
WITHOUT_CLASSIFICATION	last \r\n before response data
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	We use the HostConfiguration as the key to retrieve the HttpClient, so need to ensure that any items used in its equals/hashcode methods are not changed after use, i.e.: host, port, protocol, localAddress, proxy
WITHOUT_CLASSIFICATION	All needed to ensure re-usablility
WITHOUT_CLASSIFICATION	null means use the default
WITHOUT_CLASSIFICATION	Dynamic proxy overrules static proxy
WITHOUT_CLASSIFICATION	N.B. HostConfiguration.equals() includes proxy settings in the compare.
WITHOUT_CLASSIFICATION	Set up any required Proxy credentials
WITHOUT_CLASSIFICATION	Allow HttpClient to handle the redirects:
WITHOUT_CLASSIFICATION	Set all the headers from the HeaderManager
WITHOUT_CLASSIFICATION	header[0] is not the status line... $NON-NLS-1$
WITHOUT_CLASSIFICATION	Buffer to hold the post body, except file content
WITHOUT_CLASSIFICATION	Set the content type
WITHOUT_CLASSIFICATION	Check if we should do a multipart/form-data or an application/x-www-form-urlencoded post request
WITHOUT_CLASSIFICATION	If a content encoding is specified, we use that as the encoding of any parameter values
WITHOUT_CLASSIFICATION	Write the request to our own stream
WITHOUT_CLASSIFICATION	Create the parts Add any parameters
WITHOUT_CLASSIFICATION	$NON-NLS-1$ this is the default used by HttpClient
WITHOUT_CLASSIFICATION	If getSendFileAsPostBody returned true, it's sure that file is not null
WITHOUT_CLASSIFICATION	Allow the mimetype of the file to control the content type
WITHOUT_CLASSIFICATION	We just add placeholder text for file content
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	NT Includes other types of Credentials
WITHOUT_CLASSIFICATION	We have credentials - should we set pre-emptive authentication?
WITHOUT_CLASSIFICATION	We don't know how many entries will be skipped
WITHOUT_CLASSIFICATION	Add any files
WITHOUT_CLASSIFICATION	We do not know the char set of the file to be uploaded, so we set it to null
WITHOUT_CLASSIFICATION	We do not know what the char set of the file is
WITHOUT_CLASSIFICATION	Set the multipart for the post
WITHOUT_CLASSIFICATION	.sendMultipartWithoutFileContent(bos);
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	We get the posted bytes using the encoding used to create it
WITHOUT_CLASSIFICATION	If there are no arguments, we can send a file as the body of the request TODO: needs a multiple file upload scenerio
WITHOUT_CLASSIFICATION	If getSendFileAsPostBody returned true, it's sure that file is not null
WITHOUT_CLASSIFICATION	If a content encoding is specified, we set it as http parameter, so that the post body will be encoded in the specified content encoding
WITHOUT_CLASSIFICATION	If none of the arguments have a name specified, we just send all the values as the post body
WITHOUT_CLASSIFICATION	It is a normal post request, with parameter names and values
WITHOUT_CLASSIFICATION	Just append all the parameter values, and use that as the post body
WITHOUT_CLASSIFICATION	Set the content type
WITHOUT_CLASSIFICATION	Add the parameters
WITHOUT_CLASSIFICATION	Use the default encoding for urls
WITHOUT_CLASSIFICATION	The HTTPClient always urlencodes both name and value, so if the argument is already encoded, we have to decode it before adding it to the post request
WITHOUT_CLASSIFICATION	The value is already encoded by the user Must decode the value now, so that when the httpclient encodes it, we end up with the same value as the user had entered.
WITHOUT_CLASSIFICATION	Add the parameter, httpclient will urlencode it
WITHOUT_CLASSIFICATION	Check if we have any content to send for body
WITHOUT_CLASSIFICATION	We get the posted bytes using the charset that was used to create them
WITHOUT_CLASSIFICATION	Does not need to be synchronised, as all access is from same thread
WITHOUT_CLASSIFICATION	If there are no arguments, we can send a file as the body of the request
WITHOUT_CLASSIFICATION	Set the content length
WITHOUT_CLASSIFICATION	For all the file multiparts, we must tell it to not include the actual file content
WITHOUT_CLASSIFICATION	For all the file multiparts, we must revert the hiding of the actual file content
WITHOUT_CLASSIFICATION	Check if the header manager had a content type header This allows the user to specify his own content-type for a POST request
WITHOUT_CLASSIFICATION	Buffer to hold the put body, except file content
WITHOUT_CLASSIFICATION	Should be true
WITHOUT_CLASSIFICATION	Count the retries as well in the time
WITHOUT_CLASSIFICATION	Request sent. Now get the response:
WITHOUT_CLASSIFICATION	Buffer to hold the post body, except file content
WITHOUT_CLASSIFICATION	We just add placeholder text for file content
WITHOUT_CLASSIFICATION	If a content encoding is specified, we set it as http parameter, so that the post body will be encoded in the specified content encoding
WITHOUT_CLASSIFICATION	If the request entity is repeatable, we can send it first to our own stream, so we can return it
WITHOUT_CLASSIFICATION	If the request entity is repeatable, we can send it first to our own stream, so we can return it
WITHOUT_CLASSIFICATION	Check if the header manager had a content type header This allows the user to specify his own content-type for a POST request
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	If none of the arguments have a name specified, we just send all the values as the put body
WITHOUT_CLASSIFICATION	Check if we should send only placeholder text for the file content, or the real file content
WITHOUT_CLASSIFICATION	Can cause NPE in HttpClient 3.1 ((SimpleHttpConnectionManager)cl.getHttpConnectionManager()).shutdown(); Closes the connection Revert to original method: Closes the connection
WITHOUT_CLASSIFICATION	Implemented by parent class
WITHOUT_CLASSIFICATION	Take length from file
WITHOUT_CLASSIFICATION	Use this to override file length
WITHOUT_CLASSIFICATION	All the other headers are set up by HTTPSampler2.setupConnection()
WITHOUT_CLASSIFICATION	No header provided
WITHOUT_CLASSIFICATION	so we don't generate chunked encoding
WITHOUT_CLASSIFICATION	will use chunked encoding
WITHOUT_CLASSIFICATION	Some headers are set by executeMethod()
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Done with the sampling proper.
WITHOUT_CLASSIFICATION	Now collect the results into the HTTPSampleResult:
WITHOUT_CLASSIFICATION	e.g. text/html; charset=ISO-8859-1
WITHOUT_CLASSIFICATION	If we redirected automatically, the URL may have changed
WITHOUT_CLASSIFICATION	Store any cookies received in the cookie manager:
WITHOUT_CLASSIFICATION	Save cache information
WITHOUT_CLASSIFICATION	Follow redirects and download page resources if appropriate:
WITHOUT_CLASSIFICATION	Buffer to hold the post body, except file content
WITHOUT_CLASSIFICATION	If there are no arguments, we can send a file as the body of the request
WITHOUT_CLASSIFICATION	will be null for HEAD
WITHOUT_CLASSIFICATION	Pick up Actual path (after redirects)
WITHOUT_CLASSIFICATION	Can be missing, e.g. on redirect
WITHOUT_CLASSIFICATION	e.g. some kinds of invalid URL
WITHOUT_CLASSIFICATION	Add any files
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	charset must agree with content-type below $NON-NLS-1$
WITHOUT_CLASSIFICATION	contentLength > 0 ? contentLength : DEFAULT_INITIAL_BUFFER_SIZE);
WITHOUT_CLASSIFICATION	first response
WITHOUT_CLASSIFICATION	save the latency
WITHOUT_CLASSIFICATION	Set up the defaults (may be overridden below)
WITHOUT_CLASSIFICATION	NOTUSED private Class PARSERCLASS = null;
WITHOUT_CLASSIFICATION	Was there an error?
WITHOUT_CLASSIFICATION	N.B. Must be in this class for the TestBean code to work
WITHOUT_CLASSIFICATION	Retrieve the formatted data using the same encoding used to create it
WITHOUT_CLASSIFICATION	Write end of multipart
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Check if we should do a multipart/form-data or an application/x-www-form-urlencoded post request
WITHOUT_CLASSIFICATION	Set the content type
WITHOUT_CLASSIFICATION	Get the encoding to use for the request
WITHOUT_CLASSIFICATION	If there are no arguments, we can send a file as the body of the request
WITHOUT_CLASSIFICATION	Keep the content, will be sent later
WITHOUT_CLASSIFICATION	Set the content length
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Write the form data post body, which we have constructed in the setHeaders. This contains the multipart start divider and any form data, i.e. arguments
WITHOUT_CLASSIFICATION	First write the start multipart file TODO - charset?
WITHOUT_CLASSIFICATION	Retrieve the formatted data using the same encoding used to create it TODO - charset? Write the actual file content
WITHOUT_CLASSIFICATION	We just add placeholder text for file content $NON-NLS-1$ Write the end of multipart file
WITHOUT_CLASSIFICATION	we're sure that there is at least one file because of getSendFileAsPostBody method's return value.
WITHOUT_CLASSIFICATION	We just add placeholder text for file content $NON-NLS-1$
WITHOUT_CLASSIFICATION	Write the form section
WITHOUT_CLASSIFICATION	First the multipart start divider
WITHOUT_CLASSIFICATION	Add any parameters
WITHOUT_CLASSIFICATION	End the previous multipart
WITHOUT_CLASSIFICATION	End the previous multipart
WITHOUT_CLASSIFICATION	Write multipart for parameter
WITHOUT_CLASSIFICATION	If there are any files, we need to end the previous multipart
WITHOUT_CLASSIFICATION	Write multipart for file
WITHOUT_CLASSIFICATION	Add also the length of the file content
WITHOUT_CLASSIFICATION	And the end of the file multipart
WITHOUT_CLASSIFICATION	Add the end of multipart
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Check if we should do a multipart/form-data or an application/x-www-form-urlencoded post request
WITHOUT_CLASSIFICATION	Allow the mimetype of the file to control the content type
WITHOUT_CLASSIFICATION	If none of the arguments have a name specified, we just send all the values as the post body
WITHOUT_CLASSIFICATION	If we have a file, but no data, then read the file
WITHOUT_CLASSIFICATION	Override so we can intercept the stream
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Override so we can intercept the stream
WITHOUT_CLASSIFICATION	superclass does not support types
WITHOUT_CLASSIFICATION	TODO - charset?
WITHOUT_CLASSIFICATION	Just append all the parameter values, and use that as the post body
WITHOUT_CLASSIFICATION	It is a normal post request, with parameter names and values
WITHOUT_CLASSIFICATION	Set the content type
WITHOUT_CLASSIFICATION	Create the content length we are going to write
WITHOUT_CLASSIFICATION	We create the post body content now, so we know the size
WITHOUT_CLASSIFICATION	Keep the content, will be sent later
WITHOUT_CLASSIFICATION	Set the content length
WITHOUT_CLASSIFICATION	Check if the header manager had a content type header This allows the user to specify his own content-type for a POST request
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Now we just construct any multipart for the files We only construct the file multipart start, we do not write the actual file content
WITHOUT_CLASSIFICATION	we're sure that there is one file because of getSendFileAsPostBody method's return value.
WITHOUT_CLASSIFICATION	Exception in progress
WITHOUT_CLASSIFICATION	Write boundary end marker
WITHOUT_CLASSIFICATION	get access to buffer
WITHOUT_CLASSIFICATION	wrap read() methods to track output buffer
WITHOUT_CLASSIFICATION	Preload the output so that can be read back as HTTP
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	1k - the previous 100k made no sense (there's tons of buffers elsewhere in the chain) and it caused OOM when many concurrent uploads were being done. Could be fixed by increasing the evacuation ratio in bin/jmeter[.bat], but this is better.
WITHOUT_CLASSIFICATION	make sure buffer details track the output
WITHOUT_CLASSIFICATION	Characters per second to emulate
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Override all the super-class Socket methods.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	timeout to retrieve wsdl when server not response
WITHOUT_CLASSIFICATION	NOTUSED String portname = pnode.getAttribute("name"); used to check binding, but now it doesn't. it was failing when wsdl did not using binding as expected
WITHOUT_CLASSIFICATION	check soap12
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.http.conn.ssl.SSLSocketFactory#createSocket()
WITHOUT_CLASSIFICATION	Characters per second to emulate
WITHOUT_CLASSIFICATION	in the rare case the WSDL is protected and requires authentication, use the AuthManager to set the authorization. Basic and Digest authorization are pretty weak and don't provide real security.
WITHOUT_CLASSIFICATION	get the node
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	get the soap:operation
WITHOUT_CLASSIFICATION	there should only be one soap:operation node per operation
WITHOUT_CLASSIFICATION	first we iterate through the bindings
WITHOUT_CLASSIFICATION	now we iterate through the operations
WITHOUT_CLASSIFICATION	if the first child is soap:operation we add it to the array
WITHOUT_CLASSIFICATION	new WSDLHelper("http:services.bio.ifi.lmu.de:1046/prothesaurus/services/BiologicalNameService?wsdl");
WITHOUT_CLASSIFICATION	Remove quotes from charset name
WITHOUT_CLASSIFICATION	get ../ or ../../ etc.
WITHOUT_CLASSIFICATION	find index of path start
WITHOUT_CLASSIFICATION	absolute URL
WITHOUT_CLASSIFICATION	find path endIndex
WITHOUT_CLASSIFICATION	install new path
WITHOUT_CLASSIFICATION	This ensures tha HttpClient knows about the protocol
WITHOUT_CLASSIFICATION	Now allow the URL handling to work.
WITHOUT_CLASSIFICATION	not needed for HttpClient
WITHOUT_CLASSIFICATION	Check if we have it in the cache
WITHOUT_CLASSIFICATION	Perform the encoding
WITHOUT_CLASSIFICATION	LRUMap does not support generics currently
WITHOUT_CLASSIFICATION	We assume the argument value is encoded according to the HTTP spec, i.e. UTF-8
WITHOUT_CLASSIFICATION	We assume the name is always encoded according to spec
WITHOUT_CLASSIFICATION	The value is encoded in the specified encoding
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	skip expensive processing if it cannot apply $NON-NLS-1$
WITHOUT_CLASSIFICATION	Match /../[../] etc. $NON-NLS-1$
WITHOUT_CLASSIFICATION	document or context-relative URL like: '/path/to' OR '../path/to' OR '/path/to/../path/'
WITHOUT_CLASSIFICATION	path is between idx='pathStartIndex' (inclusive) and idx='pathEndIndex' (exclusive)
WITHOUT_CLASSIFICATION	append '/' if this isn't the last token or it is but the original path terminated w/ a '/'
WITHOUT_CLASSIFICATION	This can't happen (how should utf8 not be supported!?!), so just throw an Error:
WITHOUT_CLASSIFICATION	Encode according to the HTTP spec, i.e. UTF-8
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	indicate that an error occured
WITHOUT_CLASSIFICATION	we check the count to see if we have exceeded the number of lines to parse. There's no way to know where to stop in the file. Therefore we use break to escape the while loop when we've reached the count.
WITHOUT_CLASSIFICATION	this.READER = new BufferedReader(new FileReader(this.SOURCE)); parse(this.READER,el);
WITHOUT_CLASSIFICATION	we clean the line to get rid of extra stuff
WITHOUT_CLASSIFICATION	now we set request method
WITHOUT_CLASSIFICATION	increment the current count
WITHOUT_CLASSIFICATION	increment the current count
WITHOUT_CLASSIFICATION	we filter the line first, before we try to separate the URL into file and parameters.
WITHOUT_CLASSIFICATION	in the case when the filter is not set, we parse all the lines
WITHOUT_CLASSIFICATION	check the URL for "?" symbol
WITHOUT_CLASSIFICATION	now that we have stripped the file, we can parse the parameters
WITHOUT_CLASSIFICATION	if the string contains atleast one double quote and checkMethod is true, go ahead and tokenize the string.
WITHOUT_CLASSIFICATION	we return the original string
WITHOUT_CLASSIFICATION	convert the Parameters
WITHOUT_CLASSIFICATION	avoid possible NPE when trimming the name
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	indicate that an error occured
WITHOUT_CLASSIFICATION	read one line at a time using BufferedReader
WITHOUT_CLASSIFICATION	this.READER = new BufferedReader(new FileReader(this.SOURCE)); parse(this.READER,el);
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	we tokenize using double quotes. this means for tomcat we should have 3 tokens if there isn't any additional information in the logs
WITHOUT_CLASSIFICATION	if checkMethod on the token is true we tokenzie it using space and escape the while loop. Only the first matching token will be used
WITHOUT_CLASSIFICATION	there should only be one token that starts with slash character
WITHOUT_CLASSIFICATION	do nothing. it's naive, but since the utility is meant to parse access logs the formatting should be correct
WITHOUT_CLASSIFICATION	First have to release the cookie we were using so other threads stuck in wait can move on
WITHOUT_CLASSIFICATION	let notified threads move on and get lock on managersInUse
WITHOUT_CLASSIFICATION	here is the core routine to find appropriate cookie manager and check it's not being used. If used, wait until whoever's using it gives it up
WITHOUT_CLASSIFICATION	no implementation at this time, since we bypass the idea of having a console tool to generate test plans. Instead I decided to have a sampler that uses the generator and parser directly
WITHOUT_CLASSIFICATION	now we create the compiled pattern and add it to the arraylist
WITHOUT_CLASSIFICATION	we do a quick check to see if any filters are set. If not we just return false to be efficient.
WITHOUT_CLASSIFICATION	double check this logic make sure it makes sense
WITHOUT_CLASSIFICATION	inclusion filter assumes most of the files are not wanted, therefore usefile is set to false unless it matches.
WITHOUT_CLASSIFICATION	exclusion filter assumes most of the files are used, therefore usefile is set to true, unless it matches.
WITHOUT_CLASSIFICATION	Request headers column renderers
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	Request headers column renderers
WITHOUT_CLASSIFICATION	Request headers column renderers
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	clear results table before filling
WITHOUT_CLASSIFICATION	Display with same order HTTP protocol
WITHOUT_CLASSIFICATION	can be null - e.g. if URL was invalid
WITHOUT_CLASSIFICATION	Display cookie in headers table (same location on http protocol)
WITHOUT_CLASSIFICATION	Parsed request headers
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.visualizers.request.RequestView#init()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.visualizers.request.RequestView#clearData()
WITHOUT_CLASSIFICATION	$NON-NLS-1$ SOAP request (generally) blank name $NON-NLS-1$
WITHOUT_CLASSIFICATION	blank name $NON-NLS-1$
WITHOUT_CLASSIFICATION	empty init $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Hint to background color on bottom tabs (grey, not blue)
WITHOUT_CLASSIFICATION	The object used for each row
WITHOUT_CLASSIFICATION	The object used for each row
WITHOUT_CLASSIFICATION	The object used for each row
WITHOUT_CLASSIFICATION	Key Value
WITHOUT_CLASSIFICATION	Key Value
WITHOUT_CLASSIFICATION	Key Value
WITHOUT_CLASSIFICATION	Set up the 1st table Result with empty headers
WITHOUT_CLASSIFICATION	Set up the 2nd table
WITHOUT_CLASSIFICATION	Set up the 3rd table
WITHOUT_CLASSIFICATION	Create the split pane
WITHOUT_CLASSIFICATION	called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	$NON-NLS-1$ Concatenate query post if exists
WITHOUT_CLASSIFICATION	add a message when no http sample $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	better ISO-8859-1 than UTF-8
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Find all the classes which implement the JavaSamplerClient interface.
WITHOUT_CLASSIFICATION	Remove the JavaConfig class from the list since it only implements the interface for error conditions.
WITHOUT_CLASSIFICATION	If a user has set parameters in one test, and then selects a different test which supports the same parameters, those parameters should have the same values that they did in the original test.
WITHOUT_CLASSIFICATION	Implements JMeterGuiComponent.createTestElement()
WITHOUT_CLASSIFICATION	Implements JMeterGuiComponent.modifyTestElement(TestElement)
WITHOUT_CLASSIFICATION	Entry tends to be ignored ...
WITHOUT_CLASSIFICATION	Default (can be overridden by the script)
WITHOUT_CLASSIFICATION	These are not useful yet, as have not found how to get updated values back mgr.declareBean("ResponseCode", "200", String.class); $NON-NLS-1$ mgr.declareBean("ResponseMessage", "OK", String.class); $NON-NLS-1$ mgr.declareBean("IsSuccess", Boolean.TRUE, Boolean.class); $NON-NLS-1$
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.gui.AbstractJMeterGuiComponent#clearGui()
WITHOUT_CLASSIFICATION	Overrides AbstractJMeterGuiComponent.configure(TestElement)
WITHOUT_CLASSIFICATION	N.B. some engines (e.g. Javascript) cannot handle certain declareBean() calls after the engine has been initialised, so create the engine last
WITHOUT_CLASSIFICATION	Catch evaluation errors
WITHOUT_CLASSIFICATION	reset the bsh.Interpreter before each execution
WITHOUT_CLASSIFICATION	script file name (if present)
WITHOUT_CLASSIFICATION	parameters to pass to script file (or script)
WITHOUT_CLASSIFICATION	script area
WITHOUT_CLASSIFICATION	Don't let the input field shrink too much
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Entry tends to be ignored ...
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Implements JavaSamplerClient.setupTest(JavaSamplerContext)
WITHOUT_CLASSIFICATION	Implements JavaSamplerClient.teardownTest(JavaSamplerContext)
WITHOUT_CLASSIFICATION	Implements JavaSamplerClient.getDefaultParameters()
WITHOUT_CLASSIFICATION	Ensure that the required class variables are cloned, as this is not currently done by the super-implementation.
WITHOUT_CLASSIFICATION	Allow Sampler access to test element name
WITHOUT_CLASSIFICATION	Only set the default label if it has not been set
WITHOUT_CLASSIFICATION	failed to initialise the class
WITHOUT_CLASSIFICATION	but we do trap this error to make tests work better
WITHOUT_CLASSIFICATION	No point continuing Mainly for bsh.EvalError
WITHOUT_CLASSIFICATION	Implements TestStateListener.testStarted()
WITHOUT_CLASSIFICATION	Implements TestStateListener.testStarted(String)
WITHOUT_CLASSIFICATION	Implements TestStateListener.testEnded(String)
WITHOUT_CLASSIFICATION	Implementation notes: All of the methods in this class are currently read-only. If update methods are included in the future, they should be defined so that a single instance of JavaSamplerContext can be associated with each thread. Therefore, no synchronization should be needed. The same instance should be used for the call to setupTest, all calls to runTest, and the call to teardownTest.
WITHOUT_CLASSIFICATION	TestStateListener implementation
WITHOUT_CLASSIFICATION	Set default values $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	log.info(getLabel()+" "+getFilename());
WITHOUT_CLASSIFICATION	assume text output - script can override if necessary
WITHOUT_CLASSIFICATION	Set response data
WITHOUT_CLASSIFICATION	script can also use setResponseData() so long as it returns null
WITHOUT_CLASSIFICATION	Set if we were successful or not
WITHOUT_CLASSIFICATION	private static final String LABEL_DEFAULT = "JavaTest";
WITHOUT_CLASSIFICATION	Utility method to set up all the values
WITHOUT_CLASSIFICATION	default to name of element
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Record sample start time.
WITHOUT_CLASSIFICATION	Record sample start time.
WITHOUT_CLASSIFICATION	Generate a random-ish offset value using the current time.
WITHOUT_CLASSIFICATION	Generate a random-ish offset value using the current time.
WITHOUT_CLASSIFICATION	Execute the sample. In this case sleep for the specified time, if any
WITHOUT_CLASSIFICATION	Record end time and populate the results.
WITHOUT_CLASSIFICATION	The name of the sampler
WITHOUT_CLASSIFICATION	should not happen
WITHOUT_CLASSIFICATION	Only do the calculation if it is needed
WITHOUT_CLASSIFICATION	Execute the sample. In this case sleep for the specified time.
WITHOUT_CLASSIFICATION	String used to indicate a null value
WITHOUT_CLASSIFICATION	key: name (lowercase) from java.sql.Types; entry: corresponding int value
WITHOUT_CLASSIFICATION	read-only after class init
WITHOUT_CLASSIFICATION	based on e291. Getting the Name of a JDBC Type from javaalmanac.com http:javaalmanac.com/egs/java.sql/JdbcInt2Str.html
WITHOUT_CLASSIFICATION	Get all fields in java.sql.Types and store the corresponding int values
WITHOUT_CLASSIFICATION	Query types (used to communicate with GUI) N.B. These must not be changed, as they are used in the JMX files $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Based on query return value, get results
WITHOUT_CLASSIFICATION	User provided incorrect query type
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	As a connection is held by only one thread, we cannot already have a preparedStatementMap put by another thread
WITHOUT_CLASSIFICATION	Save the value in the variable if present
WITHOUT_CLASSIFICATION	Save the value in the variable if present
WITHOUT_CLASSIFICATION	in case
WITHOUT_CLASSIFICATION	can't have an output parameter type null
WITHOUT_CLASSIFICATION	PreparedStatementMap is associated to one connection so 2 threads cannot use the same PreparedStatement map at the same time
WITHOUT_CLASSIFICATION	thrown by Derby JDBC (at least) if there are no "?" markers in statement
WITHOUT_CLASSIFICATION	save the current count
WITHOUT_CLASSIFICATION	LRUMap is not generic
WITHOUT_CLASSIFICATION	i starts at 1
WITHOUT_CLASSIFICATION	The datasource is set up by testStarted and cleared by testEnded. These are called from different threads, so access must be synchronized. The same instance is called in each case.
WITHOUT_CLASSIFICATION	Remove any additional values from previous sample
WITHOUT_CLASSIFICATION	call to TestBeanHelper.prepare() is intentional
WITHOUT_CLASSIFICATION	$NON-NLS-1$ Get the previous count
WITHOUT_CLASSIFICATION	Keep a record of the pre-thread pools so that they can be disposed of at the end of a test
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	i.e. if we want per thread pooling pool will be created later
WITHOUT_CLASSIFICATION	Utility routine to get the connection from the pool. Purpose: - allows JDBCSampler to be entirely independent of the pooling classes - allows the pool storage mechanism to be changed if necessary
WITHOUT_CLASSIFICATION	Set up the DataSource - maxPool is a parameter, so the same code can also be used for setting up the per-thread pools.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	log is required to ensure errors are available
WITHOUT_CLASSIFICATION	used to hold per-thread singleton connection pools
WITHOUT_CLASSIFICATION	Wrapper class to allow getConnection() to be implemented for both shared and per-thread pools.
WITHOUT_CLASSIFICATION	Ignored
WITHOUT_CLASSIFICATION	Ignored
WITHOUT_CLASSIFICATION	i.e. shared pool
WITHOUT_CLASSIFICATION	make sure setting the new isolation mode is done in an auto committed transaction
WITHOUT_CLASSIFICATION	Will use default isolation
WITHOUT_CLASSIFICATION	Assume we will be successful
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	use latency to measure connection time
WITHOUT_CLASSIFICATION	The environment is supposed to use String keys only
WITHOUT_CLASSIFICATION	WebsphereMQ does not allow corr. id. to be set using setStringProperty() $NON-NLS-1$
WITHOUT_CLASSIFICATION	We use a LinkedBlockingQueue (rather than a ConcurrentLinkedQueue) because it has a poll-with-wait method that avoids the need to use a polling loop.
WITHOUT_CLASSIFICATION	Using onMessage Listener
WITHOUT_CLASSIFICATION	Allow for short/negative times
WITHOUT_CLASSIFICATION	Allow for short/negative times
WITHOUT_CLASSIFICATION	called from threadFinished() thread
WITHOUT_CLASSIFICATION	GuardedBy("this")
WITHOUT_CLASSIFICATION	GuardedBy("this")
WITHOUT_CLASSIFICATION	There was an object in map, destroy the temporary and return one in map (oldCtx)
WITHOUT_CLASSIFICATION	else No object in Map, ctx is the one
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ --
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	renamed from clear
WITHOUT_CLASSIFICATION	(TestElement) el.getProperty(JMSSampler.JMS_PROPERTIES).getObjectValue());
WITHOUT_CLASSIFICATION	(TestElement) el.getProperty(JMSSampler.JNDI_PROPERTIES).getObjectValue());
WITHOUT_CLASSIFICATION	Button group resources
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Button group resources
WITHOUT_CLASSIFICATION	These are the names of properties used to define the labels $NON-NLS-1$
WITHOUT_CLASSIFICATION	These are the names of properties used to define the labels $NON-NLS-1$
WITHOUT_CLASSIFICATION	Button group resources when Bytes Message is selected
WITHOUT_CLASSIFICATION	$NON-NLS-1$ Button group resources
WITHOUT_CLASSIFICATION	$NON-NLS-1$ Button group resources
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	--
WITHOUT_CLASSIFICATION	++ These names are used in the JMX files, and must not be changed
WITHOUT_CLASSIFICATION	Cache for file. Only used by sample() in a single thread
WITHOUT_CLASSIFICATION	Cache for bytes-message, only used when parsing from a file
WITHOUT_CLASSIFICATION	Allow shorthand names
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Assume it will fail ditto $NON-NLS-1$
WITHOUT_CLASSIFICATION	TODO - charset?
WITHOUT_CLASSIFICATION	TODO - charset?
WITHOUT_CLASSIFICATION	Not found
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	in the case the test uses a file, we set it locally and prevent loading the file repeatedly
WITHOUT_CLASSIFICATION	in the case the test uses a file, we set it locally and prevent loading the file repeatedly
WITHOUT_CLASSIFICATION	Allow for the old JMX file which used the local language string
WITHOUT_CLASSIFICATION	------------- get/set properties ----------------------
WITHOUT_CLASSIFICATION	These static variables are only used to convert existing files
WITHOUT_CLASSIFICATION	will be the 3rd option, which is not checked specifically
WITHOUT_CLASSIFICATION	Note: originally the code did use the ClientPool to "share" subscribers, however since the key was "this" and each sampler is unique - nothing was actually shared.
WITHOUT_CLASSIFICATION	Default wait (ms) for a message if timeouts are not enabled This is the maximum time the sampler can be blocked.
WITHOUT_CLASSIFICATION	No need to synch/ - only used by sampler and ClientPool (which does its own synch)
WITHOUT_CLASSIFICATION	This will be null if initialization succeeds.
WITHOUT_CLASSIFICATION	If true, start/stop subscriber for each sample
WITHOUT_CLASSIFICATION	Don't change the string, as it is used in JMX files $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	run threadStarted only if Destination setup on each sample
WITHOUT_CLASSIFICATION	If so, we need to start collection here
WITHOUT_CLASSIFICATION	run threadFinished only if Destination setup on each sample (stop Listen queue)
WITHOUT_CLASSIFICATION	MapNames are Strings
WITHOUT_CLASSIFICATION	Disabled thread start if listen on sample choice
WITHOUT_CLASSIFICATION	Don't start yet if stop between samples
WITHOUT_CLASSIFICATION	listen on sample
WITHOUT_CLASSIFICATION	Can be null if init fails
WITHOUT_CLASSIFICATION	listen on sample
WITHOUT_CLASSIFICATION	so we break the loops in SampleWithListener and SampleWithReceive
WITHOUT_CLASSIFICATION	Assume failure
WITHOUT_CLASSIFICATION	--
WITHOUT_CLASSIFICATION	------------- get/set properties ----------------------
WITHOUT_CLASSIFICATION	++ These are JMX names, and must not be changed $NON-NLS-1$
WITHOUT_CLASSIFICATION	Convert the old test plan entry (which is the language dependent string) to the resource name
WITHOUT_CLASSIFICATION	This was the old value that was checked for $NON-NLS-1$
WITHOUT_CLASSIFICATION	Default to be applied
WITHOUT_CLASSIFICATION	++ These are JMX file attribute names and must not be changed $NON-NLS-1$
WITHOUT_CLASSIFICATION	N.B. Cannot change value, as that is used in JMX files $NON-NLS-1$
WITHOUT_CLASSIFICATION	Is Destination setup static? else dynamic $NON-NLS-1$ default to maintain compatibility
WITHOUT_CLASSIFICATION	-- End of JMX file attribute names
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Member variables
WITHOUT_CLASSIFICATION	These constants are used in the JMX files, and so must not be changed
WITHOUT_CLASSIFICATION	msgId not available until after send() is called Note: there is only one admin object which is shared between all threads interlock with Receiver
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	This used to be request.wait(timeout_ms), where 0 means forever However 0 means return immediately for the latch
WITHOUT_CLASSIFICATION	$NON-NLS$
WITHOUT_CLASSIFICATION	$NON-NLS$
WITHOUT_CLASSIFICATION	$NON-NLS$
WITHOUT_CLASSIFICATION	$NON-NLS$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.createTestElement()
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	N.B. These entry indexes MUST agree with the SearchControls SCOPE_LEVELS, i.e. javax.naming.directory.SearchControls.OBJECT_SCOPE, ONELEVEL_SCOPE, SUBTREE_SCOPE These have the values 0,1,2 so can be used as indexes in the array as well as the value for the search itself. N.B. Although the strings are used to set and get the options, language change does not currently cause a problem, because that always saves the current settings first, and then recreates all the GUI classes.
WITHOUT_CLASSIFICATION	Names for the cards $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	e.g unbind
WITHOUT_CLASSIFICATION	Take note of when buttong are changed so can change panel
WITHOUT_CLASSIFICATION	private static final Logger log = LoggingManager.getLoggerForClass();
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.createTestElement()
WITHOUT_CLASSIFICATION	$NON-NLS$
WITHOUT_CLASSIFICATION	$NON-NLS$
WITHOUT_CLASSIFICATION	$NON-NLS$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Only contains LDAPArgument entries
WITHOUT_CLASSIFICATION	Resize the table columns to appropriate widths. @param _table the table to resize columns for private void sizeColumns(JTable _table) { }
WITHOUT_CLASSIFICATION	sizeColumns(table);
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.createTestElement()
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.modifyTestElement(TestElement)
WITHOUT_CLASSIFICATION	Enable DELETE (which may already be enabled, but it won't hurt)
WITHOUT_CLASSIFICATION	Highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	Disable DELETE if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	Disable DELETE if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	Table still contains one or more rows, so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	MAIN PANEL
WITHOUT_CLASSIFICATION	MAIN PANEL
WITHOUT_CLASSIFICATION	Force a minimum table height of 70 pixels
WITHOUT_CLASSIFICATION	If a table cell is being edited, we should accept the current value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	If a table cell is being edited, we must cancel the editing before deleting the row
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Set if we were successful or not
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	count limit time limit attributes (null = all) return object ? dereference links?
WITHOUT_CLASSIFICATION	The following strings are used in the test plan, and the values must not be changed if test plans are to be upwardly compatible.
WITHOUT_CLASSIFICATION	For In build test case using this counter create the new entry in the server
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	replace (update) attribute $NON-NLS-1$ $NON-NLS-2$ add mobile phone number attribute $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	These are values for the TEST attribute above $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ end of TEST values
WITHOUT_CLASSIFICATION	the createTest() method creates an extra context which needs to be closed
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	log.warn("DEBUG",ex); e.g. javax.naming.SizeLimitExceededException: [LDAP: error code 4 - Sizelimit Exceeded]; remaining name '' 123456789012345678901 TODO: tidy this up
WITHOUT_CLASSIFICATION	Write out search results in a stable order (including order of all subelements which might be reordered like attributes and their values) so that simple textual comparison can be done, unless the number of results exceeds {@link #MAX_SORTED_RESULTS} in which case just stream the results out without sorting.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	read all sortedResults into memory so we can guarantee ordering
WITHOUT_CLASSIFICATION	must be done prior to sorting
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	show what we did manage to retrieve
WITHOUT_CLASSIFICATION	If there's anything left ...
WITHOUT_CLASSIFICATION	assume it's senstive data
WITHOUT_CLASSIFICATION	Ensure any remaining contexts are closed
WITHOUT_CLASSIFICATION	Parent folder (or single message file)
WITHOUT_CLASSIFICATION	== ServerName from mail sampler
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Perform the sampling
WITHOUT_CLASSIFICATION	Start timing
WITHOUT_CLASSIFICATION	-
WITHOUT_CLASSIFICATION	RFC 822 uses ascii per default
WITHOUT_CLASSIFICATION	Use the actual class so the name must be correct.
WITHOUT_CLASSIFICATION	special value
WITHOUT_CLASSIFICATION	Did sample succeed?
WITHOUT_CLASSIFICATION	Create empty properties
WITHOUT_CLASSIFICATION	Requires JavaMail 1.4.2+
WITHOUT_CLASSIFICATION	Requires JavaMail 1.4.2+
WITHOUT_CLASSIFICATION	Get session
WITHOUT_CLASSIFICATION	Get the store
WITHOUT_CLASSIFICATION	Get folder
WITHOUT_CLASSIFICATION	Get directory
WITHOUT_CLASSIFICATION	Don't save headers - they are already in the raw message
WITHOUT_CLASSIFICATION	Save raw message
WITHOUT_CLASSIFICATION	Javadoc for the API says this is OK
WITHOUT_CLASSIFICATION	Avoid double-call if addSubResult was called.
WITHOUT_CLASSIFICATION	Close connection
WITHOUT_CLASSIFICATION	not been set by any child samples
WITHOUT_CLASSIFICATION	Gui Components
WITHOUT_CLASSIFICATION	Labels - don't make these static, else language change will not work
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	TODO - charset?
WITHOUT_CLASSIFICATION	Helper method to set up the GUI screen
WITHOUT_CLASSIFICATION	Store the content-type RFC 822 uses ascii per default Parse the content-type
WITHOUT_CLASSIFICATION	No need to log normally, as we set the status $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ may be null
WITHOUT_CLASSIFICATION	$NON-NLS-1$ may be null
WITHOUT_CLASSIFICATION	Used to separate attachment file names in JMX fields - do not change!
WITHOUT_CLASSIFICATION	-JMX file attribute names
WITHOUT_CLASSIFICATION	Process address lists
WITHOUT_CLASSIFICATION	needed for measuring sending time
WITHOUT_CLASSIFICATION	calculate message size
WITHOUT_CLASSIFICATION	Set up the sample result details
WITHOUT_CLASSIFICATION	Perform the sampling
WITHOUT_CLASSIFICATION	username / password incorrect
WITHOUT_CLASSIFICATION	SSL not supported, startTLS not supported, other messagingException
WITHOUT_CLASSIFICATION	general exception
WITHOUT_CLASSIFICATION	process the sampler result
WITHOUT_CLASSIFICATION	throws ME
WITHOUT_CLASSIFICATION	throws IOE, ME
WITHOUT_CLASSIFICATION	throws IOE, ME
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	part is only needed if we don't send an .eml-file
WITHOUT_CLASSIFICATION	getAllHeaders() is not yet genericised throws ME
WITHOUT_CLASSIFICATION	throws ME throws IOE, ME
WITHOUT_CLASSIFICATION	API not yet generic throws ME
WITHOUT_CLASSIFICATION	we have at least one potential address
WITHOUT_CLASSIFICATION	local vars
WITHOUT_CLASSIFICATION	ensure correctly set on initial display ensure correctly set on initial display
WITHOUT_CLASSIFICATION	Server Settings
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	E-Mail Settings
WITHOUT_CLASSIFICATION	Auth Settings
WITHOUT_CLASSIFICATION	Security Settings
WITHOUT_CLASSIFICATION	(non-Javadoc) Message Settings
WITHOUT_CLASSIFICATION	Add the header panel
WITHOUT_CLASSIFICATION	Additional Settings
WITHOUT_CLASSIFICATION	tfMailFrom.setEnabled(true); tfMailTo.setEnabled(true); tfMailToCC.setEnabled(true); tfMailToBCC.setEnabled(true); tfSubject.setEnabled(true);
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Use the actual class so the name must be correct.
WITHOUT_CLASSIFICATION	Requires JavaMail 1.4.2+
WITHOUT_CLASSIFICATION	Standard setup
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	local vars
WITHOUT_CLASSIFICATION	Add the standard title
WITHOUT_CLASSIFICATION	must follow the checkbox setting
WITHOUT_CLASSIFICATION	not compatible
WITHOUT_CLASSIFICATION	not compatible must follow the checkbox setting
WITHOUT_CLASSIFICATION	ensure correctly set on initial display
WITHOUT_CLASSIFICATION	Might be NullProperty
WITHOUT_CLASSIFICATION	case we are measuring real time of spedition
WITHOUT_CLASSIFICATION	set properties using JAF
WITHOUT_CLASSIFICATION	handle body and attachments
WITHOUT_CLASSIFICATION	i.e. mailBody is empty
WITHOUT_CLASSIFICATION	set from field and subject
WITHOUT_CLASSIFICATION	synchronousMode==true
WITHOUT_CLASSIFICATION	listener cannot be null here
WITHOUT_CLASSIFICATION	OK, it has been supplied
WITHOUT_CLASSIFICATION	Empty arrays are immutable
WITHOUT_CLASSIFICATION	Implements JMeterGuiComponent.createTestElement()
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	http:api.mongodb.org/java/2.7.2/com/mongodb/Mongo.html
WITHOUT_CLASSIFICATION	http:api.mongodb.org/java/2.7.2/com/mongodb/Mongo.html
WITHOUT_CLASSIFICATION	http:api.mongodb.org/java/2.7.2/com/mongodb/MongoOptions.html/
WITHOUT_CLASSIFICATION	http:api.mongodb.org/java/2.7.2/com/mongodb/MongoOptions.html/
WITHOUT_CLASSIFICATION	Mongo is Thread Safe
WITHOUT_CLASSIFICATION	there is no harm in trying to clear up
WITHOUT_CLASSIFICATION	Helper
WITHOUT_CLASSIFICATION	+ JMX names, do not change their values
WITHOUT_CLASSIFICATION	- JMX names
WITHOUT_CLASSIFICATION	default charset is deliberate here
WITHOUT_CLASSIFICATION	N.B. this will be a config element, so we cannot use the getXXX() methods
WITHOUT_CLASSIFICATION	Default to original behaviour, i.e. re-use connection
WITHOUT_CLASSIFICATION	N.B. this will be a config element, so we cannot use the setXXX() methods
WITHOUT_CLASSIFICATION	Overrides AbstractJMeterGuiComponent.configure(TestElement)
WITHOUT_CLASSIFICATION	element.setProperty(TCPSampler.FILENAME, filename.getText());
WITHOUT_CLASSIFICATION	element.setProperty(TCPSampler.NODELAY, setNoDelay.isSelected());
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Don't use default for saving tristates element.setProperty(TCPSampler.CLOSE_CONNECTION, closeConnection.isSelected(), TCPSampler.CLOSE_CONNECTION_DEFAULT);
WITHOUT_CLASSIFICATION	5 columns size
WITHOUT_CLASSIFICATION	3 columns size
WITHOUT_CLASSIFICATION	mainPanel.add(createFilenamePanel());
WITHOUT_CLASSIFICATION	-- JMX file constants - do not change
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ key for HashMap
WITHOUT_CLASSIFICATION	$NON-NLS-1$ key for HashMap
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Entry tends to be ignored ...
WITHOUT_CLASSIFICATION	Set if we were successful or not
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	++ JMX file constants - do not change $NON-NLS-1$
WITHOUT_CLASSIFICATION	If set, this is the regex that is used to extract the status from the response NOT implemented yet private static final String STATUS_REGEX = JMeterUtils.getPropDefault("tcp.status.regex","");
WITHOUT_CLASSIFICATION	Are we processing the first sample?
WITHOUT_CLASSIFICATION	used for handling interrupt
WITHOUT_CLASSIFICATION	Not in cache, so create new one and cache it
WITHOUT_CLASSIFICATION	Do stuff we cannot do as part of threadStarted()
WITHOUT_CLASSIFICATION	Use the test element name for the label
WITHOUT_CLASSIFICATION	Calculate response time
WITHOUT_CLASSIFICATION	Reset the status code if the message contains one
WITHOUT_CLASSIFICATION	Cannot do this as part of threadStarted() because the Config elements have not been processed.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	fetch in case gets nulled later
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	the data implementation
WITHOUT_CLASSIFICATION	Preserve sign on first byte
WITHOUT_CLASSIFICATION	do we need to close byte array (or flush it?)
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	Process command line property definitions (can occur multiple times)
WITHOUT_CLASSIFICATION	private ImageIcon runningIcon = JMeterUtils.getImage("thread.enabled.gif");
WITHOUT_CLASSIFICATION	private Set hosts = new HashSet();
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.createTestElement()
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.modifyTestElement(TestElement)
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	Set it
WITHOUT_CLASSIFICATION	Set it
WITHOUT_CLASSIFICATION	Reset it
WITHOUT_CLASSIFICATION	Reset it
WITHOUT_CLASSIFICATION	Set category
WITHOUT_CLASSIFICATION	Set root level
WITHOUT_CLASSIFICATION	The default title for the Menu bar
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Probably a missing jar
WITHOUT_CLASSIFICATION	Programming error: bail out.
WITHOUT_CLASSIFICATION	Programming error: bail out.
WITHOUT_CLASSIFICATION	$NON-NSL-1$
WITHOUT_CLASSIFICATION	editMenu.setEnabled(false);
WITHOUT_CLASSIFICATION	If we are enabling the Edit-->Remove menu item, then we also need to enable the Edit menu. The Edit menu may already be enabled, but there's no harm it trying to enable it again.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	file New operation may set to null, so just return app name
WITHOUT_CLASSIFICATION	FIrst make sure we save the content of the current GUI (since we will flush it away):
WITHOUT_CLASSIFICATION	Forget about all GUIs we've created so far: we'll need to re-created them all!
WITHOUT_CLASSIFICATION	BeanInfo objects also contain locale-sensitive data -- flush them away:
WITHOUT_CLASSIFICATION	Now put the current GUI in place. [This code was copied from the EditCommand action -- we can't just trigger the action because that would populate the current node with the contents of the new GUI -- which is empty.] Fetch once Probably caused by unit testing on headless system
WITHOUT_CLASSIFICATION	JMenu reportMenu; JMenuItem analyze;
WITHOUT_CLASSIFICATION	If the Add menu already exists, remove it.
WITHOUT_CLASSIFICATION	Insert the Add menu as the first menu item in the Edit menu.
WITHOUT_CLASSIFICATION	There was a NPE being thrown without the null check here.. JKB
WITHOUT_CLASSIFICATION	If we are enabling the Edit-->Add menu item, then we also need to enable the Edit menu. The Edit menu may already be enabled, but there's no harm it trying to enable it again.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	HELP MENU $NON-NLS-1$
WITHOUT_CLASSIFICATION	OPTIONS MENU $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Strings used to set up and process actions in this menu The strings need to agree with the those in the Action routines
WITHOUT_CLASSIFICATION	RUN MENU $NON-NLS-1$
WITHOUT_CLASSIFICATION	EDIT MENU $NON-NLS-1$ From the Java Look and Feel Guidelines: If all items in a menu are disabled, then disable the menu. Makes sense.
WITHOUT_CLASSIFICATION	FILE MENU $NON-NLS-1$
WITHOUT_CLASSIFICATION	Set default SAVE menu item to disabled since the default node that is selected is ROOT, which does not allow items to be inserted.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ file_merge.setAccelerator( KeyStroke.getKeyStroke(KeyEvent.VK_O, KeyEvent.CTRL_MASK));
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	MENU_ADD_xxx - controls which items are in the ADD menu MENU_PARENT_xxx - controls which items are in the Insert Parent menu
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	private static final Logger log = LoggingManager.getLoggerForClass();
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$
WITHOUT_CLASSIFICATION	Don't try to instantiate these
WITHOUT_CLASSIFICATION	called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	JFileChooser jfc = null;
WITHOUT_CLASSIFICATION	private static final Logger log = LoggingManager.getLoggerForClass();
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	same code as for default JMeter class
WITHOUT_CLASSIFICATION	Avoid NPE in resetPage()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.gui.JMeterGUIComponent#createTestElement()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.gui.JMeterGUIComponent#modifyTestElement(org.apache.jmeter.testelement.TestElement)
WITHOUT_CLASSIFICATION	don't change name if merging
WITHOUT_CLASSIFICATION	Allow for missing optional jars
WITHOUT_CLASSIFICATION	OK
WITHOUT_CLASSIFICATION	Clear the name of the test plan file
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	can't be null - this is checked by canAddTo
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Save parent node for later
WITHOUT_CLASSIFICATION	So elements can only be added as children
WITHOUT_CLASSIFICATION	can't be null - this is checked by canAddTo
WITHOUT_CLASSIFICATION	log.info("classname:: " + strClassName);
WITHOUT_CLASSIFICATION	Match all
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	special handling
WITHOUT_CLASSIFICATION	convertTree(tree);
WITHOUT_CLASSIFICATION	OK
WITHOUT_CLASSIFICATION	OK
WITHOUT_CLASSIFICATION	OK
WITHOUT_CLASSIFICATION	Not implemented: public static final String SAVE = "save_as"; Not implemented: public static final String SAVE_ALL = "save_all"; Not implemented: public static final String SAVE_TO_PREVIOUS = "save";
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	get the JComponent from the visualizer
WITHOUT_CLASSIFICATION	Get the string given from the choose and check the file extension.
WITHOUT_CLASSIFICATION	i.e. no disabled icon found
WITHOUT_CLASSIFICATION	Must therefore set the enabled icon so there is at least some icon
WITHOUT_CLASSIFICATION	put the gui object back to the way it was.
WITHOUT_CLASSIFICATION	This check the state of the TestElement and if returns false it disable the loaded node
WITHOUT_CLASSIFICATION	Container endWindow; JPopupMenu pop;
WITHOUT_CLASSIFICATION	endWindow = window;
WITHOUT_CLASSIFICATION	Get the Main Frame.
WITHOUT_CLASSIFICATION	Close any Main Menu that is open
WITHOUT_CLASSIFICATION	transient private static final Logger log = LoggingManager.getLoggerForClass();
WITHOUT_CLASSIFICATION	boolean enabled = true;
WITHOUT_CLASSIFICATION	If icon has not been defined, then use GUI_CLASS property
WITHOUT_CLASSIFICATION	mkdir() returns false if the directory was not created; could be because it exists
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	There's only 1 test plan, so can cache the mode here
WITHOUT_CLASSIFICATION	private static final Logger log = LoggingManager.getLoggerForClass();
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	if the directory already exists and is a directory, we just renamed to "archive.date"
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	return the pagesize divided by 1024 to get kilobytes
WITHOUT_CLASSIFICATION	we add the entry
WITHOUT_CLASSIFICATION	we should make this configurable eventually
WITHOUT_CLASSIFICATION	private static ReportPlan plan;
WITHOUT_CLASSIFICATION	now add the samples to the HashMap
WITHOUT_CLASSIFICATION	Iterator itr = data.iterator();
WITHOUT_CLASSIFICATION	duplicates
WITHOUT_CLASSIFICATION	incompatable (blee/all)
WITHOUT_CLASSIFICATION	Check that optional args work woth long options
WITHOUT_CLASSIFICATION	"-T3","-a"
WITHOUT_CLASSIFICATION	"-T3","-a"
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	result.setResponseData - not set
WITHOUT_CLASSIFICATION	TODO - charset?
WITHOUT_CLASSIFICATION	"-T","-a"
WITHOUT_CLASSIFICATION	"-Dstupid=idiot","are","--all","--all","here"
WITHOUT_CLASSIFICATION	Check delimiters are allowed
WITHOUT_CLASSIFICATION	Check delimiters are allowed
WITHOUT_CLASSIFICATION	Should not detect trailing option
WITHOUT_CLASSIFICATION	should detect trailing option
WITHOUT_CLASSIFICATION	"-Dstupid=idiot","are","--all","here"
WITHOUT_CLASSIFICATION	Check "-" is allowed in arg2
WITHOUT_CLASSIFICATION	"-Dstupid="
WITHOUT_CLASSIFICATION	"-Dstupid=","-c"
WITHOUT_CLASSIFICATION	"-Dstupid","-c"
WITHOUT_CLASSIFICATION	Canonical form
WITHOUT_CLASSIFICATION	Test optional arguments
WITHOUT_CLASSIFICATION	OK should treat B as separate Should have no arg
WITHOUT_CLASSIFICATION	Convert between eclipse jar name and build.properties name
WITHOUT_CLASSIFICATION	remove docs-only jars
WITHOUT_CLASSIFICATION	assume default charset is OK here <classpathentry kind="lib" path="lib/geronimo-jms_1.1_spec-1.1.1.jar"/> <classpathentry kind="lib" path="lib/activation-1.1.1.jar"/> <classpathentry kind="lib" path="lib/jtidy-r938.jar"/>
WITHOUT_CLASSIFICATION	special handling
WITHOUT_CLASSIFICATION	This would be done by the run command
WITHOUT_CLASSIFICATION	testLog.setPriority(org.apache.log.Priority.DEBUG);
WITHOUT_CLASSIFICATION	Not present
WITHOUT_CLASSIFICATION	wrong
WITHOUT_CLASSIFICATION	Wrong
WITHOUT_CLASSIFICATION	LoggingManager.setPriority("DEBUG","jmeter");
WITHOUT_CLASSIFICATION	Restart file
WITHOUT_CLASSIFICATION	Check random number
WITHOUT_CLASSIFICATION	This would be done by the run command
WITHOUT_CLASSIFICATION	Test CSV file with a header line
WITHOUT_CLASSIFICATION	Test CSV file with a header line
WITHOUT_CLASSIFICATION	Test CSV file with a header line and recycle is true
WITHOUT_CLASSIFICATION	read 1st line read 5 lines + restart to file begin line 2 line 3 line 4 line 5 return to 2nd line (first line is names)
WITHOUT_CLASSIFICATION	needs to be initialised
WITHOUT_CLASSIFICATION	etc...
WITHOUT_CLASSIFICATION	GenericController sub_1 = new GenericController(); sub_1.addTestElement(new IfController("3==3")); controller.addTestElement(sub_1); controller.addTestElement(new IfController("false==true"));
WITHOUT_CLASSIFICATION	IfController controller = new IfController("12==12"); controller.initialize();
WITHOUT_CLASSIFICATION	Should not enter the loop
WITHOUT_CLASSIFICATION	Test with SimpleController as first item
WITHOUT_CLASSIFICATION	Should not enter the loop next time
WITHOUT_CLASSIFICATION	Should not enter the loop next time But should continue to the end of the loop
WITHOUT_CLASSIFICATION	Get next sample and its name
WITHOUT_CLASSIFICATION	Match by name
WITHOUT_CLASSIFICATION	should not run any children should match the default entry
WITHOUT_CLASSIFICATION	Selection controller with two sub-controllers, but each has only 1 child
WITHOUT_CLASSIFICATION	Controller + Before + Switch (cond) + + zero + + Controller sub_1 + + + one + + two + + Controller sub_2 + + + three + After
WITHOUT_CLASSIFICATION	Test: Before Selection Controller - zero (default) - simple controller 1 - - one - - two - simple controller 2 - - three - - four - five - six After cond = Switch condition exp[] = expected results
WITHOUT_CLASSIFICATION	N.B. Requires ApacheJMeter_functions.jar to be on the classpath, otherwise the function cannot be resolved.
WITHOUT_CLASSIFICATION	While (blank), previous sample OK - should loop until false
WITHOUT_CLASSIFICATION	log.info("testBlankPrevOK");
WITHOUT_CLASSIFICATION	While (LAST), previous sample OK - should loop until false
WITHOUT_CLASSIFICATION	While (LAST), previous sample OK - should loop until false
WITHOUT_CLASSIFICATION	log.info("testLASTPrevOK");
WITHOUT_CLASSIFICATION	Dummy for testing functions
WITHOUT_CLASSIFICATION	log.info("testOtherPrevOK");
WITHOUT_CLASSIFICATION	While (blank), previous sample failed - should run once
WITHOUT_CLASSIFICATION	log.info("testBlankPrevFailed");
WITHOUT_CLASSIFICATION	Run entire test again
WITHOUT_CLASSIFICATION	Should not enter the loop
WITHOUT_CLASSIFICATION	While LAST, previous sample failed - should not run
WITHOUT_CLASSIFICATION	log.info("testLastPrevFailed");
WITHOUT_CLASSIFICATION	While False, previous sample failed - should not run
WITHOUT_CLASSIFICATION	log.info("testFalsePrevFailed");
WITHOUT_CLASSIFICATION	Should behave the same for blank and LAST because success on input
WITHOUT_CLASSIFICATION	Should be OK
WITHOUT_CLASSIFICATION	e.printStackTrace();
WITHOUT_CLASSIFICATION	Set up the test plan
WITHOUT_CLASSIFICATION	OnlyOnce samples
WITHOUT_CLASSIFICATION	Outer sample
WITHOUT_CLASSIFICATION	Inner loop
WITHOUT_CLASSIFICATION	Sample in inner loop
WITHOUT_CLASSIFICATION	Compute the expected sample names
WITHOUT_CLASSIFICATION	Outer only once + ("three" + ("four" + "five" + "six" + "seven") innerLoopCount) outerLoopCount;
WITHOUT_CLASSIFICATION	The only once samples
WITHOUT_CLASSIFICATION	The outer sample and the inner loop samples
WITHOUT_CLASSIFICATION	Execute the test pan
WITHOUT_CLASSIFICATION	Outer sample
WITHOUT_CLASSIFICATION	Inner loop
WITHOUT_CLASSIFICATION	Inner loop
WITHOUT_CLASSIFICATION	Sample in inner loop
WITHOUT_CLASSIFICATION	Compute the expected sample names
WITHOUT_CLASSIFICATION	Compute the expected sample names
WITHOUT_CLASSIFICATION	The only once samples
WITHOUT_CLASSIFICATION	The only once samples
WITHOUT_CLASSIFICATION	The outer sample and the inner loop samples
WITHOUT_CLASSIFICATION	Execute the test pan
WITHOUT_CLASSIFICATION	Execute the test pan
WITHOUT_CLASSIFICATION	Test plan with OnlyOnceController inside inner loop Set up the test plan
WITHOUT_CLASSIFICATION	OnlyOnce inside inner loop
WITHOUT_CLASSIFICATION	Outer only once + ("three" + "only once five and six" + ("four" + "seven") innerLoopCount) outerLoopCount;
WITHOUT_CLASSIFICATION	Test skipped for now as behaviour is not yet properly defined
WITHOUT_CLASSIFICATION	InterleaveController in inner loop
WITHOUT_CLASSIFICATION	OnlyOnce inside InterleaveController
WITHOUT_CLASSIFICATION	Samples inside InterleaveController
WITHOUT_CLASSIFICATION	Sample in inner loop
WITHOUT_CLASSIFICATION	Outer only once + ("three" + "only once five and six" + "eight in interleave only once" + ("four" + "interleave" + "eleven") innerLoopCount) outerLoopCount;
WITHOUT_CLASSIFICATION	Escaped dollar commma and backslash with no variable reference
WITHOUT_CLASSIFICATION	Escaped dollar commma and backslash with variable reference
WITHOUT_CLASSIFICATION	N.B. Backslashes are removed before dollar, comma and backslash
WITHOUT_CLASSIFICATION	N.B. Backslashes are removed before dollar, comma and backslash
WITHOUT_CLASSIFICATION	Escaped dollar commma and backslash with missing variable reference
WITHOUT_CLASSIFICATION	Escaped dollar commma and backslash with missing function reference
WITHOUT_CLASSIFICATION	log.debug("domain property = " + element.getProperty("domain"));
WITHOUT_CLASSIFICATION	log.debug("domain property = " + element.getProperty("domain"));
WITHOUT_CLASSIFICATION	Set up the non-wild variables
WITHOUT_CLASSIFICATION	Should not clear this?
WITHOUT_CLASSIFICATION	Check when match fails
WITHOUT_CLASSIFICATION	extractor.setDefaultValue("default");
WITHOUT_CLASSIFICATION	Now rerun with match fail
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	This would be done by the run command
WITHOUT_CLASSIFICATION	OK
WITHOUT_CLASSIFICATION	Has child, but child is empty
WITHOUT_CLASSIFICATION	Has no child
WITHOUT_CLASSIFICATION	No text
WITHOUT_CLASSIFICATION	Test fragment
WITHOUT_CLASSIFICATION	Now get its text
WITHOUT_CLASSIFICATION	No text, but using fragment mode
WITHOUT_CLASSIFICATION	There aren't any
WITHOUT_CLASSIFICATION	Try to get data from subresult Needed for addSubResult()
WITHOUT_CLASSIFICATION	Get data from both
WITHOUT_CLASSIFICATION	get data from child
WITHOUT_CLASSIFICATION	Create the StringFromFile function and set its parameters.
WITHOUT_CLASSIFICATION	Create the SplitFile function and set its parameters.
WITHOUT_CLASSIFICATION	Create the BeanShell function and set its parameters.
WITHOUT_CLASSIFICATION	Reset files
WITHOUT_CLASSIFICATION	Check some initial variables
WITHOUT_CLASSIFICATION	Check source works
WITHOUT_CLASSIFICATION	Check persistence
WITHOUT_CLASSIFICATION	Check that bsh has read the file
WITHOUT_CLASSIFICATION	Restarts
WITHOUT_CLASSIFICATION	Test that only loops twice
WITHOUT_CLASSIFICATION	Function objects to be tested
WITHOUT_CLASSIFICATION	Helper class used to implement co-routine between two threads
WITHOUT_CLASSIFICATION	Allow other thread to start
WITHOUT_CLASSIFICATION	open as A
WITHOUT_CLASSIFICATION	open as B
WITHOUT_CLASSIFICATION	col2 line 1
WITHOUT_CLASSIFICATION	A next
WITHOUT_CLASSIFICATION	col 1, line 2, A
WITHOUT_CLASSIFICATION	B next
WITHOUT_CLASSIFICATION	col2, line 2, B
WITHOUT_CLASSIFICATION	XPathFileContainer tests
WITHOUT_CLASSIFICATION	assertEquals("Expected 4 lines",4,f.size());
WITHOUT_CLASSIFICATION	The suite() method creates separate test suites for each of the types of test. The suitexxx() methods create a list of items to be tested, and create a new test instance for each. Each test type has its own constructor, which saves the item to be tested Note that the suite() method must be static, and the methods to run the tests must be instance methods so that they can pick up the item value which was saved by the constructor.
WITHOUT_CLASSIFICATION	Use same XPath for both threads
WITHOUT_CLASSIFICATION	String s =
WITHOUT_CLASSIFICATION	prevent accidental use of is below
WITHOUT_CLASSIFICATION	wrap-round check
WITHOUT_CLASSIFICATION	no wrap-round check
WITHOUT_CLASSIFICATION	Perform a sum and check the results
WITHOUT_CLASSIFICATION	trailing space
WITHOUT_CLASSIFICATION	Test with output variable name
WITHOUT_CLASSIFICATION	template match number ALL separator
WITHOUT_CLASSIFICATION	template match number ALL separator
WITHOUT_CLASSIFICATION	Test with empty output variable name
WITHOUT_CLASSIFICATION	not full test plans
WITHOUT_CLASSIFICATION	start in new state
WITHOUT_CLASSIFICATION	suite.addTest(new TestLoad("checkGuiPackage"));
WITHOUT_CLASSIFICATION	Save the method name
WITHOUT_CLASSIFICATION	Constructor for TestElement tests
WITHOUT_CLASSIFICATION	Save the method name
WITHOUT_CLASSIFICATION	Save the method name
WITHOUT_CLASSIFICATION	Save the method name
WITHOUT_CLASSIFICATION	Constructor for Serializable tests
WITHOUT_CLASSIFICATION	Constructor for GUI tests
WITHOUT_CLASSIFICATION	Constructor for Function tests
WITHOUT_CLASSIFICATION	Only show classpath once
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	used by TestAnchorModifier used by TestAnchorModifier used by TestSaveService
WITHOUT_CLASSIFICATION	Use a suite to allow the tests to be generated at run-time
WITHOUT_CLASSIFICATION	The Locale used to instantiate the GUI objects
WITHOUT_CLASSIFICATION	Needs to be done before any GUI classes are instantiated
WITHOUT_CLASSIFICATION	Restore the original Locale
WITHOUT_CLASSIFICATION	Extract titles from component_reference.xml
WITHOUT_CLASSIFICATION	Not a true GUI component
WITHOUT_CLASSIFICATION	Add titles that don't need to be documented guiTitles.put("Root", Boolean.FALSE);
WITHOUT_CLASSIFICATION	Extract titles from functions.xml
WITHOUT_CLASSIFICATION	first time
WITHOUT_CLASSIFICATION	We don't mind if this is left over Ditto, not a sampler
WITHOUT_CLASSIFICATION	Test GUI elements - create the suite of tests
WITHOUT_CLASSIFICATION	Test Functions - create the suite of tests
WITHOUT_CLASSIFICATION	JMeterGUIComponent item = (JMeterGUIComponent) iter.next();
WITHOUT_CLASSIFICATION	Test GUI elements - run the test
WITHOUT_CLASSIFICATION	So we can detect extra entries
WITHOUT_CLASSIFICATION	Is this a work in progress or an internal GUI component? Will be "" for internal components
WITHOUT_CLASSIFICATION	Skip the example samplers ...
WITHOUT_CLASSIFICATION	Record in log as well
WITHOUT_CLASSIFICATION	Record in log as well
WITHOUT_CLASSIFICATION	run the function test
WITHOUT_CLASSIFICATION	For detecting extra entries
WITHOUT_CLASSIFICATION	Check that function descriptions are OK
WITHOUT_CLASSIFICATION	Test GUI elements - run for all components
WITHOUT_CLASSIFICATION	Test GUI elements - not run for TestBeanGui items
WITHOUT_CLASSIFICATION	Test serializable elements - create the suite of tests
WITHOUT_CLASSIFICATION	Test serializable elements - test the object
WITHOUT_CLASSIFICATION	Test TestElements - implement the test case
WITHOUT_CLASSIFICATION	Don't try to instantiate remote server
WITHOUT_CLASSIFICATION	Try with a parameter-less constructor first
WITHOUT_CLASSIFICATION	OK
WITHOUT_CLASSIFICATION	no luck. Ignore this class
WITHOUT_CLASSIFICATION	We won't test restricted-access classes.
WITHOUT_CLASSIFICATION	not thrown, so need to check here
WITHOUT_CLASSIFICATION	Only dump it once
WITHOUT_CLASSIFICATION	[sebb] assertEquals(item2, clonedItem.getProperty(item2.getName()));
WITHOUT_CLASSIFICATION	Used by findTestFile
WITHOUT_CLASSIFICATION	JMeterUtils assumes Unix-style separators
WITHOUT_CLASSIFICATION	Used to be done in initializeProperties
WITHOUT_CLASSIFICATION	needed for scripts
WITHOUT_CLASSIFICATION	Display actual encoding used (will differ if file.encoding is not recognised)
WITHOUT_CLASSIFICATION	Helper method to find a file
WITHOUT_CLASSIFICATION	Add the offset
WITHOUT_CLASSIFICATION	Add the offset
WITHOUT_CLASSIFICATION	Helper method to find a test path
WITHOUT_CLASSIFICATION	number of samples taken
WITHOUT_CLASSIFICATION	same as above
WITHOUT_CLASSIFICATION	not same
WITHOUT_CLASSIFICATION	This is needed in order to set up the cookie policy
WITHOUT_CLASSIFICATION	This should be ignored, as there is no value
WITHOUT_CLASSIFICATION	starts empty
WITHOUT_CLASSIFICATION	should not be stored
WITHOUT_CLASSIFICATION	Test session cookie is returned
WITHOUT_CLASSIFICATION	Test Old cookie is not returned
WITHOUT_CLASSIFICATION	Test multi-cookie header handling
WITHOUT_CLASSIFICATION	Test duplicate cookie handling
WITHOUT_CLASSIFICATION	Assumes some kind of list is used
WITHOUT_CLASSIFICATION	Test cookie matching
WITHOUT_CLASSIFICATION	Defaults to caller URL
WITHOUT_CLASSIFICATION	ensure policy is picked up
WITHOUT_CLASSIFICATION	assertEquals("/",man.get(0).getPath());
WITHOUT_CLASSIFICATION	Cookies are ignored
WITHOUT_CLASSIFICATION	Cookies again ignored
WITHOUT_CLASSIFICATION	Show that maxlong now saved as 0
WITHOUT_CLASSIFICATION	Shutdown the http server
WITHOUT_CLASSIFICATION	Wait up to 1 second
WITHOUT_CLASSIFICATION	Already failed
WITHOUT_CLASSIFICATION	succeeded
WITHOUT_CLASSIFICATION	Connect to the http server, and do a simple http get
WITHOUT_CLASSIFICATION	Write to the socket
WITHOUT_CLASSIFICATION	Headers
WITHOUT_CLASSIFICATION	Check that the request and response matches
WITHOUT_CLASSIFICATION	Close the connection
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Write to the socket
WITHOUT_CLASSIFICATION	Headers
WITHOUT_CLASSIFICATION	Headers
WITHOUT_CLASSIFICATION	Headers
WITHOUT_CLASSIFICATION	Read the response
WITHOUT_CLASSIFICATION	Read the response
WITHOUT_CLASSIFICATION	Read the response
WITHOUT_CLASSIFICATION	Check that the request and response matches
WITHOUT_CLASSIFICATION	Check that the request and response matches
WITHOUT_CLASSIFICATION	Check that the request and response matches
WITHOUT_CLASSIFICATION	Close the connection
WITHOUT_CLASSIFICATION	Close the connection
WITHOUT_CLASSIFICATION	Close the connection
WITHOUT_CLASSIFICATION	Connect to the http server, and do a simple http get, with a pause in the middle of transmitting the header
WITHOUT_CLASSIFICATION	Write the start of the headers, and then sleep, so that the mirror thread will have to block to wait for more data to appear
WITHOUT_CLASSIFICATION	Write the rest of the headers
WITHOUT_CLASSIFICATION	The content sent
WITHOUT_CLASSIFICATION	The content sent
WITHOUT_CLASSIFICATION	Connect to the http server, and do a simple http post
WITHOUT_CLASSIFICATION	Construct body
WITHOUT_CLASSIFICATION	Construct body
WITHOUT_CLASSIFICATION	Write the headers and body
WITHOUT_CLASSIFICATION	Connect to the http server, and do a simple http post, with a pause after transmitting the headers
WITHOUT_CLASSIFICATION	Write the headers, and then sleep
WITHOUT_CLASSIFICATION	Write the body
WITHOUT_CLASSIFICATION	Write the body
WITHOUT_CLASSIFICATION	Check that the request and response matches
WITHOUT_CLASSIFICATION	$sid$
WITHOUT_CLASSIFICATION	Arguments args = sampler.getArguments();
WITHOUT_CLASSIFICATION	No entry; check it is still present
WITHOUT_CLASSIFICATION	Test https works too
WITHOUT_CLASSIFICATION	These are some of the special characters
WITHOUT_CLASSIFICATION	Can't instantiate
WITHOUT_CLASSIFICATION	List of parsers to test. Should probably be derived automatically
WITHOUT_CLASSIFICATION	Dummy as the file has no entries
WITHOUT_CLASSIFICATION	Dummy as the file has no entries
WITHOUT_CLASSIFICATION	Relative filenames
WITHOUT_CLASSIFICATION	Identify subtests
WITHOUT_CLASSIFICATION	This is OK
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	A HTTP GET request, with encoding not known
WITHOUT_CLASSIFICATION	private TestData(String f, String b, String s) { this(f, b, s, null); }
WITHOUT_CLASSIFICATION	Does the order matter?
WITHOUT_CLASSIFICATION	Convert both to Sets
WITHOUT_CLASSIFICATION	Get expected results as a List
WITHOUT_CLASSIFICATION	A HTTP GET request
WITHOUT_CLASSIFICATION	Check arguments
WITHOUT_CLASSIFICATION	Check arguments
WITHOUT_CLASSIFICATION	A HTTP POST request
WITHOUT_CLASSIFICATION	A HTTP GET request, with encoding not known
WITHOUT_CLASSIFICATION	A HTTP POST request, with content-type text/plain
WITHOUT_CLASSIFICATION	A HTTP GET request, with UTF-8 encoding
WITHOUT_CLASSIFICATION	When the encoding is not known, the argument will get the encoded value, and the "encode?" set to false
WITHOUT_CLASSIFICATION	When the encoding is not known, the argument will get the encoded value, and the "encode?" set to false
WITHOUT_CLASSIFICATION	When the encoding is not known, the argument will get the encoded value, and the "encode?" set to false
WITHOUT_CLASSIFICATION	A HTTP POST request, with UTF-8 encoding
WITHOUT_CLASSIFICATION	A HTTP POST request, with unknown encoding
WITHOUT_CLASSIFICATION	A HTTP POST request, with UTF-8 encoding
WITHOUT_CLASSIFICATION	A HTTP GET request, with ISO-8859-1 encoding
WITHOUT_CLASSIFICATION	A HTTP GET request, with UTF-8 encoding
WITHOUT_CLASSIFICATION	A HTTP POST request, with encoding not known
WITHOUT_CLASSIFICATION	Check arguments We should have one argument, with the value equal to the post body
WITHOUT_CLASSIFICATION	A HTTP POST request, with content-type text/plain; charset=UTF-8 The encoding should be picked up from the header we send with the request
WITHOUT_CLASSIFICATION	A HTTP POST request, with content-type text/plain; charset=UTF-8 The encoding should be picked up from the header we send with the request
WITHOUT_CLASSIFICATION	Use null for url to simulate that HttpRequestHdr do not know the encoding for the page. Specify contentEncoding, so the request is "sent" using that encoding
WITHOUT_CLASSIFICATION	Use null for url to simulate that HttpRequestHdr do not know the encoding for the page. Specify contentEncoding, so the request is "sent" using that encoding
WITHOUT_CLASSIFICATION	Use null for url and contentEncoding, to simulate that HttpRequestHdr do not know the encoding for the page
WITHOUT_CLASSIFICATION	Use null for url and contentEncoding, to simulate that HttpRequestHdr do not know the encoding for the page
WITHOUT_CLASSIFICATION	A HTTP POST request, with ISO-8859-1 encoding
WITHOUT_CLASSIFICATION	A HTTP POST request, multipart/form-data, simple values,
WITHOUT_CLASSIFICATION	A HTTP POST request, multipart/form-data, simple values,
WITHOUT_CLASSIFICATION	no space after :
WITHOUT_CLASSIFICATION	spaces after :
WITHOUT_CLASSIFICATION	Assume there's at least one file
WITHOUT_CLASSIFICATION	Title multipart
WITHOUT_CLASSIFICATION	Description multipart
WITHOUT_CLASSIFICATION	File upload multipart
WITHOUT_CLASSIFICATION	Most browsers use ISO-8859-1 as default encoding, even if spec says UTF-8
WITHOUT_CLASSIFICATION	Most browsers use ISO-8859-1 as default encoding, even if spec says UTF-8
WITHOUT_CLASSIFICATION	No filters
WITHOUT_CLASSIFICATION	Empty filters
WITHOUT_CLASSIFICATION	Non empty filters
WITHOUT_CLASSIFICATION	Simple inclusion and exclusion filter
WITHOUT_CLASSIFICATION	Allow all but images
WITHOUT_CLASSIFICATION	throw new UnsupportedOperationException("For test purposes only");
WITHOUT_CLASSIFICATION	This must be the original (Java) HTTP sampler
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	A HTTP POST request, multipart/form-data, with value that will change if they are url encoded Values are similar to __VIEWSTATE parameter that .net uses
WITHOUT_CLASSIFICATION	Most browsers use ISO-8859-1 as default encoding, even if spec says UTF-8 TODO - charset?
WITHOUT_CLASSIFICATION	Create the test file content
WITHOUT_CLASSIFICATION	create a temporary file to make sure we always have a file to give to the PostWriter Whereever we are or Whatever the current path is.
WITHOUT_CLASSIFICATION	delete temporay file
WITHOUT_CLASSIFICATION	Test sending data with default encoding
WITHOUT_CLASSIFICATION	Test sending data with default encoding
WITHOUT_CLASSIFICATION	Test sending data with default encoding
WITHOUT_CLASSIFICATION	Test sending data as ISO-8859-1
WITHOUT_CLASSIFICATION	Test sending data as ISO-8859-1
WITHOUT_CLASSIFICATION	Test sending data as ISO-8859-1
WITHOUT_CLASSIFICATION	Test sending data as ISO-8859-1
WITHOUT_CLASSIFICATION	Test sending data as ISO-8859-1
WITHOUT_CLASSIFICATION	Test sending data as UTF-8
WITHOUT_CLASSIFICATION	Test sending data as UTF-8
WITHOUT_CLASSIFICATION	Test sending data as UTF-8
WITHOUT_CLASSIFICATION	Test sending data as UTF-8
WITHOUT_CLASSIFICATION	Test sending data as UTF-8
WITHOUT_CLASSIFICATION	Test sending UTF-8 data with ISO-8859-1 content encoding
WITHOUT_CLASSIFICATION	Test method for 'org.apache.jmeter.protocol.http.sampler.postWriter.sendPostData(URLConnection, HTTPSampler)' This method test sending a HTTPSampler with form parameters, and only the filename of a file.
WITHOUT_CLASSIFICATION	Test method for 'org.apache.jmeter.protocol.http.sampler.postWriter.sendPostData(URLConnection, HTTPSampler)' This method test sending file content as the only content of the post body
WITHOUT_CLASSIFICATION	Check using default encoding
WITHOUT_CLASSIFICATION	Check using a different encoding
WITHOUT_CLASSIFICATION	File content is sent as binary, so the content encoding should not change the file data
WITHOUT_CLASSIFICATION	If we have both file as body, and form data, then only form data will be sent
WITHOUT_CLASSIFICATION	Test method for 'org.apache.jmeter.protocol.http.sampler.postWriter.sendPostData(URLConnection, HTTPSampler)' This method test sending only a file multipart.
WITHOUT_CLASSIFICATION	Test method for 'org.apache.jmeter.protocol.http.sampler.postWriter.sendPostData(URLConnection, HTTPSampler)' This method test sending only a formdata, as a multipart/form-data request.
WITHOUT_CLASSIFICATION	Tell sampler to do multipart, even if we have no files to upload
WITHOUT_CLASSIFICATION	Test sending data as ISO-8859-1, with values that need to be urlencoded
WITHOUT_CLASSIFICATION	Test sending data as ISO-8859-1, with values that need to be urlencoded
WITHOUT_CLASSIFICATION	Test method for 'org.apache.jmeter.protocol.http.sampler.postWriter.sendPostData(URLConnection, HTTPSampler)' This method test sending only a formdata, as urlencoded data
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, with values that needs to be urlencoded
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	delete temporay file
WITHOUT_CLASSIFICATION	Test sending data as ISO-8859-1
WITHOUT_CLASSIFICATION	Test sending data as ISO-8859-1
WITHOUT_CLASSIFICATION	Test sending data as ISO-8859-1
WITHOUT_CLASSIFICATION	Test sending data as UTF-8
WITHOUT_CLASSIFICATION	Test sending data as UTF-8
WITHOUT_CLASSIFICATION	Check that other encoding is not the current encoding TODO - charset?
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, with values that would have been urlencoded if it was not sent as multipart
WITHOUT_CLASSIFICATION	Test sending parameters which are urlencoded beforehand The values must be URL encoded with UTF-8 encoding, because that is what the HTTPArgument assumes %C3%85 in UTF-8 is the same as %C5 in ISO-8859-1, which is the same as &Aring;
WITHOUT_CLASSIFICATION	HTTPSampler uses ISO-8859-1 as default encoding HTTPSampler uses ISO-8859-1 as default encoding
WITHOUT_CLASSIFICATION	Test method for 'org.apache.jmeter.protocol.http.sampler.postWriter.setHeaders(URLConnection, HTTPSampler)'
WITHOUT_CLASSIFICATION	Create the multiparts
WITHOUT_CLASSIFICATION	Join the two multiparts
WITHOUT_CLASSIFICATION	The encoding used for http headers and control information
WITHOUT_CLASSIFICATION	replace all backslash with double backslash
WITHOUT_CLASSIFICATION	Different from TestHTTPMirrorThread port and standard mirror server
WITHOUT_CLASSIFICATION	additional ctor for processing tests which use int parameters
WITHOUT_CLASSIFICATION	This is used to emulate @before class and @after class
WITHOUT_CLASSIFICATION	Add parameterised tests. For simplicity we assune each has cases 0-10
WITHOUT_CLASSIFICATION	Shutdown mirror server
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, with values that will change when urlencoded
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, with values that have been urlencoded
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, with values similar to __VIEWSTATE parameter that .net uses
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, with values similar to __VIEWSTATE parameter that .net uses
WITHOUT_CLASSIFICATION	Replace the variables in the sampler
WITHOUT_CLASSIFICATION	Replace the variables in the sampler
WITHOUT_CLASSIFICATION	ensure only values are used
WITHOUT_CLASSIFICATION	Test sending data with default encoding
WITHOUT_CLASSIFICATION	Test sending data as ISO-8859-1
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, with values that would have been urlencoded if it was not sent as multipart
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, with values that will change when urlencoded
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, with values that have been urlencoded
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, with values similar to __VIEWSTATE parameter that .net uses
WITHOUT_CLASSIFICATION	Replace the variables in the sampler
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, where user defined variables are used to set the value for form data
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, where user defined variables are used to set the value for form data
WITHOUT_CLASSIFICATION	Replace the variables in the sampler
WITHOUT_CLASSIFICATION	ensure only values are used
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, with values that have been urlencoded, and where we tell the sampler to urlencode the parameter values
WITHOUT_CLASSIFICATION	Test sending data with ISO-8859-1 encoding
WITHOUT_CLASSIFICATION	Test sending data with ISO-8859-1 encoding
WITHOUT_CLASSIFICATION	Test sending data with UTF-8 encoding
WITHOUT_CLASSIFICATION	Test sending data with UTF-8 encoding
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, with values that changes when urlencoded
WITHOUT_CLASSIFICATION	Check URL
WITHOUT_CLASSIFICATION	Check the request
WITHOUT_CLASSIFICATION	Check request headers
WITHOUT_CLASSIFICATION	Check post body from the result query string
WITHOUT_CLASSIFICATION	Find the data sent to the mirror server, which the mirror server is sending back to us
WITHOUT_CLASSIFICATION	Skip the blank line with crlf dividing headers and body
WITHOUT_CLASSIFICATION	Check response headers
WITHOUT_CLASSIFICATION	Check URL
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, with + as part of the value, where the value is set in sampler as not urluencoded, but the isalwaysencoded flag of the argument is set to false. This mimics the HTTPConstants.addNonEncodedArgument, which the Proxy server calls in some cases
WITHOUT_CLASSIFICATION	Test sending simple HTTP get Test sending data with default encoding
WITHOUT_CLASSIFICATION	Test sending simple HTTP get Test sending data with default encoding
WITHOUT_CLASSIFICATION	Check request headers
WITHOUT_CLASSIFICATION	Check post body from the result query string
WITHOUT_CLASSIFICATION	Find the data sent to the mirror server, which the mirror server is sending back to us
WITHOUT_CLASSIFICATION	Find the data sent to the mirror server, which the mirror server is sending back to us
WITHOUT_CLASSIFICATION	Skip the blank line with crlf dividing headers and body
WITHOUT_CLASSIFICATION	Check response headers
WITHOUT_CLASSIFICATION	Check response headers
WITHOUT_CLASSIFICATION	Check post body which was sent to the mirror server, and sent back by the mirror server
WITHOUT_CLASSIFICATION	Check method, path and query sent
WITHOUT_CLASSIFICATION	Check method, path and query sent
WITHOUT_CLASSIFICATION	Find the data sent to the mirror server, which the mirror server is sending back to us
WITHOUT_CLASSIFICATION	Skip the blank line with crlf dividing headers and body
WITHOUT_CLASSIFICATION	Skip the blank line with crlf dividing headers and body
WITHOUT_CLASSIFICATION	Check method, path and query sent
WITHOUT_CLASSIFICATION	Check method, path and query sent
WITHOUT_CLASSIFICATION	Check method
WITHOUT_CLASSIFICATION	Check method
WITHOUT_CLASSIFICATION	Check that the query string is empty
WITHOUT_CLASSIFICATION	No body should have been sent
WITHOUT_CLASSIFICATION	No body should have been sent
WITHOUT_CLASSIFICATION	Check the Request URI sent to the mirror server, and sent back by the mirror server
WITHOUT_CLASSIFICATION	We should have a query string part
WITHOUT_CLASSIFICATION	We should not have a query string part
WITHOUT_CLASSIFICATION	Check path
WITHOUT_CLASSIFICATION	Check query
WITHOUT_CLASSIFICATION	Is it only the parameter values which are encoded in the specified content encoding, the rest of the query is encoded in UTF-8 Therefore we compare the whole query using UTF-8
WITHOUT_CLASSIFICATION	Find the data sent to the mirror server, which the mirror server is sending back to us We assume the headers are in ISO_8859_1, and the body can be in any content encoding.
WITHOUT_CLASSIFICATION	Find the data sent to the mirror server, which the mirror server is sending back to us We assume the headers are in ISO_8859_1, and the body can be in any content encoding. Therefore we get the data sent in ISO_8859_1, to be able to determine the end of the header part, and then we just construct a byte array to hold the body part, not taking encoding of the body into consideration, because it can contain file data, which is sent as raw byte data
WITHOUT_CLASSIFICATION	No divider was found
WITHOUT_CLASSIFICATION	Set the form data
WITHOUT_CLASSIFICATION	TODO - charset?
WITHOUT_CLASSIFICATION	TODO - charset?
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Join the two multiparts
WITHOUT_CLASSIFICATION	The encoding used for http headers and control information
WITHOUT_CLASSIFICATION	replace all backslash with double backslash
WITHOUT_CLASSIFICATION	The value is in the first group, group 0 is the whole match
WITHOUT_CLASSIFICATION	The headers and body are divided by a blank line
WITHOUT_CLASSIFICATION	Header may contain ;charset= , regexp extracts it so computed boundary is wrong
WITHOUT_CLASSIFICATION	String domain = "localhost";
WITHOUT_CLASSIFICATION	Set the file upload data
WITHOUT_CLASSIFICATION	Parse arguments singly
WITHOUT_CLASSIFICATION	Parse arguments all at once
WITHOUT_CLASSIFICATION	test cases for making Url, and exercise method addArgument(String name,String value,String metadata)
WITHOUT_CLASSIFICATION	test cases for making Url, and exercise method parseArguments(String queryString)
WITHOUT_CLASSIFICATION	Ignore empty file specs
WITHOUT_CLASSIFICATION	Ignore trailing empty spec
WITHOUT_CLASSIFICATION	Ignore leading empty spec
WITHOUT_CLASSIFICATION	Show that can bypass encoding:
WITHOUT_CLASSIFICATION	The sample does not use a valid encoding
WITHOUT_CLASSIFICATION	by default, name/value are encoded on fetch
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Try a real encoded argument
WITHOUT_CLASSIFICATION	Trailing file
WITHOUT_CLASSIFICATION	Trailing directory
WITHOUT_CLASSIFICATION	file exclf inclf exclp inclp
WITHOUT_CLASSIFICATION	odd chars
WITHOUT_CLASSIFICATION	invalid
WITHOUT_CLASSIFICATION	'12345'
WITHOUT_CLASSIFICATION	Check illegal array lengths
WITHOUT_CLASSIFICATION	current default language properties file
WITHOUT_CLASSIFICATION	messages.properties
WITHOUT_CLASSIFICATION	Read resource into ResourceBundle and store in List
WITHOUT_CLASSIFICATION	Read resource file saving the keys
WITHOUT_CLASSIFICATION	Only relevant for messages
WITHOUT_CLASSIFICATION	Store the key
WITHOUT_CLASSIFICATION	Helper method to construct resource name
WITHOUT_CLASSIFICATION	check that there aren't any extra entries
WITHOUT_CLASSIFICATION	perform the checks on the resources
WITHOUT_CLASSIFICATION	holds keys from file
WITHOUT_CLASSIFICATION	Look for duplicate keys in the file
WITHOUT_CLASSIFICATION	Must be the default resource file
WITHOUT_CLASSIFICATION	Check all the keys are in the default props file
WITHOUT_CLASSIFICATION	Also Check key is in default
WITHOUT_CLASSIFICATION	Better error than NPE
WITHOUT_CLASSIFICATION	Fix up Windows paths
WITHOUT_CLASSIFICATION	Use a suite to ensure that the default is done first
WITHOUT_CLASSIFICATION	load the default resource
WITHOUT_CLASSIFICATION	Don't try to check the default language
WITHOUT_CLASSIFICATION	e.g. "/org/apache/jmeter/resources/messages"
WITHOUT_CLASSIFICATION	Check that calls to getResString use a valid property key name
WITHOUT_CLASSIFICATION	leading comment
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	\u00e7 = LATIN SMALL LETTER C WITH CEDILLA \u00e9 = LATIN SMALL LETTER E WITH ACUTE
WITHOUT_CLASSIFICATION	Change the original back again
WITHOUT_CLASSIFICATION	a and b should be equal
WITHOUT_CLASSIFICATION	a and b should not be equal
WITHOUT_CLASSIFICATION	Needs to be greater than the minimum to allow for boundary errors
WITHOUT_CLASSIFICATION	Needs to be greater than the minimum to allow for boundary errors
WITHOUT_CLASSIFICATION	Re-increment
WITHOUT_CLASSIFICATION	Re-increment
WITHOUT_CLASSIFICATION	N.B. This needs to divert the log for SampleResult
WITHOUT_CLASSIFICATION	temp test case for exploring settings
WITHOUT_CLASSIFICATION	Don't use nanoThread
WITHOUT_CLASSIFICATION	This test tries to emulate a http sample, with two subsamples, representing images that are downloaded for the page representing the first sample.
WITHOUT_CLASSIFICATION	Sample that will get two sub results, simulates a web page load
WITHOUT_CLASSIFICATION	Sample with no sub results, simulates an image download
WITHOUT_CLASSIFICATION	Sample with no sub results, simulates an image download
WITHOUT_CLASSIFICATION	Now add the subsamples to the sample
WITHOUT_CLASSIFICATION	TimeMillis has granularity of 10-20
WITHOUT_CLASSIFICATION	Check that calculator gets the correct statistics from the sample
WITHOUT_CLASSIFICATION	Allow for some margin of error Check that the throughput uses the time elapsed for the sub results
WITHOUT_CLASSIFICATION	check default
WITHOUT_CLASSIFICATION	check null changes nothing
WITHOUT_CLASSIFICATION	check no charset
WITHOUT_CLASSIFICATION	Check unquoted charset
WITHOUT_CLASSIFICATION	Check quoted charset
WITHOUT_CLASSIFICATION	This is what JOrphanUtils.split() does
WITHOUT_CLASSIFICATION	These tests should agree with those for JOrphanUtils.split() as far as possible
WITHOUT_CLASSIFICATION	\u00e7 = LATIN SMALL LETTER C WITH CEDILLA \u00e9 = LATIN SMALL LETTER E WITH ACUTE
WITHOUT_CLASSIFICATION	Blank line
WITHOUT_CLASSIFICATION	Empty strings at EOF
WITHOUT_CLASSIFICATION	testLoadAndSave test files
WITHOUT_CLASSIFICATION	GraphAccumVisualizer obsolete, BSFSamplerGui now a TestBean GraphAccumVisualizer obsolete, BSFSamplerGui now a TestBean GraphAccumVisualizer now obsolete CTT changed to use intProp for mode
WITHOUT_CLASSIFICATION	Test files for testLoad; output will generally be different in size and line count
WITHOUT_CLASSIFICATION	Did a test fail?
WITHOUT_CLASSIFICATION	Make sure all the data is flushed out
WITHOUT_CLASSIFICATION	Test non-empty parameters
WITHOUT_CLASSIFICATION	Unrecognised files are ignored
WITHOUT_CLASSIFICATION	Does not open file
WITHOUT_CLASSIFICATION	Does not open file
WITHOUT_CLASSIFICATION	Re-read 1st line
WITHOUT_CLASSIFICATION	Re-read 1st line
WITHOUT_CLASSIFICATION	should not be able to write to it ...
WITHOUT_CLASSIFICATION	does not remove the entry
WITHOUT_CLASSIFICATION	removes all entries
WITHOUT_CLASSIFICATION	test code, intentional
WITHOUT_CLASSIFICATION	Check "Undefined" does not become a "reserved word":
WITHOUT_CLASSIFICATION	errorDetected()
WITHOUT_CLASSIFICATION	errorDetected()
WITHOUT_CLASSIFICATION	Programming error. Don't continue.
WITHOUT_CLASSIFICATION	Check that all keys in the bundle are also in the default bundle:
WITHOUT_CLASSIFICATION	Will throw MissingResourceException if key is not there.
WITHOUT_CLASSIFICATION	Check that all necessary keys are there:
WITHOUT_CLASSIFICATION	displayName is always mandatory:
WITHOUT_CLASSIFICATION	Skip the rest of this test for alpha/experimental beans:
WITHOUT_CLASSIFICATION	Check for property- and group-related texts:
WITHOUT_CLASSIFICATION	Skip non-editable properties, that is: Ignore hidden, read-only, and write-only properties
WITHOUT_CLASSIFICATION	Ignore TestElement properties which don't have an explicit editor:
WITHOUT_CLASSIFICATION	Done -- we're working with an editable property.
WITHOUT_CLASSIFICATION	throw new Error("No default bundle for class " + className);
WITHOUT_CLASSIFICATION	String sampleLog = "C:/eclipse3/workspace/jmeter-21/bin/testfiles/sample_log1.jtl";
WITHOUT_CLASSIFICATION	String sampleLog = "C:/eclipse3/workspace/jmeter-21/bin/testfiles/sample_log1.jtl";
WITHOUT_CLASSIFICATION	tweak.
WITHOUT_CLASSIFICATION	tweak.
WITHOUT_CLASSIFICATION	Test needs to run in this package in order to give access to AbstractTestElement.addProperty()
WITHOUT_CLASSIFICATION	This test should work whether or not all Nulls are equal
WITHOUT_CLASSIFICATION	do not check hashcodes; unequal objects may have equal hashcodes
WITHOUT_CLASSIFICATION	Give access to the method for test code
WITHOUT_CLASSIFICATION	Give access to the method for test code
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	p.add(makeButtonPanel(), BorderLayout.SOUTH);
WITHOUT_CLASSIFICATION	Assume this thread only 1 per second Should delay for 1 second 1 per milli-second Should delay for 1 milli-second
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	10 per second Should delay for 1 second 10 per milli-second Should delay for 1 milli-second
WITHOUT_CLASSIFICATION	1000 per milli-second Should delay for 1 milli-second
WITHOUT_CLASSIFICATION	Not sure we can test anything else here
WITHOUT_CLASSIFICATION	Use old style
WITHOUT_CLASSIFICATION	probably needed to avoid NPEs with GUIs
WITHOUT_CLASSIFICATION	tree1.add("a3");
WITHOUT_CLASSIFICATION	No duplicates when adding
WITHOUT_CLASSIFICATION	add duplicates
WITHOUT_CLASSIFICATION	as above, but with aggregate sample instead
WITHOUT_CLASSIFICATION	add duplicates as per bug
WITHOUT_CLASSIFICATION	assertEquals("t2",f2.invoke());
WITHOUT_CLASSIFICATION	assertEquals("1a:aa.",f1a.invoke());
WITHOUT_CLASSIFICATION	can't call invoke using super class
WITHOUT_CLASSIFICATION	OK (currently) to invoke using sub-class
WITHOUT_CLASSIFICATION	Args will be provided later
WITHOUT_CLASSIFICATION	should use original object
WITHOUT_CLASSIFICATION	Check how Class definition behaves
WITHOUT_CLASSIFICATION	logprop("java.class.path");
WITHOUT_CLASSIFICATION	don't call isHeadless() here, as it has a side effect. --
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Send different event wether we are merging a test plan into another test plan, or loading a testplan from scratch
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Ignored
WITHOUT_CLASSIFICATION	Ignored
WITHOUT_CLASSIFICATION	private static final String ROOTDN = "rootDn"; private static final String TEST = "tesT"; private static String testValue="NNNN";
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Test ignore trailing split characters Ignore adjacent delimiters
WITHOUT_CLASSIFICATION	Tests for split(String,String,boolean)
WITHOUT_CLASSIFICATION	Test leading split characters
WITHOUT_CLASSIFICATION	Test leading split characters
WITHOUT_CLASSIFICATION	Empty string
WITHOUT_CLASSIFICATION	Tests for split(String,String,String)
WITHOUT_CLASSIFICATION	Empty default
WITHOUT_CLASSIFICATION	Empty delimiter
WITHOUT_CLASSIFICATION	Multiple delimiters
WITHOUT_CLASSIFICATION	Delimiter same as splitter
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Node node = tidy.parseDOM(new ByteArrayInputStream(response.getResponseData()), null);
WITHOUT_CLASSIFICATION	Values for TEST_FIELD N.B. we cannot change the text value as it is in test plans $NON-NLS-1$
WITHOUT_CLASSIFICATION	In case parse fails $NON-NLS-1$ In case parse fails $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ Make it easier to enter a Tab $NON-NLS-1$
WITHOUT_CLASSIFICATION	The Loop Controller panel can be displayed standalone or inside another panel. For standalone, we want to display the TITLE, NAME, etc. (everything). However, if we want to display it within another panel, we just display the Loop Count fields (not the TITLE and NAME).
WITHOUT_CLASSIFICATION	$NON-NLS-1$ don't set empty to keep regexp regexpField.setText(""); $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	This 'other value' regex is deliberately weak, even accepting an empty string, to be useful when reporting malformed data. $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Condition LABEL $NON-NLS-1$
WITHOUT_CLASSIFICATION	If the -j or -l flag is set to LAST or LAST.log|LAST.jtl, then the last loaded file name is used to generate the log file name by removing .JMX and replacing it with .log|.jtl
WITHOUT_CLASSIFICATION	If a table cell is being edited, we should accept the current value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ i.e. boolean saveXXX() $NON-NLS-1$ i.e. void setXXX(boolean) $NON-NLS-1$ e.g. save_XXX property
WITHOUT_CLASSIFICATION	Keep the '\' unless it is one of the escapable chars '$' ',' or '\' N.B. This method is used to parse function parameters, so must treat ',' as special
WITHOUT_CLASSIFICATION	en fr de $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ ja zh_CN zh_TW
WITHOUT_CLASSIFICATION	@GuardedBy("LOCK") Keep track of how many instances are active
WITHOUT_CLASSIFICATION	sampleOccurred is called from multiple threads; not safe to write from multiple threads. also decouples the file IO from sample generation
WITHOUT_CLASSIFICATION	File name sequence number @GuardedBy("LOCK")
WITHOUT_CLASSIFICATION	Instance fields are constructed by the client when the instance is create in the test plan and the field values are then transferred to the server copy by RMI serialisation/deserialisation
WITHOUT_CLASSIFICATION	process special keys $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	If there are some recent files, we must make the separator visisble The separator is the last item in the list
WITHOUT_CLASSIFICATION	put the gui object back to the way it was.
WITHOUT_CLASSIFICATION	Make sure decoding follows input file
WITHOUT_CLASSIFICATION	Save (Selection) As Save TestPlan As Save
WITHOUT_CLASSIFICATION	Y Y Y Y sp M M / D D / H H : M M : S S end
WITHOUT_CLASSIFICATION	OK TODO ??
WITHOUT_CLASSIFICATION	Support original property name $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	allow for windows / chars in filename $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	updateMainMenu(((JMeterGUIComponent) getCurrentNode().getUserObject()).createPopupMenu());
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	A HTTP POST request, multipart/form-data, simple values, with \r\n as end of line, which is according to spec, and with more headers in each multipart
WITHOUT_CLASSIFICATION	two jars same version two jars same version
WITHOUT_CLASSIFICATION	Test plan with OnlyOnceController inside inner loop Set up the test plan
WITHOUT_CLASSIFICATION	The following used to be jacks_password, but the Arguments class uses HashMap for which the order is not defined.
WITHOUT_CLASSIFICATION	myRow = f.nextRow(); assertEquals(3,myRow); assertEquals(0,f.getNextRow());
WITHOUT_CLASSIFICATION	Is this a work in progress ? No, not a work in progress ...
WITHOUT_CLASSIFICATION	Assumes some kind of list is use If not using a list that retains the order, then the asserts would need to change
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, with values that will change when urlencoded, and where we tell the sampler to urlencode the parameter value
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	pick up headers if failed to execute the request httpMethod can be null if method is unexpected
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Resource keys cannot contain spaces, and are forced to lower case $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Nulls cannot be written using PrettyPrintWriter - they cause an NPE $NON-NLS-1$
WITHOUT_CLASSIFICATION	default is 1 default is 0
WITHOUT_CLASSIFICATION	N.B. JVMs other than Sun may return different instances each time so we cache the value here (and avoid having to fetch it every time)
WITHOUT_CLASSIFICATION	Programming error. Don't continue.
WITHOUT_CLASSIFICATION	+ JMX attributes - do not change $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ - JMX
WITHOUT_CLASSIFICATION	Note: this is only used to implement TestIterationListener#testIterationStart Since this is a frequent event, it makes sense to create the list once rather than scanning each time The memory used will be released when the thread finishes
WITHOUT_CLASSIFICATION	We only check the length of the result. Comparing the actual result (out.toByteArray==original) will usually fail, because the order of the properties within each test element may change. Comparing the lengths should be enough to detect most problem cases...
WITHOUT_CLASSIFICATION	Assume this thread only 1 per second Initialise
WITHOUT_CLASSIFICATION	Test ignore trailing split characters Ignore adjacent delimiters
WITHOUT_CLASSIFICATION	write a OK reponse to browser, to engage SSL exchange $NON-NLS-1$
WITHOUT_CLASSIFICATION	We use the page encoding where the form resides, as the default encoding for the form
WITHOUT_CLASSIFICATION	+ action names $NON-NLS-1$
WITHOUT_CLASSIFICATION	Set up list of potential targets and enable listener
WITHOUT_CLASSIFICATION	.equals caused NPE
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	record headers size to allow HTTPSampleResult.getBytes() with different options $NON-NLS-1$ $NON-NLS-2$ add 2 for a '\r\n' at end of headers (before data)
WITHOUT_CLASSIFICATION	a well-bahaved browser is supposed to send 'Connection: close' with the last request to an HTTP server. Instead, most browsers leave it to the server to close the connection after their timeout period. Leave it to the JMeter user to decide.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	one space for blank header $NON-NLS-1$ one space for blank header $NON-NLS-1$
WITHOUT_CLASSIFICATION	a well-behaved browser is supposed to send 'Connection: close' with the last request to an HTTP server. Instead, most browsers leave it to the server to close the connection after their timeout period. Leave it to the JMeter user to decide.
WITHOUT_CLASSIFICATION	Process Apache HttpClient parameters file $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	In a post request which is not multipart, we only support parameters, no file upload is allowed
WITHOUT_CLASSIFICATION	Embedded URLs must match this RE (if provided) $NON-NLS-1$
WITHOUT_CLASSIFICATION	Mark Walsh 2002-08-03, modified to also parse a parameter name value string, where string contains only the parameter name and no equal sign.
WITHOUT_CLASSIFICATION	Check if the header manager had a content type header This allows the user to specify his own content-type for a PUT request
WITHOUT_CLASSIFICATION	If the Multipart is repeatable, we can send it first to our own stream, without the actual file content, so we can return it
WITHOUT_CLASSIFICATION	headerManager was set, so let's set the connection to use it.
WITHOUT_CLASSIFICATION	we call parse with 1 to get only one. this also means if we change the implementation to use 2, it would use every other entry and so on. Not that it is really useful, but a person could use it that way if they have a huge gigabyte log file and they only want to use a quarter of the entries.
WITHOUT_CLASSIFICATION	the document should only have one service node if it doesn't it may not work!
WITHOUT_CLASSIFICATION	new WSDLHelper("http:localhost/WSTest/WSTest.asmx?WSDL"); new WSDLHelper("http:localhost/AxisWSDL.xml"); new WSDLHelper("http:localhost:8080/WSMyUpper.wsdl"); new WSDLHelper("http:localhost:8080/test.wsdl");
WITHOUT_CLASSIFICATION	read one line at a time using BufferedReader
WITHOUT_CLASSIFICATION	There's little point saving the manager between invocations as we need to reset most of the beans anyway
WITHOUT_CLASSIFICATION	/ Only do the calculation if it is needed
WITHOUT_CLASSIFICATION	A CallableStatement can return more than 1 ResultSets plus a number of update counts.
WITHOUT_CLASSIFICATION	++ Do not change these strings; they are used in JMX files to record the button settings $NON-NLS-1$
WITHOUT_CLASSIFICATION	Timeouts not active How much left
WITHOUT_CLASSIFICATION	needs to be accessible from test code Only contains LDAPArgument entries
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	The default is false, so we can remove the property to simplify JMX files This also allows HTTPDefaults to work for this checkbox
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	++ For TestBean implementations only passed to file or script
WITHOUT_CLASSIFICATION	put a warning if tika-app.jar missing (or some dependencies in only tika-core|parsers packages are using) $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Resource keys cannot contain spaces, and are forced to lower case $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Can occur at run-time could be caused by the bsh Exceptions: EvalError, ParseException or TargetError
WITHOUT_CLASSIFICATION	errorLogging and successOnlyLogging are mutually exclusive $NON-NLS-1$
WITHOUT_CLASSIFICATION	A TestBean is a Java Bean. Just define some properties and they will automagically show up in the GUI. A String property:
WITHOUT_CLASSIFICATION	Only try to format if there is a number
WITHOUT_CLASSIFICATION	Requires Java 7 $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$ don't match the empty category
WITHOUT_CLASSIFICATION	If a table cell is being edited, we should accept the current value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	Read the header part, we will be looking for a content-length header, so we know how much we should read. We assume headers are in ISO_8859_1 If we do not find such a header, we will just have to read until we have to block to read more, until we support chunked transfer
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Request validation $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ No point trying these
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	+ JMX file attributes $NON-NLS-1$
WITHOUT_CLASSIFICATION	this is not the result of a redirect so break the chain
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	+ JMX attributes - do not change the values $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Did sample succeed?
WITHOUT_CLASSIFICATION	Requires JavaMail 1.4.2+
WITHOUT_CLASSIFICATION	Requires JavaMail 1.4.2+
WITHOUT_CLASSIFICATION	Requires JavaMail 1.4.2+
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	No need to log normally, as we set the status $NON-NLS-1$
WITHOUT_CLASSIFICATION	No need to log normally, as we set the status $NON-NLS-1$
WITHOUT_CLASSIFICATION	not been set by any child samples
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	throws ME
WITHOUT_CLASSIFICATION	throws ME
WITHOUT_CLASSIFICATION	tfMailFrom.setEnabled(false); tfMailTo.setEnabled(false); tfMailToCC.setEnabled(false); tfMailToBCC.setEnabled(false); tfSubject.setEnabled(false);
WITHOUT_CLASSIFICATION	++JMX attribute names - do not change the values! These were moved from SMTPSampler, which is why the prefix is still SMTSampler $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ --JMX attribute names
WITHOUT_CLASSIFICATION	For completeness
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ default is not in range of a byte
WITHOUT_CLASSIFICATION	Programming error: bail out.
WITHOUT_CLASSIFICATION	If we are disabling the Edit-->Remove menu item and the Edit-->Add menu item is disabled, then we also need to disable the Edit menu. The Java Look and Feel Guidelines say to disable a menu if all menu items are disabled.
WITHOUT_CLASSIFICATION	Set default SAVE menu item to disabled since the default node that is selected is ROOT, which does not allow items to be inserted.
WITHOUT_CLASSIFICATION	we add the entry
WITHOUT_CLASSIFICATION	we should make this configurable eventually
WITHOUT_CLASSIFICATION	we clean up the ResultCollector to make sure there's no slow leaks
WITHOUT_CLASSIFICATION	just like the aggregate listener, we use the sample label to represent a row. in this case, we use it as a key.
WITHOUT_CLASSIFICATION	Check that optional args work woth long options
WITHOUT_CLASSIFICATION	Separate argument
WITHOUT_CLASSIFICATION	assume default charset is OK here <apache-bsf.version>2.4.0</apache-bsf.version>
WITHOUT_CLASSIFICATION	Used to be 'dábale', but caused trouble on Gump. Reasons unknown.
WITHOUT_CLASSIFICATION	This would be done by the run command
WITHOUT_CLASSIFICATION	result.setResponseData - not set
WITHOUT_CLASSIFICATION	Expected results established using the DDA algorithm (see http:www.siggraph.org/education/materials/HyperGraph/scanline/outprims/drawline.htm): 0/1 vs. 1/1 -> 0 is closer to 33.33 0/2 vs. 1/2 -> 50.0 is closer to 33.33 1/3 vs. 2/3 -> 33.33 is closer to 33.33 1/4 vs. 2/4 -> 25.0 is closer to 33.33 1/5 vs. 2/5 -> 40.0 is closer to 33.33 2/6 vs. 3/6 -> 33.33 is closer to 33.33
WITHOUT_CLASSIFICATION	GenericController controller = new GenericController(); GenericController sub_1 = new GenericController(); sub_1.addTestElement(new IfController("10<100")); sub_1.addTestElement(new IfController("true==false")); controller.addTestElement(sub_1); controller.addTestElement(new IfController("false==false")); IfController sub_2 = new IfController(); sub_2.setCondition( "10<10000"); GenericController sub_3 = new GenericController(); sub_2.addTestElement(new IfController( " \"a\".equals(\"a\")" ) ); sub_3.addTestElement(new IfController("2>100")); sub_3.addTestElement(new IfController("false==true")); sub_2.addTestElement(sub_3); sub_2.addTestElement(new IfController("2==3")); controller.addTestElement(sub_2);
WITHOUT_CLASSIFICATION	Get next sample and its name
WITHOUT_CLASSIFICATION	Match by name
WITHOUT_CLASSIFICATION	Match by name
WITHOUT_CLASSIFICATION	Simple test with single Selection controller Generic Controller + Sampler "before" + Switch Controller + + Sampler "zero" + + Sampler "one" + + Sampler "two" + + Sampler "three" + Sampler "after"
WITHOUT_CLASSIFICATION	Generic Controller - before - While Controller ${VAR} - - one - - two - - Simple Controller - - - three - - - four - after
WITHOUT_CLASSIFICATION	OnlyOnce samples
WITHOUT_CLASSIFICATION	OnlyOnce samples
WITHOUT_CLASSIFICATION	Outer sample
WITHOUT_CLASSIFICATION	Sample in inner loop
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	The outer sample and the inner loop samples
WITHOUT_CLASSIFICATION	OnlyOnce inside inner loop
WITHOUT_CLASSIFICATION	Test to show current problem with InterleaveController I am not sure if the expected order of the samples below are correct, because I am not sure if it is properly defined how the InterleaveController and OnlyOnceController should function.
WITHOUT_CLASSIFICATION	N.B. Backslashes are removed before dollar, comma and backslash
WITHOUT_CLASSIFICATION	log.debug("domain property = " + element.getProperty("domain"));
WITHOUT_CLASSIFICATION	Check old values don't hang around: fewer matches
WITHOUT_CLASSIFICATION	same as Parent
WITHOUT_CLASSIFICATION	Create the CSVRead function and set its parameters.
WITHOUT_CLASSIFICATION	Check init file functioning
WITHOUT_CLASSIFICATION	Restarts
WITHOUT_CLASSIFICATION	col 1, line 1, A
WITHOUT_CLASSIFICATION	col2, line 1, B
WITHOUT_CLASSIFICATION	Check blank lines are treated as EOF
WITHOUT_CLASSIFICATION	myRow = f.nextRow(); assertEquals(0,myRow); assertEquals(1,f.getNextRow());
WITHOUT_CLASSIFICATION	Use different XPath for both threads
WITHOUT_CLASSIFICATION	wrap-round check
WITHOUT_CLASSIFICATION	Perform a sum and check the results
WITHOUT_CLASSIFICATION	template match number ALL separator
WITHOUT_CLASSIFICATION	template match number ALL separator
WITHOUT_CLASSIFICATION	template match number ALL separator
WITHOUT_CLASSIFICATION	template match number ALL separator
WITHOUT_CLASSIFICATION	template match number ALL separator
WITHOUT_CLASSIFICATION	template match number ALL separator
WITHOUT_CLASSIFICATION	template match number ALL separator
WITHOUT_CLASSIFICATION	template match number ALL separator
WITHOUT_CLASSIFICATION	template match number ALL separator
WITHOUT_CLASSIFICATION	Extract titles from component_reference.xml
WITHOUT_CLASSIFICATION	Test GUI elements - create the suite of tests
WITHOUT_CLASSIFICATION	Skip report packages as implementation is incomplete Skip report GUI as implementation is incomplete No, not a work in progress ...
WITHOUT_CLASSIFICATION	Test TestElements - create the suite
WITHOUT_CLASSIFICATION	Events often have this constructor
WITHOUT_CLASSIFICATION	no luck. Ignore this class
WITHOUT_CLASSIFICATION	If not running under AllTests.java, make sure that the properties (and log file) are set up correctly. N.B. In order for this to work correctly, the JUnit test must be started in the bin directory, and all the JMeter jars (plus any others needed at run-time) need to be on the classpath.
WITHOUT_CLASSIFICATION	Display actual encoding used (will differ if file.encoding is not recognised)
WITHOUT_CLASSIFICATION	Test New cookie is returned
WITHOUT_CLASSIFICATION	ensure policy is picked up
WITHOUT_CLASSIFICATION	ensure policy is picked up
WITHOUT_CLASSIFICATION	Write to the socket
WITHOUT_CLASSIFICATION	Write to the socket
WITHOUT_CLASSIFICATION	Write to the socket
WITHOUT_CLASSIFICATION	Headers
WITHOUT_CLASSIFICATION	Read the response
WITHOUT_CLASSIFICATION	Read the response
WITHOUT_CLASSIFICATION	Close the connection
WITHOUT_CLASSIFICATION	The content sent
WITHOUT_CLASSIFICATION	Write the headers, and then sleep
WITHOUT_CLASSIFICATION	Connect to the http server, and do a simple http post with utf-8 encoding of the body, which caused problems when reader/writer classes were used in the HttpMirrorThread
WITHOUT_CLASSIFICATION	The response includes the headers from the mirror server, we want to skip those, to only keep the content mirrored. Look for the first CRLFCRLF section
WITHOUT_CLASSIFICATION	Can't instantiate
WITHOUT_CLASSIFICATION	Test if can instantiate parser using property name
WITHOUT_CLASSIFICATION	Check arguments
WITHOUT_CLASSIFICATION	Check arguments
WITHOUT_CLASSIFICATION	Check arguments
WITHOUT_CLASSIFICATION	Check arguments
WITHOUT_CLASSIFICATION	Check arguments
WITHOUT_CLASSIFICATION	Check arguments
WITHOUT_CLASSIFICATION	Check arguments
WITHOUT_CLASSIFICATION	Check arguments
WITHOUT_CLASSIFICATION	Check arguments
WITHOUT_CLASSIFICATION	Check arguments
WITHOUT_CLASSIFICATION	Check arguments
WITHOUT_CLASSIFICATION	Check arguments
WITHOUT_CLASSIFICATION	Check arguments
WITHOUT_CLASSIFICATION	Check arguments
WITHOUT_CLASSIFICATION	Check arguments
WITHOUT_CLASSIFICATION	Check arguments We should have one argument, with the value equal to the post body
WITHOUT_CLASSIFICATION	Use null for url and contentEncoding, to simulate that HttpRequestHdr do not know the encoding for the page
WITHOUT_CLASSIFICATION	Use null for url and contentEncoding, to simulate that HttpRequestHdr do not know the encoding for the page
WITHOUT_CLASSIFICATION	When the encoding is not known, the argument will get the encoded value, and the "encode?" set to false
WITHOUT_CLASSIFICATION	A HTTP POST request, multipart/form-data, simple values, with \n as end of line, which should also be handled, and with more headers in each multipart
WITHOUT_CLASSIFICATION	Create the test file content
WITHOUT_CLASSIFICATION	create a temporary file to make sure we always have a file to give to the PostWriter Whereever we are or Whatever the current path is.
WITHOUT_CLASSIFICATION	Test method for 'org.apache.jmeter.protocol.http.sampler.postWriter.sendPostData(URLConnection, HTTPSampler)' This method test sending a request which contains both formdata and file content
WITHOUT_CLASSIFICATION	Test sending data with default encoding
WITHOUT_CLASSIFICATION	Test sending data with default encoding
WITHOUT_CLASSIFICATION	Test sending data with default encoding
WITHOUT_CLASSIFICATION	Test sending data with default encoding
WITHOUT_CLASSIFICATION	Test sending data with default encoding
WITHOUT_CLASSIFICATION	Test sending data with default encoding
WITHOUT_CLASSIFICATION	Test sending data as ISO-8859-1
WITHOUT_CLASSIFICATION	Test sending data as UTF-8
WITHOUT_CLASSIFICATION	Test sending data as UTF-8
WITHOUT_CLASSIFICATION	Test method for 'org.apache.jmeter.protocol.http.sampler.postWriter.setHeaders(URLConnection, HTTPSampler)'
WITHOUT_CLASSIFICATION	Create the multiparts
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, with values that have been urlencoded
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, with values that have been urlencoded
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, with values similar to __VIEWSTATE parameter that .net uses, with values urlencoded, but the always encode set to false for the arguments This is how the HTTP Proxy server adds arguments to the sampler
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, where user defined variables are used to set the value for form data
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, where user defined variables are used to set the value for form data
WITHOUT_CLASSIFICATION	Check URL
WITHOUT_CLASSIFICATION	Check URL
WITHOUT_CLASSIFICATION	Check URL
WITHOUT_CLASSIFICATION	Check URL
WITHOUT_CLASSIFICATION	Check request headers
WITHOUT_CLASSIFICATION	Find the data sent to the mirror server, which the mirror server is sending back to us
WITHOUT_CLASSIFICATION	Check post body which was sent to the mirror server, and sent back by the mirror server
WITHOUT_CLASSIFICATION	Check post body which was sent to the mirror server, and sent back by the mirror server
WITHOUT_CLASSIFICATION	Check method, path and query sent
WITHOUT_CLASSIFICATION	Cannot check the query string of the result, because the mirror server replies without including query string in URL
WITHOUT_CLASSIFICATION	Show that can bypass encoding:
WITHOUT_CLASSIFICATION	set the required variables
WITHOUT_CLASSIFICATION	test invalid byte arrays
WITHOUT_CLASSIFICATION	Ensure properties files don't use special characters
WITHOUT_CLASSIFICATION	Now check for invalid message format: if string contains {0} and ' there may be a problem, so do a format with dummy parameters and check if there is a { in the output. A bit crude, but should be enough for now.
WITHOUT_CLASSIFICATION	Original and clone should be equal
WITHOUT_CLASSIFICATION	Change the original
WITHOUT_CLASSIFICATION	Check sample increments OK
WITHOUT_CLASSIFICATION	Check sample increments OK
WITHOUT_CLASSIFICATION	Check sample increments OK
WITHOUT_CLASSIFICATION	Check sample increments OK
WITHOUT_CLASSIFICATION	Parent elapsed total should be no smaller than the sum of the individual samples. It may be greater by the timer granularity.
WITHOUT_CLASSIFICATION	Test files for testLoadAndSave; output will generally be different in size but same number of lines
WITHOUT_CLASSIFICATION	Note this test will fail if a property is added or removed to any of the components used in the test files. The way to solve this is to appropriately change the test file.
WITHOUT_CLASSIFICATION	test code, intentional
WITHOUT_CLASSIFICATION	test code, intentional
WITHOUT_CLASSIFICATION	test code, intentional
WITHOUT_CLASSIFICATION	p.add(makeMainPanel(), BorderLayout.CENTER); Force a minimum table height of 70 pixels
WITHOUT_CLASSIFICATION	Check reflexive
WITHOUT_CLASSIFICATION	This is not a requirement
WITHOUT_CLASSIFICATION	This is not a requirement
WITHOUT_CLASSIFICATION	assertEquals("t1",f1.invoke());
WITHOUT_CLASSIFICATION	assertEquals("1a:aa.",f1.invoke()); N.B. returns different result from before
WITHOUT_CLASSIFICATION	++ GUI tests throw the error testArgumentCreation(org.apache.jmeter.config.gui.ArgumentsPanel$Test)java.lang.NoClassDefFoundError at java.lang.Class.forName0(Native Method) at java.lang.Class.forName(Class.java:141) at java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment(GraphicsEnvironment.java:62) Try to find out why this is ...
WITHOUT_CLASSIFICATION	Externally callable suite() method for use by JUnit Allows tests to be run directly under JUnit, rather than using the startup code in the rest of the module. No parameters can be passed in, so it is less flexible.
WITHOUT_CLASSIFICATION	TestSuite only finds testXXX() methods, and does not look for suite() methods. To provide more compatibilty with stand-alone tests, where JUnit does look for a suite() method, check for it first here.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ modal dialog box
WITHOUT_CLASSIFICATION	$NON-NLS-1$ return unknown action names for display error msg
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Set up some objects for the script to play with $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ Previously mis-spelt as theadName $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	for omitted file names $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	desc.add("Use fully qualified host name: TRUE/FALSE (Default FALSE)"); $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Names of JUnit3 methods $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Leave header as is headerBuf.append(conn.getHeaderField(0).substring(0, 8)); headerBuf.append(" "); headerBuf.append(conn.getResponseCode()); headerBuf.append(" "); headerBuf.append(conn.getResponseMessage()); $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Otherwise, the response is scanned for these strings $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Allow access to context and variables directly $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	can be specified in jmeter.properties $NON-NLS-1$
WITHOUT_CLASSIFICATION	These names must agree case-wise with the variable and property names $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	can be specified in jmeter.properties $NON-NLS-1$
WITHOUT_CLASSIFICATION	Add variables for access to context and variables $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Identifiers $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ default: normal
WITHOUT_CLASSIFICATION	$NON-NLS-1$ Test can't have a duration more than 2^31 secs (cast from long to int)
WITHOUT_CLASSIFICATION	default: sans serif $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	default: normal $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	default: sans serif $NON-NLS-1$
WITHOUT_CLASSIFICATION	default: 16 $NON-NLS-1$
WITHOUT_CLASSIFICATION	default: sans serif $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Change Cancel label to Close $NON-NLS-1$
WITHOUT_CLASSIFICATION	Default for writing$NON-NLS-1$
WITHOUT_CLASSIFICATION	Only encode strings if outVersion = 1.0 $NON-NLS-1$
WITHOUT_CLASSIFICATION	Element tags. Must be unique. Keep sorted. $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	+ JMX field names - do not change values $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	regex $NON-NLS-1$ template $NON-NLS-1$ which match $NON-NLS-1$ between text $NON-NLS-1$ default text $NON-NLS-1$ output variable name $NON-NLS-1$ input variable $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ Previously mis-spelt as theadName $NON-NLS-1$ $NON-NLS-1$ (may be null) $NON-NLS-1$ (may be null) $NON-NLS-1$
WITHOUT_CLASSIFICATION	Function name $NON-NLS-1$
WITHOUT_CLASSIFICATION	Process __CSVRead(filename,ALIAS) $NON-NLS-1$
WITHOUT_CLASSIFICATION	if argument is 'next' - go to the next line $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ We have a default
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ Previously mis-spelt as theadName $NON-NLS-1$ $NON-NLS-1$ (may be null) $NON-NLS-1$ (may be null) $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Ensure that these are set, even if no paramters are provided $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ change the classname drop down
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Don't make these static, otherwise language change does not work $NON-NLS-1$
WITHOUT_CLASSIFICATION	NOTUSED Font plainText = new Font("plain", Font.PLAIN, 9); These must not be static, otherwise Language change does not work $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ Check if it is form data $NON-NLS-1$ Get the form field name $NON-NLS-1$
WITHOUT_CLASSIFICATION	Check if it is a file being uploaded $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ See TestElementPropertyConverter
WITHOUT_CLASSIFICATION	Look for special Response Length header $NON-NLS-1$
WITHOUT_CLASSIFICATION	Look for special Response Length header $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Look for special Cookie request $NON-NLS-1$
WITHOUT_CLASSIFICATION	Check if we have found a content-length header $NON-NLS-1$
WITHOUT_CLASSIFICATION	Look for special Sleep request $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ resource name
WITHOUT_CLASSIFICATION	$NON-NLS-1$ resource name
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$$NON-NLS-2$
WITHOUT_CLASSIFICATION	Cookie $NON-NLS-1$
WITHOUT_CLASSIFICATION	list of parsers $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$$NON-NLS-2$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Obtain message formats: $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	independent frame to allow it to be overlaid by the main frame $NON-NLS-1$
WITHOUT_CLASSIFICATION	Needed by AbstractTestElement. Also TestElementConverter and TestElementPropertyConverter for handling empty comments $NON-NLS-1$ N.B. Comments originally only applied to Test Plans, hence the name - which can now not be easily changed
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	value to return at EOF $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Add variables for access to context and variables $NON-NLS-1$
WITHOUT_CLASSIFICATION	default: 16 $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	default: 3.0f $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ default: bottom $NON-NLS-1$
WITHOUT_CLASSIFICATION	default: sans serif $NON-NLS-1$
WITHOUT_CLASSIFICATION	default: 10 $NON-NLS-1$
WITHOUT_CLASSIFICATION	Tabbed results: fill table $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Set the title for the first tab $NON-NLS-1$ Add the other tabs if not present $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Fields table $NON-NLS-1$ not sure needs I18N? $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ select last tab
WITHOUT_CLASSIFICATION	setup bottom tabs, first Raw, second Parsed $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	can be specified in jmeter.properties $NON-NLS-1$
WITHOUT_CLASSIFICATION	should header be saved with the data? $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Label count Mean median 90% Min Max Error %age $NON-NLS-1$ Throughput $NON-NLS-1$ pageSize $NON-NLS-1$
WITHOUT_CLASSIFICATION	default: 10 $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ default: bottom $NON-NLS-1$
WITHOUT_CLASSIFICATION	default: sans serif $NON-NLS-1$
WITHOUT_CLASSIFICATION	default: 10 $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Add local system properties, if the file is found $NON-NLS-1$
WITHOUT_CLASSIFICATION	Add local JMeter properties, if the file is found $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1
WITHOUT_CLASSIFICATION	$NON-NLS-1$;
WITHOUT_CLASSIFICATION	$NON-NLS-1$;
WITHOUT_CLASSIFICATION	Hide Window on ESC $NON-NLS-1$
WITHOUT_CLASSIFICATION	Do search on Enter $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ file_merge.setAccelerator( KeyStroke.getKeyStroke(KeyEvent.VK_O, KeyEvent.CTRL_MASK)); Set default SAVE menu item to disabled since the default node that is selected is ROOT, which does not allow items to be inserted.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ Set default SAVE menu item to disabled since the default node that is selected is ROOT, which does not allow items to be inserted.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Search MENU $NON-NLS-1$
WITHOUT_CLASSIFICATION	No, must be CSV $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ (Flash Media Manifest)
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Attributes for TestElement and TestElementProperty Must all be unique $NON-NLS-1$ Also used by PropertyConverter classes $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	NOT USED protected static final String TAG_URL = "requestUrl"; $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	samplerData attributes. Must be unique. Keep sorted by string value. Ensure the Listener documentation is updated when new attributes are added $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	N.B. Originally the response code was saved with the code "rs" but retrieved with the code "rc". Changed to always use "rc", but allow for "rs" when restoring values. $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Needs to be visible to test cases $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ Add variables for access to context and variables
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ Ensure variable has been provided
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	otherwise we use "text/xml" as the default $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Could time this res.sampleEnd(); if sampleEnd() is not called, elapsed time will remain zero TODO distinguish errors better $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ - all threads All threads
WITHOUT_CLASSIFICATION	$NON-NLS-1$ -- End of names used in JMX files
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Package access for use by Test code $NON-NLS-1$
WITHOUT_CLASSIFICATION	Set the title for the first tab $NON-NLS-1$ Remove the other tabs if present $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	public final static String CONNECTION = "MongoSourceElement.connection"; $NON-NLS-1$ public final static String SOURCE = "MongoSourceElement.source"; $NON-NLS-1$ public final static String AUTO_CONNECT_RETRY = "MongoSourceElement.autoConnectRetry"; $NON-NLS-1$ public final static String CONNECTIONS_PER_HOST = "MongoSourceElement.connectionsPerHost"; $NON-NLS-1$ public final static String CONNECT_TIMEOUT = "MongoSourceElement.connectTimeout"; $NON-NLS-1$ public final static String CONTINUE_ON_INSERT_ERROR = "MongoSourceElement.continueOnInsertError"; $NON-NLS-1$ public final static String MAX_AUTO_CONNECT_RETRY_TIME = "MongoSourceElement.maxAutoConnectRetryTime"; $NON-NLS-1$ public final static String MAX_WAIT_TIME = "MongoSourceElement.maxWaitTime"; $NON-NLS-1$ public final static String SOCKET_TIMEOUT = "MongoSourceElement.socketTimeout"; $NON-NLS-1$ public final static String SOCKET_KEEP_ALIVE = "MongoSourceElement.socketKeepAlive"; $NON-NLS-1$ public final static String THREADS_ALLOWED_TO_BLOCK_MULTIPLIER = "MongoSourceElement.threadsAllowedToBlockForConnectionMultiplier"; $NON-NLS-1$ public final static String FSYNC = "MongoSourceElement.fsync"; $NON-NLS-1$ public final static String SAFE = "MongoSourceElement.safe"; $NON-NLS-1$ public final static String WAIT_FOR_JOURNALING = "MongoSourceElement.waitForJournaling"; $NON-NLS-1$ public final static String WRITE_OPERATION_NUMBER_OF_SERVERS = "MongoSourceElement.writeOperationNumberOfServers"; $NON-NLS-1$ public final static String WRITE_OPERATION_TIMEOUT = "MongoSourceElement.writeOperationTimeout"; $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.http.conn.ssl.SSLSocketFactory#createLayeredSocket(java.net.Socket, java.lang.String, int, boolean)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.protocol.http.util.accesslog.LogFilter#excPattern(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) A new instance is created for each thread group, and the clone() method is then called to create copies for each thread in a thread group. This means that the lock object is common to a thread group; separate thread groups have separate locks. If this is not intended, the lock object could be made static. @see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.visualizers.request.RequestView#setSamplerResult(java.lang.Object)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.visualizers.request.RequestView#getPanel()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.visualizers.request.RequestView#getLabel()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.visualizers.SamplerResultTab#clearData()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.log.LogTarget#processEvent(org.apache.log.LogEvent)
WITHOUT_CLASSIFICATION	This is required so that @see org.apache.jmeter.gui.tree.JMeterTreeModel.getNodesOfType() can find the Clearable nodes - the userObject has to implement the interface.
WITHOUT_CLASSIFICATION	N.B. originally called clear() @see also JMeterGUIComponent
WITHOUT_CLASSIFICATION	For unit tests, @see TestCSVSaveService
WITHOUT_CLASSIFICATION	@see getStaticLabel
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.JTabbedPane#setSelectedIndex(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see jodd.lagarto.EmptyTagVisitor#script(jodd.lagarto.Tag, java.lang.CharSequence)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see jodd.lagarto.EmptyTagVisitor#tag(jodd.lagarto.Tag)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.protocol.http.parser.HTMLParser#isReusable()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.protocol.http.parser.HTMLParser#isReusable()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.xml.sax.helpers.DefaultHandler#error(org.xml.sax.SAXParseException)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.xml.sax.helpers.DefaultHandler#fatalError(org.xml.sax.SAXParseException)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase#testEnded()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase#testEnded(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase#testIterationStart(org.apache.jmeter.engine.event.LoopIterationEvent)
WITHOUT_CLASSIFICATION	@see mergeFileProperties Must be private, as the file list needs special handling $NON-NLS-1$ MIMETYPE is kept for backward compatibility with old test plans $NON-NLS-1$ FILE_NAME is kept for backward compatibility with old test plans $NON-NLS-1$
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.http.conn.ssl.SSLSocketFactory#createSocket(org.apache.http.params.HttpParams)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.visualizers.request.RequestView#setSamplerResult(java.lang.Object)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.visualizers.request.RequestView#getLabel()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.gui.AbstractJMeterGuiComponent#clearGui()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.util.LocaleChangeListener#localeChanged(org.apache.jmeter.util.LocaleChangeEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.report.engine.ReportEngine#configure(org.apache.jorphan.collections.HashTree)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.report.engine.ReportEngine#runReport()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.report.engine.ReportEngine#stopReport()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.report.engine.ReportEngine#reset()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.report.engine.ReportEngine#exit()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.gui.JMeterGUIComponent#getLabelResource()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.gui.JMeterGUIComponent#createPopupMenu()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.gui.JMeterGUIComponent#getMenuCategories()
WITHOUT_CLASSIFICATION	@see org.apache.jmeter.report.gui.action.Command#getActionNames()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.report.writers.PageSummary#getFileName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.report.writers.PageSummary#getPageTitle()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.report.writers.PageSummary#isSuccessful()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.report.writers.PageSummary#pageStarted()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.report.writers.PageSummary#pageEnded()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.report.writers.PageSummary#setFileName(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.report.writers.PageSummary#setPageTitle(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.report.writers.PageSummary#setSuccessful(boolean)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.gui.JMeterGUIComponent#createTestElement()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.gui.JMeterGUIComponent#modifyTestElement(org.apache.jmeter.testelement.TestElement)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.testelement.TestStateListener#testEnded()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.testelement.TestStateListener#testEnded(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.testelement.TestStateListener#testStarted()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.testelement.TestStateListener#testStarted(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase#testIterationStart(org.apache.jmeter.engine.event.LoopIterationEvent)
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ so we can add them again in init
WITHOUT_CLASSIFICATION	independent frame to allow it to be overlaid by the main frame $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$;
WITHOUT_CLASSIFICATION	$NON-NLS-1$$NON-NLS-2$
WITHOUT_CLASSIFICATION	RUN MENU $NON-NLS-1$
WITHOUT_CLASSIFICATION	EDIT MENU $NON-NLS-1$
WITHOUT_CLASSIFICATION	FILE MENU $NON-NLS-1$
WITHOUT_CLASSIFICATION	protected fields: JMeterToolBar class can be use to create another toolbar (plugin, etc.) $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	reuse documentation $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ resource name
WITHOUT_CLASSIFICATION	$NON-NLS-1$ resource name
WITHOUT_CLASSIFICATION	$NON-NLS-1$ resource name
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	The following are used to set the Result details on return from the script: $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Add SamplerData for consistency with BeanShell Sampler $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Add alias for original StringFromFile name (had only one underscore) $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Functions are wrapped in ${ and } $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$$NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	The headers are written using ISO_8859_1 encoding $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ We only support chunked transfer encoding
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ resource name
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$$NON-NLS-2$$NON-NLS-3$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Allow Headers to override Host setting $NON-NLS-1$ Host
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	revert
WITHOUT_CLASSIFICATION	revert to previous behaviour $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Not a real sampler
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	If we still can't find it, just try using all of the text
WITHOUT_CLASSIFICATION	method called by add is synchronized this is a different model from the one used by the result collector
WITHOUT_CLASSIFICATION	We are displaying an AssertionResult
WITHOUT_CLASSIFICATION	Creates one of the fields used to display the graph's current values. @param color the color used to draw the value. By convention this is the same color that is used to draw the graph for this value and in the choose panel. @param length the number of digits which the field should be able to display @return a text field configured to display one of the current graph values private JTextField createInfoField(Color color, int length) { JTextField field = new JTextField(length); field.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0)); field.setEditable(false); field.setForeground(color); field.setBackground(getBackground()); The text field should expand horizontally, but have a fixed height field.setMaximumSize(new Dimension( field.getMaximumSize().width, field.getPreferredSize().height)); return field; }
WITHOUT_CLASSIFICATION	Allow functions etc to register for testStopped notification. Only used by the function parser so far. The list is merged with the testListeners and then cleared.
WITHOUT_CLASSIFICATION	Insert the workbench node
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ Look and Feel prefix $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ enable/disable $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	we stay within the same parent node
WITHOUT_CLASSIFICATION	we stay within the same parent node
WITHOUT_CLASSIFICATION	Get the preference for the recent files
WITHOUT_CLASSIFICATION	Get the preference for the recent files
WITHOUT_CLASSIFICATION	Find and set the file for this recent file command
WITHOUT_CLASSIFICATION	Check if LAF is a built-in one
WITHOUT_CLASSIFICATION	Using index 0 is voluntary as child is removed in next step and added to new parent
WITHOUT_CLASSIFICATION	or a treenode from the same tree
WITHOUT_CLASSIFICATION	Extract transfer data.
WITHOUT_CLASSIFICATION	Insert a clone of the node, the original one will be removed by the exportDone method the children are not cloned but moved to the cloned node working on the original node would be harder as you'll have to deal with the insertion index offset if you re-order a node inside a parent
WITHOUT_CLASSIFICATION	The following array must agree with dateFormat It is used to translate the positions in the buffer to the values used by the Calendar class for the field id. Current format: MM/DD/YYYY HH:MM:SS 01234567890123456789 ^buffer positions
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Used by SampleSaveConfigurationConverter.unmarshall()
WITHOUT_CLASSIFICATION	Note that sampleStarted() and sampleStopped() is not made to appear in synch with sampleOccured() when replaying held samples. For now this is not critical since sampleStarted() and sampleStopped() is not used, but it may become an issue in the future. Then these events must also be stored so that replay of all events may occur and in the right order. Each stored event must then be tagged with something that lets you distinguish between occured, started and ended.
WITHOUT_CLASSIFICATION	Allow TestResultWrapper to feed back the samples This is effectively the same as saver.fromXML(InputStream) except we get to provide the DataHolder Don't know why there is no method for this in the XStream class
WITHOUT_CLASSIFICATION	OK
WITHOUT_CLASSIFICATION	N.B. default charset is used deliberately here
WITHOUT_CLASSIFICATION	Catch errors and rethrow as ConversionException so we get location details
WITHOUT_CLASSIFICATION	Version information for test plan header This is written to JMX files by ScriptWrapperConverter Also to JTL files by ResultCollector $NON-NLS-1$
WITHOUT_CLASSIFICATION	For converters to use
WITHOUT_CLASSIFICATION	Get the OutputWriter to use
WITHOUT_CLASSIFICATION	Use deprecated method, to avoid duplicating code
WITHOUT_CLASSIFICATION	Get the InputReader to use
WITHOUT_CLASSIFICATION	Get the InputReader to use
WITHOUT_CLASSIFICATION	Normal output ---- Debugging information ---- required-type : org.apache.jorphan.collections.ListedHashTree cause-message : WebServiceSampler : WebServiceSampler class : org.apache.jmeter.save.ScriptWrapper message : WebServiceSampler : WebServiceSampler line number : 929 path : /jmeterTestPlan/hashTree/hashTree/hashTree[4]/hashTree[5]/WebServiceSampler cause-exception : com.thoughtworks.xstream.alias.CannotResolveClassException -------------------------------
WITHOUT_CLASSIFICATION	--------------------------------------------------------------------- XML RESULT FILE CONSTANTS AND FIELD NAME CONSTANTS ---------------------------------------------------------------------
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	It is the sub sampler of the transaction that will be sampled
WITHOUT_CLASSIFICATION	N.B. This is only called at the start and end of a thread, so there is not necessary to cache the search results, thus saving memory
WITHOUT_CLASSIFICATION	If parent is OK, but child failed, add a message and flag the parent as failed
WITHOUT_CLASSIFICATION	private static Configuration getConfiguration(AssertionResult assResult) { DefaultConfiguration config = new DefaultConfiguration(ASSERTION_RESULT_TAG_NAME, "JMeter Save Service"); config.setAttribute(FAILURE_MESSAGE, assResult.getFailureMessage()); config.setAttribute(ERROR, "" + assResult.isError()); config.setAttribute(FAILURE, "" + assResult.isFailure()); return config; }
WITHOUT_CLASSIFICATION	see if this works it did not, let's try some other formats
WITHOUT_CLASSIFICATION	Both these are needed in the list even though they set the same variable
WITHOUT_CLASSIFICATION	Class to handle generating the delimited string. - adds the delimiter if not the first call - quotes any strings that require it
WITHOUT_CLASSIFICATION	<p> Returns a <code>String</code> value for a character-delimited column value enclosed in the quote character, if required. </p> <p> If the value contains a special character, then the String value is returned enclosed in the quote character. </p> <p> Any quote characters in the value are doubled up. </p> <p> If the value does not contain any special characters, then the String value is returned unchanged. </p> <p> N.B. The list of special characters includes the quote character. </p> @param input the input column String, may be null (without enclosing delimiters) @param specialChars special characters; second one must be the quote character @return the input String, enclosed in quote characters if the value contains a special character, <code>null</code> for null string input
WITHOUT_CLASSIFICATION	read first line and forget
WITHOUT_CLASSIFICATION	read first line and forget
WITHOUT_CLASSIFICATION	Obtain a value of the appropriate type for this property.
WITHOUT_CLASSIFICATION	use negative condition so missing (null) value is treated as FALSE
WITHOUT_CLASSIFICATION	the DEFAULT class Convert int to Integer etc:
WITHOUT_CLASSIFICATION	might be null (e.g. in testing)
WITHOUT_CLASSIFICATION	True iff we're currently processing an event triggered by the user selecting the "Edit" option. Used to prevent reverting the combo to non-editable during processing of secondary events.
WITHOUT_CLASSIFICATION	Programming error. Don't continue.
WITHOUT_CLASSIFICATION	Creation of the customizer and GUI initialization is delayed until the first configure call. We don't need all that just to find out the static label, menu categories, etc!
WITHOUT_CLASSIFICATION	<p> Super-class for TestElements that can be applied to main sample, sub-samples or both. [Assertions use a different class because they use a different value for the {@link #getScopeName()} constant] </p> <p> Their corresponding GUI classes need to add the ScopePanel to the GUI using the AbstractXXXGui methods: <ul> <li>createScopePanel()</li> <li>saveScopeSettings()</li> <li>showScopeSettings()</li> </ul> </p>
WITHOUT_CLASSIFICATION	TestBeanHelper.prepare() is OK
WITHOUT_CLASSIFICATION	Trigger end of loop condition on all parent controllers of current sampler
WITHOUT_CLASSIFICATION	OK to call TestBeanHelper.prepare()
WITHOUT_CLASSIFICATION	OK to call TestBeanHelper.prepare()
WITHOUT_CLASSIFICATION	OK to call TestBeanHelper.prepare()
WITHOUT_CLASSIFICATION	Original (rather odd) behaviour start at the end
WITHOUT_CLASSIFICATION	Property names to preload into JMeter variables:
WITHOUT_CLASSIFICATION	List of active threads
WITHOUT_CLASSIFICATION	set the endtime for the Thread Duration is in seconds
WITHOUT_CLASSIFICATION	N.B. we don't wait for the thread to complete, as that would prevent parallel TGs
WITHOUT_CLASSIFICATION	For example: jar:file:/JMeter/lib/ext/ApacheJMeter_core.jar!/org/apache/jmeter/util/JMeterVersion.class or if using an IDE file:/workspaces/JMeter/build/core/org/apache/jmeter/util/JMeterVersion.class
WITHOUT_CLASSIFICATION	For use by the server script
WITHOUT_CLASSIFICATION	Override so we can intercept the stream
WITHOUT_CLASSIFICATION	TODO - charset?
WITHOUT_CLASSIFICATION	TODO - charset?
WITHOUT_CLASSIFICATION	TODO - charset?
WITHOUT_CLASSIFICATION	TODO - charset?
WITHOUT_CLASSIFICATION	TODO - charset?
WITHOUT_CLASSIFICATION	API expects null not empty array, see http:docs.oracle.com/javase/6/docs/api/javax/net/ssl/X509KeyManager.html
WITHOUT_CLASSIFICATION	the copying thread won't generally detect EOF
WITHOUT_CLASSIFICATION	N.B. It seems that Opera needs a chain in order to accept server keys signed by the intermediate CA Opera does not seem to like server keys signed by the root (self-signed) cert.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Needs to be volatile as may be referenced from multiple threads TODO see if this can be made final somehow
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
TEST	TestCases for {@link XSLTProcess} task. XXX merge with {@link XsltTest}? @version 2003-08-05
TEST	where oh where has my test case 3 gone?
TEST	JUNIT3 test assertEquals(error, JUnitTestRunner.FAILURES, runner.getRetCode()); @fixme as of now does not report the original stacktrace. assertTrue(error, error.indexOf("thrown on purpose") != -1);
TEST	@todo this is duplicating TestResult information. Only the time is not part of the result. So we'd better derive a new class from TestResult and deal with it. (SB)
TEST	this is the wrong test if the remote OS is OpenVMS, but there doesn't seem to be a way to detect it.
TEST	not sure whether this test is needed but cost nothing to put. hope it will be reviewed by anybody competent
TEST	doesn't work: Depending on the compression engine used, compressed bytes may differ. False errors would be reported. assertTrue("File content mismatch", FILE_UTILS.contentEquals(project.resolveFile("expected/asf-logo-huge.tar.bz2"), project.resolveFile("asf-logo-huge.tar.bz2")));
TEST	The property is an id's thing -- either a property or a path. We need to make sure that the object was created with the given id. We don't have an adequate way of testing the actual value of the Path object, though...
TEST	process doesn't die properly under this combination, thus test fails. No workaround?
TEST	Attribute names and values. While the XML spec doesn't require preserving the order ( AFAIK ), some ant tests do rely on the exact order. The following code is copied from AttributeImpl. We could also just use SAX2 Attributes and convert to SAX1 ( DOM attribute Nodes can also be stored in SAX2 Attributes ) XXX under JDK 1.4 you can just use a LinkedHashMap for this purpose -jglick The only exception to this order is the treatment of refid. A number of datatypes check if refid is set when other attributes are set. This check will not work if the build script has the other attribute before the "refid" attribute, so now (ANT 1.7) the refid attribute will be processed first.
WITHOUT_CLASSIFICATION	BuildListener stuff
WITHOUT_CLASSIFICATION	we don't expect to find this
WITHOUT_CLASSIFICATION	ignore expected
WITHOUT_CLASSIFICATION	ignore expected
WITHOUT_CLASSIFICATION	tell the build it is finished
WITHOUT_CLASSIFICATION	end class
WITHOUT_CLASSIFICATION	keep track of what operating systems are supported here.
WITHOUT_CLASSIFICATION	father and child pattern test
WITHOUT_CLASSIFICATION	redo the test, but the 2 include patterns are inverted
WITHOUT_CLASSIFICATION	add conditions and more commands as soon as the need arises
WITHOUT_CLASSIFICATION	give ourselves some time for the system call to execute... tweak if you have a really over loaded system.
WITHOUT_CLASSIFICATION	followLinks should be true by default, but if this ever changes we will need this line.
WITHOUT_CLASSIFICATION	testing drive letter search from root:
WITHOUT_CLASSIFICATION	if this is our context we assume there must be something here:
WITHOUT_CLASSIFICATION	This path should contain the class files for these testcases:
WITHOUT_CLASSIFICATION	A special parent loader which is not the system class loader:
WITHOUT_CLASSIFICATION	A special parent loader which is not the system class loader:
WITHOUT_CLASSIFICATION	An AntClassLoader which is supposed to delegate to the parent and then to the disk path:
WITHOUT_CLASSIFICATION	The intended result URLs:
WITHOUT_CLASSIFICATION	JDK 1.4: return Collections.list(e);
WITHOUT_CLASSIFICATION	override allowed on <available>
WITHOUT_CLASSIFICATION	ensure <tstamp>'s new prefix attribute is working
WITHOUT_CLASSIFICATION	ensure <tstamp> follows the immutability rule
WITHOUT_CLASSIFICATION	ensure <condition> follows the immutability rule
WITHOUT_CLASSIFICATION	ensure <checksum> follows the immutability rule
WITHOUT_CLASSIFICATION	ensure <exec> follows the immutability rule
WITHOUT_CLASSIFICATION	ensure <pathconvert> follows the immutability rule
WITHOUT_CLASSIFICATION	throw in drive letters
WITHOUT_CLASSIFICATION	promised to eliminate consecutive slashes after drive letter.
WITHOUT_CLASSIFICATION	Start with simple absolute file names.
WITHOUT_CLASSIFICATION	drive letters are not used, just to be considered as normal part of a name
WITHOUT_CLASSIFICATION	Now test some relative file name magic.
WITHOUT_CLASSIFICATION	fail, because buildfile contains two targets with the same name
WITHOUT_CLASSIFICATION	overriding target from imported buildfile is allowed
WITHOUT_CLASSIFICATION	the buildfile to use
WITHOUT_CLASSIFICATION	call a target
WITHOUT_CLASSIFICATION	class-BFT
WITHOUT_CLASSIFICATION	override allowed on <available>
WITHOUT_CLASSIFICATION	ignore event
WITHOUT_CLASSIFICATION	Check it's a read-only map.
WITHOUT_CLASSIFICATION	Check it's a read-only map.
WITHOUT_CLASSIFICATION	JUnit 3.7 adds a getName method to TestCase - so we now have a name attribute in IntrospectionHelperTest if we run under JUnit 3.7 but not in earlier versions. Simply add it here and remove it after the tests.
WITHOUT_CLASSIFICATION	addConfigured(Hashtable) should come before addConfigured(Map)
WITHOUT_CLASSIFICATION	INVALID extension point
WITHOUT_CLASSIFICATION	INVALID extension point
WITHOUT_CLASSIFICATION	Valid extension point
WITHOUT_CLASSIFICATION	Valid extension point, more derived than Map above, but after it!
WITHOUT_CLASSIFICATION	IntrospectionHelperTest
WITHOUT_CLASSIFICATION	make sure we do not get a NPE
WITHOUT_CLASSIFICATION	use an anonymous subclass since ProjectComponent is abstract
WITHOUT_CLASSIFICATION	------------------------------------------------------ Helper methods -----------------------------------------------------
WITHOUT_CLASSIFICATION	I wrote the testcases in one java file because I want also to test the combined behaviour (see end of the class).
WITHOUT_CLASSIFICATION	check defaults
WITHOUT_CLASSIFICATION	check defaults
WITHOUT_CLASSIFICATION	check build.compiler provides defaults
WITHOUT_CLASSIFICATION	setUserProperty to override system properties
WITHOUT_CLASSIFICATION	check attribute overrides build.compiler
WITHOUT_CLASSIFICATION	check attribute overrides build.compiler
WITHOUT_CLASSIFICATION	some database keys, see #getProperties(int)
WITHOUT_CLASSIFICATION	keys used in properties.
WITHOUT_CLASSIFICATION	neither
WITHOUT_CLASSIFICATION	PR 11100
WITHOUT_CLASSIFICATION	simple test to ensure that the caching does work...
WITHOUT_CLASSIFICATION	2nd run..
WITHOUT_CLASSIFICATION	the driver must still be cached.
WITHOUT_CLASSIFICATION	look for the driver path...
WITHOUT_CLASSIFICATION	file time checks for java1.2+
WITHOUT_CLASSIFICATION	only test on java1.5+
WITHOUT_CLASSIFICATION	AntLikeTasksAtTopLevelTest
WITHOUT_CLASSIFICATION	file length checks rely on touch generating a zero byte file
WITHOUT_CLASSIFICATION	no-op: not a real business error
WITHOUT_CLASSIFICATION	dont look for much text here as it is vendor and version dependent
WITHOUT_CLASSIFICATION	end of try-catch
WITHOUT_CLASSIFICATION	end of try-catch
WITHOUT_CLASSIFICATION	PR 11100
WITHOUT_CLASSIFICATION	PR 38973
WITHOUT_CLASSIFICATION	PR 11100
WITHOUT_CLASSIFICATION	PR 16213
WITHOUT_CLASSIFICATION	PR 38973
WITHOUT_CLASSIFICATION	PR 21996
WITHOUT_CLASSIFICATION	PR 10504
WITHOUT_CLASSIFICATION	PR 20969
WITHOUT_CLASSIFICATION	can't access the booleans in MyPrinter here (even if they were static) since the MyPrinter instance that was used in the test has likely been loaded via a different classloader than this class. Therefore we make the printer assert its state and only check for the tail invocation.
WITHOUT_CLASSIFICATION	should get no output at all
WITHOUT_CLASSIFICATION	should get no output at all
WITHOUT_CLASSIFICATION	should get no output at all
WITHOUT_CLASSIFICATION	should get no output at all
WITHOUT_CLASSIFICATION	this call should succeed as unless overrides if
WITHOUT_CLASSIFICATION	test that the watchdog ends the process
WITHOUT_CLASSIFICATION	test that the watchdog ends the process
WITHOUT_CLASSIFICATION	and a little shorter
WITHOUT_CLASSIFICATION	test that the watchdog ends the process
WITHOUT_CLASSIFICATION	target must be specified
WITHOUT_CLASSIFICATION	Should fail since a recursion will occur...
WITHOUT_CLASSIFICATION	a rather convoluted equals() test
WITHOUT_CLASSIFICATION	<path> swallows the basedir, it seems assertTrue(!getProject().resolveFile("A").exists());
WITHOUT_CLASSIFICATION	allow this as imported in targets are only tested when a target is run
WITHOUT_CLASSIFICATION	deactivate this test as imports within targets are not allowed
WITHOUT_CLASSIFICATION	Running on Windows or something, so skip it.
WITHOUT_CLASSIFICATION	remove log file from testSpawn
WITHOUT_CLASSIFICATION	this is guaranteed by FileUtils#createTempFile
WITHOUT_CLASSIFICATION	let's be nice with the next generation of developers
WITHOUT_CLASSIFICATION	executeTarget("setup"); commented out for performance while target is empty
WITHOUT_CLASSIFICATION	target file exptected string
WITHOUT_CLASSIFICATION	END class ManifestClassPathTest
WITHOUT_CLASSIFICATION	assertTrue("return code is invalid: " + retCode, retCode!=0);
WITHOUT_CLASSIFICATION	test a process that runs and failed
WITHOUT_CLASSIFICATION	process should abort
WITHOUT_CLASSIFICATION	I assume that starting this takes less than TIME_OUT/2 ms...
WITHOUT_CLASSIFICATION	wait for TIME_OUT/2, there should be about TIME_OUT/2 ms remaining before timeout
WITHOUT_CLASSIFICATION	now stop the watchdog.
WITHOUT_CLASSIFICATION	wait for the thread to die, should be the end of the process
WITHOUT_CLASSIFICATION	process should be dead and well finished
WITHOUT_CLASSIFICATION	We have to compare the decompressed content instead:
WITHOUT_CLASSIFICATION	no point in setting a message
WITHOUT_CLASSIFICATION	this is guaranteed by FileUtils#createTempFile
WITHOUT_CLASSIFICATION	make the spawned process run 4 seconds
WITHOUT_CLASSIFICATION	this loop runs parallel to the build
WITHOUT_CLASSIFICATION	security
WITHOUT_CLASSIFICATION	time of the build in milli seconds
WITHOUT_CLASSIFICATION	Nothing specified -> Fail
WITHOUT_CLASSIFICATION	Only property specified -> Fail
WITHOUT_CLASSIFICATION	Only file specified -> Fail
WITHOUT_CLASSIFICATION	file does exist -> property 'test' == 'true'
WITHOUT_CLASSIFICATION	resource doesn't exist -> property 'test' == null
WITHOUT_CLASSIFICATION	resource does exist -> property 'test' == 'true'
WITHOUT_CLASSIFICATION	class doesn't exist -> property 'test' == null
WITHOUT_CLASSIFICATION	class does exist -> property 'test' == 'true'
WITHOUT_CLASSIFICATION	All three specified but class missing -> null
WITHOUT_CLASSIFICATION	Specified property-name is "" -> true
WITHOUT_CLASSIFICATION	Specified file is "" -> invalid files do not exist
WITHOUT_CLASSIFICATION	Specified file is "" actually a directory, so it should pass
WITHOUT_CLASSIFICATION	Specified resource is "" -> can such a thing exist?
WITHOUT_CLASSIFICATION	returns non null IBM JDK 1.3 Linux
WITHOUT_CLASSIFICATION	Specified dir is "" -> this is the current directory and should always exist
WITHOUT_CLASSIFICATION	Specified dir is "../taskdefs" -> should exist since it's the location of the buildfile used...
WITHOUT_CLASSIFICATION	Specified dir is "../this_dir_should_never_exist" -> null
WITHOUT_CLASSIFICATION	Invalid type specified
WITHOUT_CLASSIFICATION	Core class that exists in system classpath is ignored
WITHOUT_CLASSIFICATION	Core class that exists in system classpath is not ignored with ignoresystemclass="false"
WITHOUT_CLASSIFICATION	Core class that exists in system classpath is not ignored with default ignoresystemclasses value
WITHOUT_CLASSIFICATION	Class is found in specified classpath
WITHOUT_CLASSIFICATION	File is not found in specified filepath
WITHOUT_CLASSIFICATION	test when file begins with basedir twice
WITHOUT_CLASSIFICATION	test for searching parents
WITHOUT_CLASSIFICATION	test for not searching parents
WITHOUT_CLASSIFICATION	Output the default excludes
WITHOUT_CLASSIFICATION	adding something to the excludes'
WITHOUT_CLASSIFICATION	removing something from the defaults
WITHOUT_CLASSIFICATION	CVS missing
WITHOUT_CLASSIFICATION	target must be specified
WITHOUT_CLASSIFICATION	We try to delete the directory created in CopydirTest
WITHOUT_CLASSIFICATION	check that both arrays have the same size
WITHOUT_CLASSIFICATION	instance variable to allow cleanup
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	What's the working directory? If local, then its the folder of the input file. Otherwise, its the "current" dir..
WITHOUT_CLASSIFICATION	Set a property on the project to make sure that loading a property with the same name from an xml file will not change it.
WITHOUT_CLASSIFICATION	printProperties(p.getProperties());
WITHOUT_CLASSIFICATION	Every key identified by the Properties must have been loaded.
WITHOUT_CLASSIFICATION	The property is the name of a file. We are testing a location attribute, so we need to resolve the given file name in the provided folder.
WITHOUT_CLASSIFICATION	Substitute .xml with .properties
WITHOUT_CLASSIFICATION	basedir of subant/subant-test1/subant.xml is .. therefore we expect here the subant/subant-test1 subdirectory
WITHOUT_CLASSIFICATION	Output an empty String
WITHOUT_CLASSIFICATION	Output 'OUTPUT OF ECHO'
WITHOUT_CLASSIFICATION	@param message
WITHOUT_CLASSIFICATION	make sure that the parsing does not break
WITHOUT_CLASSIFICATION	where the name contains <>
WITHOUT_CLASSIFICATION	where only an address is supplied
WITHOUT_CLASSIFICATION	Tests property element, using XML schema properties as an example.
WITHOUT_CLASSIFICATION	should print "panic: Cannot find importVocab file 'JavaTokenTypes.txt'" since it needs to run java.g first before java.tree.g
WITHOUT_CLASSIFICATION	execute
WITHOUT_CLASSIFICATION	override some of the code so we can test the handling of the return code only.
WITHOUT_CLASSIFICATION	ask ant to update the properties...
WITHOUT_CLASSIFICATION	to override
WITHOUT_CLASSIFICATION	just to be sure
WITHOUT_CLASSIFICATION	just to be sure
WITHOUT_CLASSIFICATION	read in the file
WITHOUT_CLASSIFICATION	found the property we set - it's good.
WITHOUT_CLASSIFICATION	else
WITHOUT_CLASSIFICATION	else
WITHOUT_CLASSIFICATION	ReplaceRegExpTest
WITHOUT_CLASSIFICATION	test for 10 consecutives transform
WITHOUT_CLASSIFICATION	java keywords are not special
WITHOUT_CLASSIFICATION	underscores go in front of invalid start chars
WITHOUT_CLASSIFICATION	underscores at the front get an underscore too
WITHOUT_CLASSIFICATION	non java char at start => underscore then the the _hex value
WITHOUT_CLASSIFICATION	and paths are stripped
WITHOUT_CLASSIFICATION	Tests the {@link XSLTProcess} task. XXX merge with {@link StyleTest}? @since Ant 1.5
WITHOUT_CLASSIFICATION	byte - byte compare
WITHOUT_CLASSIFICATION	avoid endless loop
WITHOUT_CLASSIFICATION	those would fail because of the way BuildFileTest captures output
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	tests one the file object
WITHOUT_CLASSIFICATION	father and child pattern test
WITHOUT_CLASSIFICATION	redo the test, but the 2 include patterns are inverted
WITHOUT_CLASSIFICATION	end of try-catch
WITHOUT_CLASSIFICATION	tests one the file object
WITHOUT_CLASSIFICATION	On junit3 this is a FAILURE, on junit4 this is an ERROR
WITHOUT_CLASSIFICATION	conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report
WITHOUT_CLASSIFICATION	conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report
WITHOUT_CLASSIFICATION	conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report
WITHOUT_CLASSIFICATION	mandatory constructor
WITHOUT_CLASSIFICATION	check that a suite generates no errors
WITHOUT_CLASSIFICATION	check that having no suite generates no errors
WITHOUT_CLASSIFICATION	check that something which is not a testcase generates no errors at first even though this is incorrect.
WITHOUT_CLASSIFICATION	check that an invalid suite generates an error.
WITHOUT_CLASSIFICATION	JUnit3 test assertEquals(runner.getFormatter().getError(), JUnitTestRunner.FAILURES, runner.getRetCode());
WITHOUT_CLASSIFICATION	On junit3 this is a FAILURE, on junit4 this is an ERROR
WITHOUT_CLASSIFICATION	@param event the build event that is being logged.
WITHOUT_CLASSIFICATION	check that an exception in the constructor is noticed
WITHOUT_CLASSIFICATION	the test runner that wrap the dummy formatter that interests us
WITHOUT_CLASSIFICATION	use the classloader that loaded this class otherwise it will not be able to run inner classes if this test is ran in non-forked mode.
WITHOUT_CLASSIFICATION	dummy formatter just to catch the error
WITHOUT_CLASSIFICATION	end of try-catch
WITHOUT_CLASSIFICATION	end of try-catch
WITHOUT_CLASSIFICATION	byte - byte compare
WITHOUT_CLASSIFICATION	@param event the build event that is being logged.
WITHOUT_CLASSIFICATION	get the fileset and its basedir
WITHOUT_CLASSIFICATION	get the fileset and its basedir
WITHOUT_CLASSIFICATION	get the fileset and its basedir
WITHOUT_CLASSIFICATION	Set up a SOSGet task
WITHOUT_CLASSIFICATION	Set up a SOSGet task
WITHOUT_CLASSIFICATION	Set up a SOSCheckin task
WITHOUT_CLASSIFICATION	Set up a SOSCheckin task
WITHOUT_CLASSIFICATION	Set up a SOSCheckout task
WITHOUT_CLASSIFICATION	Set up a sosCheckout task
WITHOUT_CLASSIFICATION	Set up a sosCheckout task
WITHOUT_CLASSIFICATION	We have extra elements
WITHOUT_CLASSIFICATION	give it some time to display
WITHOUT_CLASSIFICATION	Set up a VSSGet task
WITHOUT_CLASSIFICATION	Set up a VSSLabel task
WITHOUT_CLASSIFICATION	Set up a VSSLabel task
WITHOUT_CLASSIFICATION	Set up a VSSHistory task
WITHOUT_CLASSIFICATION	Set up a VSSHistory task
WITHOUT_CLASSIFICATION	Set up a Timestamp
WITHOUT_CLASSIFICATION	Get today's date
WITHOUT_CLASSIFICATION	Set up a VSSCheckIn task
WITHOUT_CLASSIFICATION	Set up a VSSCheckOut task
WITHOUT_CLASSIFICATION	Set up a VSSAdd task
WITHOUT_CLASSIFICATION	Set up a VSSCp task
WITHOUT_CLASSIFICATION	Set up a VSSCreate task
WITHOUT_CLASSIFICATION	Count the number of empty strings
WITHOUT_CLASSIFICATION	ran Ant tests with -ea and this would fail spuriously
WITHOUT_CLASSIFICATION	now to the expected failures
WITHOUT_CLASSIFICATION	catalog <--> catalog
WITHOUT_CLASSIFICATION	catalog1 --> catalog2 --> catalog3 --> catalog1
WITHOUT_CLASSIFICATION	catalog2 --> catalog1 --> catalog
WITHOUT_CLASSIFICATION	check that dir and src are incompatible
WITHOUT_CLASSIFICATION	check that fullpath and prefix are incompatible
WITHOUT_CLASSIFICATION	check that reference zipfilesets cannot have specific attributes
WITHOUT_CLASSIFICATION	check that a reference zipfileset gets the same attributes as the original
WITHOUT_CLASSIFICATION	check that dir and src are incompatible
WITHOUT_CLASSIFICATION	These shenanigans are necessary b/c Norm Walsh's resolver has a different idea of how file URLs are created on windoze ie file:c:/foo instead of file:/c:/foo
WITHOUT_CLASSIFICATION	check that dir and src are incompatible
WITHOUT_CLASSIFICATION	check that fullpath and prefix are incompatible
WITHOUT_CLASSIFICATION	try a netware-volume length path, see how it is handled
WITHOUT_CLASSIFICATION	actually tests constructor as well as setPath
WITHOUT_CLASSIFICATION	check that reference tarfilesets cannot have specific attributes
WITHOUT_CLASSIFICATION	try a multi-part netware-volume length path w/forward slash, see how it is handled
WITHOUT_CLASSIFICATION	try a multi-part netware-volume length path, see how it is handled
WITHOUT_CLASSIFICATION	dummy1 --> dummy2 --> dummy3 --> dummy1
WITHOUT_CLASSIFICATION	try a netware-volume length path w/forward slash, see how it is handled
WITHOUT_CLASSIFICATION	try a multi-part netware-volume length path with UNIX separator (this testcase if from an actual bug that was found, in AvailableTest, which uses PathTokenizer)
WITHOUT_CLASSIFICATION	dummy1 --> dummy2 --> dummy3 --> dummy1
WITHOUT_CLASSIFICATION	dummy1 --> dummy2 --> dummy3 --> dummy1
WITHOUT_CLASSIFICATION	dummy1 --> dummy2 --> dummy3 --> dummy1
WITHOUT_CLASSIFICATION	dummy1 --> dummy2 --> dummy3 --> dummy1
WITHOUT_CLASSIFICATION	dummy1 --> dummy2 --> dummy3 (with Path "/a")
WITHOUT_CLASSIFICATION	This class acts as a custom Ant task also and uses these variables/methods in that mode
WITHOUT_CLASSIFICATION	dummy1 --> dummy2 --> dummy3 (which has the Project's basedir as root).
WITHOUT_CLASSIFICATION	dummy1 --> dummy2 --> dummy3 (which has the Project's basedir as root).
WITHOUT_CLASSIFICATION	Grant extra permissions to read and write the user. properties and read to the java.home property
WITHOUT_CLASSIFICATION	dummy1 --> dummy2 --> dummy3 (which holds patterns "include" and "exclude")
WITHOUT_CLASSIFICATION	check that a reference tarfileset gets the same attributes as the original
WITHOUT_CLASSIFICATION	was expected
WITHOUT_CLASSIFICATION	Revoke permission to write user.home (granted above via user.), still able to read though. and the default granted permission to read os.name.
WITHOUT_CLASSIFICATION	Was expected, test passes
WITHOUT_CLASSIFICATION	Was expected, test passes
WITHOUT_CLASSIFICATION	Was expected, test passes
WITHOUT_CLASSIFICATION	After changing CommandlineJava to search for the java executable, I don't know, how to tests the value returned here without using the same logic as applied in the class itself. assertTrue("no classpath", "java", s[0]);
WITHOUT_CLASSIFICATION	assertEquals("with classpath", "java", s[0]);
WITHOUT_CLASSIFICATION	only the second iteration would pass because of PR 27218
WITHOUT_CLASSIFICATION	mix element types
WITHOUT_CLASSIFICATION	implicit composite
WITHOUT_CLASSIFICATION	a --> b --> c --- def \-- ghi
WITHOUT_CLASSIFICATION	Ensure that an external entity resolves as expected Using an XMLCatalog: Transform an XML file that refers to the entity into a text file, entity is listed in the XMLCatalog pointing to a different file. Stuff result into property: val2
WITHOUT_CLASSIFICATION	Ensure that an external entity resolves as expected with NO XMLCatalog involvement: Transform an XML file that refers to the entity into a text file, stuff result into property: val1
WITHOUT_CLASSIFICATION	this actually relies on the first manifest being found on the classpath (probably rt.jar's) being valid
WITHOUT_CLASSIFICATION	Ensure that an external entity resolves as expected with NO XMLCatalog involvement: Transform an XML file that contains a reference to a _second_ XML file via the document() function. The _second_ XML file refers to an entity. Stuff result into the property: val3
WITHOUT_CLASSIFICATION	Ensure that an external entity resolves as expected Using an XMLCatalog: Transform an XML file that contains a reference to a _second_ XML file via the document() function. The _second_ XML file refers to an entity. The entity is listed in the XMLCatalog pointing to a different file. Stuff result into the property: val4
WITHOUT_CLASSIFICATION	The following will be used as types and tasks
WITHOUT_CLASSIFICATION	share the setup for testing the depend task
WITHOUT_CLASSIFICATION	Test for path relative to project base directory
WITHOUT_CLASSIFICATION	class-MockCache
WITHOUT_CLASSIFICATION	===================== attributes =====================
WITHOUT_CLASSIFICATION	class-MockCache
WITHOUT_CLASSIFICATION	===================== constructors, factories =====================
WITHOUT_CLASSIFICATION	===================== JUnit stuff =====================
WITHOUT_CLASSIFICATION	project reference is set in super.setUp()
WITHOUT_CLASSIFICATION	init the testclasses path object
WITHOUT_CLASSIFICATION	/ for test only - ignore tests where we arent work at the moment public static junit.framework.Test suite() { junit.framework.TestSuite suite= new junit.framework.TestSuite(); suite.addTest(new ModifiedSelectorTest("testValidateWrongCache")); return suite; }
WITHOUT_CLASSIFICATION	======= testcases for the attributes and nested elements of the selector =====
WITHOUT_CLASSIFICATION	do the actions
WITHOUT_CLASSIFICATION	do the checks - the buildfile stores the fileset as property
WITHOUT_CLASSIFICATION	must be empty according to the Mock implementations
WITHOUT_CLASSIFICATION	don't catch the JUnit exceptions
WITHOUT_CLASSIFICATION	no check for 1<=kind<=3 - only internal use therefore check it while development
WITHOUT_CLASSIFICATION	readable form of parameter kind
WITHOUT_CLASSIFICATION	setup the "Ant project"
WITHOUT_CLASSIFICATION	setup the selector
WITHOUT_CLASSIFICATION	get the cache, so we can check our things
WITHOUT_CLASSIFICATION	the test
WITHOUT_CLASSIFICATION	MockCache doesnt create a file - therefore no cleanup needed
WITHOUT_CLASSIFICATION	add the test classes to its classpath
WITHOUT_CLASSIFICATION	let the selector do its checks
WITHOUT_CLASSIFICATION	extract the algorithm name (and config) from the selectors output
WITHOUT_CLASSIFICATION	'<' and '>' are only used if the algorithm has properties
WITHOUT_CLASSIFICATION	return the clean value
WITHOUT_CLASSIFICATION	initialize test environment (called "bed")
WITHOUT_CLASSIFICATION	initialize test environment (called "bed")
WITHOUT_CLASSIFICATION	Configure the selector
WITHOUT_CLASSIFICATION	Configure the selector
WITHOUT_CLASSIFICATION	does the selection
WITHOUT_CLASSIFICATION	evaluate correctness
WITHOUT_CLASSIFICATION	evaluate correctness
WITHOUT_CLASSIFICATION	same logic as on algorithm, no testcases created
WITHOUT_CLASSIFICATION	same logic as on algorithm, no testcases created
WITHOUT_CLASSIFICATION	given cache must be empty
WITHOUT_CLASSIFICATION	cache must return a stored value
WITHOUT_CLASSIFICATION	test the iterator
WITHOUT_CLASSIFICATION	clear the cache
WITHOUT_CLASSIFICATION	must not be a directory
WITHOUT_CLASSIFICATION	get the Hashvalues
WITHOUT_CLASSIFICATION	Assert !=null and equality
WITHOUT_CLASSIFICATION	if-isFile for
WITHOUT_CLASSIFICATION	============== testcases for the comparator implementations ==============
WITHOUT_CLASSIFICATION	not yet supported see note in selector
WITHOUT_CLASSIFICATION	new File("src/etc/testcases/types/resources/selectors/cache.properties").delete();
WITHOUT_CLASSIFICATION	really "2"
WITHOUT_CLASSIFICATION	Configure the selector - only defaults are used
WITHOUT_CLASSIFICATION	+ " <emptyElement></emptyElement>"
WITHOUT_CLASSIFICATION	============ ResourceFactory interface ======================
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	class-BFT
WITHOUT_CLASSIFICATION	do the actions
WITHOUT_CLASSIFICATION	don't catch the JUnit exceptions
WITHOUT_CLASSIFICATION	First Run the first call should get all files, because nothing is in the cache
WITHOUT_CLASSIFICATION	Second Run the second call should get no files, because no content has changed
WITHOUT_CLASSIFICATION	make some files dirty
WITHOUT_CLASSIFICATION	these files are made dirty --> 3+4 with different content
WITHOUT_CLASSIFICATION	AccessObject to the test-Ant-environment
WITHOUT_CLASSIFICATION	give some values (via property file) to that environment
WITHOUT_CLASSIFICATION	call the target for making the files dirty
WITHOUT_CLASSIFICATION	Third Run third call should get only those files, which CONTENT changed (no timestamp changes required!)
WITHOUT_CLASSIFICATION	Check the result
WITHOUT_CLASSIFICATION	Mark all files which should be selected as (T)rue and all others as (F)alse. Directories are always selected so they always are (T)rue.
WITHOUT_CLASSIFICATION	f2name shouldn't be selected: only timestamp has changed!
WITHOUT_CLASSIFICATION	info text list of files expected result result
WITHOUT_CLASSIFICATION	cleanup the environment
WITHOUT_CLASSIFICATION	cleanup the environment
WITHOUT_CLASSIFICATION	RuleBasedCollator not yet supported - see Selector:375 note
WITHOUT_CLASSIFICATION	s.addParam(createParam("algorithm.provider","---")); i don't know any valid
WITHOUT_CLASSIFICATION	first and second run
WITHOUT_CLASSIFICATION	make dirty
WITHOUT_CLASSIFICATION	third run
WITHOUT_CLASSIFICATION	the directories to check
WITHOUT_CLASSIFICATION	do the checks
WITHOUT_CLASSIFICATION	class-MockProject
WITHOUT_CLASSIFICATION	class-ModifiedSelectorTest
WITHOUT_CLASSIFICATION	First read in zero bytes
WITHOUT_CLASSIFICATION	Now read in the string
WITHOUT_CLASSIFICATION	Make sure that the counts are the same
WITHOUT_CLASSIFICATION	LineOrientedOutputStreamTest
WITHOUT_CLASSIFICATION	make sure that elapsed time in set via date works
WITHOUT_CLASSIFICATION	make sure that elapsed time in ms works
WITHOUT_CLASSIFICATION	should be new moon
WITHOUT_CLASSIFICATION	Try a silly case
WITHOUT_CLASSIFICATION	and a little longer
WITHOUT_CLASSIFICATION	throw in drive letters
WITHOUT_CLASSIFICATION	promised to eliminate consecutive slashes after drive letter.
WITHOUT_CLASSIFICATION	Start with simple absolute file names.
WITHOUT_CLASSIFICATION	Start with simple absolute file names.
WITHOUT_CLASSIFICATION	Now test some relative file name magic.
WITHOUT_CLASSIFICATION	Now test some relative file name magic.
WITHOUT_CLASSIFICATION	implies lastModified == 0
WITHOUT_CLASSIFICATION	============ FileNameMapper interface =======================
WITHOUT_CLASSIFICATION	Windows adds the drive letter in uppercase, unless you run Cygwin
WITHOUT_CLASSIFICATION	Sleep for some time to make sure a touched file would get a more recent timestamp according to the file system's granularity (should be > 2s to account for Windows FAT).
WITHOUT_CLASSIFICATION	number of milliseconds in a day
WITHOUT_CLASSIFICATION	in a previous version, the date of the file was set to 123456 milliseconds since 01.01.1970 it did not work on a computer running JDK 1.4.1_02 + Windows 2000
WITHOUT_CLASSIFICATION	I would love to compare this with 123456, but depending on the filesystems granularity it can take an arbitrary value. Just assert the time has changed.
WITHOUT_CLASSIFICATION	throw in NetWare volume names
WITHOUT_CLASSIFICATION	throw in NetWare volume names
WITHOUT_CLASSIFICATION	drive letters must be considered just normal filenames.
WITHOUT_CLASSIFICATION	Passed test
WITHOUT_CLASSIFICATION	Expected exception caught
WITHOUT_CLASSIFICATION	Expected exception caught
WITHOUT_CLASSIFICATION	null parent dir
WITHOUT_CLASSIFICATION	preserve case on Cygwin when using 1.4 toURI:
WITHOUT_CLASSIFICATION	OK, Java 1.3.
WITHOUT_CLASSIFICATION	get a time
WITHOUT_CLASSIFICATION	add some time. We assume no OS has a granularity this bad
WITHOUT_CLASSIFICATION	assertTrue("same timestamp is up to date", fu.isUpToDate(firstTime, firstTime));
WITHOUT_CLASSIFICATION	check that older is up to date with a newer dest
WITHOUT_CLASSIFICATION	check that older is up to date with a newer dest
WITHOUT_CLASSIFICATION	This just tests that the function does not blow up
WITHOUT_CLASSIFICATION	java.home is bogus
WITHOUT_CLASSIFICATION	could still be OS/2
WITHOUT_CLASSIFICATION	27224 = magic (a random port which is unlikely to be in use)
WITHOUT_CLASSIFICATION	order of headers cannot be guaranteed
WITHOUT_CLASSIFICATION	state engine: false=envelope, true=message
WITHOUT_CLASSIFICATION	make sure there are no issues concerning line separator interpretation a line separator for regex (perl) is always a unix line (ie \n)
WITHOUT_CLASSIFICATION	sb.append( response + "\r\n" );
WITHOUT_CLASSIFICATION	60s a further 30s
WITHOUT_CLASSIFICATION	60s a further 30s
WITHOUT_CLASSIFICATION	60s a further 30s
WITHOUT_CLASSIFICATION	60s a further 30s
WITHOUT_CLASSIFICATION	wait for connection
WITHOUT_CLASSIFICATION	throw new IllegalStateException("Command unrecognized: " + response);
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	while
WITHOUT_CLASSIFICATION	CRC manually calculated, sorry CRC mode link length uid, gid
WITHOUT_CLASSIFICATION	CRC manually calculated, sorry CRC mode link length uid, gid
WITHOUT_CLASSIFICATION	CRC mode link length uid, gid
WITHOUT_CLASSIFICATION	CRC mode link length uid, gid
WITHOUT_CLASSIFICATION	CRC mode link uid, gid
WITHOUT_CLASSIFICATION	bad CRC mode link uid, gid
WITHOUT_CLASSIFICATION	if we got here, all was well
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:ConstantNameCheck OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:ConstantNameCheck ON
WITHOUT_CLASSIFICATION	Filter out messages based on priority
WITHOUT_CLASSIFICATION	Print out the name of the task if we're in one
WITHOUT_CLASSIFICATION	shouldn't be possible
WITHOUT_CLASSIFICATION	Set up PRIMITIVE_TYPE_MAP
WITHOUT_CLASSIFICATION	check of add[Configured](Class) pattern
WITHOUT_CLASSIFICATION	not really user settable properties on tasks/project components
WITHOUT_CLASSIFICATION	hide addTask for TaskContainers
WITHOUT_CLASSIFICATION	use wrappers for primitive classes, e.g. int and Integer are treated identically
WITHOUT_CLASSIFICATION	Check if a create of this property is already present add takes preference over create for CB purposes
WITHOUT_CLASSIFICATION	Ignore this method as there is an addConfigured form of this method that has a higher priority
WITHOUT_CLASSIFICATION	If a helper cannot be found, or if the helper is for another classloader, create a new IH
WITHOUT_CLASSIFICATION	Ignore attribute from unknown uri's
WITHOUT_CLASSIFICATION	impossible as getMethods should only return public methods
WITHOUT_CLASSIFICATION	impossible as getMethods should only return public methods
WITHOUT_CLASSIFICATION	impossible as getMethods should only return public methods
WITHOUT_CLASSIFICATION	Element doesn't handle text content
WITHOUT_CLASSIFICATION	Not whitespace - fail
WITHOUT_CLASSIFICATION	Only whitespace - ignore
WITHOUT_CLASSIFICATION	Class doesn't have a String constructor but a decent factory method
WITHOUT_CLASSIFICATION	char and Character get special treatment - take the first character
WITHOUT_CLASSIFICATION	simplest case - setAttribute expects String
WITHOUT_CLASSIFICATION	First try with Project.
WITHOUT_CLASSIFICATION	EnumeratedAttributes have their own helper class
WITHOUT_CLASSIFICATION	resolve relative paths through Project
WITHOUT_CLASSIFICATION	Version to use for addXXX and addConfiguredXXX
WITHOUT_CLASSIFICATION	Well, no matching constructor.
WITHOUT_CLASSIFICATION	OK, try without.
WITHOUT_CLASSIFICATION	the method called to add/create the nested element
WITHOUT_CLASSIFICATION	DO NOTHING
WITHOUT_CLASSIFICATION	ADD or ADD_CONFIGURED
WITHOUT_CLASSIFICATION	the method called to set the attribute
WITHOUT_CLASSIFICATION	add configured replaces the add method
WITHOUT_CLASSIFICATION	maintain a sorted list of targets
WITHOUT_CLASSIFICATION	worst case. look for a public String constructor and use it also supports new Whatever(Project, String) as for Path or Reference This is used (deliberately) for all primitives/wrappers other than char and boolean
WITHOUT_CLASSIFICATION	Already present
WITHOUT_CLASSIFICATION	higher derived
WITHOUT_CLASSIFICATION	print the stacktrace in the build file it is always useful... better have too much info than not enough.
WITHOUT_CLASSIFICATION	specify output in UTF8 otherwise accented characters will blow up everything
WITHOUT_CLASSIFICATION	For debugging purposes uncomment: org.w3c.dom.Comment s = doc.createComment("stack=" + threadStack); buildElement.element.appendChild(s);
WITHOUT_CLASSIFICATION	-------------------------------------------------- BuildLogger interface
WITHOUT_CLASSIFICATION	Shouldn't happen
WITHOUT_CLASSIFICATION	LF is always end of line (i.e. CRLF or single LF)
WITHOUT_CLASSIFICATION	CR without LF - send buffer then add char
WITHOUT_CLASSIFICATION	add into buffer
WITHOUT_CLASSIFICATION	either end of buffer or a line separator char
WITHOUT_CLASSIFICATION	check adapter
WITHOUT_CLASSIFICATION	can throw the same exception, if there is no this(Project) ctor.
WITHOUT_CLASSIFICATION	now we instantiate
WITHOUT_CLASSIFICATION	set up project references.
WITHOUT_CLASSIFICATION	Our current message output status. Follows Project.MSG_XXX.
WITHOUT_CLASSIFICATION	null
WITHOUT_CLASSIFICATION	expect the worst
WITHOUT_CLASSIFICATION	this is the list of lu
WITHOUT_CLASSIFICATION	cycle through given args
WITHOUT_CLASSIFICATION	set the flag to display the targets and quit
WITHOUT_CLASSIFICATION	eat up next arg if present, default to build.xml
WITHOUT_CLASSIFICATION	we don't have any more args to recognize!
WITHOUT_CLASSIFICATION	if it's no other arg, it may be the target
WITHOUT_CLASSIFICATION	if buildFile was not specified on the command line,
WITHOUT_CLASSIFICATION	but -find then search for it
WITHOUT_CLASSIFICATION	make sure buildfile exists
WITHOUT_CLASSIFICATION	make sure it's not a directory (this falls into the ultra paranoid lets check everything category
WITHOUT_CLASSIFICATION	Load the property files specified by -propertyfile
WITHOUT_CLASSIFICATION	ensure that -D properties take precedence
WITHOUT_CLASSIFICATION	check if the target file exists in the current directory
WITHOUT_CLASSIFICATION	change to parent directory
WITHOUT_CLASSIFICATION	refresh our file handle
WITHOUT_CLASSIFICATION	use a system manager that prevents from System.exit()
WITHOUT_CLASSIFICATION	SecurityManager can not be installed here for backwards compatibility reasons (PD). Needs to be loaded prior to ant class if we are going to implement it. System.setSecurityManager(new NoExitSecurityManager());
WITHOUT_CLASSIFICATION	set the thread priorities
WITHOUT_CLASSIFICATION	we cannot set the priority here.
WITHOUT_CLASSIFICATION	set user-define properties
WITHOUT_CLASSIFICATION	proxy setup if enabled
WITHOUT_CLASSIFICATION	make sure that we have a target to execute
WITHOUT_CLASSIFICATION	Add the default listener
WITHOUT_CLASSIFICATION	find the target with the longest name
WITHOUT_CLASSIFICATION	split the targets in top-level and sub-targets depending on the presence of a description
WITHOUT_CLASSIFICATION	shouldn't need to check but...
WITHOUT_CLASSIFICATION	now, start printing the targets and their descriptions
WITHOUT_CLASSIFICATION	got a bit annoyed that I couldn't find a pad function
WITHOUT_CLASSIFICATION	<String,String>
WITHOUT_CLASSIFICATION	At least one constructor is guaranteed to be there, but check anyway.
WITHOUT_CLASSIFICATION	is the zip file in the cache
WITHOUT_CLASSIFICATION	store the token just read for next time
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	add the types of the parent project
WITHOUT_CLASSIFICATION	ignore path elements which are not valid relative to the project
WITHOUT_CLASSIFICATION	Expecting an exception to be thrown by this call: IllegalArgumentException: wrong number of Arguments
WITHOUT_CLASSIFICATION	we need to search the components of the path to see if we can find the class we want.
WITHOUT_CLASSIFICATION	default to the global setting and then see if this class belongs to a package which has been designated to use a specific loader first (this one or the parent one)
WITHOUT_CLASSIFICATION	we need to search the components of the path to see if we can find the class we want.
WITHOUT_CLASSIFICATION	try and load from this loader if the parent either didn't find it or wasn't consulted.
WITHOUT_CLASSIFICATION	this loader was first but it didn't find it - try the parent
WITHOUT_CLASSIFICATION	<URL>
WITHOUT_CLASSIFICATION	<URL>
WITHOUT_CLASSIFICATION	<URL>
WITHOUT_CLASSIFICATION	Delegate to the parent:
WITHOUT_CLASSIFICATION	Note: could cause overlaps in case ClassLoader.this.parent has matches.
WITHOUT_CLASSIFICATION	ClassLoader.this.parent is already delegated to from ClassLoader.getResources, no need:
WITHOUT_CLASSIFICATION	Normal case.
WITHOUT_CLASSIFICATION	Inverted.
WITHOUT_CLASSIFICATION	already defined
WITHOUT_CLASSIFICATION	define the package now
WITHOUT_CLASSIFICATION	ioe.printStackTrace();
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	Not significant for the class loader.
WITHOUT_CLASSIFICATION	Not significant for the class loader.
WITHOUT_CLASSIFICATION	{tasks, types}
WITHOUT_CLASSIFICATION	add the parsed namespaces of the parent project
WITHOUT_CLASSIFICATION	we need to search the components of the path to see if we can find the class we want.
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	don't have to check for public, since getConstructor finds public constructors only.
WITHOUT_CLASSIFICATION	set default value, can be changed by the user
WITHOUT_CLASSIFICATION	too bad
WITHOUT_CLASSIFICATION	must have same validity; then if they are valid they must also be the same:
WITHOUT_CLASSIFICATION	namespace that does not contain antlib
WITHOUT_CLASSIFICATION	Already processed
WITHOUT_CLASSIFICATION	there to stop error messages being "null"
WITHOUT_CLASSIFICATION	if this is left out, bad things happen. like all build files break on the first element encountered.
WITHOUT_CLASSIFICATION	a fishing expedition :- ignore errors if antlib not present
WITHOUT_CLASSIFICATION	class of problem
WITHOUT_CLASSIFICATION	running under an IDE that doesn't set ANT_HOME
WITHOUT_CLASSIFICATION	look up the name
WITHOUT_CLASSIFICATION	we are defined, so it is an instantiation problem
WITHOUT_CLASSIFICATION	start with instantiating the class.
WITHOUT_CLASSIFICATION	here we successfully loaded the class or failed.
WITHOUT_CLASSIFICATION	success: proceed with more steps
WITHOUT_CLASSIFICATION	hey, there is nothing wrong with us
WITHOUT_CLASSIFICATION	<Thread,Task>
WITHOUT_CLASSIFICATION	<ThreadGroup,Task>
WITHOUT_CLASSIFICATION	If the listeners already has this listener, do nothing
WITHOUT_CLASSIFICATION	we need to build the hashtable dynamically
WITHOUT_CLASSIFICATION	sanity check
WITHOUT_CLASSIFICATION	try the current classloader
WITHOUT_CLASSIFICATION	throw further
WITHOUT_CLASSIFICATION	only the first build exception is reported
WITHOUT_CLASSIFICATION	Make sure we exist
WITHOUT_CLASSIFICATION	Currently visiting this node, so have a cycle
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	create a new Vector to avoid ConcurrentModificationExc when the listeners get added/removed while we are in fire
WITHOUT_CLASSIFICATION	sanity check ourselves, if we've been asked to build nothing then we should complain
WITHOUT_CLASSIFICATION	Sort and run the dependency tree. Sorting checks if all the targets (and dependencies) exist, and if there is any cycle in the dependency graph.
WITHOUT_CLASSIFICATION	We first run a DFS based sort using each root as a starting node. This creates the minimum sequence of Targets to the root node(s). We then do a sort on any remaining unVISITED targets. This is unnecessary for doing our build, but it catches circular dependencies or missing Targets on the entire dependency tree, not just on the Targets that depend on the build Target.
WITHOUT_CLASSIFICATION	no warning, this is not changing anything
WITHOUT_CLASSIFICATION	Check for old id behaviour
WITHOUT_CLASSIFICATION	Inform IH to clear the cache
WITHOUT_CLASSIFICATION	register this as the current task on the current thread.
WITHOUT_CLASSIFICATION	Make sure that
WITHOUT_CLASSIFICATION	ignore this if the object does not have a set project method or the method is private/protected.
WITHOUT_CLASSIFICATION	override facility for subclasses to put custom hashtables in
WITHOUT_CLASSIFICATION	-------------------- Hook management --------------------
WITHOUT_CLASSIFICATION	-------------------- Methods to override --------------------
WITHOUT_CLASSIFICATION	If next has handled the property
WITHOUT_CLASSIFICATION	try to get it from the project or keys Backward compatibility
WITHOUT_CLASSIFICATION	-------------------- Default implementation -------------------- Methods used to support the default behavior and provide backward compatibility. Some will be deprecated, you should avoid calling them.
WITHOUT_CLASSIFICATION	user (CLI) properties take precedence
WITHOUT_CLASSIFICATION	-------------------- Getting properties --------------------
WITHOUT_CLASSIFICATION	-------------------- Property parsing -------------------- Moved from ProjectHelper. You can override the static method - this is used for backward compatibility (for code that calls the parse method in ProjectHelper).
WITHOUT_CLASSIFICATION	search for the next instance of $ from the 'prev' position
WITHOUT_CLASSIFICATION	if we are at the end of the string, we tack on a $ then move past it
WITHOUT_CLASSIFICATION	peek ahead to see if the next char is a property or not not a property: insert the char as a literal
WITHOUT_CLASSIFICATION	backwards compatibility two $ map to one mode
WITHOUT_CLASSIFICATION	new behaviour: $X maps to $X for all values of X!='$'
WITHOUT_CLASSIFICATION	property found, extract its name or bail on a typo
WITHOUT_CLASSIFICATION	no more $ signs found if there is any tail to the file, append it
WITHOUT_CLASSIFICATION	empty
WITHOUT_CLASSIFICATION	The children are added to after this cloning
WITHOUT_CLASSIFICATION	Make sure the dependency is not empty string
WITHOUT_CLASSIFICATION	Make sure that depends attribute does not end in a ,
WITHOUT_CLASSIFICATION	A project helper may process multiple files. We'll keep track of them - to avoid loops and to allow caching. The caching will probably accelerate things like <antCall>. The key is the absolute file, the value is a processed tree. Since the tree is composed of UE and RC - it can be reused ! protected Hashtable processedFiles=new Hashtable();
WITHOUT_CLASSIFICATION	public Hashtable getProcessedFiles() { return processedFiles; }
WITHOUT_CLASSIFICATION	-------------------- Parse method --------------------
WITHOUT_CLASSIFICATION	Identify the class loader we will be using. Ant may be in a webapp or embedded in a different app
WITHOUT_CLASSIFICATION	First, try the system property
WITHOUT_CLASSIFICATION	A JDK1.3 'service' ( like in JAXP ). That will plug a helper automatically if in CLASSPATH, with the right META-INF/services.
WITHOUT_CLASSIFICATION	This code is needed by EBCDIC and other strange systems. It's a fix for bugs reported in xerces
WITHOUT_CLASSIFICATION	try next method
WITHOUT_CLASSIFICATION	-------------------- Static utils, used by most helpers ----------------
WITHOUT_CLASSIFICATION	reflect these into the target
WITHOUT_CLASSIFICATION	id attribute must be set externally
WITHOUT_CLASSIFICATION	needed since project properties are not accessible
WITHOUT_CLASSIFICATION	<UnknownElement>
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	<String,String>
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	reflect these into the target
WITHOUT_CLASSIFICATION	id attribute must be set externally
WITHOUT_CLASSIFICATION	Attributes
WITHOUT_CLASSIFICATION	configure attributes of the object and it's children. If it is a task container, defer the configuration till the task container attempts to use the task
WITHOUT_CLASSIFICATION	plain impossible to get here, maybeConfigure should have thrown an exception.
WITHOUT_CLASSIFICATION	Finished executing the task, null it to allow GC do its job If this UE is used again, a new "realthing" will be made
WITHOUT_CLASSIFICATION	Do the runtime
WITHOUT_CLASSIFICATION	UnknownElement always has an associated target
WITHOUT_CLASSIFICATION	return elementName;
WITHOUT_CLASSIFICATION	Are the names the same ?
WITHOUT_CLASSIFICATION	Are attributes the same ?
WITHOUT_CLASSIFICATION	Are the sub elements the same ?
WITHOUT_CLASSIFICATION	hidden constructor
WITHOUT_CLASSIFICATION	create the file
WITHOUT_CLASSIFICATION	do some writing to it
WITHOUT_CLASSIFICATION	calendar stuff.
WITHOUT_CLASSIFICATION	not included, do nothing
WITHOUT_CLASSIFICATION	not included, to nothing
WITHOUT_CLASSIFICATION	<RuntimeConfigurable>
WITHOUT_CLASSIFICATION	<String>
WITHOUT_CLASSIFICATION	Configure the object
WITHOUT_CLASSIFICATION	Most likely an UnknownElement
WITHOUT_CLASSIFICATION	Children (this is a shadow of UnknownElement#children)
WITHOUT_CLASSIFICATION	poly type
WITHOUT_CLASSIFICATION	Text
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	store the token just read for next time
WITHOUT_CLASSIFICATION	a task container - anything could happen - just add the child to the container
WITHOUT_CLASSIFICATION	Is the text the same? Need to use equals on the string and not on the stringbuffer as equals on the string buffer does not compare the contents.
WITHOUT_CLASSIFICATION	Assume that this is an not supported attribute type thrown for example by a dymanic attribute task Do nothing
WITHOUT_CLASSIFICATION	on Windows and Unix, we can ignore delimiters and still have enough information to tokenize correctly.
WITHOUT_CLASSIFICATION	we are on a dos style system so this path could be a drive spec. We look at the next token
WITHOUT_CLASSIFICATION	we know we are on a DOS style platform and the next path starts with a slash or backslash, so we know this is a drive spec
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	ignore ";" and get the next token
WITHOUT_CLASSIFICATION	this path could be a drive spec, so look at the next token
WITHOUT_CLASSIFICATION	it indeed is a drive spec, get the next bit
WITHOUT_CLASSIFICATION	implicit else: ignore the ':' since we have either a UNIX or a relative path
WITHOUT_CLASSIFICATION	Miscellaneous typical temporary files
WITHOUT_CLASSIFICATION	CVS
WITHOUT_CLASSIFICATION	SCCS
WITHOUT_CLASSIFICATION	Visual SourceSafe
WITHOUT_CLASSIFICATION	Subversion
WITHOUT_CLASSIFICATION	set in/excludes to reasonable defaults if needed:
WITHOUT_CLASSIFICATION	if no basedir and no includes, nothing to do:
WITHOUT_CLASSIFICATION	skip abs. paths not under basedir, if set:
WITHOUT_CLASSIFICATION	skip non-abs. paths if basedir == null:
WITHOUT_CLASSIFICATION	we are going to scan everything anyway
WITHOUT_CLASSIFICATION	Empty
WITHOUT_CLASSIFICATION	will be caught and redirected to Ant's logging system
WITHOUT_CLASSIFICATION	will be caught and redirected to Ant's logging system
WITHOUT_CLASSIFICATION	removing base from path yields no change; path not child of base
WITHOUT_CLASSIFICATION	package-private
WITHOUT_CLASSIFICATION	do the "singleton" initialization
WITHOUT_CLASSIFICATION	Add the explicit resource collections to the archive.
WITHOUT_CLASSIFICATION	EOL was "\r\n"
WITHOUT_CLASSIFICATION	don't have to check for interface, since then taskClass would be abstract too.
WITHOUT_CLASSIFICATION	ignore this if the class being used as a task does not have a set location method.
WITHOUT_CLASSIFICATION	ignore this if the class being used as a task does not have a set project method.
WITHOUT_CLASSIFICATION	put in the newroots map the include patterns without wildcard tokens
WITHOUT_CLASSIFICATION	only scan directories that can include matched files or directories
WITHOUT_CLASSIFICATION	may be on a case insensitive file system. We want the results to show what's really on the disk, so we need to double check.
WITHOUT_CLASSIFICATION	adapt currentelement to the case we've actually found
WITHOUT_CLASSIFICATION	I am the only one so I have to close the reader
WITHOUT_CLASSIFICATION	I am the only one so I have to close the reader
WITHOUT_CLASSIFICATION	get parameters
WITHOUT_CLASSIFICATION	Calculate the EOL string per the current config
WITHOUT_CLASSIFICATION	assume (eol == CrLf.LF || eol == CrLf.UNIX)
WITHOUT_CLASSIFICATION	Add/Remove tabs
WITHOUT_CLASSIFICATION	Add missing EOF character
WITHOUT_CLASSIFICATION	Mask, block from being edited, all characters in constants.
WITHOUT_CLASSIFICATION	The current character is always emitted.
WITHOUT_CLASSIFICATION	Fall tru
WITHOUT_CLASSIFICATION	Fall tru
WITHOUT_CLASSIFICATION	Fall tru
WITHOUT_CLASSIFICATION	Fall tru
WITHOUT_CLASSIFICATION	Fall tru
WITHOUT_CLASSIFICATION	EOL
WITHOUT_CLASSIFICATION	EOL was "\n"
WITHOUT_CLASSIFICATION	EOL was "\r\r\n"
WITHOUT_CLASSIFICATION	EOL was "\r"
WITHOUT_CLASSIFICATION	If source at EOF and lookAhead is ctrl-z, return EOF (NOT ctrl-z)
WITHOUT_CLASSIFICATION	if source is EOF but last character was NOT ctrl-z, return ctrl-z
WITHOUT_CLASSIFICATION	Return current look-ahead
WITHOUT_CLASSIFICATION	EOL was "\r\r" - handle as two consecutive "\r" and "\r"
WITHOUT_CLASSIFICATION	Instance initializer: Executes just after the super() call in this class's constructor.
WITHOUT_CLASSIFICATION	Return copy so that the call must call setEof() to change the state of fixCRLF
WITHOUT_CLASSIFICATION	Return copy so that the call must call setEol() to change the state of fixCRLF
WITHOUT_CLASSIFICATION	Return copy so that the caller must call setTab() to change the state of fixCRLF.
WITHOUT_CLASSIFICATION	If I'm removing an EOF character, do so first so that the other filters don't see that character.
WITHOUT_CLASSIFICATION	Change all EOL characters to match the calculated EOL string. If configured to do so, append a trailing EOL so that the file ends on a EOL.
WITHOUT_CLASSIFICATION	If filtering Java source, prevent changes to whitespace in character and string literals.
WITHOUT_CLASSIFICATION	Works like clone() but doesn't show up in the Javadocs
WITHOUT_CLASSIFICATION	getConstants is a static method, no need to pass in the object
WITHOUT_CLASSIFICATION	this field will hold unnnn right after reading a non latin character afterwards it will be truncated of one char every call to read
WITHOUT_CLASSIFICATION	replace the last 0s by the chars contained in s
WITHOUT_CLASSIFICATION	line started with comment
WITHOUT_CLASSIFICATION	----------------------------------------- Predefined tokenizers -----------------------------------------
WITHOUT_CLASSIFICATION	write everything up to the from
WITHOUT_CLASSIFICATION	write the replacement to
WITHOUT_CLASSIFICATION	search again
WITHOUT_CLASSIFICATION	write the remaining characters
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	-------------------------------------------- Tokenizer Classes (impls moved to oata.util) --------------------------------------------
WITHOUT_CLASSIFICATION	-------------------------------------------------------- static utility methods - could be placed somewhere else --------------------------------------------------------
WITHOUT_CLASSIFICATION	Remove start and end quotes if field is a String
WITHOUT_CLASSIFICATION	default buffer size
WITHOUT_CLASSIFICATION	Stateless
WITHOUT_CLASSIFICATION	singletons - since all state is in the context
WITHOUT_CLASSIFICATION	we are in an imported file.
WITHOUT_CLASSIFICATION	top level file
WITHOUT_CLASSIFICATION	?? OK ??
WITHOUT_CLASSIFICATION	use default if not file or file not found
WITHOUT_CLASSIFICATION	Set the location of the implicit target associated with the project tag
WITHOUT_CLASSIFICATION	Ignore attributes from unknown uris
WITHOUT_CLASSIFICATION	Ignore attributes from unknown uris
WITHOUT_CLASSIFICATION	What's the difference between id and name ?
WITHOUT_CLASSIFICATION	no further processing
WITHOUT_CLASSIFICATION	set explicitly before starting ?
WITHOUT_CLASSIFICATION	Default for baseDir is the location of the build file.
WITHOUT_CLASSIFICATION	check whether the user has specified an absolute path
WITHOUT_CLASSIFICATION	Check if this target is in the current build file
WITHOUT_CLASSIFICATION	If the name has not already been defined define it
WITHOUT_CLASSIFICATION	In an impored file (and not completely ignoring the project tag)
WITHOUT_CLASSIFICATION	UnknownElement is used for tasks and data types - with delayed eval
WITHOUT_CLASSIFICATION	Nested element
WITHOUT_CLASSIFICATION	Task included in a target ( including the default one ).
WITHOUT_CLASSIFICATION	container.addTask(task); This is a nop in UE: task.init();
WITHOUT_CLASSIFICATION	simple name specified == path in list + name
WITHOUT_CLASSIFICATION	if the suffix does not starts with a '.' and the char preceding the suffix is a '.', we assume the user wants to remove the '.' as well (see docs)
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	use default if not file or file not found
WITHOUT_CLASSIFICATION	check whether the user has specified an absolute path
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	Start handling SAX events
WITHOUT_CLASSIFICATION	Let parent resume handling SAX events
WITHOUT_CLASSIFICATION	implicit target must be first on dependency list
WITHOUT_CLASSIFICATION	take care of dependencies
WITHOUT_CLASSIFICATION	swallow here, will be thrown again in UnknownElement.maybeConfigure if the problem persists.
WITHOUT_CLASSIFICATION	XXX task.setTaskType(tag);
WITHOUT_CLASSIFICATION	task can contain other tasks - no other nested elements possible
WITHOUT_CLASSIFICATION	taskcontainer nested element can contain other tasks - no other nested elements possible
WITHOUT_CLASSIFICATION	Should not happen
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	the first hex character if a character needs to be escaped
WITHOUT_CLASSIFICATION	the second hex character if a character needs to be escaped
WITHOUT_CLASSIFICATION	initialize the above 3 arrays
WITHOUT_CLASSIFICATION	#8031: first try Java 1.4.
WITHOUT_CLASSIFICATION	Fine, Java 1.3 or earlier, do it by hand.
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	Bad URI, pass this on.
WITHOUT_CLASSIFICATION	Unexpected target exception? Should not happen.
WITHOUT_CLASSIFICATION	Reflection problems? Should not happen, debug.
WITHOUT_CLASSIFICATION	Fallback method for Java 1.3 or earlier.
WITHOUT_CLASSIFICATION	Ignore malformed exception
WITHOUT_CLASSIFICATION	if it's not an ASCII character, break here, and use UTF-8 encoding
WITHOUT_CLASSIFICATION	record the fact that it's escaped
WITHOUT_CLASSIFICATION	we saw some non-ascii character
WITHOUT_CLASSIFICATION	get UTF-8 bytes for the remaining sub-string
WITHOUT_CLASSIFICATION	for each byte
WITHOUT_CLASSIFICATION	for non-ascii character: make it positive, then escape
WITHOUT_CLASSIFICATION	firstly check if the tools jar is already in the classpath
WITHOUT_CLASSIFICATION	just check whether this throws an exception
WITHOUT_CLASSIFICATION	couldn't find compiler - try to find tools.jar based on java.home setting
WITHOUT_CLASSIFICATION	Found in java.home as given
WITHOUT_CLASSIFICATION	add any jars in the directory
WITHOUT_CLASSIFICATION	now update the class.path property
WITHOUT_CLASSIFICATION	overlay specified properties file (if any), which overrides project settings
WITHOUT_CLASSIFICATION	ignore because properties file is not required
WITHOUT_CLASSIFICATION	private static final int ATTR_NORMAL = 0; private static final int ATTR_BRIGHT = 1;
WITHOUT_CLASSIFICATION	private static final int ATTR_UNDERLINE = 3; private static final int ATTR_BLINK = 5; private static final int ATTR_REVERSE = 7; private static final int ATTR_HIDDEN = 8;
WITHOUT_CLASSIFICATION	private static final int FG_BLACK = 30;
WITHOUT_CLASSIFICATION	private static final int FG_YELLOW = 33;
WITHOUT_CLASSIFICATION	private static final int FG_WHITE = 37;
WITHOUT_CLASSIFICATION	Ignore - we will use the defaults.
WITHOUT_CLASSIFICATION	Ignore - We do not want this to stop the build.
WITHOUT_CLASSIFICATION	Fall through
WITHOUT_CLASSIFICATION	Whether or not an actual update is required - we don't need to update if the original file doesn't exist
WITHOUT_CLASSIFICATION	Use the logger config
WITHOUT_CLASSIFICATION	Since task log category includes target, we don't really need this message
WITHOUT_CLASSIFICATION	Driver doesn't understand the URL
WITHOUT_CLASSIFICATION	It's a task - append the target
WITHOUT_CLASSIFICATION	finally, lets execute the compiler!!
WITHOUT_CLASSIFICATION	Doesn't make sense for c-l. Use the logger config
WITHOUT_CLASSIFICATION	Could not get the required information
WITHOUT_CLASSIFICATION	Create a ZipFileSet for this file, and pass it up.
WITHOUT_CLASSIFICATION	now we need to populate the compiler adapter
WITHOUT_CLASSIFICATION	If no webxml file is specified, it's an error.
WITHOUT_CLASSIFICATION	One cannot RMIC an interface for "classic" RMI (JRMP)
WITHOUT_CLASSIFICATION	otherwise perform a timestamp comparison - at least
WITHOUT_CLASSIFICATION	don't know how to handle that - a IDL file doesn't have a corresponding Java source for example.
WITHOUT_CLASSIFICATION	Move the generated source file to the base directory. If base directory and sourcebase are the same, the generated sources are already in place.
WITHOUT_CLASSIFICATION	no source file generated, nothing to move
WITHOUT_CLASSIFICATION	not the requested type
WITHOUT_CLASSIFICATION	full-pathname specified == path in list simple name specified == path in list
WITHOUT_CLASSIFICATION	we only get here if an exception has been thrown
WITHOUT_CLASSIFICATION	full-pathname specified == parent dir of path in list
WITHOUT_CLASSIFICATION	not the requested type
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	the rest of the method treats single jar like a nested path with one file
WITHOUT_CLASSIFICATION	Check for \r, \r\n and \r\r\n Regard \r\r not followed by \n as two lines
WITHOUT_CLASSIFICATION	scan base dirs to build up compile lists only if a specific classname is not given
WITHOUT_CLASSIFICATION	simple name specified == parent dir + name
WITHOUT_CLASSIFICATION	class found but restricted name; this is actually the case we're looking for in JDK 1.3+, so catch the exception and return
WITHOUT_CLASSIFICATION	Can return null to represent the bootstrap class loader. see API docs of Class.getClassLoader.
WITHOUT_CLASSIFICATION	must be "add"
WITHOUT_CLASSIFICATION	first off, make sure that we've got a srcdir and destdir
WITHOUT_CLASSIFICATION	log options used
WITHOUT_CLASSIFICATION	patch file into the fileset
WITHOUT_CLASSIFICATION	set our parent dir
WITHOUT_CLASSIFICATION	Compare the destination with the temp file
WITHOUT_CLASSIFICATION	Eof has been reached
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	don't reposition when we've reached the end of the stream
WITHOUT_CLASSIFICATION	if at eolcount == 0 and trailing characters of string are CTRL-Zs, set eofStr
WITHOUT_CLASSIFICATION	keep searching for the first ^Z
WITHOUT_CLASSIFICATION	Trailing characters are ^Zs Construct new line and eofStr
WITHOUT_CLASSIFICATION	permissible values for compression attribute
WITHOUT_CLASSIFICATION	default
WITHOUT_CLASSIFICATION	shadow of the above if the value is altered in execute
WITHOUT_CLASSIFICATION	For directories:
WITHOUT_CLASSIFICATION	Renamed version of original file, if it exists
WITHOUT_CLASSIFICATION	Add the files found in groupfileset to fileset
WITHOUT_CLASSIFICATION	can also handle empty archives
WITHOUT_CLASSIFICATION	quick exit if the target is up to date
WITHOUT_CLASSIFICATION	Close the output stream.
WITHOUT_CLASSIFICATION	we are recreating the archive, need all resources
WITHOUT_CLASSIFICATION	delete a bogus ZIP file (but only if it's not the original one)
WITHOUT_CLASSIFICATION	In this case using java.util.zip will not work because it does not permit a zero-entry archive. Must create it manually.
WITHOUT_CLASSIFICATION	Cf. PKZIP specification.
WITHOUT_CLASSIFICATION	P K
WITHOUT_CLASSIFICATION	remainder zeros
WITHOUT_CLASSIFICATION	Create.
WITHOUT_CLASSIFICATION	we are recreating the archive, need all resources
WITHOUT_CLASSIFICATION	initialResources is not empty
WITHOUT_CLASSIFICATION	initialResources is not empty
WITHOUT_CLASSIFICATION	in this case all files from origin map to the fullPath attribute of the zipfileset at destination
WITHOUT_CLASSIFICATION	we are recreating the archive, need all resources
WITHOUT_CLASSIFICATION	we are recreating the archive, need all resources
WITHOUT_CLASSIFICATION	no emptyBehavior handling since the FileSet version will take care of it.
WITHOUT_CLASSIFICATION	Backwards compatibility forces us to repeat the logic of getResourcesToAdd(FileSet[], ...) here once again.
WITHOUT_CLASSIFICATION	we will return initialResources anyway, no reason to scan further.
WITHOUT_CLASSIFICATION	we will return initialResources anyway, no reason to scan further.
WITHOUT_CLASSIFICATION	ZIPs store time with a granularity of 2 seconds, round up
WITHOUT_CLASSIFICATION	don't add directories we've already added. no warning if we try, it is harmless in and of itself
WITHOUT_CLASSIFICATION	A "refid" attribute for a node within a Path object.
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	default
WITHOUT_CLASSIFICATION	default
WITHOUT_CLASSIFICATION	ZIPs store time with a granularity of 2 seconds, round up
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	duplicate equal to add, so we continue
WITHOUT_CLASSIFICATION	Store data into a byte[]
WITHOUT_CLASSIFICATION	may be altered in validate
WITHOUT_CLASSIFICATION	set user-defined properties
WITHOUT_CLASSIFICATION	set Java built-in properties separately, b/c we won't inherit them.
WITHOUT_CLASSIFICATION	set all properties from calling project
WITHOUT_CLASSIFICATION	has been set explicitly
WITHOUT_CLASSIFICATION	Are we trying to call the target in which we are defined (or the build file if this is a top level task)?
WITHOUT_CLASSIFICATION	help the gc
WITHOUT_CLASSIFICATION	remove duplicate properties - last property wins Needed for backward compatibility
WITHOUT_CLASSIFICATION	Now add all references that are not defined in the subproject, if inheritRefs is true
WITHOUT_CLASSIFICATION	not Clonable
WITHOUT_CLASSIFICATION	ignore this if the class being referenced does not have a set project method.
WITHOUT_CLASSIFICATION	basedir and ant.file get special treatment in execute()
WITHOUT_CLASSIFICATION	don't re-set user properties, avoid the warning message
WITHOUT_CLASSIFICATION	no user property
WITHOUT_CLASSIFICATION	@note: it is a string and not a file to handle relative/absolute otherwise a relative file will be resolved based on the current basedir.
WITHOUT_CLASSIFICATION	Get the (sub)-Project instance currently in use. @return Project @since Ant 1.7
WITHOUT_CLASSIFICATION	check to make sure that the given dir isn't a symlink the comparison of absolute path and canonical path catches this
WITHOUT_CLASSIFICATION	validation logic
WITHOUT_CLASSIFICATION	this isnt strictly needed, but by being fussy now, we can change implementation details later
WITHOUT_CLASSIFICATION	special case single jar handling with signedjar attribute set
WITHOUT_CLASSIFICATION	single jar processing
WITHOUT_CLASSIFICATION	return here.
WITHOUT_CLASSIFICATION	set up our mapping policy
WITHOUT_CLASSIFICATION	no mapper? use the identity policy
WITHOUT_CLASSIFICATION	determine the destination filename via the mapper
WITHOUT_CLASSIFICATION	we only like simple mappers.
WITHOUT_CLASSIFICATION	DO NOT SET THE -signedjar OPTION if source==dest unless you like fielding hotspot crash reports
WITHOUT_CLASSIFICATION	add -tsa operations if declared
WITHOUT_CLASSIFICATION	JAR source is required
WITHOUT_CLASSIFICATION	alias is required for signing
WITHOUT_CLASSIFICATION	restore the lastModified attribute
WITHOUT_CLASSIFICATION	we normally compare destination with source
WITHOUT_CLASSIFICATION	but if no dest is specified, compare source to source
WITHOUT_CLASSIFICATION	if, by any means, the destfile and source match,
WITHOUT_CLASSIFICATION	we check the presence of signatures on lazy signing
WITHOUT_CLASSIFICATION	unsigned or non-lazy self signings are always false
WITHOUT_CLASSIFICATION	if they are different, the timestamps are used
WITHOUT_CLASSIFICATION	just log this
WITHOUT_CLASSIFICATION	fileutils
WITHOUT_CLASSIFICATION	--- Fields --
WITHOUT_CLASSIFICATION	Keep a hashtable of attributes added by this task. This task is allow to override its own properties but not other properties. So we need to keep track of which properties we've added.
WITHOUT_CLASSIFICATION	Error generated during parsing
WITHOUT_CLASSIFICATION	Parser with specified options can't be built
WITHOUT_CLASSIFICATION	I/O error
WITHOUT_CLASSIFICATION	Set the prefix for this node to include its tag name.
WITHOUT_CLASSIFICATION	Pass the container to the processing of this node,
WITHOUT_CLASSIFICATION	now, iterate through children.
WITHOUT_CLASSIFICATION	For each child, pass the object added by processNode to its children -- in other word, each object can pass information along to its children.
WITHOUT_CLASSIFICATION	The value of an id attribute of this node.
WITHOUT_CLASSIFICATION	Is there an id attribute?
WITHOUT_CLASSIFICATION	Now, iterate through the attributes adding them.
WITHOUT_CLASSIFICATION	The main conditional logic -- if the attribute is somehow "special" (i.e., it has known semantic meaning) then deal with it appropriately.
WITHOUT_CLASSIFICATION	ID has already been found above.
WITHOUT_CLASSIFICATION	A "path" attribute for a node within a Path object.
WITHOUT_CLASSIFICATION	A node identifying a new path
WITHOUT_CLASSIFICATION	For the text node, add a property.
WITHOUT_CLASSIFICATION	If the containing object was a String, then use it as the ID.
WITHOUT_CLASSIFICATION	If this attribute was added by this task, then we append this value to the existing value. We use the setProperty method which will forcibly override the property if it already exists. We need to put these properties into the project when we read them, though (instead of keeping them outside of the project and batch adding them at the end) to allow other properties to reference them.
WITHOUT_CLASSIFICATION	Never include the "refid" attribute as part of the attribute name.
WITHOUT_CLASSIFICATION	Otherwise, return it appended unless property to hide it is set.
WITHOUT_CLASSIFICATION	Expose members for extensibility
WITHOUT_CLASSIFICATION	delegate this way around to support subclasses that overwrite getFile
WITHOUT_CLASSIFICATION	we arent fully defined yet. this is an error unless we are in an antlib, in which case the resource name is determined automatically. NB: URIs in the ant core package will be "" at this point.
WITHOUT_CLASSIFICATION	convert the URI to a resource
WITHOUT_CLASSIFICATION	handle new style full paths to an antlib, in which all but the forward slashes are allowed.
WITHOUT_CLASSIFICATION	if we haven't already named an XML file, it gets antlib.xml
WITHOUT_CLASSIFICATION	convert from a package to a path
WITHOUT_CLASSIFICATION	Here if there is an error
WITHOUT_CLASSIFICATION	Fall Through
WITHOUT_CLASSIFICATION	log at a lower level
WITHOUT_CLASSIFICATION	Ignore the problem
WITHOUT_CLASSIFICATION	trick to evoke "basedir not set" if null:
WITHOUT_CLASSIFICATION	no sources = nothing to compare; no targets = nothing to delete:
WITHOUT_CLASSIFICATION	Members
WITHOUT_CLASSIFICATION	Members
WITHOUT_CLASSIFICATION	If we are a reference, create a Path from the reference
WITHOUT_CLASSIFICATION	for NetWare and OS/2, piggy-back on Windows, since here and in the apply code, the same assumptions can be made as with windows - that \\ is an OK separator, and do comparisons case-insensitive.
WITHOUT_CLASSIFICATION	If the element starts with the configured prefix, then convert the prefix to the configured 'to' value.
WITHOUT_CLASSIFICATION	Currently, we deal with only two path formats: Unix and Windows And Unix is everything that is not Windows
WITHOUT_CLASSIFICATION	may be altered in validateSetup may be altered in validateSetup
WITHOUT_CLASSIFICATION	validate our setup
WITHOUT_CLASSIFICATION	Currently, we deal with only two path formats: Unix and Windows And Unix is everything that is not Windows (with the exception for NetWare and OS/2 below)
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	Get the list of path components in canonical form
WITHOUT_CLASSIFICATION	Apply the path prefix map
WITHOUT_CLASSIFICATION	Now convert the path and file separator characters from the current os to the target os.
WITHOUT_CLASSIFICATION	Place the result into the specified property, unless setonempty == false
WITHOUT_CLASSIFICATION	Iterate over the map entries and apply each one. Stop when one of the entries actually changes the element.
WITHOUT_CLASSIFICATION	Note I'm using "!=" to see if we got a new object back from the apply method.
WITHOUT_CLASSIFICATION	We applied one, so we're done
WITHOUT_CLASSIFICATION	Determine the separator strings. The dirsep and pathsep attributes override the targetOS settings.
WITHOUT_CLASSIFICATION	override with pathsep=
WITHOUT_CLASSIFICATION	override with dirsep=
WITHOUT_CLASSIFICATION	Check if used by attributes
WITHOUT_CLASSIFICATION	? is there an xml api for this ?
WITHOUT_CLASSIFICATION	ATTRIBUTES
WITHOUT_CLASSIFICATION	CONSTRUCTORS / INITIALIZERS
WITHOUT_CLASSIFICATION	ACCESSOR METHODS
WITHOUT_CLASSIFICATION	Validate mandatory attributes
WITHOUT_CLASSIFICATION	the property attribute must have access to a property file
WITHOUT_CLASSIFICATION	Make sure property exists in property file
WITHOUT_CLASSIFICATION	Default is empty string
WITHOUT_CLASSIFICATION	Avoid runtime problem on pre 1.4 when compiling post 1.4
WITHOUT_CLASSIFICATION	end of finally
WITHOUT_CLASSIFICATION	look for and print warnings
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	ATTRIBUTES
WITHOUT_CLASSIFICATION	ACCESSOR METHODS
WITHOUT_CLASSIFICATION	line separators in values and tokens are "\n" in order to compare with the file contents, replace them as needed
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	Ignore Exception
WITHOUT_CLASSIFICATION	no errors so far
WITHOUT_CLASSIFICATION	If we don't know the type of the line and we are in emacs mode, it will be an error, because in this mode, jikes won't always print "error", but sometimes other keywords like "Syntax". We should look for all those keywords.
WITHOUT_CLASSIFICATION	plain impossible
WITHOUT_CLASSIFICATION	We must check if the process was not stopped before being here
WITHOUT_CLASSIFICATION	the process is not terminated, if this is really a timeout and not a manual stop then kill it.
WITHOUT_CLASSIFICATION	CORE / MAIN BODY
WITHOUT_CLASSIFICATION	get the recorder entry
WITHOUT_CLASSIFICATION	set the values on the recorder
WITHOUT_CLASSIFICATION	INNER CLASSES
WITHOUT_CLASSIFICATION	create a recorder entry
WITHOUT_CLASSIFICATION	Use '/' to calculate digest based on file name. This is required in order to get the same result on different platforms.
WITHOUT_CLASSIFICATION	Read the checksum from disk.
WITHOUT_CLASSIFICATION	A separate directory was explicitly declared
WITHOUT_CLASSIFICATION	Empty statement
WITHOUT_CLASSIFICATION	can either be a property name string or a file
WITHOUT_CLASSIFICATION	file is on wrong format, swallow
WITHOUT_CLASSIFICATION	try to be smart, not to be fooled by a weird directory name
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	Close the output stream.
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	File is Comparable, so sorting is trivial
WITHOUT_CLASSIFICATION	Loop over the checksums and generate a total hash.
WITHOUT_CLASSIFICATION	Add the digest for the file content
WITHOUT_CLASSIFICATION	Add the file path
WITHOUT_CLASSIFICATION	two characters form the hex value.
WITHOUT_CLASSIFICATION	We just set the prefix for this fileset, and pass it up.
WITHOUT_CLASSIFICATION	Check if the service is configured correctly
WITHOUT_CLASSIFICATION	if we haven't got the manifest yet, attempt to get it now and have manifest be the final merge
WITHOUT_CLASSIFICATION	time to write the manifest
WITHOUT_CLASSIFICATION	encoding must be UTF8 as specified in the specs.
WITHOUT_CLASSIFICATION	version-info blankline
WITHOUT_CLASSIFICATION	header newline
WITHOUT_CLASSIFICATION	If this is the same name specified in 'manifest', this is the manifest to use
WITHOUT_CLASSIFICATION	we add this to our group of fileset manifests
WITHOUT_CLASSIFICATION	assuming 'skip' otherwise don't warn if skip has been requested explicitly, warn if user didn't set the attribute
WITHOUT_CLASSIFICATION	Hide warning also as it makes no sense since the filesetmanifest attribute itself has been hidden
WITHOUT_CLASSIFICATION	need to handle manifest as a special check
WITHOUT_CLASSIFICATION	if it doesn't exist, it will get created anyway, don't bother with any up-to-date checks.
WITHOUT_CLASSIFICATION	no existing archive
WITHOUT_CLASSIFICATION	Ignore close exception
WITHOUT_CLASSIFICATION	we want to save this info if we are going to make another pass
WITHOUT_CLASSIFICATION	couldn't find it - must be on path
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	looks like nothing from META-INF should be added and the check is not case insensitive. see sun.misc.JarIndex
WITHOUT_CLASSIFICATION	name newline
WITHOUT_CLASSIFICATION	longest match comes first
WITHOUT_CLASSIFICATION	META-INF would be skipped anyway, avoid index for manifest-only jars.
WITHOUT_CLASSIFICATION	a file, not in the root since the jar may be one without directory entries, add the parent dir of this file as well.
WITHOUT_CLASSIFICATION	protected
WITHOUT_CLASSIFICATION	if the target file is not there, then it can't be up-to-date
WITHOUT_CLASSIFICATION	if the source file isn't there, throw an exception
WITHOUT_CLASSIFICATION	by default, messages are always displayed
WITHOUT_CLASSIFICATION	need to keep the package private version for backwards compatibility
WITHOUT_CLASSIFICATION	we must keep two lists since other classes may modify the filesets Vector (it is package private) without us noticing
WITHOUT_CLASSIFICATION	add the main fileset to the list of filesets to process.
WITHOUT_CLASSIFICATION	check if tar is out of date with respect to each fileset
WITHOUT_CLASSIFICATION	warn or GNU
WITHOUT_CLASSIFICATION	don't add "" to the archive
WITHOUT_CLASSIFICATION	'/' is appended for compatibility with the zip task.
WITHOUT_CLASSIFICATION	we would end up adding "" to the archive
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	permissible values for compression attribute
WITHOUT_CLASSIFICATION	override permissions if set explicitly
WITHOUT_CLASSIFICATION	only override permissions if set explicitly
WITHOUT_CLASSIFICATION	non-file resources
WITHOUT_CLASSIFICATION	non-file resources
WITHOUT_CLASSIFICATION	extend Comparison; retain for BC only
WITHOUT_CLASSIFICATION	when writing to the log, we'll see what's happening:
WITHOUT_CLASSIFICATION	The initial version used DateFormat.SHORT for the time format, which ignores seconds. If we want seconds as well, we need DateFormat.MEDIUM, which in turn would break all old build files. First try to parse with DateFormat.SHORT and if that fails with MEDIUM - throw an exception if both fail.
WITHOUT_CLASSIFICATION	only set if successful to this point:
WITHOUT_CLASSIFICATION	deal with the resource collections
WITHOUT_CLASSIFICATION	deal with filesets in a special way since the task originally also used the directories and Union won't return them.
WITHOUT_CLASSIFICATION	use this to create file and deal with non-writable files
WITHOUT_CLASSIFICATION	When we leave this block we can be sure all data is really stored in main memory before the new threads start, the new threads will for sure load the data from main memory. This probably is slightly paranoid.
WITHOUT_CLASSIFICATION	start any daemon threads
WITHOUT_CLASSIFICATION	now run main threads in limited numbers... start initial batch of threads
WITHOUT_CLASSIFICATION	start the timeout thread
WITHOUT_CLASSIFICATION	now find available running slots for the remaining threads
WITHOUT_CLASSIFICATION	continue on outer while loop to get another available slot
WITHOUT_CLASSIFICATION	if we got here all slots in use, so sleep until something happens
WITHOUT_CLASSIFICATION	doesn't java know interruptions are rude? just pretend it didn't happen and go about out business. sheesh!
WITHOUT_CLASSIFICATION	are all threads finished
WITHOUT_CLASSIFICATION	who would interrupt me at a time like this?
WITHOUT_CLASSIFICATION	now did any of the threads throw an exception
WITHOUT_CLASSIFICATION	return a bogus number
WITHOUT_CLASSIFICATION	Should be safe to parse
WITHOUT_CLASSIFICATION	Check name is "antlib"
WITHOUT_CLASSIFICATION	include locally for screening purposes
WITHOUT_CLASSIFICATION	try to find the executable
WITHOUT_CLASSIFICATION	now try to resolve against the dir if given
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	throw further
WITHOUT_CLASSIFICATION	only the first build exception is reported
WITHOUT_CLASSIFICATION	include locally for screening purposes
WITHOUT_CLASSIFICATION	mustSearchPath is false, or no PATH or not found - keep our fingers crossed.
WITHOUT_CLASSIFICATION	Quick fail if this is not a valid OS for the command
WITHOUT_CLASSIFICATION	possibly altered in prepareExec
WITHOUT_CLASSIFICATION	hand osfamily off to Os class, if set
WITHOUT_CLASSIFICATION	this command will be executed only on the specified OS
WITHOUT_CLASSIFICATION	default directory to the project's base directory
WITHOUT_CLASSIFICATION	assume the worst
WITHOUT_CLASSIFICATION	test for and handle a forced process death
WITHOUT_CLASSIFICATION	show the command
WITHOUT_CLASSIFICATION	close the output file if required
WITHOUT_CLASSIFICATION	Same as regular <copy> task... see at end-of-file!
WITHOUT_CLASSIFICATION	Override Task#init
WITHOUT_CLASSIFICATION	Instantiate it
WITHOUT_CLASSIFICATION	Default config of <mycopy> for our purposes.
WITHOUT_CLASSIFICATION	Override Task#execute
WITHOUT_CLASSIFICATION	The destination of the files to copy
WITHOUT_CLASSIFICATION	The complete list of files to copy
WITHOUT_CLASSIFICATION	Copy all the necessary out-of-date files
WITHOUT_CLASSIFICATION	Do we need to perform further processing?
WITHOUT_CLASSIFICATION	nope ;-)
WITHOUT_CLASSIFICATION	Get rid of all files not listed in the source filesets.
WITHOUT_CLASSIFICATION	Get rid of empty directories on the destination side
WITHOUT_CLASSIFICATION	want to keep toDir itself
WITHOUT_CLASSIFICATION	ds returns the directories in lexicographic order. iterating through the array backwards means we are deleting leaves before their parent nodes - thus making sure (well, more likely) that the directories are empty when we try to delete them.
WITHOUT_CLASSIFICATION	Test here again to avoid method call for non-directories!
WITHOUT_CLASSIFICATION	must match the default value of Ant#inheritAll
WITHOUT_CLASSIFICATION	must match the default value of Ant#inheritRefs
WITHOUT_CLASSIFICATION	<TargetElement>
WITHOUT_CLASSIFICATION	check if one of the builds failed in keep going mode
WITHOUT_CLASSIFICATION	REVISIT: Defaults to the target name that contains this task if not specified.
WITHOUT_CLASSIFICATION	END class SubAnt
WITHOUT_CLASSIFICATION	Child elements.
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	Empty
WITHOUT_CLASSIFICATION	this command will be executed only on the specified OS
WITHOUT_CLASSIFICATION	default directory to the project's base directory
WITHOUT_CLASSIFICATION	assume the worst
WITHOUT_CLASSIFICATION	show the command
WITHOUT_CLASSIFICATION	close the output file if required
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	This directory may have become empty... We need to re-query its children list!
WITHOUT_CLASSIFICATION	Various copy attributes/subelements of <copy> passed thru to <mycopy>
WITHOUT_CLASSIFICATION	List of files that must be copied, irrelevant from the fact that they are newer or not than the destination.
WITHOUT_CLASSIFICATION	cf. NB #47191
WITHOUT_CLASSIFICATION	Should work whether or not redirector.inputStream == null:
WITHOUT_CLASSIFICATION	#24918: send standard input to the process by default.
WITHOUT_CLASSIFICATION	test if os match
WITHOUT_CLASSIFICATION	exec command on system runtime
WITHOUT_CLASSIFICATION	copy input and error to the output stream
WITHOUT_CLASSIFICATION	starts pumping away the generated output/error
WITHOUT_CLASSIFICATION	Wait for everything to finish
WITHOUT_CLASSIFICATION	check its exit value
WITHOUT_CLASSIFICATION	Inner class for continually pumping the input stream during Process's runtime.
WITHOUT_CLASSIFICATION	The size of buffers to be used
WITHOUT_CLASSIFICATION	Attributes.
WITHOUT_CLASSIFICATION	Attribute setters.
WITHOUT_CLASSIFICATION	Nested element creators.
WITHOUT_CLASSIFICATION	treat empty nested text as no text
WITHOUT_CLASSIFICATION	if binary check if incompatible attributes are used
WITHOUT_CLASSIFICATION	Sanity check our inputs.
WITHOUT_CLASSIFICATION	Nothing to concatenate!
WITHOUT_CLASSIFICATION	no need to do anything
WITHOUT_CLASSIFICATION	Log using WARN so it displays in 'quiet' mode.
WITHOUT_CLASSIFICATION	ensure that the parent dir of dest file exists
WITHOUT_CLASSIFICATION	non-existing files are not allowed
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	Create a ZipFileSet for this file, and pass it up.
WITHOUT_CLASSIFICATION	We just set the prefix for this fileset, and pass it up.
WITHOUT_CLASSIFICATION	by default, messages are always displayed
WITHOUT_CLASSIFICATION	close the output file if required
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	Initialize to the size of the first text fragment, with the hopes that it's the only one.
WITHOUT_CLASSIFICATION	Append the fragment -- we defer property replacement until later just in case we get a partial property in a fragment.
WITHOUT_CLASSIFICATION	If using resources, disallow inline text. This is similar to using GNU 'cat' with file arguments -- stdin is simply ignored.
WITHOUT_CLASSIFICATION	package
WITHOUT_CLASSIFICATION	package
WITHOUT_CLASSIFICATION	If the file being added is WEB-INF/web.xml, we warn if it's not the one specified in the "webxml" attribute - or if it's being added twice, meaning the same file is specified by the "webxml" attribute and in a <fileset> element.
WITHOUT_CLASSIFICATION	by default, we add the file.
WITHOUT_CLASSIFICATION	a web.xml file was found. See if it is a duplicate or not
WITHOUT_CLASSIFICATION	a second web.xml file, so skip it
WITHOUT_CLASSIFICATION	check to see if we warn or not
WITHOUT_CLASSIFICATION	no added file, yet
WITHOUT_CLASSIFICATION	there is no web.xml file, so add it
WITHOUT_CLASSIFICATION	and remember that we did
WITHOUT_CLASSIFICATION	validation
WITHOUT_CLASSIFICATION	discard most of really big resources
WITHOUT_CLASSIFICATION	open up the resource
WITHOUT_CLASSIFICATION	impossible since our processLine doesn't throw an IOException
WITHOUT_CLASSIFICATION	There have been reports that 300 files could be compiled so 250 is a conservative approach
WITHOUT_CLASSIFICATION	We assume, that everything jikes writes goes to standard output, not to standard error. The option -Xstdout that is given to Jikes in Javac.doJikesCompile() should guarantee this. At least I hope so. :)
WITHOUT_CLASSIFICATION	if we have a RedirectorElement, return a decoy
WITHOUT_CLASSIFICATION	0 --> srcIndex
WITHOUT_CLASSIFICATION	srcIndex --> targetIndex
WITHOUT_CLASSIFICATION	targets are already absolute file names
WITHOUT_CLASSIFICATION	targetIndex --> end
WITHOUT_CLASSIFICATION	0 --> targetIndex
WITHOUT_CLASSIFICATION	0 --> srcIndex
WITHOUT_CLASSIFICATION	contains AbstractFileSet (both DirSet and FileSet)
WITHOUT_CLASSIFICATION	need to reset the stream handler to restart reading of pipes; go ahead and do it always w/ nested redirectors
WITHOUT_CLASSIFICATION	need to reset the stream handler to restart reading of pipes; go ahead and do it always w/ nested redirectors
WITHOUT_CLASSIFICATION	targets are already absolute file names
WITHOUT_CLASSIFICATION	targetIndex --> srcIndex
WITHOUT_CLASSIFICATION	srcIndex --> end
WITHOUT_CLASSIFICATION	srcIndex --> end
WITHOUT_CLASSIFICATION	no targetFilePos
WITHOUT_CLASSIFICATION	fill in source file names
WITHOUT_CLASSIFICATION	this is skipEmpty == false
WITHOUT_CLASSIFICATION	if there is a new priority, and it is different, change it
WITHOUT_CLASSIFICATION	catch permissions denial and keep going
WITHOUT_CLASSIFICATION	-- XSLTLiaison
WITHOUT_CLASSIFICATION	Write the properties file back out
WITHOUT_CLASSIFICATION	Finally set the property
WITHOUT_CLASSIFICATION	Try parsing the line into an integer.
WITHOUT_CLASSIFICATION	-- XSLTProcess
WITHOUT_CLASSIFICATION	check if liaison wants to log errors using us as logger
WITHOUT_CLASSIFICATION	If we enter here, it means that the stylesheet is supplied via style attribute
WITHOUT_CLASSIFICATION	shouldn't throw out deprecation warnings before we know, the wrong version has been used.
WITHOUT_CLASSIFICATION	if we have an in file and out then process them
WITHOUT_CLASSIFICATION	-- make sure destination directory exists...
WITHOUT_CLASSIFICATION	Process all the files marked for styling
WITHOUT_CLASSIFICATION	Process all the directories marked for styling
WITHOUT_CLASSIFICATION	only resource collections, there better be some
WITHOUT_CLASSIFICATION	anything else is a classname
WITHOUT_CLASSIFICATION	-- processXML
WITHOUT_CLASSIFICATION	Param
WITHOUT_CLASSIFICATION	New env var...append the previous one if we have it.
WITHOUT_CLASSIFICATION	Mac
WITHOUT_CLASSIFICATION	validation
WITHOUT_CLASSIFICATION	If failed to process document, must delete target document, or it will not attempt to process it the second time
WITHOUT_CLASSIFICATION	if processor wasn't specified, see if TraX is available. If not, default it to xalan, depending on which is in the classpath
WITHOUT_CLASSIFICATION	We call liason.configure() and then liaison.setStylesheet() so that the internal variables of liaison can be set up
WITHOUT_CLASSIFICATION	If we are here we can set the stylesheet as a resource
WITHOUT_CLASSIFICATION	If we are here we cannot set the stylesheet as a resource, but we can set it as a file. So, we make an attempt to get it as a file
WITHOUT_CLASSIFICATION	Give always a slash as file separator, so the stylesheet could be sure about that Use '.' so a dir+"/"+name would not result in an absolute path
WITHOUT_CLASSIFICATION	only 'name' and 'value' exist.
WITHOUT_CLASSIFICATION	a value must be of a given type say boolean|integer|string that are mostly used.
WITHOUT_CLASSIFICATION	-- class Attribute
WITHOUT_CLASSIFICATION	-- class Factory
WITHOUT_CLASSIFICATION	error message strings
WITHOUT_CLASSIFICATION	at this point there is one trailing space to remove, if the list is not empty.
WITHOUT_CLASSIFICATION	now exit here if the property is already set
WITHOUT_CLASSIFICATION	and add any files if also defined
WITHOUT_CLASSIFICATION	add path URLs
WITHOUT_CLASSIFICATION	create the URL ant equivalent of fileToConvert.toURI().toURL().toExternalForm();
WITHOUT_CLASSIFICATION	if we run into a timeout, the run-away thread shall not make the VM run forever - if no timeout occurs, Ant's main thread will still be there to let the new thread finish
WITHOUT_CLASSIFICATION	Use the VM launcher instead of shell launcher on VMS
WITHOUT_CLASSIFICATION	Builds a command launcher for the OS and JVM we are running under.
WITHOUT_CLASSIFICATION	Try using a JDK 1.3 launcher
WITHOUT_CLASSIFICATION	Ignore and keep trying
WITHOUT_CLASSIFICATION	OS/2
WITHOUT_CLASSIFICATION	Windows XP/2000/NT
WITHOUT_CLASSIFICATION	Windows 98/95 - need to use an auxiliary script
WITHOUT_CLASSIFICATION	OpenVMS
WITHOUT_CLASSIFICATION	Generic
WITHOUT_CLASSIFICATION	Make sure we do not recurse forever
WITHOUT_CLASSIFICATION	Just try to use what we got
WITHOUT_CLASSIFICATION	Since we "look ahead" before adding, there's one last env var.
WITHOUT_CLASSIFICATION	Just try to see how much we got
WITHOUT_CLASSIFICATION	OS/2 - use same mechanism as Windows 2000
WITHOUT_CLASSIFICATION	Determine if we're running under XP/2000/NT or 98/95
WITHOUT_CLASSIFICATION	Windows 98/95
WITHOUT_CLASSIFICATION	Windows XP/2000/NT/2003
WITHOUT_CLASSIFICATION	On most systems one could use: /bin/sh -c env
WITHOUT_CLASSIFICATION	Some systems have /bin/env, others /usr/bin/env, just try
WITHOUT_CLASSIFICATION	rely on PATH
WITHOUT_CLASSIFICATION	rely on PATH
WITHOUT_CLASSIFICATION	noop default encoding used
WITHOUT_CLASSIFICATION	By default, use the shell launcher for VMS
WITHOUT_CLASSIFICATION	add the process to the list of those to destroy if the VM exits
WITHOUT_CLASSIFICATION	#31928: forcibly kill it before continuing.
WITHOUT_CLASSIFICATION	remove the process to the list of those to destroy if the VM exits
WITHOUT_CLASSIFICATION	on openvms even exit value signals failure; for other platforms nonzero exit value signals failure
WITHOUT_CLASSIFICATION	Get key including "="
WITHOUT_CLASSIFICATION	Nb: using default locale as key is a env name
WITHOUT_CLASSIFICATION	Find the key in the current enviroment copy and remove it.
WITHOUT_CLASSIFICATION	Use the original casiness of the key
WITHOUT_CLASSIFICATION	Add the key to the enviromnent copy
WITHOUT_CLASSIFICATION	parse the VMS logicals into required format ("VAR=VAL[,VAL2]")
WITHOUT_CLASSIFICATION	further equivalence name of previous logical
WITHOUT_CLASSIFICATION	new logical?
WITHOUT_CLASSIFICATION	already got this logical from a higher order table
WITHOUT_CLASSIFICATION	the arguments:
WITHOUT_CLASSIFICATION	IllegalAccess, IllegalArgument, ClassCast
WITHOUT_CLASSIFICATION	Locate the auxiliary script
WITHOUT_CLASSIFICATION	Build the command
WITHOUT_CLASSIFICATION	add the environment as logicals to the DCL script
WITHOUT_CLASSIFICATION	empty
WITHOUT_CLASSIFICATION	empty
WITHOUT_CLASSIFICATION	Locate method Runtime.exec(String[] cmdarray, String[] envp, File dir)
WITHOUT_CLASSIFICATION	Use cmd.exe to change to the specified drive and directory before running the command
WITHOUT_CLASSIFICATION	Use cmd.exe to change to the specified directory before running the command
WITHOUT_CLASSIFICATION	need to set the project on unknown element
WITHOUT_CLASSIFICATION	protected and private methods
WITHOUT_CLASSIFICATION	Attempt complete directory renames, if any, first.
WITHOUT_CLASSIFICATION	files to move
WITHOUT_CLASSIFICATION	Is this file still available to be moved?
WITHOUT_CLASSIFICATION	if this is the last time through the loop then move will not occur, but that's what we want
WITHOUT_CLASSIFICATION	maybe io error?
WITHOUT_CLASSIFICATION	found a file
WITHOUT_CLASSIFICATION	on an io error list() can return null
WITHOUT_CLASSIFICATION	Whether this VM is 1.4+ (but also check executable != null).
WITHOUT_CLASSIFICATION	------------------------------------------ general Javadoc arguments
WITHOUT_CLASSIFICATION	---------------------------- javadoc2 arguments for default doclet
WITHOUT_CLASSIFICATION	add the links arguments
WITHOUT_CLASSIFICATION	should be impossible
WITHOUT_CLASSIFICATION	is the href a valid URL
WITHOUT_CLASSIFICATION	ok - just skip
WITHOUT_CLASSIFICATION	return
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	validation logic
WITHOUT_CLASSIFICATION	Ignore Exception
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	Only try to move if this is the last mapped file and one of the mappings isn't to itself
WITHOUT_CLASSIFICATION	createArgument(true) is necessary to make sure -locale is the first argument (required in 1.3+).
WITHOUT_CLASSIFICATION	Go through the tokens one at a time, updating the elements array and issuing warnings where appropriate.
WITHOUT_CLASSIFICATION	Ant javadoc task rules for group attribute: Args are comma-delimited. Each arg is 2 space-delimited strings. E.g., group="XSLT_Packages org.apache.xalan.xslt, XPath_Packages org.apache.xalan.xpath"
WITHOUT_CLASSIFICATION	add the group arguments
WITHOUT_CLASSIFICATION	Javadoc 1.4 parameters
WITHOUT_CLASSIFICATION	The tag element is not used as a fileset, but specifies the tag directly.
WITHOUT_CLASSIFICATION	The tag element is used as a fileset. Parse all the files and create -tag arguments.
WITHOUT_CLASSIFICATION	Not 1.4+.
WITHOUT_CLASSIFICATION	Javadoc 1.2/1.3 parameters:
WITHOUT_CLASSIFICATION	If using an external file, write the command line options to it
WITHOUT_CLASSIFICATION	If using an external file, write the command line options to it
WITHOUT_CLASSIFICATION	No reason to change the working directory as all filenames and path components have been resolved already. Avoid problems with command line length in some environments.
WITHOUT_CLASSIFICATION	are there any java files in this directory?
WITHOUT_CLASSIFICATION	We don't need to care for duplicates here, Path.list does it for us.
WITHOUT_CLASSIFICATION	CheckStyle:MethodNameCheck OFF - bc
WITHOUT_CLASSIFICATION	Methods below all add specific selectors
WITHOUT_CLASSIFICATION	convert a class name into a resource
WITHOUT_CLASSIFICATION	set the property
WITHOUT_CLASSIFICATION	line feed
WITHOUT_CLASSIFICATION	by default, remove matching empty dirs
WITHOUT_CLASSIFICATION	delete the single file
WITHOUT_CLASSIFICATION	delete the directory
WITHOUT_CLASSIFICATION	add the files from the default fileset:
WITHOUT_CLASSIFICATION	sort first to files, then dirs
WITHOUT_CLASSIFICATION	Plain impossible with UTF8, see http:java.sun.com/j2se/1.5.0/docs/guide/intl/encoding.doc.html fallback to platform specific anyway.
WITHOUT_CLASSIFICATION	patch the redirector to save output to a file
WITHOUT_CLASSIFICATION	verify special operations
WITHOUT_CLASSIFICATION	JAR is required
WITHOUT_CLASSIFICATION	deal with jdk1.4.2 bug:
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	now we need to populate the compiler adapter
WITHOUT_CLASSIFICATION	finally, lets execute the compiler!!
WITHOUT_CLASSIFICATION	validation
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	nonexistent resources could only occur if we already deleted something from a fileset:
WITHOUT_CLASSIFICATION	cache
WITHOUT_CLASSIFICATION	no include pattern implicitly means includes=""
WITHOUT_CLASSIFICATION	Do not process this file
WITHOUT_CLASSIFICATION	make sure facade knows about magic properties and fork setting
WITHOUT_CLASSIFICATION	deal with the resources
WITHOUT_CLASSIFICATION	Make a transaction for each resource
WITHOUT_CLASSIFICATION	Make a transaction group for the outer command
WITHOUT_CLASSIFICATION	Process all transactions
WITHOUT_CLASSIFICATION	Catch any statements not followed by ;
WITHOUT_CLASSIFICATION	Check and ignore empty statements
WITHOUT_CLASSIFICATION	Closes an unused connection after an error and doesn't rethrow a possible SQLException @since Ant 1.7
WITHOUT_CLASSIFICATION	dreaded backwards compatibility
WITHOUT_CLASSIFICATION	Throw an exception if cvs exited with error. (Iulian)
WITHOUT_CLASSIFICATION	re-implement legacy behaviour:
WITHOUT_CLASSIFICATION	Check if not real cvsroot => set it to null
WITHOUT_CLASSIFICATION	Check if not real cvsrsh => set it to null
WITHOUT_CLASSIFICATION	Check if not real tag => set it to null
WITHOUT_CLASSIFICATION	close the output file if required
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	req req
WITHOUT_CLASSIFICATION	scan source directories and dest directory to build up compile lists
WITHOUT_CLASSIFICATION	there is no need to expand properties here as that happens when Transaction.addText is called; to do so here would be an error.
WITHOUT_CLASSIFICATION	there are places (in this file, and perhaps elsewhere, where it is assumed that null is an acceptable parameter.
WITHOUT_CLASSIFICATION	We can't do it ourselves as jCVS is GPLed, a third party task outside of jakarta repositories would be possible though (SB).
WITHOUT_CLASSIFICATION	Just call the getExecuteStreamHandler() and let it handle the semantics of instantiation or retrieval.
WITHOUT_CLASSIFICATION	we are chmodding the given directory
WITHOUT_CLASSIFICATION	may be altered in validateAttributes
WITHOUT_CLASSIFICATION	will be removed in validateAttributes
WITHOUT_CLASSIFICATION	make sure we don't have an illegal set of options
WITHOUT_CLASSIFICATION	deal with the single file
WITHOUT_CLASSIFICATION	deal with the ResourceCollections
WITHOUT_CLASSIFICATION	Step (1) - beware of the ZipFileSet
WITHOUT_CLASSIFICATION	not a fileset or contains non-file resources
WITHOUT_CLASSIFICATION	copying of dirs is trivial and can be done for non-file resources as well as for real files.
WITHOUT_CLASSIFICATION	a not-directory file resource needs special treatment
WITHOUT_CLASSIFICATION	do all the copy operations now...
WITHOUT_CLASSIFICATION	restrict to out-of-date resources
WITHOUT_CLASSIFICATION	clean up again, so this instance can be used a second time
WITHOUT_CLASSIFICATION	reuse the array created by the mapper
WITHOUT_CLASSIFICATION	reuse the array created by the mapper
WITHOUT_CLASSIFICATION	now patch in all system properties
WITHOUT_CLASSIFICATION	is the keystore a file
WITHOUT_CLASSIFICATION	must be a URL - just pass as is
WITHOUT_CLASSIFICATION	Gump friendly - don't mess with the core loader if only classpath
WITHOUT_CLASSIFICATION	Construct a new class loader
WITHOUT_CLASSIFICATION	The param is "parentFirst"
WITHOUT_CLASSIFICATION	public
WITHOUT_CLASSIFICATION	shield it from being closed by a filtering StreamPumper
WITHOUT_CLASSIFICATION	shield it from being closed by a filtering StreamPumper
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	set read-only properties CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	Are any other references held ? Can we 'close' the loader so it removes the locks on jars ? a new one will be created.
WITHOUT_CLASSIFICATION	The core loader must be reverse reverse=true;
WITHOUT_CLASSIFICATION	This allows the core loader to load optional tasks without delegating
WITHOUT_CLASSIFICATION	wait for the StreamPumpers to finish
WITHOUT_CLASSIFICATION	Ignore exception
WITHOUT_CLASSIFICATION	Normalize the reference directory (containing the jar)
WITHOUT_CLASSIFICATION	Normalize the current file
WITHOUT_CLASSIFICATION	No match, so bail out!
WITHOUT_CLASSIFICATION	Finally assign the property with the manifest classpath
WITHOUT_CLASSIFICATION	try to find a MAX_LINE_LENGTH byte section
WITHOUT_CLASSIFICATION	continuation line
WITHOUT_CLASSIFICATION	refresh attribute in case of multivalued attributes.
WITHOUT_CLASSIFICATION	the merge file always wins
WITHOUT_CLASSIFICATION	the merge file always wins, even for Class-Path
WITHOUT_CLASSIFICATION	add in the warnings
WITHOUT_CLASSIFICATION	This should be the manifest version
WITHOUT_CLASSIFICATION	add it back
WITHOUT_CLASSIFICATION	shouldn't happen - ignore
WITHOUT_CLASSIFICATION	create a vector and add in the warnings for all the sections
WITHOUT_CLASSIFICATION	off by default
WITHOUT_CLASSIFICATION	set up logging
WITHOUT_CLASSIFICATION	execute the get
WITHOUT_CLASSIFICATION	dont do any progress, unless asked
WITHOUT_CLASSIFICATION	set the timestamp to the file date.
WITHOUT_CLASSIFICATION	set up the URL connection
WITHOUT_CLASSIFICATION	Create as many directory prefixes as parent levels to traverse, in addition to the reference directory itself
WITHOUT_CLASSIFICATION	Find the longest prefix shared by the current file and the reference directory.
WITHOUT_CLASSIFICATION	We have a match! Add as many ../ as parent directory traversed to get the relative path
WITHOUT_CLASSIFICATION	Manifest's ClassPath: attribute always uses forward slashes '/', and is space-separated. Ant will properly format it on 72 columns with proper line continuation
WITHOUT_CLASSIFICATION	a continuation on the first line is a continuation of the name - concatenate this line and the name
WITHOUT_CLASSIFICATION	required required
WITHOUT_CLASSIFICATION	modify the headers NB: things like user authentication could go in here too.
WITHOUT_CLASSIFICATION	prepare Java 1.1 style credentials
WITHOUT_CLASSIFICATION	we do not use the sun impl for portability, and always use our own implementation for consistent testing
WITHOUT_CLASSIFICATION	connect to the remote site (may take some time)
WITHOUT_CLASSIFICATION	next test for a 304 result (HTTP only)
WITHOUT_CLASSIFICATION	test for 401 result (HTTP only)
WITHOUT_CLASSIFICATION	REVISIT: at this point even non HTTP connections may support the if-modified-since behaviour -we just check the date of the content and skip the write if it is not newer. Some protocols (FTP) don't include dates, of course.
WITHOUT_CLASSIFICATION	this three attempt trick is to get round quirks in different Java implementations. Some of them take a few goes to bind property; we ignore the first couple of such failures.
WITHOUT_CLASSIFICATION	successful download
WITHOUT_CLASSIFICATION	this happens if the projecthelper was not registered with the project.
WITHOUT_CLASSIFICATION	methods to register and unregister shutdown hooks
WITHOUT_CLASSIFICATION	check to see if the shutdown hook methods exists (support pre-JDK 1.3 VMs)
WITHOUT_CLASSIFICATION	wait to add shutdown hook as needed
WITHOUT_CLASSIFICATION	it just won't be added as a shutdown hook... :(
WITHOUT_CLASSIFICATION	shutdown already is in progress
WITHOUT_CLASSIFICATION	Ignore Exception
WITHOUT_CLASSIFICATION	shutdown already is in progress
WITHOUT_CLASSIFICATION	I don't think we can use File - different rules for relative paths.
WITHOUT_CLASSIFICATION	this happens if ant is used with a project helper that doesn't set the import.
WITHOUT_CLASSIFICATION	Paths are relative to the build file they're imported from, not the current directory (same as entity includes).
WITHOUT_CLASSIFICATION	whether or not this ProcessDestroyer has been registered as a shutdown hook
WITHOUT_CLASSIFICATION	whether or not this ProcessDestroyer is currently running as shutdown hook
WITHOUT_CLASSIFICATION	this should return quickly, since it basically is a NO-OP.
WITHOUT_CLASSIFICATION	the thread didn't die in time it should not kill any processes unexpectedly
WITHOUT_CLASSIFICATION	if this list is empty, register the shutdown hook
WITHOUT_CLASSIFICATION	need to load Task via system classloader or the new task we want to define will never be a Task but always be wrapped into a TaskAdapter.
WITHOUT_CLASSIFICATION	generate classpath, because kjc doesn't support sourcepath.
WITHOUT_CLASSIFICATION	generate the clsspath
WITHOUT_CLASSIFICATION	kjc don't have bootclasspath option.
WITHOUT_CLASSIFICATION	Process the factory class
WITHOUT_CLASSIFICATION	Process the factory path
WITHOUT_CLASSIFICATION	Process the processor options
WITHOUT_CLASSIFICATION	set up the javac options
WITHOUT_CLASSIFICATION	then add the Apt options
WITHOUT_CLASSIFICATION	finally invoke APT Use reflection to be able to build on all JDKs:
WITHOUT_CLASSIFICATION	rethrow build exceptions
WITHOUT_CLASSIFICATION	cast everything else to a build exception
WITHOUT_CLASSIFICATION	Call the compile() method
WITHOUT_CLASSIFICATION	jvc doesn't support bootclasspath dir (-bootclasspath) so we'll emulate it for compatibility and convenience.
WITHOUT_CLASSIFICATION	jvc doesn't support an extension dir (-extdir) so we'll emulate it for compatibility and convenience.
WITHOUT_CLASSIFICATION	jvc has no option for source-path so we will add it to classpath.
WITHOUT_CLASSIFICATION	Add the Classpath before the "internal" one.
WITHOUT_CLASSIFICATION	Enable MS-Extensions and ...
WITHOUT_CLASSIFICATION	... do not display a Message about this.
WITHOUT_CLASSIFICATION	Do not display Logo
WITHOUT_CLASSIFICATION	add the files
WITHOUT_CLASSIFICATION	run
WITHOUT_CLASSIFICATION	as new versions of java come out, add them to this test
WITHOUT_CLASSIFICATION	on java<=1.3 the modern falls back to classic if it is not found but on java>=1.4 we just bail out early
WITHOUT_CLASSIFICATION	does the modern compiler exist?
WITHOUT_CLASSIFICATION	CheckStyle:ConstantNameCheck ON CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	Combine the build classpath with the system classpath, in an order determined by the value of build.sysclasspath
WITHOUT_CLASSIFICATION	For -sourcepath, use the "sourcepath" value if present. Otherwise default to the "srcdir" value.
WITHOUT_CLASSIFICATION	Just add "sourcepath" to classpath ( for JDK1.1 ) as well as "bootclasspath" and "extdirs"
WITHOUT_CLASSIFICATION	If the buildfile specifies sourcepath="", then don't output any sourcepath.
WITHOUT_CLASSIFICATION	If the buildfile specifies sourcepath="", then don't output any sourcepath.
WITHOUT_CLASSIFICATION	support for -source 1.1 and -source 1.2 has been added with JDK 1.4.2 - and isn't present in 1.5.0 either
WITHOUT_CLASSIFICATION	1.5.0 doesn't support -source 1.1
WITHOUT_CLASSIFICATION	Use the VM launcher instead of shell launcher on VMS for java
WITHOUT_CLASSIFICATION	gcj doesn't support bootclasspath dir (-bootclasspath) so we'll emulate it for compatibility and convenience.
WITHOUT_CLASSIFICATION	gcj doesn't support an extension dir (-extdir) so we'll emulate it for compatibility and convenience.
WITHOUT_CLASSIFICATION	Gcj has no option for source-path so we will add it to classpath.
WITHOUT_CLASSIFICATION	Use reflection to be able to build on all JDKs >= 1.1:
WITHOUT_CLASSIFICATION	no bootclasspath, therefore, get one from the java runtime
WITHOUT_CLASSIFICATION	if the user has set JIKESPATH we should add the contents as well
WITHOUT_CLASSIFICATION	reflection to avoid bootstrap/build problems
WITHOUT_CLASSIFICATION	now verify that the class has an implementation
WITHOUT_CLASSIFICATION	windows probing logic relies on the word 'windows' in the OS
WITHOUT_CLASSIFICATION	there are only four 9x platforms that we look for
WITHOUT_CLASSIFICATION	wince isn't really 9x, but crippled enough to be a muchness. Ant doesnt run on CE, anyway.
WITHOUT_CLASSIFICATION	millis per second
WITHOUT_CLASSIFICATION	get the host of a url
WITHOUT_CLASSIFICATION	Java1.5: reachable = address.isReachable(timeout 1000);
WITHOUT_CLASSIFICATION	utterly implausible, but catered for anyway
WITHOUT_CLASSIFICATION	load the parser class
WITHOUT_CLASSIFICATION	may be altered in validate
WITHOUT_CLASSIFICATION	Error messages
WITHOUT_CLASSIFICATION	plain impossible
WITHOUT_CLASSIFICATION	support for -source 1.1 and -source 1.2 has been added with JDK 1.4.2, Jikes doesn't like it
WITHOUT_CLASSIFICATION	assume this is an IOexception about un readability
WITHOUT_CLASSIFICATION	any kind of fault: not reachable.
WITHOUT_CLASSIFICATION	java1.4 or earlier
WITHOUT_CLASSIFICATION	don't know the type, should throw exception instead?
WITHOUT_CLASSIFICATION	pick a value that is good for everything
WITHOUT_CLASSIFICATION	initial state is false.
WITHOUT_CLASSIFICATION	every condition is xored against the previous one
WITHOUT_CLASSIFICATION	validate
WITHOUT_CLASSIFICATION	#now match the files
WITHOUT_CLASSIFICATION	Intentionally left blank
WITHOUT_CLASSIFICATION	private static final int GET_ENTRY = 0;
WITHOUT_CLASSIFICATION	make sure attributes are reset when working on a 'new' file.
WITHOUT_CLASSIFICATION	We have ended changelog for that particular file so we can save it
WITHOUT_CLASSIFICATION	was -1
WITHOUT_CLASSIFICATION	was -1
WITHOUT_CLASSIFICATION	There were no revisions in this changelog entry so lets move onto next file
WITHOUT_CLASSIFICATION	Reset comment to empty here as we can accumulate multiple lines in the processComment method
WITHOUT_CLASSIFICATION	We want something of the form: -d ">=YYYY-MM-dd"
WITHOUT_CLASSIFICATION	Check if list of files to check has been specified
WITHOUT_CLASSIFICATION	for now skip entries which are missing a date
WITHOUT_CLASSIFICATION	Skip dates that are too early
WITHOUT_CLASSIFICATION	Skip dates that are too late
WITHOUT_CLASSIFICATION	validate the input parameters
WITHOUT_CLASSIFICATION	build the rdiff command
WITHOUT_CLASSIFICATION	if the two substrings are longer than the original, then name contains address - so reset the name to null
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	support multiple packages
WITHOUT_CLASSIFICATION	force command not to be null
WITHOUT_CLASSIFICATION	run the cvs command
WITHOUT_CLASSIFICATION	parse the rdiff
WITHOUT_CLASSIFICATION	write the tag diff
WITHOUT_CLASSIFICATION	parse the output of the command
WITHOUT_CLASSIFICATION	it is a new file set the revision but not the prevrevision
WITHOUT_CLASSIFICATION	it is a modified file set the revision and the prevrevision
WITHOUT_CLASSIFICATION	it is a removed file
WITHOUT_CLASSIFICATION	special headers
WITHOUT_CLASSIFICATION	prepare for the auto select mechanism
WITHOUT_CLASSIFICATION	try MIME format
WITHOUT_CLASSIFICATION	SMTP auth only allowed with MIME mail
WITHOUT_CLASSIFICATION	SSL only allowed with MIME mail
WITHOUT_CLASSIFICATION	try UU format
WITHOUT_CLASSIFICATION	try plain format
WITHOUT_CLASSIFICATION	a valid mailer must be present by now
WITHOUT_CLASSIFICATION	a valid message is required
WITHOUT_CLASSIFICATION	an address to send from is required
WITHOUT_CLASSIFICATION	at least one address to send to/cc/bcc is required
WITHOUT_CLASSIFICATION	set the mimetype if not done already (and required)
WITHOUT_CLASSIFICATION	set the character set if not done already (and required)
WITHOUT_CLASSIFICATION	identify which files should be attached
WITHOUT_CLASSIFICATION	let the user know what's going to happen
WITHOUT_CLASSIFICATION	pass the params to the mailer
WITHOUT_CLASSIFICATION	send the email
WITHOUT_CLASSIFICATION	let the user know what happened
WITHOUT_CLASSIFICATION	CheckStyle:MemberNameCheck ON
WITHOUT_CLASSIFICATION	Read message from a file
WITHOUT_CLASSIFICATION	Make a limited attempt to extract a sanitized name and email address Algorithm based on the one found in Ant's MailMessage.java
WITHOUT_CLASSIFICATION	shortcut for "<address>"
WITHOUT_CLASSIFICATION	support "address (name)"
WITHOUT_CLASSIFICATION	support "(name) address"
WITHOUT_CLASSIFICATION	To work properly with national charsets we have to use implementation of interface javax.activation.DataSource
WITHOUT_CLASSIFICATION	Must be like "text/plain; charset=windows-1251"
WITHOUT_CLASSIFICATION	Aside, the JDK is clearly unaware of the Scottish 'session', which involves excessive quantities of alcohol :-)
WITHOUT_CLASSIFICATION	SMTP provider
WITHOUT_CLASSIFICATION	create the message
WITHOUT_CLASSIFICATION	set the sender
WITHOUT_CLASSIFICATION	set the reply to addresses
WITHOUT_CLASSIFICATION	Choosing character set of the mail message First: looking it from MimeType
WITHOUT_CLASSIFICATION	Assign/reassign message charset from MimeType
WITHOUT_CLASSIFICATION	Next: looking if charset having explicit definition
WITHOUT_CLASSIFICATION	Using default
WITHOUT_CLASSIFICATION	Using javax.activation.DataSource paradigm
WITHOUT_CLASSIFICATION	Assuming mime type in form "text/XXXX; charset=XXXXXX"
WITHOUT_CLASSIFICATION	Skip 'charset='
WITHOUT_CLASSIFICATION	Scanner to find our inputs list of files to process
WITHOUT_CLASSIFICATION	default srcDir to basedir
WITHOUT_CLASSIFICATION	Require destDir
WITHOUT_CLASSIFICATION	if src and dest dirs are the same, require the extension to be set, so we don't stomp every file. One could still include a file with the same extension, but ....
WITHOUT_CLASSIFICATION	File to convert where to put the results
WITHOUT_CLASSIFICATION	Build the full file names
WITHOUT_CLASSIFICATION	Make sure we're not about to clobber something
WITHOUT_CLASSIFICATION	Make intermediate directories if needed XXX JDK 1.1 doesn't have File.getParentFile,
WITHOUT_CLASSIFICATION	this.fork = s;
WITHOUT_CLASSIFICATION	TODO: use ANTLR to parse the grammar file to do this.
WITHOUT_CLASSIFICATION	if no output directory is specified, used the target's directory
WITHOUT_CLASSIFICATION	first off, make sure that we've got a from and to extension
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc CheckStyle:MemberNameCheck OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:MemberNameCheck ON CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	Error strings
WITHOUT_CLASSIFICATION	validating
WITHOUT_CLASSIFICATION	set the schema source for the doc
WITHOUT_CLASSIFICATION	set the schema source for the doc
WITHOUT_CLASSIFICATION	enable XSD
WITHOUT_CLASSIFICATION	validate the parser type
WITHOUT_CLASSIFICATION	couldnt use the xerces or jaxp calls
WITHOUT_CLASSIFICATION	enable schema checking
WITHOUT_CLASSIFICATION	turn off DTDs if desired
WITHOUT_CLASSIFICATION	schema declarations go in next
WITHOUT_CLASSIFICATION	first off, make sure that we've got a srcdir and destdir
WITHOUT_CLASSIFICATION	enable schema setFeature(XmlConstants.FEATURE_VALIDATION, false);
WITHOUT_CLASSIFICATION	this is almost implausible, but required handling
WITHOUT_CLASSIFICATION	SchemaLocation
WITHOUT_CLASSIFICATION	private Path extdirs;
WITHOUT_CLASSIFICATION	first off, make sure that we've got a srcdir
WITHOUT_CLASSIFICATION	Keep jdk 1.1 compliant so others can use this
WITHOUT_CLASSIFICATION	second CR -> EOL + possibly empty line
WITHOUT_CLASSIFICATION	first CR in this line
WITHOUT_CLASSIFICATION	LF -> EOL
WITHOUT_CLASSIFICATION	any other char
WITHOUT_CLASSIFICATION	Mac-style linebreak or EOF (or both)
WITHOUT_CLASSIFICATION	variables to hold arguments
WITHOUT_CLASSIFICATION	?? Should this be the default for ant?
WITHOUT_CLASSIFICATION	constants for the messages to suppress by flags and their corresponding properties
WITHOUT_CLASSIFICATION	other implementation variables
WITHOUT_CLASSIFICATION	classpath makes no sense
WITHOUT_CLASSIFICATION	destDir
WITHOUT_CLASSIFICATION	srcDir
WITHOUT_CLASSIFICATION	copy the source and support files
WITHOUT_CLASSIFICATION	compile the source files
WITHOUT_CLASSIFICATION	create an array of strings for input to the compiler: one array comes from the compile options, the other from the compileList
WITHOUT_CLASSIFICATION	create a single array of arguments for the compiler
WITHOUT_CLASSIFICATION	print nice output about what we are doing for the log
WITHOUT_CLASSIFICATION	need to set java.class.path property and restore it later since the NetRexx compiler has no option for the classpath
WITHOUT_CLASSIFICATION	path is mentioned in the message
WITHOUT_CLASSIFICATION	verbose level logging for suppressed messages
WITHOUT_CLASSIFICATION	error level logging for compiler errors
WITHOUT_CLASSIFICATION	warning for all warning messages
WITHOUT_CLASSIFICATION	info level for the rest.
WITHOUT_CLASSIFICATION	need to reset java.class.path property since the NetRexx compiler has no option for the classpath
WITHOUT_CLASSIFICATION	add our classpath to the mix
WITHOUT_CLASSIFICATION	add the system classpath addExistingToClasspath(classpath,System.getProperty("java.class.path"));
WITHOUT_CLASSIFICATION	XMLReader used to validation process
WITHOUT_CLASSIFICATION	turn validation on
WITHOUT_CLASSIFICATION	set the feature from the attribute list
WITHOUT_CLASSIFICATION	Sets properties
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	quick exit if the target is up to date
WITHOUT_CLASSIFICATION	ant task properties defaults CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	to report sax parsing errors CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	then check it implements XMLReader
WITHOUT_CLASSIFICATION	see if it is a SAX1 Parser
WITHOUT_CLASSIFICATION	Validates property
WITHOUT_CLASSIFICATION	for every file, we have a new instance of the validator
WITHOUT_CLASSIFICATION	if this is not a valid file: just use the uri
WITHOUT_CLASSIFICATION	Property
WITHOUT_CLASSIFICATION	I'm not fond of this pattern: "sub-method expected to throw task-cancelling exceptions". It feels too much like programming for side-effects to me...
WITHOUT_CLASSIFICATION	get files from old methods - includes and nested include
WITHOUT_CLASSIFICATION	Create the stream pumpers to forward listcab's stdout and stderr to the log note: listcab is an interactive program, and issues prompts for every new line. Therefore, make it show only with verbose logging turned on.
WITHOUT_CLASSIFICATION	Pump streams asynchronously
WITHOUT_CLASSIFICATION	A wild default for when the thread is interrupted
WITHOUT_CLASSIFICATION	Wait for the process to finish
WITHOUT_CLASSIFICATION	Wait for the end of output and error streams
WITHOUT_CLASSIFICATION	Informative summary message in case of errors
WITHOUT_CLASSIFICATION	die if cabarc fails
WITHOUT_CLASSIFICATION	Use this to prepend a message to the properties file
WITHOUT_CLASSIFICATION	======================================================================== Constructors
WITHOUT_CLASSIFICATION	======================================================================== Methods
WITHOUT_CLASSIFICATION	Create the PropertyFile
WITHOUT_CLASSIFICATION	type may be null because it wasn't set
WITHOUT_CLASSIFICATION	Default to string type which means do nothing
WITHOUT_CLASSIFICATION	Insert as a string by default
WITHOUT_CLASSIFICATION	swallow
WITHOUT_CLASSIFICATION	configure the transformer...
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	If only value is specified, the property is set to it regardless of its previous value.
WITHOUT_CLASSIFICATION	If only default is specified and the property did not exist in the property file, the property is set to default.
WITHOUT_CLASSIFICATION	If value and default are both specified and the property previously existed in the property file, the property is set to value.
WITHOUT_CLASSIFICATION	If value and default are both specified and the property did not exist in the property file, the property is set to default.
WITHOUT_CLASSIFICATION	Property type operations
WITHOUT_CLASSIFICATION	Property types
WITHOUT_CLASSIFICATION	resetting the stylesheet - reset transformer
WITHOUT_CLASSIFICATION	do we need to reset templates as well
WITHOUT_CLASSIFICATION	set parameters on each transformation, maybe something has changed (e.g. value of file name parameter)
WITHOUT_CLASSIFICATION	end of try-catch
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	WARN: Don't use the StreamSource(File) ctor. It won't work with xalan prior to 2.2 because of systemid bugs.
WITHOUT_CLASSIFICATION	Use a stream so that you can close it yourself quickly and avoid keeping the handle until the object is garbaged. (always keep control), otherwise you won't be able to delete the file quickly on windows.
WITHOUT_CLASSIFICATION	not initialized yet, so create the factory
WITHOUT_CLASSIFICATION	specific attributes for the transformer
WITHOUT_CLASSIFICATION	kept for backwards compatibility
WITHOUT_CLASSIFICATION	configure factory attributes
WITHOUT_CLASSIFICATION	use XMLCatalog as the entity resolver and URI resolver
WITHOUT_CLASSIFICATION	configure output properties
WITHOUT_CLASSIFICATION	copy the properties file
WITHOUT_CLASSIFICATION	load properties from file if specified, otherwise use Ant's properties
WITHOUT_CLASSIFICATION	add ant properties
WITHOUT_CLASSIFICATION	sort the list. Makes SCM and manual diffs easier.
WITHOUT_CLASSIFICATION	create XML document
WITHOUT_CLASSIFICATION	output properties
WITHOUT_CLASSIFICATION	build the command line from what we got the format as specified in the CCM.EXE help
WITHOUT_CLASSIFICATION	create task ok, set this task as the default one
WITHOUT_CLASSIFICATION	implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface
WITHOUT_CLASSIFICATION	build the command line from what we got the format is ccm co /t .. files as specified in the CCM.EXE help
WITHOUT_CLASSIFICATION	Default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	If configured to not care about whether the element is already checked out to the current view. Then check to see if it is checked out.
WITHOUT_CLASSIFICATION	viewpath
WITHOUT_CLASSIFICATION	ClearCase items
WITHOUT_CLASSIFICATION	-reserved
WITHOUT_CLASSIFICATION	-unreserved
WITHOUT_CLASSIFICATION	-out
WITHOUT_CLASSIFICATION	-ndata
WITHOUT_CLASSIFICATION	-version
WITHOUT_CLASSIFICATION	-nwarn
WITHOUT_CLASSIFICATION	viewpath
WITHOUT_CLASSIFICATION	build the command line from what we got the format is cleartool lsco [options...] [viewpath ...] as specified in the CLEARTOOL.EXE help
WITHOUT_CLASSIFICATION	-version
WITHOUT_CLASSIFICATION	-nwarn
WITHOUT_CLASSIFICATION	type value
WITHOUT_CLASSIFICATION	-c
WITHOUT_CLASSIFICATION	-c
WITHOUT_CLASSIFICATION	-cfile
WITHOUT_CLASSIFICATION	-cfile
WITHOUT_CLASSIFICATION	-cfile
WITHOUT_CLASSIFICATION	build the command line from what we got. the format is cleartool checkin [options...] [viewpath ...] as specified in the CLEARTOOL.EXE help
WITHOUT_CLASSIFICATION	-ptime
WITHOUT_CLASSIFICATION	Throws EjbcException if unsuccessful
WITHOUT_CLASSIFICATION	-keep
WITHOUT_CLASSIFICATION	-identical
WITHOUT_CLASSIFICATION	Check for required attributes
WITHOUT_CLASSIFICATION	build the command line from what we got. the format is cleartool mkattr [options...] [viewpath ...] as specified in the CLEARTOOL help
WITHOUT_CLASSIFICATION	-replace
WITHOUT_CLASSIFICATION	-recurse
WITHOUT_CLASSIFICATION	type
WITHOUT_CLASSIFICATION	viewpath
WITHOUT_CLASSIFICATION	viewpath
WITHOUT_CLASSIFICATION	viewpath
WITHOUT_CLASSIFICATION	ClearCase items
WITHOUT_CLASSIFICATION	ClearCase items
WITHOUT_CLASSIFICATION	-nwarn
WITHOUT_CLASSIFICATION	-c
WITHOUT_CLASSIFICATION	-c
WITHOUT_CLASSIFICATION	-cfile
WITHOUT_CLASSIFICATION	-ptime
WITHOUT_CLASSIFICATION	-keep
WITHOUT_CLASSIFICATION	build the command line from what we got the format is cleartool lock [options...] as specified in the CLEARTOOL.EXE help
WITHOUT_CLASSIFICATION	Windows quoting of the value
WITHOUT_CLASSIFICATION	build the command line from what we got. the format is cleartool mkelem [options...] [viewpath ...] as specified in the CLEARTOOL.EXE help
WITHOUT_CLASSIFICATION	Should choose either -ci or -nco.
WITHOUT_CLASSIFICATION	-nco
WITHOUT_CLASSIFICATION	-nco
WITHOUT_CLASSIFICATION	Check the command line options
WITHOUT_CLASSIFICATION	-ci
WITHOUT_CLASSIFICATION	object selector
WITHOUT_CLASSIFICATION	build the command line from what we got the format is cleartool uncheckout [options...] [viewpath ...] as specified in the CLEARTOOL.EXE help
WITHOUT_CLASSIFICATION	-master
WITHOUT_CLASSIFICATION	-rm
WITHOUT_CLASSIFICATION	-eltype
WITHOUT_CLASSIFICATION	viewpath
WITHOUT_CLASSIFICATION	-version
WITHOUT_CLASSIFICATION	-c
WITHOUT_CLASSIFICATION	-c
WITHOUT_CLASSIFICATION	-cfile
WITHOUT_CLASSIFICATION	-cfile
WITHOUT_CLASSIFICATION	-rmall -force
WITHOUT_CLASSIFICATION	Had to make two separate commands here because if a space is inserted between the flag and the value, it is treated as a Windows filename with a space and it is enclosed in double quotes ("). This breaks clearcase.
WITHOUT_CLASSIFICATION	build the command line from what we got. the format is cleartool checkin [options...] [viewpath ...] as specified in the CLEARTOOL.EXE help
WITHOUT_CLASSIFICATION	-identical
WITHOUT_CLASSIFICATION	Check for required attributes
WITHOUT_CLASSIFICATION	Check for required attributes
WITHOUT_CLASSIFICATION	-replace
WITHOUT_CLASSIFICATION	-recurse
WITHOUT_CLASSIFICATION	type
WITHOUT_CLASSIFICATION	Returns list of EJBs for processing
WITHOUT_CLASSIFICATION	build the command line from what we got. the format is cleartool rmtype [options...] type-selector... as specified in the CLEARTOOL help
WITHOUT_CLASSIFICATION	type-kind:type-name
WITHOUT_CLASSIFICATION	-ignore
WITHOUT_CLASSIFICATION	Return the type-selector
WITHOUT_CLASSIFICATION	-full
WITHOUT_CLASSIFICATION	-incremental
WITHOUT_CLASSIFICATION	-nlabel
WITHOUT_CLASSIFICATION	baseline_root_name
WITHOUT_CLASSIFICATION	viewpath
WITHOUT_CLASSIFICATION	-c
WITHOUT_CLASSIFICATION	-cfile
WITHOUT_CLASSIFICATION	-ptime
WITHOUT_CLASSIFICATION	Check for required attributes
WITHOUT_CLASSIFICATION	-replace
WITHOUT_CLASSIFICATION	-replace
WITHOUT_CLASSIFICATION	build the command line from what we got the format is cleartool lock [options...] as specified in the CLEARTOOL.EXE help
WITHOUT_CLASSIFICATION	Check the command line options
WITHOUT_CLASSIFICATION	Check the command line options
WITHOUT_CLASSIFICATION	object selector
WITHOUT_CLASSIFICATION	-ordinary
WITHOUT_CLASSIFICATION	build the command line from what we got the format is cleartool update [options...] [viewpath ...] as specified in the CLEARTOOL.EXE help
WITHOUT_CLASSIFICATION	For debugging
WITHOUT_CLASSIFICATION	-log logname
WITHOUT_CLASSIFICATION	-graphical
WITHOUT_CLASSIFICATION	-overwrite
WITHOUT_CLASSIFICATION	-global
WITHOUT_CLASSIFICATION	-rename
WITHOUT_CLASSIFICATION	-obsolete
WITHOUT_CLASSIFICATION	-noverwrite
WITHOUT_CLASSIFICATION	build the command line from what we got. the format is cleartool mklbtype [options...] type-selector... as specified in the CLEARTOOL help
WITHOUT_CLASSIFICATION	-ctime
WITHOUT_CLASSIFICATION	-pbranch
WITHOUT_CLASSIFICATION	File[] filesInDir = directory.listFiles();
WITHOUT_CLASSIFICATION	-shared
WITHOUT_CLASSIFICATION	type-name@vob
WITHOUT_CLASSIFICATION	we have a file. create a stream for it
WITHOUT_CLASSIFICATION	default directory to the project's base directory
WITHOUT_CLASSIFICATION	assume the worst
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	create a data input stream from the jar input stream
WITHOUT_CLASSIFICATION	this iterator is exhausted. Can we pop one off the stack
WITHOUT_CLASSIFICATION	we get the root classes and build up a set of classes upon which they depend
WITHOUT_CLASSIFICATION	now recover all the dependencies collected and add to the list.
WITHOUT_CLASSIFICATION	pick up the last round of dependencies that were determined
WITHOUT_CLASSIFICATION	right we have a good looking class file.
WITHOUT_CLASSIFICATION	int minorVersion =
WITHOUT_CLASSIFICATION	int majorVersion =
WITHOUT_CLASSIFICATION	int accessFlags =
WITHOUT_CLASSIFICATION	int superClassIndex =
WITHOUT_CLASSIFICATION	read the dependency cache from the disk
WITHOUT_CLASSIFICATION	try to read the dependency info from the map if it is not out of date
WITHOUT_CLASSIFICATION	not cached - so need to read directly from the class file
WITHOUT_CLASSIFICATION	This class depends on each class in the dependency list. For each one of those, add this class into their affected classes list
WITHOUT_CLASSIFICATION	now determine which jars each class depends upon
WITHOUT_CLASSIFICATION	we need to add this jar to the list for this class.
WITHOUT_CLASSIFICATION	write the dependency cache to the disk
WITHOUT_CLASSIFICATION	need to delete the main class
WITHOUT_CLASSIFICATION	downgrade warnings on RMI stublike classes, as they are generated by rmic, so there is no need to tell the user that their source is missing.
WITHOUT_CLASSIFICATION	now check classpath file dependencies
WITHOUT_CLASSIFICATION	if we have no info about the class - it may have been deleted already and we are using cached info.
WITHOUT_CLASSIFICATION	there was no class file. add this class to the list
WITHOUT_CLASSIFICATION	break the classLocations into its components.
WITHOUT_CLASSIFICATION	search the various source path entries
WITHOUT_CLASSIFICATION	create a data input stream from the jar input stream
WITHOUT_CLASSIFICATION	add null entries for any additional slots required.
WITHOUT_CLASSIFICATION	end execute
WITHOUT_CLASSIFICATION	in verbose mode we always log stuff
WITHOUT_CLASSIFICATION	the simple action is to send the command line in as is
WITHOUT_CLASSIFICATION	Throws EjbcException
WITHOUT_CLASSIFICATION	VSS items
WITHOUT_CLASSIFICATION	The zero index is never present in the constant pool itself so we add a null entry for it
WITHOUT_CLASSIFICATION	but for big operations, we save all the params to a temp file and set @tmpfile as the command -then we remember to delete the tempfile afterwards
WITHOUT_CLASSIFICATION	start at 1 because element 0 is the executable name
WITHOUT_CLASSIFICATION	add to the list
WITHOUT_CLASSIFICATION	fill in args
WITHOUT_CLASSIFICATION	fill in args
WITHOUT_CLASSIFICATION	set source and rebuild options
WITHOUT_CLASSIFICATION	rebuild unless the dest file is newer than the source file
WITHOUT_CLASSIFICATION	mark for a rebuild if the dest file is newer
WITHOUT_CLASSIFICATION	Mono 1.0's wsdl doesn't deal with absolute paths
WITHOUT_CLASSIFICATION	add in any extra files. this is an error in mono, but we do not warn on it as they may fix that outside the ant build cycle.
WITHOUT_CLASSIFICATION	mark for a rebuild if we are newer
WITHOUT_CLASSIFICATION	conditionally compile
WITHOUT_CLASSIFICATION	Errors
WITHOUT_CLASSIFICATION	bail on no references
WITHOUT_CLASSIFICATION	bail on no references
WITHOUT_CLASSIFICATION	demand create pathlist
WITHOUT_CLASSIFICATION	bail on no references listed
WITHOUT_CLASSIFICATION	loop through all definitions
WITHOUT_CLASSIFICATION	add those that are set, and a delimiter
WITHOUT_CLASSIFICATION	set up response file options
WITHOUT_CLASSIFICATION	if the refs are out of date, force a build.
WITHOUT_CLASSIFICATION	bail out early if there were no files
WITHOUT_CLASSIFICATION	now scan the hashtable and add the files
WITHOUT_CLASSIFICATION	add the source file
WITHOUT_CLASSIFICATION	now run
WITHOUT_CLASSIFICATION	forcibly delete the output file in case of trouble
WITHOUT_CLASSIFICATION	then rethrow the exception
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:ConstantNameCheck OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:MethodNameCheck OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:ConstantNameCheck ON CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	end execute
WITHOUT_CLASSIFICATION	fill in args
WITHOUT_CLASSIFICATION	fill in args
WITHOUT_CLASSIFICATION	rebuild unless the dest file is newer than the source file
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	determine directory: resourceDir if set, the dir of the destFile if not
WITHOUT_CLASSIFICATION	Public Private Family Assembly Family and Assembly Family or Assembly Private Scope
WITHOUT_CLASSIFICATION	scan for an implicit fileset if there was a srcdir set or there was no srcDir set but there was no contained classes
WITHOUT_CLASSIFICATION	if there is no src dir here, set it
WITHOUT_CLASSIFICATION	get dependencies list.
WITHOUT_CLASSIFICATION	get any included source directories
WITHOUT_CLASSIFICATION	add the files to the command
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc CheckStyle:ConstantNameCheck OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:MethodNameCheck ON
WITHOUT_CLASSIFICATION	space for more argumentativeness command.addArgument(); command.addArgument();
WITHOUT_CLASSIFICATION	ends with '.' or null
WITHOUT_CLASSIFICATION	Constants used for the "beantype" attribute
WITHOUT_CLASSIFICATION	Filenames of the standard EJB descriptor and the iAS-specific descriptor
WITHOUT_CLASSIFICATION	Classpath used when the iAS ejbc is called
WITHOUT_CLASSIFICATION	Options passed to the iAS ejbc
WITHOUT_CLASSIFICATION	iAS installation directory (used if ejbc isn't on user's PATH)
WITHOUT_CLASSIFICATION	Parser and handler used to process both EJB descriptor files
WITHOUT_CLASSIFICATION	Value of the display-name element read from the standard EJB descriptor
WITHOUT_CLASSIFICATION	Parse the classpath into it's individual elements and store the results in the "classpathElements" instance variable.
WITHOUT_CLASSIFICATION	If the -classpath flag isn't specified, use the system classpath
WITHOUT_CLASSIFICATION	If the -d flag isn't specified, use the working directory as the destination directory
WITHOUT_CLASSIFICATION	Construct a SAXParser used to process the descriptors
WITHOUT_CLASSIFICATION	SAXException or ParserConfigurationException may be thrown
WITHOUT_CLASSIFICATION	Build and populate an instance of the ejbc utility
WITHOUT_CLASSIFICATION	Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed
WITHOUT_CLASSIFICATION	Add one for the "\"
WITHOUT_CLASSIFICATION	Concatenate all of the command line arguments into a single String
WITHOUT_CLASSIFICATION	If an iAS home directory is specified, prepend it to the commmand
WITHOUT_CLASSIFICATION	The EJB information is gathered from the standard XML EJB descriptor and the iAS-specific XML EJB descriptor using a SAX parser.
WITHOUT_CLASSIFICATION	OPTIONAL COMMAND LINE PARAMETERS
WITHOUT_CLASSIFICATION	No beantype flag is needed for an entity bean
WITHOUT_CLASSIFICATION	REQUIRED COMMAND LINE PARAMETERS
WITHOUT_CLASSIFICATION	Convert the List into an Array and return it
WITHOUT_CLASSIFICATION	Inner classes follow
WITHOUT_CLASSIFICATION	End of EjbcException inner class
WITHOUT_CLASSIFICATION	Tracks current element Tracks current text data "session" or "entity"
WITHOUT_CLASSIFICATION	Search the resource Map and (if not found) file Map
WITHOUT_CLASSIFICATION	A new element has started, so reset the text being captured
WITHOUT_CLASSIFICATION	If this is a standard EJB 1.1 descriptor, we are looking for one set of data, while if this is an iAS-specific descriptor, we're looking for different set of data. Hand the processing off to the appropriate method.
WITHOUT_CLASSIFICATION	End of EjbcHandler inner class
WITHOUT_CLASSIFICATION	Below are getter's and setter's for each of the instance variables. Note that (in addition to supporting setters with the same type as the instance variable) a setter is provided with takes a String argument -- this are provided so the XML document handler can set the EJB values using the Strings it parses.
WITHOUT_CLASSIFICATION	Check that the specified instance variables are valid
WITHOUT_CLASSIFICATION	Check that the EJB "source" classes all exist
WITHOUT_CLASSIFICATION	The timestamp of the "newest" class Timestamp for a given class File for the remote interface class File for the home interface class File for the EJB implementation class File for the EJB primary key class
WITHOUT_CLASSIFICATION	Check the timestamp on the remote interface
WITHOUT_CLASSIFICATION	Check the timestamp on the home interface
WITHOUT_CLASSIFICATION	Check the timestamp of the primary key class
WITHOUT_CLASSIFICATION	List of all stubs & skels Earliest mod time Has each been found?
WITHOUT_CLASSIFICATION	Loop through each stub/skeleton class that must be generated, and determine (if all exist) which file has the most recent timestamp
WITHOUT_CLASSIFICATION	Add each stub/skeleton class to the list of EJB files. Note that each class is added even if it doesn't exist now.
WITHOUT_CLASSIFICATION	Keep track of the oldest modification timestamp
WITHOUT_CLASSIFICATION	End of EjbInfo inner class
WITHOUT_CLASSIFICATION	Fully qualified name of the Java class Name of the package for this class Name of the class without the package
WITHOUT_CLASSIFICATION	End of Classname inner class
WITHOUT_CLASSIFICATION	Stream to read and redirect to standard output
WITHOUT_CLASSIFICATION	End of RedirectOutput inner class
WITHOUT_CLASSIFICATION	add -file xxxxx to the commandline
WITHOUT_CLASSIFICATION	clientname = ejbjarfile+client.jar
WITHOUT_CLASSIFICATION	end of else
WITHOUT_CLASSIFICATION	ejb jar file
WITHOUT_CLASSIFICATION	ejb jar file
WITHOUT_CLASSIFICATION	client jar file
WITHOUT_CLASSIFICATION	client jar file
WITHOUT_CLASSIFICATION	Have to catch this because of the semantics of calling main()
WITHOUT_CLASSIFICATION	Have to catch this because of the semantics of calling main()
WITHOUT_CLASSIFICATION	classpath
WITHOUT_CLASSIFICATION	-------------
WITHOUT_CLASSIFICATION	-------------
WITHOUT_CLASSIFICATION	GenIC options
WITHOUT_CLASSIFICATION	other options
WITHOUT_CLASSIFICATION	--------------------
WITHOUT_CLASSIFICATION	--------------------
WITHOUT_CLASSIFICATION	GenIC options setter
WITHOUT_CLASSIFICATION	-I- ignore all errors -Vd
WITHOUT_CLASSIFICATION	-------------
WITHOUT_CLASSIFICATION	--------------------
WITHOUT_CLASSIFICATION	other options setter
WITHOUT_CLASSIFICATION	other methods
WITHOUT_CLASSIFICATION	the method deleteOnExit() do not work because the directory is not empty
WITHOUT_CLASSIFICATION	create the generic jar first
WITHOUT_CLASSIFICATION	GenIC call on generic jar
WITHOUT_CLASSIFICATION	create the real jar
WITHOUT_CLASSIFICATION	JOnAS-specific descriptor deployment
WITHOUT_CLASSIFICATION	JOnAS-specific DD true if the JOnAS convention is used for the DD Directory path of the EJB descriptor EJB descriptor file name Filename appearing before name terminator Filename appearing after the name terminator
WITHOUT_CLASSIFICATION	extract path info
WITHOUT_CLASSIFICATION	descriptorName is just a file without path
WITHOUT_CLASSIFICATION	Check for the odd case where the terminator and/or filename extension aren't found. These will ensure "jonas-" appears at the end of the name and before the '.' (if present).
WITHOUT_CLASSIFICATION	no . found
WITHOUT_CLASSIFICATION	try to find JOnAS specific convention name
WITHOUT_CLASSIFICATION	else get standard baseName
WITHOUT_CLASSIFICATION	jonasroot
WITHOUT_CLASSIFICATION	java policy file
WITHOUT_CLASSIFICATION	outputdir
WITHOUT_CLASSIFICATION	work around a bug of GenIC 2.5
WITHOUT_CLASSIFICATION	classpath
WITHOUT_CLASSIFICATION	try to create the classpath for the correct ORB
WITHOUT_CLASSIFICATION	keepgenerated
WITHOUT_CLASSIFICATION	nocompil
WITHOUT_CLASSIFICATION	novalidation
WITHOUT_CLASSIFICATION	javac
WITHOUT_CLASSIFICATION	javacopts
WITHOUT_CLASSIFICATION	rmicopts
WITHOUT_CLASSIFICATION	secpropag
WITHOUT_CLASSIFICATION	verbose
WITHOUT_CLASSIFICATION	input file to process by GenIC
WITHOUT_CLASSIFICATION	calling GenIC task
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	the method deleteOnExit() do not work because the directory is not empty
WITHOUT_CLASSIFICATION	baseNameTerminator not found: the descriptor use the JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and not [Foo<baseNameTerminator>-ejb-jar.xml, Foo<baseNameTerminator>-jonas-ejb-jar.xml].
WITHOUT_CLASSIFICATION	jonasroot
WITHOUT_CLASSIFICATION	GenIC task GenIC class (3 are supported for various versions
WITHOUT_CLASSIFICATION	javac
WITHOUT_CLASSIFICATION	additionalargs
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	add the generated files to the ejbFiles
WITHOUT_CLASSIFICATION	orb
WITHOUT_CLASSIFICATION	-----------------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	-----------------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	utilitary methods
WITHOUT_CLASSIFICATION	Create the parser using whatever parser the system dictates
WITHOUT_CLASSIFICATION	Loop through the files. Each file represents one deployment descriptor, and hence one bean in our model.
WITHOUT_CLASSIFICATION	process the deployment descriptor in each tool
WITHOUT_CLASSIFICATION	end of execute()
WITHOUT_CLASSIFICATION	resolve relative to project basedir
WITHOUT_CLASSIFICATION	Get the filename into a String object
WITHOUT_CLASSIFICATION	Get the value of the <ejb-name> tag. Only the first occurrence.
WITHOUT_CLASSIFICATION	Then the toplink deployment descriptor
WITHOUT_CLASSIFICATION	Setup a naming standard here?.
WITHOUT_CLASSIFICATION	get all the files in the descriptor directory
WITHOUT_CLASSIFICATION	If we still can't find it, complain
WITHOUT_CLASSIFICATION	OK, properties file may be absolute
WITHOUT_CLASSIFICATION	do we need to regenerate the file
WITHOUT_CLASSIFICATION	weblogic.ejb.utils.DDCreator.main(args);
WITHOUT_CLASSIFICATION	there was an exception - run with no exit to get proper error
WITHOUT_CLASSIFICATION	weblogic.ejb.utils.DDCreator.main(newArgs);
WITHOUT_CLASSIFICATION	Attributes set by the Ant build file
WITHOUT_CLASSIFICATION	Create the zip entry and add it to the jar file
WITHOUT_CLASSIFICATION	add it to list of files in jar
WITHOUT_CLASSIFICATION	If it's a primitive wrapper then we shouldn't try and put it into the jar, so ignore it.
WITHOUT_CLASSIFICATION	Translate periods into path separators, add .class to the name, create the File object and add it to the Hashtable.
WITHOUT_CLASSIFICATION	Weblogic will throw an error if the deployment descriptor does not match the class files.
WITHOUT_CLASSIFICATION	Create the file input stream, and buffer everything over to the jar output stream
WITHOUT_CLASSIFICATION	Close up the file input stream for the class file
WITHOUT_CLASSIFICATION	register any DTDs supplied by the user
WITHOUT_CLASSIFICATION	none to register for generic
WITHOUT_CLASSIFICATION	Retrive the files to be added to JAR from EJB descriptor
WITHOUT_CLASSIFICATION	Add any support classes specified in the build file
WITHOUT_CLASSIFICATION	Determine the JAR filename (without filename extension)
WITHOUT_CLASSIFICATION	First the regular deployment descriptor
WITHOUT_CLASSIFICATION	now the vendor specific files, if any
WITHOUT_CLASSIFICATION	add any dependent files
WITHOUT_CLASSIFICATION	Check to see if we need a build and start doing the work!
WITHOUT_CLASSIFICATION	Log that we are going to build...
WITHOUT_CLASSIFICATION	Use helper method to write the jarfile
WITHOUT_CLASSIFICATION	Log that the file is up to date...
WITHOUT_CLASSIFICATION	Parse the ejb deployment descriptor. While it may not look like much, we use a SAXParser and an inner class to get hold of all the classfile names for the descriptor.
WITHOUT_CLASSIFICATION	add in support classes if any
WITHOUT_CLASSIFICATION	Work out what the base name is
WITHOUT_CLASSIFICATION	nothing to add for generic tool.
WITHOUT_CLASSIFICATION	clean the addedfiles set
WITHOUT_CLASSIFICATION	Create the streams necessary to write the jarfile
WITHOUT_CLASSIFICATION	get and clean up innerclass name
WITHOUT_CLASSIFICATION	See if there are any inner classes for this class and add them in if there are
WITHOUT_CLASSIFICATION	Loop through all the class files found and add them to the jar
WITHOUT_CLASSIFICATION	assertions take up space too
WITHOUT_CLASSIFICATION	link the file
WITHOUT_CLASSIFICATION	Have to catch this because of the semantics of calling main()
WITHOUT_CLASSIFICATION	trim the META_INF\ off of the file name
WITHOUT_CLASSIFICATION	end of writeJar
WITHOUT_CLASSIFICATION	only generate a new ClassLoader if we have a classpath
WITHOUT_CLASSIFICATION	register all the known DTDs
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	The the weblogic cmp deployment descriptor
WITHOUT_CLASSIFICATION	try to determine it from publicId
WITHOUT_CLASSIFICATION	try to use the compiler specified by build.compiler. Right now we are just going to allow Jikes
WITHOUT_CLASSIFICATION	need to create a generic jar first.
WITHOUT_CLASSIFICATION	Only go forward if the generic and the weblogic file both exist
WITHOUT_CLASSIFICATION	open jar files
WITHOUT_CLASSIFICATION	get the list of generic jar entries
WITHOUT_CLASSIFICATION	get the list of weblogic jar entries
WITHOUT_CLASSIFICATION	Cycle Through generic and make sure its in weblogic
WITHOUT_CLASSIFICATION	File name/path match
WITHOUT_CLASSIFICATION	Check files see if same
WITHOUT_CLASSIFICATION	File are different see if its an object or an interface
WITHOUT_CLASSIFICATION	Interface changed rebuild jar.
WITHOUT_CLASSIFICATION	Object class Changed update it.
WITHOUT_CLASSIFICATION	is it the manifest. If so ignore it
WITHOUT_CLASSIFICATION	File other then class changed rebuild
WITHOUT_CLASSIFICATION	a file doesnt exist rebuild
WITHOUT_CLASSIFICATION	Copy files from old weblogic jar
WITHOUT_CLASSIFICATION	Use the entry from the generic jar
WITHOUT_CLASSIFICATION	use fle from original weblogic jar
WITHOUT_CLASSIFICATION	need to close files and perhaps rename output
WITHOUT_CLASSIFICATION	empty
WITHOUT_CLASSIFICATION	if the implementation classes don;t exist regenerate
WITHOUT_CLASSIFICATION	any problems - just regenerate
WITHOUT_CLASSIFICATION	create a Java task to do the rebuild
WITHOUT_CLASSIFICATION	weblogic.ejbc.main(args);
WITHOUT_CLASSIFICATION	Build and populate an instance of the ejbc utility
WITHOUT_CLASSIFICATION	Have to catch this because of the semantics of calling main()
WITHOUT_CLASSIFICATION	classpath
WITHOUT_CLASSIFICATION	Attributes set by the Ant build file
WITHOUT_CLASSIFICATION	Get the filename of vendor specific descriptor
WITHOUT_CLASSIFICATION	trim the META_INF\ off of the file name
WITHOUT_CLASSIFICATION	Is the ser file or any of the source files newer then the class files. firstly find the oldest of the two class files.
WITHOUT_CLASSIFICATION	run with no exit for better reporting
WITHOUT_CLASSIFICATION	weblogic.ejbc.main(newArgs);
WITHOUT_CLASSIFICATION	Regardless of the name of the iAS-specific EJB descriptor file, it will written in the completed JAR file as "ias-ejb-jar.xml". This is the naming convention implemented by iAS.
WITHOUT_CLASSIFICATION	Add CMP descriptors to the list of EJB files
WITHOUT_CLASSIFICATION	Only calculate the descriptor name once
WITHOUT_CLASSIFICATION	Directory path of the EJB descriptor Filename appearing before name terminator Filename appearing after the name terminator
WITHOUT_CLASSIFICATION	Find the end of the standard descriptor's relative path
WITHOUT_CLASSIFICATION	Check to see if the standard name is used (there's no basename)
WITHOUT_CLASSIFICATION	Check for the odd case where the terminator and/or filename extension aren't found. These will ensure "ias-" appears at the end of the name and before the '.' (if present).
WITHOUT_CLASSIFICATION	choose the right vendor DD
WITHOUT_CLASSIFICATION	ejb jar file to verify
WITHOUT_CLASSIFICATION	debug ?
WITHOUT_CLASSIFICATION	set the classpath
WITHOUT_CLASSIFICATION	list file
WITHOUT_CLASSIFICATION	no TIE classes
WITHOUT_CLASSIFICATION	root dir
WITHOUT_CLASSIFICATION	compiling order
WITHOUT_CLASSIFICATION	add the home class
WITHOUT_CLASSIFICATION	build the home classes list.
WITHOUT_CLASSIFICATION	remove .class extension
WITHOUT_CLASSIFICATION	add the gen files to the collection
WITHOUT_CLASSIFICATION	remove the .class
WITHOUT_CLASSIFICATION	Get the Extensions document
WITHOUT_CLASSIFICATION	We attempt to put in the MAP and Schema files of CMP beans
WITHOUT_CLASSIFICATION	Add the Map file
WITHOUT_CLASSIFICATION	Theres nothing else to see here...keep moving sonny
WITHOUT_CLASSIFICATION	Set the options
WITHOUT_CLASSIFICATION	Set the JvmArgs
WITHOUT_CLASSIFICATION	Set the Environment variable
WITHOUT_CLASSIFICATION	Check if list of files to check has been specified
WITHOUT_CLASSIFICATION	Have to catch this because of the semantics of calling main()
WITHOUT_CLASSIFICATION	open jar files
WITHOUT_CLASSIFICATION	get the list of generic jar entries
WITHOUT_CLASSIFICATION	File are different see if its an object or an interface
WITHOUT_CLASSIFICATION	Interface changed rebuild jar.
WITHOUT_CLASSIFICATION	Object class Changed update it.
WITHOUT_CLASSIFICATION	is it the manifest. If so ignore it
WITHOUT_CLASSIFICATION	File other then class changed rebuild
WITHOUT_CLASSIFICATION	Update with changed Bean class
WITHOUT_CLASSIFICATION	Use the entry from the generic jar
WITHOUT_CLASSIFICATION	register all the DTDs, both the ones that are known and any supplied by the user
WITHOUT_CLASSIFICATION	Set the working directory
WITHOUT_CLASSIFICATION	Set the Java class name
WITHOUT_CLASSIFICATION	create the -generic.jar, if required
WITHOUT_CLASSIFICATION	create the "undeployed" output .jar, if required
WITHOUT_CLASSIFICATION	Only go forward if the generic and the websphere file both exist
WITHOUT_CLASSIFICATION	get the list of websphere jar entries
WITHOUT_CLASSIFICATION	Cycle Through generic and make sure its in websphere
WITHOUT_CLASSIFICATION	File name/path match Check files see if same
WITHOUT_CLASSIFICATION	a file doesn't exist rebuild
WITHOUT_CLASSIFICATION	Copy files from old websphere jar
WITHOUT_CLASSIFICATION	use fle from original websphere jar
WITHOUT_CLASSIFICATION	Specification Name must match
WITHOUT_CLASSIFICATION	Available specification version must be >= required
WITHOUT_CLASSIFICATION	Implementation Vendor ID must match
WITHOUT_CLASSIFICATION	Implementation Vendor ID must match
WITHOUT_CLASSIFICATION	Implementation version must be >= required
WITHOUT_CLASSIFICATION	This available optional package satisfies the requirements
WITHOUT_CLASSIFICATION	This available optional package satisfies the requirements
WITHOUT_CLASSIFICATION	Reset list of sections
WITHOUT_CLASSIFICATION	Extension Name must match
WITHOUT_CLASSIFICATION	Add all the dependency data to manifest for dependencies
WITHOUT_CLASSIFICATION	Check if list of files to check has been specified
WITHOUT_CLASSIFICATION	CheckStyle:MemberNameCheck OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:MemberNameCheck ON
WITHOUT_CLASSIFICATION	change this to get the objects from the other reference
WITHOUT_CLASSIFICATION	Add all the dependency data to manifest for "optional" dependencies
WITHOUT_CLASSIFICATION	add in something like "Extension-List: javahelp java3d"
WITHOUT_CLASSIFICATION	all methods static
WITHOUT_CLASSIFICATION	Gets the destination file
WITHOUT_CLASSIFICATION	Validates URL
WITHOUT_CLASSIFICATION	Load default locale bundle files using default file encoding scheme.
WITHOUT_CLASSIFICATION	if all resource files associated with this bundle have been scanned for and still not able to find a single resrouce file, throw exception
WITHOUT_CLASSIFICATION	So long as the line isn't empty and isn't a comment...
WITHOUT_CLASSIFICATION	Legal Key-Value separators are :, = and white space.
WITHOUT_CLASSIFICATION	Only if we do have a key is there going to be a value
WITHOUT_CLASSIFICATION	Handle line continuations, if any
WITHOUT_CLASSIFICATION	Has key already been loaded into resourceMap?
WITHOUT_CLASSIFICATION	Make sure parent dirs exist, else, create them.
WITHOUT_CLASSIFICATION	Check to see if dest file has to be recreated
WITHOUT_CLASSIFICATION	is there a startToken and there is still stuff following the startToken
WITHOUT_CLASSIFICATION	we found a starttoken, is there an endtoken following? start at token+tokenlength because start and end token may be indentical
WITHOUT_CLASSIFICATION	grab the token
WITHOUT_CLASSIFICATION	If there is a white space or = or :, then it isn't to be treated as a valid key.
WITHOUT_CLASSIFICATION	find the replace string
WITHOUT_CLASSIFICATION	generate the new line
WITHOUT_CLASSIFICATION	set start position for next search
WITHOUT_CLASSIFICATION	find next starttoken
WITHOUT_CLASSIFICATION	deal with specified srcDir
WITHOUT_CLASSIFICATION	deal with the filesets
WITHOUT_CLASSIFICATION	remove any files that shouldn't be overwritten.
WITHOUT_CLASSIFICATION	check that the password has been set
WITHOUT_CLASSIFICATION	check for missing application on deploy & update
WITHOUT_CLASSIFICATION	check for missing source on deploy & update
WITHOUT_CLASSIFICATION	check for missing application on delete & undeploy
WITHOUT_CLASSIFICATION	keys to optional attributes
WITHOUT_CLASSIFICATION	constructs the "-url <url> -debug <action> <password>" portion of the commmand line
WITHOUT_CLASSIFICATION	/ Place vendor specific tool creations here. /
WITHOUT_CLASSIFICATION	/ Execute method /
WITHOUT_CLASSIFICATION	/ Set/get methods /
WITHOUT_CLASSIFICATION	keys to optional attributes
WITHOUT_CLASSIFICATION	convert backslashes to slashes, otherwise jjtree will put this as comments and this seems to confuse javacc
WITHOUT_CLASSIFICATION	required attributes
WITHOUT_CLASSIFICATION	required attributes
WITHOUT_CLASSIFICATION	required attributes
WITHOUT_CLASSIFICATION	load command line with optional attributes
WITHOUT_CLASSIFICATION	load command line with optional attributes
WITHOUT_CLASSIFICATION	load command line with optional attributes
WITHOUT_CLASSIFICATION	use the directory containing the target as the output directory
WITHOUT_CLASSIFICATION	use the directory containing the target as the output directory
WITHOUT_CLASSIFICATION	used by jpackage for JavaCC 3.x
WITHOUT_CLASSIFICATION	check the target is a file
WITHOUT_CLASSIFICATION	determine if the generated java file is up-to-date
WITHOUT_CLASSIFICATION	Extract file's base-name
WITHOUT_CLASSIFICATION	Replace the file's extension with '.java'
WITHOUT_CLASSIFICATION	Change the directory
WITHOUT_CLASSIFICATION	This default has been good enough until Ant 1.6.3, so stick with it
WITHOUT_CLASSIFICATION	first search for the "old" javah class in 1.4.2 tools.jar
WITHOUT_CLASSIFICATION	assume older than 1.4.2 tools.jar
WITHOUT_CLASSIFICATION	private CommandlineJava commandline = new CommandlineJava();
WITHOUT_CLASSIFICATION	required attributes Deprecated! Use this going forward
WITHOUT_CLASSIFICATION	optional attributes
WITHOUT_CLASSIFICATION	execute the test and get the return code
WITHOUT_CLASSIFICATION	if there is an error/failure and that it should halt, stop everything otherwise just log a statement
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	int accessFlags =
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	not necessary as JDepend would fail, but why loose some time?
WITHOUT_CLASSIFICATION	This bit turns <exclude> child tags into patters to ignore
WITHOUT_CLASSIFICATION	JL: comment extracted from JUnitTask (and slightly modified)
WITHOUT_CLASSIFICATION	if not set, auto-create the ClassPath from the project
WITHOUT_CLASSIFICATION	having a space between the file and its path causes commandline to add quotes around the argument thus making JDepend not taking it into account. Thus we split it in two
WITHOUT_CLASSIFICATION	This is the new way - use classespath - code is the same for now
WITHOUT_CLASSIFICATION	read in all constant pool entries.
WITHOUT_CLASSIFICATION	verify this is a valid class file.
WITHOUT_CLASSIFICATION	int version =
WITHOUT_CLASSIFICATION	read the constant pool.
WITHOUT_CLASSIFICATION	read access flags and class index.
WITHOUT_CLASSIFICATION	Be sure everything has been set.
WITHOUT_CLASSIFICATION	Do the merge
WITHOUT_CLASSIFICATION	Add this file to the addfiles Vector and add it later at the top level of the output file.
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	jlink output input1 ... inputN
WITHOUT_CLASSIFICATION	To maintain compatibility with the command-line version, we will only add files to be merged.
WITHOUT_CLASSIFICATION	Actually performs the merging of f into the output. f should be a zip or jar file.
WITHOUT_CLASSIFICATION	Check to see that the file with name "name" exists.
WITHOUT_CLASSIFICATION	META-INF not found in the name of the entry. Go ahead and process it.
WITHOUT_CLASSIFICATION	Weblogic jspc does not seem to work unless u explicitly set this... Does not take the classpath from the env.... Am i missing something about the Java task??
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	Necessary in the case where you add a entry that is not compressed.
WITHOUT_CLASSIFICATION	Ignore manifest entries. They're bound to cause conflicts between files that are being merged. User should supply their own manifest file when doing the merge.
WITHOUT_CLASSIFICATION	It was the duplicate entry.
WITHOUT_CLASSIFICATION	Adds contents of a directory to the output.
WITHOUT_CLASSIFICATION	Gets the name of an entry in the file. This is the real name which for a class is the name of the package with the class name appended.
WITHOUT_CLASSIFICATION	see if the file is in fact a .class file, and determine its actual name.
WITHOUT_CLASSIFICATION	Adds a file to the output stream.
WITHOUT_CLASSIFICATION	Make sure file exists
WITHOUT_CLASSIFICATION	A convenience method that several other methods might call.
WITHOUT_CLASSIFICATION	This entry already exists. So, go with the first one.
WITHOUT_CLASSIFICATION	A method that does the work on a given entry in a mergefile. The big deal is to set the right parameters in the ZipEntry on the output stream.
WITHOUT_CLASSIFICATION	Note, don't need to specify size or crc for compressed files.
WITHOUT_CLASSIFICATION	use the systemclasspath as well, to include the ant jar
WITHOUT_CLASSIFICATION	Necessary in the case where you add a entry that is not compressed.
WITHOUT_CLASSIFICATION	TODO Test on other versions of weblogic TODO add more attributes to the task, to take care of all jspc options TODO Test on Unix
WITHOUT_CLASSIFICATION	private String compilerPath; fully qualified name for the compiler executable
WITHOUT_CLASSIFICATION	get all the files in the sourceDirectory
WITHOUT_CLASSIFICATION	Weblogic.jspc calls System.exit() ... have to fork Therefore, takes loads of time Can pass directories at a time (.jsp) but easily runs out of memory on hefty dirs (even on a Sun)
WITHOUT_CLASSIFICATION	apply transformation
WITHOUT_CLASSIFICATION	end class
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:ConstantNameCheck OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:ConstantNameCheck ON
WITHOUT_CLASSIFICATION	now we need to populate the compiler adapter
WITHOUT_CLASSIFICATION	finally, lets execute the compiler!!
WITHOUT_CLASSIFICATION	Create an instance of the compiler, redirecting output to the project log
WITHOUT_CLASSIFICATION	compile the source files
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	demand create vector of filesets
WITHOUT_CLASSIFICATION	make sure that we've got a destdir
WITHOUT_CLASSIFICATION	bind to a compiler
WITHOUT_CLASSIFICATION	if we are a webapp, hand off to the compiler, which had better handle it
WITHOUT_CLASSIFICATION	make sure that we've got a srcdir
WITHOUT_CLASSIFICATION	if the compiler does its own dependency stuff, we just call it right now
WITHOUT_CLASSIFICATION	the remainder of this method is only for compilers that need their dependency work done
WITHOUT_CLASSIFICATION	scan source directories and dest directory to build up both copy lists and compile lists
WITHOUT_CLASSIFICATION	String srcFileDir=srcFile.getParent();
WITHOUT_CLASSIFICATION	end inner class
WITHOUT_CLASSIFICATION	since we don't mangle extensions like the servlet does, we need to check for keywords as class names
WITHOUT_CLASSIFICATION	first char is more restrictive than the rest
WITHOUT_CLASSIFICATION	this is the rest
WITHOUT_CLASSIFICATION	If the first char is not a start of Java identifier or is _ prepend a '_'.
WITHOUT_CLASSIFICATION	we are forking here to be sure that if JspC calls System.exit() it doesn't halt the build
WITHOUT_CLASSIFICATION	tomcat4.0 gets the old mangler
WITHOUT_CLASSIFICATION	tomcat4.1 gets the new one
WITHOUT_CLASSIFICATION	for all other possibilities
WITHOUT_CLASSIFICATION	append the err and output streams to the log
WITHOUT_CLASSIFICATION	acrobatic cast.
WITHOUT_CLASSIFICATION	set the destination directory relative from the project if needed.
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	sanity check
WITHOUT_CLASSIFICATION	plain impossible
WITHOUT_CLASSIFICATION	Quick return - no output do nothing.
WITHOUT_CLASSIFICATION	append the err and output streams to the log
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	If style dir is not specified we have to retrieve the stylesheet from the classloader
WITHOUT_CLASSIFICATION	If we are here, then the style dir is here and we should read the stylesheet from the filesystem
WITHOUT_CLASSIFICATION	xalan 2
WITHOUT_CLASSIFICATION	xalan xsltc
WITHOUT_CLASSIFICATION	jdk 1.5 xsltc
WITHOUT_CLASSIFICATION	must be plain, ensured by TypeAttribute
WITHOUT_CLASSIFICATION	pre JUnit 3.7
WITHOUT_CLASSIFICATION	can be null if an error occurred in setUp
WITHOUT_CLASSIFICATION	PlainJUnitResultFormatter
WITHOUT_CLASSIFICATION	Snapshot of the system properties
WITHOUT_CLASSIFICATION	add the timestamp
WITHOUT_CLASSIFICATION	and the hostname.
WITHOUT_CLASSIFICATION	Output properties
WITHOUT_CLASSIFICATION	a TestSuite can contain Tests from multiple classes, even tests with the same name - disambiguate them.
WITHOUT_CLASSIFICATION	XMLJUnitResultFormatter
WITHOUT_CLASSIFICATION	Do we send output to the formatters ?
WITHOUT_CLASSIFICATION	Attributes for basetest
WITHOUT_CLASSIFICATION	forceLoadClass is not convenient here since it would not properly deal with inner classes of these classes.
WITHOUT_CLASSIFICATION	forkMode.getValue().equals(ForkMode.PER_BATCH)
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	execute the test and get the return code
WITHOUT_CLASSIFICATION	execute the test and get the return code
WITHOUT_CLASSIFICATION	null watchdog means no timeout, you'd better not check with null
WITHOUT_CLASSIFICATION	if there is an error/failure and that it should halt, stop everything otherwise just log a statement
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	set the default values if not specified @todo should be moved to the test class instead.
WITHOUT_CLASSIFICATION	Create a temporary file to pass the test cases to run to the runner (one test case per line)
WITHOUT_CLASSIFICATION	#31885
WITHOUT_CLASSIFICATION	ignored.
WITHOUT_CLASSIFICATION	in VM is not very nice since it could probably hang the whole build. IMHO this method should be avoided and it would be best to remove it in future versions. TBD. (SBa)
WITHOUT_CLASSIFICATION	make sure the test will be accepted as a TestCase
WITHOUT_CLASSIFICATION	make sure the test annotation are accepted
WITHOUT_CLASSIFICATION	will cause trouble in JDK 1.1 if omitted
WITHOUT_CLASSIFICATION	local copy since LogOutputStream.task is private
WITHOUT_CLASSIFICATION	this one is here because the changes to support ResourceCollections have broken Magic's JUnitTestTask. The task adds a FileSet to a BatchTest instance using the Java API and without telling the FileSet about its project instance. The original code would pass in project on the call to getDirectoryScanner - which is now hidden deep into Resources.iterator() and not reachable.
WITHOUT_CLASSIFICATION	dummy output for the framed report it's all done by extension...
WITHOUT_CLASSIFICATION	conforming to NodeList interface
WITHOUT_CLASSIFICATION	this should never happen
WITHOUT_CLASSIFICATION	write the document
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	----- from now, the methods are all related to DOM tree manipulation
WITHOUT_CLASSIFICATION	writers do not throw exceptions, so check for them.
WITHOUT_CLASSIFICATION	create the dom tree
WITHOUT_CLASSIFICATION	get all files and add them to the document
WITHOUT_CLASSIFICATION	make sure that this is REALLY a testsuite.
WITHOUT_CLASSIFICATION	wrong root element name issue a warning.
WITHOUT_CLASSIFICATION	a testcase might have failed and write a zero-length document, It has already failed, but hey.... mm. just put a warning
WITHOUT_CLASSIFICATION	a missing . might imply no package at all. Don't get fooled.
WITHOUT_CLASSIFICATION	modify the name attribute and set the package
WITHOUT_CLASSIFICATION	don't filter AssertionFailure
WITHOUT_CLASSIFICATION	JUnit 4 support:
WITHOUT_CLASSIFICATION	check for a static suite method first, even when using JUnit 4
WITHOUT_CLASSIFICATION	check if there is a suite method
WITHOUT_CLASSIFICATION	no appropriate suite method found. We don't report any error here since it might be perfectly normal.
WITHOUT_CLASSIFICATION	Check for JDK 5 first. Will not help on JDK 1.4 if only junit-4.0.jar in CP because in that case linkage of whole task will already have failed! But will help if CP has junit-3.8.2.jar:junit-4.0.jar.
WITHOUT_CLASSIFICATION	In that case first C.fN will fail with CNFE and we will avoid UnsupportedClassVersionError.
WITHOUT_CLASSIFICATION	OK, fall back to JUnit 3.
WITHOUT_CLASSIFICATION	Let's use it!
WITHOUT_CLASSIFICATION	Use JUnit 3.
WITHOUT_CLASSIFICATION	try to extract a test suite automatically this will generate warnings if the class is no suitable Test
WITHOUT_CLASSIFICATION	had an exception constructing suite
WITHOUT_CLASSIFICATION	Add/overlay system properties on the properties from the Ant project
WITHOUT_CLASSIFICATION	return the stack unfiltered
WITHOUT_CLASSIFICATION	Not strictly necessary but probably desirable. JUnit 4-specific test GUIs will show just "failures". But Ant's output shows "failures" vs. "errors". We would prefer to show "failure" for things that logically are.
WITHOUT_CLASSIFICATION	To compile on pre-JDK 4 (even though this should always succeed):
WITHOUT_CLASSIFICATION	pre-3.4
WITHOUT_CLASSIFICATION	JUnitTestRunner
WITHOUT_CLASSIFICATION	rethrow
WITHOUT_CLASSIFICATION	wrap
WITHOUT_CLASSIFICATION	sorted by newest Kaffe version first
WITHOUT_CLASSIFICATION	pre Kaffe 1.1.5
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	we are going to scan everything anyway
WITHOUT_CLASSIFICATION	only scan directories that can include matched files or directories
WITHOUT_CLASSIFICATION	avoid double scanning of directories, can only happen in fast mode
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	This default has been good enough until Ant 1.6.3, so stick with it
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	Rats. should not happen
WITHOUT_CLASSIFICATION	otherwise ExecuteJava has thrown an exception
WITHOUT_CLASSIFICATION	No includes supplied, so set it to 'matches all'
WITHOUT_CLASSIFICATION	always start from the current ftp working dir
WITHOUT_CLASSIFICATION	put in the newroots vector the include patterns without wildcard tokens
WITHOUT_CLASSIFICATION	construct it
WITHOUT_CLASSIFICATION	cool case, we do not need to scan all the subdirs in the relative path
WITHOUT_CLASSIFICATION	this should not happen, except if parent has been deleted by another process
WITHOUT_CLASSIFICATION	we are already in the right path, so the second parameter is false
WITHOUT_CLASSIFICATION	hit a hidden file assume not a symlink
WITHOUT_CLASSIFICATION	getRelativePath also finds about symlinks
WITHOUT_CLASSIFICATION	warn that selectors are not supported
WITHOUT_CLASSIFICATION	If we are doing a listing, we need the output stream created now.
WITHOUT_CLASSIFICATION	get files from filesets
WITHOUT_CLASSIFICATION	find first non cached dir
WITHOUT_CLASSIFICATION	check if dir exists by trying to change into it.
WITHOUT_CLASSIFICATION	could not change to it - try to create it
WITHOUT_CLASSIFICATION	create a local temporary file
WITHOUT_CLASSIFICATION	see if we should issue a chmod command
WITHOUT_CLASSIFICATION	ignore it
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	ignore it
WITHOUT_CLASSIFICATION	delegate the deletion of the local temp file to the delete task because of race conditions occuring on Windows
WITHOUT_CLASSIFICATION	For Microsoft's Ftp-Service an Array with length 0 is returned if configured to return listings in "MS-DOS"-Format
WITHOUT_CLASSIFICATION	If we are sending files, then assume out of date. If we are getting files, then throw an error
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	codes 521, 550 and 553 can be produced by FTP Servers to indicate that an attempt to create a directory has failed because the directory already exists.
WITHOUT_CLASSIFICATION	If an initial command was configured then send it. Some FTP servers offer different modes of operation, E.G. switching between a UNIX file system mode and a legacy file system.
WITHOUT_CLASSIFICATION	For a unix ftp server you can set the default mask for all files created.
WITHOUT_CLASSIFICATION	If the action is MK_DIR, then the specified remote directory is the directory to create.
WITHOUT_CLASSIFICATION	in this case we want to find how much time span there is between local and remote
WITHOUT_CLASSIFICATION	socks
WITHOUT_CLASSIFICATION	this may be a java1.4 thingy only
WITHOUT_CLASSIFICATION	simple one-shot execution
WITHOUT_CLASSIFICATION	need nested read/write elements
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	here we'd parse the output from change -o into submit -i in order to support default change.
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc ToDo: If dealing with default cl need to parse out <enter description here>
WITHOUT_CLASSIFICATION	-n
WITHOUT_CLASSIFICATION	Remove any non-numerical chars - should leave the change number
WITHOUT_CLASSIFICATION	this type of output might happen Change 18 renamed change 20 and submitted.
WITHOUT_CLASSIFICATION	Match "" for begining of depot filespec
WITHOUT_CLASSIFICATION	we need to escape the description in case there are /
WITHOUT_CLASSIFICATION	NOTE kirk@radik.com 04-April-2001 -- If you put in the -s, you have to start running through regular expressions here. Much easier to just not include the scripting information than to try to add it and strip it later.
WITHOUT_CLASSIFICATION	EoF
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc Input Output Error CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	Here we can either revert any unchanged files in a changelist or any files regardless of whether they have been changed or not The whole process also accepts a p4 filespec
WITHOUT_CLASSIFICATION	-a
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	-n
WITHOUT_CLASSIFICATION	-n
WITHOUT_CLASSIFICATION	-f
WITHOUT_CLASSIFICATION	-t
WITHOUT_CLASSIFICATION	-v
WITHOUT_CLASSIFICATION	We have to create a unlocked label first
WITHOUT_CLASSIFICATION	Now lock if required
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc CheckStyle:MemberNameCheck OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:MemberNameCheck ON CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	Massage PCLI lvf output transforming '\' to '/' so get command works appropriately
WITHOUT_CLASSIFICATION	Read back the label spec from perforce, Replace Options Submit back to Perforce
WITHOUT_CLASSIFICATION	when running labelsync, if view elements are in sync, Perforce produces a line of output looking like this one : error: depot/file2 - label in sync.
WITHOUT_CLASSIFICATION	sync says "error:" when a file is up-to-date
WITHOUT_CLASSIFICATION	sometimes there's "info1:
WITHOUT_CLASSIFICATION	P4 runtime directives
WITHOUT_CLASSIFICATION	Perforce task directives
WITHOUT_CLASSIFICATION	P4 g-opts and cmd opts (rtfm)
WITHOUT_CLASSIFICATION	Setters called by Ant
WITHOUT_CLASSIFICATION	Get default P4 settings from environment - Mark would have done something cool with introspection here.....:-)
WITHOUT_CLASSIFICATION	reset error flags before executing the command
WITHOUT_CLASSIFICATION	Check API for these - it's how CVS does it...
WITHOUT_CLASSIFICATION	Constant for the PCLI listversionedfiles recursive i a format "get" understands
WITHOUT_CLASSIFICATION	private static final String PCLI_LVF_ARGS = "lvf -z -aw";
WITHOUT_CLASSIFICATION	Check workspace exists Launch PCLI listversionedfiles -z -aw Capture output build the command line from what we got the format is
WITHOUT_CLASSIFICATION	default pvcs project is "/"
WITHOUT_CLASSIFICATION	Create folders in workspace
WITHOUT_CLASSIFICATION	Launch get on output captured from PCLI lvf
WITHOUT_CLASSIFICATION	Extract the name of the directory from the filename
WITHOUT_CLASSIFICATION	Change these through their GET and SET methods.
WITHOUT_CLASSIFICATION	These fields deal with includes and excludes
WITHOUT_CLASSIFICATION	Check all of the properties that are required.
WITHOUT_CLASSIFICATION	Check to see if the target directory exists.
WITHOUT_CLASSIFICATION	Search the items on this server.
WITHOUT_CLASSIFICATION	Disconnect from the server.
WITHOUT_CLASSIFICATION	Tell how many files were checked out.
WITHOUT_CLASSIFICATION	Optional; logOn() connects if necessary.
WITHOUT_CLASSIFICATION	Logon using specified user name and password.
WITHOUT_CLASSIFICATION	We always display the ItemID (OBJECT_ID) and primary descriptor.
WITHOUT_CLASSIFICATION	If a working directory was specified then add it to the command line
WITHOUT_CLASSIFICATION	Checking for "\ or "/ or "X:\...
WITHOUT_CLASSIFICATION	If we find a "file" attribute then act on a file otherwise act on a project
WITHOUT_CLASSIFICATION	after you are all of the properties are ok, do your thing with StarTeam. If there are any kind of exceptions then send the message to the project log.
WITHOUT_CLASSIFICATION	For performance reasons, it is important to pre-fetch all the properties we'll need for all the items we'll be searching.
WITHOUT_CLASSIFICATION	We'll need this item type's primary descriptor.
WITHOUT_CLASSIFICATION	Does this item type have a secondary descriptor? If so, we'll need it.
WITHOUT_CLASSIFICATION	Now, build an array of the property names.
WITHOUT_CLASSIFICATION	Pre-fetch the item properties and cache them.
WITHOUT_CLASSIFICATION	Now, search for items in the selected folder.
WITHOUT_CLASSIFICATION	Free up the memory used by the cached items.
WITHOUT_CLASSIFICATION	convert whatever separator char is in starteam to that of the target system.
WITHOUT_CLASSIFICATION	If it ends with separator then strip it off
WITHOUT_CLASSIFICATION	Replace the projectName in the file's absolute path to the viewName. This makes the root target of a checkout operation equal to: targetFolder + dirName
WITHOUT_CLASSIFICATION	only want to do this the first time
WITHOUT_CLASSIFICATION	Process all items in this folder.
WITHOUT_CLASSIFICATION	Process all subfolders recursively if recursion is on.
WITHOUT_CLASSIFICATION	Get descriptors for this item type.
WITHOUT_CLASSIFICATION	VERBOSE MODE ONLY
WITHOUT_CLASSIFICATION	Show folder only if changed.
WITHOUT_CLASSIFICATION	Show if the file is locked.
WITHOUT_CLASSIFICATION	END VERBOSE ONLY
WITHOUT_CLASSIFICATION	add -command CheckOutFile to the commandline
WITHOUT_CLASSIFICATION	Finally, show the Item properties ... Always show the ItemID.
WITHOUT_CLASSIFICATION	Show the primary descriptor. There should always be one.
WITHOUT_CLASSIFICATION	Show the secondary descriptor, if there is one. Some item types have one, some don't.
WITHOUT_CLASSIFICATION	Change the item to be checked out to a StarTeam File.
WITHOUT_CLASSIFICATION	The local file name is simply the local target path (tgt) which has been passed recursively down from the top of the tree, with the item's name appended.
WITHOUT_CLASSIFICATION	Begin SET and GET methods
WITHOUT_CLASSIFICATION	Begin filter getters and setters
WITHOUT_CLASSIFICATION	Check if need to set the loader
WITHOUT_CLASSIFICATION	Now create the scriptRunner
WITHOUT_CLASSIFICATION	find the script repository - it is stored in the project
WITHOUT_CLASSIFICATION	try the context classloader ClassLoader loader = Thread.currentThread().getContextClassLoader();
WITHOUT_CLASSIFICATION	If we find a "file" attribute then act on a file otherwise act on a project
WITHOUT_CLASSIFICATION	add -command CheckInFile to the commandline
WITHOUT_CLASSIFICATION	add -file xxxxx to the commandline
WITHOUT_CLASSIFICATION	add -file xxxxx to the commandline
WITHOUT_CLASSIFICATION	add -command CheckInProject to the commandline
WITHOUT_CLASSIFICATION	look for a recursive option
WITHOUT_CLASSIFICATION	look for a recursive option
WITHOUT_CLASSIFICATION	Look for a comment
WITHOUT_CLASSIFICATION	soscmd Command options
WITHOUT_CLASSIFICATION	soscmd Option flags
WITHOUT_CLASSIFICATION	add -command GetFile to the commandline
WITHOUT_CLASSIFICATION	look for a version attribute
WITHOUT_CLASSIFICATION	add -revision xxxxx to the commandline
WITHOUT_CLASSIFICATION	add -command GetProject to the commandline
WITHOUT_CLASSIFICATION	look for a label option
WITHOUT_CLASSIFICATION	make sure localDir exists, create it if it doesn't
WITHOUT_CLASSIFICATION	This is the exit status
WITHOUT_CLASSIFICATION	Use the OS VM launcher so we get environment variables
WITHOUT_CLASSIFICATION	Get the path to the soscmd(.exe)
WITHOUT_CLASSIFICATION	SOS server address is required
WITHOUT_CLASSIFICATION	VSS Info is required
WITHOUT_CLASSIFICATION	VSS project is required
WITHOUT_CLASSIFICATION	-verbose
WITHOUT_CLASSIFICATION	Disable Compression
WITHOUT_CLASSIFICATION	If -soshome was not specified then we can look for nocache
WITHOUT_CLASSIFICATION	Ignore Exception
WITHOUT_CLASSIFICATION	look for a recursive option
WITHOUT_CLASSIFICATION	Look for a comment
WITHOUT_CLASSIFICATION	-verbose
WITHOUT_CLASSIFICATION	The SOS class knows that the SOS server needs the password flag, even if there is no password ,so we send a " "
WITHOUT_CLASSIFICATION	add -command CheckOutProject to the commandline
WITHOUT_CLASSIFICATION	add -command AddLabel to the commandline
WITHOUT_CLASSIFICATION	a label is required
WITHOUT_CLASSIFICATION	get the list of files in the dir
WITHOUT_CLASSIFICATION	get a random number between 0 and the number of files
WITHOUT_CLASSIFICATION	set the source to the file at that location
WITHOUT_CLASSIFICATION	Empty block
WITHOUT_CLASSIFICATION	System.exit(0);
WITHOUT_CLASSIFICATION	build successfull!
WITHOUT_CLASSIFICATION	AbstractSshMessage
WITHOUT_CLASSIFICATION	dir does not exist.
WITHOUT_CLASSIFICATION	only track progress for files larger than 100kb in verbose mode
WITHOUT_CLASSIFICATION	get I/O streams for remote scp
WITHOUT_CLASSIFICATION	this indicates an error.
WITHOUT_CLASSIFICATION	appears that the next token is not used and it's zero.
WITHOUT_CLASSIFICATION	read a content of lfile
WITHOUT_CLASSIFICATION	Ignored
WITHOUT_CLASSIFICATION	do nothing;
WITHOUT_CLASSIFICATION	didn't receive any response
WITHOUT_CLASSIFICATION	execute the command
WITHOUT_CLASSIFICATION	wait for it to finish
WITHOUT_CLASSIFICATION	ran out of time
WITHOUT_CLASSIFICATION	completed successfully
WITHOUT_CLASSIFICATION	user:password@host:/path notation
WITHOUT_CLASSIFICATION	no password, will require passphrase
WITHOUT_CLASSIFICATION	skip
WITHOUT_CLASSIFICATION	send "C0644 filesize filename", where filename should not include '/'
WITHOUT_CLASSIFICATION	send a content of lfile
WITHOUT_CLASSIFICATION	C0644 filesize filename - header for a regular file T time 0 time 0\n - present if perserve time. D directory - this is the header for a directory.
WITHOUT_CLASSIFICATION	swallow if there was an error before so that original error will be passed up
WITHOUT_CLASSIFICATION	since filesize keeps on decreasing we have to store the initial filesize
WITHOUT_CLASSIFICATION	b may be 0 for success, 1 for error, 2 for fatal error,
WITHOUT_CLASSIFICATION	like <exec> like <exec> like <exec>
WITHOUT_CLASSIFICATION	log(message, Project.MSG_DEBUG);
WITHOUT_CLASSIFICATION	we want this to have a false default, unlike for Checkin.
WITHOUT_CLASSIFICATION	If the file doesn't pass the include/exclude tests, skip it.
WITHOUT_CLASSIFICATION	We try to update the status once to give StarTeam another chance.
WITHOUT_CLASSIFICATION	once we find a folder that isn't in the repository, we know we can add it.
WITHOUT_CLASSIFICATION	once we find a folder that isn't in the repository, we know we can add it.
WITHOUT_CLASSIFICATION	if a label has been supplied, use it to configure the view otherwise use current view
WITHOUT_CLASSIFICATION	if a date has been supplied use a view configured to the date.
WITHOUT_CLASSIFICATION	if a date has been supplied use a view configured to the date.
WITHOUT_CLASSIFICATION	otherwise, use this view configured as the tip.
WITHOUT_CLASSIFICATION	otherwise, use this view configured as the tip.
WITHOUT_CLASSIFICATION	For all Files in this folder, we need to check if there have been modifications.
WITHOUT_CLASSIFICATION	Now we recursively call this method on all sub folders in this folder unless recursive attribute is off.
WITHOUT_CLASSIFICATION	handle the files so they appear first
WITHOUT_CLASSIFICATION	now do it again for the directories so they appear last.
WITHOUT_CLASSIFICATION	Create the new label and update the repository
WITHOUT_CLASSIFICATION	write a Properties file in each directory:
WITHOUT_CLASSIFICATION	Create an instance of the rmic, redirecting output to the project log
WITHOUT_CLASSIFICATION	CheckStyle:MethodNameCheck OFF - bc
WITHOUT_CLASSIFICATION	once we find a folder that isn't in the repository, we know we can add it.
WITHOUT_CLASSIFICATION	ATTRIBUTES settable from ant.
WITHOUT_CLASSIFICATION	if a label has been supplied and it is a view label, use it to configure the view
WITHOUT_CLASSIFICATION	if a label has been supplied and it is a revision label, use the raw the view as the snapshot
WITHOUT_CLASSIFICATION	prune away any files not belonging to the revision label this is one ugly API from Starteam SDK
WITHOUT_CLASSIFICATION	PR 31965 says that it can return null
WITHOUT_CLASSIFICATION	no root local mapping has been specified.
WITHOUT_CLASSIFICATION	Inspect everything in the root folder and then recursively
WITHOUT_CLASSIFICATION	Tell user what he is doing
WITHOUT_CLASSIFICATION	set the local folder.
WITHOUT_CLASSIFICATION	set the local folder.
WITHOUT_CLASSIFICATION	ATTRIBUTES
WITHOUT_CLASSIFICATION	create a hashtable to group them by parent directory:
WITHOUT_CLASSIFICATION	else lnk exists, do nothing
WITHOUT_CLASSIFICATION	get an Iterator of file objects representing links (canonical):
WITHOUT_CLASSIFICATION	iterate through the names, get the matching values
WITHOUT_CLASSIFICATION	/ GET/SET methods. Setters, of course are where ant user passes in values. /
WITHOUT_CLASSIFICATION	/ INCLUDE-EXCLUDE processing /
WITHOUT_CLASSIFICATION	find the starteam folder specified to be the root of the operation. Throw if it can't be found.
WITHOUT_CLASSIFICATION	either use default path or root local mapping, which is now embedded in the root folder
WITHOUT_CLASSIFICATION	/ GET/SET methods. Setters, of course are where ant user passes in values. /
WITHOUT_CLASSIFICATION	fill up a Properties object with link and resource names:
WITHOUT_CLASSIFICATION	find the resource of the existing link:
WITHOUT_CLASSIFICATION	rename the resource, thus breaking the link:
WITHOUT_CLASSIFICATION	delete the (now) broken link:
WITHOUT_CLASSIFICATION	return the resource to its original name:
WITHOUT_CLASSIFICATION	loop through the supplied file sets:
WITHOUT_CLASSIFICATION	load included files as properties files:
WITHOUT_CLASSIFICATION	-GL
WITHOUT_CLASSIFICATION	-GL
WITHOUT_CLASSIFICATION	-I- or -I-Y or -I-N
WITHOUT_CLASSIFICATION	-I- or -I-Y or -I-N
WITHOUT_CLASSIFICATION	-O-
WITHOUT_CLASSIFICATION	-R
WITHOUT_CLASSIFICATION	-R
WITHOUT_CLASSIFICATION	-V
WITHOUT_CLASSIFICATION	-W
WITHOUT_CLASSIFICATION	-W
WITHOUT_CLASSIFICATION	-Y
WITHOUT_CLASSIFICATION	-Y
WITHOUT_CLASSIFICATION	-G
WITHOUT_CLASSIFICATION	-GWS or -GWR
WITHOUT_CLASSIFICATION	set to empty str if no local path return
WITHOUT_CLASSIFICATION	make sure m_LocalDir exists, create it if it doesn't
WITHOUT_CLASSIFICATION	Use the OS launcher so we get environment variables
WITHOUT_CLASSIFICATION	VSS items
WITHOUT_CLASSIFICATION	VSS items
WITHOUT_CLASSIFICATION	-C
WITHOUT_CLASSIFICATION	-C
WITHOUT_CLASSIFICATION	-L Specify the new label on the command line (instead of being prompted)
WITHOUT_CLASSIFICATION	-V Label an existing file or project version
WITHOUT_CLASSIFICATION	first off, make sure that we've got a command and a vssdir ...
WITHOUT_CLASSIFICATION	pre Kaffe 1.1.5
WITHOUT_CLASSIFICATION	-GL
WITHOUT_CLASSIFICATION	Write the contents to our master list of links This method assumes that all links are defined in terms of absolute paths, or paths relative to the working directory:
WITHOUT_CLASSIFICATION	build the command line from what we got the format is ss Get VSS items [-G] [-H] [-I-] [-N] [-O] [-R] [-V] [-W] [-Y] [-?] as specified in the SS.EXE help
WITHOUT_CLASSIFICATION	-I- or -I-Y or -I-N
WITHOUT_CLASSIFICATION	-I- or -I-Y or -I-N
WITHOUT_CLASSIFICATION	-O-
WITHOUT_CLASSIFICATION	-R
WITHOUT_CLASSIFICATION	-R
WITHOUT_CLASSIFICATION	-R
WITHOUT_CLASSIFICATION	-V
WITHOUT_CLASSIFICATION	-W
WITHOUT_CLASSIFICATION	-Y
WITHOUT_CLASSIFICATION	-Y
WITHOUT_CLASSIFICATION	-Y
WITHOUT_CLASSIFICATION	-G
WITHOUT_CLASSIFICATION	-GWS or -GWR
WITHOUT_CLASSIFICATION	VSS items
WITHOUT_CLASSIFICATION	Use getShortLabel() so labels longer then 30 char are truncated and the user is warned
WITHOUT_CLASSIFICATION	ss.exe exits with '100', when files have been skipped so we have to ignore the failure
WITHOUT_CLASSIFICATION	If location of ss.ini is specified we need to set the environment-variable SSDIR to this value
WITHOUT_CLASSIFICATION	build the command line from what we got the format is ss Label VSS items [-C] [-H] [-I-] [-Llabel] [-N] [-O] [-V] [-Y] [-?] as specified in the SS.EXE help
WITHOUT_CLASSIFICATION	VSS items
WITHOUT_CLASSIFICATION	-C
WITHOUT_CLASSIFICATION	-C
WITHOUT_CLASSIFICATION	first off, make sure that we've got a command and a vssdir ...
WITHOUT_CLASSIFICATION	first off, make sure that we've got a command and a vssdir ...
WITHOUT_CLASSIFICATION	build the command line from what we got the format is ss Checkin VSS items [-H] [-C] [-I-] [-N] [-O] [-R] [-W] [-Y] [-?] as specified in the SS.EXE help
WITHOUT_CLASSIFICATION	-VL
WITHOUT_CLASSIFICATION	-B / -D / -F-
WITHOUT_CLASSIFICATION	-O
WITHOUT_CLASSIFICATION	first off, make sure that we've got a command and a localPath ...
WITHOUT_CLASSIFICATION	-G-
WITHOUT_CLASSIFICATION	first off, make sure that we've got a command and a vssdir...
WITHOUT_CLASSIFICATION	build the command line from what we got the format is: ss Create VSS items [-C] [-H] [-I-] [-N] [-O] [-S] [-Y] [-?] as specified in the SS.EXE help
WITHOUT_CLASSIFICATION	pre Kaffe 1.1.2
WITHOUT_CLASSIFICATION	only supported since Kaffe 1.1.2
WITHOUT_CLASSIFICATION	handle the many different stub options.
WITHOUT_CLASSIFICATION	default is compatibility
WITHOUT_CLASSIFICATION	anything else
WITHOUT_CLASSIFICATION	do nothing with the value? or go -v+stubVersion??
WITHOUT_CLASSIFICATION	set the non-null stubOption
WITHOUT_CLASSIFICATION	we know that name.endsWith(".class")
WITHOUT_CLASSIFICATION	Combine the build classpath with the system classpath, in an order determined by the value of build.sysclasspath
WITHOUT_CLASSIFICATION	swallow
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	build the command line from what we got the format is ss CP VSS items [-H] [-I-] [-Y] [-?] as specified in the SS.EXE help
WITHOUT_CLASSIFICATION	for java1.5+, we generate compatible stubs, that is, unless the caller asked for IDL or IIOP support.
WITHOUT_CLASSIFICATION	JRMP with simple naming convention
WITHOUT_CLASSIFICATION	I know, this is not necessary, but I prefer it explicit (SB)
WITHOUT_CLASSIFICATION	no package
WITHOUT_CLASSIFICATION	no package
WITHOUT_CLASSIFICATION	only stub, no tie
WITHOUT_CLASSIFICATION	stub is derived from implementation, tie from interface name.
WITHOUT_CLASSIFICATION	rely on RMIC being on the path
WITHOUT_CLASSIFICATION	set up the args
WITHOUT_CLASSIFICATION	Create an instance of the rmic
WITHOUT_CLASSIFICATION	convert to lower case in the English locale,
WITHOUT_CLASSIFICATION	handle default specially by choosing the sun or kaffe compiler
WITHOUT_CLASSIFICATION	no match? ask for the non-lower-cased type
WITHOUT_CLASSIFICATION	do the system assertions
WITHOUT_CLASSIFICATION	do the system assertions
WITHOUT_CLASSIFICATION	do the system assertions
WITHOUT_CLASSIFICATION	now any inner assertions
WITHOUT_CLASSIFICATION	now any inner assertions
WITHOUT_CLASSIFICATION	now any inner assertions
WITHOUT_CLASSIFICATION	catch invalidness
WITHOUT_CLASSIFICATION	see if it is a package or a class
WITHOUT_CLASSIFICATION	packages get a ... prefix
WITHOUT_CLASSIFICATION	append the ... suffix if not there already
WITHOUT_CLASSIFICATION	classes just get the classname
WITHOUT_CLASSIFICATION	-- Fields ----------------------------------------------------------------
WITHOUT_CLASSIFICATION	-- Methods ---------------------------------------------------------------
WITHOUT_CLASSIFICATION	Add all nested elements to our catalog
WITHOUT_CLASSIFICATION	Ignore exception
WITHOUT_CLASSIFICATION	New behavior for delayed task creation. Description will be evaluated in Project.getDescription()
WITHOUT_CLASSIFICATION	Append the classpath of the nested catalog
WITHOUT_CLASSIFICATION	Append the catalog path of the nested catalog
WITHOUT_CLASSIFICATION	At this point we are probably in failure mode, but try to use the bare URI as a last gasp
WITHOUT_CLASSIFICATION	The Apache resolver is present - Need to check if it can be seen by the catalog resolver class. Start by getting the actual loader
WITHOUT_CLASSIFICATION	load the base class through this loader.
WITHOUT_CLASSIFICATION	and find its actual loader
WITHOUT_CLASSIFICATION	Success! The xml-commons resolver library is available, so use it.
WITHOUT_CLASSIFICATION	The xml-commons resolver library is not available, so we can't use it.
WITHOUT_CLASSIFICATION	the following line seems to be necessary on Windows under JDK 1.2
WITHOUT_CLASSIFICATION	The ResourceLocation may specify a relative path for its location attribute. This is resolved using the appropriate base.
WITHOUT_CLASSIFICATION	for classpath lookup we ignore the base directory
WITHOUT_CLASSIFICATION	The ResourceLocation may specify a relative url for its location attribute. This is resolved using the appropriate base.
WITHOUT_CLASSIFICATION	We didn't match a ResourceLocation, but since we only support PUBLIC and URI entry types internally, it is still possible that there is another entry in an external catalog that will match. We call Apache resolver's resolveEntity method to cover this possibility.
WITHOUT_CLASSIFICATION	Use the passed in base in preference to the base from matchingEntry, which is either null or the directory in which the external catalog file from which it was obtained is located. We make a copy so matchingEntry's original base is untouched. Of course, if there is no base, no need to make a copy... This is the standard behavior as per my reading of the JAXP and XML Catalog specs. CKS 11/7/2002
WITHOUT_CLASSIFICATION	Parse each catalog listed in nested <catalogpath> elements
WITHOUT_CLASSIFICATION	-- XMLCatalog
WITHOUT_CLASSIFICATION	Methods below all add specific selectors
WITHOUT_CLASSIFICATION	No includes supplied, so set it to 'matches all'
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	package-private for now
WITHOUT_CLASSIFICATION	package-private for now
WITHOUT_CLASSIFICATION	special case in ZIPs, we do not want this thing included
WITHOUT_CLASSIFICATION	first check if the archive needs to be scanned again
WITHOUT_CLASSIFICATION	do not use a FileResource b/c it pulls File info from the filesystem:
WITHOUT_CLASSIFICATION	spare scanning again and again
WITHOUT_CLASSIFICATION	cached DirectoryScanner instance for our own Project only
WITHOUT_CLASSIFICATION	SelectorContainer methods
WITHOUT_CLASSIFICATION	WIN9x uses a bat file for executing commands
WITHOUT_CLASSIFICATION	empty path return empty string
WITHOUT_CLASSIFICATION	no command? no string
WITHOUT_CLASSIFICATION	parse with a simple finite state machine
WITHOUT_CLASSIFICATION	inherit doc
WITHOUT_CLASSIFICATION	can't have zero-length token
WITHOUT_CLASSIFICATION	we have another token, let's parse it.
WITHOUT_CLASSIFICATION	should always be the case...
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	swallow
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	Invoked by IntrospectionHelper for <code>setXXX(Path p)</code> attribute setters. @param p the <code>Project</code> for this path. @param path the <code>String</code> path definition.
WITHOUT_CLASSIFICATION	ignore: don't trust anyone
WITHOUT_CLASSIFICATION	last: don't trust the developer
WITHOUT_CLASSIFICATION	newer versions of Kaffe (1.1.1+) won't have this, but this will be sorted by FileSet anyway.
WITHOUT_CLASSIFICATION	JDK 1.2+ seems to set java.home to the JRE directory.
WITHOUT_CLASSIFICATION	Just keep the old version as well and let addExisting sort it out.
WITHOUT_CLASSIFICATION	Sun's and Apple's 1.4 have JCE and JSSE in separate jars.
WITHOUT_CLASSIFICATION	IBM's 1.4 has rt.jar split into 4 smaller jars and a combined JCE/JSSE in security.jar.
WITHOUT_CLASSIFICATION	Added for MacOS X
WITHOUT_CLASSIFICATION	remove any null elements
WITHOUT_CLASSIFICATION	create the list
WITHOUT_CLASSIFICATION	fill it
WITHOUT_CLASSIFICATION	convert to an array
WITHOUT_CLASSIFICATION	properties are part of the vm options...
WITHOUT_CLASSIFICATION	boot classpath
WITHOUT_CLASSIFICATION	main classpath
WITHOUT_CLASSIFICATION	now any assertions are added
WITHOUT_CLASSIFICATION	this is the classname to run as well as its arguments. in case of 'executeJar', the executable is a jar file.
WITHOUT_CLASSIFICATION	cloned system properties
WITHOUT_CLASSIFICATION	classpath is "-classpath <classpath>" -> 2 args
WITHOUT_CLASSIFICATION	bootclasspath is "-Xbootclasspath:<classpath>" -> 1 arg
WITHOUT_CLASSIFICATION	jar execution requires an additional -jar option
WITHOUT_CLASSIFICATION	<? extends EnumeratedAttribute>
WITHOUT_CLASSIFICATION	end nested class
WITHOUT_CLASSIFICATION	Add this PropertySet's nested PropertySets' property names.
WITHOUT_CLASSIFICATION	make a copy...
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	Gotta atleast put in the proper spelling :-P
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	If this TransformOperation has DrawOperation children then Rotate the first child and return.
WITHOUT_CLASSIFICATION	If this TransformOperation has DrawOperation children then Rotate the first child and return.
WITHOUT_CLASSIFICATION	CheckStyle:MemberNameCheck ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc CheckStyle:MemberNameCheck OFF - bc
WITHOUT_CLASSIFICATION	change this to get the objects from the other reference
WITHOUT_CLASSIFICATION	change this to get the objects from the other reference
WITHOUT_CLASSIFICATION	-- Fields ----------------------------------------------------------------
WITHOUT_CLASSIFICATION	-- Methods ---------------------------------------------------------------
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF
WITHOUT_CLASSIFICATION	may be null if a system property has been added after the project instance has been initialized
WITHOUT_CLASSIFICATION	Add this PropertySet's property names.
WITHOUT_CLASSIFICATION	map the names
WITHOUT_CLASSIFICATION	Create one NameEntry in the appropriate pattern list for each line in the file.
WITHOUT_CLASSIFICATION	Get a FileReader
WITHOUT_CLASSIFICATION	Ignore exception
WITHOUT_CLASSIFICATION	-- ResourceLocation
WITHOUT_CLASSIFICATION	Add base set of permissions
WITHOUT_CLASSIFICATION	if the permission was not explicitly granted or revoked the original security manager will do its work
WITHOUT_CLASSIFICATION	None of the actions revoked, so all allowed.
WITHOUT_CLASSIFICATION	default true:
WITHOUT_CLASSIFICATION	default false:
WITHOUT_CLASSIFICATION	default false:
WITHOUT_CLASSIFICATION	The regular expression factory
WITHOUT_CLASSIFICATION	temporary variable
WITHOUT_CLASSIFICATION	This is included
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	- ApacheCatalog
WITHOUT_CLASSIFICATION	If you don't do this, you get all sorts of annoying warnings about a missing properties file. However, it seems to work just fine with default values. Ultimately, we should probably include a "CatalogManager.properties" file in the ant jarfile with some default property settings. See CatalogManager.java for more details.
WITHOUT_CLASSIFICATION	Make sure CatalogResolver instantiates ApacheCatalog, rather than a plain Catalog
WITHOUT_CLASSIFICATION	debug CatalogManager.getStaticManager().setVerbosity(4);
WITHOUT_CLASSIFICATION	Pass in reference to ourselves so we can be called back.
WITHOUT_CLASSIFICATION	-- ApacheCatalogResolver
WITHOUT_CLASSIFICATION	sorted bag impl. borrowed from commons-collections TreeBag:
WITHOUT_CLASSIFICATION	now check each Resource in case the child only lets through files from any children IT may have:
WITHOUT_CLASSIFICATION	?
WITHOUT_CLASSIFICATION	not using the accessor in this case to avoid side effects
WITHOUT_CLASSIFICATION	package-private
WITHOUT_CLASSIFICATION	new oata.util.ReaderInputStream(new InputStreamReader(
WITHOUT_CLASSIFICATION	, encoding), encoding);
WITHOUT_CLASSIFICATION	first the easy way, if all children are filesystem-only, return true:
WITHOUT_CLASSIFICATION	preserve order-encountered using a list; enforce set logic manually:
WITHOUT_CLASSIFICATION	cached DirectoryScanner instance
WITHOUT_CLASSIFICATION	if no nested, natural order:
WITHOUT_CLASSIFICATION	dummy
WITHOUT_CLASSIFICATION	implement ResourceSelector; inherit doc
WITHOUT_CLASSIFICATION	First, check that all elements are correctly configured
WITHOUT_CLASSIFICATION	if either of them is missing, they are different
WITHOUT_CLASSIFICATION	different size =>different files
WITHOUT_CLASSIFICATION	same date if dest timestamp is within granularity of the srcfile
WITHOUT_CLASSIFICATION	different dates => different files
WITHOUT_CLASSIFICATION	here do a bulk comparison
WITHOUT_CLASSIFICATION	At this point, we know we have a tie.
WITHOUT_CLASSIFICATION	throw BuildException on error
WITHOUT_CLASSIFICATION	throw BuildException on error
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	throw BuildException on error
WITHOUT_CLASSIFICATION	throw BuildException on error
WITHOUT_CLASSIFICATION	throw BuildException on error
WITHOUT_CLASSIFICATION	throw BuildException on error
WITHOUT_CLASSIFICATION	If you felt daring, you could cache the basedir absolute path
WITHOUT_CLASSIFICATION	Sanity check. Ditch it if you want faster performance
WITHOUT_CLASSIFICATION	Determine file whose out-of-dateness is to be checked
WITHOUT_CLASSIFICATION	If filename does not match the To attribute of the mapper then filter it out of the files we are considering
WITHOUT_CLASSIFICATION	If filename does not match the To attribute of the mapper then filter it out of the files we are considering
WITHOUT_CLASSIFICATION	Sanity check
WITHOUT_CLASSIFICATION	Sanity check
WITHOUT_CLASSIFICATION	Determine file whose existence is to be checked
WITHOUT_CLASSIFICATION	When using this as a custom selector, this method will be called. It translates each parameter into the appropriate setXXX() call. @param parameters the complete set of parameters for this selector.
WITHOUT_CLASSIFICATION	Directory size never selected for
WITHOUT_CLASSIFICATION	You wish!
WITHOUT_CLASSIFICATION	check millis and only set it once.
WITHOUT_CLASSIFICATION	When str starts with a File.separator, pattern has to start with a File.separator. When pattern starts with a File.separator, str has to start with a File.separator.
WITHOUT_CLASSIFICATION	up to first ''
WITHOUT_CLASSIFICATION	up to first ''
WITHOUT_CLASSIFICATION	String is exhausted
WITHOUT_CLASSIFICATION	String is exhausted
WITHOUT_CLASSIFICATION	String is exhausted
WITHOUT_CLASSIFICATION	String not exhausted, but pattern is. Failure.
WITHOUT_CLASSIFICATION	String not exhausted, but pattern is. Failure.
WITHOUT_CLASSIFICATION	up to last ''
WITHOUT_CLASSIFICATION	'' situation, so skip one
WITHOUT_CLASSIFICATION	No ''s, so we make a shortcut
WITHOUT_CLASSIFICATION	Pattern and string do not have the same size
WITHOUT_CLASSIFICATION	Character mismatch
WITHOUT_CLASSIFICATION	Character mismatch
WITHOUT_CLASSIFICATION	String matches against pattern
WITHOUT_CLASSIFICATION	throw BuildException on error
WITHOUT_CLASSIFICATION	Character mismatch
WITHOUT_CLASSIFICATION	Find the pattern between padIdxStart & padIdxTmp in str between strIdxStart & strIdxEnd
WITHOUT_CLASSIFICATION	Find the pattern between padIdxStart & padIdxTmp in str between strIdxStart & strIdxEnd
WITHOUT_CLASSIFICATION	Character mismatch
WITHOUT_CLASSIFICATION	Character mismatch
WITHOUT_CLASSIFICATION	Character mismatch
WITHOUT_CLASSIFICATION	Pattern contains only '', which matches anything
WITHOUT_CLASSIFICATION	Process characters before first star
WITHOUT_CLASSIFICATION	All characters in the string are used. Check if only ''s are left in the pattern. If so, we succeeded. Otherwise failure.
WITHOUT_CLASSIFICATION	All characters in the string are used. Check if only ''s are left in the pattern. If so, we succeeded. Otherwise failure.
WITHOUT_CLASSIFICATION	Process characters after last star
WITHOUT_CLASSIFICATION	process pattern between stars. padIdxStart and patIdxEnd point always to a ''.
WITHOUT_CLASSIFICATION	Two stars next to each other, skip the first one.
WITHOUT_CLASSIFICATION	All characters in the string are used. Check if only ''s are left in the pattern. If so, we succeeded. Otherwise failure.
WITHOUT_CLASSIFICATION	++
WITHOUT_CLASSIFICATION	Creation is done here rather than in isSelected() because some containers may do a validation pass before running isSelected(), but we need to check for the existence of the created class.
WITHOUT_CLASSIFICATION	We know that dynselector must be non-null if no error message
WITHOUT_CLASSIFICATION	Deal with if and unless properties first
WITHOUT_CLASSIFICATION	----- attributes -----
WITHOUT_CLASSIFICATION	----- internal member variables -----
WITHOUT_CLASSIFICATION	----- constructors -----
WITHOUT_CLASSIFICATION	----- configuration -----
WITHOUT_CLASSIFICATION	normal use inside Ant
WITHOUT_CLASSIFICATION	set self as a BuildListener to delay cachefile saves
WITHOUT_CLASSIFICATION	no reference to project - e.g. during normal JUnit tests
WITHOUT_CLASSIFICATION	this is a . parameter for later use
WITHOUT_CLASSIFICATION	specify the algorithm classname
WITHOUT_CLASSIFICATION	use Algorithm defined via name
WITHOUT_CLASSIFICATION	use Algorithm specified by classname
WITHOUT_CLASSIFICATION	nothing specified - use default
WITHOUT_CLASSIFICATION	else nothing to do
WITHOUT_CLASSIFICATION	use Algorithm defined via name
WITHOUT_CLASSIFICATION	----- Set the main attributes, pattern '' -----
WITHOUT_CLASSIFICATION	use Algorithm specified by classname
WITHOUT_CLASSIFICATION	nothing specified - use default
WITHOUT_CLASSIFICATION	specify the cache classname
WITHOUT_CLASSIFICATION	use Cache defined via name
WITHOUT_CLASSIFICATION	use Cache specified by classname
WITHOUT_CLASSIFICATION	specify the comparator classname
WITHOUT_CLASSIFICATION	----- Set the special attributes, pattern '.' -----
WITHOUT_CLASSIFICATION	load the specified class
WITHOUT_CLASSIFICATION	----- the selection work -----
WITHOUT_CLASSIFICATION	We have a 'resourced' file, so reconvert it and use the 'old' implementation.
WITHOUT_CLASSIFICATION	You can not compute a value for a directory
WITHOUT_CLASSIFICATION	Get the values and do the comparison
WITHOUT_CLASSIFICATION	Maybe update the cache
WITHOUT_CLASSIFICATION	----- attribute and nested element support -----
WITHOUT_CLASSIFICATION	the usual classloader
WITHOUT_CLASSIFICATION	additional use the provided classpath
WITHOUT_CLASSIFICATION	no-op
WITHOUT_CLASSIFICATION	----- 'beautiful' output -----
WITHOUT_CLASSIFICATION	----- BuildListener interface methods -----
WITHOUT_CLASSIFICATION	The EnumeratedAttributes for the three interface implementations. Name-Classname mapping is done in the configure() method.
WITHOUT_CLASSIFICATION	----- member variables -----
WITHOUT_CLASSIFICATION	----- member variables -----
WITHOUT_CLASSIFICATION	----- Algorithm-Configuration -----
WITHOUT_CLASSIFICATION	----- Algorithm-Configuration -----
WITHOUT_CLASSIFICATION	----- Logic -----
WITHOUT_CLASSIFICATION	----- Logic -----
WITHOUT_CLASSIFICATION	implementation adapted from ...taskdefs.Checksum, thanks to Magesh for hint
WITHOUT_CLASSIFICATION	Read the file
WITHOUT_CLASSIFICATION	----- member variables - configuration -----
WITHOUT_CLASSIFICATION	----- member variables - internal use -----
WITHOUT_CLASSIFICATION	----- Constructors -----
WITHOUT_CLASSIFICATION	----- Cache-Configuration -----
WITHOUT_CLASSIFICATION	----- Data Access
WITHOUT_CLASSIFICATION	after loading the cache is up to date with the file
WITHOUT_CLASSIFICATION	----- additional -----
WITHOUT_CLASSIFICATION	swallow as this simply doesn't seem to be Kaffe
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	find the line breaks and pass other chars through in blocks
WITHOUT_CLASSIFICATION	either end of buffer or a line separator char
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	Because the content is only read the file will not be damaged. I tested with JPG, ZIP and PDF as binary files.
WITHOUT_CLASSIFICATION	don't need the opposite check as the Dictionaries have the same size, so we've also covered all keys of d2 already.
WITHOUT_CLASSIFICATION	log uptodateness of all targets:
WITHOUT_CLASSIFICATION	CheckStyle:ParameterNumberCheck OFF - bc
WITHOUT_CLASSIFICATION	this should not happen, because the lines are returned with the end of line delimiter
WITHOUT_CLASSIFICATION	CheckStyle:ParameterNumberCheck ON
WITHOUT_CLASSIFICATION	two not existing files are equal
WITHOUT_CLASSIFICATION	should the following two be switched? If r1 and r2 refer to the same file, isn't their content equal regardless of whether that file is a directory?
WITHOUT_CLASSIFICATION	don't want to compare directory contents for now
WITHOUT_CLASSIFICATION	as far as we know
WITHOUT_CLASSIFICATION	ignore release of an already-closed funnel
WITHOUT_CLASSIFICATION	Write child elements and text
WITHOUT_CLASSIFICATION	Write indent characters
WITHOUT_CLASSIFICATION	Write element
WITHOUT_CLASSIFICATION	steal default namespace
WITHOUT_CLASSIFICATION	Write attributes
WITHOUT_CLASSIFICATION	Write element close
WITHOUT_CLASSIFICATION	relative path
WITHOUT_CLASSIFICATION	Fall tru
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	Determine the Java version by looking at available classes java.net.Proxy was introduced in JDK 1.5 java.lang.CharSequence was introduced in JDK 1.4 java.lang.StrictMath was introduced in JDK 1.3 java.lang.ThreadLocal was introduced in JDK 1.2 java.lang.Void was introduced in JDK 1.1 Count up version until a NoClassDefFoundError ends the try
WITHOUT_CLASSIFICATION	swallow as we've hit the max class version that we have
WITHOUT_CLASSIFICATION	Extrapolating from: "NetWare may have a "java" in that directory, but 99% of the time, you don't want to execute it" -- Jeff Tulley <JTULLEY@novell.com>
WITHOUT_CLASSIFICATION	On IBM's JDK 1.2 the directory layout is different, 1.3 follows Sun's layout.
WITHOUT_CLASSIFICATION	On IBM's JDK 1.2 the directory layout is different, 1.3 follows Sun's layout.
WITHOUT_CLASSIFICATION	Unfortunately on Windows java.home doesn't always refer to the correct location, so we need to fall back to assuming java is somewhere on the PATH.
WITHOUT_CLASSIFICATION	fall back to JRE bin directory, also catches JDK 1.0 and 1.1 where java.home points to the root of the JDK and Mac OS X where the whole directory layout is different from Sun's
WITHOUT_CLASSIFICATION	This is the most common extension case - exe for windows and OS/2, nothing for nix.
WITHOUT_CLASSIFICATION	In Java1.5, the apache stuff moved.
WITHOUT_CLASSIFICATION	fall through.
WITHOUT_CLASSIFICATION	fall through
WITHOUT_CLASSIFICATION	fall through
WITHOUT_CLASSIFICATION	fall through
WITHOUT_CLASSIFICATION	are there any here that we forgot? fall through
WITHOUT_CLASSIFICATION	things like sun.reflection, sun.misc, sun.net
WITHOUT_CLASSIFICATION	things like sun.reflection, sun.misc, sun.net
WITHOUT_CLASSIFICATION	Strip '.' token
WITHOUT_CLASSIFICATION	If it ended in a dot, throw an exception
WITHOUT_CLASSIFICATION	Exact match
WITHOUT_CLASSIFICATION	Exact match
WITHOUT_CLASSIFICATION	Exact match
WITHOUT_CLASSIFICATION	might read too much
WITHOUT_CLASSIFICATION	would be imprecise
WITHOUT_CLASSIFICATION	last character isn't a digit
WITHOUT_CLASSIFICATION	write out the number of characters encoded in this line.
WITHOUT_CLASSIFICATION	set the padding defaults
WITHOUT_CLASSIFICATION	get the next 3 bytes (if we have them)
WITHOUT_CLASSIFICATION	OK, Java 1.3.
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:ConstantNameCheck OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:ConstantNameCheck ON
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	#8031: first try Java 1.4.
WITHOUT_CLASSIFICATION	Reflection problems? Should not happen, debug.
WITHOUT_CLASSIFICATION	CheckStyle:ParameterNumberCheck OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:ParameterNumberCheck ON
WITHOUT_CLASSIFICATION	depending on the implementation the actual RE won't get instantiated in the constructor.
WITHOUT_CLASSIFICATION	terminate with a linefeed alone
WITHOUT_CLASSIFICATION	NotReached
WITHOUT_CLASSIFICATION	0 to 7 8 to 15 16 to 23 24 to 31 32 to 39 40 to 47 48 to 55 56 to 63
WITHOUT_CLASSIFICATION	store the octets
WITHOUT_CLASSIFICATION	store the octets
WITHOUT_CLASSIFICATION	store the octets
WITHOUT_CLASSIFICATION	padding
WITHOUT_CLASSIFICATION	padding
WITHOUT_CLASSIFICATION	magic property
WITHOUT_CLASSIFICATION	only text nodes that are non null after property expansion are added
WITHOUT_CLASSIFICATION	no need to synchronize, as Vector is always synchronized
WITHOUT_CLASSIFICATION	do not close the stream
WITHOUT_CLASSIFICATION	Empty
WITHOUT_CLASSIFICATION	Empty
WITHOUT_CLASSIFICATION	get some non-crypto-grade randomness from various places.
WITHOUT_CLASSIFICATION	Cannot resolve it, so skip it.
WITHOUT_CLASSIFICATION	plain component
WITHOUT_CLASSIFICATION	make sure we are dealing with an absolute path
WITHOUT_CLASSIFICATION	remove the initial separator; the root has it.
WITHOUT_CLASSIFICATION	UNC drive
WITHOUT_CLASSIFICATION	format: "DEVICE:[DIR.SUBDIR]FILE"
WITHOUT_CLASSIFICATION	treat directories specified using .DIR syntax as files
WITHOUT_CLASSIFICATION	add an extra slash for filesystems with drive-specifiers
WITHOUT_CLASSIFICATION	do a check for the destination file existing
WITHOUT_CLASSIFICATION	execute the script
WITHOUT_CLASSIFICATION	do nothing by default
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	NotReached
WITHOUT_CLASSIFICATION	now recover all the dependencies collected and add to the list.
WITHOUT_CLASSIFICATION	inherit doc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	NotReached
WITHOUT_CLASSIFICATION	do not close the stream
WITHOUT_CLASSIFICATION	on cygwin, our current directory can be a UNC; assume user.dir is absolute or all hell breaks loose...
WITHOUT_CLASSIFICATION	not before the filesystem root and not after it, since root already contains one
WITHOUT_CLASSIFICATION	ensure that l ends with a / so we never think /foo was a parent directory of /foobar
WITHOUT_CLASSIFICATION	ensure that l ends with a / so we never think /foo was a parent directory of /foobar
WITHOUT_CLASSIFICATION	build the path stack info to compare
WITHOUT_CLASSIFICATION	not the same device (would be "" on Linux/Unix)
WITHOUT_CLASSIFICATION	no comparison possible
WITHOUT_CLASSIFICATION	get index of parts which are equal
WITHOUT_CLASSIFICATION	if "from" part is longer, fill it up with ".." to reach path which is equal to both paths
WITHOUT_CLASSIFICATION	fill it up path with parts which were not equal
WITHOUT_CLASSIFICATION	can safely use '/' because Windows understands '/' as separator
WITHOUT_CLASSIFICATION	base directory of the fileset
WITHOUT_CLASSIFICATION	build the list of sources which are out of date with respect to the target
WITHOUT_CLASSIFICATION	code from Magesh moved from DefaultLogger and slightly modified
WITHOUT_CLASSIFICATION	if you cannot read it, you won't be able to write it either
WITHOUT_CLASSIFICATION	must be a zip of some sort
WITHOUT_CLASSIFICATION	does the class have a package structure
WITHOUT_CLASSIFICATION	check if the package structure is more than 1 level deep
WITHOUT_CLASSIFICATION	class name has more than 1 package level 'com.company.Class'
WITHOUT_CLASSIFICATION	class name has only 1 package level 'package.Class'
WITHOUT_CLASSIFICATION	Add the class in dotted notation 'com.company.Class'
WITHOUT_CLASSIFICATION	Add a class with no package 'Class'
WITHOUT_CLASSIFICATION	force BCEL classes to load now
WITHOUT_CLASSIFICATION	force BCEL classes to load now
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	NotReached
WITHOUT_CLASSIFICATION	we get the root classes and build up a set of classes upon which they depend
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	execute the script
WITHOUT_CLASSIFICATION	log security exceptions and continue; it aint that important and may be quite common running Ant embedded.
WITHOUT_CLASSIFICATION	we look through the classpath elements. If the element is a dir we look for the file. IF it is a zip, we look for the zip entry
WITHOUT_CLASSIFICATION	we look through the source path elements. If the element is a dir we look for the file. If it is a zip, we look for the zip entry. This isn't normal for source paths but we get it for free
WITHOUT_CLASSIFICATION	first letter of the previous segment of the class name 'Class' is upper case ascii. so according to the spec it's an inner class
WITHOUT_CLASSIFICATION	Register Groovy ourselves, since BSF did not natively support it in versions previous to 1.2.4.
WITHOUT_CLASSIFICATION	execute the script
WITHOUT_CLASSIFICATION	translate \1 to $1 so that the Perl5Substitution will work
WITHOUT_CLASSIFICATION	BSF uses a hashtable to store values so cannot declareBean with a null value So need to remove any bean of this name as that bean should not be visible
WITHOUT_CLASSIFICATION	no permission here
WITHOUT_CLASSIFICATION	compute the compiler options based on the input options first
WITHOUT_CLASSIFICATION	treat non-matching groups as empty matches
WITHOUT_CLASSIFICATION	be strict about line separator
WITHOUT_CLASSIFICATION	translate \1 to $(1) so that the Matcher will work
WITHOUT_CLASSIFICATION	Do the substitution
WITHOUT_CLASSIFICATION	replace \1 with the corresponding group
WITHOUT_CLASSIFICATION	Used when sorting. If too many long comparisons happen, we stop sorting, randomise the block slightly, and try again.
WITHOUT_CLASSIFICATION	Nodes and heap entries run from 1. Entry 0 for both the heap and nodes is a sentinel.
WITHOUT_CLASSIFICATION	Nodes and heap entries run from 1. Entry 0 for both the heap and nodes is a sentinel.
WITHOUT_CLASSIFICATION	blockNo++;
WITHOUT_CLASSIFICATION	When we get here we have EITHER: o An empty "assemble" buffer. o No bytes to write (numToWrite == 0)
WITHOUT_CLASSIFICATION	Write `magic' bytes h indicating file-format == huffmanised, followed by a digit indicating blockSize100k.
WITHOUT_CLASSIFICATION	ch = 0;
WITHOUT_CLASSIFICATION	20 is just a paranoia constant
WITHOUT_CLASSIFICATION	empty block at end of file
WITHOUT_CLASSIFICATION	sort the block and establish posn of original string
WITHOUT_CLASSIFICATION	Now the block's CRC, so it is in a known place.
WITHOUT_CLASSIFICATION	Now a single bit indicating randomisation.
WITHOUT_CLASSIFICATION	Finally, block's contents proper.
WITHOUT_CLASSIFICATION	Now another magic 48-bit number, 0x177245385090, to indicate the end of the last block. (sqrt(pi), if you want to know. I did want to use e, but it contains too much repetition -- 27 18 28 18 28 46 -- for me to feel statistically comfortable. Call me paranoid.)
WITHOUT_CLASSIFICATION	write 8-bit
WITHOUT_CLASSIFICATION	write 8-bit
WITHOUT_CLASSIFICATION	write 8-bit
WITHOUT_CLASSIFICATION	write 8-bit
WITHOUT_CLASSIFICATION	write 8-bit
WITHOUT_CLASSIFICATION	write 8-bit
WITHOUT_CLASSIFICATION	Decide how many coding tables to use
WITHOUT_CLASSIFICATION	Generate an initial set of coding tables
WITHOUT_CLASSIFICATION	Iterate up to N_ITERS times to improve the tables.
WITHOUT_CLASSIFICATION	Compute MTF values for the selectors.
WITHOUT_CLASSIFICATION	Assign actual codes for the tables.
WITHOUT_CLASSIFICATION	Transmit the mapping table.
WITHOUT_CLASSIFICATION	Now the selectors.
WITHOUT_CLASSIFICATION	Now the coding tables.
WITHOUT_CLASSIFICATION	And finally, the block data proper
WITHOUT_CLASSIFICATION	Set group start & end marks.
WITHOUT_CLASSIFICATION	Calculate the cost of this group as coded by each of the coding tables.
WITHOUT_CLASSIFICATION	unrolled version of the else-block
WITHOUT_CLASSIFICATION	Find the coding table which is best for this group, and record its identity in the selector table.
WITHOUT_CLASSIFICATION	Increment the symbol frequencies for the selected table.
WITHOUT_CLASSIFICATION	Recompute the tables based on the accumulated frequencies.
WITHOUT_CLASSIFICATION	inlined: bsW(1, inUse[i16 + j] ? 1 : 0);
WITHOUT_CLASSIFICATION	inlined: bsW(1, 1);
WITHOUT_CLASSIFICATION	inlined: bsW(1, 0);
WITHOUT_CLASSIFICATION	inlined: bsW(1, 0);
WITHOUT_CLASSIFICATION	bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);
WITHOUT_CLASSIFICATION	inlined: bsW(5, curr);
WITHOUT_CLASSIFICATION	inlined: bsW(2, 2);
WITHOUT_CLASSIFICATION	10
WITHOUT_CLASSIFICATION	inlined: bsW(2, 3);
WITHOUT_CLASSIFICATION	11
WITHOUT_CLASSIFICATION	copy
WITHOUT_CLASSIFICATION	start inline mainGTU
WITHOUT_CLASSIFICATION	following could be done in a loop, but unrolled it for performance:
WITHOUT_CLASSIFICATION	while x > 0
WITHOUT_CLASSIFICATION	Set up the 2-byte frequency table
WITHOUT_CLASSIFICATION	In the various block-sized structures, live data runs from 0 to last+NUM_OVERSHOOT_BYTES inclusive. First, set up the overshoot area for block.
WITHOUT_CLASSIFICATION	Complete the initial radix sort:
WITHOUT_CLASSIFICATION	Now ftab contains the first loc of every small bucket. Calculate the running order, from smallest to largest big bucket.
WITHOUT_CLASSIFICATION	The main sorting loop.
WITHOUT_CLASSIFICATION	Process big buckets, starting with the least full.
WITHOUT_CLASSIFICATION	Step 1:
WITHOUT_CLASSIFICATION	Step 3:
WITHOUT_CLASSIFICATION	handle 16 bit signed numbers
WITHOUT_CLASSIFICATION	make maps
WITHOUT_CLASSIFICATION	directory with respect to
WITHOUT_CLASSIFICATION	with blockSize 900k 256 byte 256 byte 1032 byte 18002 byte 18002 byte
WITHOUT_CLASSIFICATION	256 byte 1548 byte 6192 byte 24 byte 12 byte 6192 byte 6 byte 16 byte
WITHOUT_CLASSIFICATION	4000 byte 4000 byte 4000 byte
WITHOUT_CLASSIFICATION	1024 byte 1024 byte 256 byte
WITHOUT_CLASSIFICATION	1040 byte 2064 byte 2064 byte
WITHOUT_CLASSIFICATION	262148 byte ------------ 333408 byte
WITHOUT_CLASSIFICATION	Just print a message, like the previous versions of this class did
WITHOUT_CLASSIFICATION	Variables used by setup methods exclusively
WITHOUT_CLASSIFICATION	currBlockNo++;
WITHOUT_CLASSIFICATION	A bad CRC is considered a fatal error.
WITHOUT_CLASSIFICATION	Receive the mapping table
WITHOUT_CLASSIFICATION	Now the selectors
WITHOUT_CLASSIFICATION	Undo the MTF values for the selectors.
WITHOUT_CLASSIFICATION	nearly all times v is zero, 4 in most other cases
WITHOUT_CLASSIFICATION	Now the coding tables
WITHOUT_CLASSIFICATION	finally create the Huffman tables
WITHOUT_CLASSIFICATION	end of file '1' ')' 'Y' '&' 'S' 'Y'
WITHOUT_CLASSIFICATION	Inlined: int zvec = bsR(zn);
WITHOUT_CLASSIFICATION	Inlined: int zvec = bsR(zn);
WITHOUT_CLASSIFICATION	This loop is hammered during decompression, hence avoid native method call overhead of System.arraycopy for very small ranges to copy.
WITHOUT_CLASSIFICATION	not a char and not EOF
WITHOUT_CLASSIFICATION	(with blockSize 900k) 256 byte
WITHOUT_CLASSIFICATION	1024 byte
WITHOUT_CLASSIFICATION	No need to keep track of Bcc'd addresses
WITHOUT_CLASSIFICATION	Blindly trust the user doesn't set any invalid headers
WITHOUT_CLASSIFICATION	RFC 822 s4.1: "Reply-To:" header is optional
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. Don't tackle that problem right now.
WITHOUT_CLASSIFICATION	support "address (name)"
WITHOUT_CLASSIFICATION	support "(name) address"
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	256 byte 18002 byte 18002 byte
WITHOUT_CLASSIFICATION	6192 byte 6192 byte 6192 byte 24 byte
WITHOUT_CLASSIFICATION	1028 byte 512 byte 3096 byte 6 byte --------------- 60798 byte
WITHOUT_CLASSIFICATION	3600000 byte 900000 byte --------------- 4560782 byte ===============
WITHOUT_CLASSIFICATION	RFC 822 s4.1: "From:" header must be sent We rely on error checking by the MTA
WITHOUT_CLASSIFICATION	RFC 822 s4.1: "Header fields are NOT required to occur in any particular order, except that the message body MUST occur AFTER the headers" (the same section specifies a reccommended order, which we ignore)
WITHOUT_CLASSIFICATION	Make a limited attempt to extract a sanitized email address Prefer text in <brackets>, ignore anything in (parentheses)
WITHOUT_CLASSIFICATION	Raw protocol methods below here
WITHOUT_CLASSIFICATION	make sure dot is on new line
WITHOUT_CLASSIFICATION	raw supports <CRLF>.<CRLF>
WITHOUT_CLASSIFICATION	Check that the response is one of the valid codes
WITHOUT_CLASSIFICATION	deprecated, but email is byte-oriented
WITHOUT_CLASSIFICATION	ensure always \r\n
WITHOUT_CLASSIFICATION	Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. Don't tackle that problem right now.
WITHOUT_CLASSIFICATION	add extra dot
WITHOUT_CLASSIFICATION	add extra dot
WITHOUT_CLASSIFICATION	ensure always \r\n
WITHOUT_CLASSIFICATION	UNDONE
WITHOUT_CLASSIFICATION	create a TarEntry for the LongLink, the contents of which are the entry's name
WITHOUT_CLASSIFICATION	Strip off drive letters! REVIEW Would a better check be "(File.separator == '\')"?
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	No absolute pathnames Windows (and Posix?) paths can start with "\\NetworkDrive\", so we loop on starting /'s.
WITHOUT_CLASSIFICATION	start of the central directory
WITHOUT_CLASSIFICATION	REVIEW This is horribly inefficient, but it ensures that we properly skip over bytes via the TarBuffer...
WITHOUT_CLASSIFICATION	read in the name
WITHOUT_CLASSIFICATION	remove trailing null terminator
WITHOUT_CLASSIFICATION	Unexpected EOF!
WITHOUT_CLASSIFICATION	---------------------------------------------------------- somewhat arbitrary choices that are quite common for shared installations -----------------------------------------------------------
WITHOUT_CLASSIFICATION	method is STORED and we used RandomAccessFile
WITHOUT_CLASSIFICATION	If random access output, write the local file header containing the correct CRC and compressed/uncompressed sizes
WITHOUT_CLASSIFICATION	not specified
WITHOUT_CLASSIFICATION	not specified
WITHOUT_CLASSIFICATION	Size/CRC not required if RandomAccessFile is used
WITHOUT_CLASSIFICATION	Various ZIP constants
WITHOUT_CLASSIFICATION	store method in local variable to prevent multiple method calls
WITHOUT_CLASSIFICATION	bit3 set to signal, we use a data descriptor
WITHOUT_CLASSIFICATION	bit3 set to signal, we use a data descriptor
WITHOUT_CLASSIFICATION	compression method
WITHOUT_CLASSIFICATION	compression method
WITHOUT_CLASSIFICATION	last mod. time and date
WITHOUT_CLASSIFICATION	file name length
WITHOUT_CLASSIFICATION	extra field length
WITHOUT_CLASSIFICATION	file name
WITHOUT_CLASSIFICATION	extra field
WITHOUT_CLASSIFICATION	version made by
WITHOUT_CLASSIFICATION	version needed to extract general purpose bit flag
WITHOUT_CLASSIFICATION	last mod. time and date
WITHOUT_CLASSIFICATION	requires version 2 as we are going to store length info in the data descriptor
WITHOUT_CLASSIFICATION	file name length
WITHOUT_CLASSIFICATION	CRC compressed length uncompressed length
WITHOUT_CLASSIFICATION	extra field length
WITHOUT_CLASSIFICATION	file name
WITHOUT_CLASSIFICATION	extra field
WITHOUT_CLASSIFICATION	file comment length
WITHOUT_CLASSIFICATION	disk number start
WITHOUT_CLASSIFICATION	internal file attributes
WITHOUT_CLASSIFICATION	external file attributes
WITHOUT_CLASSIFICATION	relative offset of LFH
WITHOUT_CLASSIFICATION	disk numbers
WITHOUT_CLASSIFICATION	number of entries
WITHOUT_CLASSIFICATION	length and location of CD
WITHOUT_CLASSIFICATION	ZIP file comment
WITHOUT_CLASSIFICATION	array not exhausted
WITHOUT_CLASSIFICATION	version made by
WITHOUT_CLASSIFICATION	version needed to extract
WITHOUT_CLASSIFICATION	general purpose bit flag
WITHOUT_CLASSIFICATION	compression method
WITHOUT_CLASSIFICATION	last mod file time
WITHOUT_CLASSIFICATION	last mod file date
WITHOUT_CLASSIFICATION	crc-32
WITHOUT_CLASSIFICATION	uncompressed size
WITHOUT_CLASSIFICATION	filename length
WITHOUT_CLASSIFICATION	extra field length
WITHOUT_CLASSIFICATION	file comment length
WITHOUT_CLASSIFICATION	internal file attributes
WITHOUT_CLASSIFICATION	external file attributes
WITHOUT_CLASSIFICATION	relative offset of local header
WITHOUT_CLASSIFICATION	disk number
WITHOUT_CLASSIFICATION	LFH offset,
WITHOUT_CLASSIFICATION	data offset will be filled later
WITHOUT_CLASSIFICATION	end of central dir signature
WITHOUT_CLASSIFICATION	number of this disk
WITHOUT_CLASSIFICATION	number of the disk with the
WITHOUT_CLASSIFICATION	start of the central directory
WITHOUT_CLASSIFICATION	the central dir on this disk
WITHOUT_CLASSIFICATION	the central dir
WITHOUT_CLASSIFICATION	size of the central directory
WITHOUT_CLASSIFICATION	offset of start of central
WITHOUT_CLASSIFICATION	empty
WITHOUT_CLASSIFICATION	wait 2 second extras the test failed with 100 ms of margin on cvs.apache.org on August 1st, 2003
WITHOUT_CLASSIFICATION	dummy1 --> dummy2 --> dummy3 (which holds a glob mapper from ".java" to ".class"
WITHOUT_CLASSIFICATION	initialize test environment (called "bed")
WITHOUT_CLASSIFICATION	THIS WILL FAIL. compareBytes("abc", "utf-16");
WITHOUT_CLASSIFICATION	catch script/ant mismatch with a meaningful message we could ignore it, but there are likely to be other version problems, so we stamp down on the configuration now
WITHOUT_CLASSIFICATION	if there were no main targets, we list all subtargets as it means nothing has a description
WITHOUT_CLASSIFICATION	For NetWare, use the boolean=true mode, so we can use delimiter information to make a better decision later.
WITHOUT_CLASSIFICATION	we are on NetWare, tokenizing is handled a little differently, due to the fact that NetWare has multiple-character volume names.
WITHOUT_CLASSIFICATION	The readers return -1 if they end. So simply read the "prepend" after that the "content" and at the end the "append" file.
WITHOUT_CLASSIFICATION	NB: this makes use of Project#setProperty rather than Project#setNewProperty due to backwards compatiblity reasons
WITHOUT_CLASSIFICATION	If we've been successful on an update, delete the temporary file
WITHOUT_CLASSIFICATION	CheckStyle - magic numbers checking for "X:\ 0=dquote,1=letter,2=:,3=\
WITHOUT_CLASSIFICATION	version needed to extract
WITHOUT_CLASSIFICATION	general purpose bit flag
WITHOUT_CLASSIFICATION	compression method
WITHOUT_CLASSIFICATION	last mod file time
WITHOUT_CLASSIFICATION	last mod file date
WITHOUT_CLASSIFICATION	crc-32
WITHOUT_CLASSIFICATION	compressed size
WITHOUT_CLASSIFICATION	uncompressed size
WITHOUT_CLASSIFICATION	end of central dir signature
WITHOUT_CLASSIFICATION	number of this disk
WITHOUT_CLASSIFICATION	number of the disk with the
WITHOUT_CLASSIFICATION	total number of entries in
WITHOUT_CLASSIFICATION	total number of entries in
WITHOUT_CLASSIFICATION	the central dir on this disk
WITHOUT_CLASSIFICATION	the central dir
WITHOUT_CLASSIFICATION	size of the central directory
WITHOUT_CLASSIFICATION	the starting disk number
WITHOUT_CLASSIFICATION	zipfile comment length
WITHOUT_CLASSIFICATION	local file header signature
WITHOUT_CLASSIFICATION	Converts DOS time to Java time (number of milliseconds since epoch).
WITHOUT_CLASSIFICATION	CRC will be added later
WITHOUT_CLASSIFICATION	<ZipExtraField>
WITHOUT_CLASSIFICATION	initializes extra data to an empty byte array
WITHOUT_CLASSIFICATION	MS-DOS read-only attribute
WITHOUT_CLASSIFICATION	MS-DOS directory flag
WITHOUT_CLASSIFICATION	A "location" attribute for a node within a Path object.
WITHOUT_CLASSIFICATION	Just use the same directory as the file itself. This directory will exist
WITHOUT_CLASSIFICATION	JarIndex is sorting the directories by ascending order. it has no value but cosmetic since it will be read into a hashtable by the classloader, but we'll do so anyway.
WITHOUT_CLASSIFICATION	Static
WITHOUT_CLASSIFICATION	we mark the file to be deleted on exit. the alternative would be to cache the filename and delete after execution finished, which is much better for long-lived runtimes though spawning complicates things...
WITHOUT_CLASSIFICATION	Protected first so if any GUI tool offers a default based on enum #0, it will be right.
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc the source file the destination file the destination directory
WITHOUT_CLASSIFICATION	add dest dir to classpath so that previously compiled and untouched classes are on classpath
WITHOUT_CLASSIFICATION	build the command line from what we got the format is cleartool checkout [options...] [viewpath ...] as specified in the CLEARTOOL.EXE help
WITHOUT_CLASSIFICATION	build the command line from what we got. the format is cleartool mkelem [options...] [viewpath ...] as specified in the CLEARTOOL.EXE help
WITHOUT_CLASSIFICATION	build the command line from what we got. the format is cleartool mklabel [options...] [viewpath ...] as specified in the CLEARTOOL help
WITHOUT_CLASSIFICATION	push the current iterator onto the stack and then iterate through this directory.
WITHOUT_CLASSIFICATION	List of EJBs found in XML One item within the Map Is doc iAS or EJB descriptor
WITHOUT_CLASSIFICATION	baseNameTerminator not found: the descriptor use the JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and not [Foo<baseNameTerminator>-ejb-jar.xml, Foo<baseNameTerminator>-jonas-ejb-jar.xml].
WITHOUT_CLASSIFICATION	Loop through the files seeing if any has been touched more recently than the destination jar.
WITHOUT_CLASSIFICATION	read in the descriptor. Under weblogic, the descriptor is a weblogic specific subclass which has references to the implementation classes. These classes must, therefore, be in the classpath when the deployment descriptor is loaded from the .ser file
WITHOUT_CLASSIFICATION	WARNING: We trim the values of all the attributes because Some extension declarations are badly defined (ie have spaces after version or vendor)
WITHOUT_CLASSIFICATION	2003-02-21 new replace algorithm by tbee (tbee@tbee.org) because it wasn't able to replace something like "@aaa;@bbb;"
WITHOUT_CLASSIFICATION	convert backslashes to slashes, otherwise jjtree will put this as comments and this seems to confuse javacc
WITHOUT_CLASSIFICATION	although this code appears to duplicate that of ClasspathUtils.newInstance, we cannot use that because this formatter may run in a forked process, without that class.
WITHOUT_CLASSIFICATION	build the command line from what we got the format is ss History elements [-H] [-L] [-N] [-O] [-V] [-Y] [-#] [-?] as specified in the SS.EXE help
WITHOUT_CLASSIFICATION	this method has severe consequences on performance. We cannot rely on the super.hashCode() method since super.getName() always return the empty string in the current implemention (there's no setter) so it is basically draining the performance of a hashmap lookup
WITHOUT_CLASSIFICATION	If this TransformOperation has DrawOperation children then Rotate the first child and return.
WITHOUT_CLASSIFICATION	converted from sun internal classes to new Base64Converter utility class extracted from Get task
WITHOUT_CLASSIFICATION	Cannot return a null source, because we have to call setEntityResolver (see setEntityResolver javadoc comment)
WITHOUT_CLASSIFICATION	CRC compressed length uncompressed length
WITHOUT_CLASSIFICATION	No further methods necessary. This is just an amalgamation of two other interfaces.
WITHOUT_CLASSIFICATION	----- The "Singleton" -----
WITHOUT_CLASSIFICATION	If we had child elements, we need to indent before we close the element, otherwise we're on the same line and don't need to indent
WITHOUT_CLASSIFICATION	The key is in the dictionary but cannot be retrieved This is usually due references that refer to tasks that have not been taskdefed in the current run. Ignore
WITHOUT_CLASSIFICATION	write magic: done by caller who created this stream this.out.write('B'); this.out.write('Z');
WITHOUT_CLASSIFICATION	CRC Mode SizDev UID GID
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	selectors are implicitly ANDed in DirectoryScanner. To revert their logic we wrap them into a <none> selector instead.
WITHOUT_CLASSIFICATION	now wait until the spawned process is finished
WITHOUT_CLASSIFICATION	file doesn't exist -> property 'test' == null
WITHOUT_CLASSIFICATION	we don't expect to find this
WITHOUT_CLASSIFICATION	we don't expect to find this
WITHOUT_CLASSIFICATION	ignore expected
WITHOUT_CLASSIFICATION	keep track of what operating systems are supported here.
WITHOUT_CLASSIFICATION	if we followed the symlink we just made we should bypass the excludes.
WITHOUT_CLASSIFICATION	when the test is started by the build.xml of ant if the property tests.and.ant.share.classloader is not set in the build.xml a sysproperty with name tests.and.ant.share.classloader and value ${tests.and.ant.share.classloader} will be set we are trying to catch this here.
WITHOUT_CLASSIFICATION	throw in drive letters
WITHOUT_CLASSIFICATION	promised to eliminate consecutive slashes after drive letter.
WITHOUT_CLASSIFICATION	promised to eliminate consecutive slashes after drive letter.
WITHOUT_CLASSIFICATION	promised to eliminate consecutive slashes after drive letter.
WITHOUT_CLASSIFICATION	avoid multiple configurations
WITHOUT_CLASSIFICATION	------------------------------------------------------ Helper methods -----------------------------------------------------
WITHOUT_CLASSIFICATION	make sure the cache is cleared.
WITHOUT_CLASSIFICATION	--- NULL JDBC driver just for simple test since there are no db driver available as a default in Ant :)
WITHOUT_CLASSIFICATION	PR 38370
WITHOUT_CLASSIFICATION	PR 38370
WITHOUT_CLASSIFICATION	PR 38370
WITHOUT_CLASSIFICATION	PR 38370
WITHOUT_CLASSIFICATION	PR 38370
WITHOUT_CLASSIFICATION	PR 38370
WITHOUT_CLASSIFICATION	PR 38370
WITHOUT_CLASSIFICATION	PR 38370
WITHOUT_CLASSIFICATION	PR 38370
WITHOUT_CLASSIFICATION	PR 38370
WITHOUT_CLASSIFICATION	PR 38370
WITHOUT_CLASSIFICATION	PR 38370
WITHOUT_CLASSIFICATION	wait 1 second extra to allow for java to start ... this time was OK on a Win NT machine and on nagoya
WITHOUT_CLASSIFICATION	------------------------------------------------------ Helper methods - should be in BuildFileTest -----------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------ Helper methods - should be in BuildFileTest -----------------------------------------------------
WITHOUT_CLASSIFICATION	All three specified and all three exist -> true
WITHOUT_CLASSIFICATION	Specified class is "" -> can not exist
WITHOUT_CLASSIFICATION	Core class that exists in system classpath is ignored, but found in specified classpath
WITHOUT_CLASSIFICATION	File is not found in specified filepath
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	basedir of subant/subant-test2/subant.xml is .. therefore we expect here the subant subdirectory
WITHOUT_CLASSIFICATION	2 is != 0 and even, so it is considered failure on any platform currently supported by Execute#isFailure.
WITHOUT_CLASSIFICATION	expectBuildExceptionContaining("testNoTld", "Jasper found an error in a file", "Java returned: 9");
WITHOUT_CLASSIFICATION	The captureToSummary test writes to stdout and stderr, good for verifying that the TestListener support doesn't break anything.
WITHOUT_CLASSIFICATION	testNoCrash is the test invoked by the captureToSummary's junit task
WITHOUT_CLASSIFICATION	tests one the file object
WITHOUT_CLASSIFICATION	tests one the file object
WITHOUT_CLASSIFICATION	tests one the file object
WITHOUT_CLASSIFICATION	tests one the file object
WITHOUT_CLASSIFICATION	tests one the file object
WITHOUT_CLASSIFICATION	viewpath
WITHOUT_CLASSIFICATION	conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report
WITHOUT_CLASSIFICATION	conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report
WITHOUT_CLASSIFICATION	conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report
WITHOUT_CLASSIFICATION	conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report
WITHOUT_CLASSIFICATION	We have extra elements
WITHOUT_CLASSIFICATION	Set up a VSSHistory task
WITHOUT_CLASSIFICATION	\ doesn't have a special meaning anymore - this is different from what the Unix sh does but causes a lot of problems on DOS based platforms otherwise
WITHOUT_CLASSIFICATION	check that dir and src are incompatible
WITHOUT_CLASSIFICATION	================ testcases for the cache implementations ================
WITHOUT_CLASSIFICATION	does the selection
WITHOUT_CLASSIFICATION	============== testcases for the algorithm implementations ==============
WITHOUT_CLASSIFICATION	===================== scenario tests =====================
WITHOUT_CLASSIFICATION	info text list of files expected result result
WITHOUT_CLASSIFICATION	===================== helper methods and classes ====================
WITHOUT_CLASSIFICATION	should be full moon
WITHOUT_CLASSIFICATION	Try a silly case
WITHOUT_CLASSIFICATION	java.home is bogus
WITHOUT_CLASSIFICATION	60s a further 30s
WITHOUT_CLASSIFICATION	60s a further 30s
WITHOUT_CLASSIFICATION	60s a further 30s
WITHOUT_CLASSIFICATION	order of headers cannot be guaranteed
WITHOUT_CLASSIFICATION	order of headers cannot be guaranteed
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	Ignore method m, as there is an overloaded form of this method that takes in a non-string argument, which gains higher priority.
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	If the argument is not a String or Location, and if there is an overloaded form of this method already defined, we just override that with the new one. This mechanism does not guarantee any specific order in which the methods will be selected: so any code that depends on the order in which "set" methods have been defined, is not guaranteed to be selected in any particular order.
WITHOUT_CLASSIFICATION	impossible as getMethods should only return public methods
WITHOUT_CLASSIFICATION	impossible as getMethods should only return public methods
WITHOUT_CLASSIFICATION	impossible as getMethods should only return public methods
WITHOUT_CLASSIFICATION	boolean and Boolean get special treatment because we have a nice method in Project
WITHOUT_CLASSIFICATION	find the line breaks and pass other chars through in blocks
WITHOUT_CLASSIFICATION	DataType can have a "no arg" constructor or take a single Project argument.
WITHOUT_CLASSIFICATION	all the names are the same: check if the class path of the loader is the same
WITHOUT_CLASSIFICATION	Interestingly enough, we get to here when a user uses -Dname=value. However, in some cases, the OS goes ahead and parses this out to args {"-Dname", "value"} so instead of parsing on "=", we just make the "-D" characters go away and skip one argument forward. I don't know how to predict when the JDK is going to help or not, so we simply look for the equals sign.
WITHOUT_CLASSIFICATION	if parent is null, then we are at the root of the fs, complain that we can't find the build file.
WITHOUT_CLASSIFICATION	put back the original security manager The following will never eval to true. (PD)
WITHOUT_CLASSIFICATION	ignore path elements which are invalid relative to the project
WITHOUT_CLASSIFICATION	Ignore - we are interested only in the side effect - that of getting the static initializers invoked. As we do not want to call a valid constructor to get this side effect, an attempt is made to call a hopefully invalid constructor - come on, nobody would have a constructor that takes in 256 String arguments ;-) (In fact, they can't - according to JVM spec section 4.10, the number of method parameters is limited to 255 by the definition of a method descriptor. Constructors count as methods here.)
WITHOUT_CLASSIFICATION	<URL>
WITHOUT_CLASSIFICATION	<URL>
WITHOUT_CLASSIFICATION	'sync' is needed - otherwise 2 threads can load the same class twice, resulting in LinkageError: duplicated class definition. findLoadedClass avoids that, but without sync it won't work.
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	Not significant for the class loader.
WITHOUT_CLASSIFICATION	Not significant for the class loader.
WITHOUT_CLASSIFICATION	Not significant for the class loader.
WITHOUT_CLASSIFICATION	Not significant for the class loader.
WITHOUT_CLASSIFICATION	Not significant for the class loader.
WITHOUT_CLASSIFICATION	don't have to check for public, since getConstructor finds public constructors only.
WITHOUT_CLASSIFICATION	not a known type
WITHOUT_CLASSIFICATION	Initialize the globalFileSet's project
WITHOUT_CLASSIFICATION	create a new Vector to avoid ConcurrentModificationExc when the listeners get added/removed while we are in fire
WITHOUT_CLASSIFICATION	first build exception
WITHOUT_CLASSIFICATION	Not been visited
WITHOUT_CLASSIFICATION	-------------------- Optional methods -------------------- You can override those methods if you want to optimize or do advanced things (like support a special syntax). The methods do not chain - you should use them when embedding ant (by replacing the main helper)
WITHOUT_CLASSIFICATION	fragments.addElement(value.substring(pos + 1, pos + 2)); prev = pos + 2;
WITHOUT_CLASSIFICATION	empty
WITHOUT_CLASSIFICATION	empty
WITHOUT_CLASSIFICATION	-------------------- Common properties -------------------- The following properties are required by import ( and other tasks that read build files using ProjectHelper ).
WITHOUT_CLASSIFICATION	check to what is in the classname
WITHOUT_CLASSIFICATION	not included, do nothing
WITHOUT_CLASSIFICATION	not included, do nothing
WITHOUT_CLASSIFICATION	Attributes
WITHOUT_CLASSIFICATION	make sure we aren't going to get the path separator next
WITHOUT_CLASSIFICATION	'reasonable' default, if the component is used without a Project ( for example as a standalone Bean ). Most ant components can be used this way.
WITHOUT_CLASSIFICATION	don't have to check for public, since getMethod finds public method only. don't have to check for abstract, since then taskClass would be abstract too.
WITHOUT_CLASSIFICATION	Mac
WITHOUT_CLASSIFICATION	set in/excludes to reasonable defaults if needed:
WITHOUT_CLASSIFICATION	may be on a case insensitive file system. We want the results to show what's really on the disk, so we need to double check.
WITHOUT_CLASSIFICATION	avoid double scanning of directories, can only happen in fast mode
WITHOUT_CLASSIFICATION	Usually the initialized is set to true. But here it must not. Because the prepend and append readers have to be instantiated on runtime newFilter.setInitialized(true);
WITHOUT_CLASSIFICATION	if at EOF with no characters in the buffer, return EOF
WITHOUT_CLASSIFICATION	The current character is always emitted.
WITHOUT_CLASSIFICATION	The current character is always emitted.
WITHOUT_CLASSIFICATION	The current character is always emitted.
WITHOUT_CLASSIFICATION	The current character is always emitted.
WITHOUT_CLASSIFICATION	Fall tru
WITHOUT_CLASSIFICATION	Fall tru
WITHOUT_CLASSIFICATION	Fall tru
WITHOUT_CLASSIFICATION	Fall tru
WITHOUT_CLASSIFICATION	Works like clone() but doesn't show up in the Javadocs
WITHOUT_CLASSIFICATION	----------------------------------------- Predefined filters -----------------------------------------
WITHOUT_CLASSIFICATION	-------------------------------------------- Filter classes --------------------------------------------
WITHOUT_CLASSIFICATION	Execute the top-level target
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Also check for properly formed URIs. Ant formerly recommended using nonsense URIs such as "file:./foo.xml" in XML includes. You shouldn't do that (just "foo.xml" is correct) but for compatibility we special-case things when the path is not absolute, and fall back to the old parsing behavior.
WITHOUT_CLASSIFICATION	decide whether to copy the existing arg set, or build a new one from the list of all args excluding the special operations that only we handle
WITHOUT_CLASSIFICATION	convert the replyTo string into a vector of emailaddresses
WITHOUT_CLASSIFICATION	private static final int BG_BLACK = 40; private static final int BG_RED = 41; private static final int BG_GREEN = 42; private static final int BG_YELLOW = 44; private static final int BG_BLUE = 44; private static final int BG_MAGENTA = 45; private static final int BG_CYAN = 46; private static final int BG_WHITE = 47;
WITHOUT_CLASSIFICATION	If the file being added is META-INF/application.xml, we warn if it's not the one specified in the "appxml" attribute - or if it's being added twice, meaning the same file is specified by the "appxml" attribute and in a <fileset> element.
WITHOUT_CLASSIFICATION	class found but restricted name; this is actually the case we're looking for in JDK 1.3+, so catch the exception and return
WITHOUT_CLASSIFICATION	Can return null to represent the bootstrap class loader. see API docs of Class.getClassLoader.
WITHOUT_CLASSIFICATION	default
WITHOUT_CLASSIFICATION	default
WITHOUT_CLASSIFICATION	use to scan own archive
WITHOUT_CLASSIFICATION	collect filesets to pass them to getResourcesToAdd
WITHOUT_CLASSIFICATION	If we're in this finally clause because of an exception, we don't really care if there's an exception when closing the stream. E.g. if it throws "ZIP file must have at least one entry", because an exception happened before we added any files, then we must swallow this exception. Otherwise, the error that's reported will be the close() error, which is not the real cause of the problem.
WITHOUT_CLASSIFICATION	Bad luck. There are resources in the filesets that make the archive out of date, but not in the non-fileset resources. We need to rescan the non-FileSets to grab all of them now.
WITHOUT_CLASSIFICATION	ZIPs store time with a granularity of 2 seconds, round up
WITHOUT_CLASSIFICATION	ZipOutputStream.putNextEntry expects the ZipEntry to know its size and the CRC sum before you start writing the data when using STORED mode - unless it is seekable. This forces us to process the data twice.
WITHOUT_CLASSIFICATION	may be altered in validate
WITHOUT_CLASSIFICATION	at this point the paths are set up with lists of files, and the mapper is ready to map from source dirs to dest files now we iterate through every JAR giving source and dest names deal with the paths
WITHOUT_CLASSIFICATION	calculate our destination directory; it is either the destDir attribute, or the base dir of the fileset (for in situ updates)
WITHOUT_CLASSIFICATION	Error messages
WITHOUT_CLASSIFICATION	Default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	Default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	Default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	Parse the attribute(s) and text of this node, adding properties for each. if the "path" attribute is specified, then return the created path which will be passed to the children of this node.
WITHOUT_CLASSIFICATION	An arbitrary attribute.
WITHOUT_CLASSIFICATION	Return the Path we added or the ID of this node for children to reference if needed. Path objects are definitely used by child path elements, and ID may be used for a child text node.
WITHOUT_CLASSIFICATION	Fall Through
WITHOUT_CLASSIFICATION	Fall Through
WITHOUT_CLASSIFICATION	Ignore the problem
WITHOUT_CLASSIFICATION	If we're on windows, then do the comparison ignoring case and treat the two directory characters the same
WITHOUT_CLASSIFICATION	for NetWare and OS/2, piggy-back on Windows, since in the validateSetup code, the same assumptions can be made as with windows - that ; is the path separator
WITHOUT_CLASSIFICATION	END static class TemplateElement
WITHOUT_CLASSIFICATION	CONSTRUCTORS / INITIALIZERS
WITHOUT_CLASSIFICATION	value and property are mutually exclusive attributes
WITHOUT_CLASSIFICATION	Ignore Exception
WITHOUT_CLASSIFICATION	int logLevel = filesetManifestConfig == null ? Project.MSG_WARN : Project.MSG_VERBOSE; log("File " + file + " includes a META-INF/MANIFEST.MF which will be ignored. " + "To include this file, set filesetManifest to a value other " + "than 'skip'.", logLevel);
WITHOUT_CLASSIFICATION	Create the directory, as it might not exist.
WITHOUT_CLASSIFICATION	Calculate the total checksum Convert the keys (source files) into a sorted array.
WITHOUT_CLASSIFICATION	must not use getEntry as "well behaving" applications must accept the manifest in any capitalization
WITHOUT_CLASSIFICATION	We just set the prefix for this fileset, and pass it up.
WITHOUT_CLASSIFICATION	We just set the prefix for this fileset, and pass it up.
WITHOUT_CLASSIFICATION	Precedence: manifestFile wins over inline manifest, over manifests read from the filesets over the original manifest. merge with null argument is a no-op
WITHOUT_CLASSIFICATION	filesets are separate from the rest for performance reasons. If we use the code for union below, we'll always scan all filesets, even if we know the target is out of date after the first test.
WITHOUT_CLASSIFICATION	If the archive is built for the first time and it is matched by a resource collection, then it hasn't been found in check (it hasn't been there) but will be included now. for some strange reason the old code would simply skip the entry and not fail, do the same now for backwards compatibility reasons. Without this, the which4j build fails in Gump
WITHOUT_CLASSIFICATION	preserve permissions
WITHOUT_CLASSIFICATION	override permissions if set explicitly
WITHOUT_CLASSIFICATION	Check if we can contact the URL
WITHOUT_CLASSIFICATION	Instance
WITHOUT_CLASSIFICATION	the Exec OS check is different from Os.isOs(), which probes for a specific OS. Instead it searches the os field for the current os.name
WITHOUT_CLASSIFICATION	Similar to a fileset, but doesn't allow dir attribute to be set
WITHOUT_CLASSIFICATION	If the destination directory didn't already exist, or was empty, then no previous file removal is necessary!
WITHOUT_CLASSIFICATION	Default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	preserveInTarget would find all files we want to keep, but we need to find all that we want to delete - so the meaning of all patterns and selectors must be inverted
WITHOUT_CLASSIFICATION	On VMS platform, we need to create a special java options file containing the arguments and classpath for the java command. The special file is supported by the "-V" switch on the VMS JVM.
WITHOUT_CLASSIFICATION	Do nothing if no resources (including nested text)
WITHOUT_CLASSIFICATION	Windows has a 32k limit on total arg size, so create a temporary file to store all the arguments
WITHOUT_CLASSIFICATION	filesets has been protected so we need to keep that even after switching to resource collections. In fact, they will still get a different treatment form the other resource collections even in execute since we have some subtle special features like switching type to "dir" when we encounter a DirSet that would be more difficult to achieve otherwise.
WITHOUT_CLASSIFICATION	need to reset the stream handler to restart reading of pipes; go ahead and do it always w/ nested redirectors
WITHOUT_CLASSIFICATION	if we get here, in and out have not been specified, we are in batch processing mode.
WITHOUT_CLASSIFICATION	at this point there is one trailing space to remove, if the list is not empty.
WITHOUT_CLASSIFICATION	Ignore and keep trying
WITHOUT_CLASSIFICATION	Chunk part of previous env var (UNIX env vars can contain embedded new lines).
WITHOUT_CLASSIFICATION	Since we "look ahead" before adding, there's one last env var.
WITHOUT_CLASSIFICATION	noop default encoding used
WITHOUT_CLASSIFICATION	On OpenVMS Runtime#exec() doesn't support the environment array, so we only return the new values which then will be set in the generated DCL script, inheriting the parent process environment
WITHOUT_CLASSIFICATION	Locate the auxiliary script
WITHOUT_CLASSIFICATION	Build the command
WITHOUT_CLASSIFICATION	Writes the command into a temporary DCL script and returns the corresponding File object. The script will be deleted on exit. @param cmd the command line to execute as an array of strings. @param env the environment to set as an array of strings. @return the command File. @throws IOException if errors are encountered creating the file.
WITHOUT_CLASSIFICATION	protected and private methods
WITHOUT_CLASSIFICATION	ensure that parent dir of dest file exists!
WITHOUT_CLASSIFICATION	add the single group arguments Javadoc 1.2 rules: Multiple -group args allowed. Each arg includes 3 strings: -group [name] [packagelist]. Elements in [packagelist] are colon-delimited. An element in [packagelist] may end with the wildcard.
WITHOUT_CLASSIFICATION	for each sourcePath entry, add a directoryset with includes taken from packagenames attribute and nested package elements and excludes taken from excludepackages attribute and nested excludepackage elements
WITHOUT_CLASSIFICATION	Override the logging of output in order to filter out Generating messages. Generating messages are set to a priority of VERBOSE unless they appear after what could be an informational message.
WITHOUT_CLASSIFICATION	Methods below all add specific selectors
WITHOUT_CLASSIFICATION	Methods below all add specific selectors
WITHOUT_CLASSIFICATION	Methods below all add specific selectors
WITHOUT_CLASSIFICATION	If verbosity is MSG_VERBOSE, that mean we are doing regular logging (backwards as that sounds). In that case, we want to print one message about deleting the top of the directory tree. Otherwise, the removeDir method will handle messages for _all_ directories.
WITHOUT_CLASSIFICATION	hand down
WITHOUT_CLASSIFICATION	create intermediary directories - sometimes zip don't add them
WITHOUT_CLASSIFICATION	SQL defines "--" as a comment to EOL and in Oracle it may contain a hint so we cannot just remove it, instead we must end it
WITHOUT_CLASSIFICATION	In Ant 1.1, <chmod dir="foo" /> means, change the permissions of directory foo, not anything inside of it. This is the case the second branch of the if statement below catches for backwards compatibility.
WITHOUT_CLASSIFICATION	for historical and performance reasons we have to do things in a rather complex way. (1) Move is optimized to move directories if a fileset has been included completely, therefore FileSets need a special treatment. This is also required to support the failOnError semantice (skip filesets with broken basedir but handle the remaining collections). (2) We carry around a few protected methods that work on basedirs and arrays of names. To optimize stuff, all resources with the same basedir get collected in separate lists and then each list is handled in one go.
WITHOUT_CLASSIFICATION	we create a fileset with the source file. this lets us combine our logic for handling output directories, mapping etc.
WITHOUT_CLASSIFICATION	if input files are specified, inputString and inputStream are ignored; classes that work with redirector attributes can enforce whatever warnings are needed
WITHOUT_CLASSIFICATION	Ignore exception
WITHOUT_CLASSIFICATION	Ignore exception
WITHOUT_CLASSIFICATION	Ignore exception
WITHOUT_CLASSIFICATION	classpath attributes go into a vector
WITHOUT_CLASSIFICATION	we have already started reading this section this line is the first attribute. set it and then let the normal read handle the rest
WITHOUT_CLASSIFICATION	not modified so no file download. just return instead and trace out something so the user doesn't think that the download happened when it didn't
WITHOUT_CLASSIFICATION	we have started to (over)write dest, but failed. Try to delete the garbage we'd otherwise leave behind.
WITHOUT_CLASSIFICATION	start() would throw IllegalThreadStateException from ThreadGroup.add if it were destroyed
WITHOUT_CLASSIFICATION	kjc-1.5A doesn't support -encoding option now. but it will be supported near the feature.
WITHOUT_CLASSIFICATION	Create an instance of the compiler, redirecting output to the project log
WITHOUT_CLASSIFICATION	Setup the apt executable
WITHOUT_CLASSIFICATION	On VMS platform, we need to create a special java options file containing the arguments and classpath for the javac command. The special file is supported by the "-V" switch on the VMS JVM.
WITHOUT_CLASSIFICATION	must keep for subclass BC, though unused: CheckStyle:ConstantNameCheck OFF - bc
WITHOUT_CLASSIFICATION	CheckStyle:ConstantNameCheck ON CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	add dest dir to classpath so that previously compiled and untouched classes are on classpath
WITHOUT_CLASSIFICATION	add dest dir to classpath so that previously compiled and untouched classes are on classpath
WITHOUT_CLASSIFICATION	For -sourcepath, use the "sourcepath" value if present. Otherwise default to the "srcdir" value.
WITHOUT_CLASSIFICATION	Many system have been reported to get into trouble with long command lines - no, not only Windows ;-). POSIX seems to define a lower limit of 4k, so use a temporary file if the total length of the command line exceeds this limit.
WITHOUT_CLASSIFICATION	there is a bootclasspath stated. By default, the includeJavaRuntime is false. If the user has stated a bootclasspath and said to include the java runtime, it's on their head!
WITHOUT_CLASSIFICATION	The following is data used while processing stdout of CVS command
WITHOUT_CLASSIFICATION	The date format is using a - format since 1.12.9 so we have: 1.12.9-: 'date: YYYY/mm/dd HH:mm:ss; author: name;' 1.12.9+: 'date: YYYY-mm-dd HH:mm:ss Z; author: name'
WITHOUT_CLASSIFICATION	Default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	Default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	viewpath
WITHOUT_CLASSIFICATION	ClearCase items
WITHOUT_CLASSIFICATION	ClearCase items
WITHOUT_CLASSIFICATION	-branch
WITHOUT_CLASSIFICATION	-c
WITHOUT_CLASSIFICATION	entries are of the form: CVS 1.11 File module/filename is new; current revision 1.1 CVS 1.11.9 File module/filename is new; cvstag_2003_11_03_2 revision 1.1 or File module/filename changed from revision 1.4 to 1.6 or File module/filename is removed; not included in release tag SKINLF_12 CVS 1.11.9 File testantoine/antoine.bat is removed; TESTANTOINE_1 revision 1.1.1.1 get rid of 'File module/"
WITHOUT_CLASSIFICATION	CheckStyle:MemberNameCheck OFF - bc
WITHOUT_CLASSIFICATION	We need character encoding aware printing here. So, using PrintWriter over OutputStreamWriter instead of PrintStream
WITHOUT_CLASSIFICATION	convert from ascii back to native encoding to convert to/from Where to find input files Where to put output files Extension of output files if different
WITHOUT_CLASSIFICATION	we are forced to fork ANTLR since there is a call to System.exit() and there is nothing we can do right now to avoid this. :-( (SBa) I'm not removing this method to keep backward compatibility
WITHOUT_CLASSIFICATION	error if both are empty, or both are set
WITHOUT_CLASSIFICATION	hasCR is still true (for the second one)
WITHOUT_CLASSIFICATION	should be the default, as it integrates better in ant.
WITHOUT_CLASSIFICATION	scan source and dest dirs to build up both copy lists and compile lists scanDir(srcDir, destDir);
WITHOUT_CLASSIFICATION	if it's a non source file, copy it if a later date than the dest if it's a source file, see if the destination class file needs to be recreated via compilation
WITHOUT_CLASSIFICATION	depending on implementation, XMLReader can yield hips of warning, only output then if user explicitly asked for it
WITHOUT_CLASSIFICATION	======================================================================== Instance variables.
WITHOUT_CLASSIFICATION	swallow
WITHOUT_CLASSIFICATION	swallow
WITHOUT_CLASSIFICATION	swallow
WITHOUT_CLASSIFICATION	swallow
WITHOUT_CLASSIFICATION	If only default is specified and the property previously existed in the property file, it is unchanged.
WITHOUT_CLASSIFICATION	make sure to close all handles, otherwise the garbage collector will close them...whenever possible and Windows may complain about not being able to delete files.
WITHOUT_CLASSIFICATION	WARN: Don't use the StreamSource(File) ctor. It won't work with xalan prior to 2.2 because of systemid bugs.
WITHOUT_CLASSIFICATION	build the command line from what we got the format as specified in the CCM.EXE help
WITHOUT_CLASSIFICATION	implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface
WITHOUT_CLASSIFICATION	Default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	Default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	Default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	Default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	pre Ant 1.6 this method used to call getClass().getResource while Ant 1.6 will call ClassLoader.getResource(). The difference is that Class.getResource expects a leading slash for "absolute" resources and will strip it before delegating to ClassLoader.getResource - so we now have to emulate Class's behavior.
WITHOUT_CLASSIFICATION	-c
WITHOUT_CLASSIFICATION	-cfile
WITHOUT_CLASSIFICATION	-cfile
WITHOUT_CLASSIFICATION	Had to make two separate commands here because if a space is inserted between the flag and the value, it is treated as a Windows filename with a space and it is enclosed in double quotes ("). This breaks clearcase.
WITHOUT_CLASSIFICATION	-------------
WITHOUT_CLASSIFICATION	-I- or -I-Y or -I-N
WITHOUT_CLASSIFICATION	-I- or -I-Y or -I-N
WITHOUT_CLASSIFICATION	-I- or -I-Y or -I-N
WITHOUT_CLASSIFICATION	first off, make sure that we've got a command and a vssdir and a label ...
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	Had to make two separate commands here because if a space is inserted between the flag and the value, it is treated as a Windows filename with a space and it is enclosed in double quotes ("). This breaks clearcase.
WITHOUT_CLASSIFICATION	Had to make two separate commands here because if a space is inserted between the flag and the value, it is treated as a Windows filename with a space and it is enclosed in double quotes ("). This breaks clearcase.
WITHOUT_CLASSIFICATION	Had to make two separate commands here because if a space is inserted between the flag and the value, it is treated as a Windows filename with a space and it is enclosed in double quotes ("). This breaks clearcase.
WITHOUT_CLASSIFICATION	Had to make two separate commands here because if a space is inserted between the flag and the value, it is treated as a Windows filename with a space and it is enclosed in double quotes ("). This breaks clearcase.
WITHOUT_CLASSIFICATION	Had to make two separate commands here because if a space is inserted between the flag and the value, it is treated as a Windows filename with a space and it is enclosed in double quotes ("). This breaks clearcase.
WITHOUT_CLASSIFICATION	Had to make two separate commands here because if a space is inserted between the flag and the value, it is treated as a Windows filename with a space and it is enclosed in double quotes ("). This breaks clearcase.
WITHOUT_CLASSIFICATION	--------------------
WITHOUT_CLASSIFICATION	-Y
WITHOUT_CLASSIFICATION	-Y
WITHOUT_CLASSIFICATION	-Y
WITHOUT_CLASSIFICATION	VSS items
WITHOUT_CLASSIFICATION	VSS items
WITHOUT_CLASSIFICATION	skip version info and general purpose byte
WITHOUT_CLASSIFICATION	Had to make two separate commands here because if a space is inserted between the flag and the value, it is treated as a Windows filename with a space and it is enclosed in double quotes ("). This breaks clearcase.
WITHOUT_CLASSIFICATION	Had to make two separate commands here because if a space is inserted between the flag and the value, it is treated as a Windows filename with a space and it is enclosed in double quotes ("). This breaks clearcase.
WITHOUT_CLASSIFICATION	Had to make two separate commands here because if a space is inserted between the flag and the value, it is treated as a Windows filename with a space and it is enclosed in double quotes ("). This breaks clearcase.
WITHOUT_CLASSIFICATION	Had to make two separate commands here because if a space is inserted between the flag and the value, it is treated as a Windows filename with a space and it is enclosed in double quotes ("). This breaks clearcase.
WITHOUT_CLASSIFICATION	Had to make two separate commands here because if a space is inserted between the flag and the value, it is treated as a Windows filename with a space and it is enclosed in double quotes ("). This breaks clearcase.
WITHOUT_CLASSIFICATION	Had to make two separate commands here because if a space is inserted between the flag and the value, it is treated as a Windows filename with a space and it is enclosed in double quotes ("). This breaks clearcase.
WITHOUT_CLASSIFICATION	Had to make two separate commands here because if a space is inserted between the flag and the value, it is treated as a Windows filename with a space and it is enclosed in double quotes ("). This breaks clearcase.
WITHOUT_CLASSIFICATION	Had to make two separate commands here because if a space is inserted between the flag and the value, it is treated as a Windows filename with a space and it is enclosed in double quotes ("). This breaks clearcase.
WITHOUT_CLASSIFICATION	Had to make two separate commands here because if a space is inserted between the flag and the value, it is treated as a Windows filename with a space and it is enclosed in double quotes ("). This breaks clearcase.
WITHOUT_CLASSIFICATION	Had to make two separate commands here because if a space is inserted between the flag and the value, it is treated as a Windows filename with a space and it is enclosed in double quotes ("). This breaks clearcase.
WITHOUT_CLASSIFICATION	Had to make two separate commands here because if a space is inserted between the flag and the value, it is treated as a Windows filename with a space and it is enclosed in double quotes ("). This breaks clearcase.
WITHOUT_CLASSIFICATION	Had to make two separate commands here because if a space is inserted between the flag and the value, it is treated as a Windows filename with a space and it is enclosed in double quotes ("). This breaks clearcase.
WITHOUT_CLASSIFICATION	Had to make two separate commands here because if a space is inserted between the flag and the value, it is treated as a Windows filename with a space and it is enclosed in double quotes ("). This breaks clearcase.
WITHOUT_CLASSIFICATION	Had to make two separate commands here because if a space is inserted between the flag and the value, it is treated as a Windows filename with a space and it is enclosed in double quotes ("). This breaks clearcase.
WITHOUT_CLASSIFICATION	Had to make two separate commands here because if a space is inserted between the flag and the value, it is treated as a Windows filename with a space and it is enclosed in double quotes ("). This breaks clearcase.
WITHOUT_CLASSIFICATION	Had to make two separate commands here because if a space is inserted between the flag and the value, it is treated as a Windows filename with a space and it is enclosed in double quotes ("). This breaks clearcase.
WITHOUT_CLASSIFICATION	Had to make two separate commands here because if a space is inserted between the flag and the value, it is treated as a Windows filename with a space and it is enclosed in double quotes ("). This breaks clearcase.
WITHOUT_CLASSIFICATION	Had to make two separate commands here because if a space is inserted between the flag and the value, it is treated as a Windows filename with a space and it is enclosed in double quotes ("). This breaks clearcase.
WITHOUT_CLASSIFICATION	first off, make sure that we've got a command and a vssdir and a label ...
WITHOUT_CLASSIFICATION	Had to make two separate commands here because if a space is inserted between the flag and the value, it is treated as a Windows filename with a space and it is enclosed in double quotes ("). This breaks clearcase.
WITHOUT_CLASSIFICATION	Had to make two separate commands here because if a space is inserted between the flag and the value, it is treated as a Windows filename with a space and it is enclosed in double quotes ("). This breaks clearcase.
WITHOUT_CLASSIFICATION	Had to make two separate commands here because if a space is inserted between the flag and the value, it is treated as a Windows filename with a space and it is enclosed in double quotes ("). This breaks clearcase.
WITHOUT_CLASSIFICATION	we get the root classes and build up a set of classes upon which they depend
WITHOUT_CLASSIFICATION	read the constant pool in and resolve it
WITHOUT_CLASSIFICATION	Use the Runtime object to execute an external command. Use the RedirectOutput inner class to direct the standard and error output from the command to the JRE's standard output
WITHOUT_CLASSIFICATION	Two Maps are used to track local DTDs that will be used in case the remote copies of these DTDs cannot be accessed. The key for the Map is the DTDs public ID and the value is the local location for the DTD
WITHOUT_CLASSIFICATION	depFile exists and is newer than the class file need to get dependency list from the map.
WITHOUT_CLASSIFICATION	without closure we may delete an inner class but not the top level class which would not trigger a recompile.
WITHOUT_CLASSIFICATION	always trigger file mode if commands are big enough
WITHOUT_CLASSIFICATION	fill in args
WITHOUT_CLASSIFICATION	fill in args
WITHOUT_CLASSIFICATION	iterate through the ref list & generate an entry for each or just rely on the fact that the toString operator does this, but noting that the separator is ';' on windows, ':' on unix
WITHOUT_CLASSIFICATION	now run the command of exe + settings + files
WITHOUT_CLASSIFICATION	Directory where "source" EJB files are stored and where stubs and skeletons will also be written.
WITHOUT_CLASSIFICATION	This Hashtable maintains a list of EJB class files processed by the ejbc utility (both "source" class files as well as stubs and skeletons). The key for the Hashtable is a String representing the path to the class file (relative to the destination directory). The value for the Hashtable is a File object which reference the actual class file.
WITHOUT_CLASSIFICATION	Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed
WITHOUT_CLASSIFICATION	EJB's display name EJB's home interface name EJB's remote interface name EJB's implementation class EJB's primary key class or "stateful" or "stateless" Does this EJB support CMP? Does this EJB support IIOP? Does this EJB require failover? CMP descriptor list
WITHOUT_CLASSIFICATION	Check the timestamp on the EJB implementation class. Note that if ONLY the implementation class has changed, it's not necessary to rebuild the EJB stubs and skeletons. For this reason, we ensure the file exists (using lastModified above), but we DON'T compare it's timestamp with the timestamps of the home and remote interfaces (because it's irrelevant in determining if ejbc must be run)
WITHOUT_CLASSIFICATION	classpath add at the end of the classpath the system classpath in order to find the tools.jar file
WITHOUT_CLASSIFICATION	ejb jar file
WITHOUT_CLASSIFICATION	client jar file
WITHOUT_CLASSIFICATION	Have to catch this because of the semantics of calling main()
WITHOUT_CLASSIFICATION	-------------
WITHOUT_CLASSIFICATION	-------------
WITHOUT_CLASSIFICATION	descriptorName = <path><basename><basenameterminator><remainder> examples = /org/objectweb/fooAppli/foo/Foo-ejb-jar.xml examples = /org/objectweb/fooAppli/foo/Foo.xml (JOnAS convention)
WITHOUT_CLASSIFICATION	class name (search in the classpath provided for the ejbjar element)
WITHOUT_CLASSIFICATION	additionalargs
WITHOUT_CLASSIFICATION	get all the files in the descriptor directory
WITHOUT_CLASSIFICATION	If an explicit securityPolicy file was specified, it maybe an absolute path. Use the project to resolve it.
WITHOUT_CLASSIFICATION	Since the descriptor read properly, everything should be o.k.
WITHOUT_CLASSIFICATION	Lastly create File object for the Jar files. If we are using a flat destination dir, then we need to redefine baseName!
WITHOUT_CLASSIFICATION	For the GenericDeploymentTool, do nothing. Vendor specific subclasses should throw a BuildException if the configuration is invalid for their server.
WITHOUT_CLASSIFICATION	Get the filename of vendor specific descriptor
WITHOUT_CLASSIFICATION	now that we have the weblogic descriptor, we parse the file to find other descriptors needed to deploy the bean. this could be the weblogic-cmp-rdbms.xml or any other O/R mapping tool descriptors.
WITHOUT_CLASSIFICATION	Update with changed Bean class
WITHOUT_CLASSIFICATION	need to close files and perhaps rename output
WITHOUT_CLASSIFICATION	empty
WITHOUT_CLASSIFICATION	empty
WITHOUT_CLASSIFICATION	are any of the above out of date. we find the implementation classes and see if they are older than any of the above or the .ser file itself.
WITHOUT_CLASSIFICATION	Filenames of the standard EJB descriptor (which is passed to this class from the parent "ejbjar" task) and the iAS-specific EJB descriptor (whose name is determined by this class). Both filenames are relative to the directory specified by the "srcdir" attribute in the ejbjar task.
WITHOUT_CLASSIFICATION	remove the .class
WITHOUT_CLASSIFICATION	create the output .jar, if required
WITHOUT_CLASSIFICATION	change this to get the objects from the other reference
WITHOUT_CLASSIFICATION	Available specification version must be >= required
WITHOUT_CLASSIFICATION	Implementation version must be >= required
WITHOUT_CLASSIFICATION	WARNING: We trim the values of all the attributes because Some extension declarations are badly defined (ie have spaces after version or vendorID)
WITHOUT_CLASSIFICATION	Validates URL
WITHOUT_CLASSIFICATION	the new value, this needs to be here because it is required to calculate the next position to search from at the end of the loop
WITHOUT_CLASSIFICATION	iterator through all the files and process them.
WITHOUT_CLASSIFICATION	keys to optional attributes
WITHOUT_CLASSIFICATION	use the directory containing the target as the output directory
WITHOUT_CLASSIFICATION	null watchdog means no timeout, you'd better not check with null
WITHOUT_CLASSIFICATION	pre Ant 1.6 this method used to call getClass().getResource while Ant 1.6 will call ClassLoader.getResource(). The difference is that Class.getResource expects a leading slash for "absolute" resources and will strip it before delegating to ClassLoader.getResource - so we now have to emulate Class's behavior.
WITHOUT_CLASSIFICATION	this comment extract from JUnit Task may also apply here "in VM is not very nice since it could probably hang the whole build. IMHO this method should be avoided and it would be best to remove it in future versions. TBD. (SBa)"
WITHOUT_CLASSIFICATION	not necessary as JDepend would fail, but why loose some time?
WITHOUT_CLASSIFICATION	not necessary as JDepend would fail, but why loose some time?
WITHOUT_CLASSIFICATION	not necessary as JDepend would fail, but why loose some time?
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	If we get here, it could be because we are trying to put a directory entry that already exists. For example, we're trying to write "com", but a previous entry from another mergefile was called "com". In that case, just ignore the error and go on to the next entry.
WITHOUT_CLASSIFICATION	First, some notes. On MRJ 2.2.2, getting the size, compressed size, and CRC32 from the ZipInputStream does not work for compressed (deflated) files. Those calls return -1. For uncompressed (stored) files, those calls do work. However, using ZipFile.getEntries() works for both compressed and uncompressed files. Now, from some simple testing I did, it seems that the value of CRC-32 is independent of the compression setting. So, it should be easy to pass this information on to the output entry.
WITHOUT_CLASSIFICATION	Quick return - no output do nothing.
WITHOUT_CLASSIFICATION	Self-describing as of JUnit 4 (#38811). But trim "(ClassName)".
WITHOUT_CLASSIFICATION	the trick to integrating test output to the formatter, is to create a special test class that asserts an error and tell the formatter that it raised.
WITHOUT_CLASSIFICATION	ignored.
WITHOUT_CLASSIFICATION	pre Ant 1.6 this method used to call getClass().getResource while Ant 1.6 will call ClassLoader.getResource(). The difference is that Class.getResource expects a leading slash for "absolute" resources and will strip it before delegating to ClassLoader.getResource - so we now have to emulate Class's behavior.
WITHOUT_CLASSIFICATION	okay we have a copy of the child, now the child becomes the parent and we are iterating recursively over its children.
WITHOUT_CLASSIFICATION	See wrapListener for reason:
WITHOUT_CLASSIFICATION	if there is a suite method available, then try to extract the suite from it. If there is an error here it will be caught below and reported.
WITHOUT_CLASSIFICATION	JUnit 4 does not distinguish between errors and failures even in the JUnit 3 adapter. So we need to help it a bit to retain compatibility for JUnit 3 tests.
WITHOUT_CLASSIFICATION	sorted by newest Kaffe version first
WITHOUT_CLASSIFICATION	getProject().log("listing files in directory " + directory, Project.MSG_DEBUG);
WITHOUT_CLASSIFICATION	to remove directories, start by the end of the list the trunk does not let itself be removed before the leaves
WITHOUT_CLASSIFICATION	ignore it
WITHOUT_CLASSIFICATION	NumberFormatException or ArrayOutOfBondsException could happen here
WITHOUT_CLASSIFICATION	Throw exception on errors (except up-to-date) When a server is down, the code expects : Perforce client error: Connect to server failed; check $P4PORT. TCP connect to localhost:1666 failed. connect: localhost:1666: Connection refused Some forms producing commands (p4 -s change -o) do tag the output others don't..... Others mark errors as info, for example edit a file which is already open for edit..... Just look for error: - catches most things....
WITHOUT_CLASSIFICATION	Because of the way I create the full target path, there must be NO slash at the end of targetFolder and folderName However, if the slash or backslash is the only character, leave it alone
WITHOUT_CLASSIFICATION	Connect to the StarTeam server, and log on.
WITHOUT_CLASSIFICATION	Simplest constructor, uses default encryption algorithm and compression level.
WITHOUT_CLASSIFICATION	Create a variable dir that contains the name of the StarTeam folder that is the root folder in this view. Get the default path to the current view.
WITHOUT_CLASSIFICATION	We want to display the folder the same way you would enter it on the command line ... so we remove the View name (which is also the name of the root folder, and therefore shows up at the start of the path).
WITHOUT_CLASSIFICATION	If we displayed the project, view, item type, or folder, then show the list of relevant item properties.
WITHOUT_CLASSIFICATION	If we find a "file" attribute then act on a file otherwise act on a project
WITHOUT_CLASSIFICATION	Special setters for the sub-classes
WITHOUT_CLASSIFICATION	Special setters for the sub-classes
WITHOUT_CLASSIFICATION	Login info is required
WITHOUT_CLASSIFICATION	Path to the SourceOffSite home directory /home/user/.sos
WITHOUT_CLASSIFICATION	Check if source is a directory
WITHOUT_CLASSIFICATION	There is a bug in JavaSound 0.90 (jdk1.3beta). It prevents correct termination of the VM. So we have to exit ourselves.
WITHOUT_CLASSIFICATION	Catch everything - some of the above return nulls, throw exceptions or generally misbehave in the event of a problem etc
WITHOUT_CLASSIFICATION	only track progress for files larger than 100kb in verbose mode
WITHOUT_CLASSIFICATION	only track progress for files larger than 100kb in verbose mode
WITHOUT_CLASSIFICATION	since filesize keeps on decreasing we have to store the initial filesize
WITHOUT_CLASSIFICATION	note, it's important to scan the items BEFORE we make the UnmatchedFileMap because that creates a bunch of NEW folders and files (unattached to repository) and we don't want to include those in our traversal.
WITHOUT_CLASSIFICATION	If the file doesn't pass the include/exclude tests, skip it.
WITHOUT_CLASSIFICATION	If the file doesn't pass the include/exclude tests, skip it.
WITHOUT_CLASSIFICATION	We try to update the status once to give StarTeam another chance.
WITHOUT_CLASSIFICATION	note, it's important to scan the items BEFORE we make the Unmatched file map because that creates a bunch of NEW folders and files (unattached to repository) and we don't want to include those in our traversal.
WITHOUT_CLASSIFICATION	once we find a folder that isn't in the repository, anything below it can be deleted.
WITHOUT_CLASSIFICATION	/ default values for attributes. /
WITHOUT_CLASSIFICATION	default behavior is to fail on an error default behavior is to not overwrite default behavior is make a single link
WITHOUT_CLASSIFICATION	build the command line from what we got the format is ss Add VSS items [-B] [-C] [-D-] [-H] [-I-] [-K] [-N] [-O] [-R] [-W] [-Y] [-?] as specified in the SS.EXE help
WITHOUT_CLASSIFICATION	build the command line from what we got the format is ss Checkout VSS items [-G] [-C] [-H] [-I-] [-N] [-O] [-R] [-V] [-Y] [-?] as specified in the SS.EXE help
WITHOUT_CLASSIFICATION	Not a .class file or the one we'd generate
WITHOUT_CLASSIFICATION	We have the loader which is being used to load the CatalogResolver. Can it see the ApacheResolver? The base resolver will only be able to create the ApacheResolver if it can see it - doesn't use the context loader.
WITHOUT_CLASSIFICATION	Use the passed in base in preference to the base from matchingEntry, which is either null or the directory in which the external catalog file from which it was obtained is located. We make a copy so matchingEntry's original base is untouched. This is the standard behavior as per my reading of the JAXP and XML Catalog specs. CKS 11/7/2002
WITHOUT_CLASSIFICATION	Get Method instances for each of the methods we need to call on the resolverImpl using reflection. We can't call them directly, because they require on the xml-commons resolver library which may not be available in the classpath.
WITHOUT_CLASSIFICATION	We didn't match a ResourceLocation, but since we only support PUBLIC and URI entry types internally, it is still possible that there is another entry in an external catalog that will match. We call Apache resolver's resolveEntity method to cover this possibility.
WITHOUT_CLASSIFICATION	record data about the last scanned resource
WITHOUT_CLASSIFICATION	path containing one or more elements
WITHOUT_CLASSIFICATION	just append beginToken and search further
WITHOUT_CLASSIFICATION	create the command to run Java, including user specified options
WITHOUT_CLASSIFICATION	JDK usage command line says that -jar must be the first option, as there is a bug in JDK < 1.4 that forces the jvm type to be specified as the first option, it is appended here as specified in the docs even though there is in fact no order.
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	now check each Resource in case the child only lets through files from any children IT may have:
WITHOUT_CLASSIFICATION	Quick return: directories cannot be signed
WITHOUT_CLASSIFICATION	When using this as a custom selector, this method will be called. It translates each parameter into the appropriate setXXX() call. @param parameters the complete set of parameters for this selector
WITHOUT_CLASSIFICATION	When using this as a custom selector, this method will be called. It translates each parameter into the appropriate setXXX() call. @param parameters the complete set of parameters for this selector
WITHOUT_CLASSIFICATION	When using this as a custom selector, this method will be called. It translates each parameter into the appropriate setXXX() call. @param parameters the complete set of parameters for this selector
WITHOUT_CLASSIFICATION	When using this as a custom selector, this method will be called. It translates each parameter into the appropriate setXXX() call. @param parameters the complete set of parameters for this selector
WITHOUT_CLASSIFICATION	When using this as a custom selector, this method will be called. It translates each parameter into the appropriate setXXX() call. @param parameters the complete set of parameters for this selector
WITHOUT_CLASSIFICATION	When using this as a custom selector, this method will be called. It translates each parameter into the appropriate setXXX() call. @param parameters the complete set of parameters for this selector.
WITHOUT_CLASSIFICATION	----- Set default values -----
WITHOUT_CLASSIFICATION	nothing specified - use default
WITHOUT_CLASSIFICATION	How to handle non-file-Resources? I copy temporarily the resource to a file and use the file-implementation.
WITHOUT_CLASSIFICATION	no-op
WITHOUT_CLASSIFICATION	no-op
WITHOUT_CLASSIFICATION	no-op
WITHOUT_CLASSIFICATION	no-op
WITHOUT_CLASSIFICATION	find the out-of-date targets:
WITHOUT_CLASSIFICATION	write namespace declarations
WITHOUT_CLASSIFICATION	Extrapolating from: "NetWare may have a "java" in that directory, but 99% of the time, you don't want to execute it" -- Jeff Tulley <JTULLEY@novell.com>
WITHOUT_CLASSIFICATION	fall through
WITHOUT_CLASSIFICATION	fall through
WITHOUT_CLASSIFICATION	Check for bsf first then javax This version does not check if the scriptManager supports the language.
WITHOUT_CLASSIFICATION	NotReached
WITHOUT_CLASSIFICATION	NotReached
WITHOUT_CLASSIFICATION	no need to synchronize, as Vector is always synchronized
WITHOUT_CLASSIFICATION	Eliminate consecutive slashes after the drive spec:
WITHOUT_CLASSIFICATION	if it does not, then the file is not up to date.
WITHOUT_CLASSIFICATION	record destdir for later use in getResource
WITHOUT_CLASSIFICATION	Check to see if it's an inner class 'com.company.Class$Inner'
WITHOUT_CLASSIFICATION	treat non-matching groups as empty matches
WITHOUT_CLASSIFICATION	treat non-matching groups as empty matches
WITHOUT_CLASSIFICATION	A 6-byte block header, the value chosen arbitrarily as 0x314159265359 :-). A 32 bit value does not really give a strong enough guarantee that the value will not appear by chance in the compressed datastream. Worst-case probability of this event, for a 900k block, is about 2.0e-3 for 32 bits, 1.0e-5 for 40 bits and 4.0e-8 for 48 bits. For a compressed file of size 100Gb -- about 100000 blocks -- only a 48-bit marker will do. NB: normal compression/ decompression do not rely on these statistical properties. They are only important when trying to recover blocks from damaged files.
WITHOUT_CLASSIFICATION	write 8-bit
WITHOUT_CLASSIFICATION	bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);
WITHOUT_CLASSIFICATION	inlined: bsW(len_selCtr[sfmap_i] & 0xff, code_selCtr[sfmap_i]);
WITHOUT_CLASSIFICATION	Following block contains unrolled code which could be shortened by coding it in additional loops.
WITHOUT_CLASSIFICATION	Complete the big bucket [ss] by quicksorting any unsorted small buckets [ss, j]. Hopefully previous pointer-scanning phases have already completed many of the small buckets [ss, j], so we don't have to sort them at all.
WITHOUT_CLASSIFICATION	Step 2: Now scan this big bucket so as to synthesise the sorted order for small buckets [t, ss] for all t != ss.
WITHOUT_CLASSIFICATION	900021 byte 3600000 byte 3600000 byte ------------ 8433529 byte ============
WITHOUT_CLASSIFICATION	The clean way would be to throw an exception. throw new IOException("crc error");
WITHOUT_CLASSIFICATION	make next blocks readable without error (repair feature, not yet documented, not tested)
WITHOUT_CLASSIFICATION	Setting up the unzftab entries here is not strictly necessary, but it does save having to do it later in a separate pass, and so saves a block's worth of cache misses.
WITHOUT_CLASSIFICATION	tt.length should always be >= length, but theoretically it can happen, if the compressor mixed small and large blocks. Normally only the last block will be smaller than others.
WITHOUT_CLASSIFICATION	deprecated, but email is byte-oriented
WITHOUT_CLASSIFICATION	NOTE We have fit EOF, and the block is not full! This is a broken archive. It does not follow the standard blocking algorithm. However, because we are generous, and it requires little effort, we will simply ignore the error and continue as if the entire block were read. This does not appear to break anything upstream. We used to return false in this case. Thanks to 'Yohann.Roussel@alcatel.fr' for this fix.
WITHOUT_CLASSIFICATION	version needed to extract general purpose bit flag
WITHOUT_CLASSIFICATION	requires version 2 as we are going to store length info in the data descriptor
WITHOUT_CLASSIFICATION	file comment
WITHOUT_CLASSIFICATION	swallow, throw the original exception instead
WITHOUT_CLASSIFICATION	compressed size
WITHOUT_CLASSIFICATION	disk number start
WITHOUT_CLASSIFICATION	total number of entries in
WITHOUT_CLASSIFICATION	total number of entries in
WITHOUT_CLASSIFICATION	$NON-NLS-1$
TEST	?R | boolean | True if file is readable by the real uid/gid of the caller FIXME: Need to implement an readable_real_p in FileTest
TEST	TODO make an assert here
TEST	TODO add test methods here. The name must begin with 'test'. For example:
TEST	TODO: Make into an assert once I get things like blockbodynodes to be implicit nil
TEST	if the method is extending something, then we have to test if the handler is initialized...
TEST	?W | boolean | True if file1 exists and is writable by the real uid/gid FIXME: Need to implement an writable_real_p in FileTest
WITHOUT_CLASSIFICATION	set constants now that they're initialized
WITHOUT_CLASSIFICATION	line 335
WITHOUT_CLASSIFICATION	yyLen 542
WITHOUT_CLASSIFICATION	yyLen 542
WITHOUT_CLASSIFICATION	yyDefRed 945
WITHOUT_CLASSIFICATION	yyDefRed 945
WITHOUT_CLASSIFICATION	yyDgoto 152
WITHOUT_CLASSIFICATION	Figure end-char. '\0' is special to indicate begin=end and that no nesting?
WITHOUT_CLASSIFICATION	line 362
WITHOUT_CLASSIFICATION	line 372
WITHOUT_CLASSIFICATION	yySindex 945
WITHOUT_CLASSIFICATION	yySindex 945
WITHOUT_CLASSIFICATION	line 391
WITHOUT_CLASSIFICATION	yyRindex 945
WITHOUT_CLASSIFICATION	yyRindex 945
WITHOUT_CLASSIFICATION	^D
WITHOUT_CLASSIFICATION	^Z
WITHOUT_CLASSIFICATION	yyLen 496
WITHOUT_CLASSIFICATION	yyLen 496
WITHOUT_CLASSIFICATION	yyLen 496
WITHOUT_CLASSIFICATION	yyLen 496
WITHOUT_CLASSIFICATION	yyLen 496
WITHOUT_CLASSIFICATION	yyLen 496
WITHOUT_CLASSIFICATION	yyLen 496
WITHOUT_CLASSIFICATION	yyDefRed 889
WITHOUT_CLASSIFICATION	yyDefRed 889
WITHOUT_CLASSIFICATION	yyDefRed 889
WITHOUT_CLASSIFICATION	yyDefRed 889
WITHOUT_CLASSIFICATION	yyDefRed 889
WITHOUT_CLASSIFICATION	yyDefRed 889
WITHOUT_CLASSIFICATION	yyDefRed 889
WITHOUT_CLASSIFICATION	yyDgoto 136
WITHOUT_CLASSIFICATION	yyDgoto 136
WITHOUT_CLASSIFICATION	yyDgoto 136
WITHOUT_CLASSIFICATION	yyDgoto 136
WITHOUT_CLASSIFICATION	yyDgoto 136
WITHOUT_CLASSIFICATION	yyDgoto 136
WITHOUT_CLASSIFICATION	yySindex 889
WITHOUT_CLASSIFICATION	yySindex 889
WITHOUT_CLASSIFICATION	yySindex 889
WITHOUT_CLASSIFICATION	yySindex 889
WITHOUT_CLASSIFICATION	yySindex 889
WITHOUT_CLASSIFICATION	yySindex 889
WITHOUT_CLASSIFICATION	yyRindex 889
WITHOUT_CLASSIFICATION	yyRindex 889
WITHOUT_CLASSIFICATION	yyRindex 889
WITHOUT_CLASSIFICATION	yyRindex 889
WITHOUT_CLASSIFICATION	yyRindex 889
WITHOUT_CLASSIFICATION	yyRindex 889
WITHOUT_CLASSIFICATION	yyRindex 889
WITHOUT_CLASSIFICATION	yyGindex 136
WITHOUT_CLASSIFICATION	yyGindex 136
WITHOUT_CLASSIFICATION	yyGindex 136
WITHOUT_CLASSIFICATION	yyGindex 136
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	return result
WITHOUT_CLASSIFICATION	name
WITHOUT_CLASSIFICATION	Define System.getProperties() in ENV_JAVA
WITHOUT_CLASSIFICATION	Accessor methods.
WITHOUT_CLASSIFICATION	MRI behavior
WITHOUT_CLASSIFICATION	MRI behavior
WITHOUT_CLASSIFICATION	MRI behavior
WITHOUT_CLASSIFICATION	MRI behavior
WITHOUT_CLASSIFICATION	call getpwent to fail early if unsupported
WITHOUT_CLASSIFICATION	fall back on env entry for USER
WITHOUT_CLASSIFICATION	try to read grent to fail fast
WITHOUT_CLASSIFICATION	define ARGV and $ for this runtime
WITHOUT_CLASSIFICATION	Version information:
WITHOUT_CLASSIFICATION	after defn of $stderr as the call may produce warnings
WITHOUT_CLASSIFICATION	ARGF, $< object
WITHOUT_CLASSIFICATION	if the environment variables can't be obtained, define an empty ENV
WITHOUT_CLASSIFICATION	On platforms without a c-library accessable through JNA, getpid will return hashCode as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing $$ on getpid() where available, we have the same semantics as MRI.
WITHOUT_CLASSIFICATION	$@ returns nil if $!.backtrace is not an array
WITHOUT_CLASSIFICATION	include its parent (and in turn that module's parents)
WITHOUT_CLASSIFICATION	MRI behavior: just plain '' or '\\\\' are considered illegal on Windows.
WITHOUT_CLASSIFICATION	this _is_ legal (when removing an undef)
WITHOUT_CLASSIFICATION	What we passed to the constructor for method 'path'
WITHOUT_CLASSIFICATION	----- Ruby Class Methods ----------------------------------------------------
WITHOUT_CLASSIFICATION	CONSTANT TABLE METHODS - pass to delegate
WITHOUT_CLASSIFICATION	We get canonical path to try and flatten the path out. a dir '/subdir/..' should return as '/' cnutter: Do we want to flatten path out?
WITHOUT_CLASSIFICATION	MRI behavior
WITHOUT_CLASSIFICATION	----- Ruby Instance Methods -------------------------------------------------
WITHOUT_CLASSIFICATION	Make sure any read()s after close fail.
WITHOUT_CLASSIFICATION	----- Helper Methods --------------------------------------------------------
WITHOUT_CLASSIFICATION	try to use POSIX for this first
WITHOUT_CLASSIFICATION	otherwise fall back on the old way
WITHOUT_CLASSIFICATION	Proc class
WITHOUT_CLASSIFICATION	No passed in block, lets check next outer frame for one ('Proc.new')
WITHOUT_CLASSIFICATION	modify the block with a new backref/lastline-grabbing scope
WITHOUT_CLASSIFICATION	for future compatibility as constructors move toward not accepting metaclass?
WITHOUT_CLASSIFICATION	case RUBY_HYBRID: backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); break;
WITHOUT_CLASSIFICATION	This looks wrong, but it's the way MRI does it.
WITHOUT_CLASSIFICATION	rb_exc_new3
WITHOUT_CLASSIFICATION	NOTE: The indicies here match exactly the signal values; do not reorder
WITHOUT_CLASSIFICATION	registerThreadDumpSignalHandler(runtime);
WITHOUT_CLASSIFICATION	IOT is also 6
WITHOUT_CLASSIFICATION	CLD is also 20
WITHOUT_CLASSIFICATION	RubySignal
WITHOUT_CLASSIFICATION	ZStream actually isn't allocatable
WITHOUT_CLASSIFICATION	MRI behavior, enforced by tests
WITHOUT_CLASSIFICATION	it's safe since adler.update doesn't modify the array
WITHOUT_CLASSIFICATION	MRI behavior: in finished mode, we work as pass-through
WITHOUT_CLASSIFICATION	SYNC_FLUSH
WITHOUT_CLASSIFICATION	By default, NO_FLUSH
WITHOUT_CLASSIFICATION	io.finish();
WITHOUT_CLASSIFICATION	should invoke seek on realIo
WITHOUT_CLASSIFICATION	hmm...
WITHOUT_CLASSIFICATION	Called before any write to make sure the header is always written before the first bytes
WITHOUT_CLASSIFICATION	For JDK 1.4 we can use "cal.getTimeInMillis()"
WITHOUT_CLASSIFICATION	We can just use dt, since it is immutable
WITHOUT_CLASSIFICATION	float number of seconds
WITHOUT_CLASSIFICATION	modified to match how hash is calculated in 1.8.2
WITHOUT_CLASSIFICATION	dump usec, not msec
WITHOUT_CLASSIFICATION	Time class methods
WITHOUT_CLASSIFICATION	marsaling dumps usec, not msec
WITHOUT_CLASSIFICATION	MRI accepts additional wday argument which appears to be ignored.
WITHOUT_CLASSIFICATION	set up with min values and then add to allow rolling over
WITHOUT_CLASSIFICATION	the instant at which we will ask dtz what the difference between DST and standard time is
WITHOUT_CLASSIFICATION	if we might be moving this time from !DST -> DST, the offset is assumed to be the same as it was just before we last moved from DST -> !DST
WITHOUT_CLASSIFICATION	Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.
WITHOUT_CLASSIFICATION	================ Utility Methods ================
WITHOUT_CLASSIFICATION	If the value will fit in a Fixnum, return one of those.
WITHOUT_CLASSIFICATION	================ Instance Methods ================
WITHOUT_CLASSIFICATION	MRI issuses warning here on (RBIGNUM(x)->len SIZEOF_BDIGITS yy > 10241024)
WITHOUT_CLASSIFICATION	num2int is also implemented
WITHOUT_CLASSIFICATION	num2int is also implemented
WITHOUT_CLASSIFICATION	no bignorm here needed
WITHOUT_CLASSIFICATION	wow, the only time we can use the java protocol ;)
WITHOUT_CLASSIFICATION	Pad with a 0
WITHOUT_CLASSIFICATION	BigInteger required a sign byte in incoming array
WITHOUT_CLASSIFICATION	This should only be called by this and RubyFile. It allows this object to be created without a IOHandler.
WITHOUT_CLASSIFICATION	We do this b/c make_tmpname might be overridden
WITHOUT_CLASSIFICATION	???
WITHOUT_CLASSIFICATION	PID
WITHOUT_CLASSIFICATION	================ Instance Methods ================
WITHOUT_CLASSIFICATION	elements and trailing nils
WITHOUT_CLASSIFICATION	Dir::tmpdir
WITHOUT_CLASSIFICATION	volatile to ensure that initial nil-fill is visible to other threads
WITHOUT_CLASSIFICATION	Ruby arrays default to holding 16 elements, so we create an ArrayList of the same size if we're not told otherwise
WITHOUT_CLASSIFICATION	rb_ary_new2 just allocates the internal array
WITHOUT_CLASSIFICATION	plain internal array assignment
WITHOUT_CLASSIFICATION	plain internal array assignment
WITHOUT_CLASSIFICATION	plain internal array assignment
WITHOUT_CLASSIFICATION	Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour
WITHOUT_CLASSIFICATION	NEWOBJ and OBJSETUP equivalent fastest one, for shared arrays, optional objectspace
WITHOUT_CLASSIFICATION	Create global constants and variables
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	Windows does not support these functions, so we won't even try This also matches Ruby behavior for JRUBY-2353.
WITHOUT_CLASSIFICATION	There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and newer one (US/Pacific, America/Los_Angeles). This pattern is to detect the legacy TZ format in order to convert it to the newer format understood by Java API.
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	1.9 seems to just do inspect for to_s now
WITHOUT_CLASSIFICATION	possibly should not in object space
WITHOUT_CLASSIFICATION	only fill if there actually will remain trailing storage
WITHOUT_CLASSIFICATION	rb_ary_new4
WITHOUT_CLASSIFICATION	rb_ary_new4
WITHOUT_CLASSIFICATION	from DUP_SETUP
WITHOUT_CLASSIFICATION	If already inspecting, there is no need to register/unregister again.
WITHOUT_CLASSIFICATION	See [ruby-core:17483]
WITHOUT_CLASSIFICATION	See [ruby-core:17483]
WITHOUT_CLASSIFICATION	Satisfy java.util.List interface (for Java integration)
WITHOUT_CLASSIFICATION	pre-set for the sake of terminating recursive calls
WITHOUT_CLASSIFICATION	root fiber
WITHOUT_CLASSIFICATION	GMT+00:00 --> Etc/GMT, see "MRI behavior" comment below.
WITHOUT_CLASSIFICATION	See http:www.gzip.org/zlib/rfc-gzip.html
WITHOUT_CLASSIFICATION	extras flag
WITHOUT_CLASSIFICATION	Zlib::NO_FLUSH
WITHOUT_CLASSIFICATION	...nothing
WITHOUT_CLASSIFICATION	utility method
WITHOUT_CLASSIFICATION	Prepare LoadService and load path
WITHOUT_CLASSIFICATION	================ Instance Methods ================
WITHOUT_CLASSIFICATION	flags 4 bytes of modified time
WITHOUT_CLASSIFICATION	range_each_func(range, step_i, b, e, args);
WITHOUT_CLASSIFICATION	1.8 "include?"
WITHOUT_CLASSIFICATION	any BigInteger is bigger than Fixnum and we don't have FIXABLE
WITHOUT_CLASSIFICATION	beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal
WITHOUT_CLASSIFICATION	MRI does it!
WITHOUT_CLASSIFICATION	won't hurt fixnums
WITHOUT_CLASSIFICATION	it won't hurt fixnums
WITHOUT_CLASSIFICATION	RubyClassPathVariable
WITHOUT_CLASSIFICATION	not to be confused with RubyObject's flags
WITHOUT_CLASSIFICATION	second argument is allowed, but ignored (MRI)
WITHOUT_CLASSIFICATION	we are presumably running a precompiled class; load directly
WITHOUT_CLASSIFICATION	terminate; tryCompile will have printed out an error and we're done
WITHOUT_CLASSIFICATION	Used for the 'redo' command
WITHOUT_CLASSIFICATION	do nothing, this iteration restarts
WITHOUT_CLASSIFICATION	recheck condition
WITHOUT_CLASSIFICATION	Get the main threadcontext (gets constructed for us)
WITHOUT_CLASSIFICATION	Construct key services
WITHOUT_CLASSIFICATION	initialize the root of the class hierarchy completely
WITHOUT_CLASSIFICATION	Construct the top-level execution frame and scope for the main thread
WITHOUT_CLASSIFICATION	Initialize all the core classes
WITHOUT_CLASSIFICATION	Initialize the "dummy" class used as a marker
WITHOUT_CLASSIFICATION	Initialize Kernel and include into Object
WITHOUT_CLASSIFICATION	Object is ready, create top self
WITHOUT_CLASSIFICATION	Pre-create all the core classes potentially referenced during startup
WITHOUT_CLASSIFICATION	Math depends on all numeric types
WITHOUT_CLASSIFICATION	depends on IO, FileTest
WITHOUT_CLASSIFICATION	initialize builtin libraries
WITHOUT_CLASSIFICATION	Require in all libraries specified on command line
WITHOUT_CLASSIFICATION	Bootstrap the top of the hierarchy
WITHOUT_CLASSIFICATION	we try to get the classloader that loaded JRuby, falling back on System
WITHOUT_CLASSIFICATION	determine spacing
WITHOUT_CLASSIFICATION	should alter global state
WITHOUT_CLASSIFICATION	For JSR 223 support: see http:scripting.java.net/
WITHOUT_CLASSIFICATION	use this for JRuby-internal finalizers
WITHOUT_CLASSIFICATION	this method is for finalizers registered via ObjectSpace
WITHOUT_CLASSIFICATION	new factory methods ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	assert internedName == internedName.intern() : internedName + " is not interned";
WITHOUT_CLASSIFICATION	Equivalent of Data_Wrap_Struct
WITHOUT_CLASSIFICATION	default: don't retain
WITHOUT_CLASSIFICATION	ChannelDescriptors opened by sysopen are cached to avoid collection
WITHOUT_CLASSIFICATION	Default objects
WITHOUT_CLASSIFICATION	record separator var, to speed up io ops that use it
WITHOUT_CLASSIFICATION	former java.lang.System concepts now internalized for MVM
WITHOUT_CLASSIFICATION	Java support
WITHOUT_CLASSIFICATION	Parser stats
WITHOUT_CLASSIFICATION	Compilation
WITHOUT_CLASSIFICATION	can't read non-standard properties
WITHOUT_CLASSIFICATION	can't create custom classloaders
WITHOUT_CLASSIFICATION	mutex that controls modifications of user-defined finalizers
WITHOUT_CLASSIFICATION	mutex that controls modifications of internal finalizers
WITHOUT_CLASSIFICATION	A thread pool to use for executing this runtime's Ruby threads
WITHOUT_CLASSIFICATION	A global object lock for class hierarchy mutations
WITHOUT_CLASSIFICATION	initial spaces spaces before "at"
WITHOUT_CLASSIFICATION	event name filename line numbers should be 1-based
WITHOUT_CLASSIFICATION	The method is intentionally not public, since it typically should not be used outside of the core.
WITHOUT_CLASSIFICATION	Note: this field and the following static initializer must be located be in this order!
WITHOUT_CLASSIFICATION	Contains a list of all blocks (as Procs) that should be called when the runtime environment exits.
WITHOUT_CLASSIFICATION	quoted-printable
WITHOUT_CLASSIFICATION	default options
WITHOUT_CLASSIFICATION	iso-2022-jp
WITHOUT_CLASSIFICATION	iso-2022-jp
WITHOUT_CLASSIFICATION	Shift_JIS
WITHOUT_CLASSIFICATION	Shift_JIS
WITHOUT_CLASSIFICATION	EUC-JP
WITHOUT_CLASSIFICATION	EUC-JP
WITHOUT_CLASSIFICATION	UTF-8
WITHOUT_CLASSIFICATION	UTF-8
WITHOUT_CLASSIFICATION	long name option
WITHOUT_CLASSIFICATION	conversion
WITHOUT_CLASSIFICATION	================ Singleton Methods ================
WITHOUT_CLASSIFICATION	string doesn't share any resources
WITHOUT_CLASSIFICATION	string has it's own ByteList, but it's pointing to a shared buffer (byte[])
WITHOUT_CLASSIFICATION	string doesn't have it's own ByteList (values)
WITHOUT_CLASSIFICATION	ENC_CODERANGE_ASCIIONLY
WITHOUT_CLASSIFICATION	rb_enc_str_asciionly_p
WITHOUT_CLASSIFICATION	rb_enc_str_coderange
WITHOUT_CLASSIFICATION	rb_str_hash_cmp
WITHOUT_CLASSIFICATION	Deprecated String construction routines
WITHOUT_CLASSIFICATION	String construction routines by NOT byte[] buffer and NOT making the target String shared
WITHOUT_CLASSIFICATION	rb_str_subseq
WITHOUT_CLASSIFICATION	no need to assign encoding, same bytelist shared
WITHOUT_CLASSIFICATION	if len == 0 then shared empty
WITHOUT_CLASSIFICATION	rb_str_cmp_m
WITHOUT_CLASSIFICATION	we limit to int because ByteBuffer can only allocate int sizes
WITHOUT_CLASSIFICATION	rb_str_buf_append
WITHOUT_CLASSIFICATION	encoding doesn't have to be copied.
WITHOUT_CLASSIFICATION	this really needs to be inlined here
WITHOUT_CLASSIFICATION	must not reallocate
WITHOUT_CLASSIFICATION	Illegal combination
WITHOUT_CLASSIFICATION	use 1.8 impl
WITHOUT_CLASSIFICATION	RubyString aka rb_string_value
WITHOUT_CLASSIFICATION	bang: true, no match, no substitution
WITHOUT_CLASSIFICATION	out of byte range there will be no match for sure
WITHOUT_CLASSIFICATION	len + margin
WITHOUT_CLASSIFICATION	block given
WITHOUT_CLASSIFICATION	block given
WITHOUT_CLASSIFICATION	copy pre-match substr
WITHOUT_CLASSIFICATION	string given
WITHOUT_CLASSIFICATION	hash given
WITHOUT_CLASSIFICATION	This represents left most digit in a set of incremented values? Therefore leftmost numeric must be '1' and not '0' 999 -> 1000, not 999 -> 0000. whereas chars should be zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"
WITHOUT_CLASSIFICATION	substring longer than string
WITHOUT_CLASSIFICATION	rb_str_substr
WITHOUT_CLASSIFICATION	nothing
WITHOUT_CLASSIFICATION	nothing
WITHOUT_CLASSIFICATION	rb_str_splice
WITHOUT_CLASSIFICATION	TODO: keep cr TODO: rb_str_splice_0
WITHOUT_CLASSIFICATION	keep cr ?
WITHOUT_CLASSIFICATION	keep cr ?
WITHOUT_CLASSIFICATION	wrapped to \0...\0. search next valid char.
WITHOUT_CLASSIFICATION	only this case affects backrefs
WITHOUT_CLASSIFICATION	only this case affects backrefs
WITHOUT_CLASSIFICATION	modified
WITHOUT_CLASSIFICATION	modified
WITHOUT_CLASSIFICATION	1.8
WITHOUT_CLASSIFICATION	1.8
WITHOUT_CLASSIFICATION	QTRUE
WITHOUT_CLASSIFICATION	retrieve last replacer
WITHOUT_CLASSIFICATION	Check the length every iteration, since the block can modify this string.
WITHOUT_CLASSIFICATION	long size bits in byte
WITHOUT_CLASSIFICATION	from encoding, special-casing ASCII to ASCII
WITHOUT_CLASSIFICATION	to encoding, same special-casing
WITHOUT_CLASSIFICATION	create a lightweight thunk
WITHOUT_CLASSIFICATION	decode from "from" and encode to "to"
WITHOUT_CLASSIFICATION	create a lightweight thunk
WITHOUT_CLASSIFICATION	Kernel is the only Module that doesn't need an implementor
WITHOUT_CLASSIFICATION	no binding given, use (eval)
WITHOUT_CLASSIFICATION	interned, OK for "fast" methods
WITHOUT_CLASSIFICATION	File to be loaded by autoload has already been or is being loaded.
WITHOUT_CLASSIFICATION	rb_cstr_to_dbl case
WITHOUT_CLASSIFICATION	We break if we know this sleep was explicitly woken up/interrupted
WITHOUT_CLASSIFICATION	exec process, create IO with process
WITHOUT_CLASSIFICATION	Zero sleeps forever
WITHOUT_CLASSIFICATION	file given, use it and force it into binding
WITHOUT_CLASSIFICATION	Explicit zero in MRI returns immediately
WITHOUT_CLASSIFICATION	Spurious wakeup-loop
WITHOUT_CLASSIFICATION	adjusts paths started with '/' or '\\', on windows.
WITHOUT_CLASSIFICATION	file not given
WITHOUT_CLASSIFICATION	string to eval
WITHOUT_CLASSIFICATION	binding given, use binding's file
WITHOUT_CLASSIFICATION	?g | boolean | True if file1 has the \CF{setgid} bit
WITHOUT_CLASSIFICATION	bomb out, it's not a binding or a proc
WITHOUT_CLASSIFICATION	Ordering of array traversal not important, just intuitive
WITHOUT_CLASSIFICATION	Catch active, throw for catch to handle
WITHOUT_CLASSIFICATION	No catch active for this throw
WITHOUT_CLASSIFICATION	without full tracing, many events will not fire
WITHOUT_CLASSIFICATION	ignore if it's not a global var
WITHOUT_CLASSIFICATION	MRI behavior: use first byte of string value if len > 0
WITHOUT_CLASSIFICATION	MRI behavior: now check arg count
WITHOUT_CLASSIFICATION	?A | Time | Last access time for file1
WITHOUT_CLASSIFICATION	?b | boolean | True if file1 is a block device
WITHOUT_CLASSIFICATION	?c | boolean | True if file1 is a character device
WITHOUT_CLASSIFICATION	?C | Time | Last change time for file1
WITHOUT_CLASSIFICATION	?d | boolean | True if file1 exists and is a directory
WITHOUT_CLASSIFICATION	?e | boolean | True if file1 exists
WITHOUT_CLASSIFICATION	?f | boolean | True if file1 exists and is a regular file
WITHOUT_CLASSIFICATION	?G | boolean | True if file1 exists and has a group ownership equal to the caller's group
WITHOUT_CLASSIFICATION	?k | boolean | True if file1 exists and has the sticky bit set
WITHOUT_CLASSIFICATION	?M | Time | Last modification time for file1
WITHOUT_CLASSIFICATION	?o | boolean | True if file1 exists and is owned by the caller's effective uid
WITHOUT_CLASSIFICATION	?O | boolean | True if file1 exists and is owned by the caller's real uid
WITHOUT_CLASSIFICATION	?p | boolean | True if file1 exists and is a fifo
WITHOUT_CLASSIFICATION	?r | boolean | True if file1 is readable by the effective uid/gid of the caller
WITHOUT_CLASSIFICATION	?s | int/nil | If file1 has nonzero size, return the size, otherwise nil
WITHOUT_CLASSIFICATION	?S | boolean | True if file1 exists and is a socket
WITHOUT_CLASSIFICATION	?u | boolean | True if file1 has the setuid bit set
WITHOUT_CLASSIFICATION	?x | boolean | True if file1 exists and is executable by the effective uid/gid
WITHOUT_CLASSIFICATION	?X | boolean | True if file1 exists and is executable by the real uid/gid
WITHOUT_CLASSIFICATION	?z | boolean | True if file1 exists and has a zero length
WITHOUT_CLASSIFICATION	?= | boolean | True if the modification times of file1 and file2 are equal
WITHOUT_CLASSIFICATION	?< | boolean | True if the modification time of file1 is prior to that of file2
WITHOUT_CLASSIFICATION	?> | boolean | True if the modification time of file1 is after that of file2
WITHOUT_CLASSIFICATION	?- | boolean | True if file1 and file2 are identical
WITHOUT_CLASSIFICATION	@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)
WITHOUT_CLASSIFICATION	Error info is per-thread
WITHOUT_CLASSIFICATION	init errorInfo to nil
WITHOUT_CLASSIFICATION	if we're already aborting, we can receive no further mail
WITHOUT_CLASSIFICATION	If this thread is sleeping or stopped, wake it
WITHOUT_CLASSIFICATION	new interrupt, to hopefully wake it out of any blocking IO
WITHOUT_CLASSIFICATION	set to default thread group
WITHOUT_CLASSIFICATION	set to default thread group
WITHOUT_CLASSIFICATION	JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately
WITHOUT_CLASSIFICATION	JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately
WITHOUT_CLASSIFICATION	for Thread::start, which does not call the subclass's initialize
WITHOUT_CLASSIFICATION	JRUBY-3568, inherit threadgroup or use default
WITHOUT_CLASSIFICATION	MRI behavior: value given in seconds; converted to Float; less than or equal to zero returns immediately; returns nil
WITHOUT_CLASSIFICATION	If the target thread is sleeping or stopped, wake it
WITHOUT_CLASSIFICATION	We need this loop in order to be able to "unblock" the join call without actually calling interrupt.
WITHOUT_CLASSIFICATION	attempt to decriticalize all if we're the critical thread
WITHOUT_CLASSIFICATION	not valid for "dead" state
WITHOUT_CLASSIFICATION	If the killee thread is the same as the killer thread, just die
WITHOUT_CLASSIFICATION	check for thread events, in case we've been woken up to die
WITHOUT_CLASSIFICATION	check for thread events, in case we've been woken up to die
WITHOUT_CLASSIFICATION	ignore; I don't like doing it, but it seems like we really just need to make all channels non-blocking by default and use select when implementing blocking ops, so if this remains set non-blocking, perhaps it's not such a big deal...
WITHOUT_CLASSIFICATION	can't select, just have to do a blocking call
WITHOUT_CLASSIFICATION	compensate for missing slash after drive letter on windows
WITHOUT_CLASSIFICATION	Create Constants class
WITHOUT_CLASSIFICATION	Create constants for open flags
WITHOUT_CLASSIFICATION	Strip off the O_ prefix, so they become File::RDONLY, and so on
WITHOUT_CLASSIFICATION	Create constants for flock
WITHOUT_CLASSIFICATION	File::Constants module is included in IO.
WITHOUT_CLASSIFICATION	Make sure any existing lock is released before we try and close the file
WITHOUT_CLASSIFICATION	null channel always succeeds for all locking operations
WITHOUT_CLASSIFICATION	Paths which end in "/" or "\\" must be stripped off.
WITHOUT_CLASSIFICATION	Special case for handling ACCMODE, since constantine will generate an invalid value if it is not defined by the platform.
WITHOUT_CLASSIFICATION	Return false here
WITHOUT_CLASSIFICATION	Return false here
WITHOUT_CLASSIFICATION	We're not actually a real file, so we can't flock
WITHOUT_CLASSIFICATION	Should we do anything?
WITHOUT_CLASSIFICATION	File class methods
WITHOUT_CLASSIFICATION	MRI-compatible basename handling for windows drive letter paths
WITHOUT_CLASSIFICATION	strip c: away from relative-pathed name
WITHOUT_CLASSIFICATION	C:\ is returned unchanged
WITHOUT_CLASSIFICATION	-1 no match; 0 it is dot file not extension
WITHOUT_CLASSIFICATION	trim trailing slashes
WITHOUT_CLASSIFICATION	Dot is not at beginning and not at end of filename.
WITHOUT_CLASSIFICATION	Handle ~user paths
WITHOUT_CLASSIFICATION	compensate for missing slash after drive letter on windows
WITHOUT_CLASSIFICATION	Include additional path separator (so that dirname of "C:\file.txt" is "C:\", not "C:")
WITHOUT_CLASSIFICATION	FNFException can be thrown in both cases, when the file is not found, or when permission is denied.
WITHOUT_CLASSIFICATION	No directory delimeter. Rest of string is username
WITHOUT_CLASSIFICATION	If there's a second argument, it's the path to which the first argument is relative.
WITHOUT_CLASSIFICATION	Handle ~user paths.
WITHOUT_CLASSIFICATION	If there's no second argument, simply use the working directory of the runtime.
WITHOUT_CLASSIFICATION	Find out which string to check.
WITHOUT_CLASSIFICATION	Single '~' as whole path to expand
WITHOUT_CLASSIFICATION	Count number of extra slashes in the beginning of the string.
WITHOUT_CLASSIFICATION	'~user/...' as path to expand
WITHOUT_CLASSIFICATION	'~/...' as path to expand
WITHOUT_CLASSIFICATION	Prepare a string with the same number of redundant slashes so that we easily can prepend it to the result.
WITHOUT_CLASSIFICATION	If there are N slashes, then we want N-1.
WITHOUT_CLASSIFICATION	no canonical path yet or length is zero, and we have a / followed by a dot...
WITHOUT_CLASSIFICATION	we don't have another slash after this, so replace /. with /
WITHOUT_CLASSIFICATION	we do have another slash; omit both / and . (JRUBY-1606)
WITHOUT_CLASSIFICATION	do nothing, we should not delete the drive letter
WITHOUT_CLASSIFICATION	rb: check_modifiable
WITHOUT_CLASSIFICATION	rb: readable
WITHOUT_CLASSIFICATION	rename is successful
WITHOUT_CLASSIFICATION	rename via Java API call wasn't successful, let's try some tricks, similar to MRI
WITHOUT_CLASSIFICATION	try to rename one more time
WITHOUT_CLASSIFICATION	Can we produce IOError which bypasses a close?
WITHOUT_CLASSIFICATION	Fast path since JNA stat is about 10x slower than this
WITHOUT_CLASSIFICATION	RubyContinuation
WITHOUT_CLASSIFICATION	Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq) it doesn't initialize ifNone field
WITHOUT_CLASSIFICATION	16 ?
WITHOUT_CLASSIFICATION	generation count for O(1) clears
WITHOUT_CLASSIFICATION	size + 1;
WITHOUT_CLASSIFICATION	suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen
WITHOUT_CLASSIFICATION	------------------------------
WITHOUT_CLASSIFICATION	------------------------------
WITHOUT_CLASSIFICATION	put implementation
WITHOUT_CLASSIFICATION	get implementation
WITHOUT_CLASSIFICATION	specialized for value
WITHOUT_CLASSIFICATION	delete implementation
WITHOUT_CLASSIFICATION	n.b. we need to recompute the hash in case the key object was modified
WITHOUT_CLASSIFICATION	============================ End of hash internals ============================
WITHOUT_CLASSIFICATION	================ Instance Methods ================
WITHOUT_CLASSIFICATION	update the hash value
WITHOUT_CLASSIFICATION	other hash does not contain key
WITHOUT_CLASSIFICATION	rb_yield_values(2,...) equivalent
WITHOUT_CLASSIFICATION	Satisfy java.util.Set interface (for Java integration)
WITHOUT_CLASSIFICATION	remain where we are
WITHOUT_CLASSIFICATION	We use file test since it is faster than a stat; also euid == uid in Java always
WITHOUT_CLASSIFICATION	default: don't retain
WITHOUT_CLASSIFICATION	once hasNext has been called, we commit to next() returning the entry it found, even if it were subsequently deleted
WITHOUT_CLASSIFICATION	Not exposed by filetest, but so similiar in nature that it is stored here
WITHOUT_CLASSIFICATION	We do both writable and writable_real through the same method because in our java process effective and real userid will always be the same.
WITHOUT_CLASSIFICATION	first try as directory
WITHOUT_CLASSIFICATION	next as regular file
WITHOUT_CLASSIFICATION	We only want IO objects with valid streams (better to error now).
WITHOUT_CLASSIFICATION	NIO-based
WITHOUT_CLASSIFICATION	NIO-based
WITHOUT_CLASSIFICATION	Stream-based
WITHOUT_CLASSIFICATION	special constructor that accepts stream, not channel
WITHOUT_CLASSIFICATION	We use FILE versus IO to match T_FILE in MRI.
WITHOUT_CLASSIFICATION	Constants for seek
WITHOUT_CLASSIFICATION	confirm we're not reopening self's channel
WITHOUT_CLASSIFICATION	check if we're a stdio IO, and ensure we're not badly mutilated
WITHOUT_CLASSIFICATION	dup2 new fd into self to preserve fileno and references to it
WITHOUT_CLASSIFICATION	re-register, since fileno points at something new now
WITHOUT_CLASSIFICATION	re-register the descriptor
WITHOUT_CLASSIFICATION	since we're not actually duping the incoming channel into our handler, we need to copy the original sync behavior from the other handler
WITHOUT_CLASSIFICATION	re-register
WITHOUT_CLASSIFICATION	A potentially previously close IO is being 'reopened'.
WITHOUT_CLASSIFICATION	Ensure that separator is valid otherwise give it the default paragraph separator.
WITHOUT_CLASSIFICATION	loop until we see the nth separator char
WITHOUT_CLASSIFICATION	if we hit EOF or reached limit then we're done
WITHOUT_CLASSIFICATION	this is for a range check, near as I can tell
WITHOUT_CLASSIFICATION	IO class methods.
WITHOUT_CLASSIFICATION	use original modes
WITHOUT_CLASSIFICATION	See if we already have this descriptor open. If so then we can mostly share the handler (keep open file, but possibly change the mode).
WITHOUT_CLASSIFICATION	redundant, done above as well
WITHOUT_CLASSIFICATION	MRI behavior: swallow StandardErorrs
WITHOUT_CLASSIFICATION	-1 == don't set permissions
WITHOUT_CLASSIFICATION	isRetained=true
WITHOUT_CLASSIFICATION	This appears to be some windows-only mode. On a java platform this is a no-op
WITHOUT_CLASSIFICATION	if not sync, we switch to write buffered mode
WITHOUT_CLASSIFICATION	Throw bad file descriptor is we can not read on supplied descriptor.
WITHOUT_CLASSIFICATION	Everything written
WITHOUT_CLASSIFICATION	return len - n;
WITHOUT_CLASSIFICATION	Claims conversion is done via 'to_s' in docs.
WITHOUT_CLASSIFICATION	Of course this isn't particularly useful.
WITHOUT_CLASSIFICATION	Must be back on first line on rewind.
WITHOUT_CLASSIFICATION	Register the new descriptor
WITHOUT_CLASSIFICATION	cleanup, raising errors if any
WITHOUT_CLASSIFICATION	hmmmm
WITHOUT_CLASSIFICATION	I believe Ruby bails out with a "bug" if closing fails
WITHOUT_CLASSIFICATION	Do nothing. FD_CLOEXEC has no meaning in JVM since we cannot really exec. And why the hell does webrick pass this in as a first argument!!!!!
WITHOUT_CLASSIFICATION	Do nothing. FD_CLOEXEC has no meaning in JVM since we cannot really exec.
WITHOUT_CLASSIFICATION	Length to read
WITHOUT_CLASSIFICATION	String/Buffer to read it into
WITHOUT_CLASSIFICATION	cryptic for the uninitiated...
WITHOUT_CLASSIFICATION	select until read is ready
WITHOUT_CLASSIFICATION	ByteList buffer = null;
WITHOUT_CLASSIFICATION	buffer = str.getByteList();
WITHOUT_CLASSIFICATION	READ_CHECK from MRI io.c
WITHOUT_CLASSIFICATION	rb: writable
WITHOUT_CLASSIFICATION	READ_CHECK from MRI io.c
WITHOUT_CLASSIFICATION	All errors to sysread should be SystemCallErrors, but on a closed stream Ruby returns an IOError. Java throws same exception for all errors so we resort to this hack...
WITHOUT_CLASSIFICATION	TODO: read into buffer using all the fread logic int read = openFile.getMainStream().fread(buffer);
WITHOUT_CLASSIFICATION	truncate buffer string to zero, if provided
WITHOUT_CLASSIFICATION	TODO: READ_CHECK from MRI
WITHOUT_CLASSIFICATION	class methods for IO
WITHOUT_CLASSIFICATION	save blocking state
WITHOUT_CLASSIFICATION	write
WITHOUT_CLASSIFICATION	Java's select doesn't do anything about this, so we leave it be.
WITHOUT_CLASSIFICATION	make all sockets blocking as configured again close unregisters all channels, so we can safely reset blocking modes
WITHOUT_CLASSIFICATION	FIXME: process options
WITHOUT_CLASSIFICATION	Enebo: annotation processing forced me to do pangea method here...
WITHOUT_CLASSIFICATION	NIO based pipe
WITHOUT_CLASSIFICATION	not using remove(Object) here to avoid the equals() call
WITHOUT_CLASSIFICATION	raise will also wake the thread from selection
WITHOUT_CLASSIFICATION	may need to handle ENC_CODERANGE_BROKEN
WITHOUT_CLASSIFICATION	TODO: rb_usascii_str_new2
WITHOUT_CLASSIFICATION	If we know what method was being called, strip everything before the call. This hides the JRuby and reflection internals.
WITHOUT_CLASSIFICATION	The class of this object
WITHOUT_CLASSIFICATION	zeroed by jvm
WITHOUT_CLASSIFICATION	objectClass.defineAnnotatedMethods(BasicObjectMethods.class);
WITHOUT_CLASSIFICATION	JRUBY-4113: callers should not call setTaint on immediate objects
WITHOUT_CLASSIFICATION	rb_class_boot
WITHOUT_CLASSIFICATION	6:tags 16:addr 1:eos
WITHOUT_CLASSIFICATION	1.9 rb_check_to_integer
WITHOUT_CLASSIFICATION	for interface impls
WITHOUT_CLASSIFICATION	We're cloning ourselves, so we know the result should be a RubyObject
WITHOUT_CLASSIFICATION	Methods of the Object class (rb_obj_):
WITHOUT_CLASSIFICATION	can't use -v and stdin
WITHOUT_CLASSIFICATION	include its parent (and in turn that module's parents)
WITHOUT_CLASSIFICATION	Equivalent of Data_Get_Struct This will first check that the object in question is actually a T_DATA equivalent.
WITHOUT_CLASSIFICATION	COMMON VARIABLE METHODS
WITHOUT_CLASSIFICATION	INTERNAL VARIABLE METHODS
WITHOUT_CLASSIFICATION	INSTANCE VARIABLE API METHODS
WITHOUT_CLASSIFICATION	Struct methods
WITHOUT_CLASSIFICATION	runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);
WITHOUT_CLASSIFICATION	define access methods.
WITHOUT_CLASSIFICATION	if we are storing a name as well, index is one too high for values
WITHOUT_CLASSIFICATION	Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.
WITHOUT_CLASSIFICATION	For binding purposes on the newly created struct types
WITHOUT_CLASSIFICATION	OBJ_INFECT
WITHOUT_CLASSIFICATION	These call assume ThreadContext = receiver.getRuntime().getCurrentContext()
WITHOUT_CLASSIFICATION	Execute iterateMethod again.
WITHOUT_CLASSIFICATION	@param nv number of times to cycle or -1 to cycle indefinitely
WITHOUT_CLASSIFICATION	Atomic ?
WITHOUT_CLASSIFICATION	Atomic ?
WITHOUT_CLASSIFICATION	MUST NOT be used across threads
WITHOUT_CLASSIFICATION	superClass may be null.
WITHOUT_CLASSIFICATION	Containing class...The parent of Object is null. Object should always be last in chain.
WITHOUT_CLASSIFICATION	ClassId is the name of the class/module sans where it is located. If it is null, then it an anonymous class.
WITHOUT_CLASSIFICATION	ClassProviders return Java class/module (in #defineOrGetClassUnder and #defineOrGetModuleUnder) when class/module is opened using colon syntax.
WITHOUT_CLASSIFICATION	update superclass reference
WITHOUT_CLASSIFICATION	Make sure the module we include does not already exist
WITHOUT_CLASSIFICATION	MRI checks all types first:
WITHOUT_CLASSIFICATION	we need full traces, use default (slow) populator
WITHOUT_CLASSIFICATION	module/singleton methods are all defined public
WITHOUT_CLASSIFICATION	See if module is in chain...Cannot match against itself so start at superClass.
WITHOUT_CLASSIFICATION	We can safely reference methods here instead of doing getMethods() since if we are adding we are not using a IncludedModuleWrapper.
WITHOUT_CLASSIFICATION	we grab serial number first; the worst that will happen is we cache a later update with an earlier serial number, which would just flush anyway
WITHOUT_CLASSIFICATION	update all hierarchies into which this module has been included
WITHOUT_CLASSIFICATION	This method is intended only for defining new classes in Ruby code, so it uses the allocator of the specified superclass or default to the Object allocator. It should NOT be used to define classes that require a native allocator.
WITHOUT_CLASSIFICATION	need to skip IncludedModuleWrappers
WITHOUT_CLASSIFICATION	superClazz = null;
WITHOUT_CLASSIFICATION	reopen a java class
WITHOUT_CLASSIFICATION	This method is intended only for defining new modules in Ruby code
WITHOUT_CLASSIFICATION	reopen a java module
WITHOUT_CLASSIFICATION	FIXME warning
WITHOUT_CLASSIFICATION	FIXME warning
WITHOUT_CLASSIFICATION	a normal block passed to define_method changes to do arity checking; make it a lambda
WITHOUT_CLASSIFICATION	for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope
WITHOUT_CLASSIFICATION	just using required is broken...but no more broken than before zsuper refactoring
WITHOUT_CLASSIFICATION	class and module bodies default to public, so make the block's visibility public. JRUBY-1185.
WITHOUT_CLASSIFICATION	Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed
WITHOUT_CLASSIFICATION	MRI error message says Class, even though Module is ok
WITHOUT_CLASSIFICATION	scan class hierarchy for module
WITHOUT_CLASSIFICATION	Module class methods
WITHOUT_CLASSIFICATION	Note: we change current frames visibility here because the methods which call this method are all "fast" (e.g. they do not created their own frame).
WITHOUT_CLASSIFICATION	next in hierarchy is an included version of the module we're attempting, so we skip including it
WITHOUT_CLASSIFICATION	if we haven't encountered a real superclass, use the found module as the new inclusion point
WITHOUT_CLASSIFICATION	build a list of all modules to consider for inclusion
WITHOUT_CLASSIFICATION	if the insertion point is a class, update subclass lists
WITHOUT_CLASSIFICATION	if there's a non-null superclass, we're including into a normal class hierarchy; update subclass relationships to avoid stale parent/child relationships
WITHOUT_CLASSIFICATION	CLASS VARIABLE RUBY METHODS
WITHOUT_CLASSIFICATION	CONSTANT RUBY METHODS
WITHOUT_CLASSIFICATION	Note: includes part of fix for JRUBY-1339
WITHOUT_CLASSIFICATION	CLASS VARIABLE API METHODS
WITHOUT_CLASSIFICATION	Wrong Parameter ?
WITHOUT_CLASSIFICATION	not actually called anywhere (all known uses call the fast version)
WITHOUT_CLASSIFICATION	Not that is loaded loop around to resolve it next pass
WITHOUT_CLASSIFICATION	if adding a module under a constant name, set that module's basename to the constant name
WITHOUT_CLASSIFICATION	Fix for JRUBY-1339 - search hierarchy for constant
WITHOUT_CLASSIFICATION	returns the stored value without processing undefs (autoloads)
WITHOUT_CLASSIFICATION	removes and returns the stored value without processing undefs (autoloads)
WITHOUT_CLASSIFICATION	we can't rename a file while it's open in windows
WITHOUT_CLASSIFICATION	reopen
WITHOUT_CLASSIFICATION	ARGF methods
WITHOUT_CLASSIFICATION	data.currentFile.callMethod(context, "lineno=", line);
WITHOUT_CLASSIFICATION	one optional, one required args
WITHOUT_CLASSIFICATION	one optional and no required args
WITHOUT_CLASSIFICATION	try to get errno value out of the class
WITHOUT_CLASSIFICATION	we got a valid errno value
WITHOUT_CLASSIFICATION	Ensure we're not running on GCJ, since it's not supported and leads to weird errors
WITHOUT_CLASSIFICATION	print out as a nice Ruby backtrace
WITHOUT_CLASSIFICATION	produce a nicer error since Rubyists aren't used to seeing this
WITHOUT_CLASSIFICATION	set thread context JRuby classloader here, for the main thread
WITHOUT_CLASSIFICATION	can't set TC classloader
WITHOUT_CLASSIFICATION	no script to run, return success below
WITHOUT_CLASSIFICATION	Skip /usr/bin/env if it's first
WITHOUT_CLASSIFICATION	Skip any assignments if /usr/bin/env is in play
WITHOUT_CLASSIFICATION	Skip any commandline args if /usr/bin/env is in play
WITHOUT_CLASSIFICATION	ignore error
WITHOUT_CLASSIFICATION	COMMON CONSTANT / CVAR METHODS
WITHOUT_CLASSIFICATION	INTERNAL MODULE VARIABLE API METHODS
WITHOUT_CLASSIFICATION	LOW-LEVEL CONSTANT INTERFACE fetch/store/list constants for this module
WITHOUT_CLASSIFICATION	odd
WITHOUT_CLASSIFICATION	JRubyClient
WITHOUT_CLASSIFICATION	x = mantissa 2 exponent Where mantissa is in the range of [.5, 1)
WITHOUT_CLASSIFICATION	Make mantissa same sign so we only have one code path.
WITHOUT_CLASSIFICATION	Increase value to hit lower range.
WITHOUT_CLASSIFICATION	r = x 2 y
WITHOUT_CLASSIFICATION	0!
WITHOUT_CLASSIFICATION	1!
WITHOUT_CLASSIFICATION	2!
WITHOUT_CLASSIFICATION	3!
WITHOUT_CLASSIFICATION	4!
WITHOUT_CLASSIFICATION	5!
WITHOUT_CLASSIFICATION	6!
WITHOUT_CLASSIFICATION	7!
WITHOUT_CLASSIFICATION	8!
WITHOUT_CLASSIFICATION	9!
WITHOUT_CLASSIFICATION	11!
WITHOUT_CLASSIFICATION	12!
WITHOUT_CLASSIFICATION	13!
WITHOUT_CLASSIFICATION	15!
WITHOUT_CLASSIFICATION	16!
WITHOUT_CLASSIFICATION	17!
WITHOUT_CLASSIFICATION	19!
WITHOUT_CLASSIFICATION	20!
WITHOUT_CLASSIFICATION	21!
WITHOUT_CLASSIFICATION	Static constants
WITHOUT_CLASSIFICATION	Clean-up string representation so that it could be understood by Java's BigDecimal. Not terribly efficient for now. 1. MRI allows d and D as exponent separators
WITHOUT_CLASSIFICATION	2. MRI allows underscores anywhere
WITHOUT_CLASSIFICATION	3. MRI ignores the trailing junk
WITHOUT_CLASSIFICATION	MRI behavior: -0 and +0 are two different things
WITHOUT_CLASSIFICATION	Java and MRI definitions of modulo are different.
WITHOUT_CLASSIFICATION	Java and MRI definitions of remainder are the same.
WITHOUT_CLASSIFICATION	Note: MRI has a very non-trivial way of calculating the precision, so we use very simple approximation here:
WITHOUT_CLASSIFICATION	Iteration variables, for the square root x and the reciprocal v initial x: x0 ~ sqrt() initial v: v0 = 1/(2x)
WITHOUT_CLASSIFICATION	it doesn't handle special cases
WITHOUT_CLASSIFICATION	TODO: why this: .setResult();
WITHOUT_CLASSIFICATION	integer division
WITHOUT_CLASSIFICATION	MRI behavior: "If digits is 0, the result is the same as the / operator."
WITHOUT_CLASSIFICATION	rounding neccessary
WITHOUT_CLASSIFICATION	rounding neccessary
WITHOUT_CLASSIFICATION	Java and MRI definitions of divmod are different.
WITHOUT_CLASSIFICATION	JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it
WITHOUT_CLASSIFICATION	shift the decimal point just to the right of the digit to be rounded to (divide by 10(abs(scale))) -1 -> 10's digit, -2 -> 100's digit, etc.
WITHOUT_CLASSIFICATION	...round to that digit
WITHOUT_CLASSIFICATION	...and shift the result back to the left (multiply by 10(abs(scale)))
WITHOUT_CLASSIFICATION	this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are
WITHOUT_CLASSIFICATION	sign
WITHOUT_CLASSIFICATION	significant digits and exponent
WITHOUT_CLASSIFICATION	normalize the value
WITHOUT_CLASSIFICATION	base
WITHOUT_CLASSIFICATION	NOTE: MRI's sqrt precision is limited by 100, but we allow values more than 100.
WITHOUT_CLASSIFICATION	just in case, add a bit of extra precision
WITHOUT_CLASSIFICATION	eh?!
WITHOUT_CLASSIFICATION	Note: #fix has only no-arg form, but truncate allows optional parameter.
WITHOUT_CLASSIFICATION	General number and precision checking
WITHOUT_CLASSIFICATION	the requested precision
WITHOUT_CLASSIFICATION	Proc class
WITHOUT_CLASSIFICATION	.append(" -x[directory] strip off text before #!ruby line and perhaps cd to directory\n")
WITHOUT_CLASSIFICATION	even shift.. ..floors to 62 or 63 bit BigInteger
WITHOUT_CLASSIFICATION	5 -> 2, -5 -> -3 need half a scale more..
WITHOUT_CLASSIFICATION	..where 100 -> 10 shifts the scale
WITHOUT_CLASSIFICATION	Initial x - use double root - multiply by halfBack to unshift - set new scale
WITHOUT_CLASSIFICATION	x0 ~ sqrt()
WITHOUT_CLASSIFICATION	for prec 15 root x0 must surely be OK return small prec roots without iterations
WITHOUT_CLASSIFICATION	Initial v - the reciprocal v0 = 1/(2x)
WITHOUT_CLASSIFICATION	Collect iteration precisions beforehand
WITHOUT_CLASSIFICATION	assume nInit = 16 <= prec
WITHOUT_CLASSIFICATION	The loop of "Square Root by Coupled Newton Iteration"
WITHOUT_CLASSIFICATION	Increase precision - next iteration supplies n exact digits
WITHOUT_CLASSIFICATION	Next x e = d - x^2
WITHOUT_CLASSIFICATION	x += ev ~ sqrt()
WITHOUT_CLASSIFICATION	root x is ready!
WITHOUT_CLASSIFICATION	Next v g = 1 - 2xv
WITHOUT_CLASSIFICATION	v += gv ~ 1/2/sqrt()
WITHOUT_CLASSIFICATION	RubyBigdecimal
WITHOUT_CLASSIFICATION	c: bind_eval
WITHOUT_CLASSIFICATION	================ Module Methods ================
WITHOUT_CLASSIFICATION	from CommandlineParser
WITHOUT_CLASSIFICATION	This property is a Boolean, to allow three values, so it can match MRI's nil, false and true
WITHOUT_CLASSIFICATION	default ClassCache using jitMax as a soft upper bound
WITHOUT_CLASSIFICATION	Until we get a little more solid on 1.9 support we will only run interpreted mode
WITHOUT_CLASSIFICATION	Setting the loader needs to reset the class cache
WITHOUT_CLASSIFICATION	try the normal property first
WITHOUT_CLASSIFICATION	verify it if it's there
WITHOUT_CLASSIFICATION	verify it if it's there
WITHOUT_CLASSIFICATION	try loading from classloader resources
WITHOUT_CLASSIFICATION	otherwise fall back on system temp location
WITHOUT_CLASSIFICATION	We require the home directory to be absolute
WITHOUT_CLASSIFICATION	consume the file name
WITHOUT_CLASSIFICATION	Specify something that can't separate
WITHOUT_CLASSIFICATION	try cwd first
WITHOUT_CLASSIFICATION	ruby interpreter compatibilty Usage: ruby [switches] [--] [programfile] [arguments])
WITHOUT_CLASSIFICATION	KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 if Ruby 2.0 encoding pragmas are implemented, this will need to change
WITHOUT_CLASSIFICATION	@JRubyMethod(name = "complex?")
WITHOUT_CLASSIFICATION	@JRubyMethod(name = "exact?")
WITHOUT_CLASSIFICATION	@JRubyMethod(name = "inexact?")
WITHOUT_CLASSIFICATION	symbol string must be interned
WITHOUT_CLASSIFICATION	assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";
WITHOUT_CLASSIFICATION	Symbol class methods.
WITHOUT_CLASSIFICATION	TODO: 1.9 rb_enc_symname_p
WITHOUT_CLASSIFICATION	This is needed to unpack stuff
WITHOUT_CLASSIFICATION	we already confirmed above that length > 0
WITHOUT_CLASSIFICATION	must be power of 2!
WITHOUT_CLASSIFICATION	note all fields are final -- rehash creates new entries when necessary. as documented in java.util.concurrent.ConcurrentHashMap.java, that will statistically affect only a small percentage (< 20%) of entries for a given rehash.
WITHOUT_CLASSIFICATION	assert internedName == internedName.intern() : internedName + " is not interned";
WITHOUT_CLASSIFICATION	try lookup again under lock
WITHOUT_CLASSIFICATION	try lookup again under lock
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	backwards-compatibility, but threadsafe now
WITHOUT_CLASSIFICATION	Single node on list
WITHOUT_CLASSIFICATION	Reuse trailing consecutive sequence at same slot
WITHOUT_CLASSIFICATION	Clone all remaining nodes
WITHOUT_CLASSIFICATION	Check the length every iteration, since the block can modify this string.
WITHOUT_CLASSIFICATION	we set scope-aware to true to force heap-based locals
WITHOUT_CLASSIFICATION	not so backwards-compatible here, but no one should have been calling this anyway.
WITHOUT_CLASSIFICATION	Profile
WITHOUT_CLASSIFICATION	static private final String TRANSLIT = "translit";
WITHOUT_CLASSIFICATION	treat start and end as start...end for end >= 0, start..end for end < 0
WITHOUT_CLASSIFICATION	invalid ranges result in an empty string
WITHOUT_CLASSIFICATION	Methods of the Nil Class (nil_):
WITHOUT_CLASSIFICATION	Has read/write been closed or is it still open for business
WITHOUT_CLASSIFICATION	Support IO modes that this object was opened with
WITHOUT_CLASSIFICATION	must let original string know we're modifying, so shared buffers aren't damaged
WITHOUT_CLASSIFICATION	reset the state
WITHOUT_CLASSIFICATION	Tainting here if we ever want it. (secure 4)
WITHOUT_CLASSIFICATION	rb_match_busy
WITHOUT_CLASSIFICATION	str is frozen
WITHOUT_CLASSIFICATION	MRI also does a pointer comparison here
WITHOUT_CLASSIFICATION	JRubyServer
WITHOUT_CLASSIFICATION	Class.allocate object is not allocatable before it is initialized
WITHOUT_CLASSIFICATION	boot the Object class
WITHOUT_CLASSIFICATION	Methods of the Object class (rb_obj_):
WITHOUT_CLASSIFICATION	update superclass reference
WITHOUT_CLASSIFICATION	undo check
WITHOUT_CLASSIFICATION	This is a non-standard method; have we decided to start extending Ruby? classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));
WITHOUT_CLASSIFICATION	boot the Module and Class classes
WITHOUT_CLASSIFICATION	this is the only case it might be null here (in MetaClass construction)
WITHOUT_CLASSIFICATION	use parent's marshal
WITHOUT_CLASSIFICATION	use parent's marshal
WITHOUT_CLASSIFICATION	could be pulled down to RubyClass in future rb_class_boot
WITHOUT_CLASSIFICATION	remove us from old superclass's child classes
WITHOUT_CLASSIFICATION	add us to new superclass's child classes
WITHOUT_CLASSIFICATION	update all subclasses
WITHOUT_CLASSIFICATION	fields to hold Ruby and RubyClass references
WITHOUT_CLASSIFICATION	static initializing method
WITHOUT_CLASSIFICATION	standard constructor that accepts Ruby, RubyClass
WITHOUT_CLASSIFICATION	no-arg constructor using static references to Ruby and RubyClass
WITHOUT_CLASSIFICATION	non-signature signature with just IRubyObject
WITHOUT_CLASSIFICATION	indices for temp values
WITHOUT_CLASSIFICATION	self method name
WITHOUT_CLASSIFICATION	the default allocator
WITHOUT_CLASSIFICATION	Equivalent of T_DATA
WITHOUT_CLASSIFICATION	do nothing, leave empty
WITHOUT_CLASSIFICATION	Double.MAX_EXPONENT since Java 1.6
WITHOUT_CLASSIFICATION	================ Singleton Methods ================
WITHOUT_CLASSIFICATION	Ruby uses Qnil here, we use "dummy" because we need a class
WITHOUT_CLASSIFICATION	Make sure all arguments are modules before calling the callbacks
WITHOUT_CLASSIFICATION	MRI extends in order from last to first
WITHOUT_CLASSIFICATION	NOTE: Serialization is primarily supported for testing purposes, and there is no general guarantee that serialization will work correctly. Specifically, instance variables pointing at symbols, threads, modules, classes, and other unserializable types are not detected.
WITHOUT_CLASSIFICATION	write out ivar count followed by name/value pairs
WITHOUT_CLASSIFICATION	rest in ivar count followed by name/value pairs
WITHOUT_CLASSIFICATION	0x3fff_ffff -0x4000_0000
WITHOUT_CLASSIFICATION	a gotcha
WITHOUT_CLASSIFICATION	Java / and % are not the same as ruby
WITHOUT_CLASSIFICATION	A gotcha for Long.MIN_VALUE: value = -value
WITHOUT_CLASSIFICATION	Piece of mri rb_to_id
WITHOUT_CLASSIFICATION	Java Doubles are 64 bit long:
WITHOUT_CLASSIFICATION	Double.MAX_EXPONENT since Java 1.6
WITHOUT_CLASSIFICATION	don't override Numeric#div !
WITHOUT_CLASSIFICATION	Modelled after c ruby implementation (java /,% not same as ruby)
WITHOUT_CLASSIFICATION	MRI behavior:
WITHOUT_CLASSIFICATION	Numeric.equal
WITHOUT_CLASSIFICATION	provider is not available
WITHOUT_CLASSIFICATION	bouncy castle doesn't support algorithm
WITHOUT_CLASSIFICATION	fall back to system JCA providers
WITHOUT_CLASSIFICATION	RubyDigest
WITHOUT_CLASSIFICATION	ENEBO: Can these be fast?
WITHOUT_CLASSIFICATION	synchronize on the RubyThread for threadgroup updates
WITHOUT_CLASSIFICATION	we only add live threads
WITHOUT_CLASSIFICATION	use same ClassIndex as metaclass, since we're technically still of that type
WITHOUT_CLASSIFICATION	handle everything after -- as arguments to the jruby process
WITHOUT_CLASSIFICATION	JRubyService
WITHOUT_CLASSIFICATION	while
WITHOUT_CLASSIFICATION	\OOO
WITHOUT_CLASSIFICATION	CRuby uses sprintf(buf, "%.g", FLOAT_DIG, d); This pattern adjusts the output of String.pattern("%g") to mimic the C version.
WITHOUT_CLASSIFICATION	mask off "once" flag
WITHOUT_CLASSIFICATION	used only by the compiler/interpreter (will set the literal flag)
WITHOUT_CLASSIFICATION	internal usage (Complex/Rational)
WITHOUT_CLASSIFICATION	silent ?
WITHOUT_CLASSIFICATION	\xHH
WITHOUT_CLASSIFICATION	\M-X, \M-\C-X, \M-\cX
WITHOUT_CLASSIFICATION	\C-X, \C-\M-X
WITHOUT_CLASSIFICATION	\cX, \c\M-X
WITHOUT_CLASSIFICATION	\O, \OO, \OOO or backref
WITHOUT_CLASSIFICATION	MBCLEN_NEEDMORE_P
WITHOUT_CLASSIFICATION	MBCLEN_INVALID_P
WITHOUT_CLASSIFICATION	Unicode is can be only 21 bits long, int is enough
WITHOUT_CLASSIFICATION	Surrogates
WITHOUT_CLASSIFICATION	do not load the class if not used
WITHOUT_CLASSIFICATION	\0, \0O, \0OO
WITHOUT_CLASSIFICATION	\xHH
WITHOUT_CLASSIFICATION	\C-X, \C-\M-X
WITHOUT_CLASSIFICATION	\M-X, \M-\C-X, \M-\cX
WITHOUT_CLASSIFICATION	\\u{H HH HHH HHHH HHHHH HHHHHH ...}
WITHOUT_CLASSIFICATION	\\uHHHH
WITHOUT_CLASSIFICATION	\p{Hiragana}
WITHOUT_CLASSIFICATION	inner switch
WITHOUT_CLASSIFICATION	newInstance here
WITHOUT_CLASSIFICATION	rb_reg_raise
WITHOUT_CLASSIFICATION	rb_reg_desc
WITHOUT_CLASSIFICATION	rb_enc_reg_raise
WITHOUT_CLASSIFICATION	rb_enc_reg_error_desc
WITHOUT_CLASSIFICATION	rb_reg_initialize_str
WITHOUT_CLASSIFICATION	rb_reg_initialize
WITHOUT_CLASSIFICATION	JRUBY-3625: delay setting backref until the MatchData is completely initialized
WITHOUT_CLASSIFICATION	rb_reg_expr_str
WITHOUT_CLASSIFICATION	option_to_str
WITHOUT_CLASSIFICATION	Don't initialize with class Don't put in object space and don't taint
WITHOUT_CLASSIFICATION	args should be before block
WITHOUT_CLASSIFICATION	args should be at end
WITHOUT_CLASSIFICATION	minus one more for IRubyObject[]
WITHOUT_CLASSIFICATION	minus one more for IRubyObject[]
WITHOUT_CLASSIFICATION	skip anything not related to jruby
WITHOUT_CLASSIFICATION	start a new populator
WITHOUT_CLASSIFICATION	check for frame field reads or writes
WITHOUT_CLASSIFICATION	add all names for this annotation
WITHOUT_CLASSIFICATION	no annotated methods found, skip
WITHOUT_CLASSIFICATION	write out a static initializer for frame names, so it only fires once
WITHOUT_CLASSIFICATION	single method, use normal logic
WITHOUT_CLASSIFICATION	multimethod, new logic
WITHOUT_CLASSIFICATION	declared type returns the qualified name without $ for inner classes!!!
WITHOUT_CLASSIFICATION	inner class, use $ to delimit
WITHOUT_CLASSIFICATION	RubyModule singletonClass = module.getSingletonClass();
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	fallback on non-pregenerated logic
WITHOUT_CLASSIFICATION	refresh call adapter, since it matters if this is iter-based or not
WITHOUT_CLASSIFICATION	If we have more than one arg, make sure the array created to contain them is not ObjectSpaced
WITHOUT_CLASSIFICATION	attribute set.
WITHOUT_CLASSIFICATION	element set
WITHOUT_CLASSIFICATION	If reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	If reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	colon3
WITHOUT_CLASSIFICATION	Colon3
WITHOUT_CLASSIFICATION	array created for rescue args doesn't need to be in ObjectSpace.
WITHOUT_CLASSIFICATION	For b.foo
WITHOUT_CLASSIFICATION	instance config for the script run
WITHOUT_CLASSIFICATION	If reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	If reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure
WITHOUT_CLASSIFICATION	For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure
WITHOUT_CLASSIFICATION	RubyModule module = context.getRubyClass();
WITHOUT_CLASSIFICATION	For 'b.foo'
WITHOUT_CLASSIFICATION	We define an actual list to get around bug in java integration (1387115)
WITHOUT_CLASSIFICATION	something in here is used to build up ruby stack trace...
WITHOUT_CLASSIFICATION	Ruby Grammar productions return plenty of nulls.
WITHOUT_CLASSIFICATION	Ruby Grammar productions return plenty of nulls.
WITHOUT_CLASSIFICATION	do nothing, allow loop to retry
WITHOUT_CLASSIFICATION	We can callsite cache const_missing if we want
WITHOUT_CLASSIFICATION	Store to temp so it does null out on us mid-stream
WITHOUT_CLASSIFICATION	never visited, should be fine
WITHOUT_CLASSIFICATION	For 'foo()'. Args are only significant in maintaining backwards compatible AST structure
WITHOUT_CLASSIFICATION	The name of the variable
WITHOUT_CLASSIFICATION	If we have more than one argument, then make sure the array is not ObjectSpaced.
WITHOUT_CLASSIFICATION	Only in ruby 1.9 methods
WITHOUT_CLASSIFICATION	Bind 'normal' parameter values to the local scope for this method.
WITHOUT_CLASSIFICATION	no arg grouping, just use bulk assignment methods
WITHOUT_CLASSIFICATION	optArgs and restArgs require more work, so isolate them and ArrayList creation here
WITHOUT_CLASSIFICATION	arity.checkArity(runtime, argsLength);
WITHOUT_CLASSIFICATION	no more values to stick in rest arg
WITHOUT_CLASSIFICATION	set argv from main's args
WITHOUT_CLASSIFICATION	attribute set.
WITHOUT_CLASSIFICATION	If reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure
WITHOUT_CLASSIFICATION	The name of the variable
WITHOUT_CLASSIFICATION	A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.
WITHOUT_CLASSIFICATION	A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.
WITHOUT_CLASSIFICATION	block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] assert argsNode != null : "argsNode is not null";
WITHOUT_CLASSIFICATION	assign given optional arguments to their variables
WITHOUT_CLASSIFICATION	in-frame EvalState should already have receiver set as self, continue to use it
WITHOUT_CLASSIFICATION	assign the default values, adding to the end of allArgs
WITHOUT_CLASSIFICATION	Make sure the appropriate scope has proper size. See JRUBY-2046.
WITHOUT_CLASSIFICATION	Experimental class reification support, to create real Java classes for Ruby classes after the first opening
WITHOUT_CLASSIFICATION	This should never happen past parse, but just bulletproof this just in case
WITHOUT_CLASSIFICATION	Make a nil node if no body. Notice this is not part of AST.
WITHOUT_CLASSIFICATION	'class << state.self' and 'class << obj' uses defn as opposed to defs
WITHOUT_CLASSIFICATION	now used as an interpreter event
WITHOUT_CLASSIFICATION	never visited, should be ok
WITHOUT_CLASSIFICATION	If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil
WITHOUT_CLASSIFICATION	JRUBY-530 until case
WITHOUT_CLASSIFICATION	element set
WITHOUT_CLASSIFICATION	For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure
WITHOUT_CLASSIFICATION	We can callsite cache const_missing if we want
WITHOUT_CLASSIFICATION	Store to temp so it does null out on us mid-stream
WITHOUT_CLASSIFICATION	Store to temp so it does null out on us mid-stream
WITHOUT_CLASSIFICATION	For 'foo()'. Args are only significant in maintaining backwards compatible AST structure
WITHOUT_CLASSIFICATION	The name of the variable
WITHOUT_CLASSIFICATION	The name of the variable
WITHOUT_CLASSIFICATION	A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.
WITHOUT_CLASSIFICATION	Empirical Observations: null -> Some arity argsNode == this.argsNode then check for arity changes newline(splatnode) -> argspushnode
WITHOUT_CLASSIFICATION	assert !(value instanceof RubyArray) : "Not an array";
WITHOUT_CLASSIFICATION	Serialization killed our dynamic scope. We can just create an empty one since serialization cannot serialize an eval (which is the only thing which is capable of having a non-empty dynamic scope).
WITHOUT_CLASSIFICATION	Each root node has a top-level scope that we need to push
WITHOUT_CLASSIFICATION	We could probably also detect if LHS value came out of cache and avoid some of this
WITHOUT_CLASSIFICATION	assert thenBody != null : "thenBody is not null"; assert elseBody != null : "elseBody is not null";
WITHOUT_CLASSIFICATION	add in reverse order
WITHOUT_CLASSIFICATION	in order to make pragma's noops we set location to a special value
WITHOUT_CLASSIFICATION	ignore compiler pragmas
WITHOUT_CLASSIFICATION	We can callsite cache const_missing if we want
WITHOUT_CLASSIFICATION	Store to temp so it does null out on us mid-stream
WITHOUT_CLASSIFICATION	Store to temp so it does null out on us mid-stream
WITHOUT_CLASSIFICATION	For 'foo()'. Args are only significant in maintaining backwards compatible AST structure
WITHOUT_CLASSIFICATION	Make a nil node if no body. Notice this is not part of AST.
WITHOUT_CLASSIFICATION	now used as an interpreter event
WITHOUT_CLASSIFICATION	No actual test, so do 'when' if when expression is not nil
WITHOUT_CLASSIFICATION	save entering the try if there's nothing to ensure
WITHOUT_CLASSIFICATION	For 'foo'
WITHOUT_CLASSIFICATION	For 'foo'
WITHOUT_CLASSIFICATION	admittedly inefficient
WITHOUT_CLASSIFICATION	JRUBY-530, while case
WITHOUT_CLASSIFICATION	What static scoping relationship exists when it comes into being.
WITHOUT_CLASSIFICATION	let RescuedBlock continue
WITHOUT_CLASSIFICATION	just rethrow
WITHOUT_CLASSIFICATION	just rethrow
WITHOUT_CLASSIFICATION	clear exception when handled or retried
WITHOUT_CLASSIFICATION	clear exception when handled or retried
WITHOUT_CLASSIFICATION	no takers; bubble up
WITHOUT_CLASSIFICATION	no takers; bubble up
WITHOUT_CLASSIFICATION	Execute rescue block
WITHOUT_CLASSIFICATION	If no exception is thrown execute else block
WITHOUT_CLASSIFICATION	index of variable for this arg
WITHOUT_CLASSIFICATION	only a marker interface
WITHOUT_CLASSIFICATION	don't attempt to coerce to array, just wrap and return
WITHOUT_CLASSIFICATION	pragmas
WITHOUT_CLASSIFICATION	The method also needs a scope, do both
WITHOUT_CLASSIFICATION	We're doing normal framed compilation or the method needs a frame
WITHOUT_CLASSIFICATION	The method doesn't need a scope or static scope; frame only
WITHOUT_CLASSIFICATION	The method doesn't need a scope, but has static scope needs; use a dummy scope
WITHOUT_CLASSIFICATION	Proc.new needs the caller's block to instantiate a proc
WITHOUT_CLASSIFICATION	check for Proc.new, an especially magic method
WITHOUT_CLASSIFICATION	long, slow way causes disabling
WITHOUT_CLASSIFICATION	ok, we have fast paths
WITHOUT_CLASSIFICATION	ok, we have fast paths
WITHOUT_CLASSIFICATION	long, slow way causes disabling for defined
WITHOUT_CLASSIFICATION	we set scope-aware to true to force heap-based locals
WITHOUT_CLASSIFICATION	Because Regexp#=== sets backref, we have to make this backref-aware
WITHOUT_CLASSIFICATION	encountered a node we don't recognize, set everything to true to disable optz
WITHOUT_CLASSIFICATION	only arrays that are "lightweight" are being used as args arrays
WITHOUT_CLASSIFICATION	otherwise, it's a literal array
WITHOUT_CLASSIFICATION	use array as-is, it's a literal array
WITHOUT_CLASSIFICATION	unwrap newline nodes to get their actual type
WITHOUT_CLASSIFICATION	compile first node as non-expr and then second node
WITHOUT_CLASSIFICATION	last node, either !instanceof WhenNode or null, is the else
WITHOUT_CLASSIFICATION	compile first node only
WITHOUT_CLASSIFICATION	splatted when, can't do it yet
WITHOUT_CLASSIFICATION	if __send__ with a literal symbol, compile it as a direct fcall
WITHOUT_CLASSIFICATION	NOTE: Currently this optimization is limited to the following situations: All expressions must be int-ranged literal fixnums It also still emits the code for the "safe" when logic, which is rather wasteful (since it essentially doubles each code body). As such it is normally disabled, but it serves as an example of how this optimization could be done. Ideally, it should be combined with the when processing to improve code reuse before it's generally available.
WITHOUT_CLASSIFICATION	aggregate when nodes into a list, unfortunately, this is no
WITHOUT_CLASSIFICATION	one arg but it's an array, treat it as a proper array
WITHOUT_CLASSIFICATION	can't do it
WITHOUT_CLASSIFICATION	otherwise, use normal args compiler
WITHOUT_CLASSIFICATION	colon3, assign in Object
WITHOUT_CLASSIFICATION	colon3, assign in Object
WITHOUT_CLASSIFICATION	these are all simple cases that don't require the heavier defined logic
WITHOUT_CLASSIFICATION	[IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass] [IRubyObject]
WITHOUT_CLASSIFICATION	[]
WITHOUT_CLASSIFICATION	[]
WITHOUT_CLASSIFICATION	context.swapValues(); context.consumeCurrentValue();
WITHOUT_CLASSIFICATION	[RubyClass] [RubyClass, RubyClass] [RubyClass] [] [self] [RubyClass] [RubyClass, RubyClass]
WITHOUT_CLASSIFICATION	[RubyClass]
WITHOUT_CLASSIFICATION	[RubyClass] [RubyClass, RubyClass] [RubyClass] []
WITHOUT_CLASSIFICATION	if root of method is rescue, compile as a light rescue
WITHOUT_CLASSIFICATION	inspect body and args
WITHOUT_CLASSIFICATION	inspect body and args
WITHOUT_CLASSIFICATION	check args first, since body inspection can depend on args
WITHOUT_CLASSIFICATION	if root of method is rescue, compile as light rescue
WITHOUT_CLASSIFICATION	invoke run with threadcontext and topself
WITHOUT_CLASSIFICATION	[IRubyObject] [IRubyObject, IRubyObject] [IRubyObject, RubyClass] [IRubyObject, RubyClass, RubyClass] [IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass, Visibility, Visibility]
WITHOUT_CLASSIFICATION	[IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass] [IRubyObject]
WITHOUT_CLASSIFICATION	[RubyClass] []
WITHOUT_CLASSIFICATION	[String] [String, String] [String] [String, RubyClass] [String, RubyClass, RubyClass] [String, RubyClass]
WITHOUT_CLASSIFICATION	[String] [String, String] [String] [String, RubyClass] [String, RubyClass, RubyClass] [String, RubyClass]
WITHOUT_CLASSIFICATION	no args, do not pass args processor
WITHOUT_CLASSIFICATION	create the closure class and instantiate it
WITHOUT_CLASSIFICATION	create the closure class and instantiate it
WITHOUT_CLASSIFICATION	not an expression, only compile the elements
WITHOUT_CLASSIFICATION	not an expression, only compile the elements
WITHOUT_CLASSIFICATION	not an expression, only compile the elements
WITHOUT_CLASSIFICATION	create the closure class and instantiate it
WITHOUT_CLASSIFICATION	create the closure class and instantiate it
WITHOUT_CLASSIFICATION	no args, do not pass args processor
WITHOUT_CLASSIFICATION	force heap-scope behavior, since it uses parent's scope
WITHOUT_CLASSIFICATION	always false or nil
WITHOUT_CLASSIFICATION	optimizations if we know ahead of time it will always be true or false
WITHOUT_CLASSIFICATION	normal
WITHOUT_CLASSIFICATION	compile condition as non-expr and just compile "then" body
WITHOUT_CLASSIFICATION	need the array, use unoptz version
WITHOUT_CLASSIFICATION	just push nil for pragmas
WITHOUT_CLASSIFICATION	"assignment" means the value is already on the stack
WITHOUT_CLASSIFICATION	compile first node only
WITHOUT_CLASSIFICATION	create the closure class and instantiate it
WITHOUT_CLASSIFICATION	create the closure class and instantiate it
WITHOUT_CLASSIFICATION	eval new value, call operator on old value, and assign
WITHOUT_CLASSIFICATION	try optz version
WITHOUT_CLASSIFICATION	sizes must match
WITHOUT_CLASSIFICATION	expect value to be an array of nodes
WITHOUT_CLASSIFICATION	normal items at the "head" of the masgn
WITHOUT_CLASSIFICATION	head must not be null and there must be no "args" (like arg)
WITHOUT_CLASSIFICATION	"head" must have no non-trivial assigns (array groupings, basically)
WITHOUT_CLASSIFICATION	only supports simple parallel assignment of up to 10 values to the same number of assignees
WITHOUT_CLASSIFICATION	perform assignment for the next node
WITHOUT_CLASSIFICATION	if we get here, no optz cases work; fall back on unoptz.
WITHOUT_CLASSIFICATION	RedoNode redoNode = (RedoNode)node;
WITHOUT_CLASSIFICATION	done processing args
WITHOUT_CLASSIFICATION	all these types are immediately considered "defined"
WITHOUT_CLASSIFICATION	assign to appropriate variable
WITHOUT_CLASSIFICATION	if arity 1, just compile the one element to save us the array cost
WITHOUT_CLASSIFICATION	[recv]
WITHOUT_CLASSIFICATION	[recv]
WITHOUT_CLASSIFICATION	[recv]
WITHOUT_CLASSIFICATION	compile into array
WITHOUT_CLASSIFICATION	compile first node as non-expr and compile second node
WITHOUT_CLASSIFICATION	check if it's an immediate, and don't outline
WITHOUT_CLASSIFICATION	condition is always true, just compile it and not body
WITHOUT_CLASSIFICATION	force static scope to claim restarg at 0, so it only implements the [] version of __file__
WITHOUT_CLASSIFICATION	create method for toplevel of script
WITHOUT_CLASSIFICATION	it's a multiple-statement body, iterate over all elements in turn and chain if it get too long
WITHOUT_CLASSIFICATION	send it along as arity-specific, we don't need the array
WITHOUT_CLASSIFICATION	single-statement body, just compile it
WITHOUT_CLASSIFICATION	leave as a normal array
WITHOUT_CLASSIFICATION	This method has JITed already or has been abandoned. Bail out.
WITHOUT_CLASSIFICATION	The cache is full. Abandon JIT for this method and bail out.
WITHOUT_CLASSIFICATION	check args first, since body inspection can depend on args
WITHOUT_CLASSIFICATION	create the closure class and instantiate it
WITHOUT_CLASSIFICATION	create the closure class and instantiate it
WITHOUT_CLASSIFICATION	no args, do not pass args processor
WITHOUT_CLASSIFICATION	need the array, use unoptz version
WITHOUT_CLASSIFICATION	try optz version
WITHOUT_CLASSIFICATION	expect value to be an array of nodes
WITHOUT_CLASSIFICATION	head must not be null and there must be no "args" (like arg)
WITHOUT_CLASSIFICATION	sizes must match
WITHOUT_CLASSIFICATION	"head" must have no non-trivial assigns (array groupings, basically)
WITHOUT_CLASSIFICATION	if we get here, no optz cases work; fall back on unoptz.
WITHOUT_CLASSIFICATION	perform assignment for the next node
WITHOUT_CLASSIFICATION	done processing args
WITHOUT_CLASSIFICATION	Check if the method has been explicitly excluded
WITHOUT_CLASSIFICATION	class could not be found nor generated; give up on JIT and bail out
WITHOUT_CLASSIFICATION	successfully got back a jitted method
WITHOUT_CLASSIFICATION	finally, grab the script
WITHOUT_CLASSIFICATION	logEvery n methods based on configuration
WITHOUT_CLASSIFICATION	Time the compilation
WITHOUT_CLASSIFICATION	we have a body, do a full-on method
WITHOUT_CLASSIFICATION	If we don't have a body, check for required or opt args if opt args, they could have side effects if required args, need to raise errors if too few args passed otherwise, method does nothing, make it a nop
WITHOUT_CLASSIFICATION	if we haven't already decided on a do-nothing call
WITHOUT_CLASSIFICATION	only supports simple parallel assignment of up to 4 values to the same number of assignees
WITHOUT_CLASSIFICATION	normal items at the front or back of the masgn
WITHOUT_CLASSIFICATION	set up a local IRuby variable
WITHOUT_CLASSIFICATION	grab nil for local variables
WITHOUT_CLASSIFICATION	visit a label to start scoping for local vars in this method
WITHOUT_CLASSIFICATION	return last value from execution
WITHOUT_CLASSIFICATION	end of variable scope
WITHOUT_CLASSIFICATION	method is done, declare all variables
WITHOUT_CLASSIFICATION	Define the annotation for the method
WITHOUT_CLASSIFICATION	check arity in the variable-arity version
WITHOUT_CLASSIFICATION	load block from [] version of method
WITHOUT_CLASSIFICATION	normal return for method body. return jump for within a begin/rescue/ensure
WITHOUT_CLASSIFICATION	in method body with no containing loop, issue jump error load runtime and value, issue jump error
WITHOUT_CLASSIFICATION	in method body with no containing loop, issue jump error load runtime and value, issue jump error
WITHOUT_CLASSIFICATION	value is already on stack, save it for later
WITHOUT_CLASSIFICATION	receiver first, so we know which call site to use
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	arg0
WITHOUT_CLASSIFICATION	arg0
WITHOUT_CLASSIFICATION	arg0
WITHOUT_CLASSIFICATION	arg1
WITHOUT_CLASSIFICATION	arg1
WITHOUT_CLASSIFICATION	arg2
WITHOUT_CLASSIFICATION	args
WITHOUT_CLASSIFICATION	receiver first, so we know which call site to use
WITHOUT_CLASSIFICATION	select appropriate call site dup receiver load self
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	arg0
WITHOUT_CLASSIFICATION	arg0
WITHOUT_CLASSIFICATION	arg1
WITHOUT_CLASSIFICATION	args
WITHOUT_CLASSIFICATION	get call site and thread context
WITHOUT_CLASSIFICATION	get call site and thread context
WITHOUT_CLASSIFICATION	evaluate and save receiver and args
WITHOUT_CLASSIFICATION	evaluate and save receiver and args
WITHOUT_CLASSIFICATION	invoke
WITHOUT_CLASSIFICATION	invoke
WITHOUT_CLASSIFICATION	check if it's true, ending if so
WITHOUT_CLASSIFICATION	not true, eval value and assign
WITHOUT_CLASSIFICATION	not true, eval value and assign
WITHOUT_CLASSIFICATION	thread context, receiver and original args
WITHOUT_CLASSIFICATION	thread context, receiver and original args
WITHOUT_CLASSIFICATION	eval value for assignment
WITHOUT_CLASSIFICATION	call site
WITHOUT_CLASSIFICATION	call site
WITHOUT_CLASSIFICATION	depending on size of original args, call appropriate utility method
WITHOUT_CLASSIFICATION	check if it's true, ending if not
WITHOUT_CLASSIFICATION	eval value and save it
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	depending on size of original args, call appropriate utility method
WITHOUT_CLASSIFICATION	receiver, args, result, value
WITHOUT_CLASSIFICATION	[adapter, tc]
WITHOUT_CLASSIFICATION	[adapter, tc]
WITHOUT_CLASSIFICATION	[adapter, tc]
WITHOUT_CLASSIFICATION	super uses current block if none given
WITHOUT_CLASSIFICATION	args
WITHOUT_CLASSIFICATION	block
WITHOUT_CLASSIFICATION	block
WITHOUT_CLASSIFICATION	no args, no block
WITHOUT_CLASSIFICATION	no args, with block
WITHOUT_CLASSIFICATION	with args, no block
WITHOUT_CLASSIFICATION	with args, with block
WITHOUT_CLASSIFICATION	adapter, tc, recv, args{0,1}, block{0,1}]
WITHOUT_CLASSIFICATION	pop extra attr value
WITHOUT_CLASSIFICATION	pop extra attr value
WITHOUT_CLASSIFICATION	arg and receiver already present on the stack
WITHOUT_CLASSIFICATION	arg
WITHOUT_CLASSIFICATION	arg
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	[adapter, tc]
WITHOUT_CLASSIFICATION	args
WITHOUT_CLASSIFICATION	block
WITHOUT_CLASSIFICATION	no args, no block
WITHOUT_CLASSIFICATION	no args, with block
WITHOUT_CLASSIFICATION	with args, no block
WITHOUT_CLASSIFICATION	with args, with block
WITHOUT_CLASSIFICATION	arg
WITHOUT_CLASSIFICATION	retrieve scope from scopes array
WITHOUT_CLASSIFICATION	use numbered access method
WITHOUT_CLASSIFICATION	retrieve call site from sites array
WITHOUT_CLASSIFICATION	add name to call site list
WITHOUT_CLASSIFICATION	module is on top of stack
WITHOUT_CLASSIFICATION	build scope names string
WITHOUT_CLASSIFICATION	build descriptor string
WITHOUT_CLASSIFICATION	build descriptor string
WITHOUT_CLASSIFICATION	generate call sites initialization code
WITHOUT_CLASSIFICATION	generate symbols initialization code
WITHOUT_CLASSIFICATION	generate fixnums initialization code
WITHOUT_CLASSIFICATION	generate constants initialization code
WITHOUT_CLASSIFICATION	generate regexps initialization code
WITHOUT_CLASSIFICATION	generate regexps initialization code
WITHOUT_CLASSIFICATION	generate variable readers initialization code
WITHOUT_CLASSIFICATION	generate variable writers initialization code
WITHOUT_CLASSIFICATION	generate block bodies initialization code
WITHOUT_CLASSIFICATION	generate block bodies initialization code
WITHOUT_CLASSIFICATION	generate bytelists initialization code
WITHOUT_CLASSIFICATION	generate method cache initialization code
WITHOUT_CLASSIFICATION	adapter, tc, recv, args{0,1}, block{0,1}]
WITHOUT_CLASSIFICATION	use IRubyObject[]
WITHOUT_CLASSIFICATION	do nothing, fall back on default compiler below
WITHOUT_CLASSIFICATION	if more than 4 locals, get the locals array too
WITHOUT_CLASSIFICATION	No point in updating number if last number was same value.
WITHOUT_CLASSIFICATION	load Object under value
WITHOUT_CLASSIFICATION	put under object array already present
WITHOUT_CLASSIFICATION	if element count is less than 6, use helper methods
WITHOUT_CLASSIFICATION	This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements
WITHOUT_CLASSIFICATION	if we have a specific-arity helper to construct an array for us, use that
WITHOUT_CLASSIFICATION	if we have a specific-arity helper to construct an array for us, use that
WITHOUT_CLASSIFICATION	brute force construction inline
WITHOUT_CLASSIFICATION	brute force construction inline
WITHOUT_CLASSIFICATION	use specific-arity for as much as possible
WITHOUT_CLASSIFICATION	call isTrue on the result
WITHOUT_CLASSIFICATION	call isTrue on the result
WITHOUT_CLASSIFICATION	call isTrue on the result
WITHOUT_CLASSIFICATION	EQ == 0 (i.e. false)
WITHOUT_CLASSIFICATION	dup it since we need to return appropriately if it's false
WITHOUT_CLASSIFICATION	dup it since we need to return appropriately if it's false
WITHOUT_CLASSIFICATION	clear body or next result after each successful loop
WITHOUT_CLASSIFICATION	check the condition
WITHOUT_CLASSIFICATION	NE == nonzero (i.e. true)
WITHOUT_CLASSIFICATION	skip catch block
WITHOUT_CLASSIFICATION	catch logic for flow-control: next, break
WITHOUT_CLASSIFICATION	next jump
WITHOUT_CLASSIFICATION	exceptionNext target is for a next that doesn't push a new value, like this one
WITHOUT_CLASSIFICATION	grab nil for local variables
WITHOUT_CLASSIFICATION	grab nil for local variables
WITHOUT_CLASSIFICATION	EQ == 0 (i.e. false)
WITHOUT_CLASSIFICATION	clear body or next result after each successful loop
WITHOUT_CLASSIFICATION	EQ == 0 (i.e. false) pop the extra result and replace with the send part of the AND
WITHOUT_CLASSIFICATION	check the condition
WITHOUT_CLASSIFICATION	NE == nonzero (i.e. true)
WITHOUT_CLASSIFICATION	synthetic methods always have zero arg parameters
WITHOUT_CLASSIFICATION	break jump
WITHOUT_CLASSIFICATION	Done with closure compilation
WITHOUT_CLASSIFICATION	[reg]
WITHOUT_CLASSIFICATION	for regular expressions with the /o flag
WITHOUT_CLASSIFICATION	inside a loop, jump to body
WITHOUT_CLASSIFICATION	inside a loop, jump to conditional
WITHOUT_CLASSIFICATION	synthetic methods always have zero arg parameters
WITHOUT_CLASSIFICATION	store previous exception for restoration if we rescue something
WITHOUT_CLASSIFICATION	store previous exception for restoration if we rescue something
WITHOUT_CLASSIFICATION	if more than 4 vars, get values array too
WITHOUT_CLASSIFICATION	retry handling in the rescue block
WITHOUT_CLASSIFICATION	any exceptions raised must continue to be raised, skipping $! restoration
WITHOUT_CLASSIFICATION	and remaining jump exceptions should restore $!
WITHOUT_CLASSIFICATION	restore the original exception
WITHOUT_CLASSIFICATION	Handle Flow exceptions, just propagating them
WITHOUT_CLASSIFICATION	rethrow to outer flow catcher
WITHOUT_CLASSIFICATION	Handle Ruby exceptions (RaiseException)
WITHOUT_CLASSIFICATION	inside a loop, break out of it go to end of loop, leaving break value on stack
WITHOUT_CLASSIFICATION	false zero
WITHOUT_CLASSIFICATION	load all arguments straight through
WITHOUT_CLASSIFICATION	and remaining jump exceptions should restore $!
WITHOUT_CLASSIFICATION	restore the original exception
WITHOUT_CLASSIFICATION	retry handling in the rescue blocks
WITHOUT_CLASSIFICATION	push false
WITHOUT_CLASSIFICATION	method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));
WITHOUT_CLASSIFICATION	method.ifnonnull(trueLabel);
WITHOUT_CLASSIFICATION	EQ == 0 (i.e. false) [C]
WITHOUT_CLASSIFICATION	[C, C] [C, C, String] [C, null|C]
WITHOUT_CLASSIFICATION	[C]
WITHOUT_CLASSIFICATION	push true
WITHOUT_CLASSIFICATION	EQ != 0 (i.e. true)
WITHOUT_CLASSIFICATION	[?, ?] [?, boolean]
WITHOUT_CLASSIFICATION	[RubyModule] [RubyModule, String]
WITHOUT_CLASSIFICATION	[boolean]
WITHOUT_CLASSIFICATION	no receiver for singleton class
WITHOUT_CLASSIFICATION	but there's a superclass passed in, use it
WITHOUT_CLASSIFICATION	we re-set self to the class, but store the old self in a temporary local variable this is to prevent it GCing in case the singleton is short-lived
WITHOUT_CLASSIFICATION	set self to the class
WITHOUT_CLASSIFICATION	CLASS BODY
WITHOUT_CLASSIFICATION	static scope
WITHOUT_CLASSIFICATION	Here starts the logic for the class definition
WITHOUT_CLASSIFICATION	new instance to invoke run against
WITHOUT_CLASSIFICATION	CLASS BODY
WITHOUT_CLASSIFICATION	static scope
WITHOUT_CLASSIFICATION	Here starts the logic for the class definition
WITHOUT_CLASSIFICATION	finally with exception
WITHOUT_CLASSIFICATION	prepare to call class definition method
WITHOUT_CLASSIFICATION	otherwise, there's a receiver, so we pass that in directly for the sclass logic
WITHOUT_CLASSIFICATION	original exception is on stack
WITHOUT_CLASSIFICATION	RaiseException is on stack, get RubyException out
WITHOUT_CLASSIFICATION	updating position for same line; skip
WITHOUT_CLASSIFICATION	callbacks to fill in method body
WITHOUT_CLASSIFICATION	prepare to call "def" utility method to handle def logic
WITHOUT_CLASSIFICATION	script object
WITHOUT_CLASSIFICATION	arities
WITHOUT_CLASSIFICATION	TODO assuming case is a fixnum
WITHOUT_CLASSIFICATION	we have an input case, prepare branching logic
WITHOUT_CLASSIFICATION	we have optimized switch cases, build a lookupswitch
WITHOUT_CLASSIFICATION	checkcast the value; if match, fast path; otherwise proceed to slow logic
WITHOUT_CLASSIFICATION	expression-based tests + bodies
WITHOUT_CLASSIFICATION	normal case, create a new label
WITHOUT_CLASSIFICATION	last conditional case, use defaultCase
WITHOUT_CLASSIFICATION	do nothing; arity check is done before call
WITHOUT_CLASSIFICATION	just confirm minimum args provided
WITHOUT_CLASSIFICATION	just confirm args length == required
WITHOUT_CLASSIFICATION	extract item from array
WITHOUT_CLASSIFICATION	index for the item
WITHOUT_CLASSIFICATION	index for the item
WITHOUT_CLASSIFICATION	prepare labels for opt logic
WITHOUT_CLASSIFICATION	prepare labels for opt logic
WITHOUT_CLASSIFICATION	next, iterate over all optional args, until no more arguments
WITHOUT_CLASSIFICATION	next, iterate over all optional args, until no more arguments
WITHOUT_CLASSIFICATION	now logic for each optional value
WITHOUT_CLASSIFICATION	otherwise no items left available, use the code for default
WITHOUT_CLASSIFICATION	pop extra failed value from first cycle and we're done
WITHOUT_CLASSIFICATION	if there's args left and we want them, assign to rest arg
WITHOUT_CLASSIFICATION	assign remaining elements as an array for rest args (or empty array)
WITHOUT_CLASSIFICATION	block argument assignment, if there's a block arg
WITHOUT_CLASSIFICATION	first, iterate over all pre args
WITHOUT_CLASSIFICATION	then optional args
WITHOUT_CLASSIFICATION	grab nil for local variables
WITHOUT_CLASSIFICATION	now logic for each optional value
WITHOUT_CLASSIFICATION	otherwise no items left available, use the code for default
WITHOUT_CLASSIFICATION	pop extra failed value from first cycle and we're done
WITHOUT_CLASSIFICATION	assign remaining elements as an array for rest args (or empty array)
WITHOUT_CLASSIFICATION	block argument assignment, if there's a block arg
WITHOUT_CLASSIFICATION	if rest args, excluding post args
WITHOUT_CLASSIFICATION	finally, post args
WITHOUT_CLASSIFICATION	not an expression, don't want result; pop it
WITHOUT_CLASSIFICATION	not an expression, don't want result; pop it
WITHOUT_CLASSIFICATION	unwrap scopes to appropriate depth
WITHOUT_CLASSIFICATION	fill in all vars with nil so compiler is happy about future accesses
WITHOUT_CLASSIFICATION	chain to the next segment of this giant method
WITHOUT_CLASSIFICATION	temp locals must start after last real local
WITHOUT_CLASSIFICATION	temp locals must start after last real local
WITHOUT_CLASSIFICATION	declare locals for Java debugging purposes
WITHOUT_CLASSIFICATION	class bodies prepare their own dynamic scope, so let it do that
WITHOUT_CLASSIFICATION	store the local vars in a local variable
WITHOUT_CLASSIFICATION	load args[0] which will be the IRubyObject representing block args
WITHOUT_CLASSIFICATION	return in a class body raises error
WITHOUT_CLASSIFICATION	visit a label to start scoping for local vars in this method
WITHOUT_CLASSIFICATION	return last value from execution
WITHOUT_CLASSIFICATION	end of variable scope
WITHOUT_CLASSIFICATION	method is done, declare all variables
WITHOUT_CLASSIFICATION	load block from [] version of method
WITHOUT_CLASSIFICATION	normal return for method body. return jump for within a begin/rescue/ensure
WITHOUT_CLASSIFICATION	declare locals for Java debugging purposes
WITHOUT_CLASSIFICATION	class bodies prepare their own dynamic scope, so let it do that
WITHOUT_CLASSIFICATION	load args[0] which will be the IRubyObject representing block args
WITHOUT_CLASSIFICATION	we force argParamCount to 1 since we always know we'll have [] args
WITHOUT_CLASSIFICATION	chain to the next segment of this giant method
WITHOUT_CLASSIFICATION	chain to the next segment of this giant method
WITHOUT_CLASSIFICATION	load all arguments straight through
WITHOUT_CLASSIFICATION	load all arguments straight through
WITHOUT_CLASSIFICATION	we append an index to ensure two identical method names will not conflict
WITHOUT_CLASSIFICATION	we append an index to ensure two identical method names will not conflict
WITHOUT_CLASSIFICATION	store the local vars in a local variable if there are any
WITHOUT_CLASSIFICATION	if more than 4 locals, get and populate the locals array too
WITHOUT_CLASSIFICATION	fill local vars with nil, to avoid checking every access.
WITHOUT_CLASSIFICATION	default for starting tempVariableIndex is ok
WITHOUT_CLASSIFICATION	store the local vars in a local variable for preparing the class (using previous scope)
WITHOUT_CLASSIFICATION	store the new local vars in a local variable
WITHOUT_CLASSIFICATION	in 1.8 mode, this will be a RubyArray containing the arguments in 1.9 mode, this will be an IRubyObject[]
WITHOUT_CLASSIFICATION	no variable initialization, because we're reusing parent's scope (flat)
WITHOUT_CLASSIFICATION	for specific-index cases, clean up non-expression values
WITHOUT_CLASSIFICATION	set up a local Ruby variable
WITHOUT_CLASSIFICATION	if that succeeds, the others should as well
WITHOUT_CLASSIFICATION	verify the class
WITHOUT_CLASSIFICATION	create dir if necessary
WITHOUT_CLASSIFICATION	Create the class with the appropriate class name and source file
WITHOUT_CLASSIFICATION	add setPosition impl, which stores filename as constant to speed updates
WITHOUT_CLASSIFICATION	thread context
WITHOUT_CLASSIFICATION	line number
WITHOUT_CLASSIFICATION	invoke __file__ with threadcontext, self, args (null), and block (null)
WITHOUT_CLASSIFICATION	load always uses IRubyObject[], so simple closure offset calculation here
WITHOUT_CLASSIFICATION	return last value from execution
WITHOUT_CLASSIFICATION	method is done, declare all variables
WITHOUT_CLASSIFICATION	in method body with no containing loop, issue jump error load runtime and value, issue jump error
WITHOUT_CLASSIFICATION	block
WITHOUT_CLASSIFICATION	block
WITHOUT_CLASSIFICATION	we force argParamCount to 1 since we always know we'll have [] args
WITHOUT_CLASSIFICATION	chain to the next segment of this giant method
WITHOUT_CLASSIFICATION	load all arguments straight through
WITHOUT_CLASSIFICATION	we append an index to ensure two identical method names will not conflict
WITHOUT_CLASSIFICATION	add Script#run impl, used for running this script with a specified threadcontext and self root method of a script is always in __file__ method
WITHOUT_CLASSIFICATION	add main impl, used for detached or command-line execution of this script with a new runtime root method of a script is always in stub0, method0
WITHOUT_CLASSIFICATION	construct static scope list of names
WITHOUT_CLASSIFICATION	JRUBY-3014: make __FILE__ dynamically determined at load time, but we provide a reasonable default here
WITHOUT_CLASSIFICATION	ignore; we won't use invokedynamic
WITHOUT_CLASSIFICATION	ignore; we won't use invokedynamic
WITHOUT_CLASSIFICATION	lazily create class init only if necessary
WITHOUT_CLASSIFICATION	boxed arg list __file__
WITHOUT_CLASSIFICATION	invoke static __file__
WITHOUT_CLASSIFICATION	exact arg list __file__
WITHOUT_CLASSIFICATION	declare the field
WITHOUT_CLASSIFICATION	declare the field
WITHOUT_CLASSIFICATION	not using a new scope, use saved one for a flat closure
WITHOUT_CLASSIFICATION	normal closure
WITHOUT_CLASSIFICATION	end of scoping for closure's vars
WITHOUT_CLASSIFICATION	we only need full-on redo exception handling if there's logic that might produce it
WITHOUT_CLASSIFICATION	handle redos by restarting the block
WITHOUT_CLASSIFICATION	jump back to the top of the main body of this closure
WITHOUT_CLASSIFICATION	Ruby name
WITHOUT_CLASSIFICATION	Accumulate call arguments
WITHOUT_CLASSIFICATION	Fix FileNameCompletor to work mid-line
WITHOUT_CLASSIFICATION	We need to ensure that the variable names generated here cannot conflict with ruby variable names! Hence the "%" tthat is appended to the beginning!
WITHOUT_CLASSIFICATION	Does this method define code? Default is yes -- which basically leads to pessimistic but safe optimizations But, for library and internal methods, this might be false.
WITHOUT_CLASSIFICATION	Map of constants defined in this scope (not valid for methods!)
WITHOUT_CLASSIFICATION	NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner with outer loops encountered before inner loops, and inner loops finished before outer ones. So, we can keep track of loops in a loop stack which keeps track of loops as they are encountered. This lets us implement next/redo/break/retry easily for the non-closure cases
WITHOUT_CLASSIFICATION	Map keep track of the next available variable index for a particular prefix
WITHOUT_CLASSIFICATION	Control flow graph for this scope
WITHOUT_CLASSIFICATION	_lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;
WITHOUT_CLASSIFICATION	List of modules, classes, and methods defined in this scope!
WITHOUT_CLASSIFICATION	Returns the containing parent scope!
WITHOUT_CLASSIFICATION	Insert nesting level to ensure variable names don't conflict across nested scopes! i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! return new Variable(prefix + _lexicalNestingLevel + "_" + idx);
WITHOUT_CLASSIFICATION	get "self"
WITHOUT_CLASSIFICATION	variable is never read, variable is never live
WITHOUT_CLASSIFICATION	inline script
WITHOUT_CLASSIFICATION	inline script
WITHOUT_CLASSIFICATION	This method is called to build assignments for a multiple-assignment instruction
WITHOUT_CLASSIFICATION	Build the class body!
WITHOUT_CLASSIFICATION	unwrap newline nodes to get their actual type
WITHOUT_CLASSIFICATION	unwrap newline nodes to get their actual type
WITHOUT_CLASSIFICATION	SSS FIXME: Can this ever be null?
WITHOUT_CLASSIFICATION	Run the pass on the passed in scope!
WITHOUT_CLASSIFICATION	done done done done
WITHOUT_CLASSIFICATION	NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable
WITHOUT_CLASSIFICATION	NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable
WITHOUT_CLASSIFICATION	This method is called to build arguments for a block!
WITHOUT_CLASSIFICATION	build first node (and ignore its result) and then second node
WITHOUT_CLASSIFICATION	build first node only and return false
WITHOUT_CLASSIFICATION	Value of the last expression in the block
WITHOUT_CLASSIFICATION	If this is not a closure, the break is equivalent to jumping to the loop end label
WITHOUT_CLASSIFICATION	get the incoming case value
WITHOUT_CLASSIFICATION	the CASE instruction
WITHOUT_CLASSIFICATION	lists to aggregate variables and bodies for whens
WITHOUT_CLASSIFICATION	build each "when"
WITHOUT_CLASSIFICATION	multiple conditions for when
WITHOUT_CLASSIFICATION	build "else" if it exists
WITHOUT_CLASSIFICATION	now emit bodies
WITHOUT_CLASSIFICATION	close it out
WITHOUT_CLASSIFICATION	By default, the container for this class is 's'
WITHOUT_CLASSIFICATION	Do we have a dynamic container?
WITHOUT_CLASSIFICATION	Return a meta object corresponding to the class
WITHOUT_CLASSIFICATION	1. Load the module first (lhs of node) 2. Then load the constant from the module
WITHOUT_CLASSIFICATION	Build IR for args
WITHOUT_CLASSIFICATION	Build IR for body
WITHOUT_CLASSIFICATION	if root of method is rescue, build as a light rescue
WITHOUT_CLASSIFICATION	Instance method
WITHOUT_CLASSIFICATION	Class method
WITHOUT_CLASSIFICATION	Other args begin at index 1
WITHOUT_CLASSIFICATION	Both for fixed arity and variable arity methods
WITHOUT_CLASSIFICATION	Now for the rest
WITHOUT_CLASSIFICATION	Jump to 'l' if this arg is not null. If null, fall through and build the default value!
WITHOUT_CLASSIFICATION	This is not an expression that computes anything
WITHOUT_CLASSIFICATION	Create a new closure context
WITHOUT_CLASSIFICATION	Build args
WITHOUT_CLASSIFICATION	Build closure body and return the result of the closure
WITHOUT_CLASSIFICATION	Assign the closure to the block variable in the parent scope and return it
WITHOUT_CLASSIFICATION	By default, the container for this class is 's'
WITHOUT_CLASSIFICATION	Create a new closure context
WITHOUT_CLASSIFICATION	Build args
WITHOUT_CLASSIFICATION	Assign the closure to the block variable in the parent scope and return it
WITHOUT_CLASSIFICATION	Get the container for this new module
WITHOUT_CLASSIFICATION	Build the new module
WITHOUT_CLASSIFICATION	Build the module body
WITHOUT_CLASSIFICATION	First, build an assignment for a splat, if any, with the rest of the args!
WITHOUT_CLASSIFICATION	rest of the argument array!
WITHOUT_CLASSIFICATION	If a closure, the next is simply a return from the closure! If a regular loop, the next is simply a jump to the end of the iteration
WITHOUT_CLASSIFICATION	get attr
WITHOUT_CLASSIFICATION	call operator
WITHOUT_CLASSIFICATION	set attr
WITHOUT_CLASSIFICATION	Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> x = -- build(x) should return a variable! -- f = is_true(x) beq(f, false, L) x = -- build(y) -- L:
WITHOUT_CLASSIFICATION	This does the assignment!
WITHOUT_CLASSIFICATION	This does the assignment!
WITHOUT_CLASSIFICATION	if v1 is defined and true, we are done!
WITHOUT_CLASSIFICATION	build first node only and return true
WITHOUT_CLASSIFICATION	build first node as non-expr and build second node
WITHOUT_CLASSIFICATION	Top-level script!
WITHOUT_CLASSIFICATION	we won't enter the loop -- just build the condition node
WITHOUT_CLASSIFICATION	----------- Private Interface ------------
WITHOUT_CLASSIFICATION	What handles warnings
WITHOUT_CLASSIFICATION	Tries to load at compile-time the constant referred to by 'constRef'. This might be possible if the constant is defined and is not a forward reference to a value that will be defined later in the class.
WITHOUT_CLASSIFICATION	For closures, a redo is a jump to the beginning of the closure For non-closures, a redo is a jump to the beginning of the loop
WITHOUT_CLASSIFICATION	The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit
WITHOUT_CLASSIFICATION	Dummy top-level method for the class
WITHOUT_CLASSIFICATION	Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit
WITHOUT_CLASSIFICATION	------ Define the operations below ----
WITHOUT_CLASSIFICATION	value copy and type conversion operations
WITHOUT_CLASSIFICATION	alu operations
WITHOUT_CLASSIFICATION	method handle, arg receive, return value, and call instructions
WITHOUT_CLASSIFICATION	closure instructions
WITHOUT_CLASSIFICATION	eval instructions
WITHOUT_CLASSIFICATION	def instructions
WITHOUT_CLASSIFICATION	exception instructions
WITHOUT_CLASSIFICATION	Loads
WITHOUT_CLASSIFICATION	Stores
WITHOUT_CLASSIFICATION	jump and branch operations
WITHOUT_CLASSIFICATION	others
WITHOUT_CLASSIFICATION	a case/when branch
WITHOUT_CLASSIFICATION	optimization guards
WITHOUT_CLASSIFICATION	By default, call instructions cannot be deleted even if their results aren't used by anyone unless we know more about what the call is, what it does, etc. Similarly for evals, stores, returns.
WITHOUT_CLASSIFICATION	Returns the containing parent scope -- can be a dynamic value (hence Operand)!
WITHOUT_CLASSIFICATION	scripts
WITHOUT_CLASSIFICATION	scripts and modules
WITHOUT_CLASSIFICATION	scripts, classes, and modules
WITHOUT_CLASSIFICATION	methods and closures
WITHOUT_CLASSIFICATION	create a new variable using the prefix
WITHOUT_CLASSIFICATION	create a new temporary variable
WITHOUT_CLASSIFICATION	Get a new label using a generic prefix
WITHOUT_CLASSIFICATION	Build the CFG for this scope -- supported only by methods & closures
WITHOUT_CLASSIFICATION	Get the control flow graph for this scope -- only valid for methods & closures
WITHOUT_CLASSIFICATION	While processing loops, this returns the loop that we are processing.
WITHOUT_CLASSIFICATION	Record the loop we are beginning to process
WITHOUT_CLASSIFICATION	Indicate that we are done processing the loop
WITHOUT_CLASSIFICATION	Run the passed in compiler pass on this scope!
WITHOUT_CLASSIFICATION	Should we run this pass on the current scope before running it on nested scopes?
WITHOUT_CLASSIFICATION	Readline
WITHOUT_CLASSIFICATION	If the cfg of the method is around, print the CFG!
WITHOUT_CLASSIFICATION	Optimize some core class method calls for constant values
WITHOUT_CLASSIFICATION	If 'r' is not a constant, it could actually be a compound value! Look in our value map to see if we have a simplified value for the receiver.
WITHOUT_CLASSIFICATION	Check if we can optimize this call based on the receiving method and receiver type Use the simplified receiver!
WITHOUT_CLASSIFICATION	If we got a simplified value, mark the call dead and insert a copy in its place!
WITHOUT_CLASSIFICATION	If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!
WITHOUT_CLASSIFICATION	----------- Public abstract methods ----------
WITHOUT_CLASSIFICATION	----------- Public methods with a default implementation ----------
WITHOUT_CLASSIFICATION	Compute meet over all "sources" and compute "destination" basic blocks that should then be processed. sources & targets depends on direction of the data flow problem
WITHOUT_CLASSIFICATION	If the solution has changed, add "dsts" to the work list. No duplicates please which is why we have bbset.
WITHOUT_CLASSIFICATION	--------- Protected fields/methods below ---------
WITHOUT_CLASSIFICATION	Dataflow problem with which this node is associated CFG node for which this node contains info.
WITHOUT_CLASSIFICATION	-------------- Public fields and methods below ----------------
WITHOUT_CLASSIFICATION	------- Abstract methods without a default implementation -------
WITHOUT_CLASSIFICATION	------- Default implementation methods below -------
WITHOUT_CLASSIFICATION	Compute Meet Over All Paths solution for this dataflow problem on the input CFG. This implements a standard worklist algorithm.
WITHOUT_CLASSIFICATION	Individual analyses should override this
WITHOUT_CLASSIFICATION	Individual analyses should override this
WITHOUT_CLASSIFICATION	-------------- Packaged/protected fields and methods below ----------------
WITHOUT_CLASSIFICATION	We want unique ids for dataflow variables
WITHOUT_CLASSIFICATION	-------------- Protected fields and methods below ----------------
WITHOUT_CLASSIFICATION	-------------- Private fields and methods below ----------------
WITHOUT_CLASSIFICATION	Initialize all flow graph nodes
WITHOUT_CLASSIFICATION	Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses
WITHOUT_CLASSIFICATION	PUBLIC INTERFACE
WITHOUT_CLASSIFICATION	Unique ID assigned to this variable
WITHOUT_CLASSIFICATION	start out with a default RubyObject allocator
WITHOUT_CLASSIFICATION	switch to an allocator based on a default constructor
WITHOUT_CLASSIFICATION	----------- Public Interface ------------
WITHOUT_CLASSIFICATION	class or module
WITHOUT_CLASSIFICATION	OUT = UNION(IN(succs))
WITHOUT_CLASSIFICATION	Traverse the instructions in this basic block in reverse order!
WITHOUT_CLASSIFICATION	v is defined => It is no longer live before 'i'
WITHOUT_CLASSIFICATION	IN is the same!
WITHOUT_CLASSIFICATION	IN changed!
WITHOUT_CLASSIFICATION	---------- Protected / package fields, methods ---------
WITHOUT_CLASSIFICATION	If 'v' is not live at the instruction site, and it has no side effects, mark it dead!
WITHOUT_CLASSIFICATION	Do not mark this instruction's operands live if the instruction itself is dead!
WITHOUT_CLASSIFICATION	---------- Private fields, methods ---------
WITHOUT_CLASSIFICATION	Variables live at entry of this node Variables live at exit of node Temporary set of live variables Size of the "_in" and "_out" bit sets
WITHOUT_CLASSIFICATION	Used during optimization passes to propagate type and other information
WITHOUT_CLASSIFICATION	Does this instruction have side effects as a result of its operation This information is used in optimization phases to impact dead code elimination and other optimization passes
WITHOUT_CLASSIFICATION	--------- "Abstract"/"please-override" methods ---------
WITHOUT_CLASSIFICATION	Array of all operands for this instruction
WITHOUT_CLASSIFICATION	List of all variables used by all operands of this instruction
WITHOUT_CLASSIFICATION	This method takes as input a map of operands to their values, and outputs If the value map provides a value for any of the instruction's operands this method is expected to replace the original operands with the simplified values. It is not required that it do so -- code correctness is not compromised by failure to simplify
WITHOUT_CLASSIFICATION	By default, no simplifications!
WITHOUT_CLASSIFICATION	Can this call lead to ruby code getting modified? If we don't know what method we are calling, we assume it can (pessimistic, but safe!) If we do know the target method, we ask the method itself whether it modifies ruby code
WITHOUT_CLASSIFICATION	By default, return instructions cannot be deleted
WITHOUT_CLASSIFICATION	If true, returns the rest of the array starting at the index
WITHOUT_CLASSIFICATION	---------- These methods below are used during compile-time optimizations -------
WITHOUT_CLASSIFICATION	Map of label & basic blocks with that label
WITHOUT_CLASSIFICATION	---------- These methods below are used during compile-time optimizations -------
WITHOUT_CLASSIFICATION	You can only value-replace atomic values
WITHOUT_CLASSIFICATION	If divisor is zero, don't simplify!
WITHOUT_CLASSIFICATION	If divisor is zero, don't simplify!
WITHOUT_CLASSIFICATION	If divisor is zero, don't simplify!
WITHOUT_CLASSIFICATION	For simplification, get the target value, even if compound
WITHOUT_CLASSIFICATION	For simplification, get the target value, even if compound
WITHOUT_CLASSIFICATION	The operand that this attribute targets DEFERRED AttributeValue _val; Attribute value
WITHOUT_CLASSIFICATION	Arrays, Ranges, etc. are compound values Variables, fixnums, floats, etc. are "atomic" values
WITHOUT_CLASSIFICATION	Get the target class of this operand, if we know it!
WITHOUT_CLASSIFICATION	The following constants capture pre-known static call sites -- used to implement ruby internals
WITHOUT_CLASSIFICATION	Nothing to do by default
WITHOUT_CLASSIFICATION	Map of label & basic blocks which are waiting for a bb with that label
WITHOUT_CLASSIFICATION	Init before building basic blocks below!
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	Scope (method/closure) to which this cfg belongs Entry BB -- dummy Exit BB -- dummy The actual graph Next available basic block id
WITHOUT_CLASSIFICATION	Jump instruction bbs dont add an edge to the succeeding bb by default
WITHOUT_CLASSIFICATION	Add forward ref. edges
WITHOUT_CLASSIFICATION	currBB cannot be null!
WITHOUT_CLASSIFICATION	Add a forward reference from tgt -> currBB
WITHOUT_CLASSIFICATION	root-level logic
WITHOUT_CLASSIFICATION	root-level methods
WITHOUT_CLASSIFICATION	root-level classes
WITHOUT_CLASSIFICATION	case 4: signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); break; case 5: signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); break;
WITHOUT_CLASSIFICATION	load receiver
WITHOUT_CLASSIFICATION	load receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	load arguments
WITHOUT_CLASSIFICATION	load arguments
WITHOUT_CLASSIFICATION	case 4: case 5:
WITHOUT_CLASSIFICATION	Object[] args
WITHOUT_CLASSIFICATION	load handle
WITHOUT_CLASSIFICATION	args array
WITHOUT_CLASSIFICATION	i'th argument
WITHOUT_CLASSIFICATION	invoke specific arity version
WITHOUT_CLASSIFICATION	Object arg0
WITHOUT_CLASSIFICATION	useful for code completion inside the IRB
WITHOUT_CLASSIFICATION	No editing before startPos
WITHOUT_CLASSIFICATION	no silly ticks!
WITHOUT_CLASSIFICATION	no candidates? Fail.
WITHOUT_CLASSIFICATION	at end
WITHOUT_CLASSIFICATION	undo check
WITHOUT_CLASSIFICATION	Explicit reference to these vars as symbols...
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	\t\n\"\\'`@$><=;|&{(
WITHOUT_CLASSIFICATION	Assign the values.
WITHOUT_CLASSIFICATION	no check for ''
WITHOUT_CLASSIFICATION	no check for ''
WITHOUT_CLASSIFICATION	Binding provided for scope, use it
WITHOUT_CLASSIFICATION	this is ensured by the callers
WITHOUT_CLASSIFICATION	no binding, just eval in "current" frame (caller's frame)
WITHOUT_CLASSIFICATION	restore position
WITHOUT_CLASSIFICATION	Something like cvar_cbase() from eval.c, factored out for the benefit of all the classvar-related node evaluations
WITHOUT_CLASSIFICATION	Used by the compiler to simplify arg processing
WITHOUT_CLASSIFICATION	JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace
WITHOUT_CLASSIFICATION	MRI does similar thing on MacOS X with 'EditLine wrapper'.
WITHOUT_CLASSIFICATION	We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)
WITHOUT_CLASSIFICATION	JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)
WITHOUT_CLASSIFICATION	not overridden, let's go
WITHOUT_CLASSIFICATION	Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8()
WITHOUT_CLASSIFICATION	FIXME: JRUBY-3604
WITHOUT_CLASSIFICATION	Complete using a Proc object
WITHOUT_CLASSIFICATION	clear basename so it's anonymous when raising
WITHOUT_CLASSIFICATION	These are not really used by timeout, but exposed for compatibility
WITHOUT_CLASSIFICATION	Timeout module methods
WITHOUT_CLASSIFICATION	Toplevel defines
WITHOUT_CLASSIFICATION	No seconds, just yield
WITHOUT_CLASSIFICATION	No timeout in critical section
WITHOUT_CLASSIFICATION	if it's the exception we're expecting
WITHOUT_CLASSIFICATION	and we were given a specific exception
WITHOUT_CLASSIFICATION	otherwise, rethrow
WITHOUT_CLASSIFICATION	Remove the Executor task now, to avoid cancelled tasks accumulating until an Executor thread can schedule and remove them
WITHOUT_CLASSIFICATION	If the task was scheduled, wait for it to finish before polling for the exception it would have thrown.
WITHOUT_CLASSIFICATION	NetProtocolBufferedIO
WITHOUT_CLASSIFICATION	When a length is given, read_string acts like get_bytes
WITHOUT_CLASSIFICATION	Replace memory object with one that throws an exception on any access
WITHOUT_CLASSIFICATION	ARRAY and STRUCT are only used internally
WITHOUT_CLASSIFICATION	If no release method is defined, then memory leaks will result.
WITHOUT_CLASSIFICATION	This variant of newStruct is called from StructLayoutBuilder
WITHOUT_CLASSIFICATION	This also handles unsigned int -> negative signed int conversion
WITHOUT_CLASSIFICATION	Windows is LLP64
WITHOUT_CLASSIFICATION	Older JDK on linux map 'c' to 'libc.so' which doesn't work
WITHOUT_CLASSIFICATION	Ensure room for terminating zero byte
WITHOUT_CLASSIFICATION	$blah
WITHOUT_CLASSIFICATION	Replace memory object with one that throws an exception on any access
WITHOUT_CLASSIFICATION	A specific version was requested - use as is for search
WITHOUT_CLASSIFICATION	Ensure room for terminating zero byte
WITHOUT_CLASSIFICATION	Keep a reference to the temporary memory in the cache so it does not get freed by the GC until the struct is freed
WITHOUT_CLASSIFICATION	Add Pointer::NULL as a constant
WITHOUT_CLASSIFICATION	Create the ordered list of field names from the map
WITHOUT_CLASSIFICATION	Assemble a [ :name, offset ] array
WITHOUT_CLASSIFICATION	case FLOAT:
WITHOUT_CLASSIFICATION	keep a reference to avoid the memory being freed
WITHOUT_CLASSIFICATION	keep a reference to avoid the memory being freed
WITHOUT_CLASSIFICATION	No auto cleanup needed
WITHOUT_CLASSIFICATION	Wire up Function#call(args) to use the super-fast native invokers
WITHOUT_CLASSIFICATION	Get the convention from the options hash
WITHOUT_CLASSIFICATION	Get the convention from the options hash
WITHOUT_CLASSIFICATION	If there is exactly _one_ callback argument to the function, then a block can be given and automatically subsituted for the callback parameter.
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	AF_INET
WITHOUT_CLASSIFICATION	AF_INET
WITHOUT_CLASSIFICATION	RubyUNIXServer
WITHOUT_CLASSIFICATION	line 321
WITHOUT_CLASSIFICATION	Set up for potentially fast-int operations
WITHOUT_CLASSIFICATION	Hook up the MemoryPointer class if its not already there
WITHOUT_CLASSIFICATION	This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and (2) Socket.getChannel() seems to return null in some cases
WITHOUT_CLASSIFICATION	no UNIXSockets on Windows
WITHOUT_CLASSIFICATION	Sockaddr_un has different structure on different platforms. See JRUBY-2213 for more details.
WITHOUT_CLASSIFICATION	There is something valid in the sun_path component
WITHOUT_CLASSIFICATION	RubyIPSocket
WITHOUT_CLASSIFICATION	host is nil or the empty string, bind to INADDR_ANY
WITHOUT_CLASSIFICATION	host and port given
WITHOUT_CLASSIFICATION	RubyUDPSocket
WITHOUT_CLASSIFICATION	By default we always reverse lookup unless do_not_reverse_lookup set.
WITHOUT_CLASSIFICATION	make sure descriptor is registered
WITHOUT_CLASSIFICATION	continue with normal initialization
WITHOUT_CLASSIFICATION	recv returns nil on EOF
WITHOUT_CLASSIFICATION	Can't support the rest with Java
WITHOUT_CLASSIFICATION	RubyBasicSocket
WITHOUT_CLASSIFICATION	we don't have to define any that we don't support; see socket.c
WITHOUT_CLASSIFICATION	mandatory constants we haven't implemented
WITHOUT_CLASSIFICATION	constants webrick crashes without
WITHOUT_CLASSIFICATION	More constants needed by specs
WITHOUT_CLASSIFICATION	normal file descriptor..try to work with it
WITHOUT_CLASSIFICATION	AF_INET
WITHOUT_CLASSIFICATION	255.255.255.255
WITHOUT_CLASSIFICATION	0.0.0.0
WITHOUT_CLASSIFICATION	def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)
WITHOUT_CLASSIFICATION	line 323
WITHOUT_CLASSIFICATION	can't set TC classloader
WITHOUT_CLASSIFICATION	can't set TC classloader
WITHOUT_CLASSIFICATION	ok, it's a socket...set values accordingly just using AF_INET since we can't tell from SocketChannel...
WITHOUT_CLASSIFICATION	datagram, set accordingly again, AF_INET
WITHOUT_CLASSIFICATION	IRubyObject family = args[2];
WITHOUT_CLASSIFICATION	When Socket::AI_PASSIVE and host is nil, return 'any' address.
WITHOUT_CLASSIFICATION	The value of 1 is for Socket::AI_PASSIVE.
WITHOUT_CLASSIFICATION	RubySocket
WITHOUT_CLASSIFICATION	numeric host, use it for port
WITHOUT_CLASSIFICATION	e.printStackTrace();
WITHOUT_CLASSIFICATION	we were woken up without being selected...poll for thread events and go back to sleep
WITHOUT_CLASSIFICATION	otherwise one key has been selected (ours) so we get the channel and hand it off
WITHOUT_CLASSIFICATION	no connection immediately accepted, let them try again
WITHOUT_CLASSIFICATION	do nothing, just exit
WITHOUT_CLASSIFICATION	nativeThread.setPriority(priority);
WITHOUT_CLASSIFICATION	set thread context JRuby classloader here, for Ruby-owned thread
WITHOUT_CLASSIFICATION	uber-ThreadKill catcher, since it should always just mean "be dead"
WITHOUT_CLASSIFICATION	Call the thread's code
WITHOUT_CLASSIFICATION	Someone called exit!, so we need to kill the main thread
WITHOUT_CLASSIFICATION	restore context classloader, in case we're using a thread pool
WITHOUT_CLASSIFICATION	be dead
WITHOUT_CLASSIFICATION	loop until a context is available, to clean up softrefs that might have been collected
WITHOUT_CLASSIFICATION	all threads in ruby thread group plus main thread
WITHOUT_CLASSIFICATION	thread is not alive, skip it
WITHOUT_CLASSIFICATION	future is done or cancelled, skip it
WITHOUT_CLASSIFICATION	first, check if the sender has unreceived mail
WITHOUT_CLASSIFICATION	then deliver mail to the target
WITHOUT_CLASSIFICATION	UndefinedMethod should be immutable
WITHOUT_CLASSIFICATION	Define a second version that doesn't take a block, so we have unique code paths for both cases.
WITHOUT_CLASSIFICATION	invoke pre method stuff
WITHOUT_CLASSIFICATION	main body
WITHOUT_CLASSIFICATION	return jump handling
WITHOUT_CLASSIFICATION	finally
WITHOUT_CLASSIFICATION	return result if we're still good
WITHOUT_CLASSIFICATION	redo jump handling
WITHOUT_CLASSIFICATION	clear the redo
WITHOUT_CLASSIFICATION	get runtime, create jump error, and throw it
WITHOUT_CLASSIFICATION	throw redo error if we're still good
WITHOUT_CLASSIFICATION	finally handling for abnormal exit
WITHOUT_CLASSIFICATION	call post method stuff (exception raised)
WITHOUT_CLASSIFICATION	No required specified, check actual number of required args
WITHOUT_CLASSIFICATION	actual required is less than 3, so we use specific arity
WITHOUT_CLASSIFICATION	actual required is greater than 3, raise error (we don't support actual required > 3)
WITHOUT_CLASSIFICATION	simple path, no multimethod
WITHOUT_CLASSIFICATION	in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)
WITHOUT_CLASSIFICATION	in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)
WITHOUT_CLASSIFICATION	normal all-rest method
WITHOUT_CLASSIFICATION	for zero, one, two, three arities, JavaMethod.JavaMethod.call(...IRubyObject[] args...) will check
WITHOUT_CLASSIFICATION	promise to implement zero to N
WITHOUT_CLASSIFICATION	return
WITHOUT_CLASSIFICATION	just confirm minimum args provided
WITHOUT_CLASSIFICATION	just confirm args length == required
WITHOUT_CLASSIFICATION	confirm minimum args provided
WITHOUT_CLASSIFICATION	confirm maximum not greater than optional
WITHOUT_CLASSIFICATION	Raise an error if arity does not match requirements
WITHOUT_CLASSIFICATION	tc
WITHOUT_CLASSIFICATION	self name
WITHOUT_CLASSIFICATION	no args
WITHOUT_CLASSIFICATION	variable args with block
WITHOUT_CLASSIFICATION	variable args no block, load null block
WITHOUT_CLASSIFICATION	zero args, no block; load NULL_BLOCK
WITHOUT_CLASSIFICATION	one arg with block
WITHOUT_CLASSIFICATION	one arg, no block; load NULL_BLOCK
WITHOUT_CLASSIFICATION	two args with block
WITHOUT_CLASSIFICATION	two args, no block; load NULL_BLOCK
WITHOUT_CLASSIFICATION	three args with block
WITHOUT_CLASSIFICATION	three args, no block; load NULL_BLOCK
WITHOUT_CLASSIFICATION	load block if it accepts block
WITHOUT_CLASSIFICATION	all other arg cases with block
WITHOUT_CLASSIFICATION	all other arg cases without block
WITHOUT_CLASSIFICATION	one arg, no block; do nothing
WITHOUT_CLASSIFICATION	two args, no block; do nothing
WITHOUT_CLASSIFICATION	three args, no block; do nothing
WITHOUT_CLASSIFICATION	load target for invocations
WITHOUT_CLASSIFICATION	load receiver as original type for virtual invocation
WITHOUT_CLASSIFICATION	static invocation
WITHOUT_CLASSIFICATION	virtual invocation
WITHOUT_CLASSIFICATION	void return type, so we need to load a nil for returning below
WITHOUT_CLASSIFICATION	normal finally and exit
WITHOUT_CLASSIFICATION	promise to implement one to N
WITHOUT_CLASSIFICATION	call post method stuff (exception raised)
WITHOUT_CLASSIFICATION	these are only needed if we have a non-noop call config
WITHOUT_CLASSIFICATION	method itself ThreadContext invoked name
WITHOUT_CLASSIFICATION	method itself ThreadContext invoked name
WITHOUT_CLASSIFICATION	singleton classes don't get their own visibility domain
WITHOUT_CLASSIFICATION	For visibility we need real meta class and not anonymous one from class << self
WITHOUT_CLASSIFICATION	SimpleInvocationMethod
WITHOUT_CLASSIFICATION	never reached
WITHOUT_CLASSIFICATION	promise to implement N with block
WITHOUT_CLASSIFICATION	promise to implement zero to N with block
WITHOUT_CLASSIFICATION	promise to implement one to N with block
WITHOUT_CLASSIFICATION	promise to implement two to N with block
WITHOUT_CLASSIFICATION	promise to implement zero to three with block
WITHOUT_CLASSIFICATION	promise to implement one to three with block
WITHOUT_CLASSIFICATION	promise to implement two to three with block
WITHOUT_CLASSIFICATION	promise to implement three with block
WITHOUT_CLASSIFICATION	promise to implement N
WITHOUT_CLASSIFICATION	DumpingInvocationMethodFactory
WITHOUT_CLASSIFICATION	We promote our box to being its own box since we're changing visibilities, and need it to be reflected on this method object independent of any other sharing the box.
WITHOUT_CLASSIFICATION	Normally we could leave these to fall back on the superclass, but since it dispatches through the [] version below, which may dispatch through the []+block version, we can save it a couple hops by overriding these here.
WITHOUT_CLASSIFICATION	promise to implement two to N
WITHOUT_CLASSIFICATION	promise to implement three to N
WITHOUT_CLASSIFICATION	promise to implement zero to three
WITHOUT_CLASSIFICATION	promise to implement one to three
WITHOUT_CLASSIFICATION	promise to implement two to three
WITHOUT_CLASSIFICATION	promise to implement three
WITHOUT_CLASSIFICATION	all other arities use "n" dispatch path
WITHOUT_CLASSIFICATION	load up object and add a few useful methods
WITHOUT_CLASSIFICATION	open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel
WITHOUT_CLASSIFICATION	construct the class, implementing all supertypes
WITHOUT_CLASSIFICATION	fields needed for dispatch and such
WITHOUT_CLASSIFICATION	create constructor
WITHOUT_CLASSIFICATION	wrap self and store the wrapper
WITHOUT_CLASSIFICATION	end constructor
WITHOUT_CLASSIFICATION	start setup method
WITHOUT_CLASSIFICATION	set RubyClass
WITHOUT_CLASSIFICATION	set Ruby
WITHOUT_CLASSIFICATION	all methods dispatch to the simple version by default, which is method_missing normally
WITHOUT_CLASSIFICATION	try specific name first, falling back on simple name
WITHOUT_CLASSIFICATION	get current context
WITHOUT_CLASSIFICATION	load self, class, and name
WITHOUT_CLASSIFICATION	construct the class, implementing all supertypes
WITHOUT_CLASSIFICATION	fields needed for dispatch and such
WITHOUT_CLASSIFICATION	create constructor
WITHOUT_CLASSIFICATION	end constructor
WITHOUT_CLASSIFICATION	for each simple method name, implement the complex methods, calling the simple version
WITHOUT_CLASSIFICATION	load arguments into IRubyObject[] for dispatch
WITHOUT_CLASSIFICATION	convert to IRubyObject
WITHOUT_CLASSIFICATION	load null block
WITHOUT_CLASSIFICATION	invoke method
WITHOUT_CLASSIFICATION	if we expect a return value, unwrap it
WITHOUT_CLASSIFICATION	end setup method
WITHOUT_CLASSIFICATION	end class
WITHOUT_CLASSIFICATION	create static init, for a monitor object
WITHOUT_CLASSIFICATION	store the wrapper
WITHOUT_CLASSIFICATION	prepare temp locals
WITHOUT_CLASSIFICATION	Try to look up field for simple name get field; if nonnull, go straight to dispatch
WITHOUT_CLASSIFICATION	field is null, lock class and try to populate
WITHOUT_CLASSIFICATION	try/finally block to ensure unlock
WITHOUT_CLASSIFICATION	store it
WITHOUT_CLASSIFICATION	end of try block
WITHOUT_CLASSIFICATION	finally block to release monitor
WITHOUT_CLASSIFICATION	exception handling for monitor release
WITHOUT_CLASSIFICATION	re-get, re-check method; if not null now, go to dispatch
WITHOUT_CLASSIFICATION	load self, class, and name
WITHOUT_CLASSIFICATION	load arguments into IRubyObject[] for dispatch
WITHOUT_CLASSIFICATION	convert to IRubyObject
WITHOUT_CLASSIFICATION	invoke method
WITHOUT_CLASSIFICATION	if we expect a return value, unwrap it
WITHOUT_CLASSIFICATION	end setup method
WITHOUT_CLASSIFICATION	end class
WITHOUT_CLASSIFICATION	create the class
WITHOUT_CLASSIFICATION	method still not available, call method_missing
WITHOUT_CLASSIFICATION	perform the dispatch
WITHOUT_CLASSIFICATION	try to load the specified name; only if that fails, try to define the class
WITHOUT_CLASSIFICATION	up two slots, for long's two halves
WITHOUT_CLASSIFICATION	up two slots, for long's two halves
WITHOUT_CLASSIFICATION	setup the class
WITHOUT_CLASSIFICATION	now, create a method_added that can replace the DynamicMethod fields as they're redefined
WITHOUT_CLASSIFICATION	do nothing, it's a non-impl method
WITHOUT_CLASSIFICATION	probably a primitive
WITHOUT_CLASSIFICATION	interfaces are handled as modules
WITHOUT_CLASSIFICATION	construct the mirror class and parent classes
WITHOUT_CLASSIFICATION	set the full name
WITHOUT_CLASSIFICATION	include all interfaces
WITHOUT_CLASSIFICATION	if it's an array, only add methods for aref, aset, and length
WITHOUT_CLASSIFICATION	add array construction methods
WITHOUT_CLASSIFICATION	add all public constructors (note: getConstructors only returns public ones)
WITHOUT_CLASSIFICATION	add all instance and static methods
WITHOUT_CLASSIFICATION	proxy is complete, return it
WITHOUT_CLASSIFICATION	too much array creation!
WITHOUT_CLASSIFICATION	only include static methods if specified
WITHOUT_CLASSIFICATION	add a few type-specific special methods
WITHOUT_CLASSIFICATION	add all static variables
WITHOUT_CLASSIFICATION	only public static fields that are valid constants
WITHOUT_CLASSIFICATION	looks like someone's trying to raise a Java exception. Let them.
WITHOUT_CLASSIFICATION	NOTE: The five match methods are arity-split to avoid the cost of boxing arguments when there's already a cached match. Do not condense them into a single method.
WITHOUT_CLASSIFICATION	TODO: This is where we would want to do precision checks to see if it's non-destructive to coerce a given type into the target integral primitive
WITHOUT_CLASSIFICATION	long first because it's what Fixnum claims to be
WITHOUT_CLASSIFICATION	double first because it's what float claims to be
WITHOUT_CLASSIFICATION	TODO: varargs?
WITHOUT_CLASSIFICATION	read-volatile
WITHOUT_CLASSIFICATION	initialize cache of parameter types to method
WITHOUT_CLASSIFICATION	we set all Java methods to optional, since many/most have overloads
WITHOUT_CLASSIFICATION	If we hold a Java object, we need a java_class accessor
WITHOUT_CLASSIFICATION	line 326
WITHOUT_CLASSIFICATION	read-volatile
WITHOUT_CLASSIFICATION	initialize cache of parameter types to method
WITHOUT_CLASSIFICATION	too much array creation!
WITHOUT_CLASSIFICATION	construct new array proxy (ArrayJavaProxy)
WITHOUT_CLASSIFICATION	Get map of all fields we want to define.
WITHOUT_CLASSIFICATION	Look through all mappings to find a match entry for this field
WITHOUT_CLASSIFICATION	Hit a non-java proxy class (included Modules can be a cause of this...skip)
WITHOUT_CLASSIFICATION	We could not find all of them print out first one (we could print them all?)
WITHOUT_CLASSIFICATION	dummy bodies for default impls
WITHOUT_CLASSIFICATION	initialize this if it hasn't been
WITHOUT_CLASSIFICATION	initialize these if they haven't been
WITHOUT_CLASSIFICATION	not allowed for original (non-generated) Java classes note: not allowing for any previously created class right now; this restriction might be loosened later for generated classes
WITHOUT_CLASSIFICATION	setup new, etc unless this is a ConcreteJavaProxy subclass
WITHOUT_CLASSIFICATION	First we make modifications to the class, to adapt it to being both a Ruby class and a proxy for a Java type
WITHOUT_CLASSIFICATION	list of interfaces we implement
WITHOUT_CLASSIFICATION	We capture the original "new" and make it private
WITHOUT_CLASSIFICATION	The replacement "new" allocates and inits the Ruby object as before, but also instantiates our proxified Java object by calling __jcreate!
WITHOUT_CLASSIFICATION	Next, we define a few private methods that we'll use to manipulate the Java object contained within this Ruby object
WITHOUT_CLASSIFICATION	jcreate instantiates the proxy object which implements all interfaces and which is wrapped and implemented by this object
WITHOUT_CLASSIFICATION	Now we add an "implement" and "implement_all" methods to the class
WITHOUT_CLASSIFICATION	implement all forces implementation of all interfaces we intend for this class to implement
WITHOUT_CLASSIFICATION	we've already done the above priming logic, just add another interface to the list of intentions unless we're past the point of no return or already intend to implement the given interface
WITHOUT_CLASSIFICATION	walk all superclasses aggregating interfaces
WITHOUT_CLASSIFICATION	construct the new interface impl and set it into the object
WITHOUT_CLASSIFICATION	assuming the user wants a collection of interfaces that can be included together. make it so.
WITHOUT_CLASSIFICATION	not allowed for existing Java interface modules
WITHOUT_CLASSIFICATION	To turn a module into an "interface collection" we add a class instance variable to hold the list of interfaces, and modify append_features for this module to call append_features on each of those interfaces as well
WITHOUT_CLASSIFICATION	already set up append_features, just add the interface if we haven't already
WITHOUT_CLASSIFICATION	array-of-interface-type creation/identity
WITHOUT_CLASSIFICATION	keep this variant for kind_of? testing
WITHOUT_CLASSIFICATION	array creation should use this variant
WITHOUT_CLASSIFICATION	parent.setConstant(name, proxyClass); where the name should come from ?
WITHOUT_CLASSIFICATION	including interface module so old-style interface "subclasses" will respond correctly to #kind_of?, etc.
WITHOUT_CLASSIFICATION	add reference to interface module
WITHOUT_CLASSIFICATION	Need to initialize
WITHOUT_CLASSIFICATION	Need to initialize
WITHOUT_CLASSIFICATION	proxy is complete, return it
WITHOUT_CLASSIFICATION	same as argument_types, but matches name in java.lang.reflect.Constructor/Method
WITHOUT_CLASSIFICATION	This point is only reached if there was an exception handler installed.
WITHOUT_CLASSIFICATION	weakly reserved names
WITHOUT_CLASSIFICATION	called only by initializing thread; no synchronization required
WITHOUT_CLASSIFICATION	called only by initializing thread; no synchronization required
WITHOUT_CLASSIFICATION	modified only by addMethod; no synchronization required
WITHOUT_CLASSIFICATION	if there's no constructor, we must prevent construction
WITHOUT_CLASSIFICATION	caching constructors, as they're accessed for each new instance
WITHOUT_CLASSIFICATION	proxy module for interfaces
WITHOUT_CLASSIFICATION	proxy class for concrete classes. also used for "concrete" interfaces, which is why we have two fields
WITHOUT_CLASSIFICATION	readable only by thread building proxy, so don't need to be volatile. used to handle recursive calls to getProxyClass/Module while proxy is being constructed (usually when a constant defined by a class is of the same type as that class).
WITHOUT_CLASSIFICATION	allow proxy to be read without synchronization. if proxy is under construction, only the building thread can see it.
WITHOUT_CLASSIFICATION	Now add all aliases for the static methods (fields) as appropriate
WITHOUT_CLASSIFICATION	proxy is under construction, building thread can safely read non-volatile value
WITHOUT_CLASSIFICATION	Add property name aliases
WITHOUT_CLASSIFICATION	getFoo => foo getFoo(int) => foo(int)
WITHOUT_CLASSIFICATION	setFoo(Foo) => foo=(Foo)
WITHOUT_CLASSIFICATION	isFoo() => foo, isFoo() => foo()
WITHOUT_CLASSIFICATION	Additionally add ?-postfixed aliases to any boolean methods and properties.
WITHOUT_CLASSIFICATION	is_something?, contains_thing?
WITHOUT_CLASSIFICATION	something?
WITHOUT_CLASSIFICATION	setup constants for public inner classes
WITHOUT_CLASSIFICATION	setup constants for public inner classes
WITHOUT_CLASSIFICATION	Ignore bad constant named inner classes pending JRUBY-697
WITHOUT_CLASSIFICATION	Ignore bad constant named inner classes pending JRUBY-697
WITHOUT_CLASSIFICATION	create constructorInstaller; if there are no constructors, it will disable construction
WITHOUT_CLASSIFICATION	we need to collect all methods, though we'll only install the ones that are named in this class
WITHOUT_CLASSIFICATION	Install direct java methods with mangled name so 'send' can call them directly.
WITHOUT_CLASSIFICATION	now iterate over all installers and make sure they also have appropriate aliases
WITHOUT_CLASSIFICATION	old (quasi-deprecated) interface class
WITHOUT_CLASSIFICATION	1.9 support for encodings
WITHOUT_CLASSIFICATION	double-check the cache now that we're synchronized
WITHOUT_CLASSIFICATION	setFoo(Foo) => foo=(Foo)
WITHOUT_CLASSIFICATION	isFoo() => foo, isFoo() => foo()
WITHOUT_CLASSIFICATION	is_something?, contains_thing?
WITHOUT_CLASSIFICATION	one word type name that starts lower-case...it may be a primitive type
WITHOUT_CLASSIFICATION	Java.getProxyClass deals with sync issues, so we won't duplicate the logic here
WITHOUT_CLASSIFICATION	note: intentionally returning the actual array returned from Java, rather than wrapping it in a RubyArray. wave of the future, when java_class will return the actual class, rather than a JavaClass wrapper.
WITHOUT_CLASSIFICATION	see note above re: return type
WITHOUT_CLASSIFICATION	restrictive security policy; no matter, we only want public classes anyway
WITHOUT_CLASSIFICATION	very restrictive policy (disallows Member.PUBLIC) we'd never actually get this far in that case
WITHOUT_CLASSIFICATION	one-dimensional array
WITHOUT_CLASSIFICATION	n-dimensional array
WITHOUT_CLASSIFICATION	if it's an array of arrays, recurse with the component type
WITHOUT_CLASSIFICATION	we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods see JRUBY-3130
WITHOUT_CLASSIFICATION	Proc implementing an interface, pull in the catch-all code that lets the proc get invoked no matter what method is called on the interface
WITHOUT_CLASSIFICATION	can't be converted any more, return it
WITHOUT_CLASSIFICATION	getFooBar() => fooBar?, foo_bar?()
WITHOUT_CLASSIFICATION	If not a property, but is boolean add ?-postfixed aliases.
WITHOUT_CLASSIFICATION	many cases are ok to convert to float; if not one of these, error
WITHOUT_CLASSIFICATION	for Object, default to natural wrapper type
WITHOUT_CLASSIFICATION	rubyObject is already of the required jruby class (or subclass)
WITHOUT_CLASSIFICATION	the converters handle not only primitive types but also their boxed versions, so we should check if we have a converter before checking for isPrimitive()
WITHOUT_CLASSIFICATION	it's not one of the types we convert, so just pass it out as-is without wrapping
WITHOUT_CLASSIFICATION	we've found a Java type to which we've coerced the Ruby value, wrap it
WITHOUT_CLASSIFICATION	set of utility methods for Java-based proxy objects
WITHOUT_CLASSIFICATION	the proxy (wrapper) type hierarchy
WITHOUT_CLASSIFICATION	InterfaceJavaProxy.createInterfaceJavaProxy(context);
WITHOUT_CLASSIFICATION	also create the JavaProxy classes
WITHOUT_CLASSIFICATION	The template for interface modules
WITHOUT_CLASSIFICATION	Now attach Java-related extras to core classes
WITHOUT_CLASSIFICATION	add all name-to-class mappings
WITHOUT_CLASSIFICATION	add some base Java classes everyone will need
WITHOUT_CLASSIFICATION	finally, set JavaSupport.isEnabled to true
WITHOUT_CLASSIFICATION	shouldn't happen, but if a superclass is specified, it's not ours
WITHOUT_CLASSIFICATION	include any interfaces we extend
WITHOUT_CLASSIFICATION	java.lang.Object is added at root of java proxy classes
WITHOUT_CLASSIFICATION	other java proxy classes added under their superclass' java proxy
WITHOUT_CLASSIFICATION	include interface modules into the proxy class
WITHOUT_CLASSIFICATION	JRUBY-2938 the proxy class might already exist
WITHOUT_CLASSIFICATION	add java_method for unbound use
WITHOUT_CLASSIFICATION	add alias to meta
WITHOUT_CLASSIFICATION	we'll only map conventional class names to modules
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	Haven't found a class, continue on as though it were a package
WITHOUT_CLASSIFICATION	upper case name, so most likely a class
WITHOUT_CLASSIFICATION	This point is only reached if there was an exception handler installed.
WITHOUT_CLASSIFICATION	add alias to meta
WITHOUT_CLASSIFICATION	this is where we'll get connected when classes are opened using package module syntax.
WITHOUT_CLASSIFICATION	save package module as ivar in parent, and add method to parent so we don't have to come back here.
WITHOUT_CLASSIFICATION	this covers primitives and (unlikely) lower-case class names
WITHOUT_CLASSIFICATION	not primitive or lc class
WITHOUT_CLASSIFICATION	not primitive or lc class
WITHOUT_CLASSIFICATION	Is there a supplied proc argument or do we assume a block was supplied
WITHOUT_CLASSIFICATION	Create list of interfaces to proxy (and make sure they really are interfaces)
WITHOUT_CLASSIFICATION	hashcode is a combination of the interfaces and the Ruby class we're using to implement them
WITHOUT_CLASSIFICATION	if it's a singleton class and the real class is proc, we're doing closure conversion so just use Proc's hashcode
WITHOUT_CLASSIFICATION	normal new class implementing interfaces
WITHOUT_CLASSIFICATION	Initialize some components.
WITHOUT_CLASSIFICATION	not synchronizing these methods, no harm if these values get set more than once. (also note that there's no chance of getting a partially initialized class/module, as happens-before is guaranteed by volatile write/read of constants table.)
WITHOUT_CLASSIFICATION	Java reflection does not allow retrieving constructors like methods
WITHOUT_CLASSIFICATION	for zero args case we can stop searching
WITHOUT_CLASSIFICATION	for zero args case we can stop searching
WITHOUT_CLASSIFICATION	no matching ctor found
WITHOUT_CLASSIFICATION	Create Ruby proxies for any input arguments that are not primitives.
WITHOUT_CLASSIFICATION	prepare a faster handle if handles are enabled and the method and class are public
WITHOUT_CLASSIFICATION	must be a public method
WITHOUT_CLASSIFICATION	must be a public class
WITHOUT_CLASSIFICATION	must have been loaded from our known classloader hierarchy
WITHOUT_CLASSIFICATION	Special classes like Collections.EMPTY_LIST are inner classes that are private but implement public interfaces. Their methods are all public methods for the public interface. Let these public methods execute via setAccessible(true).
WITHOUT_CLASSIFICATION	search through all declared methods to find a closest match
WITHOUT_CLASSIFICATION	no matching method found
WITHOUT_CLASSIFICATION	this test really means, that this is a ruby-defined subclass of a java class
WITHOUT_CLASSIFICATION	First we need to register the JRuby engine.
WITHOUT_CLASSIFICATION	Now we create a new BSFManager.
WITHOUT_CLASSIFICATION	Initialize a simple Frame.
WITHOUT_CLASSIFICATION	e.printStackTrace();
WITHOUT_CLASSIFICATION	e.printStackTrace();
WITHOUT_CLASSIFICATION	JRUBY-530, while case
WITHOUT_CLASSIFICATION	end class
WITHOUT_CLASSIFICATION	this test really means, that this is a ruby-defined subclass of a java class
WITHOUT_CLASSIFICATION	for our purposes, Accessibles are also Members, and vice-versa, so we'll include Member methods here.
WITHOUT_CLASSIFICATION	Declare those components as beans in BSF. Then it will be possible to access those components in Ruby as global variables ($frame, $menubar, ...)
WITHOUT_CLASSIFICATION	Execute a Ruby script (add the menubar to the frame).
WITHOUT_CLASSIFICATION	Execute Ruby statements.
WITHOUT_CLASSIFICATION	Evaluates a Ruby expression and display the result.
WITHOUT_CLASSIFICATION	Populate values for the parameter names
WITHOUT_CLASSIFICATION	package scope
WITHOUT_CLASSIFICATION	This point is only reached if there was an exception handler installed.
WITHOUT_CLASSIFICATION	Ruby-level methods
WITHOUT_CLASSIFICATION	need names ordered for key generation later
WITHOUT_CLASSIFICATION	we only collect methods and interfaces for user-defined proxy classes.
WITHOUT_CLASSIFICATION	get JavaClass if this is the new proxy class; verify it matches if this is a superclass proxy.
WITHOUT_CLASSIFICATION	get any included interfaces
WITHOUT_CLASSIFICATION	lock in the overridden methods for the new class, and any as-yet uninstantiated ancestor class.
WITHOUT_CLASSIFICATION	statically initialized below
WITHOUT_CLASSIFICATION	finish class initializer
WITHOUT_CLASSIFICATION	trigger class initialization for the class
WITHOUT_CLASSIFICATION	should not happen!
WITHOUT_CLASSIFICATION	start class
WITHOUT_CLASSIFICATION	make getter for handler
WITHOUT_CLASSIFICATION	make getter for proxy class
WITHOUT_CLASSIFICATION	add (potentially) overridden names to the key. TODO: see note above re: optimizations
WITHOUT_CLASSIFICATION	We generate all constructors and let some fail during invocation later
WITHOUT_CLASSIFICATION	create static private method field
WITHOUT_CLASSIFICATION	load static empty array
WITHOUT_CLASSIFICATION	box arguments
WITHOUT_CLASSIFICATION	this is a simple rethrow handler
WITHOUT_CLASSIFICATION	construct the super-proxy method
WITHOUT_CLASSIFICATION	do a void return
WITHOUT_CLASSIFICATION	utility methods
WITHOUT_CLASSIFICATION	Is there a supplied proc argument or do we assume a block was supplied
WITHOUT_CLASSIFICATION	store call information so method_missing impl can use it
WITHOUT_CLASSIFICATION	use the same logic as in EvaluationState
WITHOUT_CLASSIFICATION	no opt, no rest, exact match
WITHOUT_CLASSIFICATION	only rest, must be at least required
WITHOUT_CLASSIFICATION	opt but no rest, must be at least required and no more than required + opt
WITHOUT_CLASSIFICATION	opt and rest, must be at least required
WITHOUT_CLASSIFICATION	No block from a nil proc
WITHOUT_CLASSIFICATION	If not already a proc then we should try and make it one.
WITHOUT_CLASSIFICATION	The current block is already associated with proc. No need to create a new one
WITHOUT_CLASSIFICATION	Has the method that is calling super received a block argument
WITHOUT_CLASSIFICATION	NUL
WITHOUT_CLASSIFICATION	Reuse trailing consecutive sequence at same slot
WITHOUT_CLASSIFICATION	Clone all remaining nodes
WITHOUT_CLASSIFICATION	'class << state.self' and 'class << obj' uses defn as opposed to defs
WITHOUT_CLASSIFICATION	Each root node has a top-level scope that we need to push
WITHOUT_CLASSIFICATION	read-volatile
WITHOUT_CLASSIFICATION	read-volatile
WITHOUT_CLASSIFICATION	classes are directly in the hierarchy, so no special logic is necessary for implementer
WITHOUT_CLASSIFICATION	must be power of 2 must be power of 2
WITHOUT_CLASSIFICATION	Find power-of-two sizes best matching arguments
WITHOUT_CLASSIFICATION	note segmentShift differs from ConcurrentHashMap's calculation due to issues with System.identityHashCode (upper n bits always 0, at least under Java 1.6 / WinXP)
WITHOUT_CLASSIFICATION	System.err.println("ObjectProxyCache " + id + " started at "+ new java.util.Date());
WITHOUT_CLASSIFICATION	protected void finalize() throws Throwable { System.err.println("ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); }
WITHOUT_CLASSIFICATION	EntryRefs include hash with key to facilitate lookup by Segment#expunge after ref is removed from ReferenceQueue
WITHOUT_CLASSIFICATION	Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather makes it a final field. The theory is that doing so should force a happens-before relationship WRT the WeakReference constructor, guaranteeing that the key will be visibile to other threads (unless it's been GC'ed). See JLS 17.5 (final fields) and 17.4.5 (Happens-before order) to confirm or refute my reasoning here.
WITHOUT_CLASSIFICATION	references to the Java object and its proxy will either both be weak or both be soft, since the proxy contains a strong reference to the object, so it wouldn't make sense for the reference types to differ.
WITHOUT_CLASSIFICATION	ctor used by remove/rehash
WITHOUT_CLASSIFICATION	must be called under lock
WITHOUT_CLASSIFICATION	must be called under lock
WITHOUT_CLASSIFICATION	must be called under lock
WITHOUT_CLASSIFICATION	note that we'll potentially see the refs for both the java object and proxy -- whichever we see first will cause the entry to be removed; the other will not match an entry and will be ignored.
WITHOUT_CLASSIFICATION	temp method to verify tableSize value must be called under lock
WITHOUT_CLASSIFICATION	Single node in list
WITHOUT_CLASSIFICATION	indirect read-/write- volatile
WITHOUT_CLASSIFICATION	indirect read-/write- volatile
WITHOUT_CLASSIFICATION	entry exists, proxy has been gc'ed. replace entry.
WITHOUT_CLASSIFICATION	Where we get new positions from.
WITHOUT_CLASSIFICATION	Start of string ([, (, {, <, ', ", \n)
WITHOUT_CLASSIFICATION	Number of newlines read from the reader
WITHOUT_CLASSIFICATION	How many bytes into the source are we?
WITHOUT_CLASSIFICATION	For 'list' and only populated if list is not null.
WITHOUT_CLASSIFICATION	Last full line read.
WITHOUT_CLASSIFICATION	Save sourceLine for error reporting to display line where error occurred
WITHOUT_CLASSIFICATION	Get rest of line. lineBuffer filled as side-effect...
WITHOUT_CLASSIFICATION	Expand variables, Indentation of final marker
WITHOUT_CLASSIFICATION	Expand variables, Indentation of final marker
WITHOUT_CLASSIFICATION	End of string (], ), }, >, ', ", \0)
WITHOUT_CLASSIFICATION	How many strings are nested in the current string term
WITHOUT_CLASSIFICATION	Single-quote fast path
WITHOUT_CLASSIFICATION	Regexp engine 'java'
WITHOUT_CLASSIFICATION	Was a goto in original ruby lexer
WITHOUT_CLASSIFICATION	just ignore
WITHOUT_CLASSIFICATION	octal constant
WITHOUT_CLASSIFICATION	hex constant
WITHOUT_CLASSIFICATION	PUSH(1)
WITHOUT_CLASSIFICATION	POP
WITHOUT_CLASSIFICATION	PUSH(0). If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.
WITHOUT_CLASSIFICATION	LEXPOP
WITHOUT_CLASSIFICATION	SET_P
WITHOUT_CLASSIFICATION	Marker delimiting heredoc boundary
WITHOUT_CLASSIFICATION	Found end marker for this heredoc
WITHOUT_CLASSIFICATION	Put back lastLine for any elements past start of heredoc marker
WITHOUT_CLASSIFICATION	Last token read via yylex().
WITHOUT_CLASSIFICATION	Value of last token which had a value associated with it.
WITHOUT_CLASSIFICATION	Stream of data that yylex() examines.
WITHOUT_CLASSIFICATION	Used for tiny smidgen of grammar in lexer (see setParserSupport())
WITHOUT_CLASSIFICATION	Give a name to a value. Enebo: This should be used more.
WITHOUT_CLASSIFICATION	When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').
WITHOUT_CLASSIFICATION	Are we lexing Ruby 1.8 or 1.9+ syntax
WITHOUT_CLASSIFICATION	Count of nested parentheses (1.9 only)
WITHOUT_CLASSIFICATION	1.9 only
WITHOUT_CLASSIFICATION	Short-hand (e.g. %{,%.,%!,... versus %Q{).
WITHOUT_CLASSIFICATION	Long-hand (e.g. %Q{}).
WITHOUT_CLASSIFICATION	no mb || ismbchar(term)
WITHOUT_CLASSIFICATION	Not normally used, but is left in here since it can be useful in debugging grammar and lexing problems.
WITHOUT_CLASSIFICATION	DEBUGGING HELP
WITHOUT_CLASSIFICATION	'\v'
WITHOUT_CLASSIFICATION	end of script.
WITHOUT_CLASSIFICATION	white spaces
WITHOUT_CLASSIFICATION	'\v'
WITHOUT_CLASSIFICATION	it's a comment
WITHOUT_CLASSIFICATION	Replace a string of newlines with a single one
WITHOUT_CLASSIFICATION	$\: output record separator
WITHOUT_CLASSIFICATION	EOF (ENEBO: After default?
WITHOUT_CLASSIFICATION	documentation nodes
WITHOUT_CLASSIFICATION	In case last next was the newline.
WITHOUT_CLASSIFICATION	Just a plain bang
WITHOUT_CLASSIFICATION	$_: last read line string
WITHOUT_CLASSIFICATION	$~: match-data
WITHOUT_CLASSIFICATION	$: argv
WITHOUT_CLASSIFICATION	$$: pid
WITHOUT_CLASSIFICATION	$?: last status
WITHOUT_CLASSIFICATION	$!: error string
WITHOUT_CLASSIFICATION	$@: error position
WITHOUT_CLASSIFICATION	$/: input record separator
WITHOUT_CLASSIFICATION	$;: field separator
WITHOUT_CLASSIFICATION	$,: output field separator
WITHOUT_CLASSIFICATION	$.: last read line number
WITHOUT_CLASSIFICATION	$=: ignorecase
WITHOUT_CLASSIFICATION	$:: load path
WITHOUT_CLASSIFICATION	$<: reading filename
WITHOUT_CLASSIFICATION	$": already loaded files
WITHOUT_CLASSIFICATION	$&: last match
WITHOUT_CLASSIFICATION	$`: string before last match
WITHOUT_CLASSIFICATION	$': string after last match
WITHOUT_CLASSIFICATION	methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop
WITHOUT_CLASSIFICATION	See if it is a reserved word.
WITHOUT_CLASSIFICATION	enum lex_state
WITHOUT_CLASSIFICATION	block (primary)
WITHOUT_CLASSIFICATION	block (expr)
WITHOUT_CLASSIFICATION	hash
WITHOUT_CLASSIFICATION	ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.
WITHOUT_CLASSIFICATION	FIXME: peek('u') utf8 stuff for 1.9
WITHOUT_CLASSIFICATION	We don't append '+' since Java number parser gets confused
WITHOUT_CLASSIFICATION	hexadecimal
WITHOUT_CLASSIFICATION	binary
WITHOUT_CLASSIFICATION	decimal
WITHOUT_CLASSIFICATION	Octal
WITHOUT_CLASSIFICATION	'_' in number just ignored
WITHOUT_CLASSIFICATION	backslash
WITHOUT_CLASSIFICATION	newline
WITHOUT_CLASSIFICATION	horizontal tab
WITHOUT_CLASSIFICATION	form feed
WITHOUT_CLASSIFICATION	vertical tab
WITHOUT_CLASSIFICATION	alarm(bell)
WITHOUT_CLASSIFICATION	escape
WITHOUT_CLASSIFICATION	hex constant
WITHOUT_CLASSIFICATION	char hexValue = scanHex(2);
WITHOUT_CLASSIFICATION	If \r\n then just pass along \n (windows). If \r[^\n] then pass along \n (MAC).
WITHOUT_CLASSIFICATION	space
WITHOUT_CLASSIFICATION	Where we started this marker match
WITHOUT_CLASSIFICATION	Position within source must reflect the actual offset and column. Since we ate an extra character here (this accounting is normally done in read ), we should update position info.
WITHOUT_CLASSIFICATION	We use offset here to keep track of extra newlines for windows
WITHOUT_CLASSIFICATION	If \r\n then just pass along \n (windows). If \r[^\n] then pass along \n (MAC).
WITHOUT_CLASSIFICATION	FIXME: Old Mac format strings?
WITHOUT_CLASSIFICATION	FIXME: Old Mac format strings?
WITHOUT_CLASSIFICATION	Where we get our newest char's
WITHOUT_CLASSIFICATION	Our readback/pushback buffer.
WITHOUT_CLASSIFICATION	index of last character in pushback buffer
WITHOUT_CLASSIFICATION	Character read before previous read
WITHOUT_CLASSIFICATION	keep value of twoAgo around so we can restore after we unread
WITHOUT_CLASSIFICATION	NetProtocolBufferedIOLibrary
WITHOUT_CLASSIFICATION	BigDecimalLibrary
WITHOUT_CLASSIFICATION	TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. We did it here for now
WITHOUT_CLASSIFICATION	Ruby's designation for some platforms, minus version numbers in some cases
WITHOUT_CLASSIFICATION	that's what JDK5 produces on Windows Vista
WITHOUT_CLASSIFICATION	Rubygems is too specific on host cpu so until we have real need lets default to universal setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));
WITHOUT_CLASSIFICATION	Our shell scripts pass in non-canonicalized paths, but even if we didn't anyone who did would become unhappy because Ruby apps expect no relative operators in the pathname (rubygems, for example).
WITHOUT_CLASSIFICATION	this set is only for darwin
WITHOUT_CLASSIFICATION	DigestLibrary
WITHOUT_CLASSIFICATION	all errors, just info; do not prevent loading IKVM does not support JMX, and throws an error
WITHOUT_CLASSIFICATION	all errors, just info; do not prevent unloading IKVM does not support JMX, and throws an error
WITHOUT_CLASSIFICATION	do nothing, return dummy version below
WITHOUT_CLASSIFICATION	yyLhs 496
WITHOUT_CLASSIFICATION	yyLhs 496
WITHOUT_CLASSIFICATION	yyLhs 496
WITHOUT_CLASSIFICATION	yyLhs 496
WITHOUT_CLASSIFICATION	yyLhs 496
WITHOUT_CLASSIFICATION	line 329
WITHOUT_CLASSIFICATION	new Exception().printStackTrace();
WITHOUT_CLASSIFICATION	yyGindex 152
WITHOUT_CLASSIFICATION	dynamically increase
WITHOUT_CLASSIFICATION	discarding a token does not change stack
WITHOUT_CLASSIFICATION	else [default] reduce (yyN)
WITHOUT_CLASSIFICATION	shift to yyN
WITHOUT_CLASSIFICATION	reduce (yyN)
WITHOUT_CLASSIFICATION	leave stack alone
WITHOUT_CLASSIFICATION	line 271
WITHOUT_CLASSIFICATION	line 274
WITHOUT_CLASSIFICATION	line 303
WITHOUT_CLASSIFICATION	line 311
WITHOUT_CLASSIFICATION	line 314
WITHOUT_CLASSIFICATION	line 317
WITHOUT_CLASSIFICATION	line 332
WITHOUT_CLASSIFICATION	line 338
WITHOUT_CLASSIFICATION	line 341
WITHOUT_CLASSIFICATION	line 344
WITHOUT_CLASSIFICATION	line 351
WITHOUT_CLASSIFICATION	line 358
WITHOUT_CLASSIFICATION	line 367
WITHOUT_CLASSIFICATION	line 372
WITHOUT_CLASSIFICATION	line 378
WITHOUT_CLASSIFICATION	line 382
WITHOUT_CLASSIFICATION	line 407
WITHOUT_CLASSIFICATION	line 411
WITHOUT_CLASSIFICATION	line 414
WITHOUT_CLASSIFICATION	line 417
WITHOUT_CLASSIFICATION	line 420
WITHOUT_CLASSIFICATION	line 426
WITHOUT_CLASSIFICATION	line 434
WITHOUT_CLASSIFICATION	line 443
WITHOUT_CLASSIFICATION	line 446
WITHOUT_CLASSIFICATION	line 452
WITHOUT_CLASSIFICATION	line 457
WITHOUT_CLASSIFICATION	line 464
WITHOUT_CLASSIFICATION	line 467
WITHOUT_CLASSIFICATION	line 470
WITHOUT_CLASSIFICATION	line 479
WITHOUT_CLASSIFICATION	line 484
WITHOUT_CLASSIFICATION	line 486
WITHOUT_CLASSIFICATION	line 492
WITHOUT_CLASSIFICATION	line 498
WITHOUT_CLASSIFICATION	line 501
WITHOUT_CLASSIFICATION	line 504
WITHOUT_CLASSIFICATION	line 507
WITHOUT_CLASSIFICATION	line 510
WITHOUT_CLASSIFICATION	line 519
WITHOUT_CLASSIFICATION	line 525
WITHOUT_CLASSIFICATION	yyGindex 152
WITHOUT_CLASSIFICATION	line 537
WITHOUT_CLASSIFICATION	line 540
WITHOUT_CLASSIFICATION	line 543
WITHOUT_CLASSIFICATION	line 546
WITHOUT_CLASSIFICATION	line 556
WITHOUT_CLASSIFICATION	line 559
WITHOUT_CLASSIFICATION	line 563
WITHOUT_CLASSIFICATION	line 566
WITHOUT_CLASSIFICATION	line 569
WITHOUT_CLASSIFICATION	line 575
WITHOUT_CLASSIFICATION	line 578
WITHOUT_CLASSIFICATION	line 587
WITHOUT_CLASSIFICATION	line 596
WITHOUT_CLASSIFICATION	line 604
WITHOUT_CLASSIFICATION	line 607
WITHOUT_CLASSIFICATION	line 610
WITHOUT_CLASSIFICATION	line 613
WITHOUT_CLASSIFICATION	line 616
WITHOUT_CLASSIFICATION	line 634
WITHOUT_CLASSIFICATION	line 638
WITHOUT_CLASSIFICATION	line 643
WITHOUT_CLASSIFICATION	line 646
WITHOUT_CLASSIFICATION	line 655
WITHOUT_CLASSIFICATION	line 660
WITHOUT_CLASSIFICATION	line 667
WITHOUT_CLASSIFICATION	line 670
WITHOUT_CLASSIFICATION	line 672
WITHOUT_CLASSIFICATION	line 696
WITHOUT_CLASSIFICATION	line 701
WITHOUT_CLASSIFICATION	line 717
WITHOUT_CLASSIFICATION	line 720
WITHOUT_CLASSIFICATION	line 726
WITHOUT_CLASSIFICATION	line 729
WITHOUT_CLASSIFICATION	line 732
WITHOUT_CLASSIFICATION	line 735
WITHOUT_CLASSIFICATION	line 738
WITHOUT_CLASSIFICATION	line 751
WITHOUT_CLASSIFICATION	line 754
WITHOUT_CLASSIFICATION	line 757
WITHOUT_CLASSIFICATION	line 760
WITHOUT_CLASSIFICATION	line 763
WITHOUT_CLASSIFICATION	line 769
WITHOUT_CLASSIFICATION	line 772
WITHOUT_CLASSIFICATION	line 775
WITHOUT_CLASSIFICATION	line 782
WITHOUT_CLASSIFICATION	line 788
WITHOUT_CLASSIFICATION	line 791
WITHOUT_CLASSIFICATION	line 794
WITHOUT_CLASSIFICATION	line 797
WITHOUT_CLASSIFICATION	line 803
WITHOUT_CLASSIFICATION	line 806
WITHOUT_CLASSIFICATION	line 809
WITHOUT_CLASSIFICATION	line 815
WITHOUT_CLASSIFICATION	line 818
WITHOUT_CLASSIFICATION	line 821
WITHOUT_CLASSIFICATION	line 824
WITHOUT_CLASSIFICATION	line 830
WITHOUT_CLASSIFICATION	line 833
WITHOUT_CLASSIFICATION	line 836
WITHOUT_CLASSIFICATION	line 839
WITHOUT_CLASSIFICATION	line 842
WITHOUT_CLASSIFICATION	line 848
WITHOUT_CLASSIFICATION	line 852
WITHOUT_CLASSIFICATION	line 858
WITHOUT_CLASSIFICATION	line 861
WITHOUT_CLASSIFICATION	line 868
WITHOUT_CLASSIFICATION	line 871
WITHOUT_CLASSIFICATION	line 876
WITHOUT_CLASSIFICATION	line 879
WITHOUT_CLASSIFICATION	line 883
WITHOUT_CLASSIFICATION	line 893
WITHOUT_CLASSIFICATION	line 896
WITHOUT_CLASSIFICATION	line 899
WITHOUT_CLASSIFICATION	line 903
WITHOUT_CLASSIFICATION	line 907
WITHOUT_CLASSIFICATION	line 915
WITHOUT_CLASSIFICATION	line 920
WITHOUT_CLASSIFICATION	line 923
WITHOUT_CLASSIFICATION	line 926
WITHOUT_CLASSIFICATION	line 932
WITHOUT_CLASSIFICATION	line 936
WITHOUT_CLASSIFICATION	line 940
WITHOUT_CLASSIFICATION	line 944
WITHOUT_CLASSIFICATION	line 948
WITHOUT_CLASSIFICATION	line 956
WITHOUT_CLASSIFICATION	line 960
WITHOUT_CLASSIFICATION	line 964
WITHOUT_CLASSIFICATION	line 967
WITHOUT_CLASSIFICATION	line 972
WITHOUT_CLASSIFICATION	line 978
WITHOUT_CLASSIFICATION	line 980
WITHOUT_CLASSIFICATION	line 984
WITHOUT_CLASSIFICATION	line 986
WITHOUT_CLASSIFICATION	line 996
WITHOUT_CLASSIFICATION	line 1001
WITHOUT_CLASSIFICATION	line 1004
WITHOUT_CLASSIFICATION	line 1008
WITHOUT_CLASSIFICATION	line 1014
WITHOUT_CLASSIFICATION	line 1029
WITHOUT_CLASSIFICATION	line 1032
WITHOUT_CLASSIFICATION	line 1034
WITHOUT_CLASSIFICATION	line 1045
WITHOUT_CLASSIFICATION	line 1048
WITHOUT_CLASSIFICATION	line 1051
WITHOUT_CLASSIFICATION	line 1058
WITHOUT_CLASSIFICATION	line 1070
WITHOUT_CLASSIFICATION	line 1073
WITHOUT_CLASSIFICATION	line 1076
WITHOUT_CLASSIFICATION	line 1079
WITHOUT_CLASSIFICATION	line 1082
WITHOUT_CLASSIFICATION	line 1089
WITHOUT_CLASSIFICATION	line 1097
WITHOUT_CLASSIFICATION	line 1100
WITHOUT_CLASSIFICATION	line 1103
WITHOUT_CLASSIFICATION	line 1107
WITHOUT_CLASSIFICATION	line 1111
WITHOUT_CLASSIFICATION	line 1113
WITHOUT_CLASSIFICATION	line 1115
WITHOUT_CLASSIFICATION	line 1119
WITHOUT_CLASSIFICATION	line 1130
WITHOUT_CLASSIFICATION	line 1133
WITHOUT_CLASSIFICATION	line 1135
WITHOUT_CLASSIFICATION	line 1137
WITHOUT_CLASSIFICATION	line 1140
WITHOUT_CLASSIFICATION	line 1151
WITHOUT_CLASSIFICATION	line 1154
WITHOUT_CLASSIFICATION	line 1158
WITHOUT_CLASSIFICATION	line 1164
WITHOUT_CLASSIFICATION	line 1175
WITHOUT_CLASSIFICATION	line 1178
WITHOUT_CLASSIFICATION	line 1187
WITHOUT_CLASSIFICATION	line 1189
WITHOUT_CLASSIFICATION	line 1193
WITHOUT_CLASSIFICATION	line 1204
WITHOUT_CLASSIFICATION	line 1207
WITHOUT_CLASSIFICATION	line 1210
WITHOUT_CLASSIFICATION	line 1214
WITHOUT_CLASSIFICATION	line 1234
WITHOUT_CLASSIFICATION	line 1239
WITHOUT_CLASSIFICATION	line 1243
WITHOUT_CLASSIFICATION	line 1247
WITHOUT_CLASSIFICATION	line 1251
WITHOUT_CLASSIFICATION	line 1263
WITHOUT_CLASSIFICATION	line 1269
WITHOUT_CLASSIFICATION	line 1280
WITHOUT_CLASSIFICATION	line 1283
WITHOUT_CLASSIFICATION	line 1290
WITHOUT_CLASSIFICATION	line 1296
WITHOUT_CLASSIFICATION	line 1299
WITHOUT_CLASSIFICATION	line 1302
WITHOUT_CLASSIFICATION	line 1309
WITHOUT_CLASSIFICATION	line 1313
WITHOUT_CLASSIFICATION	line 1315
WITHOUT_CLASSIFICATION	line 1320
WITHOUT_CLASSIFICATION	line 1328
WITHOUT_CLASSIFICATION	line 1335
WITHOUT_CLASSIFICATION	line 1348
WITHOUT_CLASSIFICATION	line 1352
WITHOUT_CLASSIFICATION	line 1358
WITHOUT_CLASSIFICATION	line 1374
WITHOUT_CLASSIFICATION	line 1381
WITHOUT_CLASSIFICATION	line 1387
WITHOUT_CLASSIFICATION	line 1392
WITHOUT_CLASSIFICATION	line 1415
WITHOUT_CLASSIFICATION	line 1431
WITHOUT_CLASSIFICATION	line 1434
WITHOUT_CLASSIFICATION	line 1440
WITHOUT_CLASSIFICATION	line 1443
WITHOUT_CLASSIFICATION	line 1453
WITHOUT_CLASSIFICATION	line 1456
WITHOUT_CLASSIFICATION	line 1462
WITHOUT_CLASSIFICATION	line 1465
WITHOUT_CLASSIFICATION	line 1470
WITHOUT_CLASSIFICATION	line 1477
WITHOUT_CLASSIFICATION	line 1480
WITHOUT_CLASSIFICATION	line 1485
WITHOUT_CLASSIFICATION	line 1488
WITHOUT_CLASSIFICATION	line 1496
WITHOUT_CLASSIFICATION	line 1502
WITHOUT_CLASSIFICATION	line 1510
WITHOUT_CLASSIFICATION	line 1513
WITHOUT_CLASSIFICATION	line 1516
WITHOUT_CLASSIFICATION	line 1533
WITHOUT_CLASSIFICATION	line 1550
WITHOUT_CLASSIFICATION	line 1553
WITHOUT_CLASSIFICATION	line 1556
WITHOUT_CLASSIFICATION	line 1565
WITHOUT_CLASSIFICATION	line 1568
WITHOUT_CLASSIFICATION	line 1571
WITHOUT_CLASSIFICATION	line 1574
WITHOUT_CLASSIFICATION	line 1577
WITHOUT_CLASSIFICATION	line 1587
WITHOUT_CLASSIFICATION	line 1595
WITHOUT_CLASSIFICATION	line 1598
WITHOUT_CLASSIFICATION	line 1600
WITHOUT_CLASSIFICATION	line 1609
WITHOUT_CLASSIFICATION	line 1623
WITHOUT_CLASSIFICATION	line 1626
WITHOUT_CLASSIFICATION	line 1629
WITHOUT_CLASSIFICATION	line 1632
WITHOUT_CLASSIFICATION	line 1638
WITHOUT_CLASSIFICATION	line 1641
WITHOUT_CLASSIFICATION	line 1644
WITHOUT_CLASSIFICATION	line 1649
WITHOUT_CLASSIFICATION	line 1655
WITHOUT_CLASSIFICATION	line 1658
WITHOUT_CLASSIFICATION	line 1661
WITHOUT_CLASSIFICATION	line 1672
WITHOUT_CLASSIFICATION	line 1677
WITHOUT_CLASSIFICATION	line 1687
WITHOUT_CLASSIFICATION	line 1694
WITHOUT_CLASSIFICATION	line 1705
WITHOUT_CLASSIFICATION	line 1708
WITHOUT_CLASSIFICATION	line 1725
WITHOUT_CLASSIFICATION	line 1733
WITHOUT_CLASSIFICATION	line 1742
WITHOUT_CLASSIFICATION	line 1745
WITHOUT_CLASSIFICATION	line 1749
WITHOUT_CLASSIFICATION	line 1757
WITHOUT_CLASSIFICATION	line 1769
WITHOUT_CLASSIFICATION	line 1772
WITHOUT_CLASSIFICATION	line 1775
WITHOUT_CLASSIFICATION	line 1784
WITHOUT_CLASSIFICATION	line 1808
WITHOUT_CLASSIFICATION	line 1814
WITHOUT_CLASSIFICATION	line 1818
WITHOUT_CLASSIFICATION	line 1822
WITHOUT_CLASSIFICATION	force for args
WITHOUT_CLASSIFICATION	XXX 0;
WITHOUT_CLASSIFICATION	$$ = $3;
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	last expression should not be void
WITHOUT_CLASSIFICATION	compstmt position includes both parens around it
WITHOUT_CLASSIFICATION	$8 == null ? NilImplicitNode.NIL : $8;
WITHOUT_CLASSIFICATION	$5 == null ? NilImplicitNode.NIL : $5;
WITHOUT_CLASSIFICATION	NOEX_PRIVATE for toplevel
WITHOUT_CLASSIFICATION	mirko: check
WITHOUT_CLASSIFICATION	Include pipes on multiple arg type
WITHOUT_CLASSIFICATION	line 529
WITHOUT_CLASSIFICATION	.setPosFrom($2);
WITHOUT_CLASSIFICATION	XXX
WITHOUT_CLASSIFICATION	zero length array
WITHOUT_CLASSIFICATION	DStrNode: :"some text #{some expression}"
WITHOUT_CLASSIFICATION	StrNode: :"some text"
WITHOUT_CLASSIFICATION	EvStrNode :"#{some expression}"
WITHOUT_CLASSIFICATION	line 1827 "DefaultRubyParser.y"
WITHOUT_CLASSIFICATION	ignore, no debugger present
WITHOUT_CLASSIFICATION	yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));
WITHOUT_CLASSIFICATION	line 7713 "-"
WITHOUT_CLASSIFICATION	local scopes are argument scopes by default
WITHOUT_CLASSIFICATION	mark as captured if from containing scope
WITHOUT_CLASSIFICATION	mark as captured if from containing scope
WITHOUT_CLASSIFICATION	We know this is a block scope because a local scope cannot be within a local scope If topScope was itself it would have created a LocalAsgnNode above.
WITHOUT_CLASSIFICATION	ENEBO: 1.9 has CURR nodes for local/block variables. We don't. I believe we follow proper logic
WITHOUT_CLASSIFICATION	odd...but it is odd in ruby too.
WITHOUT_CLASSIFICATION	What linenumber will the source think it starts from?
WITHOUT_CLASSIFICATION	Is this inline source (aka -e "...source...")
WITHOUT_CLASSIFICATION	We parse evals more often in source so assume an eval parse.
WITHOUT_CLASSIFICATION	Should positions added extra IDE-friendly information and leave in all newline nodes
WITHOUT_CLASSIFICATION	Will parser parse Duby grammar Extensions
WITHOUT_CLASSIFICATION	Should we display extra debug information while parsing?
WITHOUT_CLASSIFICATION	__END__ marker offset (-1 means none present)
WITHOUT_CLASSIFICATION	Parser states:
WITHOUT_CLASSIFICATION	Is the parser current within a singleton (value is number of nested singletons)
WITHOUT_CLASSIFICATION	Is the parser currently within a method definition
WITHOUT_CLASSIFICATION	LOCALVAR
WITHOUT_CLASSIFICATION	CONSTANT
WITHOUT_CLASSIFICATION	INSTANCE VARIABLE
WITHOUT_CLASSIFICATION	Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])
WITHOUT_CLASSIFICATION	MRI: block_append
WITHOUT_CLASSIFICATION	Reduces overhead in interp by not set position every single line we encounter.
WITHOUT_CLASSIFICATION	Assumption: tail is never a list node
WITHOUT_CLASSIFICATION	return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));
WITHOUT_CLASSIFICATION	Node
WITHOUT_CLASSIFICATION	FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518
WITHOUT_CLASSIFICATION	case CONSTNODE: handleUselessWarn(node, "a constant"); return;
WITHOUT_CLASSIFICATION	FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518
WITHOUT_CLASSIFICATION	case CLASSNODE: case COLON2NODE: handleUselessWarn(node, "::"); return;
WITHOUT_CLASSIFICATION	case SELFNODE: handleUselessWarn(node, "self"); return;
WITHOUT_CLASSIFICATION	FIXME: DSTR,EVSTR,STR: warning "string literal in condition"
WITHOUT_CLASSIFICATION	MRI: range_op
WITHOUT_CLASSIFICATION	Block and block pass passed in at same time....uh oh
WITHOUT_CLASSIFICATION	foo()
WITHOUT_CLASSIFICATION	foo()
WITHOUT_CLASSIFICATION	foo()
WITHOUT_CLASSIFICATION	tail must be EvStrNode at this point
WITHOUT_CLASSIFICATION	Do not add an empty string node
WITHOUT_CLASSIFICATION	Zero-Argument declaration
WITHOUT_CLASSIFICATION	yyLhs 542
WITHOUT_CLASSIFICATION	yyLhs 542
WITHOUT_CLASSIFICATION	yyLhs 542
WITHOUT_CLASSIFICATION	yyLhs 542
WITHOUT_CLASSIFICATION	yyLhs 542
WITHOUT_CLASSIFICATION	yyLhs 542
WITHOUT_CLASSIFICATION	yyLen 542
WITHOUT_CLASSIFICATION	yyLen 542
WITHOUT_CLASSIFICATION	yyLen 542
WITHOUT_CLASSIFICATION	yyLen 542
WITHOUT_CLASSIFICATION	yyLen 542
WITHOUT_CLASSIFICATION	yyDefRed 945
WITHOUT_CLASSIFICATION	yyDefRed 945
WITHOUT_CLASSIFICATION	yyDefRed 945
WITHOUT_CLASSIFICATION	yyDefRed 945
WITHOUT_CLASSIFICATION	yyDefRed 945
WITHOUT_CLASSIFICATION	yyDgoto 152
WITHOUT_CLASSIFICATION	yyDgoto 152
WITHOUT_CLASSIFICATION	yyDgoto 152
WITHOUT_CLASSIFICATION	yyDgoto 152
WITHOUT_CLASSIFICATION	yyDgoto 152
WITHOUT_CLASSIFICATION	yyDgoto 152
WITHOUT_CLASSIFICATION	yySindex 945
WITHOUT_CLASSIFICATION	yySindex 945
WITHOUT_CLASSIFICATION	yySindex 945
WITHOUT_CLASSIFICATION	yySindex 945
WITHOUT_CLASSIFICATION	yySindex 945
WITHOUT_CLASSIFICATION	yyRindex 945
WITHOUT_CLASSIFICATION	yyRindex 945
WITHOUT_CLASSIFICATION	yyRindex 945
WITHOUT_CLASSIFICATION	yyRindex 945
WITHOUT_CLASSIFICATION	yyRindex 945
WITHOUT_CLASSIFICATION	yyGindex 152
WITHOUT_CLASSIFICATION	yyGindex 152
WITHOUT_CLASSIFICATION	yyGindex 152
WITHOUT_CLASSIFICATION	yyGindex 152
WITHOUT_CLASSIFICATION	yyGindex 152
WITHOUT_CLASSIFICATION	dynamically increase
WITHOUT_CLASSIFICATION	else [default] reduce (yyN)
WITHOUT_CLASSIFICATION	shift to yyN
WITHOUT_CLASSIFICATION	reduce (yyN)
WITHOUT_CLASSIFICATION	leave stack alone
WITHOUT_CLASSIFICATION	line 321
WITHOUT_CLASSIFICATION	line 351
WITHOUT_CLASSIFICATION	line 382
WITHOUT_CLASSIFICATION	line 417
WITHOUT_CLASSIFICATION	line 420
WITHOUT_CLASSIFICATION	line 423
WITHOUT_CLASSIFICATION	line 426
WITHOUT_CLASSIFICATION	line 280
WITHOUT_CLASSIFICATION	line 283
WITHOUT_CLASSIFICATION	line 296
WITHOUT_CLASSIFICATION	line 324
WITHOUT_CLASSIFICATION	line 327
WITHOUT_CLASSIFICATION	line 331
WITHOUT_CLASSIFICATION	line 333
WITHOUT_CLASSIFICATION	line 336
WITHOUT_CLASSIFICATION	line 342
WITHOUT_CLASSIFICATION	line 345
WITHOUT_CLASSIFICATION	line 348
WITHOUT_CLASSIFICATION	line 354
WITHOUT_CLASSIFICATION	line 368
WITHOUT_CLASSIFICATION	line 377
WITHOUT_CLASSIFICATION	line 388
WITHOUT_CLASSIFICATION	line 392
WITHOUT_CLASSIFICATION	line 397
WITHOUT_CLASSIFICATION	line 429
WITHOUT_CLASSIFICATION	line 432
WITHOUT_CLASSIFICATION	line 436
WITHOUT_CLASSIFICATION	line 445
WITHOUT_CLASSIFICATION	line 448
WITHOUT_CLASSIFICATION	line 454
WITHOUT_CLASSIFICATION	line 459
WITHOUT_CLASSIFICATION	line 466
WITHOUT_CLASSIFICATION	line 469
WITHOUT_CLASSIFICATION	line 478
WITHOUT_CLASSIFICATION	line 481
WITHOUT_CLASSIFICATION	line 488
WITHOUT_CLASSIFICATION	line 494
WITHOUT_CLASSIFICATION	line 497
WITHOUT_CLASSIFICATION	line 503
WITHOUT_CLASSIFICATION	line 506
WITHOUT_CLASSIFICATION	line 509
WITHOUT_CLASSIFICATION	line 512
WITHOUT_CLASSIFICATION	line 521
WITHOUT_CLASSIFICATION	line 526
WITHOUT_CLASSIFICATION	line 540
WITHOUT_CLASSIFICATION	line 543
WITHOUT_CLASSIFICATION	line 546
WITHOUT_CLASSIFICATION	line 566
WITHOUT_CLASSIFICATION	line 610
WITHOUT_CLASSIFICATION	line 672
WITHOUT_CLASSIFICATION	line 691
WITHOUT_CLASSIFICATION	line 696
WITHOUT_CLASSIFICATION	line 772
WITHOUT_CLASSIFICATION	line 782
WITHOUT_CLASSIFICATION	line 785
WITHOUT_CLASSIFICATION	line 788
WITHOUT_CLASSIFICATION	line 791
WITHOUT_CLASSIFICATION	line 534
WITHOUT_CLASSIFICATION	line 549
WITHOUT_CLASSIFICATION	line 552
WITHOUT_CLASSIFICATION	line 558
WITHOUT_CLASSIFICATION	line 561
WITHOUT_CLASSIFICATION	line 571
WITHOUT_CLASSIFICATION	line 574
WITHOUT_CLASSIFICATION	line 579
WITHOUT_CLASSIFICATION	line 586
WITHOUT_CLASSIFICATION	line 589
WITHOUT_CLASSIFICATION	line 592
WITHOUT_CLASSIFICATION	line 595
WITHOUT_CLASSIFICATION	line 598
WITHOUT_CLASSIFICATION	line 623
WITHOUT_CLASSIFICATION	line 627
WITHOUT_CLASSIFICATION	line 630
WITHOUT_CLASSIFICATION	line 633
WITHOUT_CLASSIFICATION	line 639
WITHOUT_CLASSIFICATION	line 648
WITHOUT_CLASSIFICATION	line 657
WITHOUT_CLASSIFICATION	line 661
WITHOUT_CLASSIFICATION	line 666
WITHOUT_CLASSIFICATION	line 678
WITHOUT_CLASSIFICATION	line 682
WITHOUT_CLASSIFICATION	line 688
WITHOUT_CLASSIFICATION	line 699
WITHOUT_CLASSIFICATION	line 706
WITHOUT_CLASSIFICATION	line 708
WITHOUT_CLASSIFICATION	line 727
WITHOUT_CLASSIFICATION	line 737
WITHOUT_CLASSIFICATION	line 753
WITHOUT_CLASSIFICATION	line 779
WITHOUT_CLASSIFICATION	line 801
WITHOUT_CLASSIFICATION	line 808
WITHOUT_CLASSIFICATION	line 811
WITHOUT_CLASSIFICATION	line 817
WITHOUT_CLASSIFICATION	line 842
WITHOUT_CLASSIFICATION	line 845
WITHOUT_CLASSIFICATION	line 848
WITHOUT_CLASSIFICATION	line 893
WITHOUT_CLASSIFICATION	line 899
WITHOUT_CLASSIFICATION	line 932
WITHOUT_CLASSIFICATION	line 944
WITHOUT_CLASSIFICATION	line 960
WITHOUT_CLASSIFICATION	line 980
WITHOUT_CLASSIFICATION	line 1004
WITHOUT_CLASSIFICATION	line 1038
WITHOUT_CLASSIFICATION	line 820
WITHOUT_CLASSIFICATION	line 826
WITHOUT_CLASSIFICATION	line 829
WITHOUT_CLASSIFICATION	line 832
WITHOUT_CLASSIFICATION	line 851
WITHOUT_CLASSIFICATION	line 857
WITHOUT_CLASSIFICATION	line 860
WITHOUT_CLASSIFICATION	line 863
WITHOUT_CLASSIFICATION	line 866
WITHOUT_CLASSIFICATION	line 869
WITHOUT_CLASSIFICATION	line 875
WITHOUT_CLASSIFICATION	line 884
WITHOUT_CLASSIFICATION	line 887
WITHOUT_CLASSIFICATION	line 890
WITHOUT_CLASSIFICATION	line 902
WITHOUT_CLASSIFICATION	line 909
WITHOUT_CLASSIFICATION	line 912
WITHOUT_CLASSIFICATION	line 916
WITHOUT_CLASSIFICATION	line 922
WITHOUT_CLASSIFICATION	line 928
WITHOUT_CLASSIFICATION	line 941
WITHOUT_CLASSIFICATION	line 947
WITHOUT_CLASSIFICATION	line 951
WITHOUT_CLASSIFICATION	line 955
WITHOUT_CLASSIFICATION	line 965
WITHOUT_CLASSIFICATION	line 969
WITHOUT_CLASSIFICATION	line 977
WITHOUT_CLASSIFICATION	line 983
WITHOUT_CLASSIFICATION	line 1013
WITHOUT_CLASSIFICATION	line 1023
WITHOUT_CLASSIFICATION	line 1035
WITHOUT_CLASSIFICATION	line 1041
WITHOUT_CLASSIFICATION	line 1043
WITHOUT_CLASSIFICATION	line 1054
WITHOUT_CLASSIFICATION	line 1057
WITHOUT_CLASSIFICATION	line 1060
WITHOUT_CLASSIFICATION	line 1069
WITHOUT_CLASSIFICATION	line 1075
WITHOUT_CLASSIFICATION	line 1105
WITHOUT_CLASSIFICATION	line 1111
WITHOUT_CLASSIFICATION	line 1122
WITHOUT_CLASSIFICATION	line 1130
WITHOUT_CLASSIFICATION	line 1140
WITHOUT_CLASSIFICATION	line 1158
WITHOUT_CLASSIFICATION	line 1204
WITHOUT_CLASSIFICATION	line 1207
WITHOUT_CLASSIFICATION	line 1247
WITHOUT_CLASSIFICATION	line 1251
WITHOUT_CLASSIFICATION	line 1261
WITHOUT_CLASSIFICATION	line 1078
WITHOUT_CLASSIFICATION	line 1084
WITHOUT_CLASSIFICATION	line 1087
WITHOUT_CLASSIFICATION	line 1090
WITHOUT_CLASSIFICATION	line 1093
WITHOUT_CLASSIFICATION	line 1114
WITHOUT_CLASSIFICATION	line 1116
WITHOUT_CLASSIFICATION	line 1118
WITHOUT_CLASSIFICATION	line 1124
WITHOUT_CLASSIFICATION	line 1126
WITHOUT_CLASSIFICATION	line 1138
WITHOUT_CLASSIFICATION	line 1144
WITHOUT_CLASSIFICATION	line 1149
WITHOUT_CLASSIFICATION	line 1155
WITHOUT_CLASSIFICATION	line 1162
WITHOUT_CLASSIFICATION	line 1173
WITHOUT_CLASSIFICATION	line 1179
WITHOUT_CLASSIFICATION	line 1182
WITHOUT_CLASSIFICATION	line 1190
WITHOUT_CLASSIFICATION	line 1196
WITHOUT_CLASSIFICATION	line 1213
WITHOUT_CLASSIFICATION	line 1217
WITHOUT_CLASSIFICATION	line 1231
WITHOUT_CLASSIFICATION	line 1236
WITHOUT_CLASSIFICATION	line 1244
WITHOUT_CLASSIFICATION	line 1254
WITHOUT_CLASSIFICATION	line 1258
WITHOUT_CLASSIFICATION	line 1264
WITHOUT_CLASSIFICATION	line 1270
WITHOUT_CLASSIFICATION	line 1273
WITHOUT_CLASSIFICATION	line 1276
WITHOUT_CLASSIFICATION	line 1279
WITHOUT_CLASSIFICATION	line 1282
WITHOUT_CLASSIFICATION	line 1289
WITHOUT_CLASSIFICATION	line 1292
WITHOUT_CLASSIFICATION	line 1295
WITHOUT_CLASSIFICATION	line 1298
WITHOUT_CLASSIFICATION	line 1305
WITHOUT_CLASSIFICATION	line 1348
WITHOUT_CLASSIFICATION	line 1387
WITHOUT_CLASSIFICATION	line 1392
WITHOUT_CLASSIFICATION	line 1448
WITHOUT_CLASSIFICATION	line 1462
WITHOUT_CLASSIFICATION	line 1470
WITHOUT_CLASSIFICATION	line 1496
WITHOUT_CLASSIFICATION	line 1502
WITHOUT_CLASSIFICATION	line 1595
WITHOUT_CLASSIFICATION	line 1598
WITHOUT_CLASSIFICATION	line 1308
WITHOUT_CLASSIFICATION	line 1311
WITHOUT_CLASSIFICATION	line 1317
WITHOUT_CLASSIFICATION	line 1323
WITHOUT_CLASSIFICATION	line 1326
WITHOUT_CLASSIFICATION	line 1329
WITHOUT_CLASSIFICATION	line 1337
WITHOUT_CLASSIFICATION	line 1342
WITHOUT_CLASSIFICATION	line 1345
WITHOUT_CLASSIFICATION	line 1354
WITHOUT_CLASSIFICATION	line 1359
WITHOUT_CLASSIFICATION	line 1366
WITHOUT_CLASSIFICATION	line 1369
WITHOUT_CLASSIFICATION	line 1373
WITHOUT_CLASSIFICATION	line 1377
WITHOUT_CLASSIFICATION	line 1383
WITHOUT_CLASSIFICATION	line 1399
WITHOUT_CLASSIFICATION	line 1401
WITHOUT_CLASSIFICATION	line 1406
WITHOUT_CLASSIFICATION	line 1417
WITHOUT_CLASSIFICATION	line 1424
WITHOUT_CLASSIFICATION	line 1427
WITHOUT_CLASSIFICATION	line 1430
WITHOUT_CLASSIFICATION	line 1433
WITHOUT_CLASSIFICATION	line 1436
WITHOUT_CLASSIFICATION	line 1442
WITHOUT_CLASSIFICATION	line 1445
WITHOUT_CLASSIFICATION	line 1458
WITHOUT_CLASSIFICATION	line 1464
WITHOUT_CLASSIFICATION	line 1489
WITHOUT_CLASSIFICATION	line 1493
WITHOUT_CLASSIFICATION	line 1507
WITHOUT_CLASSIFICATION	line 1519
WITHOUT_CLASSIFICATION	line 1532
WITHOUT_CLASSIFICATION	line 1538
WITHOUT_CLASSIFICATION	line 1542
WITHOUT_CLASSIFICATION	line 1557
WITHOUT_CLASSIFICATION	line 1573
WITHOUT_CLASSIFICATION	line 1591
WITHOUT_CLASSIFICATION	line 1615
WITHOUT_CLASSIFICATION	line 1629
WITHOUT_CLASSIFICATION	line 1632
WITHOUT_CLASSIFICATION	line 1705
WITHOUT_CLASSIFICATION	line 1716
WITHOUT_CLASSIFICATION	line 1725
WITHOUT_CLASSIFICATION	line 1742
WITHOUT_CLASSIFICATION	line 1749
WITHOUT_CLASSIFICATION	line 1818
WITHOUT_CLASSIFICATION	line 1822
WITHOUT_CLASSIFICATION	line 1607
WITHOUT_CLASSIFICATION	line 1610
WITHOUT_CLASSIFICATION	line 1622
WITHOUT_CLASSIFICATION	line 1625
WITHOUT_CLASSIFICATION	line 1636
WITHOUT_CLASSIFICATION	line 1639
WITHOUT_CLASSIFICATION	line 1647
WITHOUT_CLASSIFICATION	line 1651
WITHOUT_CLASSIFICATION	line 1657
WITHOUT_CLASSIFICATION	line 1660
WITHOUT_CLASSIFICATION	line 1663
WITHOUT_CLASSIFICATION	line 1678
WITHOUT_CLASSIFICATION	line 1702
WITHOUT_CLASSIFICATION	line 1711
WITHOUT_CLASSIFICATION	line 1719
WITHOUT_CLASSIFICATION	line 1722
WITHOUT_CLASSIFICATION	line 1731
WITHOUT_CLASSIFICATION	line 1734
WITHOUT_CLASSIFICATION	line 1738
WITHOUT_CLASSIFICATION	line 1746
WITHOUT_CLASSIFICATION	line 1756
WITHOUT_CLASSIFICATION	line 1758
WITHOUT_CLASSIFICATION	line 1761
WITHOUT_CLASSIFICATION	line 1767
WITHOUT_CLASSIFICATION	line 1776
WITHOUT_CLASSIFICATION	line 1782
WITHOUT_CLASSIFICATION	line 1785
WITHOUT_CLASSIFICATION	line 1788
WITHOUT_CLASSIFICATION	line 1791
WITHOUT_CLASSIFICATION	line 1797
WITHOUT_CLASSIFICATION	line 1800
WITHOUT_CLASSIFICATION	line 1803
WITHOUT_CLASSIFICATION	line 1806
WITHOUT_CLASSIFICATION	line 1809
WITHOUT_CLASSIFICATION	line 1815
WITHOUT_CLASSIFICATION	line 1825
WITHOUT_CLASSIFICATION	line 1828
WITHOUT_CLASSIFICATION	line 1831
WITHOUT_CLASSIFICATION	line 1847
WITHOUT_CLASSIFICATION	$8 == null ? NilImplicitNode.NIL : $8;
WITHOUT_CLASSIFICATION	$5 == null ? NilImplicitNode.NIL : $5;
WITHOUT_CLASSIFICATION	.setPosFrom($2);
WITHOUT_CLASSIFICATION	zero length array
WITHOUT_CLASSIFICATION	DStrNode: :"some text #{some expression}"
WITHOUT_CLASSIFICATION	StrNode: :"some text"
WITHOUT_CLASSIFICATION	EvStrNode :"#{some expression}"
WITHOUT_CLASSIFICATION	INSTANCE VARIABLE METHODS
WITHOUT_CLASSIFICATION	line 1854
WITHOUT_CLASSIFICATION	line 1869
WITHOUT_CLASSIFICATION	line 1872
WITHOUT_CLASSIFICATION	line 1877
WITHOUT_CLASSIFICATION	line 1886
WITHOUT_CLASSIFICATION	line 1898
WITHOUT_CLASSIFICATION	line 1902
WITHOUT_CLASSIFICATION	line 1905
WITHOUT_CLASSIFICATION	line 1911
WITHOUT_CLASSIFICATION	line 1918
WITHOUT_CLASSIFICATION	line 1935
WITHOUT_CLASSIFICATION	line 1938
WITHOUT_CLASSIFICATION	line 1942
WITHOUT_CLASSIFICATION	line 1948
WITHOUT_CLASSIFICATION	line 1960
WITHOUT_CLASSIFICATION	line 1963
WITHOUT_CLASSIFICATION	line 1968
WITHOUT_CLASSIFICATION	line 1972
WITHOUT_CLASSIFICATION	line 1982
WITHOUT_CLASSIFICATION	line 1995
WITHOUT_CLASSIFICATION	line 2000
WITHOUT_CLASSIFICATION	line 2006
WITHOUT_CLASSIFICATION	line 2010
WITHOUT_CLASSIFICATION	We may need to subtract addition offset off of first
WITHOUT_CLASSIFICATION	string fragment (we optimistically take one off in
WITHOUT_CLASSIFICATION	ParserSupport.literal_concat). Check token length
WITHOUT_CLASSIFICATION	and subtract as neeeded.
WITHOUT_CLASSIFICATION	$$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);
WITHOUT_CLASSIFICATION	ENEBO: arg surrounded by in_defined set/unset
WITHOUT_CLASSIFICATION	ignore, no debugger present
WITHOUT_CLASSIFICATION	yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));
WITHOUT_CLASSIFICATION	mark as captured if from containing scope
WITHOUT_CLASSIFICATION	mark as captured if from containing scope
WITHOUT_CLASSIFICATION	ENEBO: Removed !compile_for_eval which probably is to reduce warnings
WITHOUT_CLASSIFICATION	was $$ = null;
WITHOUT_CLASSIFICATION	line 2019 "Ruby19Parser.y"
WITHOUT_CLASSIFICATION	line 8143 "-"
WITHOUT_CLASSIFICATION	we know variables cannot be null since localstaticscope will create a 0 length one.
WITHOUT_CLASSIFICATION	No bit math to store level since we know level is zero for this case
WITHOUT_CLASSIFICATION	Next immediate scope. Variable and constant scoping rules make use of this variable in different ways.
WITHOUT_CLASSIFICATION	Live reference to module
WITHOUT_CLASSIFICATION	Next CRef down the lexical structure
WITHOUT_CLASSIFICATION	Our name holder (offsets are assigned as variables are added
WITHOUT_CLASSIFICATION	number of variables in this scope representing required arguments
WITHOUT_CLASSIFICATION	number of variables in this scope representing optional arguments
WITHOUT_CLASSIFICATION	index of variable that represents a "rest" arg
WITHOUT_CLASSIFICATION	Note that this object equality check is intentional, to ensure the string and its interned version are the same object.
WITHOUT_CLASSIFICATION	Returns slot of variable
WITHOUT_CLASSIFICATION	Returns slot of variable
WITHOUT_CLASSIFICATION	Note: Only used by compiler until it can use getConstant again or use some other refactoring
WITHOUT_CLASSIFICATION	If we could not find the constant from cref..then try getting from inheritence hierarchy
WITHOUT_CLASSIFICATION	Try and unload the autoload specified from internedName
WITHOUT_CLASSIFICATION	We override that the logic which uses this
WITHOUT_CLASSIFICATION	This while loop is for restarting the block call in case a 'redo' fires.
WITHOUT_CLASSIFICATION	do nothing, allow loop to redo
WITHOUT_CLASSIFICATION	source extensions
WITHOUT_CLASSIFICATION	do nothing, allow loop to redo
WITHOUT_CLASSIFICATION	. Array given to rest should pass itself . Array with rest + other args should extract array . Array with multiple values and NO rest should extract args if there are more than one argument
WITHOUT_CLASSIFICATION	A 'next' is like a local return from the block, ending this call or yield.
WITHOUT_CLASSIFICATION	Is this thread currently with in a function trace?
WITHOUT_CLASSIFICATION	Is this thread currently doing an defined? defined should set things like $!
WITHOUT_CLASSIFICATION	private UnsynchronizedStack parentStack;
WITHOUT_CLASSIFICATION	private UnsynchronizedStack frameStack;
WITHOUT_CLASSIFICATION	List of active dynamic scopes. Each of these may have captured other dynamic scopes to implement closures.
WITHOUT_CLASSIFICATION	File where current executing unit is being evaluated
WITHOUT_CLASSIFICATION	Line where current executing unit is being evaluated
WITHOUT_CLASSIFICATION	In certain places, like grep, we don't use real frames for the call blocks. This has the effect of not setting the backref in the correct frame - this delta is activated to the place where the grep is running in so that the backref will be set in an appropriate place.
WITHOUT_CLASSIFICATION	TOPLEVEL self and a few others want a top-level scope. We create this one right away and then pass it into top-level parse so it ends up being the top level.
WITHOUT_CLASSIFICATION	CATCH MANAGEMENT
WITHOUT_CLASSIFICATION	FRAME MANAGEMENT
WITHOUT_CLASSIFICATION	happens with native exceptions, should not filter those out
WITHOUT_CLASSIFICATION	assert level == 0;
WITHOUT_CLASSIFICATION	assert level == 0;
WITHOUT_CLASSIFICATION	look for mangling markers for compiled Ruby in method name
WITHOUT_CLASSIFICATION	if it's not a rescue or ensure, there's a frame associated, so decrement
WITHOUT_CLASSIFICATION	look for __file__ method name for compiled roots
WITHOUT_CLASSIFICATION	All entries following removed node can stay in list, but all preceding ones need to be cloned.
WITHOUT_CLASSIFICATION	required and optional only
WITHOUT_CLASSIFICATION	do nothing, allow loop to redo
WITHOUT_CLASSIFICATION	look for mangling markers for bound, unframed methods in class name
WITHOUT_CLASSIFICATION	set the binding's frame's "previous" file and line to current, so trace will show who called the block
WITHOUT_CLASSIFICATION	framed invokers will have Ruby frames associated with them
WITHOUT_CLASSIFICATION	look for mangling markers for bound, framed methods in class name
WITHOUT_CLASSIFICATION	unframed invokers have no Ruby frames, so pull from class name but use current frame as file and line
WITHOUT_CLASSIFICATION	try to mine out a Ruby frame using our list of interpreter entry-point markers
WITHOUT_CLASSIFICATION	Frame matches one of our markers for "interpreted" calls
WITHOUT_CLASSIFICATION	Frame is extraneous runtime information, skip it unless debug
WITHOUT_CLASSIFICATION	Determine what sort of assigner should be used for the provided 'iter' (e.g. block). Assigner provides just the right logic for assigning values to local parameters of the block. This method also has a second optimization which is to set 'noargblock' in the case that the block is a block which accepts no arguments. The primary reason for this second optimization is that in the case of a yield with a RubyArray we will bypass some logic processing the RubyArray into a proper form (only to then not do anythign with it). A secondary benefit is that a simple boolean seems to optimize by hotspot much faster than the zero arg assigner.
WITHOUT_CLASSIFICATION	new scope for this invocation of the block, based on parent scope
WITHOUT_CLASSIFICATION	No argument blocks
WITHOUT_CLASSIFICATION	just push the same empty scope, since we won't use one
WITHOUT_CLASSIFICATION	Not sure if this is actually possible, but better safe than sorry
WITHOUT_CLASSIFICATION	rest arg must be splatted
WITHOUT_CLASSIFICATION	This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).
WITHOUT_CLASSIFICATION	Highest reserved id
WITHOUT_CLASSIFICATION	binary typed calls
WITHOUT_CLASSIFICATION	id must always be even
WITHOUT_CLASSIFICATION	with block pass
WITHOUT_CLASSIFICATION	no block
WITHOUT_CLASSIFICATION	with block literal (iter)
WITHOUT_CLASSIFICATION	assert false : "can this happen?";
WITHOUT_CLASSIFICATION	if we have multiple asgn with just args, need a special type for that
WITHOUT_CLASSIFICATION	&& args.getMaxArgumentsCount() != 1) {
WITHOUT_CLASSIFICATION	return warnMultiReturnNil(ruby);
WITHOUT_CLASSIFICATION	ensure zero is devoted to no method name
WITHOUT_CLASSIFICATION	predefine a few other methods we invoke directly elsewhere
WITHOUT_CLASSIFICATION	fast and safe respond_to? call site logic
WITHOUT_CLASSIFICATION	Static scoping information for this scope
WITHOUT_CLASSIFICATION	Captured dynamic scopes
WITHOUT_CLASSIFICATION	Backref for $~, $1, etc
WITHOUT_CLASSIFICATION	Lastline
WITHOUT_CLASSIFICATION	No binding scope so we should create one
WITHOUT_CLASSIFICATION	bindings scopes must always be ManyVars scopes since evals can grow them
WITHOUT_CLASSIFICATION	Helper function to give a good view of current dynamic scope with captured scopes
WITHOUT_CLASSIFICATION	try count specific args to determine required
WITHOUT_CLASSIFICATION	Some helper functions:
WITHOUT_CLASSIFICATION	silently ignore
WITHOUT_CLASSIFICATION	used by compiler
WITHOUT_CLASSIFICATION	initialize the static settings to determine which factory to use
WITHOUT_CLASSIFICATION	INSTANCE VARIABLE METHODS
WITHOUT_CLASSIFICATION	We need to guarantee that any existing reads of old Map can proceed. So we cannot yet null out each bin.
WITHOUT_CLASSIFICATION	Single node on list
WITHOUT_CLASSIFICATION	Reuse trailing consecutive sequence at same slot
WITHOUT_CLASSIFICATION	Clone all remaining nodes
WITHOUT_CLASSIFICATION	A 'next' is like a local return from the block, ending this call or yield.
WITHOUT_CLASSIFICATION	Note: In Ruby 1.9 all of this logic can go away since they will require explicit bindings for evals.
WITHOUT_CLASSIFICATION	We only define one special dynamic scope per 'logical' binding. So all bindings for the same scope should share the same dynamic scope. This allows multiple evals with different different bindings in the same scope to see the same stuff.
WITHOUT_CLASSIFICATION	If the next scope out has the same binding scope as this scope it means we are evaling within an eval and in that case we should be sharing the same binding scope.
WITHOUT_CLASSIFICATION	Populate up to shorter of calling arguments or local parameters in the block
WITHOUT_CLASSIFICATION	Populate up to shorter of calling arguments or local parameters in the block
WITHOUT_CLASSIFICATION	nil pad since we provided less values than block parms
WITHOUT_CLASSIFICATION	nil pad since we provided less values than block parms
WITHOUT_CLASSIFICATION	nil pad since we provided less values than block parms
WITHOUT_CLASSIFICATION	no extra args for rest
WITHOUT_CLASSIFICATION	no extra args for rest
WITHOUT_CLASSIFICATION	extra args for rest
WITHOUT_CLASSIFICATION	extra args for rest
WITHOUT_CLASSIFICATION	This is the proper behavior for all non-expanded assigners which have a pre > 0. The rest override this.
WITHOUT_CLASSIFICATION	This is the proper behavior for all non-expanded assigners.
WITHOUT_CLASSIFICATION	prefill ?
WITHOUT_CLASSIFICATION	prefill ?
WITHOUT_CLASSIFICATION	MUST be called from synchronized/locked block! should only be called by variableTableStore/variableTableFastStore
WITHOUT_CLASSIFICATION	retrieve method module name
WITHOUT_CLASSIFICATION	call is ok, punch it!
WITHOUT_CLASSIFICATION	if undefined, branch to method_missing
WITHOUT_CLASSIFICATION	if we're not attempting to invoke method_missing and method is not visible, branch to method_missing
WITHOUT_CLASSIFICATION	method object already present, push various args tc self klazz name
WITHOUT_CLASSIFICATION	if it's method_missing, just invoke it
WITHOUT_CLASSIFICATION	invoke callMethodMissing
WITHOUT_CLASSIFICATION	caller
WITHOUT_CLASSIFICATION	calltype block
WITHOUT_CLASSIFICATION	if no exception raised, jump to end to leave result on stack for return
WITHOUT_CLASSIFICATION	load arity for check
WITHOUT_CLASSIFICATION	throw
WITHOUT_CLASSIFICATION	load arity for error
WITHOUT_CLASSIFICATION	arity ok, continue
WITHOUT_CLASSIFICATION	InvocationCallbackFactory
WITHOUT_CLASSIFICATION	ENEBO: Perhaps slow but simple for now
WITHOUT_CLASSIFICATION	FastInvocationCallback
WITHOUT_CLASSIFICATION	InvocationCallback
WITHOUT_CLASSIFICATION	DumpingInvocationCallbackFactory
WITHOUT_CLASSIFICATION	for fast lookup: encoding entry => org.jruby.RubyEncoding
WITHOUT_CLASSIFICATION	for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding
WITHOUT_CLASSIFICATION	load the encoding
WITHOUT_CLASSIFICATION	IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String
WITHOUT_CLASSIFICATION	IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String
WITHOUT_CLASSIFICATION	IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String
WITHOUT_CLASSIFICATION	IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject
WITHOUT_CLASSIFICATION	IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject
WITHOUT_CLASSIFICATION	IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject
WITHOUT_CLASSIFICATION	IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject
WITHOUT_CLASSIFICATION	IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject
WITHOUT_CLASSIFICATION	IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs
WITHOUT_CLASSIFICATION	BreakJump, ThreadContext
WITHOUT_CLASSIFICATION	ThreadContext
WITHOUT_CLASSIFICATION	BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject
WITHOUT_CLASSIFICATION	Make Java class files in the jar reachable from Ruby
WITHOUT_CLASSIFICATION	RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject
WITHOUT_CLASSIFICATION	add all startup load paths to the list first
WITHOUT_CLASSIFICATION	if it's a compiled JRuby script, instantiate and run it
WITHOUT_CLASSIFICATION	wrap in try/catch for security exceptions in an applet
WITHOUT_CLASSIFICATION	add $RUBYLIB paths
WITHOUT_CLASSIFICATION	Empty paths do not need to be added
WITHOUT_CLASSIFICATION	"." dir is used for relative path loads from a given file, as in require '../foo/bar'
WITHOUT_CLASSIFICATION	Add 1.8 libs
WITHOUT_CLASSIFICATION	Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.
WITHOUT_CLASSIFICATION	Library has already been loaded in some form, bail out
WITHOUT_CLASSIFICATION	We don't want a package name beginning with dots, so we remove them
WITHOUT_CLASSIFICATION	If there is a jar-file with the required name, we add this to the class path.
WITHOUT_CLASSIFICATION	quietly try to load the class
WITHOUT_CLASSIFICATION	If there was a good library before, we go back to that
WITHOUT_CLASSIFICATION	no library or extension found, try to load directly as a class
WITHOUT_CLASSIFICATION	if an extension is specified, try more targetted searches
WITHOUT_CLASSIFICATION	signed short, big-endian
WITHOUT_CLASSIFICATION	source extensions
WITHOUT_CLASSIFICATION	We don't support .so, but some stdlib require .so directly replace it with .jar to look for an extension type we do support
WITHOUT_CLASSIFICATION	This code exploits the fact that all .jar files will be found for the JarredScript feature. This is where the basic extension mechanism gets fixed
WITHOUT_CLASSIFICATION	Make the class name look nice, by splitting on _ and capitalize each segment, then joining the, together without anything separating them, and last put on "Service" at the end.
WITHOUT_CLASSIFICATION	It's _really_ expensive to check that the class actually exists in the Jar, so we don't do that now.
WITHOUT_CLASSIFICATION	trim extension to try other options
WITHOUT_CLASSIFICATION	extension extensions
WITHOUT_CLASSIFICATION	unknown extension, fall back to search with extensions
WITHOUT_CLASSIFICATION	try all extensions
WITHOUT_CLASSIFICATION	if a source extension is specified, try all source extensions
WITHOUT_CLASSIFICATION	unknown extension, fall back to exact search
WITHOUT_CLASSIFICATION	try only literal search
WITHOUT_CLASSIFICATION	attempt to load the found library
WITHOUT_CLASSIFICATION	otherwise load the library we've found
WITHOUT_CLASSIFICATION	allow MainExitException to propagate out for exec and friends
WITHOUT_CLASSIFICATION	Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".
WITHOUT_CLASSIFICATION	check current directory; if file exists, retrieve URL and return resource
WITHOUT_CLASSIFICATION	if a jar or file URL, return load service resource directly without further searching
WITHOUT_CLASSIFICATION	end suffix iteration
WITHOUT_CLASSIFICATION	if it's a ./ baseName, use CWD logic
WITHOUT_CLASSIFICATION	if given path is absolute, just try it as-is (with extensions) and no load path
WITHOUT_CLASSIFICATION	we check length == 0 for 'load', which does not use load path
WITHOUT_CLASSIFICATION	we check length == 0 for 'load', which does not use load path
WITHOUT_CLASSIFICATION	it's an absolute path, use it as-is
WITHOUT_CLASSIFICATION	it's an absolute path, use it as-is
WITHOUT_CLASSIFICATION	prepend ./ if . is not already there, since we're loading based on CWD
WITHOUT_CLASSIFICATION	prepend ./ if . is not already there, since we're loading based on CWD
WITHOUT_CLASSIFICATION	actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));
WITHOUT_CLASSIFICATION	handle security-sensitive case
WITHOUT_CLASSIFICATION	if entry is an empty string, skip it
WITHOUT_CLASSIFICATION	if entry starts with a slash, skip it since classloader resources never start with a /
WITHOUT_CLASSIFICATION	otherwise, try to load from classpath (Note: Jar resources always uses '/')
WITHOUT_CLASSIFICATION	Make sure this is not a directory or unavailable in some way
WITHOUT_CLASSIFICATION	signed short, native
WITHOUT_CLASSIFICATION	If we fail to find as a normal Ruby script, we try to find as an extension, checking for a builtin first.
WITHOUT_CLASSIFICATION	write `I' instance var signet if class is NOT a direct subclass of Object
WITHOUT_CLASSIFICATION	if name starts with a / we're done (classloader resources won't load with an initial /)
WITHOUT_CLASSIFICATION	Look in classpath next (we do not use File as a test since UNC names will match) Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")
WITHOUT_CLASSIFICATION	Directories and unavailable resources are not able to open a stream.
WITHOUT_CLASSIFICATION	Try to load from classpath without prefix. "A/b.rb" will not load as "./A/b.rb" in a jar file.
WITHOUT_CLASSIFICATION	object has instance vars and isn't a class, get a snapshot to be marshalled and output the ivar header here
WITHOUT_CLASSIFICATION	flush afer whole dump is complete
WITHOUT_CLASSIFICATION	write('S');
WITHOUT_CLASSIFICATION	switch on the object's native type. This allows use-defined classes that have extended core native types to piggyback on their marshalling logic.
WITHOUT_CLASSIFICATION	object is a custom class that extended one of the native types other than Object
WITHOUT_CLASSIFICATION	We do not want to capture cached methods
WITHOUT_CLASSIFICATION	w_symbol
WITHOUT_CLASSIFICATION	w_unique
WITHOUT_CLASSIFICATION	call the proc, but not for symbols
WITHOUT_CLASSIFICATION	Major Minor
WITHOUT_CLASSIFICATION	any ivars, since we don't have __attached__ ivar now
WITHOUT_CLASSIFICATION	"hashdef" object, a hash with a default
WITHOUT_CLASSIFICATION	All "C" marshalled objects descend from core classes, which are all RubyObject
WITHOUT_CLASSIFICATION	sic
WITHOUT_CLASSIFICATION	if we're not the "argument scope" for zsuper, try our parent
WITHOUT_CLASSIFICATION	if we're not the "argument scope" for zsuper, try our parent
WITHOUT_CLASSIFICATION	if we're not the "argument scope" for zsuper, try our parent
WITHOUT_CLASSIFICATION	copy and splat arguments out of the scope to use for zsuper call
WITHOUT_CLASSIFICATION	copy and splat arguments out of the scope to use for zsuper call
WITHOUT_CLASSIFICATION	rest arg must be splatted
WITHOUT_CLASSIFICATION	rest arg must be splatted
WITHOUT_CLASSIFICATION	If we are setting post arguments we can assume there are no pre or others
WITHOUT_CLASSIFICATION	XXX: 0xffff0000 on BE?
WITHOUT_CLASSIFICATION	unsigned short, native
WITHOUT_CLASSIFICATION	int, native long, native
WITHOUT_CLASSIFICATION	if we're not the "argument scope" for zsuper, try our parent
WITHOUT_CLASSIFICATION	if we're not the "argument scope" for zsuper, try our parent
WITHOUT_CLASSIFICATION	if we're not the "argument scope" for zsuper, try our parent
WITHOUT_CLASSIFICATION	copy and splat arguments out of the scope to use for zsuper call
WITHOUT_CLASSIFICATION	copy and splat arguments out of the scope to use for zsuper call
WITHOUT_CLASSIFICATION	copy and splat arguments out of the scope to use for zsuper call
WITHOUT_CLASSIFICATION	rest arg must be splatted
WITHOUT_CLASSIFICATION	rest arg must be splatted
WITHOUT_CLASSIFICATION	Look for slash, starting from 'start' position, until 'end'.
WITHOUT_CLASSIFICATION	Our values holder (name of variables are kept in staticScope)
WITHOUT_CLASSIFICATION	&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];
WITHOUT_CLASSIFICATION	&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];
WITHOUT_CLASSIFICATION	&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];
WITHOUT_CLASSIFICATION	&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];
WITHOUT_CLASSIFICATION	&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];
WITHOUT_CLASSIFICATION	SunSignalFacade
WITHOUT_CLASSIFICATION	All braces pushed..
WITHOUT_CLASSIFICATION	failed : try next recursion
WITHOUT_CLASSIFICATION	leftToken made us start as nest 1
WITHOUT_CLASSIFICATION	are we at ''
WITHOUT_CLASSIFICATION	No or mismatched braces..Move along..nothing to see here
WITHOUT_CLASSIFICATION	not enough bytes
WITHOUT_CLASSIFICATION	Get index of last read byte
WITHOUT_CLASSIFICATION	skip inner braces
WITHOUT_CLASSIFICATION	Process {}'s (example: Dir.glob("{jruby,jython}/README")
WITHOUT_CLASSIFICATION	complete, according to Posix.2
WITHOUT_CLASSIFICATION	Only accept an open brace if there is a close
WITHOUT_CLASSIFICATION	brace to match it. Bracket expressions must be
WITHOUT_CLASSIFICATION	index of left-most brace index of right-most brace
WITHOUT_CLASSIFICATION	Length check is a hack. We should not be reeiving "" as a filename ever.
WITHOUT_CLASSIFICATION	NOT REACHED HERE
WITHOUT_CLASSIFICATION	NOT REACHED HERE
WITHOUT_CLASSIFICATION	NOT REACHED HERE
WITHOUT_CLASSIFICATION	Pickaxe says @ must be followed by a name character, but MRI does not require this.
WITHOUT_CLASSIFICATION	Pickaxe says @@ must be followed by a name character, but MRI does not require this.
WITHOUT_CLASSIFICATION	SimpleSampler
WITHOUT_CLASSIFICATION	convert into longs, returning unsigned 64-bit values as signed longs ( num2long raises a RangeError on values > Long.MAX_VALUE )
WITHOUT_CLASSIFICATION	b64_xtable for decoding Base 64
WITHOUT_CLASSIFICATION	single precision, little-endian
WITHOUT_CLASSIFICATION	single precision, big-endian
WITHOUT_CLASSIFICATION	single precision, native
WITHOUT_CLASSIFICATION	single precision, native single precision, native
WITHOUT_CLASSIFICATION	double precision, little-endian
WITHOUT_CLASSIFICATION	double precision, big-endian
WITHOUT_CLASSIFICATION	double precision, native
WITHOUT_CLASSIFICATION	signed short, little-endian
WITHOUT_CLASSIFICATION	signed char
WITHOUT_CLASSIFICATION	unsigned char
WITHOUT_CLASSIFICATION	long, little-endian
WITHOUT_CLASSIFICATION	long, big-endian
WITHOUT_CLASSIFICATION	unsigned int, native
WITHOUT_CLASSIFICATION	int, native
WITHOUT_CLASSIFICATION	64-bit number, native (as fixnum)
WITHOUT_CLASSIFICATION	How many occurrences of 'type' we want
WITHOUT_CLASSIFICATION	See if we have a converter for the job...
WITHOUT_CLASSIFICATION	Otherwise the unpack should be here...
WITHOUT_CLASSIFICATION	Possible Checksum Byte
WITHOUT_CLASSIFICATION	obtain a
WITHOUT_CLASSIFICATION	obtain b
WITHOUT_CLASSIFICATION	obtain c
WITHOUT_CLASSIFICATION	obtain d
WITHOUT_CLASSIFICATION	encode.limit() -
WITHOUT_CLASSIFICATION	1
WITHOUT_CLASSIFICATION	2
WITHOUT_CLASSIFICATION	3
WITHOUT_CLASSIFICATION	4
WITHOUT_CLASSIFICATION	5
WITHOUT_CLASSIFICATION	6
WITHOUT_CLASSIFICATION	7
WITHOUT_CLASSIFICATION	Skip all whitespace in pack format string
WITHOUT_CLASSIFICATION	Skip embedded comments in pack format string
WITHOUT_CLASSIFICATION	In case when the number of occurences is explicitly specified, we have to read up the remaining garbage after the '\0' to satisfy the requested pattern.
WITHOUT_CLASSIFICATION	normal exit, this should be faster than a test at each iterations for string with more than about 40 char
WITHOUT_CLASSIFICATION	We encountered '\0' when were reading the buffer above, increment the number of read bytes.
WITHOUT_CLASSIFICATION	MRI behavior: Contrary to what seems to be logical, when '' is given, MRI calculates the distance to the end, in order to go backwards.
WITHOUT_CLASSIFICATION	Determine how many of type are needed (default: 1)
WITHOUT_CLASSIFICATION	'Z' adds extra null pad (versus 'a')
WITHOUT_CLASSIFICATION	if the low bit is set set the high bit of the result
WITHOUT_CLASSIFICATION	if the index is not a multiple of 8, we are not on a byte boundary shift the byte
WITHOUT_CLASSIFICATION	if the length is not a multiple of 8 we need to pad the last byte
WITHOUT_CLASSIFICATION	if the length is not a multiple of 8 we need to pad the last byte
WITHOUT_CLASSIFICATION	do some padding, I don't understand the padding strategy
WITHOUT_CLASSIFICATION	we filled up current byte; append it and create next one
WITHOUT_CLASSIFICATION	if the index is not a multiple of 8, we are not on a byte boundary
WITHOUT_CLASSIFICATION	this test may be too lax but it is the same as in MRI
WITHOUT_CLASSIFICATION	we don't deal with negatives.
WITHOUT_CLASSIFICATION	populate commandline with NG-provided stuff
WITHOUT_CLASSIFICATION	are we recursing?
WITHOUT_CLASSIFICATION	snip off ruby or jruby command from list of arguments leave alone if the command is the name of a script
WITHOUT_CLASSIFICATION	default PidGetter
WITHOUT_CLASSIFICATION	ignore and try windows version
WITHOUT_CLASSIFICATION	ignore and use hashcode
WITHOUT_CLASSIFICATION	ignore and use hashcode
WITHOUT_CLASSIFICATION	ignore and use hashcode
WITHOUT_CLASSIFICATION	ignore and use hashcode
WITHOUT_CLASSIFICATION	try both
WITHOUT_CLASSIFICATION	just unix
WITHOUT_CLASSIFICATION	just windows
WITHOUT_CLASSIFICATION	neither
WITHOUT_CLASSIFICATION	CON: popen is a case where I think we should just always shell out.
WITHOUT_CLASSIFICATION	single string command, pass to sh to expand wildcards
WITHOUT_CLASSIFICATION	direct invocation of the command
WITHOUT_CLASSIFICATION	break out if we've dug as deep as we can
WITHOUT_CLASSIFICATION	break out if we've dug as deep as we can
WITHOUT_CLASSIFICATION	close process output See JRUBY-3405; hooking up to parent process stdin caused problems for IRB etc using stdin.
WITHOUT_CLASSIFICATION	ignore, we're on the way out
WITHOUT_CLASSIFICATION	processes seem to have some peculiar locking sequences, so we need to ensure nobody is trying to close/destroy while we are
WITHOUT_CLASSIFICATION	popen callers wants to be able to read, provide subprocess in directly
WITHOUT_CLASSIFICATION	popen callers wants to be able to read, provide subprocess in directly
WITHOUT_CLASSIFICATION	popen caller wants to be able to write, provide subprocess out directly
WITHOUT_CLASSIFICATION	no read requested, hook up read to parents output
WITHOUT_CLASSIFICATION	no read requested, hook up read to parents output
WITHOUT_CLASSIFICATION	execute command with sh -c this does shell expansion of wildcards
WITHOUT_CLASSIFICATION	We need to close the out, since some processes would just wait for the stream to be closed before they process its content, and produce the output. E.g.: "cat".
WITHOUT_CLASSIFICATION	we only close out if it's the slave stream, to avoid closing a directly-mapped stream from parent process
WITHOUT_CLASSIFICATION	The assumption here is that the 'in' stream provides proper available() support. If available() always returns 0, we'll hang!
WITHOUT_CLASSIFICATION	Force t3 to quit, just in case if it's stuck. Note: On some platforms, even interrupt might not have an effect if the thread is IO blocked.
WITHOUT_CLASSIFICATION	Check for special shell characters [<>|] at the beginning and end of each command word and don't run in process if we find them.
WITHOUT_CLASSIFICATION	Note: this method produces meaningful results only for RubyIO objects. For everything else returns 0.
WITHOUT_CLASSIFICATION	sequential
WITHOUT_CLASSIFICATION	reverse the entire area of the array selected if it's reversed.
WITHOUT_CLASSIFICATION	do median of 7 if the array is over 200 elements.
WITHOUT_CLASSIFICATION	if it's less than 200 do median of 3
WITHOUT_CLASSIFICATION	SignalFacade
WITHOUT_CLASSIFICATION	this is the order in which MRI does these two tests
WITHOUT_CLASSIFICATION	this is the order in which MRI does these tests
WITHOUT_CLASSIFICATION	basically just forcing a TypeError here to match MRI
WITHOUT_CLASSIFICATION	not saving DFS instance, as it will only be used once (at most) per call
WITHOUT_CLASSIFICATION	Args
WITHOUT_CLASSIFICATION	static methods only
WITHOUT_CLASSIFICATION	System.err.println(" calculateLength()/str=" + str);
WITHOUT_CLASSIFICATION	MRI 1.8.6 behavior: null byte after '%' leads to "%" string. Null byte in other places, like "%5\0", leads to error.
WITHOUT_CLASSIFICATION	last index (+1) accessed by next() last index (+1) accessed by get()
WITHOUT_CLASSIFICATION	Special form of sprintf that returns a RubyString and handles tainted strings correctly.
WITHOUT_CLASSIFICATION	Special form of sprintf that returns a RubyString and handles tainted strings correctly. Version for 1.9.
WITHOUT_CLASSIFICATION	MRI doesn't flag it as an error if width is given multiple times as a number (but it does for )
WITHOUT_CLASSIFICATION	let the width (if any), get processed in the next loop, so any leading 0 gets treated correctly
WITHOUT_CLASSIFICATION	MRI 1.8.5-p12 doesn't support 1-char strings, but YARV 0.4.1 does. I don't think it hurts to include this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])
WITHOUT_CLASSIFICATION	'd' and 'i' are the same
WITHOUT_CLASSIFICATION	'u' with space or plus flags is same as 'd'
WITHOUT_CLASSIFICATION	We depart here from strict adherence to MRI code, as MRI uses C-sprintf, in part, to format numeric output, while we'll use Java's numeric formatting code (and our own).
WITHOUT_CLASSIFICATION	skip '-' in bytes, will add where appropriate
WITHOUT_CLASSIFICATION	..
WITHOUT_CLASSIFICATION	the 1 is for the stripped sign char
WITHOUT_CLASSIFICATION	FIXME: what is correct 'recv' argument? (this does produce the desired behavior)
WITHOUT_CLASSIFICATION	gotta have at least a zero...
WITHOUT_CLASSIFICATION	OK, we now have the significand in digits[0...nDigits] and the exponent in exponent. We're ready to format.
WITHOUT_CLASSIFICATION	intDigits isn't used here, but if it were, it would be 1
WITHOUT_CLASSIFICATION	intDigits = 1;
WITHOUT_CLASSIFICATION	System.err.println(" stringToLong/reading c=" + data[s]);
WITHOUT_CLASSIFICATION	System.err.println(" stringToLong/converted c=" + c);
WITHOUT_CLASSIFICATION	intDigits isn't used here, but if it were, it would be 1
WITHOUT_CLASSIFICATION	intDigits = 1;
WITHOUT_CLASSIFICATION	precision for G/g includes integer digits
WITHOUT_CLASSIFICATION	deal with length/width
WITHOUT_CLASSIFICATION	deal with length/width
WITHOUT_CLASSIFICATION	first digit is always printed
WITHOUT_CLASSIFICATION	MRI behavior: Be default, 2 digits in the exponent. Use 3 digits only when necessary. See comment for writeExp method for more details.
WITHOUT_CLASSIFICATION	5 -> e+nnn / e-nnn
WITHOUT_CLASSIFICATION	4 -> e+nn / e-nn
WITHOUT_CLASSIFICATION	in this mode, '.' is always printed
WITHOUT_CLASSIFICATION	MRI behavior: In this mode trailing zeroes are removed: 1.500E+05 -> 1.5E+05
WITHOUT_CLASSIFICATION	'.' is printed
WITHOUT_CLASSIFICATION	all precision numebers printed
WITHOUT_CLASSIFICATION	now some data...
WITHOUT_CLASSIFICATION	'.'
WITHOUT_CLASSIFICATION	decimal form, like (but not just like!) 'f'
WITHOUT_CLASSIFICATION	digits array shifted, update all
WITHOUT_CLASSIFICATION	will have a trailing '.' g fills trailing zeroes if #
WITHOUT_CLASSIFICATION	s/b true, since intLength > 0
WITHOUT_CLASSIFICATION	s/b true, since intLength > 0
WITHOUT_CLASSIFICATION	always need at least a 0
WITHOUT_CLASSIFICATION	always need at least a 0
WITHOUT_CLASSIFICATION	digits arr shifted, update all
WITHOUT_CLASSIFICATION	(1|intlen).prec
WITHOUT_CLASSIFICATION	(1|intlen)
WITHOUT_CLASSIFICATION	will have a trailing '.'
WITHOUT_CLASSIFICATION	fill up the rest with zeroes
WITHOUT_CLASSIFICATION	System.err.println(" main/len=" + len);
WITHOUT_CLASSIFICATION	5 -> e+nnn / e-nnn
WITHOUT_CLASSIFICATION	4 -> e+nn / e-nn
WITHOUT_CLASSIFICATION	now some data...
WITHOUT_CLASSIFICATION	'.'
WITHOUT_CLASSIFICATION	equivalent to MRI case '\0':
WITHOUT_CLASSIFICATION	'.' and all precision digits printed
WITHOUT_CLASSIFICATION	\v
WITHOUT_CLASSIFICATION	dangling '%' char
WITHOUT_CLASSIFICATION	main while loop (offset < length)
WITHOUT_CLASSIFICATION	debugging code, keeping for now
WITHOUT_CLASSIFICATION	MRI rounds up on nnn5nnn, but not nnn5 -- except for when they do
WITHOUT_CLASSIFICATION	"%.0f" % 0.99
WITHOUT_CLASSIFICATION	limit the length of negatives if possible (also faster)
WITHOUT_CLASSIFICATION	negative values
WITHOUT_CLASSIFICATION	calculation for negatives when %u specified for values >= Integer.MIN_VALUE 2, MRI uses (the equivalent of) long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val for smaller values, BigInteger math is required to conform to MRI's result.
WITHOUT_CLASSIFICATION	relatively cheap test for 32-bit values
WITHOUT_CLASSIFICATION	no such luck...
WITHOUT_CLASSIFICATION	ok, now it gets expensive...
WITHOUT_CLASSIFICATION	go through negated powers of 32 until we find one small enough
WITHOUT_CLASSIFICATION	add to the corresponding positive power of 32 for the result. meaningful? no. conformant? yes. I just write the code...
WITHOUT_CLASSIFICATION	constant vector a
WITHOUT_CLASSIFICATION	most significant w-r bits
WITHOUT_CLASSIFICATION	least significant r bits
WITHOUT_CLASSIFICATION	state[j] &= 0xffffffffL;
WITHOUT_CLASSIFICATION	state[i] &= 0xffffffffL;
WITHOUT_CLASSIFICATION	state[i] &= 0xffffffffL;
WITHOUT_CLASSIFICATION	MSB is 1; assuring non-zero initial array
WITHOUT_CLASSIFICATION	Tempering
WITHOUT_CLASSIFICATION	MRI behavior: Week values are monotonous. So, weeks that effectively belong to previous year, will get the value of 0, not 52 or 53, as in Java.
WITHOUT_CLASSIFICATION	System.err.println("byteListToInum(" + str + ")");
WITHOUT_CLASSIFICATION	System.err.println("byteListToInum(" + str + ")");
WITHOUT_CLASSIFICATION	\v
WITHOUT_CLASSIFICATION	System.err.println("getSign()");
WITHOUT_CLASSIFICATION	System.err.println(" getSign/" + sign);
WITHOUT_CLASSIFICATION	System.err.println("figureOutBase()/base=" + base);
WITHOUT_CLASSIFICATION	System.err.println(" figureOutBase/base=" + base);
WITHOUT_CLASSIFICATION	System.err.println("calculateLength()/str=" + str);
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	System.err.println(" stringToLong=" + val);
WITHOUT_CLASSIFICATION	no number
WITHOUT_CLASSIFICATION	trailing garbage
WITHOUT_CLASSIFICATION	System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);
WITHOUT_CLASSIFICATION	it was not found at all!
WITHOUT_CLASSIFICATION	can be overridden to be informed when objects are removed
WITHOUT_CLASSIFICATION	we reached the end of a list
WITHOUT_CLASSIFICATION	goto next bucket
WITHOUT_CLASSIFICATION	we reached the end
WITHOUT_CLASSIFICATION	entry is the first element of this bucket
WITHOUT_CLASSIFICATION	states
WITHOUT_CLASSIFICATION	remove leading whitespace (includes _ for lax) get sign, if any
WITHOUT_CLASSIFICATION	optimistic pass - calculate value as digits are processed digits - lax rules decimal digits - lax rules exponent sign/digits - lax rules digits - strict rules decimal digits - strict rules exponent sign/digits - strict rules complete calculation if possible
WITHOUT_CLASSIFICATION	fields used for direct (optimistic) calculation number of significant digits, updated as parsed zeroes that may go to significand or exponent offset of decimal pt from start (-1 -> no decimal) significand, updated as parsed exponent, updated as parsed
WITHOUT_CLASSIFICATION	drop through for sign
WITHOUT_CLASSIFICATION	switch will use this if we have to go back the slow way
WITHOUT_CLASSIFICATION	drop through for non-strict digits
WITHOUT_CLASSIFICATION	first char must be digit or decimal point
WITHOUT_CLASSIFICATION	ignore leading zeroes switch
WITHOUT_CLASSIFICATION	no digits, go calc (will return +/- 0.0 for lax)
WITHOUT_CLASSIFICATION	ignore leading zeroes
WITHOUT_CLASSIFICATION	just save a count of zeroes for now; if no digit ends up following them, they'll be applied to the exponent rather than the significand (and our max length for optimistic calc).
WITHOUT_CLASSIFICATION	ok, got a non-zero, have to own up to our horded zeroes
WITHOUT_CLASSIFICATION	else catch oversize below
WITHOUT_CLASSIFICATION	else catch oversize below
WITHOUT_CLASSIFICATION	oh, well, it was worth a try. go let Double/FloatingDecimal handle it
WITHOUT_CLASSIFICATION	ignore switch
WITHOUT_CLASSIFICATION	ignore switch
WITHOUT_CLASSIFICATION	end of parseable data, go to calc
WITHOUT_CLASSIFICATION	end of parseable data, go to calc
WITHOUT_CLASSIFICATION	switch for
WITHOUT_CLASSIFICATION	first non_underscore char must be digit
WITHOUT_CLASSIFICATION	no dec digits, end of parseable data, go to calc
WITHOUT_CLASSIFICATION	switch if
WITHOUT_CLASSIFICATION	difficult case, send to Double/FloatingDecimal
WITHOUT_CLASSIFICATION	block
WITHOUT_CLASSIFICATION	block
WITHOUT_CLASSIFICATION	first char must be digit or decimal point
WITHOUT_CLASSIFICATION	first char must be digit or decimal point
WITHOUT_CLASSIFICATION	first char must be digit or decimal point
WITHOUT_CLASSIFICATION	ignore leading zeroes switch
WITHOUT_CLASSIFICATION	else catch oversize below
WITHOUT_CLASSIFICATION	else catch oversize below
WITHOUT_CLASSIFICATION	else catch oversize below
WITHOUT_CLASSIFICATION	switch for
WITHOUT_CLASSIFICATION	switch for
WITHOUT_CLASSIFICATION	switch for
WITHOUT_CLASSIFICATION	switch if
WITHOUT_CLASSIFICATION	switch if
WITHOUT_CLASSIFICATION	lax (str.to_f) allows underscores between e/E and sign
WITHOUT_CLASSIFICATION	switch for no exponent, so drop through for calculation
WITHOUT_CLASSIFICATION	switch for no more data, OK for strict to go calc
WITHOUT_CLASSIFICATION	TODO: it's not clear to me why, in FloatingDecimal, the "slop" calculation performed above for positive exponents isn't used for negative exponents as well. Will find out...
WITHOUT_CLASSIFICATION	no digits, error
WITHOUT_CLASSIFICATION	too big for us
WITHOUT_CLASSIFICATION	too big for us
WITHOUT_CLASSIFICATION	must be at least one digit for strict
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	only whitespace allowed after value for strict
WITHOUT_CLASSIFICATION	only whitespace allowed after value for strict
WITHOUT_CLASSIFICATION	only whitespace allowed after value for strict
WITHOUT_CLASSIFICATION	first char must be digit
WITHOUT_CLASSIFICATION	no dec digits after '.', error for strict
WITHOUT_CLASSIFICATION	ignore leading zeroes switch
WITHOUT_CLASSIFICATION	switch for
WITHOUT_CLASSIFICATION	switch for
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	only whitespace allowed after value for strict
WITHOUT_CLASSIFICATION	must be at least one digit for strict
WITHOUT_CLASSIFICATION	Copy out any buffered bytes
WITHOUT_CLASSIFICATION	switch while
WITHOUT_CLASSIFICATION	All the positive powers of 10 that can be represented exactly in double/float. (From sun.misc.FloatingDecimal.java)
WITHOUT_CLASSIFICATION	Zlib behavior: negative win_bits means no header and no checksum.
WITHOUT_CLASSIFICATION	rb_enc_mbclen
WITHOUT_CLASSIFICATION	rb_enc_precise_mbclen
WITHOUT_CLASSIFICATION	utf8 lead byte
WITHOUT_CLASSIFICATION	arg cannot be negative
WITHOUT_CLASSIFICATION	NoFunctionalitySignalFacade
WITHOUT_CLASSIFICATION	Change visibility so others can see it
WITHOUT_CLASSIFICATION	could not get canonical path, just use given path
WITHOUT_CLASSIFICATION	strip off "_dot_rb" for .rb files
WITHOUT_CLASSIFICATION	Makes sure the key is not already in the hashtable.
WITHOUT_CLASSIFICATION	Rehash the table if the threshold is exceeded
WITHOUT_CLASSIFICATION	Creates the new entry.
WITHOUT_CLASSIFICATION	next entry to return current slot current entry
WITHOUT_CLASSIFICATION	advance to first entry
WITHOUT_CLASSIFICATION	The reason why we need the stream is to be able to invoke available() on it. STDIN in Java is non-interruptible, non-selectable, and attempt to read on such stream might lead to thread being blocked without any way to unblock it. That's where available() comes it, so at least we could check whether anything is available to be read without blocking.
WITHOUT_CLASSIFICATION	package-protected
WITHOUT_CLASSIFICATION	raw file URL, just open directly
WITHOUT_CLASSIFICATION	We always open this rw since we can only open it r or rw.
WITHOUT_CLASSIFICATION	if refcount is at or below zero, we're no longer valid
WITHOUT_CLASSIFICATION	if channel is already closed, we're no longer valid
WITHOUT_CLASSIFICATION	otherwise decrement and possibly close as normal
WITHOUT_CLASSIFICATION	r/w buffer are we reading or writing?
WITHOUT_CLASSIFICATION	this constructor is used by fdopen, so we don't increment descriptor ref count
WITHOUT_CLASSIFICATION	unread back
WITHOUT_CLASSIFICATION	iterate over remainder of buffer until we find a match
WITHOUT_CLASSIFICATION	terminate and advance buffer when we find our char
WITHOUT_CLASSIFICATION	no match, append remainder of buffer and continue with next block
WITHOUT_CLASSIFICATION	found a match above, check if remaining separator characters match, appending as we go
WITHOUT_CLASSIFICATION	Check file size - special files in /proc have zero size and need to be handled by the generic read path.
WITHOUT_CLASSIFICATION	Copy any buffered data (including ungetc byte)
WITHOUT_CLASSIFICATION	Now read unbuffered directly from the file
WITHOUT_CLASSIFICATION	Copy out any buffered bytes
WITHOUT_CLASSIFICATION	Need to clamp source (buffer) size to avoid overrun
WITHOUT_CLASSIFICATION	not closing from finalize
WITHOUT_CLASSIFICATION	clear runtime so it doesn't get stuck in memory (JRUBY-2933)
WITHOUT_CLASSIFICATION	silence
WITHOUT_CLASSIFICATION	silence
WITHOUT_CLASSIFICATION	Don't bother
WITHOUT_CLASSIFICATION	Don't bother
WITHOUT_CLASSIFICATION	For Sockets, only write as much as will fit.
WITHOUT_CLASSIFICATION	Correct position for read / write buffering (we could invalidate, but expensive)
WITHOUT_CLASSIFICATION	Adjust for buffered data
WITHOUT_CLASSIFICATION	for SEEK_CUR, need to adjust for buffered data
WITHOUT_CLASSIFICATION	libc flushes writes on any read from the actual file, so we flush here
WITHOUT_CLASSIFICATION	we have read ahead, and need to back up
WITHOUT_CLASSIFICATION	128K seems to be the minimum at which the stat+seek is faster than reallocation
WITHOUT_CLASSIFICATION	limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations
WITHOUT_CLASSIFICATION	append what we read into our buffer and allow the loop to continue
WITHOUT_CLASSIFICATION	Copy what is in the buffer, if there is some buffered data
WITHOUT_CLASSIFICATION	Avoid double-copying for reads that are larger than the buffer size
WITHOUT_CLASSIFICATION	Complete the request by filling the read buffer first
WITHOUT_CLASSIFICATION	Complete the request by filling the read buffer first
WITHOUT_CLASSIFICATION	Avoid double-copying for reads that are larger than the buffer size, or the destination is a direct buffer.
WITHOUT_CLASSIFICATION	We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating a huge temporary native buffer, when doing reads into a heap buffer If the dst buffer is direct, then no need to limit.
WITHOUT_CLASSIFICATION	Ruby ignores empty syswrites
WITHOUT_CLASSIFICATION	Ruby ignores empty syswrites
WITHOUT_CLASSIFICATION	Doesn't fit in buffer. Write immediately. ensure nothing left to write
WITHOUT_CLASSIFICATION	truncate can't lengthen files, so we save position, seek/write, and go back
WITHOUT_CLASSIFICATION	how far ahead we are when reading
WITHOUT_CLASSIFICATION	if the read buffer is ahead, back up
WITHOUT_CLASSIFICATION	close without removing from finalizers
WITHOUT_CLASSIFICATION	putting a bit back, so we're not at EOF anymore
WITHOUT_CLASSIFICATION	save the ungot
WITHOUT_CLASSIFICATION	otherwise, we try an unbuffered read to get whatever's available
WITHOUT_CLASSIFICATION	ignore this; select() will set the correct mode when it is finished
WITHOUT_CLASSIFICATION	flush first
WITHOUT_CLASSIFICATION	Wake up any channels that became unblocked
WITHOUT_CLASSIFICATION	Register any new blocking I/O requests
WITHOUT_CLASSIFICATION	Now clear out any previously selected channels
WITHOUT_CLASSIFICATION	Wait for I/O on any channel
WITHOUT_CLASSIFICATION	Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'
WITHOUT_CLASSIFICATION	Java requires "w" for creating a file that does not exist
WITHOUT_CLASSIFICATION	seek to force underlying buffer to flush
WITHOUT_CLASSIFICATION	seek to force read buffer to invalidate
WITHOUT_CLASSIFICATION	result = eval("arr = Array::['c', 200]; p arr"); assertEquals("[\"c\", 200]", result); result = eval("arr = Array.['d', 200]; p arr"); assertEquals("[\"d\", 200]", result);
WITHOUT_CLASSIFICATION	MRI ignores seek errors, presumably for unseekable files like serial ports (JRUBY-2979), so we shall too.
WITHOUT_CLASSIFICATION	TODO: Ruby logic is somewhat more complicated here, see comments after
WITHOUT_CLASSIFICATION	make sure the pipe stream is set to null
WITHOUT_CLASSIFICATION	make sure the main stream is set to null
WITHOUT_CLASSIFICATION	first try our custom-generated Unsafe
WITHOUT_CLASSIFICATION	then try Sun's Unsafe
WITHOUT_CLASSIFICATION	if we get here, the class and field exist; construct our Unsafe impl that calls it directly
WITHOUT_CLASSIFICATION	else leave it null
WITHOUT_CLASSIFICATION	TypeMatcher
WITHOUT_CLASSIFICATION	This is now needed, since module Java isn't in by default
WITHOUT_CLASSIFICATION	Iterate over the RubyHash keySet, simultaneously iterating over the values()
WITHOUT_CLASSIFICATION	Get the value from the map via the key
WITHOUT_CLASSIFICATION	Get the value from the map via the values iterator
WITHOUT_CLASSIFICATION	Check the 2 values obtained via different means
WITHOUT_CLASSIFICATION	Set a value in the RubyHash
WITHOUT_CLASSIFICATION	Set a value in the RubyHash
WITHOUT_CLASSIFICATION	Check the entry.setValue values come back out ok
WITHOUT_CLASSIFICATION	If we're running from within an IDE we may not have the .rb files in our classpath. Try to find them in the filesystem instead.
WITHOUT_CLASSIFICATION	assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));
WITHOUT_CLASSIFICATION	Init
WITHOUT_CLASSIFICATION	Block
WITHOUT_CLASSIFICATION	Copy constructor
WITHOUT_CLASSIFICATION	presumably this require should fail
WITHOUT_CLASSIFICATION	JRUBY-646 presumably this require should fail
WITHOUT_CLASSIFICATION	Test that requiring a normal Java class raises an error (JRUBY-3214
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods from Ruby so they are not really unused).
WITHOUT_CLASSIFICATION	load should work several times in a row
WITHOUT_CLASSIFICATION	reset the $loadTestvar
WITHOUT_CLASSIFICATION	call throwException via JRuby
WITHOUT_CLASSIFICATION	Notify the calling thread that we're about to go to sleep the first time
WITHOUT_CLASSIFICATION	wait for the go signal
WITHOUT_CLASSIFICATION	run ten separate calls into Ruby, with delay and explicit GC
WITHOUT_CLASSIFICATION	wait until thread has initialized
WITHOUT_CLASSIFICATION	notify thread to proceed
WITHOUT_CLASSIFICATION	wait until thread has completed
WITHOUT_CLASSIFICATION	we do preand post load outside the "body" versions to pre-prepare and pre-push the dynamic scope we need for lastline
WITHOUT_CLASSIFICATION	out of byte range there will be no match for sure
WITHOUT_CLASSIFICATION	MRI behavior: raise ArgumentError for 'unknown command' before checking number of args.
WITHOUT_CLASSIFICATION	if any exceptions were raised, we fail
WITHOUT_CLASSIFICATION	there should only be one more thread in thread group than before we started
WITHOUT_CLASSIFICATION	construct a new cache with thread's classloader and no limit
WITHOUT_CLASSIFICATION	Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();
WITHOUT_CLASSIFICATION	assertSame(script1, script2);
WITHOUT_CLASSIFICATION	void methods should work
WITHOUT_CLASSIFICATION	methods with required = 4 or higher should bind and be callable using reflection JRUBY-3649
WITHOUT_CLASSIFICATION	Since we don't have any other error reporting mechanism, we add the error message as an always-failing test to the test suite.
WITHOUT_CLASSIFICATION	Ensure we have a new interpreter for each test. Previous we were using the same interpreter which caused problems as soon as one test failed.
WITHOUT_CLASSIFICATION	Without a flush Ant will miss some of our output
WITHOUT_CLASSIFICATION	assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());
WITHOUT_CLASSIFICATION	int n = 10;
WITHOUT_CLASSIFICATION	there might be more test classes in a single file, so we iterate over them
WITHOUT_CLASSIFICATION	No ClassCastException!
WITHOUT_CLASSIFICATION	value equality
WITHOUT_CLASSIFICATION	identity equality
WITHOUT_CLASSIFICATION	bench straight-up integer fib(30)
WITHOUT_CLASSIFICATION	bench Integer fib
WITHOUT_CLASSIFICATION	bench fully-boxed fib
WITHOUT_CLASSIFICATION	bench fully-boxed fib
WITHOUT_CLASSIFICATION	bench fixnum-boxed fib
WITHOUT_CLASSIFICATION	bench straight-up long fib(30)
WITHOUT_CLASSIFICATION	bench Long fib
WITHOUT_CLASSIFICATION	skip this one, probably no 'ls' (windows)
WITHOUT_CLASSIFICATION	start off with a neutral parent
WITHOUT_CLASSIFICATION	public class Hello { public static String getMessage() { return "....."; } }
WITHOUT_CLASSIFICATION	in method body with no containing loop, issue jump error load runtime and value, issue jump error
WITHOUT_CLASSIFICATION	Note: We can't use file.exists() to check whether the symlink exists or not, because that method returns false for existing but broken symlink. So, we try without the existence check, but in the try-catch block. MRI behavior: symlink? on broken symlink should return true.
WITHOUT_CLASSIFICATION	We are creating a new IO object that shares the same IOHandler (and fileno).
WITHOUT_CLASSIFICATION	a while node could receive non-local flow control from any of these: a closure within the loop an eval within the loop a block-arg-based proc called within the loop
WITHOUT_CLASSIFICATION	[IRubyObject] [IRubyObject, IRubyObject] [IRubyObject, RubyClass] [IRubyObject, RubyClass, RubyClass] [IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass, Visibility, Visibility]
WITHOUT_CLASSIFICATION	select appropriate call site dup receiver load self
WITHOUT_CLASSIFICATION	Translate "x || y" --> "x = (is_true(x) ? x : y)" --> x = -- build(x) should return a variable! -- f = is_true(x) beq(f, true, L) x = -- build(y) -- L:
WITHOUT_CLASSIFICATION	Force the client socket to be blocking
WITHOUT_CLASSIFICATION	Additional context surrounding tokens that both the lexer and grammar use.
WITHOUT_CLASSIFICATION	Enebo: c can never be antrhign but '.' Why did I put this here?
WITHOUT_CLASSIFICATION	save package module as ivar in parent, and add method to parent so we don't have to come back here.
WITHOUT_CLASSIFICATION	[C,C] [C, boolean]
WITHOUT_CLASSIFICATION	Label for the start of the closure (used to implement redo) Label for the end of the closure (used to implement retry)
WITHOUT_CLASSIFICATION	ignore; job was cancelled FIXME: is this ok?
WITHOUT_CLASSIFICATION	check arity checkArity(mv, scope);
WITHOUT_CLASSIFICATION	rethrow exception rethrow it
WITHOUT_CLASSIFICATION	we take the first method found as our "n" method, since for any non-specific arity they'll all error the same. If an actual "n" method is created, we use that.
WITHOUT_CLASSIFICATION	Used by our duck-typification of Proc into interface types, to allow coercing a simple proc into an interface parameter.
WITHOUT_CLASSIFICATION	proxy is under construction, building thread can safely read non-volatile value
WITHOUT_CLASSIFICATION	it's either as converted as we can make it via above logic or it's not one of the types we convert, so just pass it out as-is without wrapping
WITHOUT_CLASSIFICATION	package scheme 2: separate module for each full package name, constructed from the camel-cased package segments: Java::JavaLang::Object,
WITHOUT_CLASSIFICATION	construct the proxy method
WITHOUT_CLASSIFICATION	line 159 "-" %token constants
WITHOUT_CLASSIFICATION	+++ Helper Methods
WITHOUT_CLASSIFICATION	line 152 "-" %token constants
WITHOUT_CLASSIFICATION	initial size state stack value stack current input #tokens to shift
WITHOUT_CLASSIFICATION	+++ Helper Methods
WITHOUT_CLASSIFICATION	We only need to pass in current scope if we are evaluating as a block (which is only done for evals). We need to pass this in so that we can appropriately scope down to captured scopes when we are parsing.
WITHOUT_CLASSIFICATION	let the width (if any), get processed in the next loop, so any leading 0 gets treated correctly
WITHOUT_CLASSIFICATION	A place to store that special hiding space that bindings need to implement things like: eval("a = 1", binding); eval("p a"). All binding instances must get access to this hidden shared scope. We store it here. This will be null if no binding has yet been called.
WITHOUT_CLASSIFICATION	TODO: make it 16 now ? MUST be power of 2!
WITHOUT_CLASSIFICATION	check visibility dup method
WITHOUT_CLASSIFICATION	&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];
WITHOUT_CLASSIFICATION	unsigned int, native unsigned long, native
WITHOUT_CLASSIFICATION	need padding I'm fairly sure there is a library call to create a string filled with a given char with a given length but I couldn't find it
WITHOUT_CLASSIFICATION	MRI behavior: Be default, 2 digits in the exponent. Use 3 digits only when necessary. See comment for writeExp method for more details.
WITHOUT_CLASSIFICATION	MRI ignores seek errors, presumably for unseekable files like serial ports (JRUBY-2979), so we shall too.
WITHOUT_CLASSIFICATION	switch for no more data, OK for strict to go calc
WITHOUT_CLASSIFICATION	A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.
WITHOUT_CLASSIFICATION	Estimate the square root with the foremost 62 bits of squarD bi and scale are a tandem
WITHOUT_CLASSIFICATION	captures begin and end are used when not groups defined source string
WITHOUT_CLASSIFICATION	INSTANCE VARIABLE RUBY METHODS
WITHOUT_CLASSIFICATION	switch while
WITHOUT_CLASSIFICATION	For nodes do not have their own scope so we pass null to indicate this. 'For's are implemented as blocks in evaluation, but they have no scope so we just deal with this lack of scope throughout its lifespan. We should probably change the way this works to get rid of multiple null checks.
WITHOUT_CLASSIFICATION	This field is used during argument processing to avoid putting RubyArray instances that are purely for utility purposes into ObjectSpace.
WITHOUT_CLASSIFICATION	Parent container for this context (can be dynamic!!) If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure List of IR instructions for this method
WITHOUT_CLASSIFICATION	Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> v1 = -- build(a) -- OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. while this info can be inferred by using attributes, why bother if we can do this? ret = false beq(v1, false, L) v2 = -- build(b) -- ret = v2 L:
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	If a line is followed by a blank line put it back.
WITHOUT_CLASSIFICATION	$>: default output handle
WITHOUT_CLASSIFICATION	line 423
WITHOUT_CLASSIFICATION	line 486
WITHOUT_CLASSIFICATION	Signal uses sun.misc. classes, this is not allowed in the security-sensitive environments
WITHOUT_CLASSIFICATION	re-register, since fileno points at something new now
WITHOUT_CLASSIFICATION	produce a nicer error since Rubyists aren't used to seeing this
WITHOUT_CLASSIFICATION	produce a nicer error since Rubyists aren't used to seeing this
WITHOUT_CLASSIFICATION	colon3, assign in Object
WITHOUT_CLASSIFICATION	if there's no receiver, evaluate and pass in the superclass, or pass self if it no superclass
WITHOUT_CLASSIFICATION	Wire up Function#call(args) to use the super-fast native invokers
WITHOUT_CLASSIFICATION	TODO: varargs?
WITHOUT_CLASSIFICATION	TODO: varargs?
WITHOUT_CLASSIFICATION	TODO: varargs?
WITHOUT_CLASSIFICATION	TODO: varargs?
WITHOUT_CLASSIFICATION	Decrease value to hit upper range.
WITHOUT_CLASSIFICATION	assign to appropriate variable
WITHOUT_CLASSIFICATION	"else" body
WITHOUT_CLASSIFICATION	done done done Nothing to do for 1.8 done done done done done done done? done done done done done done done done done done done case DEFINEDNODE: return buildDefined(node, m); Incomplete done done done done done done done done case ENSURENODE: return buildEnsureNode(node, m); DEFERRED done done done done case FLIPNODE: return buildFlip(node, m); SSS FIXME: What code generates this AST? done done done done done done done done done done done done done done done done done done? done done done done done done -- partially case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); DEFERRED SSS FIXME: What code generates this AST? done case POSTEXENODE: return buildPostExe(node, m); DEFERRED case PREEXENODE: return buildPreExe(node, m); DEFERRED done?? done
WITHOUT_CLASSIFICATION	read-volatile
WITHOUT_CLASSIFICATION	$+: string matches last paren.
WITHOUT_CLASSIFICATION	should alter global state
WITHOUT_CLASSIFICATION	should alter global state
WITHOUT_CLASSIFICATION	Ruby code frequently uses a platform check to choose "NUL:" on windows but since that check doesn't work well on JRuby, we help it out
WITHOUT_CLASSIFICATION	10!
WITHOUT_CLASSIFICATION	case RESCUENODE: return buildRescue(node, m); DEFERRED case RETRYNODE: return buildRetry(node, m); DEFERRED done
WITHOUT_CLASSIFICATION	Is this instruction live or dead? During optimization passes, if this instruction causes no side-effects and the result of the instruction is not needed by anyone else, we can remove this instruction altogether without affecting program correctness.
WITHOUT_CLASSIFICATION	all these types are immediately considered "defined"
WITHOUT_CLASSIFICATION	first, iterate over all required args
WITHOUT_CLASSIFICATION	Determine if the parameter might be passed as a 32bit int parameter. This just applies to buffer/pointer types.
WITHOUT_CLASSIFICATION	Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());
WITHOUT_CLASSIFICATION	yyLhs 496
WITHOUT_CLASSIFICATION	yyLhs 496
WITHOUT_CLASSIFICATION	initial size state stack value stack current input #tokens to shift
WITHOUT_CLASSIFICATION	line 449
WITHOUT_CLASSIFICATION	line 495
WITHOUT_CLASSIFICATION	Management/monitoring
WITHOUT_CLASSIFICATION	if we've found the last char of the separator, and we've found at least as many characters as separator length, and the last n characters of our buffer match the separator, we're done
WITHOUT_CLASSIFICATION	14!
WITHOUT_CLASSIFICATION	Process any set of annotations No supported options
WITHOUT_CLASSIFICATION	add to the jitted methods set
WITHOUT_CLASSIFICATION	extract item from array
WITHOUT_CLASSIFICATION	extract item from array
WITHOUT_CLASSIFICATION	case SCLASSNODE: return buildSClass(node, m); DEFERRED done done done done done done done done case UNDEFNODE: return buildUndef(node, m); DEFERRED done case VALIASNODE: return buildVAlias(node, m); DEFERRED done done
WITHOUT_CLASSIFICATION	Adding a post-invoke for the cb result serves to both keep it alive until after the function returns, and allows us to clean up the native trampoline early, instead of letting them accumulate until a GC run
WITHOUT_CLASSIFICATION	The Java method doesn't care what class it is, but we need to know what to convert it to, so we use the object's own class. If that doesn't help, we use String to force a call to the object's "to_s" method.
WITHOUT_CLASSIFICATION	index for the item
WITHOUT_CLASSIFICATION	Atomic integers for symbol and method IDs
WITHOUT_CLASSIFICATION	18!
WITHOUT_CLASSIFICATION	If we have more than one arg, make sure the array created to contain them is not ObjectSpaced
WITHOUT_CLASSIFICATION	set up a local IRuby variable
WITHOUT_CLASSIFICATION	set up a local IRuby variable
WITHOUT_CLASSIFICATION	set up a local IRuby variable
WITHOUT_CLASSIFICATION	set up a local IRuby variable
WITHOUT_CLASSIFICATION	NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable
WITHOUT_CLASSIFICATION	This method takes as input a map of operands to their values, and outputs the result of this instruction. If the value map provides a value for any of the instruction's operands the expectation is that the operand will be replaced with the simplified value. It is not required that it do so -- code correctness is not compromised by failure to simplify. @param valueMap Mapping from operands to their simplified values @returns simplified result / output of this instruction
WITHOUT_CLASSIFICATION	Can't support the rest with Java
WITHOUT_CLASSIFICATION	An atomic long for generating DynamicMethod serial numbers
WITHOUT_CLASSIFICATION	MRI behavior: always check whether the file is writable or not, even if we are to write 0 bytes.
WITHOUT_CLASSIFICATION	22!
WITHOUT_CLASSIFICATION	attribute set.
WITHOUT_CLASSIFICATION	grab nil for local variables
WITHOUT_CLASSIFICATION	grab nil for local variables
WITHOUT_CLASSIFICATION	grab nil for local variables
WITHOUT_CLASSIFICATION	fill in all vars with nil so compiler is happy about future accesses
WITHOUT_CLASSIFICATION	Build a new class and add it to the current scope (could be a script / module / class)
WITHOUT_CLASSIFICATION	---------- These methods below are used during compile-time optimizations -------
WITHOUT_CLASSIFICATION	---------- These methods below are used during compile-time optimizations -------
WITHOUT_CLASSIFICATION	AF_INET
WITHOUT_CLASSIFICATION	Now we provide default impls of a number of signatures. For each arity, we first generate a non-block version of the method, which just adds NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can potentially take a block, to only generate the block-receiving signature and still avoid arg boxing. We then provide default implementations of each block-accepting method that in turn call the IRubyObject[]+Block version of call. This then finally falls back on the minimum implementation requirement for dynamic method handles.
WITHOUT_CLASSIFICATION	Because we implement Java interfaces now, we need a new === that's aware of those additional "virtual" supertypes
WITHOUT_CLASSIFICATION	BASE64
WITHOUT_CLASSIFICATION	note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY when value is an integer less than 1. We treat 0 as a special case to avoid Domain error.
WITHOUT_CLASSIFICATION	element set
WITHOUT_CLASSIFICATION	visit a label to start scoping for local vars in this method
WITHOUT_CLASSIFICATION	visit a label to start scoping for local vars in this method
WITHOUT_CLASSIFICATION	temp locals must start after last real local
WITHOUT_CLASSIFICATION	SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode We won't get here for argument receives! So, buildDasgn is called for assignments to block variables within a block. As far as the IR is concerned, this is just a simple copy
WITHOUT_CLASSIFICATION	getSimplifiedOperand returns the value of this operand, fully simplified getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away The value is used during optimizations and propagated through the IR. But, it is thrown away after that. But, the operand form is used for constructing the compound objects represented by the operand. Example: a = [1], b = [3,4], c = [a,b], d = [2,c] -- getValue(c) = [1,[3,4]]; getSimplifiedOperand(c) = [1, b] -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. So, if contents of a or b is modified, the "simplified value"s of c and d also change! This difference is captured by these two methods.
WITHOUT_CLASSIFICATION	IRubyObject protocol = args[4];
WITHOUT_CLASSIFICATION	promise to implement three to N with block
WITHOUT_CLASSIFICATION	Ruby's OMG capture all source in a Hash feature Add each line to buffer when encountering newline or EOF for first time.
WITHOUT_CLASSIFICATION	carriage return
WITHOUT_CLASSIFICATION	yyDgoto 136
WITHOUT_CLASSIFICATION	discarding a token does not change stack
WITHOUT_CLASSIFICATION	String construction routines by NOT byte[] buffer and making the target String shared
WITHOUT_CLASSIFICATION	insert all nodes in sequence, hash them in the final instruction KEY
WITHOUT_CLASSIFICATION	return last value from execution
WITHOUT_CLASSIFICATION	we append an index to ensure two identical method names will not conflict
WITHOUT_CLASSIFICATION	Basic Block id CFG that this basic block belongs to All basic blocks have a starting label List of non-label instructions
WITHOUT_CLASSIFICATION	otherwise one key has been selected (ours) so we get the channel and hand it off
WITHOUT_CLASSIFICATION	For all uninitialized specific arities, we defer to the "n" method which should raise appropriate error in all cases.
WITHOUT_CLASSIFICATION	implement is called to force this class to create stubs for all methods in the given interface, so they'll show up in the list of methods and be invocable without passing through method_missing
WITHOUT_CLASSIFICATION	CASE IR instructions are dummy instructions -- all when/then clauses have been converted into if-then-else blocks
WITHOUT_CLASSIFICATION	check arity in the variable-arity version
WITHOUT_CLASSIFICATION	leave it null and fall back on our normal invocation logic
WITHOUT_CLASSIFICATION	Build closure body and return the result of the closure
WITHOUT_CLASSIFICATION	for each simple method name, implement the complex methods, calling the simple version
WITHOUT_CLASSIFICATION	Need to initialize
WITHOUT_CLASSIFICATION	Need to initialize
WITHOUT_CLASSIFICATION	Need to initialize
WITHOUT_CLASSIFICATION	Need to initialize
WITHOUT_CLASSIFICATION	Need to initialize
WITHOUT_CLASSIFICATION	Need to initialize
WITHOUT_CLASSIFICATION	Need to initialize
WITHOUT_CLASSIFICATION	Need to initialize
WITHOUT_CLASSIFICATION	Install direct java methods with mangled name so 'send' can call them directly.
WITHOUT_CLASSIFICATION	fall through
WITHOUT_CLASSIFICATION	deal with case when "other" is not a string
WITHOUT_CLASSIFICATION	All errors to sysread should be SystemCallErrors, but on a closed stream Ruby returns an IOError. Java throws same exception for all errors so we resort to this hack...
WITHOUT_CLASSIFICATION	in method body with no containing loop, issue jump error load runtime and value, issue jump error
WITHOUT_CLASSIFICATION	in method body with no containing loop, issue jump error load runtime and value, issue jump error
WITHOUT_CLASSIFICATION	store argument count information into scope
WITHOUT_CLASSIFICATION	the load method is used for loading as a top-level script, and prepares appropriate scoping around the code
WITHOUT_CLASSIFICATION	First, build assignments for specific named arguments
WITHOUT_CLASSIFICATION	public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }
WITHOUT_CLASSIFICATION	get current context
WITHOUT_CLASSIFICATION	octal constant
WITHOUT_CLASSIFICATION	read
WITHOUT_CLASSIFICATION	this really needs to be inlined here
WITHOUT_CLASSIFICATION	it doesn't handle special cases
WITHOUT_CLASSIFICATION	If reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	If reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	If reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	ignore; we won't use invokedynamic
WITHOUT_CLASSIFICATION	at end
WITHOUT_CLASSIFICATION	bang: true, no match, no substitution
WITHOUT_CLASSIFICATION	save blocking state
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	invoke static __file__
WITHOUT_CLASSIFICATION	rest of the argument array!
WITHOUT_CLASSIFICATION	fall back on empty env when security disallows environment var access (like in an applet)
WITHOUT_CLASSIFICATION	UndefinedMethod should be immutable
WITHOUT_CLASSIFICATION	UndefinedMethod should be immutable
WITHOUT_CLASSIFICATION	load null block
WITHOUT_CLASSIFICATION	This point is only reached if there was an exception handler installed.
WITHOUT_CLASSIFICATION	nothing else to here - the module version will be included in the class.
WITHOUT_CLASSIFICATION	JRUBY-1000, fail early when attempting to subclass a final Java class; solved here by adding an exception-throwing "inherited"
WITHOUT_CLASSIFICATION	block given
WITHOUT_CLASSIFICATION	block given
WITHOUT_CLASSIFICATION	Translate ret = (a || b) to ret = (a ? true : b) as follows v1 = -- build(a) -- OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. while this info can be inferred by using attributes, why bother if we can do this? ret = true beq(v1, true, L) v2 = -- build(b) -- ret = v2 L:
WITHOUT_CLASSIFICATION	Initial precision is that of double numbers 2^63/2 ~ 4E18 63-1 an even number of number bits precision seems 16 to 18 digits
WITHOUT_CLASSIFICATION	We can callsite cache const_missing if we want
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	declare the field
WITHOUT_CLASSIFICATION	Assign the values.
WITHOUT_CLASSIFICATION	Assign the values.
WITHOUT_CLASSIFICATION	check arity
WITHOUT_CLASSIFICATION	check arity
WITHOUT_CLASSIFICATION	create the class
WITHOUT_CLASSIFICATION	called only by initializing thread; no synchronization required
WITHOUT_CLASSIFICATION	No hex value after the 'x'.
WITHOUT_CLASSIFICATION	1.8
WITHOUT_CLASSIFICATION	6:tags 16:addr 1:eos
WITHOUT_CLASSIFICATION	Let m be the exact digits precision in an earlier! loop
WITHOUT_CLASSIFICATION	For 'foo()'. Args are only significant in maintaining backwards compatible AST structure
WITHOUT_CLASSIFICATION	block
WITHOUT_CLASSIFICATION	Label for the start of the method Label for the end of the method
WITHOUT_CLASSIFICATION	comparisons & checks checks if the operand is non-null and non-false EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...
WITHOUT_CLASSIFICATION	FIXME: JRUBY-3604
WITHOUT_CLASSIFICATION	invoke pre method stuff
WITHOUT_CLASSIFICATION	all done with lookup attempts, release monitor
WITHOUT_CLASSIFICATION	allow proxy to be read without synchronization. if proxy is under construction, only the building thread can see it.
WITHOUT_CLASSIFICATION	Create list of interface names to proxy (and make sure they really are interfaces) Also build a hashcode from all classes to use for retrieving previously-created impl
WITHOUT_CLASSIFICATION	Construct local variables based on parameter names passed in
WITHOUT_CLASSIFICATION	Value of "TZ" property is of a bit different format, which confuses the Java's TimeZone.getTimeZone(id) method, and so, we need to convert it.
WITHOUT_CLASSIFICATION	file given, use it and force it into binding
WITHOUT_CLASSIFICATION	ensure the object is associated with the wrapper we found it in, so that if it comes back we don't re-wrap it
WITHOUT_CLASSIFICATION	return sqrt(squarD) with precision of rootMC
WITHOUT_CLASSIFICATION	A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.
WITHOUT_CLASSIFICATION	arg
WITHOUT_CLASSIFICATION	Get a new label using the provided label prefix
WITHOUT_CLASSIFICATION	normal exit, perform finally and return
WITHOUT_CLASSIFICATION	coerce arguments
WITHOUT_CLASSIFICATION	0.0 is ok float range inverted float range? NaN +infinity -infinity
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	set this class's method names in var @__java_ovrd_methods if this is the new class; otherwise, get method names from there if this is a proxy superclass.
WITHOUT_CLASSIFICATION	ignore backslashed spaces in %w
WITHOUT_CLASSIFICATION	Invert the sign, since TZ format and Java format use opposite signs, sigh... Also, Java API requires the sign to be always present, be it "+" or "-".
WITHOUT_CLASSIFICATION	no binding given, use 0 for both
WITHOUT_CLASSIFICATION	<=> may return nil in many circumstances, e.g. 3 <=> NaN
WITHOUT_CLASSIFICATION	use numbered access method
WITHOUT_CLASSIFICATION	Always use "GMT" since that's required by Java API.
WITHOUT_CLASSIFICATION	ignore if it's not a global var
WITHOUT_CLASSIFICATION	The dataStruct is a place where custom information can be contained for core implementations that doesn't necessarily want to go to the trouble of creating a subclass of RubyObject. The OpenSSL implementation uses this heavily to save holder objects containing Java cryptography objects. Java integration uses this to store the Java object ref. protected transient Object dataStruct;
WITHOUT_CLASSIFICATION	Remaining arguments are for the script itself
WITHOUT_CLASSIFICATION	arg grouping, use slower arg walking logic
WITHOUT_CLASSIFICATION	build scope names string
WITHOUT_CLASSIFICATION	Tries to load at compile-time the constant referred to by 'constRef'. This might be possible if the constant is defined and is not a forward reference to a value that will be defined later in the class.
WITHOUT_CLASSIFICATION	Here we create an "anonymous" exception type used for unrolling the stack. MRI creates a new one for every call to timeout, which can be costly. We opt to use a single exception type for all cases to avoid this overhead.
WITHOUT_CLASSIFICATION	finally
WITHOUT_CLASSIFICATION	MRI behavior: With TZ equal to "GMT" or "UTC", Time.now is NOT considered as a proper GMT/UTC time: ENV['TZ']="GMT" Time.now.gmt? ==> false ENV['TZ']="UTC" Time.now.utc? ==> false Hence, we need to adjust for that.
WITHOUT_CLASSIFICATION	?l | boolean | True if file1 exists and is a symbolic link
WITHOUT_CLASSIFICATION	This try/catch is to allow failing over to the "commands" logic when running from within a jruby-complete jar file, which has jruby.home = a jar file URL that does not resolve correctly with JRubyFile.create.
WITHOUT_CLASSIFICATION	Each root node has a top-level scope that we need to push
WITHOUT_CLASSIFICATION	specific arity
WITHOUT_CLASSIFICATION	In the case of two arguments, MRI will discard the portion of the first argument after a decimal point (i.e., "floor"). However in the case of a single argument, any portion after the decimal point is honored.
WITHOUT_CLASSIFICATION	?w | boolean | True if file1 exists and is writable by effective uid/gid
WITHOUT_CLASSIFICATION	COMMON VARIABLE METHODS
WITHOUT_CLASSIFICATION	@JRubyMethod public IRubyObject to_proc() { return RubyProc.newProc(getRuntime(), CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()), Block.Type.PROC); }
WITHOUT_CLASSIFICATION	let RescuedBlock continue
WITHOUT_CLASSIFICATION	let RescuedBlock continue
WITHOUT_CLASSIFICATION	do nothing, fall back on default compiler below
WITHOUT_CLASSIFICATION	do nothing, fall back on default compiler below
WITHOUT_CLASSIFICATION	Should we run this pass on the current scope before running it on nested scopes?
WITHOUT_CLASSIFICATION	Should we run this pass on the current scope before running it on nested scopes?
WITHOUT_CLASSIFICATION	================ Utility Methods ================
WITHOUT_CLASSIFICATION	================ Utility Methods ================
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	if more than 4 locals, get the locals array too
WITHOUT_CLASSIFICATION	if more than 4 locals, get the locals array too
WITHOUT_CLASSIFICATION	if more than 4 locals, get the locals array too
WITHOUT_CLASSIFICATION	Add property name aliases
WITHOUT_CLASSIFICATION	================ Instance Methods ================
WITHOUT_CLASSIFICATION	================ Instance Methods ================
WITHOUT_CLASSIFICATION	================ Instance Methods ================
WITHOUT_CLASSIFICATION	@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)
WITHOUT_CLASSIFICATION	@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)
WITHOUT_CLASSIFICATION	@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)
WITHOUT_CLASSIFICATION	INTERNAL VARIABLE METHODS
WITHOUT_CLASSIFICATION	backspace
WITHOUT_CLASSIFICATION	yySindex 889
WITHOUT_CLASSIFICATION	yyGindex 136
WITHOUT_CLASSIFICATION	yyGindex 136
WITHOUT_CLASSIFICATION	yyGindex 136
WITHOUT_CLASSIFICATION	package-private
WITHOUT_CLASSIFICATION	fall through
WITHOUT_CLASSIFICATION	fall through
WITHOUT_CLASSIFICATION	MRI issuses warning here on (RBIGNUM(x)->len SIZEOF_BDIGITS yy > 10241024)
WITHOUT_CLASSIFICATION	interrupt the target thread in case it's blocking or waiting WARNING: We no longer interrupt the target thread, since this usually means interrupting IO and with NIO that means the channel is no longer usable. We either need a new way to handle waking a target thread that's waiting on IO, or we need to accept that we can't wake such threads and must wait for them to complete their operation. threadImpl.interrupt();
WITHOUT_CLASSIFICATION	interrupt the target thread in case it's blocking or waiting WARNING: We no longer interrupt the target thread, since this usually means interrupting IO and with NIO that means the channel is no longer usable. We either need a new way to handle waking a target thread that's waiting on IO, or we need to accept that we can't wake such threads and must wait for them to complete their operation. threadImpl.interrupt();
WITHOUT_CLASSIFICATION	Nested class whose instances act as thunks reacting to to_str method called from (Exception#to_str, Exception#message) MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!", to_str implementation: "name_err_mesg_to_str" TODO: this class should not be lookupable
WITHOUT_CLASSIFICATION	We need to guarantee that any existing reads of old Map can proceed. So we cannot yet null out each bin.
WITHOUT_CLASSIFICATION	The name of this source (e.g. a filename: foo.rb)
WITHOUT_CLASSIFICATION	EQ == 0 (i.e. false)
WITHOUT_CLASSIFICATION	EQ == 0 (i.e. false)
WITHOUT_CLASSIFICATION	This should only be called by this and RubyFile. It allows this object to be created without a IOHandler.
WITHOUT_CLASSIFICATION	We yield here to hopefully permit the target thread to schedule MRI immediately schedules it, so this is close but not exact
WITHOUT_CLASSIFICATION	note that addMethod now does its own put, so any change made to functionality here should be made there as well
WITHOUT_CLASSIFICATION	Currently dead code, but useful when we figure out how to actually perform translit. private static boolean isTranslit(String encoding) { return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false; }
WITHOUT_CLASSIFICATION	empirically it appears that to_ary coersions always return array or nil, so this should always be an array by now.
WITHOUT_CLASSIFICATION	EQ == 0 (i.e. false)
WITHOUT_CLASSIFICATION	EQ == 0 (i.e. false)
WITHOUT_CLASSIFICATION	EQ == 0 (i.e. false)
WITHOUT_CLASSIFICATION	EQ == 0 (i.e. false)
WITHOUT_CLASSIFICATION	EQ == 0 (i.e. false)
WITHOUT_CLASSIFICATION	No seconds, just yield
WITHOUT_CLASSIFICATION	finally handling for abnormal exit
WITHOUT_CLASSIFICATION	if it's an inner class and it's not public, we can't access it; skip population of declared elements
WITHOUT_CLASSIFICATION	getFoo => foo getFoo(int) => foo(int)
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	MRI behavior on Windows: it treats '/' as a root of a current drive (but only if SINGLE slash is present!): E.g., if current work directory is 'D:/home/directory', then '/' means 'D:/'. Basically, '/path' is treated as a RELATIVE path, relative to the current drive. 'path' is treated as absolute one.
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	This is needed when the enclosing class or module is a singleton. In that case, we generated a name such as null::Foo, which broke Marshalling, among others. The correct thing to do in this situation is to insert the generate the name of form #<Class:01xasdfasd> if it's a singleton module/class, which this code accomplishes.
WITHOUT_CLASSIFICATION	this is the only case it might be null here (in MetaClass construction)
WITHOUT_CLASSIFICATION	EQ == 0 (i.e. false) pop the extra result and replace with the send part of the AND
WITHOUT_CLASSIFICATION	get "self"
WITHOUT_CLASSIFICATION	No timeout in critical section
WITHOUT_CLASSIFICATION	rethrow exception rethrow it
WITHOUT_CLASSIFICATION	only public methods
WITHOUT_CLASSIFICATION	If already inspecting, there is no need to register/unregister again.
WITHOUT_CLASSIFICATION	First try to use drive letter from supplied dir value, then try current work dir.
WITHOUT_CLASSIFICATION	JRUBY-2435: Aliasing eval and other "special" methods should display a warning We warn because we treat certain method names as "special" for purposes of optimization. Hopefully this will be enough to convince people not to alias them.
WITHOUT_CLASSIFICATION	generate a real method signature for the method, with to/from coercions
WITHOUT_CLASSIFICATION	block argument to the method closure present class present method table mutations, def, defs, undef, alias likely call to eval makes calls that are aware of the frame makes calls that are aware of the frame's self makes calls that are aware of the frame's visibility makes calls that are aware of the frame's block makes calls that are aware of the frame's name makes calls that set or get backref makes calls that set or get lastline makes calls that are aware of the frame's class optional arguments to the method rest arg to the method makes calls that are aware of the scope makes a zero-argument super call accesses or sets constants accesses or sets class variables makes normal super call contains a retry
WITHOUT_CLASSIFICATION	Add aliases in Type::, NativeType:: and FFI::TYPE_
WITHOUT_CLASSIFICATION	Create constants for flock
WITHOUT_CLASSIFICATION	double-testing args.length here, but it avoids duplicating the proc-setup code in two places
WITHOUT_CLASSIFICATION	indices for temp values
WITHOUT_CLASSIFICATION	a while node could receive non-local flow control from any of these: a closure within the loop an eval within the loop a block-arg-based proc called within the loop
WITHOUT_CLASSIFICATION	Done with closure compilation
WITHOUT_CLASSIFICATION	Done with closure compilation
WITHOUT_CLASSIFICATION	Done with closure compilation
WITHOUT_CLASSIFICATION	Done with closure compilation
WITHOUT_CLASSIFICATION	snapshot of contents of directory current position in directory
WITHOUT_CLASSIFICATION	Exclusive locks in Java require the channel to be writable, otherwise an exception is thrown (terminating JRuby execution). But flock behavior of MRI is that it allows exclusive locks even on non-writable file. So we convert exclusive lock to shared lock if the channel is not writable, to better match the MRI behavior.
WITHOUT_CLASSIFICATION	explode array, it's an internal "args" array
WITHOUT_CLASSIFICATION	explode array, it's an internal "args" array
WITHOUT_CLASSIFICATION	set self to the class
WITHOUT_CLASSIFICATION	---------- Public fields, methods ---------
WITHOUT_CLASSIFICATION	A specific version was requested - use as is for search
WITHOUT_CLASSIFICATION	zero args, no block; do nothing
WITHOUT_CLASSIFICATION	we need to collect all methods, though we'll only install the ones that are named in this class
WITHOUT_CLASSIFICATION	Store each line into this list if not null.
WITHOUT_CLASSIFICATION	Portion of line right after beginning marker
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	If an IO exception occurs (something odd, but possible) A directory may return null.
WITHOUT_CLASSIFICATION	Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed
WITHOUT_CLASSIFICATION	Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed
WITHOUT_CLASSIFICATION	Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed
WITHOUT_CLASSIFICATION	use array as-is, it's a literal array
WITHOUT_CLASSIFICATION	finally with no exception
WITHOUT_CLASSIFICATION	Now, for all variables used by 'i' mark them live before 'i'
WITHOUT_CLASSIFICATION	TODO: varargs?
WITHOUT_CLASSIFICATION	TODO: varargs?
WITHOUT_CLASSIFICATION	The counting of slashes that follows is simply a way to adhere to Ruby's UNC (or something) compatibility. When Ruby's expand_path is called with "foobar" it will return "foo/bar". JRuby uses java.io.File, and hence returns "/foo/bar". In order to retain java.io.File in the lower layers and provide full Ruby compatibility, the number of extra slashes must be counted and prepended to the result.
WITHOUT_CLASSIFICATION	This is almost always already interned, since it will be called with a symbol in most cases but when created from Java code, we might get an argument that needs to be interned. addAccessor has as a precondition that the string MUST be interned
WITHOUT_CLASSIFICATION	not a class
WITHOUT_CLASSIFICATION	not a class
WITHOUT_CLASSIFICATION	Ruby uses Qnil here, we use "dummy" because we need a class
WITHOUT_CLASSIFICATION	Ruby uses Qnil here, we use "dummy" because we need a class
WITHOUT_CLASSIFICATION	io.available() only returns 0 after EOF is encountered so we need to differentiate between the empty string and EOF
WITHOUT_CLASSIFICATION	In the current logic, if we get here we know that module is not an IncludedModuleWrapper, so there's no need to fish out the delegate. But just in case the logic should change later, let's do it anyway
WITHOUT_CLASSIFICATION	rb_iterate((VALUE()_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);
WITHOUT_CLASSIFICATION	Broken symlinks considered by exists() as non-existing, so we need to check for symlinks explicitly.
WITHOUT_CLASSIFICATION	CONSTANT API METHODS
WITHOUT_CLASSIFICATION	create the default thread group
WITHOUT_CLASSIFICATION	range_each_func(range, step_i, b, e, args);
WITHOUT_CLASSIFICATION	============================ Here are hash internals (This could be extracted to a separate class but it's not too large though) ============================
WITHOUT_CLASSIFICATION	LOW-LEVEL CLASS VARIABLE INTERFACE fetch/store/list class variables for this module
WITHOUT_CLASSIFICATION	used only by the compiler/interpreter (will set the literal flag)
WITHOUT_CLASSIFICATION	used only by the compiler/interpreter (will set the literal flag)
WITHOUT_CLASSIFICATION	Used for the 'redo' command
WITHOUT_CLASSIFICATION	Used for the 'redo' command
WITHOUT_CLASSIFICATION	retuns null when not found to avoid unnecessary getRuntime().getNil() call
WITHOUT_CLASSIFICATION	returns the stored value without processing undefs (autoloads)
WITHOUT_CLASSIFICATION	\cX, \c\M-X
WITHOUT_CLASSIFICATION	new Exception().printStackTrace();
WITHOUT_CLASSIFICATION	new Exception().printStackTrace();
WITHOUT_CLASSIFICATION	new Exception().printStackTrace();
WITHOUT_CLASSIFICATION	line 286
WITHOUT_CLASSIFICATION	line 476
WITHOUT_CLASSIFICATION	line 513
WITHOUT_CLASSIFICATION	line 530
WITHOUT_CLASSIFICATION	line 533
WITHOUT_CLASSIFICATION	line 537
WITHOUT_CLASSIFICATION	line 551
WITHOUT_CLASSIFICATION	end loop
WITHOUT_CLASSIFICATION	MRI behavior: we don't print errno for actual Errno errors
WITHOUT_CLASSIFICATION	prepare to call class definition method
WITHOUT_CLASSIFICATION	Traverse the instructions in this basic block in reverse order! Mark as dead all instructions whose results are not used!
WITHOUT_CLASSIFICATION	fields should really be an immutable map as it is never modified after construction
WITHOUT_CLASSIFICATION	load self object as IRubyObject, for recv param
WITHOUT_CLASSIFICATION	TODO: varargs?
WITHOUT_CLASSIFICATION	If we define a class in Ruby, but later want to allow it to be defined in Java, the allocator needs to be updated
WITHOUT_CLASSIFICATION	We only want IO objects with valid streams (better to error now).
WITHOUT_CLASSIFICATION	produce a nicer error since Rubyists aren't used to seeing this
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	yyLhs 542
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	MRI has extra pointer which makes our code look a little bit more strange in comparison
WITHOUT_CLASSIFICATION	Tempory buffer to build up a potential token. Consumer takes responsibility to reset this before use.
WITHOUT_CLASSIFICATION	tmpPosition is required because getPosition()'s side effects. if the warning is generated, the getPosition() on line 954 (this line + 18) will create a wrong position if the "inclusive" flag is not set.
WITHOUT_CLASSIFICATION	What is \v in C? case '\v': c2 = 'v'; break;
WITHOUT_CLASSIFICATION	Consider Thread aspects of this
WITHOUT_CLASSIFICATION	Position within source must reflect the actual offset and column. Since we ate an extra character here (this accounting is normally done in read ), we should update position info.
WITHOUT_CLASSIFICATION	An interrupt or timeout may have caused us to miss a notify that we consumed, so do another notify in case someone else is available to pick it up.
WITHOUT_CLASSIFICATION	line 572
WITHOUT_CLASSIFICATION	line 601
WITHOUT_CLASSIFICATION	line 601
WITHOUT_CLASSIFICATION	line 625
WITHOUT_CLASSIFICATION	line 649
WITHOUT_CLASSIFICATION	line 691
WITHOUT_CLASSIFICATION	line 723
WITHOUT_CLASSIFICATION	line 732
WITHOUT_CLASSIFICATION	line 745
WITHOUT_CLASSIFICATION	line 766
WITHOUT_CLASSIFICATION	line 785
WITHOUT_CLASSIFICATION	line 794
WITHOUT_CLASSIFICATION	line 800
WITHOUT_CLASSIFICATION	line 812
WITHOUT_CLASSIFICATION	line 827
WITHOUT_CLASSIFICATION	line 839
WITHOUT_CLASSIFICATION	line 845
WITHOUT_CLASSIFICATION	line 864
WITHOUT_CLASSIFICATION	line 886
WITHOUT_CLASSIFICATION	line 896
WITHOUT_CLASSIFICATION	line 911
WITHOUT_CLASSIFICATION	line 929
WITHOUT_CLASSIFICATION	line 952
WITHOUT_CLASSIFICATION	line 970
WITHOUT_CLASSIFICATION	line 972
WITHOUT_CLASSIFICATION	line 991
WITHOUT_CLASSIFICATION	line 1011
WITHOUT_CLASSIFICATION	line 1026
WITHOUT_CLASSIFICATION	line 1038
WITHOUT_CLASSIFICATION	line 1067
WITHOUT_CLASSIFICATION	line 1085
WITHOUT_CLASSIFICATION	line 1097
WITHOUT_CLASSIFICATION	line 1105
WITHOUT_CLASSIFICATION	line 1122
WITHOUT_CLASSIFICATION	line 1133
WITHOUT_CLASSIFICATION	line 1145
WITHOUT_CLASSIFICATION	line 1169
WITHOUT_CLASSIFICATION	line 1201
WITHOUT_CLASSIFICATION	line 1210
WITHOUT_CLASSIFICATION	line 1229
WITHOUT_CLASSIFICATION	line 1261
WITHOUT_CLASSIFICATION	line 1287
WITHOUT_CLASSIFICATION	line 1293
WITHOUT_CLASSIFICATION	line 1307
WITHOUT_CLASSIFICATION	line 1320
WITHOUT_CLASSIFICATION	line 1325
WITHOUT_CLASSIFICATION	line 1363
WITHOUT_CLASSIFICATION	line 1398
WITHOUT_CLASSIFICATION	line 1448
WITHOUT_CLASSIFICATION	line 1456
WITHOUT_CLASSIFICATION	line 1473
WITHOUT_CLASSIFICATION	line 1492
WITHOUT_CLASSIFICATION	line 1513
WITHOUT_CLASSIFICATION	line 1523
WITHOUT_CLASSIFICATION	line 1562
WITHOUT_CLASSIFICATION	line 1582
WITHOUT_CLASSIFICATION	line 1603
WITHOUT_CLASSIFICATION	line 1603
WITHOUT_CLASSIFICATION	line 1615
WITHOUT_CLASSIFICATION	line 1620
WITHOUT_CLASSIFICATION	line 1635
WITHOUT_CLASSIFICATION	line 1652
WITHOUT_CLASSIFICATION	line 1681
WITHOUT_CLASSIFICATION	line 1708
WITHOUT_CLASSIFICATION	line 1716
WITHOUT_CLASSIFICATION	line 1755
WITHOUT_CLASSIFICATION	line 1772
WITHOUT_CLASSIFICATION	line 1789
WITHOUT_CLASSIFICATION	ACTIONS_END
WITHOUT_CLASSIFICATION	ACTIONS_END
WITHOUT_CLASSIFICATION	force for args
WITHOUT_CLASSIFICATION	last expression should not be void
WITHOUT_CLASSIFICATION	compstmt position includes both parens around it
WITHOUT_CLASSIFICATION	We can assign if we already have variable of that name here or we are the only scope in the chain (which Local scopes always are).
WITHOUT_CLASSIFICATION	ignore, no debugger present
WITHOUT_CLASSIFICATION	ignore, no debugger present
WITHOUT_CLASSIFICATION	ignore, no debugger present
WITHOUT_CLASSIFICATION	ignore, no debugger present
WITHOUT_CLASSIFICATION	FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518
WITHOUT_CLASSIFICATION	This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:) into individual whenNodes. The primary reason for this is to ensure lazy evaluation of the arguments (when foo,bar,gar:) to prevent side-effects. In the old code this was done using nested when statements, which was awful for interpreter and compilation. Notes: This has semantic equivalence but will not be lexically equivalent. Compiler needs to detect same bodies to simplify bytecode generated.
WITHOUT_CLASSIFICATION	line 313
WITHOUT_CLASSIFICATION	line 339
WITHOUT_CLASSIFICATION	line 361
WITHOUT_CLASSIFICATION	line 413
WITHOUT_CLASSIFICATION	line 451
WITHOUT_CLASSIFICATION	line 472
WITHOUT_CLASSIFICATION	line 500
WITHOUT_CLASSIFICATION	line 515
WITHOUT_CLASSIFICATION	line 555
WITHOUT_CLASSIFICATION	line 582
WITHOUT_CLASSIFICATION	line 619
WITHOUT_CLASSIFICATION	line 636
WITHOUT_CLASSIFICATION	line 669
WITHOUT_CLASSIFICATION	line 703
WITHOUT_CLASSIFICATION	line 776
WITHOUT_CLASSIFICATION	line 814
WITHOUT_CLASSIFICATION	line 823
WITHOUT_CLASSIFICATION	line 854
WITHOUT_CLASSIFICATION	line 872
WITHOUT_CLASSIFICATION	line 905
WITHOUT_CLASSIFICATION	line 925
WITHOUT_CLASSIFICATION	line 958
WITHOUT_CLASSIFICATION	line 992
WITHOUT_CLASSIFICATION	line 1047
WITHOUT_CLASSIFICATION	line 1072
WITHOUT_CLASSIFICATION	line 1081
WITHOUT_CLASSIFICATION	line 1108
WITHOUT_CLASSIFICATION	line 1136
WITHOUT_CLASSIFICATION	line 1168
WITHOUT_CLASSIFICATION	line 1192
WITHOUT_CLASSIFICATION	line 1241
WITHOUT_CLASSIFICATION	line 1267
WITHOUT_CLASSIFICATION	line 1286
WITHOUT_CLASSIFICATION	line 1301
WITHOUT_CLASSIFICATION	line 1314
WITHOUT_CLASSIFICATION	line 1333
WITHOUT_CLASSIFICATION	line 1362
WITHOUT_CLASSIFICATION	line 1395
WITHOUT_CLASSIFICATION	line 1420
WITHOUT_CLASSIFICATION	line 1439
WITHOUT_CLASSIFICATION	line 1476
WITHOUT_CLASSIFICATION	line 1535
WITHOUT_CLASSIFICATION	line 1588
WITHOUT_CLASSIFICATION	line 1618
WITHOUT_CLASSIFICATION	line 1643
WITHOUT_CLASSIFICATION	line 1669
WITHOUT_CLASSIFICATION	line 1728
WITHOUT_CLASSIFICATION	line 1753
WITHOUT_CLASSIFICATION	line 1779
WITHOUT_CLASSIFICATION	line 1794
WITHOUT_CLASSIFICATION	line 1812
WITHOUT_CLASSIFICATION	line 1837
WITHOUT_CLASSIFICATION	line 1895
WITHOUT_CLASSIFICATION	line 1925
WITHOUT_CLASSIFICATION	line 1950
WITHOUT_CLASSIFICATION	line 1992
WITHOUT_CLASSIFICATION	line 2014
WITHOUT_CLASSIFICATION	Whether this scope is used as the "argument scope" for e.g. zsuper
WITHOUT_CLASSIFICATION	If we could not find the constant from cref..then try getting from inheritence hierarchy
WITHOUT_CLASSIFICATION	This while loop is for restarting the block call in case a 'redo' fires.
WITHOUT_CLASSIFICATION	This while loop is for restarting the block call in case a 'redo' fires.
WITHOUT_CLASSIFICATION	This while loop is for restarting the block call in case a 'redo' fires.
WITHOUT_CLASSIFICATION	This while loop is for restarting the block call in case a 'redo' fires.
WITHOUT_CLASSIFICATION	This while loop is for restarting the block call in case a 'redo' fires.
WITHOUT_CLASSIFICATION	This while loop is for restarting the block call in case a 'redo' fires.
WITHOUT_CLASSIFICATION	This while loop is for restarting the block call in case a 'redo' fires.
WITHOUT_CLASSIFICATION	A 'next' is like a local return from the block, ending this call or yield.
WITHOUT_CLASSIFICATION	A 'next' is like a local return from the block, ending this call or yield.
WITHOUT_CLASSIFICATION	A 'next' is like a local return from the block, ending this call or yield.
WITHOUT_CLASSIFICATION	A 'next' is like a local return from the block, ending this call or yield.
WITHOUT_CLASSIFICATION	happens with native exceptions, should not filter those out
WITHOUT_CLASSIFICATION	happens with native exceptions, should not filter those out
WITHOUT_CLASSIFICATION	We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the 'b' will get put into this new dynamic scope. The original scope does not see the new 'b' and successive evals with this binding will. I take it having the ability to have succesive binding evals be able to share same scope makes sense from a programmers perspective. One crappy outcome of this design is it requires Dynamic and Static scopes to be mutable for this one case.
WITHOUT_CLASSIFICATION	Populate up to shorter of calling arguments or local parameters in the block
WITHOUT_CLASSIFICATION	Populate up to shorter of calling arguments or local parameters in the block
WITHOUT_CLASSIFICATION	tc under method self under method name args
WITHOUT_CLASSIFICATION	allow it to bubble up
WITHOUT_CLASSIFICATION	IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	trim extension to try other options
WITHOUT_CLASSIFICATION	trim extension to try other options
WITHOUT_CLASSIFICATION	Check for a builtin first.
WITHOUT_CLASSIFICATION	end suffix iteration
WITHOUT_CLASSIFICATION	end suffix iteration
WITHOUT_CLASSIFICATION	Unfortunately, the number of digits in the exponent is not clearly defined in Ruby documentation. This is a platform/version-dependent behavior. On Linux/Mac/Cygwinnix, two digits are used. On Windows, 3 digits are used. It is desirable for JRuby to have consistent behavior, and the two digits behavior was selected. This is also in sync with "Java-native" sprintf behavior (java.util.Formatter). E or e
WITHOUT_CLASSIFICATION	Represents the the dynamic portion of scoping information. The variableValues are the values of assigned local or block variables. The staticScope identifies which sort of scope this is (block or local). Properties of Dynamic Scopes: 1. static and dynamic scopes have the same number of names to values 2. size of variables (and thus names) is determined during parsing. So those structured do not need to change FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents. This is harmless (other than wasting memory), but we should not do that. We can fix this in two ways: 1. Fix all callers 2. Check parent that is passed in and make if new instance is local, then its parent is not local
WITHOUT_CLASSIFICATION	This method handles '' patterns and delegates to fnmatch_helper for the main work.
WITHOUT_CLASSIFICATION	Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern Example: foo{a{c},b}bar -> fooa{c}bar, foobbar
WITHOUT_CLASSIFICATION	double precision, native double precision, native
WITHOUT_CLASSIFICATION	64-bit number, native (as bignum)
WITHOUT_CLASSIFICATION	Next indicates to decode using native encoding format
WITHOUT_CLASSIFICATION	calculate based on a, b, c and d
WITHOUT_CLASSIFICATION	processes seem to have some peculiar locking sequences, so we need to ensure nobody is trying to close/destroy while we are
WITHOUT_CLASSIFICATION	MRI behavior: for 'Q', do not add trailing nils
WITHOUT_CLASSIFICATION	this test may be too lax but it is the same as in MRI
WITHOUT_CLASSIFICATION	exec needs to behave differently in-process, because it's technically supposed to replace the calling process. So if we're supposed to run in-process, we allow it to use the default streams and not use pumpers at all. See JRUBY-2156 and JRUBY-2154.
WITHOUT_CLASSIFICATION	snip off ruby or jruby command from list of arguments leave alone if the command is the name of a script
WITHOUT_CLASSIFICATION	The problem we trying to solve below: STDIN in Java is blocked and non-interruptible, so if we invoke read on it, we might never be able to interrupt such thread. So, we use in.available() to see if there is any input ready, and only then read it. But this approach can't tell whether the end of stream reached or not, so we might end up looping right at the end of the stream. Well, at least, we can improve the situation by checking if some input was ever available, and if so, not checking for available anymore, and just go to read.
WITHOUT_CLASSIFICATION	first digit is always printed
WITHOUT_CLASSIFICATION	an empirically derived rule: precision applies to significand length, irrespective of exponent
WITHOUT_CLASSIFICATION	an official rule, clarified: if the exponent <clarif>after adjusting for exponent form</clarif> is < -4, or the exponent <clarif>after adjusting for exponent form</clarif> is greater than the precision, use exponent form
WITHOUT_CLASSIFICATION	in this mode, '.' is always printed
WITHOUT_CLASSIFICATION	now some data...
WITHOUT_CLASSIFICATION	now some data...
WITHOUT_CLASSIFICATION	MRI behavior: validate only the unnumbered arguments
WITHOUT_CLASSIFICATION	else catch oversize below
WITHOUT_CLASSIFICATION	calculation for simple (and typical) case, adapted from sun.misc.FloatingDecimal
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	utf8 lead byte
WITHOUT_CLASSIFICATION	utf8 lead byte
WITHOUT_CLASSIFICATION	utf8 lead byte
WITHOUT_CLASSIFICATION	could not get canonical path, just use given path
WITHOUT_CLASSIFICATION	We always open this rw since we can only open it r or rw.
WITHOUT_CLASSIFICATION	call chmod after we created the RandomAccesFile because otherwise, the file could be read-only
WITHOUT_CLASSIFICATION	attempt to set the permissions, if we have been passed a POSIX instance, and only if the file was created in this call.
WITHOUT_CLASSIFICATION	When reading into a heap buffer, the jvm allocates a temporary direct ByteBuffer of the requested size. To avoid allocating a huge direct buffer when doing ludicrous reads (e.g. 1G or more) we split the read up into chunks of no more than 1M
WITHOUT_CLASSIFICATION	If it is a file channel, then we can pre-allocate the output buffer to the total size of buffered + remaining bytes in file
WITHOUT_CLASSIFICATION	Cannot discern the total read length - allocate at least enough for the buffered data
WITHOUT_CLASSIFICATION	Copy what is in the buffer, if there is some buffered data
WITHOUT_CLASSIFICATION	append what we read into our buffer and allow the loop to continue
WITHOUT_CLASSIFICATION	already have some bytes buffered, just return those
WITHOUT_CLASSIFICATION	reset buffer
WITHOUT_CLASSIFICATION	Synchronize and re-check to avoid creating more than one Selector per provider
WITHOUT_CLASSIFICATION	TODO: Ruby logic is somewhat more complicated here, see comments after
WITHOUT_CLASSIFICATION	Is there something built into JRuby to do this?
WITHOUT_CLASSIFICATION	Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long assertTrue(value == valueViaValuesIterator);
WITHOUT_CLASSIFICATION	value equality result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); assertEquals("two", result);
WITHOUT_CLASSIFICATION	Uncomment the "puts" lines if you want to see more detail
WITHOUT_CLASSIFICATION	Since we don't have any other error reporting mechanism, we add the error message as an always-failing test to the test suite.
WITHOUT_CLASSIFICATION	change the thread context to include the class
TEST	TODO: test that surrogate value is legal.
TEST	Is getName() ok? test with 1.1
TEST	TODO: the '\n' literal here should be a test against REToken.newline, which unfortunately may be more than a single character.
WITHOUT_CLASSIFICATION	onlyStatic
WITHOUT_CLASSIFICATION	onlyStatic
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Doing instanceof? Next node is a type.
WITHOUT_CLASSIFICATION	{{{ Inner classes
WITHOUT_CLASSIFICATION	{{{ ParentDirectoryRenderer class
WITHOUT_CLASSIFICATION	{{{ TableMouseHandler class
WITHOUT_CLASSIFICATION	{{{ mouseClicked() method
WITHOUT_CLASSIFICATION	install man page
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	can't happen
WITHOUT_CLASSIFICATION	set proxy authentication
WITHOUT_CLASSIFICATION	{{{ autodetect() method
WITHOUT_CLASSIFICATION	file does not begin with UTF-8-Y signature. reset stream, read as UTF-8.
WITHOUT_CLASSIFICATION	Determine whether we are dealing with a one-, two-, three-, or four- byte sequence.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ insideCompoundEdit() method
WITHOUT_CLASSIFICATION	1-byte sequence: 000000000xxxxxxx = 0xxxxxxx
WITHOUT_CLASSIFICATION	null object ref is not instance of any type
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getName() method
WITHOUT_CLASSIFICATION	{{{ getDocument() method
WITHOUT_CLASSIFICATION	{{{ getParentElement() method
WITHOUT_CLASSIFICATION	{{{ getAttributes() method
WITHOUT_CLASSIFICATION	{{{ ensureCapacity() method
WITHOUT_CLASSIFICATION	{{{ RootElement constructor
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getStartOffset() method
WITHOUT_CLASSIFICATION	{{{ getEndOffset() method
WITHOUT_CLASSIFICATION	{{{ getElementIndex() method
WITHOUT_CLASSIFICATION	No super method, try to invoke regular method could be a superfluous "super." which is legal.
WITHOUT_CLASSIFICATION	Local Variables.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ loadClass() method
WITHOUT_CLASSIFICATION	{{{ getZipFile() method
WITHOUT_CLASSIFICATION	Defer to whoever loaded us (such as JShell, Echidna, etc)
WITHOUT_CLASSIFICATION	remember that this class doesn't exist for future reference
WITHOUT_CLASSIFICATION	{{{ getResourceAsStream() method
WITHOUT_CLASSIFICATION	{{{ getResource() method
WITHOUT_CLASSIFICATION	{{{ getResourceAsPath() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ dump() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ JARClassLoader constructor
WITHOUT_CLASSIFICATION	{{{ finalize() method
WITHOUT_CLASSIFICATION	{{{ activate() method
WITHOUT_CLASSIFICATION	{{{ deactivate() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	boolean
WITHOUT_CLASSIFICATION	boolean
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ _loadClass() method
WITHOUT_CLASSIFICATION	{{{ ServiceListHandler constructor
WITHOUT_CLASSIFICATION	{{{ resolveEntity() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ attribute() method
WITHOUT_CLASSIFICATION	{{{ doctypeDecl() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getElementCount() method
WITHOUT_CLASSIFICATION	{{{ charData() method
WITHOUT_CLASSIFICATION	{{{ startElement() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	can't happen
WITHOUT_CLASSIFICATION	{{{ getElement() method
WITHOUT_CLASSIFICATION	{{{ endElement() method
WITHOUT_CLASSIFICATION	{{{ startDocument() method
WITHOUT_CLASSIFICATION	{{{ getCachedServices() method
WITHOUT_CLASSIFICATION	{{{ isLeaf() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ pushElement() method
WITHOUT_CLASSIFICATION	{{{ peekElement() method
WITHOUT_CLASSIFICATION	{{{ popElement() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getName() method
WITHOUT_CLASSIFICATION	{{{ getLabel() method
WITHOUT_CLASSIFICATION	{{{ OptionGroup constructor
WITHOUT_CLASSIFICATION	{{{ OptionGroup constructor
WITHOUT_CLASSIFICATION	{{{ addOptionGroup() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ addOptionPane() method
WITHOUT_CLASSIFICATION	{{{ addOptionPane() method
WITHOUT_CLASSIFICATION	{{{ getMembers() method
WITHOUT_CLASSIFICATION	{{{ getMember() method
WITHOUT_CLASSIFICATION	{{{ getMemberIndex() method
WITHOUT_CLASSIFICATION	{{{ getMemberCount() method
WITHOUT_CLASSIFICATION	{{{ setSort() method
WITHOUT_CLASSIFICATION	{{{ insertionSort() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ invoke() method
WITHOUT_CLASSIFICATION	{{{ getName() method
WITHOUT_CLASSIFICATION	{{{ getLabel() method
WITHOUT_CLASSIFICATION	{{{ removeFromBus() method
WITHOUT_CLASSIFICATION	{{{ addToBus() method
WITHOUT_CLASSIFICATION	{{{ getComponents() method
WITHOUT_CLASSIFICATION	{{{ send() method
WITHOUT_CLASSIFICATION	can't create new instances
WITHOUT_CLASSIFICATION	{{{ EditAction constructor
WITHOUT_CLASSIFICATION	{{{ getMouseOverText() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getView() method
WITHOUT_CLASSIFICATION	{{{ isToggle() method
WITHOUT_CLASSIFICATION	{{{ isSelected() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getCode() method
WITHOUT_CLASSIFICATION	{{{ noRepeat() method
WITHOUT_CLASSIFICATION	{{{ noRecord() method
WITHOUT_CLASSIFICATION	{{{ noRememberLast() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Wrapper class
WITHOUT_CLASSIFICATION	{{{ setInterval() method
WITHOUT_CLASSIFICATION	{{{ stop() method
WITHOUT_CLASSIFICATION	{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	might come in handy useful some time
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Animator class
WITHOUT_CLASSIFICATION	{{{ AbbrevEditor constructor
WITHOUT_CLASSIFICATION	{{{ getAbbrev() method
WITHOUT_CLASSIFICATION	{{{ setAbbrev() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}} {{{ KEY_RELEASED...
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	on some Windows versions, connections to localhost fail if the network is not running. To avoid confusing newbies with weird error messages, log errors that occur while starting the server as NOTICE, not ERROR
WITHOUT_CLASSIFICATION	{{{ run() method
WITHOUT_CLASSIFICATION	{{{ handleClient() method
WITHOUT_CLASSIFICATION	{{{ handleClient() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	no background mode, and opening a new view
WITHOUT_CLASSIFICATION	no background mode, and reusing existing view
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ handleClient() method
WITHOUT_CLASSIFICATION	un-iconify using JDK 1.3 API
WITHOUT_CLASSIFICATION	{{{ isOK() method
WITHOUT_CLASSIFICATION	{{{ getPort method
WITHOUT_CLASSIFICATION	{{{ stopServer() method
WITHOUT_CLASSIFICATION	{{{ invoke() method
WITHOUT_CLASSIFICATION	Reset the timeout
WITHOUT_CLASSIFICATION	{{{ BeanShellAction constructor
WITHOUT_CLASSIFICATION	Some characters that we like to use in action names ('.', '-') are not allowed in BeanShell identifiers.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getCode() method
WITHOUT_CLASSIFICATION	{{{ isSelected() method
WITHOUT_CLASSIFICATION	{{{ noRepeat() method
WITHOUT_CLASSIFICATION	{{{ noRecord() method
WITHOUT_CLASSIFICATION	{{{ noRememberLast() method
WITHOUT_CLASSIFICATION	so that in the future we don't see streams of exceptions
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ resolveEntity() method
WITHOUT_CLASSIFICATION	{{{ attribute() method
WITHOUT_CLASSIFICATION	{{{ doctypeDecl() method
WITHOUT_CLASSIFICATION	Runtime runtime = Runtime.getRuntime();int freeMemory = (int)(runtime.freeMemory() / 1024);int totalMemory = (int)(runtime.totalMemory() / 1024);int usedMemory = (totalMemory - freeMemory);Log.log(Log.DEBUG,this,"Java heap: " + usedMemory + "Kb / "+ totalMemory + "Kb, " + (usedMemory 100 / totalMemory)+ "%");
WITHOUT_CLASSIFICATION	save list of open files
WITHOUT_CLASSIFICATION	flush log
WITHOUT_CLASSIFICATION	{{{ ActionListHandler constructor
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	can't happen
WITHOUT_CLASSIFICATION	{{{ charData() method
WITHOUT_CLASSIFICATION	{{{ startElement() method
WITHOUT_CLASSIFICATION	{{{ endElement() method
WITHOUT_CLASSIFICATION	{{{ startDocument() method
WITHOUT_CLASSIFICATION	{{{ pushElement() method
WITHOUT_CLASSIFICATION	{{{ paste() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ copy() method
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	{{{ peekElement() method
WITHOUT_CLASSIFICATION	{{{ popElement() method
WITHOUT_CLASSIFICATION	protected members
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ append() method
WITHOUT_CLASSIFICATION	{{{ append() method
WITHOUT_CLASSIFICATION	{{{ append() method
WITHOUT_CLASSIFICATION	{{{ paste() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ setRegister() method
WITHOUT_CLASSIFICATION	{{{ setRegister() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	to avoid data loss, only do this if the above completed successfully
WITHOUT_CLASSIFICATION	{{{ clearRegister() method
WITHOUT_CLASSIFICATION	{{{ getRegisters() method
WITHOUT_CLASSIFICATION	{{{ getRegisterStatusPrompt() method
WITHOUT_CLASSIFICATION	{{{ saveRegisters() method
WITHOUT_CLASSIFICATION	{{{ loadRegisters() method
WITHOUT_CLASSIFICATION	Log.log(Log.DEBUG,Registers.class,fnf);
WITHOUT_CLASSIFICATION	{{{ Inner classes
WITHOUT_CLASSIFICATION	{{{ Register interface
WITHOUT_CLASSIFICATION	{{{ ClipboardRegister class
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ resolveEntity() method
WITHOUT_CLASSIFICATION	remove trailing \n
WITHOUT_CLASSIFICATION	{{{ StringRegister class
WITHOUT_CLASSIFICATION	{{{ RegistersHandler class
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ attribute() method
WITHOUT_CLASSIFICATION	{{{ doctypeDecl() method
WITHOUT_CLASSIFICATION	{{{ charData() method
WITHOUT_CLASSIFICATION	{{{ endElement() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ EBMessage constructor
WITHOUT_CLASSIFICATION	{{{ EBMessage constructor
WITHOUT_CLASSIFICATION	{{{ getSource() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Deprecated methods
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getView() method
WITHOUT_CLASSIFICATION	{{{ getBuffer() method
WITHOUT_CLASSIFICATION	{{{ setBuffer() method
WITHOUT_CLASSIFICATION	{{{ getTextArea() method
WITHOUT_CLASSIFICATION	only do this if we are the current edit pane
WITHOUT_CLASSIFICATION	Only do this after all I/O requests are complete
WITHOUT_CLASSIFICATION	avoid a race condition see bug #834338
WITHOUT_CLASSIFICATION	{{{ prevBuffer() method
WITHOUT_CLASSIFICATION	{{{ nextBuffer() method
WITHOUT_CLASSIFICATION	{{{ recentBuffer() method
WITHOUT_CLASSIFICATION	{{{ focusOnTextArea() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getLabel() method
WITHOUT_CLASSIFICATION	{{{ ActionSet constructor
WITHOUT_CLASSIFICATION	{{{ ActionSet constructor
WITHOUT_CLASSIFICATION	{{{ ActionSet constructor
WITHOUT_CLASSIFICATION	{{{ setLabel() method
WITHOUT_CLASSIFICATION	{{{ getPluginJAR() method
WITHOUT_CLASSIFICATION	{{{ addAction() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ removeAction() method
WITHOUT_CLASSIFICATION	{{{ removeAllActions() method
WITHOUT_CLASSIFICATION	{{{ getAction() method
WITHOUT_CLASSIFICATION	{{{ getActionCount() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getActions() method
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ load() method
WITHOUT_CLASSIFICATION	{{{ getActionNames() method
WITHOUT_CLASSIFICATION	{{{ getActionNames() method
WITHOUT_CLASSIFICATION	{{{ getCacheableActionNames() method
WITHOUT_CLASSIFICATION	{{{ contains() method
WITHOUT_CLASSIFICATION	{{{ size() method
WITHOUT_CLASSIFICATION	{{{ initKeyBindings() method
WITHOUT_CLASSIFICATION	actions.clear();
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ dragAndDropCallback() method
WITHOUT_CLASSIFICATION	{{{ initTextArea() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ initBufferSwitcher() method
WITHOUT_CLASSIFICATION	{{{ MyFocusManager class
WITHOUT_CLASSIFICATION	{{{ MyFocusTraversalPolicy class
WITHOUT_CLASSIFICATION	{{{ MouseWheelHandler class
WITHOUT_CLASSIFICATION	{{{ TextAreaTransferHandler class
WITHOUT_CLASSIFICATION	I assume that there can be only one drag operation at the time
WITHOUT_CLASSIFICATION	if user drops into the sameselection where they started, donothing.
WITHOUT_CLASSIFICATION	if user drops into a selection,replace selection
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	otherwise just insert the text
WITHOUT_CLASSIFICATION	correctly handle text flavor + file list flavor + text area read only, do an or of all flags
WITHOUT_CLASSIFICATION	{{{ DropHandler class
WITHOUT_CLASSIFICATION	textArea.getBuffer().beginCompoundEdit();
WITHOUT_CLASSIFICATION	textArea.getBuffer().endCompoundEdit();
WITHOUT_CLASSIFICATION	textArea.getBuffer().endCompoundEdit();
WITHOUT_CLASSIFICATION	{{{ TextAreaSelection class
WITHOUT_CLASSIFICATION	{{{ showBufferSwitcher() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Path name methods
WITHOUT_CLASSIFICATION	{{{ constructPath() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ canonPath() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	get rid of mixed paths on Windows
WITHOUT_CLASSIFICATION	also get rid of trailing spaces on Windows
WITHOUT_CLASSIFICATION	do the same on OS X
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ resolveSymlinks() method
WITHOUT_CLASSIFICATION	{{{ isAbsolutePath() method
WITHOUT_CLASSIFICATION	not sure if this is correct for OpenVMS.
WITHOUT_CLASSIFICATION	nice and simple
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ saveCaretInfo() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ concatPath() method
WITHOUT_CLASSIFICATION	Make all child paths relative.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getFileExtension() method
WITHOUT_CLASSIFICATION	{{{ getFileName() method
WITHOUT_CLASSIFICATION	{{{ getFileNameNoExtension() method
WITHOUT_CLASSIFICATION	{{{ getFileParent() method
WITHOUT_CLASSIFICATION	{{{ getParentOfPath() method
WITHOUT_CLASSIFICATION	{{{ getFileProtocol() method
WITHOUT_CLASSIFICATION	{{{ getProtocolOfURL() method
WITHOUT_CLASSIFICATION	{{{ isURL() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	C:\AUTOEXEC.BAT
WITHOUT_CLASSIFICATION	/etc/passwd
WITHOUT_CLASSIFICATION	D:\WINDOWS, or doesn't contain : at all
WITHOUT_CLASSIFICATION	If backups is 1, create ~ file
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Selection[] selection = (Selection[])buffer.getProperty(Buffer.SELECTION);
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	if backup file was created less than 'backupTimeDistance' ago, we do not create the backup
WITHOUT_CLASSIFICATION	If backups > 1, move old ~n~ files, create ~1~ file
WITHOUT_CLASSIFICATION	delete a backup created using above method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ fileToClass() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ classToFile() method
WITHOUT_CLASSIFICATION	Treat lhs and rhs as arbitrary objects and do the operation.(including NULL and VOID represented by their Primitive types)
WITHOUT_CLASSIFICATION	{{{ Text methods
WITHOUT_CLASSIFICATION	{{{ getLeadingWhiteSpace() method
WITHOUT_CLASSIFICATION	FALL THROUGH TO DEFAULT CASE!!!
WITHOUT_CLASSIFICATION	object is a non-null and non-void Primitive type
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Bsh scripted object
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getTrailingWhiteSpace() method
WITHOUT_CLASSIFICATION	{{{ getLeadingWhiteSpaceWidth() method
WITHOUT_CLASSIFICATION	{{{ getVirtualWidth() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getOffsetOfVirtualColumn() method
WITHOUT_CLASSIFICATION	{{{ createWhiteSpace() method
WITHOUT_CLASSIFICATION	{{{ createWhiteSpace() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ globToRE() method
WITHOUT_CLASSIFICATION	{{{ escapesToChars() method
WITHOUT_CLASSIFICATION	{{{ charsToEscapes() method
WITHOUT_CLASSIFICATION	{{{ charsToEscapes() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ compareVersions() method
WITHOUT_CLASSIFICATION	{{{ compareStrings() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	_i--;
WITHOUT_CLASSIFICATION	_j--;
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ stringsEqual() method
WITHOUT_CLASSIFICATION	{{{ objectsEqual() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ isVMS() method
WITHOUT_CLASSIFICATION	{{{ isMacOSLF() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ hasScreenMenuBar
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ isJava14() method
WITHOUT_CLASSIFICATION	{{{ isJava15() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Class initializer
WITHOUT_CLASSIFICATION	for debugging, make jEdit think its using a different version of Java than it really is.
WITHOUT_CLASSIFICATION	{{{ Some constants
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ charsToEntities() method
WITHOUT_CLASSIFICATION	{{{ formatFileSize() method
WITHOUT_CLASSIFICATION	{{{ getLongestPrefix() method
WITHOUT_CLASSIFICATION	{{{ getLongestPrefix() method
WITHOUT_CLASSIFICATION	{{{ getLongestPrefix() method
WITHOUT_CLASSIFICATION	delcaredOnly
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Sorting methods
WITHOUT_CLASSIFICATION	{{{ quicksort() method
WITHOUT_CLASSIFICATION	{{{ quicksort() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ quicksort() method
WITHOUT_CLASSIFICATION	{{{ Compare interface
WITHOUT_CLASSIFICATION	{{{ StringCompare class
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ StringICaseCompare class
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Java object
WITHOUT_CLASSIFICATION	{{{ MenuItemCompare class
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Map types to assignable forms, need to keep this fast...
WITHOUT_CLASSIFICATION	{{{ buildToVersion() method
WITHOUT_CLASSIFICATION	First 2 chars are the major version number
WITHOUT_CLASSIFICATION	Second 2 are the minor number
WITHOUT_CLASSIFICATION	Then the pre-release status
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Finally the bug fix release
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ 1. Check whether tools.jar is in the system classpath:
WITHOUT_CLASSIFICATION	Log.log(Log.DEBUG, MiscUtilities.class, "- is not in system classpath."); }}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ 2. Check whether it is in the jEdit user settings jars folder:
WITHOUT_CLASSIFICATION	jEdit will load it automatically
WITHOUT_CLASSIFICATION	jEdit will load it automatically
WITHOUT_CLASSIFICATION	{{{ 3. Check whether it is in jEdit's system jars folder:
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ 4. Check whether it is in <java.home>/lib:
WITHOUT_CLASSIFICATION	{{{ Load it, if not yet done:
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getEncodings() method
WITHOUT_CLASSIFICATION	{{{ isSupportedEncoding() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ compareChars()
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ handleMessage() method
WITHOUT_CLASSIFICATION	{{{ maybeReload() method
WITHOUT_CLASSIFICATION	On Windows and MacOS, path names are case insensitive
WITHOUT_CLASSIFICATION	{{{ Input/output methods
WITHOUT_CLASSIFICATION	onlyStatic
WITHOUT_CLASSIFICATION	unwrap any primitives
WITHOUT_CLASSIFICATION	onlystatic
WITHOUT_CLASSIFICATION	onlystatic
WITHOUT_CLASSIFICATION	onlystatic
WITHOUT_CLASSIFICATION	no field, try property acces
WITHOUT_CLASSIFICATION	not a field, try property access
WITHOUT_CLASSIFICATION	shouldn't happen
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getExpandOnInput() method
WITHOUT_CLASSIFICATION	{{{ setExpandOnInput() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ expandAbbrev() method
WITHOUT_CLASSIFICATION	{{{ Figure out some minor things
WITHOUT_CLASSIFICATION	we reuse the 'pp' vector to save time
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ load() method
WITHOUT_CLASSIFICATION	positional parameters will be inserted where $1, $2, $3, ... occurs in the expansion
WITHOUT_CLASSIFICATION	{{{ Handle abbrevs of the form abbrev#pos1#pos2#pos3#...
WITHOUT_CLASSIFICATION	have to check again since above might set NEW_FILE flag
WITHOUT_CLASSIFICATION	{{{ reload() method
WITHOUT_CLASSIFICATION	For `reload' command
WITHOUT_CLASSIFICATION	Only on initial load
WITHOUT_CLASSIFICATION	{{{ Do some stuff once loading is finished
WITHOUT_CLASSIFICATION	if reloading a file, clear dirty flag
WITHOUT_CLASSIFICATION	view text areas temporarily blank out while a buffer is being loaded, to indicate to the user that there is no data available yet.
WITHOUT_CLASSIFICATION	theoretically a segment could have seg.offset != 0 but SegmentBuffer never does that
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ setMode() method
WITHOUT_CLASSIFICATION	{{{ setMode() method
WITHOUT_CLASSIFICATION	{{{ setMode() method
WITHOUT_CLASSIFICATION	This protects against stupid people (like me) doing stuff like buffer.setMode(jEdit.getMode(...));
WITHOUT_CLASSIFICATION	this must be in reverse order so that modes from the user catalog get checked first!
WITHOUT_CLASSIFICATION	{{{ markTokens() method
WITHOUT_CLASSIFICATION	{{{ Indentation
WITHOUT_CLASSIFICATION	{{{ removeTrailingWhiteSpace() method
WITHOUT_CLASSIFICATION	blank line
WITHOUT_CLASSIFICATION	no whitespace
WITHOUT_CLASSIFICATION	{{{ shiftIndentLeft() method
WITHOUT_CLASSIFICATION	{{{ shiftIndentRight() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getVirtualWidth() method
WITHOUT_CLASSIFICATION	{{{ getOffsetOfVirtualColumn() method
WITHOUT_CLASSIFICATION	{{{ getOpenParenIndent() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	the first element of pp is the abbrev itself
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} {{{ Handle ordinary abbrevs
WITHOUT_CLASSIFICATION	{{{ Maybe show add abbrev dialog
WITHOUT_CLASSIFICATION	{{{ getGlobalAbbrevs() method
WITHOUT_CLASSIFICATION	{{{ setGlobalAbbrevs() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getModeAbbrevs() method
WITHOUT_CLASSIFICATION	{{{ setModeAbbrevs() method
WITHOUT_CLASSIFICATION	{{{ addGlobalAbbrev() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ load() method
WITHOUT_CLASSIFICATION	{{{ addModeAbbrev() method
WITHOUT_CLASSIFICATION	only load global abbrevs if user abbrevs file could not be loaded
WITHOUT_CLASSIFICATION	{{{ countNewlines() method
WITHOUT_CLASSIFICATION	try mode-specific abbrevs first
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ expandAbbrev() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ loadAbbrevs() method
WITHOUT_CLASSIFICATION	{{{ saveAbbrevs() method
WITHOUT_CLASSIFICATION	{{{ saveAbbrevs() method
WITHOUT_CLASSIFICATION	write global abbrevs
WITHOUT_CLASSIFICATION	write mode abbrevs
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	number of positional parameters in abbreviation expansion
WITHOUT_CLASSIFICATION	{{{ Expansion constructor
WITHOUT_CLASSIFICATION	{{{ Handle backslash
WITHOUT_CLASSIFICATION	$n is 1-indexed, but vector contents is zero indexed
WITHOUT_CLASSIFICATION	$key will be $key, for example
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ insertAtColumn() method
WITHOUT_CLASSIFICATION	{{{ insertIndented() method
WITHOUT_CLASSIFICATION	obtain the leading indent for later use
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ start() method
WITHOUT_CLASSIFICATION	{{{ stop() method
WITHOUT_CLASSIFICATION	{{{ getClassName() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getPluginJAR() method
WITHOUT_CLASSIFICATION	this one only finds public (and in interfaces, etc.)
WITHOUT_CLASSIFICATION	try declaredField
WITHOUT_CLASSIFICATION	{{{ createMenuItems() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ createMenuItems() method
WITHOUT_CLASSIFICATION	{{{ createBrowserMenuItems() method
WITHOUT_CLASSIFICATION	{{{ Deprecated methods
WITHOUT_CLASSIFICATION	{{{ createOptionPanes() method
WITHOUT_CLASSIFICATION	{{{ getJAR() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	package-private members
WITHOUT_CLASSIFICATION	{{{ Deferred class
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	package-private members
WITHOUT_CLASSIFICATION	{{{ JAR class
WITHOUT_CLASSIFICATION	{{{ getVersion() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getBuild() method
WITHOUT_CLASSIFICATION	(major).(minor).(<99 = preX, 99 = final).(bug fix)
WITHOUT_CLASSIFICATION	{{{ main() method
WITHOUT_CLASSIFICATION	{{{ Check for Java 1.3 or later
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Miscellaneous methods
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getNext() method
WITHOUT_CLASSIFICATION	MacOS users expect the app to keep running after all windows are closed
WITHOUT_CLASSIFICATION	{{{ getPrev() method
WITHOUT_CLASSIFICATION	{{{ setWaitSocket() method
WITHOUT_CLASSIFICATION	{{{ getIndex() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Parse command line
WITHOUT_CLASSIFICATION	open initial view?
WITHOUT_CLASSIFICATION	script to run
WITHOUT_CLASSIFICATION	{{{ We need these initializations very early on
WITHOUT_CLASSIFICATION	{{{ Try connecting to another running jEdit instance
WITHOUT_CLASSIFICATION	block until its closed
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Initialize settings directory
WITHOUT_CLASSIFICATION	Write a warning message:
WITHOUT_CLASSIFICATION	{{{ Get things rolling
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Initialize server
WITHOUT_CLASSIFICATION	{{{ Do more stuff
WITHOUT_CLASSIFICATION	Buffer sort
WITHOUT_CLASSIFICATION	{{{ Initialize Java 1.4-specific code
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Activate plugins that must be activated at startup
WITHOUT_CLASSIFICATION	{{{ Load macros and run startup scripts, after plugins and settings are loaded
WITHOUT_CLASSIFICATION	{{{ Run script specified with -run= parameter
WITHOUT_CLASSIFICATION	Open files, create the view and hide the splash screen.
WITHOUT_CLASSIFICATION	{{{ Property methods
WITHOUT_CLASSIFICATION	{{{ getProperties() method
WITHOUT_CLASSIFICATION	{{{ getProperty() method
WITHOUT_CLASSIFICATION	{{{ getProperty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getProperty() method
WITHOUT_CLASSIFICATION	{{{ getBooleanProperty() method
WITHOUT_CLASSIFICATION	{{{ getBooleanProperty() method
WITHOUT_CLASSIFICATION	{{{ getIntegerProperty() method
WITHOUT_CLASSIFICATION	{{{ getDoubleProperty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Not found, fall through to next class
WITHOUT_CLASSIFICATION	Now, on with the hunt...
WITHOUT_CLASSIFICATION	Quick check catches public fields include those in interfaces
WITHOUT_CLASSIFICATION	{{{ getFontProperty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getFontProperty() method
WITHOUT_CLASSIFICATION	{{{ getColorProperty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ setColorProperty() method
WITHOUT_CLASSIFICATION	{{{ setProperty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ setTemporaryProperty() method
WITHOUT_CLASSIFICATION	{{{ setBooleanProperty() method
WITHOUT_CLASSIFICATION	{{{ setIntegerProperty() method
WITHOUT_CLASSIFICATION	{{{ setDoubleProperty() method
WITHOUT_CLASSIFICATION	{{{ setFontProperty() method
WITHOUT_CLASSIFICATION	{{{ unsetProperty() method
WITHOUT_CLASSIFICATION	{{{ resetProperty() method
WITHOUT_CLASSIFICATION	{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	give all text areas the same font
WITHOUT_CLASSIFICATION	defaults.put("TextField.font",font);
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Enable/Disable tooltips
WITHOUT_CLASSIFICATION	we do this here instead of adding buffers to the bus.
WITHOUT_CLASSIFICATION	{{{ getPluginJARs() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getPlugin() method
WITHOUT_CLASSIFICATION	{{{ Plugin management methods
WITHOUT_CLASSIFICATION	{{{ getNotLoadedPluginJARs() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getPluginJAR() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ _getLineManager() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getPlugin(String, boolean) method
WITHOUT_CLASSIFICATION	{{{ getPlugins() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ addPluginJAR() method
WITHOUT_CLASSIFICATION	backwards compatibility...
WITHOUT_CLASSIFICATION	{{{ addPluginJARsFromDirectory() method
WITHOUT_CLASSIFICATION	remove this when 4.1 plugin API is deprecated
WITHOUT_CLASSIFICATION	{{{ removePluginJAR() method
WITHOUT_CLASSIFICATION	{{{ Action methods
WITHOUT_CLASSIFICATION	{{{ getActionContext() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ addActionSet() method
WITHOUT_CLASSIFICATION	{{{ removeActionSet() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getAction() method
WITHOUT_CLASSIFICATION	{{{ getBuiltInActionSet() method
WITHOUT_CLASSIFICATION	{{{ getActionSets() method
WITHOUT_CLASSIFICATION	{{{ getActionSetForAction() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getActions() method
WITHOUT_CLASSIFICATION	{{{ getActionNames() method
WITHOUT_CLASSIFICATION	{{{ getActionSetForAction() method
WITHOUT_CLASSIFICATION	{{{ Edit mode methods
WITHOUT_CLASSIFICATION	{{{ reloadModes() method
WITHOUT_CLASSIFICATION	Try to guess the eventual size to avoid unnecessary copying
WITHOUT_CLASSIFICATION	{{{ Load the global catalog
WITHOUT_CLASSIFICATION	{{{ Load user catalog
WITHOUT_CLASSIFICATION	create dummy catalog
WITHOUT_CLASSIFICATION	{{{ getMode() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ openFile() method
WITHOUT_CLASSIFICATION	{{{ openFile() method
WITHOUT_CLASSIFICATION	{{{ openFile() method
WITHOUT_CLASSIFICATION	{{{ getModes() method
WITHOUT_CLASSIFICATION	{{{ Buffer creation methods
WITHOUT_CLASSIFICATION	{{{ openFiles() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ openFile() method
WITHOUT_CLASSIFICATION	{{{ openTemporary() method
WITHOUT_CLASSIFICATION	{{{ commitTemporary() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Buffer constructor
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	if loadAutosave is false, we loaded an autosave file, so we set 'dirty' to true
WITHOUT_CLASSIFICATION	note that we don't use setDirty(), because a) that would send an unnecessary message, b) it would also set the AUTOSAVE_DIRTY flag, which will make the autosave thread write out a redundant autosave file
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ KeyHandler class
WITHOUT_CLASSIFICATION	{{{ Renderer class
WITHOUT_CLASSIFICATION	{{{ keyPressed() method
WITHOUT_CLASSIFICATION	int
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	send full range of events to avoid breaking plugins
WITHOUT_CLASSIFICATION	{{{ newFile() method
WITHOUT_CLASSIFICATION	don't want 'New File' to create a read only buffer if current file is on SQL VFS or something
WITHOUT_CLASSIFICATION	return the newly created 'untitled-1'
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Find the highest Untitled-n file
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Buffer management methods
WITHOUT_CLASSIFICATION	{{{ closeBuffer() method
WITHOUT_CLASSIFICATION	send some EditBus messages
WITHOUT_CLASSIFICATION	EditBus.send(new BufferUpdate(Buffer.this, view,BufferUpdate.MARKERS_CHANGED));
WITHOUT_CLASSIFICATION	{{{ keyTyped() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ insertFile() method
WITHOUT_CLASSIFICATION	this returns false if initial sanity checks (if the file is a directory, etc) fail
WITHOUT_CLASSIFICATION	{{{ checkFileStatus() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ autosave() method
WITHOUT_CLASSIFICATION	{{{ saveAs() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	files[] should have length 1, since the dialog type is SAVE_DIALOG
WITHOUT_CLASSIFICATION	Once save is complete, do a few other things
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	fall through
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	\t handled above
WITHOUT_CLASSIFICATION	eg, foo<C+b>, will insert foobar,
WITHOUT_CLASSIFICATION	{{{ getName() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ isFocusTraversable() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Getters/setter methods for various buffer meta-data
WITHOUT_CLASSIFICATION	{{{ getLastModified() method
WITHOUT_CLASSIFICATION	{{{ setLastModified() method
WITHOUT_CLASSIFICATION	{{{ getVFS() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ _closeBuffer() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getPath() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getSymlinkPath() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ isClosed() method
WITHOUT_CLASSIFICATION	{{{ getDirectory() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ isLoaded() method
WITHOUT_CLASSIFICATION	{{{ isPerformingIO() method
WITHOUT_CLASSIFICATION	{{{ isNewFile() method
WITHOUT_CLASSIFICATION	{{{ setNewFile() method
WITHOUT_CLASSIFICATION	{{{ isUntitled() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	zero it here so that BufferTabs doesn't have any problems
WITHOUT_CLASSIFICATION	{{{ saveAllBuffers() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ reloadAllBuffers() method
WITHOUT_CLASSIFICATION	save caret info. Buffer.load() will load it.
WITHOUT_CLASSIFICATION	{{{ _getBuffer() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getBuffer() method
WITHOUT_CLASSIFICATION	{{{ getBuffers() method
WITHOUT_CLASSIFICATION	{{{ getBufferCount() method
WITHOUT_CLASSIFICATION	{{{ getFirstBuffer() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getLastBuffer() method
WITHOUT_CLASSIFICATION	{{{ checkBufferStatus() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ isDirty() method
WITHOUT_CLASSIFICATION	{{{ isReadOnly() method
WITHOUT_CLASSIFICATION	{{{ isEditable() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ setDirty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ setReadOnly() method
WITHOUT_CLASSIFICATION	fixes dirty flag not being reset on save/insert/undo/redo/undo
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	fall through
WITHOUT_CLASSIFICATION	{{{ View methods
WITHOUT_CLASSIFICATION	{{{ getInputHandler() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ isTemporary() method
WITHOUT_CLASSIFICATION	{{{ getIcon() method
WITHOUT_CLASSIFICATION	{{{ Thread safety
WITHOUT_CLASSIFICATION	{{{ readLock() method
WITHOUT_CLASSIFICATION	{{{ readUnlock() method
WITHOUT_CLASSIFICATION	{{{ writeLock() method
WITHOUT_CLASSIFICATION	{{{ writeUnlock() method
WITHOUT_CLASSIFICATION	{{{ Line offset methods
WITHOUT_CLASSIFICATION	{{{ getLength() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	no need to lock since this just returns a value and that's it
WITHOUT_CLASSIFICATION	no need to lock since this just returns a value and that's it
WITHOUT_CLASSIFICATION	{{{ getLineCount() method
WITHOUT_CLASSIFICATION	{{{ getLineOfOffset() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getLineStartOffset() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getLineEndOffset() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getLineLength() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ invalidateCachedScreenLineCounts() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Text getters and setters
WITHOUT_CLASSIFICATION	{{{ getLineText() method
WITHOUT_CLASSIFICATION	{{{ getLineText() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getText() method
WITHOUT_CLASSIFICATION	{{{ getText() method
WITHOUT_CLASSIFICATION	{{{ insert() method
WITHOUT_CLASSIFICATION	{{{ insert() method
WITHOUT_CLASSIFICATION	{{{ remove() method
WITHOUT_CLASSIFICATION	otherwise it will be delivered later
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Undo
WITHOUT_CLASSIFICATION	{{{ undo() method
WITHOUT_CLASSIFICATION	{{{ redo() method
WITHOUT_CLASSIFICATION	{{{ isTransactionInProgress() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ beginCompoundEdit() method
WITHOUT_CLASSIFICATION	{{{ endCompoundEdit() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ insideCompoundEdit() method
WITHOUT_CLASSIFICATION	{{{ Buffer events
WITHOUT_CLASSIFICATION	{{{ addBufferChangeListener() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ removeBufferChangeListener() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getBufferChangeListeners() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getProperty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getIndentSize() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getTabSize() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ setProperty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Now try buffer.<property>
WITHOUT_CLASSIFICATION	{{{ initProxy() method
WITHOUT_CLASSIFICATION	For backwards compatibility
WITHOUT_CLASSIFICATION	First try the buffer-local properties
WITHOUT_CLASSIFICATION	Now try mode.<mode>.<property>
WITHOUT_CLASSIFICATION	Try returning it as an integer first
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ newView() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	set proxy host
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ newView() method
WITHOUT_CLASSIFICATION	{{{ newView() method
WITHOUT_CLASSIFICATION	{{{ newView() method
WITHOUT_CLASSIFICATION	set proxy port
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	show tip of the day
WITHOUT_CLASSIFICATION	set non proxy hosts list
WITHOUT_CLASSIFICATION	{{{ closeView() method
WITHOUT_CLASSIFICATION	{{{ getViews() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getViewCount() method
WITHOUT_CLASSIFICATION	{{{ getFirstView() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getLastView() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getActiveView() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	eg user just closed a view and didn't focus another
WITHOUT_CLASSIFICATION	{{{ Miscellaneous methods
WITHOUT_CLASSIFICATION	{{{ isMainThread() method
WITHOUT_CLASSIFICATION	{{{ isBackgroundMode() method
WITHOUT_CLASSIFICATION	{{{ showMemoryStatusDialog() method
WITHOUT_CLASSIFICATION	{{{ getJEditHome() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getSettingsDirectory() method
WITHOUT_CLASSIFICATION	{{{ getJARCacheDirectory() method
WITHOUT_CLASSIFICATION	{{{ backupSettingsFile() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ exit() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ saveSettings() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Wait for pending I/O requests
WITHOUT_CLASSIFICATION	Close dialog, view.close() call need a view...
WITHOUT_CLASSIFICATION	Send EditorExitRequested
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Close all buffers
WITHOUT_CLASSIFICATION	If we are running in background mode and reallyExit was not specified, then return here.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Save settings in case user kills the backgrounded jEdit process
WITHOUT_CLASSIFICATION	Save view properties here
WITHOUT_CLASSIFICATION	Stop autosave timer
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Send EditorExiting
WITHOUT_CLASSIFICATION	Save settings
WITHOUT_CLASSIFICATION	Close activity log stream
WITHOUT_CLASSIFICATION	Byebye...
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ getEditServer() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ addMode() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ loadMode() method
WITHOUT_CLASSIFICATION	package-private
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ addPluginProps() method
WITHOUT_CLASSIFICATION	{{{ removePluginProps() method
WITHOUT_CLASSIFICATION	{{{ pluginError() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Static variables
WITHOUT_CLASSIFICATION	{{{ setActiveView() method
WITHOUT_CLASSIFICATION	buffer link list
WITHOUT_CLASSIFICATION	makes openTemporary() thread-safe
WITHOUT_CLASSIFICATION	view link list
WITHOUT_CLASSIFICATION	{{{ usage() method
WITHOUT_CLASSIFICATION	{{{ version() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ initMisc() method
WITHOUT_CLASSIFICATION	{{{ makeServerScript() method
WITHOUT_CLASSIFICATION	Add our protocols to java.net.URL's list
WITHOUT_CLASSIFICATION	Determine installation directory. If the jedit.home property is set, use that. Then, look for jedit.jar in the classpath. If that fails, assume this is the web start version.
WITHOUT_CLASSIFICATION	Set the User-Agent string used by the java.net HTTP handler
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	check if web start
WITHOUT_CLASSIFICATION	use user.dir as last resort
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ unsetProperty() method
WITHOUT_CLASSIFICATION	Add an EditBus component that will reload edit modes and macros if they are changed from within the editor
WITHOUT_CLASSIFICATION	{{{ initSiteProperties() method
WITHOUT_CLASSIFICATION	{{{ initSystemProperties() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	site properties are loaded as default properties, overwriting jEdit's system properties
WITHOUT_CLASSIFICATION	{{{ initResources() method
WITHOUT_CLASSIFICATION	{{{ initPlugins() method
WITHOUT_CLASSIFICATION	{{{ initUserProperties() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ initPLAF() method
WITHOUT_CLASSIFICATION	give all Swing components our colors
WITHOUT_CLASSIFICATION	defaults.put(prefix + ".inactiveForeground",foreground);
WITHOUT_CLASSIFICATION	{{{ runStartupScripts() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	null not supported?
WITHOUT_CLASSIFICATION	{{{ FirewallAuthenticator class
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ finishStartup() method
WITHOUT_CLASSIFICATION	Start I/O threads
WITHOUT_CLASSIFICATION	Start edit server
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Report any plugin errors
WITHOUT_CLASSIFICATION	{{{ showPluginErrorDialog() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	in one case not a single AWT class will have been touched (splash screen off + -nogui -nobackground switches on command line)
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ addBufferToList() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Can't happen
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getNotLoadedPluginJARs() method
WITHOUT_CLASSIFICATION	{{{ gotoMarker() method
WITHOUT_CLASSIFICATION	Handle line number
WITHOUT_CLASSIFICATION	Handle marker
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	default value
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Sort buffer list
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ removeViewFromList() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	fixes the hang that can occur if we 'save as' to a new filename which requires re-sorting
WITHOUT_CLASSIFICATION	{{{ addViewToList() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ initKeyBindings() method
WITHOUT_CLASSIFICATION	{{{ getProperties() method
WITHOUT_CLASSIFICATION	{{{ closeView() method
WITHOUT_CLASSIFICATION	exit does editor event & save
WITHOUT_CLASSIFICATION	{{{ loadModeCatalog() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ loadSystemProps() method
WITHOUT_CLASSIFICATION	{{{ loadSiteProps() method
WITHOUT_CLASSIFICATION	{{{ loadUserProps() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ saveUserProps() method
WITHOUT_CLASSIFICATION	{{{ loadPluginProps() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getProperty() method
WITHOUT_CLASSIFICATION	{{{ setProperty() method
WITHOUT_CLASSIFICATION	{{{ addPluginProps() method
WITHOUT_CLASSIFICATION	{{{ removePluginProps() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ setTemporaryProperty() method
WITHOUT_CLASSIFICATION	{{{ unsetProperty() method
WITHOUT_CLASSIFICATION	{{{ resetProperty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ getDefaultProperty() method
WITHOUT_CLASSIFICATION	{{{ loadProps() method
WITHOUT_CLASSIFICATION	{{{ Mode constructor
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ getTokenMarker() method
WITHOUT_CLASSIFICATION	{{{ setTokenMarker() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getProperty() method
WITHOUT_CLASSIFICATION	{{{ getBooleanProperty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ setProperty() method
WITHOUT_CLASSIFICATION	{{{ unsetProperty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ accept() method
WITHOUT_CLASSIFICATION	{{{ getName() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ runScript() method
WITHOUT_CLASSIFICATION	{{{ runScript() method
WITHOUT_CLASSIFICATION	{{{ evalSelection() method
WITHOUT_CLASSIFICATION	{{{ showEvaluateDialog() method
WITHOUT_CLASSIFICATION	{{{ showEvaluateLinesDialog() method
WITHOUT_CLASSIFICATION	{{{ _runScript() method
WITHOUT_CLASSIFICATION	{{{ _runScript() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getBooleanProperty() method
WITHOUT_CLASSIFICATION	user cancelled???
WITHOUT_CLASSIFICATION	{{{ getStringProperty() method
WITHOUT_CLASSIFICATION	{{{ setStringProperty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ setBooleanProperty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getIntegerProperty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ setIntegerProperty() method
WITHOUT_CLASSIFICATION	will be cached from now on...
WITHOUT_CLASSIFICATION	{{{ getRegexpProperty() method
WITHOUT_CLASSIFICATION	{{{ getRuleSetAtOffset() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	{{{ eval() method
WITHOUT_CLASSIFICATION	{{{ _eval() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	{{{ cacheBlock() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ runScript() method
WITHOUT_CLASSIFICATION	{{{ runScript() method
WITHOUT_CLASSIFICATION	{{{ eval() method
WITHOUT_CLASSIFICATION	{{{ eval() method
WITHOUT_CLASSIFICATION	never called
WITHOUT_CLASSIFICATION	{{{ runCachedBlock() method
WITHOUT_CLASSIFICATION	{{{ isScriptRunning() method
WITHOUT_CLASSIFICATION	{{{ getNameSpace() method
WITHOUT_CLASSIFICATION	{{{ Deprecated functions
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Static variables
WITHOUT_CLASSIFICATION	{{{ resetClassManager() method
WITHOUT_CLASSIFICATION	{{{ setupDefaultVariables() method
WITHOUT_CLASSIFICATION	{{{ resetDefaultVariables() method
WITHOUT_CLASSIFICATION	{{{ unwrapException() method
WITHOUT_CLASSIFICATION	{{{ handleException() method
WITHOUT_CLASSIFICATION	{{{ createInterpreter() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	garbage collected
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	clean up old listeners
WITHOUT_CLASSIFICATION	System.err.println("cleaned up weak ref: "+deadref);
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getKeywordMapAtOffset() method
WITHOUT_CLASSIFICATION	{{{ getContextSensitiveProperty() method
WITHOUT_CLASSIFICATION	remove duplicates
WITHOUT_CLASSIFICATION	remove duplicates
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Used to store property values
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	clean up old listeners
WITHOUT_CLASSIFICATION	System.err.println("cleaned up weak ref: "+deadref);
WITHOUT_CLASSIFICATION	clear the static caches in BshClassManager
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	garbage collected
WITHOUT_CLASSIFICATION	{{{ User interface
WITHOUT_CLASSIFICATION	{{{ Groups
WITHOUT_CLASSIFICATION	{{{ addToolBar() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Common layers
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Layers for top group
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Layers for bottom group
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getDockableWindowManager() method
WITHOUT_CLASSIFICATION	{{{ getToolBar() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ addToolBar() method
WITHOUT_CLASSIFICATION	{{{ addToolBar() method
WITHOUT_CLASSIFICATION	{{{ removeToolBar() method
WITHOUT_CLASSIFICATION	{{{ showWaitCursor() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	still needed even though glass pane has a wait cursor
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ hideWaitCursor() method
WITHOUT_CLASSIFICATION	{{{ getStatus() method
WITHOUT_CLASSIFICATION	{{{ getActionBar() method
WITHOUT_CLASSIFICATION	{{{ getSearchBar() method
WITHOUT_CLASSIFICATION	{{{ quickIncrementalSearch() method
WITHOUT_CLASSIFICATION	{{{ quickHyperSearch() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getInputHandler() method
WITHOUT_CLASSIFICATION	{{{ Input handling
WITHOUT_CLASSIFICATION	{{{ getKeyEventInterceptor() method
WITHOUT_CLASSIFICATION	{{{ setKeyEventInterceptor() method
WITHOUT_CLASSIFICATION	{{{ setInputHandler() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getMacroRecorder() method
WITHOUT_CLASSIFICATION	{{{ setMacroRecorder() method
WITHOUT_CLASSIFICATION	{{{ processKeyEvent() method
WITHOUT_CLASSIFICATION	{{{ processKeyEvent() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ processKeyEvent() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	@bgen(jjtree) FormalParameters
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Gather all of the methods of class and parents
WITHOUT_CLASSIFICATION	{{{ toggleWordWrap() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	boolean
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Buffers, edit panes, split panes
WITHOUT_CLASSIFICATION	{{{ splitHorizontally() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Type, name and expression syntax follows.
WITHOUT_CLASSIFICATION	{{{ splitVertically() method
WITHOUT_CLASSIFICATION	{{{ split() method
WITHOUT_CLASSIFICATION	{{{ unsplit() method
WITHOUT_CLASSIFICATION	{{{ unsplitCurrent() method
WITHOUT_CLASSIFICATION	find first split pane parenting current edit pane
WITHOUT_CLASSIFICATION	Succeeded. Cache the resolved method.
WITHOUT_CLASSIFICATION	Is the method public or are we in accessibility mode?
WITHOUT_CLASSIFICATION	Yes, it is.
WITHOUT_CLASSIFICATION	Found at least one matching method but couldn't use
WITHOUT_CLASSIFICATION	ignore and move on
WITHOUT_CLASSIFICATION	No, it is not.
WITHOUT_CLASSIFICATION	Is this a class?
WITHOUT_CLASSIFICATION	@bgen(jjtree) Type
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	Find an appropriate constructor.use declared here to see package and private as well(there are no inherited constructors to worry about)
WITHOUT_CLASSIFICATION	get rid of any edit pane that is a child of the current edit pane's parent splitter
WITHOUT_CLASSIFICATION	{{{ nextTextArea() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Pull out the method signatures with matching names
WITHOUT_CLASSIFICATION	method matches name
WITHOUT_CLASSIFICATION	This method should parallel findMostSpecificMethod()
WITHOUT_CLASSIFICATION	{{{ prevTextArea() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getBuffer() method
WITHOUT_CLASSIFICATION	{{{ getSplitPane() method
WITHOUT_CLASSIFICATION	{{{ setBuffer() method
WITHOUT_CLASSIFICATION	{{{ goToBuffer() method
WITHOUT_CLASSIFICATION	ignore zero-height splits, etc
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getTextArea() method
WITHOUT_CLASSIFICATION	{{{ getEditPane() method
WITHOUT_CLASSIFICATION	{{{ getEditPanes() method
WITHOUT_CLASSIFICATION	{{{ getViewConfig() method
WITHOUT_CLASSIFICATION	@bgen(jjtree) FormalParameter
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	fall through
WITHOUT_CLASSIFICATION	bcm
WITHOUT_CLASSIFICATION	bcm
WITHOUT_CLASSIFICATION	shouldn't happen
WITHOUT_CLASSIFICATION	why so cute?
WITHOUT_CLASSIFICATION	add interpereter and namespace to args list
WITHOUT_CLASSIFICATION	@bgen(jjtree)
WITHOUT_CLASSIFICATION	@bgen(jjtree)
WITHOUT_CLASSIFICATION	this originally handled postfix array dimensions...void VariableDeclaratorId() #VariableDeclaratorId :{ Token t; }{ t=<IDENTIFIER> { jjtThis.name = t.image; } ( "[" "]" { jjtThis.addUndefinedDimension(); } )}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Gather modifiers for a class, method, or field.I lookahead is true then we are being called as part of a lookahead and weshould not enforce any rules. Otherwise we validate based on context(field, method, class)
WITHOUT_CLASSIFICATION	@bgen(jjtree) ClassDeclaration
WITHOUT_CLASSIFICATION	@bgen(jjtree) MethodDeclaration
WITHOUT_CLASSIFICATION	@bgen(jjtree) PackageDeclaration
WITHOUT_CLASSIFICATION	@bgen(jjtree) ImportDeclaration
WITHOUT_CLASSIFICATION	@bgen(jjtree) VariableDeclarator
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	@bgen(jjtree) ReturnType
WITHOUT_CLASSIFICATION	@bgen(jjtree) PrimitiveType
WITHOUT_CLASSIFICATION	@bgen(jjtree) AmbiguousName
WITHOUT_CLASSIFICATION	@bgen(jjtree) Assignment
WITHOUT_CLASSIFICATION	This production is to determine lookahead only.
WITHOUT_CLASSIFICATION	@bgen(jjtree) CastExpression
WITHOUT_CLASSIFICATION	@bgen(jjtree) PrimaryExpression
WITHOUT_CLASSIFICATION	@bgen(jjtree) PrimarySuffix
WITHOUT_CLASSIFICATION	@bgen(jjtree) Literal
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	leave these on the stack for Arguments() to handle
WITHOUT_CLASSIFICATION	@bgen(jjtree) AllocationExpression
WITHOUT_CLASSIFICATION	@bgen(jjtree) ArrayDimensions
WITHOUT_CLASSIFICATION	Statement syntax follows.
WITHOUT_CLASSIFICATION	@bgen(jjtree) Block
WITHOUT_CLASSIFICATION	@bgen(jjtree) #FormalComment( retainComments)
WITHOUT_CLASSIFICATION	@bgen(jjtree) SwitchStatement
WITHOUT_CLASSIFICATION	@bgen(jjtree) SwitchLabel
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	@bgen(jjtree) WhileStatement
WITHOUT_CLASSIFICATION	Do statement is just a While statement with a special hook to executeat least once.
WITHOUT_CLASSIFICATION	@bgen(jjtree) ForStatement
WITHOUT_CLASSIFICATION	@bgen(jjtree) EnhancedForStatement
WITHOUT_CLASSIFICATION	@bgen(jjtree) TypedVariableDeclaration
WITHOUT_CLASSIFICATION	@bgen(jjtree) StatementExpressionList
WITHOUT_CLASSIFICATION	@bgen(jjtree) ReturnStatement
WITHOUT_CLASSIFICATION	@bgen(jjtree) ThrowStatement
WITHOUT_CLASSIFICATION	@bgen(jjtree) TryStatement
WITHOUT_CLASSIFICATION	All core AWT listeners
WITHOUT_CLASSIFICATION	All listeners in javax.swing.event as of Swing 1.1
WITHOUT_CLASSIFICATION	handleEvent gets all events
WITHOUT_CLASSIFICATION	squeltch
WITHOUT_CLASSIFICATION	send to specific event handler
WITHOUT_CLASSIFICATION	Listener interfaces
WITHOUT_CLASSIFICATION	Listener interfaces
WITHOUT_CLASSIFICATION	used for the delayed evaluation...
WITHOUT_CLASSIFICATION	Token was accepted
WITHOUT_CLASSIFICATION	paramTypes
WITHOUT_CLASSIFICATION	returnType
WITHOUT_CLASSIFICATION	BSHType will cache the type for us
WITHOUT_CLASSIFICATION	Hashtable implements Map
WITHOUT_CLASSIFICATION	BSHFormalParameters will cache the type for us
WITHOUT_CLASSIFICATION	Hashtable implements Map
WITHOUT_CLASSIFICATION	Arrays incomplete... need to use the array setter
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Hypothetical question: can you have a RE that matches 1 times, 3 times, 5 times, but not 2 times or 4 times? Does having the subexpression back-reference operator allow that?
WITHOUT_CLASSIFICATION	{{{ isClosed() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Possible positions for the next repeat to match at
WITHOUT_CLASSIFICATION	Declare variables used in loop
WITHOUT_CLASSIFICATION	try next repeat at all possible positions
WITHOUT_CLASSIFICATION	add all items in current to doables array
WITHOUT_CLASSIFICATION	Find new doablesLast
WITHOUT_CLASSIFICATION	if none of the possibilities worked out, break out of do/while
WITHOUT_CLASSIFICATION	reassign where the next repeat can match
WITHOUT_CLASSIFICATION	increment how many repeats we've successfully found
WITHOUT_CLASSIFICATION	If there aren't enough repeats, then fail
WITHOUT_CLASSIFICATION	We're greedy, but ease off until a true match is found
WITHOUT_CLASSIFICATION	else did not match rest of the tokens, try again on smaller sample
WITHOUT_CLASSIFICATION	does this get all?
WITHOUT_CLASSIFICATION	If we fall out, no matches.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ isPlainView() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	clone() separates a single match from the chain
WITHOUT_CLASSIFICATION	chain results to doneIndex
WITHOUT_CLASSIFICATION	Find new doneIndexLast
WITHOUT_CLASSIFICATION	matches after a newline
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	position in REToken.newline
WITHOUT_CLASSIFICATION	Don't match at all if REG_NOTBOL is set.
WITHOUT_CLASSIFICATION	value for end
WITHOUT_CLASSIFICATION	closer to end
WITHOUT_CLASSIFICATION	Allocate more space in the buffer.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	value for end
WITHOUT_CLASSIFICATION	Big enough for a \r\n pair lookBehind[0] = most recent lookBehind[1] = second most recent
WITHOUT_CLASSIFICATION	this.index is index of next pos relative to charAt(0)
WITHOUT_CLASSIFICATION	set flag that next should fail next time?
WITHOUT_CLASSIFICATION	move read position [index] clicks from 'charAt(0)'
WITHOUT_CLASSIFICATION	If we have buffered replace data, use it.
WITHOUT_CLASSIFICATION	This is prone to infinite loops if replace string turns out empty.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	closer to end
WITHOUT_CLASSIFICATION	Allocate more space in the buffer.
WITHOUT_CLASSIFICATION	this.index is index of next pos relative to charAt(0)
WITHOUT_CLASSIFICATION	set flag that next should fail next time?
WITHOUT_CLASSIFICATION	move read position [index] clicks from 'charAt(0)'
WITHOUT_CLASSIFICATION	convert the byte read into a char
WITHOUT_CLASSIFICATION	Error conditions from GNU regcomp(3) manual
WITHOUT_CLASSIFICATION	Package scope constructor is used by RE.getMatchEnumeration()
WITHOUT_CLASSIFICATION	else
WITHOUT_CLASSIFICATION	else
WITHOUT_CLASSIFICATION	no match
WITHOUT_CLASSIFICATION	doesn't happen
WITHOUT_CLASSIFICATION	need to deep clone?
WITHOUT_CLASSIFICATION	cut off alternates
WITHOUT_CLASSIFICATION	cut off alternates
WITHOUT_CLASSIFICATION	Anchor position refers to the index into the source input at which the matching operation began. This is also useful for the ANCHORINDEX option.
WITHOUT_CLASSIFICATION	Offset in source text where match was tried. This is zero-based; the actual position in the source text is given by (offset + anchor).
WITHOUT_CLASSIFICATION	Package scope; used by RE. used while matching to mark current match position in input start positions (relative to offset) for each (sub)exp. end positions for the same other possibility (to avoid having to use arrays)
WITHOUT_CLASSIFICATION	position in newline
WITHOUT_CLASSIFICATION	assume for now that next can only be one character
WITHOUT_CLASSIFICATION	Overrides REToken.chain() to optimize for strings
WITHOUT_CLASSIFICATION	Note that there is some debate over whether '_' should be included
WITHOUT_CLASSIFICATION	The RE constructor uses this to look up the constant for a string
WITHOUT_CLASSIFICATION	Array indices correspond to constants defined above.
WITHOUT_CLASSIFICATION	This is the number of subexpressions in this regular expression, with a minimum value of zero. Returned by getNumSubs()
WITHOUT_CLASSIFICATION	The localized strings are kept in a separate file
WITHOUT_CLASSIFICATION	This String will be returned by getVersion()
WITHOUT_CLASSIFICATION	Retrieves a message from the ResourceBundle
WITHOUT_CLASSIFICATION	internal constructor used for alternation
WITHOUT_CLASSIFICATION	Subexpression index of this token.
WITHOUT_CLASSIFICATION	For use by subclasses
WITHOUT_CLASSIFICATION	The meat of construction
WITHOUT_CLASSIFICATION	Number of subexpressions in this token.
WITHOUT_CLASSIFICATION	linked list of tokens (sort of -- some closed loops can exist)
WITHOUT_CLASSIFICATION	Precalculate these so we don't pay for the math every time we need to access them.
WITHOUT_CLASSIFICATION	This is the case of {x,}
WITHOUT_CLASSIFICATION	This is used for {x,y} calculations
WITHOUT_CLASSIFICATION	{{{ getMinimumSize() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Buffer a token so we can create a TokenRepeated, etc.
WITHOUT_CLASSIFICATION	read the next character unit (including backslash escapes)
WITHOUT_CLASSIFICATION	make everything up to here be a branch. create vector if nec.
WITHOUT_CLASSIFICATION	LIST OPERATOR: [...] | [^...]
WITHOUT_CLASSIFICATION	Check for initial caret, negation
WITHOUT_CLASSIFICATION	Check for leading right bracket literal
WITHOUT_CLASSIFICATION	Create a new RETokenOneOf
WITHOUT_CLASSIFICATION	{{{ setWaitSocket() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	find end of subexpression
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	not a comment subexpression
WITHOUT_CLASSIFICATION	{{{ getNext() method
WITHOUT_CLASSIFICATION	START OF LINE OPERATOR ^
WITHOUT_CLASSIFICATION	END OF LINE OPERATOR $
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Read string of digits
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	BACKREFERENCE OPERATOR \1 \2 ... \9 not available if RE_NO_BK_REFS is set
WITHOUT_CLASSIFICATION	Check for stingy matching on RETokenRepeated
WITHOUT_CLASSIFICATION	START OF STRING OPERATOR \A if RE_STRING_ANCHORS is set
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	WORD END OPERATOR \> if ????
WITHOUT_CLASSIFICATION	NON-WORD BREAK OPERATOR \B if ????
WITHOUT_CLASSIFICATION	NON-DIGIT OPERATOR \D
WITHOUT_CLASSIFICATION	NEWLINE ESCAPE \n
WITHOUT_CLASSIFICATION	RETURN ESCAPE \r
WITHOUT_CLASSIFICATION	WHITESPACE OPERATOR \s if RE_CHAR_CLASS_ESCAPES is set
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	ALPHANUMERIC OPERATOR \w
WITHOUT_CLASSIFICATION	NON-ALPHANUMERIC OPERATOR \W
WITHOUT_CLASSIFICATION	END OF STRING OPERATOR \Z
WITHOUT_CLASSIFICATION	not a special character
WITHOUT_CLASSIFICATION	end while
WITHOUT_CLASSIFICATION	Add final buffered token and an EndSub marker
WITHOUT_CLASSIFICATION	compact the Vector
WITHOUT_CLASSIFICATION	Trivial case
WITHOUT_CLASSIFICATION	Overrides REToken.setUncle
WITHOUT_CLASSIFICATION	to deal with empty subexpressions
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	handle pathological case of zero-length match
WITHOUT_CLASSIFICATION	Implements abstract method REToken.match()
WITHOUT_CLASSIFICATION	Note the start of this subexpression
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Read string of digits
WITHOUT_CLASSIFICATION	Find longest match of them all to observe leftmost longest
WITHOUT_CLASSIFICATION	Append character to buffer if needed
WITHOUT_CLASSIFICATION	{{{ getPrev() method
WITHOUT_CLASSIFICATION	Helper function for constructor
WITHOUT_CLASSIFICATION	didn't match up
WITHOUT_CLASSIFICATION	Precondition: input[index-1] == '{', minMax != null
WITHOUT_CLASSIFICATION	This constructor is used for convenience when we know the set beforehand, e.g. \d --> new RETokenOneOf("0123456789",false, ..) \D --> new RETokenOneOf("0123456789",true, ..)
WITHOUT_CLASSIFICATION	We know min and max now, and they are valid.
WITHOUT_CLASSIFICATION	return the index following the '}'
WITHOUT_CLASSIFICATION	Cast input appropriately or throw exception
WITHOUT_CLASSIFICATION	do we lose index info?
WITHOUT_CLASSIFICATION	match was successful
WITHOUT_CLASSIFICATION	Add tryMatch to list of possibilities.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ handleMessage() method
WITHOUT_CLASSIFICATION	set contents of mymatch equal to newMatch
WITHOUT_CLASSIFICATION	try each one that matched
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ View constructor
WITHOUT_CLASSIFICATION	index+1 works for [^abc] lists, not for generic lookahead (--> index)
WITHOUT_CLASSIFICATION	If we have buffered replace data, use it.
WITHOUT_CLASSIFICATION	check if input is at a valid position
WITHOUT_CLASSIFICATION	handled by RE
WITHOUT_CLASSIFICATION	true for the constant defined syntaxes
WITHOUT_CLASSIFICATION	Values for constants are bit indexes
WITHOUT_CLASSIFICATION	impl.
WITHOUT_CLASSIFICATION	single line mode (/s)
WITHOUT_CLASSIFICATION	Define syntaxes
WITHOUT_CLASSIFICATION	P1003.2/D11.2, section 4.20.7.1, lines 5078ff.
WITHOUT_CLASSIFICATION	Differs from RE_SYNTAX_POSIX_EXTENDED in that RE_CONTEXT_INVALID_OPS replaces RE_CONTEXT_INDEP_OPS and RE_NO_BK_REFS is added.
WITHOUT_CLASSIFICATION	There is no official Perl spec, but here's a "best guess"
WITHOUT_CLASSIFICATION	except for '{', apparently
WITHOUT_CLASSIFICATION	\d,\D,\w,\W,\s,\S
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	UNDONE
WITHOUT_CLASSIFICATION	XXX
WITHOUT_CLASSIFICATION	Unexpected EOF!
WITHOUT_CLASSIFICATION	Per Patrick Beard:
WITHOUT_CLASSIFICATION	always: in the range 0 .. 9. The current block size is 100000 this number.
WITHOUT_CLASSIFICATION	index of the last char in the block, so the block size == last + 1.
WITHOUT_CLASSIFICATION	index in zptr[] of original string after sorting.
WITHOUT_CLASSIFICATION	throw new CCoruptionError();
WITHOUT_CLASSIFICATION	throw new IOException("Invalid block size");
WITHOUT_CLASSIFICATION	not a char and not EOF
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	A bad CRC is considered a fatal error.
WITHOUT_CLASSIFICATION	currBlockNo++;
WITHOUT_CLASSIFICATION	Now the selectors
WITHOUT_CLASSIFICATION	Now the coding tables
WITHOUT_CLASSIFICATION	Create the Huffman decoding tables
WITHOUT_CLASSIFICATION	Receive the mapping table
WITHOUT_CLASSIFICATION	XXX
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	If you are ever unlucky/improbable enough to get a stack overflow whilst sorting, increase the following constant and try again. In practice I have never seen the stack go above 27 elems, so the following limit seems very generous.
WITHOUT_CLASSIFICATION	Knuth's increments seem to work better than Incerpi-Sedgewick here. Possibly because the number of elems to sort is usually small, typically <= 20.
WITHOUT_CLASSIFICATION	Used when sorting. If too many long comparisons happen, we stop sorting, randomise the block slightly, and try again.
WITHOUT_CLASSIFICATION	ch = 0;
WITHOUT_CLASSIFICATION	index in zptr[] of original string after sorting.
WITHOUT_CLASSIFICATION	The back end needs a place to store the MTF values whilst it calculates the coding tables. We could put them in the zptr array. However, these values will fit in a short, so we overlay szptr at the start of zptr, in the hope of reducing the number of cache misses induced by the multiple traversals of the MTF values when calculating coding tables. Seems to improve compression speed by about 1%.
WITHOUT_CLASSIFICATION	Nodes and heap entries run from 1. Entry 0 for both the heap and nodes is a sentinel.
WITHOUT_CLASSIFICATION	throw new CError();
WITHOUT_CLASSIFICATION	szptr = zptr;
WITHOUT_CLASSIFICATION	blockNo++;
WITHOUT_CLASSIFICATION	write 8-bit
WITHOUT_CLASSIFICATION	write 8-bit
WITHOUT_CLASSIFICATION	sort the block and establish posn of original string
WITHOUT_CLASSIFICATION	Now the block's CRC, so it is in a known place.
WITHOUT_CLASSIFICATION	Now a single bit indicating randomisation.
WITHOUT_CLASSIFICATION	Finally, block's contents proper.
WITHOUT_CLASSIFICATION	Now another magic 48-bit number, 0x177245385090, to indicate the end of the last block. (sqrt(pi), if you want to know. I did want to use e, but it contains too much repetition -- 27 18 28 18 28 46 -- for me to feel statistically comfortable. Call me paranoid.)
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	In the various block-sized structures, live data runs from 0 to last+NUM_OVERSHOOT_BYTES inclusive. First, set up the overshoot area for block.
WITHOUT_CLASSIFICATION	Use simpleSort(), since the full sorting mechanism has quite a large constant overhead.
WITHOUT_CLASSIFICATION	Now ftab contains the first loc of every small bucket. Calculate the running order, from smallest to largest big bucket.
WITHOUT_CLASSIFICATION	The main sorting loop.
WITHOUT_CLASSIFICATION	Process big buckets, starting with the least full.
WITHOUT_CLASSIFICATION	{{{ close() method
WITHOUT_CLASSIFICATION	handle 16 bit signed numbers
WITHOUT_CLASSIFICATION	Decide how many coding tables to use
WITHOUT_CLASSIFICATION	Generate an initial set of coding tables
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Iterate up to N_ITERS times to improve the tables.
WITHOUT_CLASSIFICATION	Set group start & end marks.
WITHOUT_CLASSIFICATION	Calculate the cost of this group as coded by each of the coding tables.
WITHOUT_CLASSIFICATION	run jEditLauncher installation
WITHOUT_CLASSIFICATION	Increment the symbol frequencies for the selected table.
WITHOUT_CLASSIFICATION	Recompute the tables based on the accumulated frequencies.
WITHOUT_CLASSIFICATION	Compute MTF values for the selectors.
WITHOUT_CLASSIFICATION	Assign actual codes for the tables.
WITHOUT_CLASSIFICATION	Transmit the mapping table.
WITHOUT_CLASSIFICATION	Now the selectors.
WITHOUT_CLASSIFICATION	11
WITHOUT_CLASSIFICATION	And finally, the block data proper
WITHOUT_CLASSIFICATION	copy 1
WITHOUT_CLASSIFICATION	copy 2
WITHOUT_CLASSIFICATION	( (this.assemLen + numToWrite ) < this.recordBuf.length )
WITHOUT_CLASSIFICATION	When we get here we have EITHER: o An empty "assemble" buffer. o No bytes to write (numToWrite == 0)
WITHOUT_CLASSIFICATION	in.close();
WITHOUT_CLASSIFICATION	Pass 1: compute preferred row heights / column widths
WITHOUT_CLASSIFICATION	Pass 2: redistribute free space
WITHOUT_CLASSIFICATION	synchronized
WITHOUT_CLASSIFICATION	on by default
WITHOUT_CLASSIFICATION	create app start script
WITHOUT_CLASSIFICATION	Delete existing copy
WITHOUT_CLASSIFICATION	Write simple script
WITHOUT_CLASSIFICATION	Make it executable
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	XXX
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	new JEditLauncherOSTask(installer)
WITHOUT_CLASSIFICATION	install user-selected packages
WITHOUT_CLASSIFICATION	do operating system specific stuff (creating startup scripts, installing man pages, etc.)
WITHOUT_CLASSIFICATION	System.err.println(fileName);
WITHOUT_CLASSIFICATION	label == null means no configurable options
WITHOUT_CLASSIFICATION	can't happen
WITHOUT_CLASSIFICATION	{{{ getShortcut() method
WITHOUT_CLASSIFICATION	{{{ getPosition() method
WITHOUT_CLASSIFICATION	{{{ Marker constructor
WITHOUT_CLASSIFICATION	{{{ setShortcut() method
WITHOUT_CLASSIFICATION	{{{ createPosition() method
WITHOUT_CLASSIFICATION	{{{ removePosition() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	forget the cached Position instance
WITHOUT_CLASSIFICATION	{{{ setPosition() method
WITHOUT_CLASSIFICATION	{{{ isPerspectiveDirty() method
WITHOUT_CLASSIFICATION	{{{ setPerspectiveDirty() method
WITHOUT_CLASSIFICATION	{{{ loadPerspective() method
WITHOUT_CLASSIFICATION	{{{ savePerspective() method
WITHOUT_CLASSIFICATION	backgrounded
WITHOUT_CLASSIFICATION	{{{ input() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ runScript() method
WITHOUT_CLASSIFICATION	{{{ PerspectiveHandler class
WITHOUT_CLASSIFICATION	this will result in a slight speed up, since we don't need to read the DTD anyway, as AElfred is non-validating
WITHOUT_CLASSIFICATION	{{{ showRunScriptDialog() method
WITHOUT_CLASSIFICATION	{{{ message() method
WITHOUT_CLASSIFICATION	{{{ error() method
WITHOUT_CLASSIFICATION	save dockable window geometry, and close 'em
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ input() method
WITHOUT_CLASSIFICATION	only executed if above loop falls through, ie there is no handler for this file
WITHOUT_CLASSIFICATION	{{{ confirm() method
WITHOUT_CLASSIFICATION	{{{ confirm() method
WITHOUT_CLASSIFICATION	{{{ loadMacros() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ registerHandler() method
WITHOUT_CLASSIFICATION	{{{ getHandlers() method
WITHOUT_CLASSIFICATION	{{{ getHandlerForFileName() method
WITHOUT_CLASSIFICATION	{{{ getHandler() method
WITHOUT_CLASSIFICATION	{{{ getMacroHierarchy() method
WITHOUT_CLASSIFICATION	{{{ getMacroActionSet() method
WITHOUT_CLASSIFICATION	{{{ getMacro() method
WITHOUT_CLASSIFICATION	{{{ Macro class
WITHOUT_CLASSIFICATION	{{{ Macro constructor
WITHOUT_CLASSIFICATION	{{{ getPath() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ getHandler() method
WITHOUT_CLASSIFICATION	{{{ invoke() method
WITHOUT_CLASSIFICATION	{{{ getCode() method
WITHOUT_CLASSIFICATION	{{{ macroNameToLabel() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ loadMacros() method
WITHOUT_CLASSIFICATION	{{{ recordTemporaryMacro() method
WITHOUT_CLASSIFICATION	{{{ recordMacro() method
WITHOUT_CLASSIFICATION	{{{ stopRecording() method
WITHOUT_CLASSIFICATION	{{{ runTemporaryMacro() method
WITHOUT_CLASSIFICATION	I already wrote a comment expaining this in Macro.invoke().
WITHOUT_CLASSIFICATION	{{{ Static variables
WITHOUT_CLASSIFICATION	{{{ Class initializer
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ recordMacro() method
WITHOUT_CLASSIFICATION	do nothing!
WITHOUT_CLASSIFICATION	{{{ try to merge with an existing menu first
WITHOUT_CLASSIFICATION	{{{ addMacro() method
WITHOUT_CLASSIFICATION	ignore if already added. see comment in loadMacros().
WITHOUT_CLASSIFICATION	setting the message to 'null' causes the status bar to check if a recording is in progress
WITHOUT_CLASSIFICATION	{{{ Recorder class
WITHOUT_CLASSIFICATION	{{{ Recorder constructor
WITHOUT_CLASSIFICATION	{{{ record() method
WITHOUT_CLASSIFICATION	{{{ record() method
WITHOUT_CLASSIFICATION	{{{ handleMessage() method
WITHOUT_CLASSIFICATION	{{{ recordInput() method
WITHOUT_CLASSIFICATION	{{{ recordInput() method
WITHOUT_CLASSIFICATION	{{{ append() method
WITHOUT_CLASSIFICATION	{{{ dispose() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ accept() method
WITHOUT_CLASSIFICATION	{{{ createMacro() method
WITHOUT_CLASSIFICATION	{{{ Handler class
WITHOUT_CLASSIFICATION	setting the message to 'null' causes the status bar to check if a recording is in progress
WITHOUT_CLASSIFICATION	{{{ flushInput() method
WITHOUT_CLASSIFICATION	{{{ getName() method
WITHOUT_CLASSIFICATION	{{{ getLabel() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ runMacro() method
WITHOUT_CLASSIFICATION	{{{ runMacro() method
WITHOUT_CLASSIFICATION	{{{ Handler constructor
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ createMacro() method
WITHOUT_CLASSIFICATION	{{{ runMacro() method
WITHOUT_CLASSIFICATION	{{{ runMacro() method
WITHOUT_CLASSIFICATION	{{{ BeanShellHandler class
WITHOUT_CLASSIFICATION	{{{ BeanShellHandler constructor
WITHOUT_CLASSIFICATION	Remove '.bsh'
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Some predefined icons
WITHOUT_CLASSIFICATION	{{{ Icon methods
WITHOUT_CLASSIFICATION	{{{ setIconPath() method
WITHOUT_CLASSIFICATION	{{{ loadIcon() method
WITHOUT_CLASSIFICATION	check if there is a cached version first
WITHOUT_CLASSIFICATION	get the icon
WITHOUT_CLASSIFICATION	{{{ getEditorIcon() method
WITHOUT_CLASSIFICATION	{{{ getPluginIcon() method
WITHOUT_CLASSIFICATION	{{{ Menus, tool bars
WITHOUT_CLASSIFICATION	{{{ loadMenuBar() method
WITHOUT_CLASSIFICATION	{{{ loadMenuBar() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ message() method
WITHOUT_CLASSIFICATION	{{{ error() method
WITHOUT_CLASSIFICATION	{{{ input() method
WITHOUT_CLASSIFICATION	{{{ input() method
WITHOUT_CLASSIFICATION	{{{ confirm() method
WITHOUT_CLASSIFICATION	{{{ inputProperty() method
WITHOUT_CLASSIFICATION	{{{ loadMenu() method
WITHOUT_CLASSIFICATION	{{{ loadMenu() method
WITHOUT_CLASSIFICATION	{{{ loadToolBar() method
WITHOUT_CLASSIFICATION	{{{ loadPopupMenu() method
WITHOUT_CLASSIFICATION	{{{ loadPopupMenu() method
WITHOUT_CLASSIFICATION	{{{ loadToolBar() method
WITHOUT_CLASSIFICATION	{{{ loadMenuItem() method
WITHOUT_CLASSIFICATION	{{{ loadMenuItem() method
WITHOUT_CLASSIFICATION	{{{ loadMenuItem() method
WITHOUT_CLASSIFICATION	{{{ inputProperty() method
WITHOUT_CLASSIFICATION	{{{ loadToolButton() method
WITHOUT_CLASSIFICATION	{{{ loadToolButton() method
WITHOUT_CLASSIFICATION	{{{ prettifyMenuLabel() method
WITHOUT_CLASSIFICATION	{{{ showVFSFileDialog() method
WITHOUT_CLASSIFICATION	{{{ Canned dialog boxes
WITHOUT_CLASSIFICATION	{{{ Colors and styles
WITHOUT_CLASSIFICATION	{{{ parseColor() method
WITHOUT_CLASSIFICATION	{{{ parseColor() method
WITHOUT_CLASSIFICATION	{{{ parseStyle() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ parseStyle() method
WITHOUT_CLASSIFICATION	{{{ loadStyles() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ loadStyles() method
WITHOUT_CLASSIFICATION	start at 1 not 0 to skip Token.NULL
WITHOUT_CLASSIFICATION	{{{ Loading, saving window geometry
WITHOUT_CLASSIFICATION	{{{ loadGeometry() method
WITHOUT_CLASSIFICATION	{{{ adjustForScreenBounds() method
WITHOUT_CLASSIFICATION	Make sure the window is displayed in visible region
WITHOUT_CLASSIFICATION	{{{ ComponentHandler class
WITHOUT_CLASSIFICATION	{{{ componentMoved() method
WITHOUT_CLASSIFICATION	{{{ componentResized() method
WITHOUT_CLASSIFICATION	{{{ WindowHandler class
WITHOUT_CLASSIFICATION	{{{ windowOpened() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ saveGeometry() method
WITHOUT_CLASSIFICATION	{{{ getExtendedState() method
WITHOUT_CLASSIFICATION	{{{ setExtendedState() method
WITHOUT_CLASSIFICATION	{{{ centerOnScreen() method
WITHOUT_CLASSIFICATION	{{{ hideSplashScreen() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ createMultilineLabel() method
WITHOUT_CLASSIFICATION	{{{ requestFocus() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ isMiddleButton() method
WITHOUT_CLASSIFICATION	{{{ isPopupTrigger() method
WITHOUT_CLASSIFICATION	{{{ isAncestorOf() method
WITHOUT_CLASSIFICATION	System.err.println("x overflow");
WITHOUT_CLASSIFICATION	{{{ isRightButton() method
WITHOUT_CLASSIFICATION	{{{ getComponentParent() method
WITHOUT_CLASSIFICATION	{{{ showPopupMenu() method
WITHOUT_CLASSIFICATION	{{{ showPopupMenu() method
WITHOUT_CLASSIFICATION	{{{ advanceSplashProgress() method
WITHOUT_CLASSIFICATION	{{{ getParentDialog() method
WITHOUT_CLASSIFICATION	{{{ showSplashScreen() method
WITHOUT_CLASSIFICATION	{{{ getView() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getName() method
WITHOUT_CLASSIFICATION	{{{ AbstractOptionPane constructor
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	Only show class decs in CLASSES
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getComponent() method
WITHOUT_CLASSIFICATION	final in 4.2
WITHOUT_CLASSIFICATION	final in 4.2
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ addComponent() method
WITHOUT_CLASSIFICATION	{{{ addComponent() method
WITHOUT_CLASSIFICATION	{{{ addComponent() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	ALL
WITHOUT_CLASSIFICATION	{{{ addComponent() method
WITHOUT_CLASSIFICATION	{{{ addComponent() method
WITHOUT_CLASSIFICATION	{{{ addSeparator() method
WITHOUT_CLASSIFICATION	cons.insets = new Insets(1,0,1,0);
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ addSeparator() method
WITHOUT_CLASSIFICATION	{{{ Protected members
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getEntry() method
WITHOUT_CLASSIFICATION	{{{ setEntry() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getHistory() method
WITHOUT_CLASSIFICATION	{{{ getBufferHistory() method
WITHOUT_CLASSIFICATION	{{{ load() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	Log.log(Log.DEBUG,BufferHistory.class,fnf);
WITHOUT_CLASSIFICATION	to avoid data loss, only do this if the above completed successfully
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Class initializer
WITHOUT_CLASSIFICATION	{{{ addEntry() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Try to squeltch the native code stack trace if the exceptionwas caused by a reflective call back into the bsh interpreter(e.g. eval() or source()
WITHOUT_CLASSIFICATION	classExists caches info for us
WITHOUT_CLASSIFICATION	classExists caches info for us
WITHOUT_CLASSIFICATION	classExists caches the tests for us
WITHOUT_CLASSIFICATION	Note: do not change this to BshClassManager plainClassForName() or equivalent.This class must not touch any other bsh classes.
WITHOUT_CLASSIFICATION	Child is array initializer. Evaluate it and fill in the dimensions it returns. Initialized arrays are always fully defined(no undefined dimensions to worry about). The syntax uses the undefinedDimension count.e.g. int [][] { 1, 2 };
WITHOUT_CLASSIFICATION	fill in definedDimensions [] lengths
WITHOUT_CLASSIFICATION	Evaluate the defined dimensions of the array
WITHOUT_CLASSIFICATION	unsafe caching of types
WITHOUT_CLASSIFICATION	first label
WITHOUT_CLASSIFICATION	get the first label
WITHOUT_CLASSIFICATION	while more labels or blocks and haven't hit return control
WITHOUT_CLASSIFICATION	if label is default or equals switchVal
WITHOUT_CLASSIFICATION	eval it
WITHOUT_CLASSIFICATION	should check to disallow continue here?
WITHOUT_CLASSIFICATION	skip nodes until next label
WITHOUT_CLASSIFICATION	binaryOperation can return Primitive or wrapper type
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ activatePlugin() method
WITHOUT_CLASSIFICATION	private
WITHOUT_CLASSIFICATION	{{{ removeEntry() method
WITHOUT_CLASSIFICATION	XXX e.printStackTrace();
WITHOUT_CLASSIFICATION	Delegate to the static method
WITHOUT_CLASSIFICATION	Create the class static namespace
WITHOUT_CLASSIFICATION	Evaluate any inner class class definitions in the block effectively recursively call this method for contained classes first
WITHOUT_CLASSIFICATION	override
WITHOUT_CLASSIFICATION	override
WITHOUT_CLASSIFICATION	Generate the type for our class
WITHOUT_CLASSIFICATION	if debug, write out the class file to debugClasses directory
WITHOUT_CLASSIFICATION	Define the new class in the classloader
WITHOUT_CLASSIFICATION	bcm.doneDefiningClass( fqClassName );
WITHOUT_CLASSIFICATION	import the unq name into parent
WITHOUT_CLASSIFICATION	classStaticNameSpace.importClass( fqClassName.replace('$','.') );
WITHOUT_CLASSIFICATION	strictJava
WITHOUT_CLASSIFICATION	evaluate the static portion of the block in the static space
WITHOUT_CLASSIFICATION	Set the static bsh This callback
WITHOUT_CLASSIFICATION	strict
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	value error shouldn't happen
WITHOUT_CLASSIFICATION	declaringNameSpace
WITHOUT_CLASSIFICATION	{{{ getFile() method
WITHOUT_CLASSIFICATION	Also cache it in the static namespace... classStaticNameSpace.cacheClass( name, genClass );
WITHOUT_CLASSIFICATION	Give the static space its class static import important to do this after all classes are defined
WITHOUT_CLASSIFICATION	look for the specially named super delegate method
WITHOUT_CLASSIFICATION	onlyStatic
WITHOUT_CLASSIFICATION	onlyStatic
WITHOUT_CLASSIFICATION	make all buttons the same size
WITHOUT_CLASSIFICATION	cancel button goes on far left
WITHOUT_CLASSIFICATION	prev and next buttons are on the right
WITHOUT_CLASSIFICATION	calculate size for current page
WITHOUT_CLASSIFICATION	{{{ getPath() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getCachePath() method
WITHOUT_CLASSIFICATION	{{{ getZipFile() method
WITHOUT_CLASSIFICATION	{{{ getClassLoader() method
WITHOUT_CLASSIFICATION	{{{ getActions() method
WITHOUT_CLASSIFICATION	{{{ getActionSet() method
WITHOUT_CLASSIFICATION	{{{ getBrowserActionSet() method
WITHOUT_CLASSIFICATION	{{{ checkDependencies() method
WITHOUT_CLASSIFICATION	{{{ getDependentPlugins() method
WITHOUT_CLASSIFICATION	{{{ getPlugin() method
WITHOUT_CLASSIFICATION	recursive call
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	package-private members package-private, not private, for speedy access by inner classes
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	for thread safety
WITHOUT_CLASSIFICATION	{{{ activateIfNecessary() method
WITHOUT_CLASSIFICATION	4.1 plugin
WITHOUT_CLASSIFICATION	4.2 plugin
WITHOUT_CLASSIFICATION	if at least one property listed here is true, load the plugin
WITHOUT_CLASSIFICATION	{{{ deactivatePlugin() method
WITHOUT_CLASSIFICATION	see if this is a 4.1-style plugin
WITHOUT_CLASSIFICATION	{{{ getDockablesURI() method
WITHOUT_CLASSIFICATION	{{{ getServicesURI() method
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ Static methods
WITHOUT_CLASSIFICATION	{{{ getPluginCache() method
WITHOUT_CLASSIFICATION	returns false with outdated cache
WITHOUT_CLASSIFICATION	{{{ setPluginCache() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ PluginJAR constructor
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ uninit() method
WITHOUT_CLASSIFICATION	{{{ getClasses() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Check if a plugin with the same name is already loaded
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ actionsPresentButNotCoreClass() method
WITHOUT_CLASSIFICATION	{{{ loadCache() method
WITHOUT_CLASSIFICATION	{{{ generateCache() method
WITHOUT_CLASSIFICATION	{{{ startPlugin() method
WITHOUT_CLASSIFICATION	old plugins expected jEdit 4.1-style behavior, where a PropertiesChanged was sent after plugins were started
WITHOUT_CLASSIFICATION	buffers retain a reference to the fold handler in question... and the easiest way to handle fold handler loading is this...
WITHOUT_CLASSIFICATION	== null before loaded
WITHOUT_CLASSIFICATION	{{{ startPluginLater() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ breakPlugin() method
WITHOUT_CLASSIFICATION	but we want properties to hang around
WITHOUT_CLASSIFICATION	{{{ PluginCacheEntry class
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ read() method
WITHOUT_CLASSIFICATION	read() and write() must be kept perfectly in sync... its a very simple file format. doing it this way is faster than serializing since serialization calls reflection, etc.
WITHOUT_CLASSIFICATION	{{{ readStringArray() method
WITHOUT_CLASSIFICATION	{{{ readURI() method
WITHOUT_CLASSIFICATION	{{{ write() method
WITHOUT_CLASSIFICATION	{{{ readBooleanArray() method
WITHOUT_CLASSIFICATION	{{{ readMap() method
WITHOUT_CLASSIFICATION	{{{ writeStringArray() method
WITHOUT_CLASSIFICATION	{{{ writeBooleanArray() method
WITHOUT_CLASSIFICATION	{{{ writeMap() method
WITHOUT_CLASSIFICATION	{{{ Roster constructor
WITHOUT_CLASSIFICATION	{{{ addRemove() method
WITHOUT_CLASSIFICATION	{{{ addInstall() method
WITHOUT_CLASSIFICATION	{{{ getOperation() method
WITHOUT_CLASSIFICATION	{{{ getOperationCount() method
WITHOUT_CLASSIFICATION	{{{ isEmpty() method
WITHOUT_CLASSIFICATION	{{{ performOperationsInWorkThread() method
WITHOUT_CLASSIFICATION	{{{ performOperationsInAWTThread() method
WITHOUT_CLASSIFICATION	add the JARs before checking deps since dep check might require all JARs to be present
WITHOUT_CLASSIFICATION	now activate the plugins
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Operation interface
WITHOUT_CLASSIFICATION	{{{ addOperation() method
WITHOUT_CLASSIFICATION	{{{ getDownloadDir() method
WITHOUT_CLASSIFICATION	{{{ runInAWTThread() method
WITHOUT_CLASSIFICATION	{{{ Remove constructor
WITHOUT_CLASSIFICATION	{{{ Remove class
WITHOUT_CLASSIFICATION	{{{ runInAWTThread() method
WITHOUT_CLASSIFICATION	close JAR file and all JARs that depend on this
WITHOUT_CLASSIFICATION	remove cache file
WITHOUT_CLASSIFICATION	move JAR first
WITHOUT_CLASSIFICATION	{{{ unloadPluginJAR() method
WITHOUT_CLASSIFICATION	{{{ equals() method
WITHOUT_CLASSIFICATION	{{{ Install class
WITHOUT_CLASSIFICATION	{{{ Install constructor
WITHOUT_CLASSIFICATION	catch those hooligans passing null urls
WITHOUT_CLASSIFICATION	{{{ getMaximum() method
WITHOUT_CLASSIFICATION	{{{ runInWorkThread() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ equals() method
WITHOUT_CLASSIFICATION	check if download failed
WITHOUT_CLASSIFICATION	if download OK, remove existing version
WITHOUT_CLASSIFICATION	even if installDirectory is different
WITHOUT_CLASSIFICATION	{{{ download() method
WITHOUT_CLASSIFICATION	do nothing, user clicked 'Stop'
WITHOUT_CLASSIFICATION	{{{ copy() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Constructor
WITHOUT_CLASSIFICATION	{{{ construct() method
WITHOUT_CLASSIFICATION	{{{ menuSelected() method
WITHOUT_CLASSIFICATION	{{{ menuDeselected() method
WITHOUT_CLASSIFICATION	{{{ menuCanceled() method
WITHOUT_CLASSIFICATION	{{{ ShowRecentMenuItem class
WITHOUT_CLASSIFICATION	allocate the array to store the initializers description of the array The other dimensions default to zero and are assigned when the values are set.
WITHOUT_CLASSIFICATION	Evaluate the initializers
WITHOUT_CLASSIFICATION	unwrap primitive to the wrapper type
WITHOUT_CLASSIFICATION	don't deal with object types here... unless above
WITHOUT_CLASSIFICATION	store the value in the array
WITHOUT_CLASSIFICATION	I think this can happen
WITHOUT_CLASSIFICATION	Supply any defaulted attributes.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Constants.
WITHOUT_CLASSIFICATION	Constants for element content type.
WITHOUT_CLASSIFICATION	Constants for the entity type.
WITHOUT_CLASSIFICATION	Constants for attribute type.
WITHOUT_CLASSIFICATION	Constants for supported encodings.
WITHOUT_CLASSIFICATION	Constants for attribute default value.
WITHOUT_CLASSIFICATION	Read the version.
WITHOUT_CLASSIFICATION	Try reading an encoding declaration.
WITHOUT_CLASSIFICATION	Try reading a standalone declaration
WITHOUT_CLASSIFICATION	Read an optional version.
WITHOUT_CLASSIFICATION	Read the encoding.
WITHOUT_CLASSIFICATION	8-bit encodings
WITHOUT_CLASSIFICATION	16-bit encodings
WITHOUT_CLASSIFICATION	32-bit encodings
WITHOUT_CLASSIFICATION	Read the document type name.
WITHOUT_CLASSIFICATION	Read the ExternalIDs.
WITHOUT_CLASSIFICATION	Look for a declaration subset.
WITHOUT_CLASSIFICATION	loop until the subset ends
WITHOUT_CLASSIFICATION	end of subset
WITHOUT_CLASSIFICATION	Read the external subset, if any
WITHOUT_CLASSIFICATION	Loop until we end up back at '>'
WITHOUT_CLASSIFICATION	No external subset.
WITHOUT_CLASSIFICATION	Read the element type name.
WITHOUT_CLASSIFICATION	Determine the current content type.
WITHOUT_CLASSIFICATION	Read the element type name.
WITHOUT_CLASSIFICATION	Flags for parsing context.
WITHOUT_CLASSIFICATION	Major syntactic productions.
WITHOUT_CLASSIFICATION	skip all white, PIs, and comments if this doesn't throw an exception...
WITHOUT_CLASSIFICATION	Expand general entities in default values of attributes. (Do this after the doctypeDecl event!). expandAttributeDefaultValues();
WITHOUT_CLASSIFICATION	This is the (global) counter for the array of specified attributes.
WITHOUT_CLASSIFICATION	Read the attributes, if any. After this loop, we should be just in front of the closing delimiter.
WITHOUT_CLASSIFICATION	See if it was specified.
WITHOUT_CLASSIFICATION	I guess not...
WITHOUT_CLASSIFICATION	Figure out if this is a start tag or an empty element, and dispatch an event accordingly.
WITHOUT_CLASSIFICATION	Restore the previous state.
WITHOUT_CLASSIFICATION	Read the attribute name.
WITHOUT_CLASSIFICATION	Parse '='
WITHOUT_CLASSIFICATION	Handle delimiters
WITHOUT_CLASSIFICATION	Found "&"
WITHOUT_CLASSIFICATION	Found "<"
WITHOUT_CLASSIFICATION	Found "<!"
WITHOUT_CLASSIFICATION	Found "<!-"
WITHOUT_CLASSIFICATION	Found "<!["
WITHOUT_CLASSIFICATION	Found "</"
WITHOUT_CLASSIFICATION	Found "<" followed by something else
WITHOUT_CLASSIFICATION	Read the content model.
WITHOUT_CLASSIFICATION	Parse the first content particle
WITHOUT_CLASSIFICATION	Check for end or for a separator.
WITHOUT_CLASSIFICATION	Register the separator.
WITHOUT_CLASSIFICATION	Parse the rest of the content model.
WITHOUT_CLASSIFICATION	Check for the occurrence indicator.
WITHOUT_CLASSIFICATION	Check for PCDATA alone.
WITHOUT_CLASSIFICATION	Parse mixed content.
WITHOUT_CLASSIFICATION	Read the attribute type.
WITHOUT_CLASSIFICATION	Read the default value.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Note that the attribute has been specified.
WITHOUT_CLASSIFICATION	Read the first token.
WITHOUT_CLASSIFICATION	Read the remaining tokens.
WITHOUT_CLASSIFICATION	no surrogates needed
WITHOUT_CLASSIFICATION	> 16 bits, surrogate needed
WITHOUT_CLASSIFICATION	too big for surrogate
WITHOUT_CLASSIFICATION	Check for a parameter entity.
WITHOUT_CLASSIFICATION	Read the entity name, and prepend '%' if necessary.
WITHOUT_CLASSIFICATION	Read the entity value.
WITHOUT_CLASSIFICATION	Internal entity.
WITHOUT_CLASSIFICATION	Read the external IDs
WITHOUT_CLASSIFICATION	Check for NDATA declaration.
WITHOUT_CLASSIFICATION	Finish the declaration.
WITHOUT_CLASSIFICATION	Read the external identifiers.
WITHOUT_CLASSIFICATION	Register the notation.
WITHOUT_CLASSIFICATION	Start with a little cheat -- in most cases, the entire sequence of character data will already be in the readBuffer; if not, fall through to the normal approach.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	High-level reading and scanning methods.
WITHOUT_CLASSIFICATION	else fall through...
WITHOUT_CLASSIFICATION	else fall through...
WITHOUT_CLASSIFICATION	OK, do it by the book.
WITHOUT_CLASSIFICATION	Read the first character.
WITHOUT_CLASSIFICATION	Find the delimiter.
WITHOUT_CLASSIFICATION	Read the literal.
WITHOUT_CLASSIFICATION	Literals never have line ends
WITHOUT_CLASSIFICATION	References may be allowed
WITHOUT_CLASSIFICATION	check the next character
WITHOUT_CLASSIFICATION	Return the value.
WITHOUT_CLASSIFICATION	public id
WITHOUT_CLASSIFICATION	system id
WITHOUT_CLASSIFICATION	Expand buffer if necessary.
WITHOUT_CLASSIFICATION	Skip whitespace at the start.
WITHOUT_CLASSIFICATION	Skip whitespace at the end.
WITHOUT_CLASSIFICATION	Start copying to the left.
WITHOUT_CLASSIFICATION	Normalise all other whitespace to a single space.
WITHOUT_CLASSIFICATION	Generate a hash code.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	error
WITHOUT_CLASSIFICATION	Get the bucket.
WITHOUT_CLASSIFICATION	Stop when we hit a null index.
WITHOUT_CLASSIFICATION	If they're the same length, check for a match. If the loop finishes, 'index' will contain the current bucket position.
WITHOUT_CLASSIFICATION	Stop if there are no more tuples.
WITHOUT_CLASSIFICATION	That's it, we have a match!
WITHOUT_CLASSIFICATION	Not found -- we'll have to add it.
WITHOUT_CLASSIFICATION	Do we have to grow the bucket?
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	XML query routines.
WITHOUT_CLASSIFICATION	Elements
WITHOUT_CLASSIFICATION	Try looking up the element
WITHOUT_CLASSIFICATION	Make a new one if necessary.
WITHOUT_CLASSIFICATION	Insert the content model, if any.
WITHOUT_CLASSIFICATION	Insert the attributes, if any.
WITHOUT_CLASSIFICATION	Save the element info.
WITHOUT_CLASSIFICATION	Create a new hashtable if necessary.
WITHOUT_CLASSIFICATION	Check that the attribute doesn't already exist!
WITHOUT_CLASSIFICATION	Use CONTENT_UNDECLARED to avoid overwriting existing element declaration.
WITHOUT_CLASSIFICATION	Entities
WITHOUT_CLASSIFICATION	Notations.
WITHOUT_CLASSIFICATION	Location.
WITHOUT_CLASSIFICATION	As long as there's nothing in the read buffer, try reading more data (for an external entity) or popping the entity stack (for either).
WITHOUT_CLASSIFICATION	Normal condition.
WITHOUT_CLASSIFICATION	Push the existing status.
WITHOUT_CLASSIFICATION	Create a new read buffer. (Note the four-character margin)
WITHOUT_CLASSIFICATION	Flush any remaining data.
WITHOUT_CLASSIFICATION	Make the URL absolute.
WITHOUT_CLASSIFICATION	See if the application wants to redirect the system ID and/or supply its own character stream.
WITHOUT_CLASSIFICATION	Start the entity.
WITHOUT_CLASSIFICATION	Figure out what we're reading from.
WITHOUT_CLASSIFICATION	There's an explicit character stream.
WITHOUT_CLASSIFICATION	We have to open our own stream to the URL.
WITHOUT_CLASSIFICATION	Set the new status
WITHOUT_CLASSIFICATION	If we get to here, there must be an InputStream available.
WITHOUT_CLASSIFICATION	Attempt to detect the encoding.
WITHOUT_CLASSIFICATION	Read an XML or text declaration.
WITHOUT_CLASSIFICATION	Read the XML/Encoding declaration.
WITHOUT_CLASSIFICATION	Read the first four bytes for autodetection.
WITHOUT_CLASSIFICATION	Look for a known signature.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	UCS-4 must begin with "<!XML" 0x00 0x00 0x3c 0x00: UCS-4, unusual (2143)
WITHOUT_CLASSIFICATION	UCS-2 with a byte-order marker. 0xfe 0xff: UCS-2, big-endian (12)
WITHOUT_CLASSIFICATION	UCS-2 without a BOM must begin with "<?XML" 0x00 0x3c 0x00 0x3f: UCS-2, big-endian, no byte-order mark
WITHOUT_CLASSIFICATION	UCS-2 without a BOM must begin with "<?XML" 0x3c 0x00 0x3f 0x00: UCS-2, little-endian, no byte-order mark
WITHOUT_CLASSIFICATION	Some kind of 8-bit encoding with "<?XML" 0x3c 0x3f 0x78 0x6d: UTF-8 or other 8-bit markup (read ENCODING)
WITHOUT_CLASSIFICATION	Push the existing status
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Don't bother if there is no input.
WITHOUT_CLASSIFICATION	Push it onto the stack.
WITHOUT_CLASSIFICATION	Throw an EOFException if there is nothing else to pop.
WITHOUT_CLASSIFICATION	Read the character
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	See if we have any overflow.
WITHOUT_CLASSIFICATION	Special situation -- we're taking input from a character stream.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Filter out all carriage returns if we've seen any.
WITHOUT_CLASSIFICATION	Reset the position.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	2-byte sequence: 00000yyyyyxxxxxx = 110yyyyy 10xxxxxx
WITHOUT_CLASSIFICATION	3-byte sequence: zzzzyyyyyyxxxxxx = 1110zzzz 10yyyyyy 10xxxxxx
WITHOUT_CLASSIFICATION	4-byte sequence: 11101110wwwwzzzzyy + 110111yyyyxxxxxx = 11110uuu 10uuzzzz 10yyyyyy 10xxxxxx (uuuuu = wwww + 1)
WITHOUT_CLASSIFICATION	Otherwise, the 8th bit may not be set in UTF-8
WITHOUT_CLASSIFICATION	How many characters have we read?
WITHOUT_CLASSIFICATION	Take a character from the buffer or from the actual input stream.
WITHOUT_CLASSIFICATION	Check for the correct bits at the start.
WITHOUT_CLASSIFICATION	Return the significant bits.
WITHOUT_CLASSIFICATION	No errors; first line
WITHOUT_CLASSIFICATION	Set up the buffers for data and names
WITHOUT_CLASSIFICATION	Set up the DTD hash tables
WITHOUT_CLASSIFICATION	Set up the variables for the current element context.
WITHOUT_CLASSIFICATION	Set up the input variables
WITHOUT_CLASSIFICATION	The current XML handler interface.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Hashtables for DTD information on elements, entities, and notations.
WITHOUT_CLASSIFICATION	Element type currently in force.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Base external identifiers for resolution.
WITHOUT_CLASSIFICATION	Stack of entity names, to help detect recursion.
WITHOUT_CLASSIFICATION	Are we in a context where PEs are allowed?
WITHOUT_CLASSIFICATION	Symbol table, for internalising names.
WITHOUT_CLASSIFICATION	{{{ Variables
WITHOUT_CLASSIFICATION	{{{ start() method
WITHOUT_CLASSIFICATION	app.setServicesProvider(delegate);
WITHOUT_CLASSIFICATION	{{{ handleMessage() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Constructor
WITHOUT_CLASSIFICATION	{{{ Variables
WITHOUT_CLASSIFICATION	Utility flag: have we noticed a CR while reading the last data chunk? If so, we will have to go back and normalise CR/LF.
WITHOUT_CLASSIFICATION	Set type/creator codes for files
WITHOUT_CLASSIFICATION	{{{ osok() method
WITHOUT_CLASSIFICATION	According to Slava this is better
WITHOUT_CLASSIFICATION	{{{ showInFinder() method
WITHOUT_CLASSIFICATION	{{{ runScript() method
WITHOUT_CLASSIFICATION	{{{ ScriptRunner class
WITHOUT_CLASSIFICATION	{{{ openSelection() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Variables
WITHOUT_CLASSIFICATION	Remember to make this an option later NSApplication.sharedApplication().hide(jEdit.getPlugin("MacOSPlugin"));
WITHOUT_CLASSIFICATION	SwingUtilities.invokeLater(new ScriptRunner(path)); }}}
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ getSettings() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Constructor
WITHOUT_CLASSIFICATION	{{{ Handlers
WITHOUT_CLASSIFICATION	{{{ handleAbout() method
WITHOUT_CLASSIFICATION	{{{ handleFileCodes() method
WITHOUT_CLASSIFICATION	Set type/creator on save
WITHOUT_CLASSIFICATION	Fail silently, since we may be using UFS
WITHOUT_CLASSIFICATION	Add type/creator to local buffer property list on open
WITHOUT_CLASSIFICATION	This will happen when a new file is created
WITHOUT_CLASSIFICATION	{{{ handleOpenFile() method
WITHOUT_CLASSIFICATION	{{{ handleOpenFile() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ handlePreferences() method
WITHOUT_CLASSIFICATION	{{{ handleQuit() method
WITHOUT_CLASSIFICATION	{{{ Delegate methods
WITHOUT_CLASSIFICATION	{{{ applicationDockMenu() method
WITHOUT_CLASSIFICATION	notify clients with -wait
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Buffers
WITHOUT_CLASSIFICATION	Recent Buffers
WITHOUT_CLASSIFICATION	Recent Directories
WITHOUT_CLASSIFICATION	Macros
WITHOUT_CLASSIFICATION	{{{ applicationOpenFiles() method
WITHOUT_CLASSIFICATION	{{{ applicationShouldTerminate() method
WITHOUT_CLASSIFICATION	{{{ Services
WITHOUT_CLASSIFICATION	{{{ openFile() method
WITHOUT_CLASSIFICATION	{{{ insertSelection() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Constructor
WITHOUT_CLASSIFICATION	{{{ construct() method
WITHOUT_CLASSIFICATION	{{{ menuSelected() method
WITHOUT_CLASSIFICATION	{{{ Dock Menu
WITHOUT_CLASSIFICATION	{{{ BufferMenu class
WITHOUT_CLASSIFICATION	item.setImage(NSWorkspace.sharedWorkspace().iconForFile( buffs[i].getPath()));
WITHOUT_CLASSIFICATION	{{{ MacrosMenu class
WITHOUT_CLASSIFICATION	{{{ RecentMenu class
WITHOUT_CLASSIFICATION	{{{ RecentDirMenu class
WITHOUT_CLASSIFICATION	{{{ MacroAction class
WITHOUT_CLASSIFICATION	{{{ NewViewAction class
WITHOUT_CLASSIFICATION	{{{ ShowFileAction class
WITHOUT_CLASSIFICATION	{{{ Constructor
WITHOUT_CLASSIFICATION	{{{ construct() method
WITHOUT_CLASSIFICATION	{{{ menuSelected() method
WITHOUT_CLASSIFICATION	{{{ menuDeselected() method
WITHOUT_CLASSIFICATION	{{{ menuDeselected() method
WITHOUT_CLASSIFICATION	{{{ menuCanceled() method
WITHOUT_CLASSIFICATION	{{{ ShowRecentDirMenuItem class
WITHOUT_CLASSIFICATION	{{{ Constructor
WITHOUT_CLASSIFICATION	{{{ menuCanceled() method
WITHOUT_CLASSIFICATION	{{{ ShowFileAction class
WITHOUT_CLASSIFICATION	{{{ ShowBufferMenuItem class
WITHOUT_CLASSIFICATION	{{{ updateEveryTime() method
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	{{{ ShowDirAction class
WITHOUT_CLASSIFICATION	{{{ accept() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ accept() method
WITHOUT_CLASSIFICATION	{{{ createMacro() method
WITHOUT_CLASSIFICATION	{{{ runMacro() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ runMacro() method
WITHOUT_CLASSIFICATION	{{{ Handler constructor
WITHOUT_CLASSIFICATION	Begin BeanShell Modification - serializable
WITHOUT_CLASSIFICATION	End BeanShell Modification - serializable
WITHOUT_CLASSIFICATION	should normally be
WITHOUT_CLASSIFICATION	Do the for init
WITHOUT_CLASSIFICATION	do not invoke special override for block... (see above)
WITHOUT_CLASSIFICATION	put it back
WITHOUT_CLASSIFICATION	default impl
WITHOUT_CLASSIFICATION	{{{ stringToSelection() method
WITHOUT_CLASSIFICATION	declaringNameSpace
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Begin Method components
WITHOUT_CLASSIFICATION	Arguments
WITHOUT_CLASSIFICATION	Scripted method body
WITHOUT_CLASSIFICATION	Java Method
WITHOUT_CLASSIFICATION	End method components
WITHOUT_CLASSIFICATION	paramNames
WITHOUT_CLASSIFICATION	method.block
WITHOUT_CLASSIFICATION	modifiers
WITHOUT_CLASSIFICATION	Note: bshmethod needs to re-evaluate arg types hereThis is broken.
WITHOUT_CLASSIFICATION	Note: bshmethod needs to re-evaluate the method return type here.This is broken.
WITHOUT_CLASSIFICATION	isNative
WITHOUT_CLASSIFICATION	is this a syncrhonized method?
WITHOUT_CLASSIFICATION	???
WITHOUT_CLASSIFICATION	Cardinality (number of args) mismatch
WITHOUT_CLASSIFICATION	Make the local namespace for the method invocation
WITHOUT_CLASSIFICATION	set the method parameters in the local namespace
WITHOUT_CLASSIFICATION	override
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Set typed variable
WITHOUT_CLASSIFICATION	getAssignable would catch this for typed param
WITHOUT_CLASSIFICATION	Push the new namespace on the call stack
WITHOUT_CLASSIFICATION	save the callstack including the called method, just for error mess
WITHOUT_CLASSIFICATION	Get back to caller namespace
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	return type is a class
WITHOUT_CLASSIFICATION	Point to return statement point if we had one. (else it was implicit return? What's the case here?)
WITHOUT_CLASSIFICATION	The token.image text of the name... never changes.
WITHOUT_CLASSIFICATION	null value means no value
WITHOUT_CLASSIFICATION	check for easy mistake
WITHOUT_CLASSIFICATION	Need to scrape a value from the last line?
WITHOUT_CLASSIFICATION	I/O error
WITHOUT_CLASSIFICATION	read results...
WITHOUT_CLASSIFICATION	bad postURL
WITHOUT_CLASSIFICATION	?
WITHOUT_CLASSIFICATION	first node will either be PrimitiveType or AmbiguousName
WITHOUT_CLASSIFICATION	Ease debugging... XThis.this refers to the enclosing class instance
WITHOUT_CLASSIFICATION	If equals() is not explicitly defined we must override the default implemented by the This object protocol for scriptedobject. To support XThis equals() must test for equality with the generated proxy object, not the scripted bsh This object;otherwise callers from outside in Java will not see a the proxy object as equal to itself.
WITHOUT_CLASSIFICATION	leave null
WITHOUT_CLASSIFICATION	leave null
WITHOUT_CLASSIFICATION	XThis.this refers to the enclosing class instance
WITHOUT_CLASSIFICATION	return cached type if available
WITHOUT_CLASSIFICATION	Ordinals for various reasons why an Error of this type can be thrown.
WITHOUT_CLASSIFICATION	put it back
WITHOUT_CLASSIFICATION	return cached type if available
WITHOUT_CLASSIFICATION	first node will either be PrimitiveType or AmbiguousName
WITHOUT_CLASSIFICATION	finaly block
WITHOUT_CLASSIFICATION	Constructors of various flavors follow.
WITHOUT_CLASSIFICATION	unwrap the target error
WITHOUT_CLASSIFICATION	If the param is typed check assignability
WITHOUT_CLASSIFICATION	Get catch block
WITHOUT_CLASSIFICATION	If we have an exception, find a catch
WITHOUT_CLASSIFICATION	Found match, execute catch block
WITHOUT_CLASSIFICATION	set a typed variable (directly in the block)
WITHOUT_CLASSIFICATION	set an untyped variable directly in the block
WITHOUT_CLASSIFICATION	put cbNameSpace on the top of the stack
WITHOUT_CLASSIFICATION	handled target
WITHOUT_CLASSIFICATION	evaluate finally block
WITHOUT_CLASSIFICATION	exception fell through, throw it upward...
WITHOUT_CLASSIFICATION	Note: no way to mutate the Throwable message, must maintain our own
WITHOUT_CLASSIFICATION	freeze the callstack for the stack trace.
WITHOUT_CLASSIFICATION	Users should not normally see this.
WITHOUT_CLASSIFICATION	type
WITHOUT_CLASSIFICATION	type
WITHOUT_CLASSIFICATION	check this.value
WITHOUT_CLASSIFICATION	strictjava
WITHOUT_CLASSIFICATION	See notes in getThis()
WITHOUT_CLASSIFICATION	Log.log(Log.ERROR,this,io);
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Prepare to execute the block. We must create a new BlockNameSpace to hold the catch parameter and swap it on the stack after initializing it.
WITHOUT_CLASSIFICATION	Begin instance data Note: if we add something here we should reset it in the clear() method.
WITHOUT_CLASSIFICATION	|| ( getParent()!=null && getParent().classStatic != null )
WITHOUT_CLASSIFICATION	End instance data
WITHOUT_CLASSIFICATION	Begin constructors
WITHOUT_CLASSIFICATION	Note: in this case parent must have a class manager.
WITHOUT_CLASSIFICATION	Register for notification of classloader change
WITHOUT_CLASSIFICATION	End constructors
WITHOUT_CLASSIFICATION	if localscoping switch follow strictJava, else recurse
WITHOUT_CLASSIFICATION	recurse
WITHOUT_CLASSIFICATION	primitives should have been wrapped
WITHOUT_CLASSIFICATION	Locate the variable definition if it exists.
WITHOUT_CLASSIFICATION	Found an existing variable here (or above if recurse allowed)
WITHOUT_CLASSIFICATION	No previous variable definition found here (or above if recurse)
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	nameSpaceChanged() on new variable addition
WITHOUT_CLASSIFICATION	modifiers
WITHOUT_CLASSIFICATION	recurse
WITHOUT_CLASSIFICATION	If we are disconnected from root we need to handle the def imports
WITHOUT_CLASSIFICATION	interp
WITHOUT_CLASSIFICATION	interp
WITHOUT_CLASSIFICATION	Interpreter.debug("No class manager namespace:" +this);
WITHOUT_CLASSIFICATION	try parent
WITHOUT_CLASSIFICATION	Change import precedence if we are a class body/instance
WITHOUT_CLASSIFICATION	Change import precedence if we are a class body/instance Get imported first.
WITHOUT_CLASSIFICATION	checkVariableModifiers( name, modifiers );
WITHOUT_CLASSIFICATION	Get variables declared in this namespace.
WITHOUT_CLASSIFICATION	Setting a typed variable is always a local operation.
WITHOUT_CLASSIFICATION	does the variable already exist?
WITHOUT_CLASSIFICATION	Is it typed?
WITHOUT_CLASSIFICATION	else set it and return
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	checkMethodModifiers( method );
WITHOUT_CLASSIFICATION	Vector
WITHOUT_CLASSIFICATION	declaredOnly
WITHOUT_CLASSIFICATION	Change import precedence if we are a class body/instance Get import first.
WITHOUT_CLASSIFICATION	m contains either BshMethod or Vector of BshMethod
WITHOUT_CLASSIFICATION	unwrap
WITHOUT_CLASSIFICATION	Apply most specific signature matching
WITHOUT_CLASSIFICATION	onlyStatic
WITHOUT_CLASSIFICATION	onlyStatic
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Try object imports
WITHOUT_CLASSIFICATION	Try static imports
WITHOUT_CLASSIFICATION	object
WITHOUT_CLASSIFICATION	Here we catch any EvalError from the interpreter because we areusing it as a tool to load the command, not as part of theexecution path.
WITHOUT_CLASSIFICATION	Look for the loaded command
WITHOUT_CLASSIFICATION	cacheCount++; debug
WITHOUT_CLASSIFICATION	Check the cache
WITHOUT_CLASSIFICATION	Unqualified (simple, non-compound) name
WITHOUT_CLASSIFICATION	Unqualified name check imported
WITHOUT_CLASSIFICATION	Try imported class
WITHOUT_CLASSIFICATION	if found as imported also cache it
WITHOUT_CLASSIFICATION	Not found
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Try absolute
WITHOUT_CLASSIFICATION	Cache unqualified names to prevent import check again
WITHOUT_CLASSIFICATION	Try explicitly imported class, e.g. import foo.Bar;
WITHOUT_CLASSIFICATION	Found the full name in imported classes.
WITHOUT_CLASSIFICATION	Try to make the full imported name
WITHOUT_CLASSIFICATION	Handle imported inner class case
WITHOUT_CLASSIFICATION	not a class
WITHOUT_CLASSIFICATION	If found cache the full name in the BshClassManager
WITHOUT_CLASSIFICATION	Try imported packages, e.g. "import foo.bar.;"in reverse order of import...(give later imports precedence...)
WITHOUT_CLASSIFICATION	Try super import if availableNote: we do this last to allow explicitly imported classesand packages to take priority. This method will also throw anerror indicating ambiguity if it exists...
WITHOUT_CLASSIFICATION	For serialization.Don't serialize non-serializable objects.
WITHOUT_CLASSIFICATION	arbitrary flag
WITHOUT_CLASSIFICATION	volatile, transient
WITHOUT_CLASSIFICATION	default
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	--- Begin static members ---
WITHOUT_CLASSIFICATION	--- End static members ---
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	End constructors
WITHOUT_CLASSIFICATION	--- End instance data ---
WITHOUT_CLASSIFICATION	Create the root "bsh" system object if it doesn't exist.
WITHOUT_CLASSIFICATION	onlyStatic
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	bsh
WITHOUT_CLASSIFICATION	bsh.system
WITHOUT_CLASSIFICATION	alias
WITHOUT_CLASSIFICATION	bsh.help
WITHOUT_CLASSIFICATION	bsh.cwd
WITHOUT_CLASSIFICATION	applets can't see sys props
WITHOUT_CLASSIFICATION	bsh.interactive
WITHOUT_CLASSIFICATION	BshClassManager
WITHOUT_CLASSIFICATION	init the callstack.
WITHOUT_CLASSIFICATION	try to sync up the console
WITHOUT_CLASSIFICATION	this helps a little
WITHOUT_CLASSIFICATION	sanity check during development
WITHOUT_CLASSIFICATION	reinit the callstack
WITHOUT_CLASSIFICATION	begin source and eval
WITHOUT_CLASSIFICATION	, CallStack callstack
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	nodes remember from where they were sourced
WITHOUT_CLASSIFICATION	non-interactive, return control now
WITHOUT_CLASSIFICATION	show extra "expecting..." info
WITHOUT_CLASSIFICATION	add the source file info and throw again
WITHOUT_CLASSIFICATION	failsafe, set the Line as the origin of the error.
WITHOUT_CLASSIFICATION	failsafe, set the Line as the origin of the error.
WITHOUT_CLASSIFICATION	end source and eval
WITHOUT_CLASSIFICATION	End ConsoleInterface
WITHOUT_CLASSIFICATION	map null to Primtive.NULL coming in...
WITHOUT_CLASSIFICATION	optimization for common case
WITHOUT_CLASSIFICATION	We jump through some hoops here to handle arbitrary cases likeunset("bsh.foo");
WITHOUT_CLASSIFICATION	lhs.assign( null, false );
WITHOUT_CLASSIFICATION	end primary set and get methods
WITHOUT_CLASSIFICATION	Methods for interacting with Parser
WITHOUT_CLASSIFICATION	Default is c:\windows under win98, $HOME under Unix
WITHOUT_CLASSIFICATION	squeltch security exception, filenotfoundexception
WITHOUT_CLASSIFICATION	if relative, fix up to bsh.cwd
WITHOUT_CLASSIFICATION	set transient fields
WITHOUT_CLASSIFICATION	ug
WITHOUT_CLASSIFICATION	evaluate the expression
WITHOUT_CLASSIFICATION	Order of body and condition is swapped for do / while
WITHOUT_CLASSIFICATION	has body, else just for side effects
WITHOUT_CLASSIFICATION	no body?
WITHOUT_CLASSIFICATION	initCallStack( namespace );
WITHOUT_CLASSIFICATION	null callstack, one will be created for us
WITHOUT_CLASSIFICATION	declaringInterpreter
WITHOUT_CLASSIFICATION	Find the bsh method
WITHOUT_CLASSIFICATION	leave null
WITHOUT_CLASSIFICATION	a default equals() testing for equality with the This reference
WITHOUT_CLASSIFICATION	Call script "invoke( String methodName, Object [] args );
WITHOUT_CLASSIFICATION	{{{ Entry class
WITHOUT_CLASSIFICATION	{{{ RecentHandler class
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	These do not change during evaluation
WITHOUT_CLASSIFICATION	For evaluation
WITHOUT_CLASSIFICATION	number of times eval hit 'this.caller'
WITHOUT_CLASSIFICATION	End mutable instance variables. ---------------------------------------------------------
WITHOUT_CLASSIFICATION	{{{ updateTitle() method
WITHOUT_CLASSIFICATION	Begin Cached result structures These are optimizations
WITHOUT_CLASSIFICATION	End Cached result structures
WITHOUT_CLASSIFICATION	autoalloc
WITHOUT_CLASSIFICATION	switch namespace and special var visibility
WITHOUT_CLASSIFICATION	Resolved the variable
WITHOUT_CLASSIFICATION	Keep adding parts until we have a class
WITHOUT_CLASSIFICATION	not a class (or variable per above)
WITHOUT_CLASSIFICATION	If we didn't find a class or variable name (or prefix) abovethere are two possibilities:- If we are a simple name then we can pass as a void variable reference.- If we are compound then we must fail at this point.
WITHOUT_CLASSIFICATION	--------------------------------------------------------After this point we're definitely evaluating relative toa base object.--------------------------------------------------------
WITHOUT_CLASSIFICATION	Do some basic validity checks.
WITHOUT_CLASSIFICATION	previous round produced null
WITHOUT_CLASSIFICATION	previous round produced void
WITHOUT_CLASSIFICATION	Class qualified 'this' reference from inner class. e.g. 'MyOuterClass.this'
WITHOUT_CLASSIFICATION	find the enclosing class instance space of the class name
WITHOUT_CLASSIFICATION	&& thisNameSpace.getParent().classInstance != null
WITHOUT_CLASSIFICATION	static field?
WITHOUT_CLASSIFICATION	inner class?
WITHOUT_CLASSIFICATION	Some kind of field access?
WITHOUT_CLASSIFICATION	length access on array?
WITHOUT_CLASSIFICATION	not a field
WITHOUT_CLASSIFICATION	if we get here we have failed
WITHOUT_CLASSIFICATION	Some duplication for "super". See notes for "this" aboveIf we're in an enclsing class instance and have a superclassinstance our super is the superclass instance.
WITHOUT_CLASSIFICATION	Allow getSuper() to through BlockNameSpace to the method's super
WITHOUT_CLASSIFICATION	super is now the closure's super or class instance
WITHOUT_CLASSIFICATION	get the previous context (see notes for this class)
WITHOUT_CLASSIFICATION	get the previous context (see notes for this class)
WITHOUT_CLASSIFICATION	early return
WITHOUT_CLASSIFICATION	"var" means untyped, return null class
WITHOUT_CLASSIFICATION	Try straightforward class name first
WITHOUT_CLASSIFICATION	Try toObject() which knows how to work through inner classesand see what we end up with
WITHOUT_CLASSIFICATION	Null interpreter and callstack references. class only resolution should not require them.
WITHOUT_CLASSIFICATION	couldn't resolve it
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	Simple (non-compound) variable assignment e.g. x=5;
WITHOUT_CLASSIFICATION	Interpreter.debug("Simple var LHS...");
WITHOUT_CLASSIFICATION	Field e.g. foo.bar=5;
WITHOUT_CLASSIFICATION	autoallocthis
WITHOUT_CLASSIFICATION	found a non-backslash char.
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	Finished eval and its a class.
WITHOUT_CLASSIFICATION	e.g. this.x=5; or someThisType.x=5;
WITHOUT_CLASSIFICATION	dissallow assignment to magic fields
WITHOUT_CLASSIFICATION	Superclass method invocation? (e.g. super.foo())
WITHOUT_CLASSIFICATION	Find target object or class identifier
WITHOUT_CLASSIFICATION	if we've got an object, resolve the method
WITHOUT_CLASSIFICATION	It's a class
WITHOUT_CLASSIFICATION	try static method
WITHOUT_CLASSIFICATION	cache the fact that this is a static method invocation on this class
WITHOUT_CLASSIFICATION	return null; ???
WITHOUT_CLASSIFICATION	, ReflectError, InvocationTargetException
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	If defined, invoke it
WITHOUT_CLASSIFICATION	Look for a BeanShell command
WITHOUT_CLASSIFICATION	should try to print usage here if nothing found
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	end compound name routines
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	checkonly
WITHOUT_CLASSIFICATION	fromValue
WITHOUT_CLASSIFICATION	checkOnly
WITHOUT_CLASSIFICATION	This should not happen with checkOnly true
WITHOUT_CLASSIFICATION	assignment to loose type, void type, or exactly same type
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getEditPanes() method
WITHOUT_CLASSIFICATION	must be null in checkOnly
WITHOUT_CLASSIFICATION	Cannot cast from arbitrary object to primitive
WITHOUT_CLASSIFICATION	Casting to reference type
WITHOUT_CLASSIFICATION	primitive to wrapper type
WITHOUT_CLASSIFICATION	Primitive (not null or void) to Object.class type
WITHOUT_CLASSIFICATION	box it
WITHOUT_CLASSIFICATION	If type already assignable no cast necessary We do this last to allow various errors above to be caught. e.g cast Primitive.Void to Object would pass this
WITHOUT_CLASSIFICATION	Currently unused, but we'll probably need it later.
WITHOUT_CLASSIFICATION	Note: it may see like with the new 1.3 scoping this test could beremoved, but it cannot. When recurse is false we still need to set thevariable in our parent, not here.
WITHOUT_CLASSIFICATION	set the var here in the block namespace
WITHOUT_CLASSIFICATION	set the var in the enclosing (parent) namespace
WITHOUT_CLASSIFICATION	strict?
WITHOUT_CLASSIFICATION	super.variables.containsKey( name ) not any faster, I checked
WITHOUT_CLASSIFICATION	e.printStackTrace();
WITHOUT_CLASSIFICATION	ClassPathException is a type of UtilEvalError
WITHOUT_CLASSIFICATION	The interpretation of an ambiguous name is context sensitive.We disallow a generic eval( ).
WITHOUT_CLASSIFICATION	Should never come here
WITHOUT_CLASSIFICATION	Read all the backslashes
WITHOUT_CLASSIFICATION	Both numeric wrapper types? Try numeric style promotion wrapper cast
WITHOUT_CLASSIFICATION	Begin methods which simply delegate to our parent (enclosing scope)
WITHOUT_CLASSIFICATION	Here, we have seen an odd number of backslash's followed by a 'u'
WITHOUT_CLASSIFICATION	assign doesn't need the pre-value
WITHOUT_CLASSIFICATION	{{{ getSplitConfig() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	evaluate each child
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Determines whether the current node was actually closed and pushed. This should only be called in the final user action of a node scope.
WITHOUT_CLASSIFICATION	Call this to reinitialize the node stack. It is called automatically by the parser's ReInit() method.
WITHOUT_CLASSIFICATION	Returns the root node of the AST. It only makes sense to call this after a successful parse.
WITHOUT_CLASSIFICATION	Pushes a node on to the stack.
WITHOUT_CLASSIFICATION	Returns the node on the top of the stack, and remove it from the stack.
WITHOUT_CLASSIFICATION	Returns the node currently on the top of the stack.
WITHOUT_CLASSIFICATION	Returns the number of children on the stack in the current node scope.
WITHOUT_CLASSIFICATION	A conditional node is constructed if its condition is true. All the nodes that have been pushed since the node was opened are made children of the the conditional node, which is then pushed on to the stack. If the condition is false the node is not constructed and they are left on the stack.
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	try scripted class
WITHOUT_CLASSIFICATION	end HandlerBase implementation
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	classloader wants no leading slash
WITHOUT_CLASSIFICATION	classloader wants no leading slash
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	offset
WITHOUT_CLASSIFICATION	len
WITHOUT_CLASSIFICATION	may have been axed previously
WITHOUT_CLASSIFICATION	no args method
WITHOUT_CLASSIFICATION	Note: this class is final because we may test == Primitive.class in places.If we need to change that search for those tests.
WITHOUT_CLASSIFICATION	boolean
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	special primitive types
WITHOUT_CLASSIFICATION	keep track of the original types
WITHOUT_CLASSIFICATION	Unwrap primitives
WITHOUT_CLASSIFICATION	returns Object covering both Long and Boolean return types
WITHOUT_CLASSIFICATION	arithmetic
WITHOUT_CLASSIFICATION	bitwise
WITHOUT_CLASSIFICATION	bitwise
WITHOUT_CLASSIFICATION	returns Object covering both Integer and Boolean return types
WITHOUT_CLASSIFICATION	returns Object covering both Double and Boolean return types
WITHOUT_CLASSIFICATION	boolean
WITHOUT_CLASSIFICATION	returns Object covering both Long and Boolean return types
WITHOUT_CLASSIFICATION	arithmetic
WITHOUT_CLASSIFICATION	arithmetic
WITHOUT_CLASSIFICATION	can't shift floating-point values
WITHOUT_CLASSIFICATION	can't shift floats
WITHOUT_CLASSIFICATION	++ and -- must be cast back the original type
WITHOUT_CLASSIFICATION	Promote character to Number type for these purposes
WITHOUT_CLASSIFICATION	arbitrary
WITHOUT_CLASSIFICATION	map voids to nulls for the outside world
WITHOUT_CLASSIFICATION	fromValue
WITHOUT_CLASSIFICATION	checkOnly
WITHOUT_CLASSIFICATION	Lots of preconditions checked here...Once things are running smoothly we might comment these out(That's what assertions are for).
WITHOUT_CLASSIFICATION	unwrap primitives
WITHOUT_CLASSIFICATION	non boolean primitive, get appropriate flavor of zero
WITHOUT_CLASSIFICATION	fromType
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	unwrap, etc.
WITHOUT_CLASSIFICATION	Trying to cast null to primitive type?
WITHOUT_CLASSIFICATION	can only cast boolean to boolean
WITHOUT_CLASSIFICATION	Do numeric cast
WITHOUT_CLASSIFICATION	first promote char to Number type to avoid duplicating code
WITHOUT_CLASSIFICATION	Begin BeanShell Modification - public, extend EvalError
WITHOUT_CLASSIFICATION	End BeanShell Modification - public, extend EvalError
WITHOUT_CLASSIFICATION	Begin BeanShell Modification - sourceFile
WITHOUT_CLASSIFICATION	End BeanShell Modification - sourceFile
WITHOUT_CLASSIFICATION	Begin BeanShell Modification - constructor
WITHOUT_CLASSIFICATION	End BeanShell Modification - constructor
WITHOUT_CLASSIFICATION	End BeanShell Modification - constructor
WITHOUT_CLASSIFICATION	End BeanShell Modification - super constructor args
WITHOUT_CLASSIFICATION	Begin BeanShell Modification - moved body to overloaded getMessage()
WITHOUT_CLASSIFICATION	strict
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	End BeanShell Modification - moved body to overloaded getMessage()
WITHOUT_CLASSIFICATION	Begin BeanShell Modification - added debug param
WITHOUT_CLASSIFICATION	End BeanShell Modification - added debug param
WITHOUT_CLASSIFICATION	Begin BeanShell Modification - added sourceFile info
WITHOUT_CLASSIFICATION	End BeanShell Modification - added sourceFile info
WITHOUT_CLASSIFICATION	Begin BeanShell Modification - made conditional on debug
WITHOUT_CLASSIFICATION	End BeanShell Modification - made conditional on debug
WITHOUT_CLASSIFICATION	Begin BeanShell Modification - override error methods and toString
WITHOUT_CLASSIFICATION	copied from generated getMessage()
WITHOUT_CLASSIFICATION	End BeanShell Modification - override error methods and toString
WITHOUT_CLASSIFICATION	skip CR
WITHOUT_CLASSIFICATION	Test it
WITHOUT_CLASSIFICATION	for inner classes
WITHOUT_CLASSIFICATION	Force the class public for now...
WITHOUT_CLASSIFICATION	Generate the bsh instance 'This' reference holder field
WITHOUT_CLASSIFICATION	Generate the static bsh static reference holder field
WITHOUT_CLASSIFICATION	Generate the fields
WITHOUT_CLASSIFICATION	Generate the constructors
WITHOUT_CLASSIFICATION	Don't generate private constructors
WITHOUT_CLASSIFICATION	If no other constructors, generate a default constructor
WITHOUT_CLASSIFICATION	index
WITHOUT_CLASSIFICATION	Generate the delegate methods
WITHOUT_CLASSIFICATION	Don't generate private or loosely return typed methods
WITHOUT_CLASSIFICATION	|| returnType == null
WITHOUT_CLASSIFICATION	map loose return type to Object
WITHOUT_CLASSIFICATION	Generate method body
WITHOUT_CLASSIFICATION	The split config is recorded in a simple RPN "language".
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Get the instance field
WITHOUT_CLASSIFICATION	Generate code to push arguments as an object array
WITHOUT_CLASSIFICATION	Push the boolean constant 'true' (for declaredOnly)
WITHOUT_CLASSIFICATION	{{{ restoreSplitConfig() method
WITHOUT_CLASSIFICATION	Generate code to push arguments as an object array
WITHOUT_CLASSIFICATION	Invoke the method This.invokeMethod( name, Class [] sig, boolean )
WITHOUT_CLASSIFICATION	Generate code to unwrap bsh Primitive types
WITHOUT_CLASSIFICATION	Generate code to return the value
WITHOUT_CLASSIFICATION	Create this constructor method
WITHOUT_CLASSIFICATION	isStatic
WITHOUT_CLASSIFICATION	Generate the code implementing the alternate constructor switch
WITHOUT_CLASSIFICATION	Generate code to invoke the ClassGeneratorUtil initInstance() method
WITHOUT_CLASSIFICATION	push 'this'
WITHOUT_CLASSIFICATION	Push the class/constructor name as a constant
WITHOUT_CLASSIFICATION	Push arguments as an object array
WITHOUT_CLASSIFICATION	invoke the initInstance() method
WITHOUT_CLASSIFICATION	push super class name use superClassName var?
WITHOUT_CLASSIFICATION	push class static This object
WITHOUT_CLASSIFICATION	push args
WITHOUT_CLASSIFICATION	push this constructor index number onto stack
WITHOUT_CLASSIFICATION	invoke the ClassGeneratorUtil getConstructorsArgs() method
WITHOUT_CLASSIFICATION	store ConstructorArgs in consArgsVar
WITHOUT_CLASSIFICATION	{{{ toggleLineSeparator() method
WITHOUT_CLASSIFICATION	Get the ConstructorArgs selector field from ConstructorArgs
WITHOUT_CLASSIFICATION	push ConstructorArgs
WITHOUT_CLASSIFICATION	start switch
WITHOUT_CLASSIFICATION	max
WITHOUT_CLASSIFICATION	min
WITHOUT_CLASSIFICATION	generate switch body
WITHOUT_CLASSIFICATION	default branch always invokes no args super push 'this'
WITHOUT_CLASSIFICATION	done with switch
WITHOUT_CLASSIFICATION	cv.visitLineNumber( index, labels[index] ); push this before args
WITHOUT_CLASSIFICATION	Unload the arguments from the ConstructorArgs object
WITHOUT_CLASSIFICATION	invoke the iterator method on the ConstructorArgs push the ConstructorArgs
WITHOUT_CLASSIFICATION	if it's an object type we must do a check cast
WITHOUT_CLASSIFICATION	invoke the constructor for this branch
WITHOUT_CLASSIFICATION	Maybe combine this with generateMethod()
WITHOUT_CLASSIFICATION	map loose return to Object
WITHOUT_CLASSIFICATION	Add method body
WITHOUT_CLASSIFICATION	Push vars
WITHOUT_CLASSIFICATION	long
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	use default super constructor
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	modifiers
WITHOUT_CLASSIFICATION	use default super constructor
WITHOUT_CLASSIFICATION	Make a tmp namespace to hold the original constructor args for use in eval of the parameters node
WITHOUT_CLASSIFICATION	evaluate the args
WITHOUT_CLASSIFICATION	find the matching super() constructor for the args
WITHOUT_CLASSIFICATION	find the matching this() constructor for the args
WITHOUT_CLASSIFICATION	Are we choosing ourselves recursively through a this() reference?
WITHOUT_CLASSIFICATION	Get the static This reference from the proto-instance
WITHOUT_CLASSIFICATION	Get the instance initializer block from the static This
WITHOUT_CLASSIFICATION	override
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Create the instance namespace
WITHOUT_CLASSIFICATION	Set the instance This reference on the instance
WITHOUT_CLASSIFICATION	Give the instance space its object import
WITHOUT_CLASSIFICATION	invoke the constructor method from the instanceThis
WITHOUT_CLASSIFICATION	Find the constructor (now in the instance namespace)
WITHOUT_CLASSIFICATION	if args, we must have constructor
WITHOUT_CLASSIFICATION	Evaluate the constructor
WITHOUT_CLASSIFICATION	overrideNameSpace
WITHOUT_CLASSIFICATION	callerInfo
WITHOUT_CLASSIFICATION	unwrap Primitive.Null to null
WITHOUT_CLASSIFICATION	right?
WITHOUT_CLASSIFICATION	unsafe caching of type here
WITHOUT_CLASSIFICATION	Begin Child node structure evaluated by insureNodesParsed
WITHOUT_CLASSIFICATION	index of the first throws clause child node
WITHOUT_CLASSIFICATION	End Child node structure evaluated by insureNodesParsed
WITHOUT_CLASSIFICATION	there is always a paramsNode
WITHOUT_CLASSIFICATION	skip throws
WITHOUT_CLASSIFICATION	skip throws
WITHOUT_CLASSIFICATION	Unsafe caching of type here. null (none), Void.TYPE, or a Class
WITHOUT_CLASSIFICATION	Install an instance of this method in the namespace. See notes in BshMethod
WITHOUT_CLASSIFICATION	validate that the throws names are class names
WITHOUT_CLASSIFICATION	if strictJava mode, check for loose parameters and return type
WITHOUT_CLASSIFICATION	do nothing - ch already contains correct character
WITHOUT_CLASSIFICATION	get next character
WITHOUT_CLASSIFICATION	get next character
WITHOUT_CLASSIFICATION	check the next two characters
WITHOUT_CLASSIFICATION	type is either a class name or a primitive type
WITHOUT_CLASSIFICATION	args is either constructor arguments or array dimensions
WITHOUT_CLASSIFICATION	Look for scripted class object
WITHOUT_CLASSIFICATION	force class
WITHOUT_CLASSIFICATION	Try regular class
WITHOUT_CLASSIFICATION	force class
WITHOUT_CLASSIFICATION	Is an inner class style object allocation
WITHOUT_CLASSIFICATION	No need to wrap this debug
WITHOUT_CLASSIFICATION	Is it an inner class?
WITHOUT_CLASSIFICATION	work through to class 'this'
WITHOUT_CLASSIFICATION	interfaces
WITHOUT_CLASSIFICATION	superClass
WITHOUT_CLASSIFICATION	isInterface
WITHOUT_CLASSIFICATION	statical import fields from the interface so that code inside can refer to the fields directly (e.g. HEIGHT)
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	all printable ASCII characters
WITHOUT_CLASSIFICATION	SwingUtilities.updateComponentTreeUI(getRootPane()); }}}
WITHOUT_CLASSIFICATION	{{{ loadToolBars() method
WITHOUT_CLASSIFICATION	{{{ createEditPane() method
WITHOUT_CLASSIFICATION	{{{ setEditPane() method
WITHOUT_CLASSIFICATION	repaint the gutter so that the border color reflects the focus state
WITHOUT_CLASSIFICATION	{{{ handleBufferUpdate() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	zeros
WITHOUT_CLASSIFICATION	First node is the expression on which to sync
WITHOUT_CLASSIFICATION	Do the actual synchronization
WITHOUT_CLASSIFICATION	filter
WITHOUT_CLASSIFICATION	Evaluate block in two passes: First do class declarations then do everything else.
WITHOUT_CLASSIFICATION	filter nodes
WITHOUT_CLASSIFICATION	statement or embedded block evaluated a return statement
WITHOUT_CLASSIFICATION	make sure we put the namespace back when we leave.
WITHOUT_CLASSIFICATION	Our children are a prefix expression and any number of suffixes.<p>We don't eval() any nodes until the suffixes have had anopportunity to work through them. This lets the suffixes decidehow to interpret an ambiguous name (e.g. for the .class operation).
WITHOUT_CLASSIFICATION	If the result is a Node eval() it to an object or LHS(as determined by toLHS)
WITHOUT_CLASSIFICATION	Some arbitrary kind of node
WITHOUT_CLASSIFICATION	return LHS or value object as determined by toLHS
WITHOUT_CLASSIFICATION	Type node is passed down the chain for array initializers which need it under some circumstances
WITHOUT_CLASSIFICATION	import the package we're in by default...
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	field access
WITHOUT_CLASSIFICATION	Field access, .length on array, or a method invocationMust handle toLHS case for each.
WITHOUT_CLASSIFICATION	.length on array
WITHOUT_CLASSIFICATION	Property style access to Hashtable or Map
WITHOUT_CLASSIFICATION	++ and -- must be cast back the original type
WITHOUT_CLASSIFICATION	Method invocation (LHS or non LHS evaluation can both encounter method calls)
WITHOUT_CLASSIFICATION	key
WITHOUT_CLASSIFICATION	public SimpleNode getParent() { return (SimpleNode)parent; }
WITHOUT_CLASSIFICATION	Override this method if you want to customize how the node dumpsout its children.
WITHOUT_CLASSIFICATION	---- BeanShell specific stuff hereafter ----
WITHOUT_CLASSIFICATION	If this is a unary increment of decrement (either pre or postfix) then we need an LHS to which to assign the result. Otherwise just do the unary operation for the value.
WITHOUT_CLASSIFICATION	resolve superclass if any
WITHOUT_CLASSIFICATION	Get interfaces
WITHOUT_CLASSIFICATION	Get the class body BSHBlock
WITHOUT_CLASSIFICATION	type = VARIABLE;this.varName = varName;this.nameSpace = nameSpace;
WITHOUT_CLASSIFICATION	Set the variable in namespace according to localVar flag
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	pass along target error
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	General case - performe the instanceof based on assignability
WITHOUT_CLASSIFICATION	Look ahead and short circuit evaluation of the rhs if:we're a boolean AND and the lhs is false.
WITHOUT_CLASSIFICATION	Look ahead and short circuit evaluation of the rhs if:we're a boolean AND and the lhs is false.
WITHOUT_CLASSIFICATION	end stuff that was tacked on for boolean short-circuiting.
WITHOUT_CLASSIFICATION	Are both the lhs and rhs either wrappers or primitive values?do binary op
WITHOUT_CLASSIFICATION	Special case for EQ on two wrapper objects
WITHOUT_CLASSIFICATION	Don't auto-unwrap wrappers (preserve identity semantics)FALL THROUGH TO OBJECT OPERATIONS BELOW.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	lazy instantiation
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	fix for the bug where key events in JTextComponents inside views are also handled by the input handler
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ WindowHandler class
WITHOUT_CLASSIFICATION	{{{ Inner classes
WITHOUT_CLASSIFICATION	{{{ handleEditPaneUpdate() method
WITHOUT_CLASSIFICATION	{{{ updateGutterBorders() method
WITHOUT_CLASSIFICATION	{{{ _preprocessKeyEvent() method
WITHOUT_CLASSIFICATION	{{{ CaretHandler class
WITHOUT_CLASSIFICATION	{{{ FocusHandler class
WITHOUT_CLASSIFICATION	walk up hierarchy, looking for an EditPane
WITHOUT_CLASSIFICATION	{{{ ScrollHandler class
WITHOUT_CLASSIFICATION	People have reported hangs with JDK 1.4; might be caused by modal dialogs being displayed from windowActivated()
WITHOUT_CLASSIFICATION	{{{ ViewConfig class
WITHOUT_CLASSIFICATION	dockables
WITHOUT_CLASSIFICATION	this constructor keys the hash table
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ getAction() method
WITHOUT_CLASSIFICATION	{{{ getActionNames() method
WITHOUT_CLASSIFICATION	{{{ addActionSet() method
WITHOUT_CLASSIFICATION	{{{ removeActionSet() method
WITHOUT_CLASSIFICATION	{{{ getActionSets() method
WITHOUT_CLASSIFICATION	{{{ getActionSetForAction() method
WITHOUT_CLASSIFICATION	{{{ loadServices() method
WITHOUT_CLASSIFICATION	{{{ invokeAction() method
WITHOUT_CLASSIFICATION	{{{ unloadServices() method
WITHOUT_CLASSIFICATION	{{{ registerService() method
WITHOUT_CLASSIFICATION	this constructor is the value of the hash table
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ registerService() method
WITHOUT_CLASSIFICATION	{{{ unregisterService() method
WITHOUT_CLASSIFICATION	{{{ getServiceTypes() method
WITHOUT_CLASSIFICATION	{{{ getServiceNames() method
WITHOUT_CLASSIFICATION	{{{ getService() method
WITHOUT_CLASSIFICATION	unknown service - <clazz,name> not in table
WITHOUT_CLASSIFICATION	{{{ Descriptor class
WITHOUT_CLASSIFICATION	avoid re-running script if it gives us null
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	this constructor keys the hash table
WITHOUT_CLASSIFICATION	this constructor is the value of the hash table
WITHOUT_CLASSIFICATION	lazy instantiation
WITHOUT_CLASSIFICATION	avoid re-running script if it gives us null
WITHOUT_CLASSIFICATION	{{{ EditServer constructor
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ removeNotify() method
WITHOUT_CLASSIFICATION	{{{ addNotify() method
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	{{{ IOProgressMonitor constructor
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ paintComponent() method
WITHOUT_CLASSIFICATION	UIManager.getFont("Label.font");
WITHOUT_CLASSIFICATION	{{{ ErrorListCellRenderer constructor
WITHOUT_CLASSIFICATION	{{{ getListCellRendererComponent() method
WITHOUT_CLASSIFICATION	{{{ getPreferredSize() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ ErrorEntry class
WITHOUT_CLASSIFICATION	{{{ ErrorListDialog constructor
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ handleMessage() method
WITHOUT_CLASSIFICATION	{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	{{{ getMinimumSize() method
WITHOUT_CLASSIFICATION	{{{ EditPane constructor
WITHOUT_CLASSIFICATION	{{{ close() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ handleBufferUpdate() method
WITHOUT_CLASSIFICATION	{{{ isX11() method
WITHOUT_CLASSIFICATION	Set up the right-click popup menu
WITHOUT_CLASSIFICATION	{{{ getScreenBounds() method
WITHOUT_CLASSIFICATION	use old property name for backwards compatibility
WITHOUT_CLASSIFICATION	{{{ getScreenBounds() method
WITHOUT_CLASSIFICATION	{{{ loadBufferSwitcher() method
WITHOUT_CLASSIFICATION	Don't add duplicates
WITHOUT_CLASSIFICATION	When closing the last buffer, the BufferUpdate.CLOSED handler doesn't call setBuffer(), because null buffers are not supported. Instead, it waits for the subsequent 'Untitled' file creation.
WITHOUT_CLASSIFICATION	shadow size
WITHOUT_CLASSIFICATION	shadow size
WITHOUT_CLASSIFICATION	{{{ isDOSDerived() method
WITHOUT_CLASSIFICATION	Pick screen with largest intersection
WITHOUT_CLASSIFICATION	{{{ isOS2() method
WITHOUT_CLASSIFICATION	Make adjustments for some OS's
WITHOUT_CLASSIFICATION	{{{ isWindows() method
WITHOUT_CLASSIFICATION	Yay, we're finally there
WITHOUT_CLASSIFICATION	{{{ getMarkers() method
WITHOUT_CLASSIFICATION	{{{ isWindows9x() method
WITHOUT_CLASSIFICATION	{{{ isUnix() method
WITHOUT_CLASSIFICATION	{{{ isWindowsNT() method
WITHOUT_CLASSIFICATION	{{{ indentLines() method
WITHOUT_CLASSIFICATION	{{{ isMacOS() method
WITHOUT_CLASSIFICATION	Do it
WITHOUT_CLASSIFICATION	{{{ indentLines() method
WITHOUT_CLASSIFICATION	{{{ Get properties
WITHOUT_CLASSIFICATION	{{{ indentLine() method
WITHOUT_CLASSIFICATION	{{{ indentLine() method
WITHOUT_CLASSIFICATION	{{{ getCurrentIndentForLine() method
WITHOUT_CLASSIFICATION	{{{ getIdealIndentForLine() method
WITHOUT_CLASSIFICATION	{{{ Get indent attributes of previous line
WITHOUT_CLASSIFICATION	{{{ getFile() method
WITHOUT_CLASSIFICATION	{{{ createPosition() method
WITHOUT_CLASSIFICATION	{{{ Deprecated methods
WITHOUT_CLASSIFICATION	{{{ markTokens() method
WITHOUT_CLASSIFICATION	{{{ Handle brackets
WITHOUT_CLASSIFICATION	{{{ Get indent attributes for current line
WITHOUT_CLASSIFICATION	{{{ putBooleanProperty() method
WITHOUT_CLASSIFICATION	Additional bracket indent For lining up closing and opening brackets
WITHOUT_CLASSIFICATION	{{{ Handle regexps
WITHOUT_CLASSIFICATION	{{{ Deep indenting
WITHOUT_CLASSIFICATION	{{{ isFoldStart() method
WITHOUT_CLASSIFICATION	no parenthesis on previous line (prevLineParenWeight == 0) so the normal indenting rules are used
WITHOUT_CLASSIFICATION	{{{ getRootElements() method
WITHOUT_CLASSIFICATION	If the previous line matches indentNextLine or indentNextLines, add a level of indent
WITHOUT_CLASSIFICATION	{{{ getLineParenWeight() method
WITHOUT_CLASSIFICATION	{{{ getParagraphElement() method
WITHOUT_CLASSIFICATION	{{{ putProperty() method
WITHOUT_CLASSIFICATION	{{{ isFoldEnd() method
WITHOUT_CLASSIFICATION	for backwards compatibility
WITHOUT_CLASSIFICATION	{{{ setFoldHandler() method
WITHOUT_CLASSIFICATION	{{{ getDefaultRootElement() method
WITHOUT_CLASSIFICATION	{{{ invalidateCachedFoldLevels() method
WITHOUT_CLASSIFICATION	{{{ getCurrentIdentForLine() method
WITHOUT_CLASSIFICATION	{{{ Folding methods
WITHOUT_CLASSIFICATION	{{{ Position methods
WITHOUT_CLASSIFICATION	{{{ getFoldLevel() method
WITHOUT_CLASSIFICATION	{{{ getFoldAtLine() method
WITHOUT_CLASSIFICATION	{{{ Marker methods
WITHOUT_CLASSIFICATION	{{{ getFoldHandler() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ commitTemporary() method
WITHOUT_CLASSIFICATION	{{{ getMarker() method
WITHOUT_CLASSIFICATION	notify clients with -wait
WITHOUT_CLASSIFICATION	Log.log(Log.ERROR,this,io);
WITHOUT_CLASSIFICATION	{{{ close() method
WITHOUT_CLASSIFICATION	don't sort markers while buffer is being loaded
WITHOUT_CLASSIFICATION	{{{ getMarkerStatusPrompt() method
WITHOUT_CLASSIFICATION	{{{ checkFileForLoad() method
WITHOUT_CLASSIFICATION	{{{ addOrRemoveMarker() method
WITHOUT_CLASSIFICATION	{{{ getMarkerInRange() method
WITHOUT_CLASSIFICATION	{{{ addMarker() method
WITHOUT_CLASSIFICATION	this must be called before any EditBus messages are sent
WITHOUT_CLASSIFICATION	{{{ getMarkerAtLine() method
WITHOUT_CLASSIFICATION	{{{ resetCachedProperties() method
WITHOUT_CLASSIFICATION	{{{ removeMarker() method
WITHOUT_CLASSIFICATION	Magic: UNTITLED is only set if newFile param to constructor is set, NEW_FILE is also set if file doesn't exist on disk. This is so that we can tell apart files created with jEdit.newFile(), and those that just don't exist on disk. Why do we need to tell the difference between the two? jEdit.addBufferToList() checks if the only opened buffer is an untitled buffer, and if so, replaces it with the buffer to add. We don't want this behavior to occur with files that don't exist on disk; only untitled ones.
WITHOUT_CLASSIFICATION	{{{ removeAllMarkers() method
WITHOUT_CLASSIFICATION	Display
WITHOUT_CLASSIFICATION	{{{ Flags
WITHOUT_CLASSIFICATION	{{{ finishSaving() method
WITHOUT_CLASSIFICATION	{{{ setFlag() method
WITHOUT_CLASSIFICATION	{{{ setPath() method
WITHOUT_CLASSIFICATION	{{{ getFlag() method
WITHOUT_CLASSIFICATION	{{{ checkFileForSave() method
WITHOUT_CLASSIFICATION	{{{ Flag values
WITHOUT_CLASSIFICATION	{{{ recoverAutosave() method
WITHOUT_CLASSIFICATION	this method might get called at startup
WITHOUT_CLASSIFICATION	{{{ fireTransactionComplete() method
WITHOUT_CLASSIFICATION	{{{ finishLoading() method
WITHOUT_CLASSIFICATION	Create marker positions
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ setTokenMarker() method
WITHOUT_CLASSIFICATION	if we don't do this, the autosave file won't be deleted after a save as
WITHOUT_CLASSIFICATION	Need to reset properties that were cached defaults, since the defaults might have changed.
WITHOUT_CLASSIFICATION	on a reload, the fold handler doesn't change, but we still need to re-collapse folds. don't do this on initial fold handler creation
WITHOUT_CLASSIFICATION	show this message when all I/O requests are complete
WITHOUT_CLASSIFICATION	if we save a file with the same name as one that's already open, we presume that we can close the existing file, since the user would have confirmed the overwrite in the 'save as' dialog box anyway
WITHOUT_CLASSIFICATION	can't happen?
WITHOUT_CLASSIFICATION	can't happen?
WITHOUT_CLASSIFICATION	if we saved over an already open file using 'save a copy as', then reload the existing buffer
WITHOUT_CLASSIFICATION	{{{ Update this buffer for the new path
WITHOUT_CLASSIFICATION	this ensures that undo can clear the dirty flag properly when all edits up to a save are undone
WITHOUT_CLASSIFICATION	if user adds mode buffer-local property
WITHOUT_CLASSIFICATION	new message type introduced in 4.0pre4
WITHOUT_CLASSIFICATION	{{{ parseBufferLocalProperties() method
WITHOUT_CLASSIFICATION	{{{ parseBufferLocalProperties() method
WITHOUT_CLASSIFICATION	first line for last 10 lines, make sure not to overlap with the first 10
WITHOUT_CLASSIFICATION	use the low-level property setting code so that if we have a buffer-local property with the same value as a default, later changes in the default don't affect the buffer-local property
WITHOUT_CLASSIFICATION	don't do this on initial token marker
WITHOUT_CLASSIFICATION	{{{ getPriorNonEmptyLine() method
WITHOUT_CLASSIFICATION	didn't find a line that contains non-whitespace chars so return index of prior whitespace line
WITHOUT_CLASSIFICATION	{{{ contentInserted() method
WITHOUT_CLASSIFICATION	{{{ Event firing methods
WITHOUT_CLASSIFICATION	{{{ getListener() method
WITHOUT_CLASSIFICATION	{{{ fireFoldLevelChanged() method
WITHOUT_CLASSIFICATION	{{{ fireContentInserted() method
WITHOUT_CLASSIFICATION	{{{ fireContentRemoved() method
WITHOUT_CLASSIFICATION	{{{ firePreContentRemoved() method
WITHOUT_CLASSIFICATION	{{{ fireFoldHandlerChanged() method
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	end HandlerBase implementation
WITHOUT_CLASSIFICATION	so you the avid code reader should use MODES as the DOCTYPE instead, but we still let old catalogs through to avoid annoying users.
WITHOUT_CLASSIFICATION	older jEdit versions used a DOCTYPE of CATALOG, which is incorrect since the DOCTYPE must be the name of the root element, which is MODES.
WITHOUT_CLASSIFICATION	1 because we've already 'seen' the first bracket
WITHOUT_CLASSIFICATION	{{{ findMatchingBracket() method
WITHOUT_CLASSIFICATION	to avoid slowdown with large files; only scan 10000 lines either way
WITHOUT_CLASSIFICATION	{{{ Forward search
WITHOUT_CLASSIFICATION	{{{ getTokenAtOffset() method
WITHOUT_CLASSIFICATION	corresponding character false - backwards, true - forwards
WITHOUT_CLASSIFICATION	}}} {{{ Backward search
WITHOUT_CLASSIFICATION	Get the syntax token at 'offset' only tokens with the same type will be checked for the corresponding bracket
WITHOUT_CLASSIFICATION	Nothing found
WITHOUT_CLASSIFICATION	{{{ Go on to next line
WITHOUT_CLASSIFICATION	{{{ Go on to previous line
WITHOUT_CLASSIFICATION	{{{ the character under the cursor changes how we behave.
WITHOUT_CLASSIFICATION	{{{ findWordStart() method
WITHOUT_CLASSIFICATION	{{{ findWordStart() method
WITHOUT_CLASSIFICATION	{{{ findWordStart() method
WITHOUT_CLASSIFICATION	{{{ the character under the cursor changes how we behave.
WITHOUT_CLASSIFICATION	{{{ Whitespace...
WITHOUT_CLASSIFICATION	{{{ Whitespace...
WITHOUT_CLASSIFICATION	only select other whitespace in this case
WITHOUT_CLASSIFICATION	only select other whitespace in this case
WITHOUT_CLASSIFICATION	word char or symbol; stop
WITHOUT_CLASSIFICATION	}}} {{{ Word character...
WITHOUT_CLASSIFICATION	word char; keep going
WITHOUT_CLASSIFICATION	whitespace; include in word if eating
WITHOUT_CLASSIFICATION	whitespace; include in word if eating
WITHOUT_CLASSIFICATION	}}} {{{ Symbol...
WITHOUT_CLASSIFICATION	{{{ findWordEnd() method
WITHOUT_CLASSIFICATION	{{{ findWordEnd() method
WITHOUT_CLASSIFICATION	{{{ findWordEnd() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	whitespace; include in word if eating
WITHOUT_CLASSIFICATION	}}} {{{ Symbol...
WITHOUT_CLASSIFICATION	align everything to paragraph's leading indent
WITHOUT_CLASSIFICATION	if we see whitespace, set flag.
WITHOUT_CLASSIFICATION	{{{ tabsToSpaces() method
WITHOUT_CLASSIFICATION	{{{ spacesToTabs() method
WITHOUT_CLASSIFICATION	{{{ createEncodingMenu() method
WITHOUT_CLASSIFICATION	{{{ format() method
WITHOUT_CLASSIFICATION	{{{ BrowserCommandsMenu constructor
WITHOUT_CLASSIFICATION	{{{ getStringCase() method
WITHOUT_CLASSIFICATION	set rename to false if > 1 file selected
WITHOUT_CLASSIFICATION	{{{ toTitleCase() method
WITHOUT_CLASSIFICATION	all good
WITHOUT_CLASSIFICATION	{{{ formatParagraph() method
WITHOUT_CLASSIFICATION	{{{ paintComponent() method
WITHOUT_CLASSIFICATION	show 'close' item if at least one selected file is currently open
WITHOUT_CLASSIFICATION	this will disable most operations if files of multiple types are selected
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ createMenuItem() method
WITHOUT_CLASSIFICATION	{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	{{{ getIconForFile() method
WITHOUT_CLASSIFICATION	{{{ FileCellRenderer constructor
WITHOUT_CLASSIFICATION	{{{ getIconForFile() method
WITHOUT_CLASSIFICATION	{{{ getTableCellRendererComponent() method
WITHOUT_CLASSIFICATION	{{{ getEntryWidth() method
WITHOUT_CLASSIFICATION	{{{ ExpansionToggleBorder class
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ processKeyEvent() method
WITHOUT_CLASSIFICATION	{{{ ExpansionToggleBorder constructor
WITHOUT_CLASSIFICATION	{{{ isExpansionToggle() method
WITHOUT_CLASSIFICATION	setColumnSelectionAllowed(true); setCellSelectionEnabled(false);
WITHOUT_CLASSIFICATION	{{{ paintBorder() method
WITHOUT_CLASSIFICATION	{{{ VFSDirectoryEntryTable constructor
WITHOUT_CLASSIFICATION	{{{ getBorderInsets() method
WITHOUT_CLASSIFICATION	{{{ getSelectedFiles() method
WITHOUT_CLASSIFICATION	{{{ isBorderOpaque() method
WITHOUT_CLASSIFICATION	{{{ selectFile() method
WITHOUT_CLASSIFICATION	TableColumn col1 = getColumnModel().getColumn(0);col1.setMinWidth(20);col1.setMaxWidth(20);col1.setPreferredWidth(20);
WITHOUT_CLASSIFICATION	{{{ setDirectory() method
WITHOUT_CLASSIFICATION	{{{ getExpandedDirectories() method
WITHOUT_CLASSIFICATION	{{{ doTypeSelect() method
WITHOUT_CLASSIFICATION	{{{ doTypeSelect() method
WITHOUT_CLASSIFICATION	{{{ scrollRectToVisible() method
WITHOUT_CLASSIFICATION	{{{ maybeReloadDirectory() method
WITHOUT_CLASSIFICATION	{{{ toggleExpanded() method
WITHOUT_CLASSIFICATION	avoid scrolling to the right
WITHOUT_CLASSIFICATION	{{{ setSelectedRow() method
WITHOUT_CLASSIFICATION	{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ run() method
WITHOUT_CLASSIFICATION	{{{ expand() method
WITHOUT_CLASSIFICATION	{{{ resizeColumnsAppropriately() method
WITHOUT_CLASSIFICATION	{{{ delete() method
WITHOUT_CLASSIFICATION	{{{ ClearTypeSelect class
WITHOUT_CLASSIFICATION	{{{ getExtendedAttribute() method
WITHOUT_CLASSIFICATION	{{{ Request types
WITHOUT_CLASSIFICATION	{{{ rename() method
WITHOUT_CLASSIFICATION	{{{ BrowserIORequest constructor
WITHOUT_CLASSIFICATION	fireTableRowsInserted(startIndex + 1,startIndex + list.size() + 1);
WITHOUT_CLASSIFICATION	{{{ listDirectory() method
WITHOUT_CLASSIFICATION	allow user to change name case
WITHOUT_CLASSIFICATION	{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	{{{ mkdir() method
WITHOUT_CLASSIFICATION	fireTableRowsUpdated(startIndex,startIndex);
WITHOUT_CLASSIFICATION	{{{ VFSDirectoryEntryTableModel constructor
WITHOUT_CLASSIFICATION	{{{ setRoot() method
WITHOUT_CLASSIFICATION	{{{ getRowCount() method
WITHOUT_CLASSIFICATION	{{{ collapse() method
WITHOUT_CLASSIFICATION	{{{ addExtendedAttributes() method
WITHOUT_CLASSIFICATION	fireTableRowsUpdated(index,index);fireTableRowsDeleted(index + 1,lastIndex);
WITHOUT_CLASSIFICATION	{{{ getColumnName() method
WITHOUT_CLASSIFICATION	{{{ getColumnClass() method
WITHOUT_CLASSIFICATION	{{{ removeExtendedAttributes() method
WITHOUT_CLASSIFICATION	{{{ getValueAt() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ Entry class
WITHOUT_CLASSIFICATION	{{{ getSelectedFiles() method
WITHOUT_CLASSIFICATION	{{{ maybeReloadDirectory() method
WITHOUT_CLASSIFICATION	{{{ showFilePopup() method
WITHOUT_CLASSIFICATION	this vfs has an extended attribute which is not in the list. add it to the end with a ref count of 1
WITHOUT_CLASSIFICATION	this vfs has an extended attribute which is not in the list ???
WITHOUT_CLASSIFICATION	we no longer have any dirs using this extended attribute
WITHOUT_CLASSIFICATION	{{{ BrowserView constructor
WITHOUT_CLASSIFICATION	how deeply we are nested
WITHOUT_CLASSIFICATION	{{{ clearExpansionState() method
WITHOUT_CLASSIFICATION	{{{ ExtendedAttribute class
WITHOUT_CLASSIFICATION	{{{ focusOnFileView() method
WITHOUT_CLASSIFICATION	reference counter allows us to remove a column from the table when no directory using this column is visible
WITHOUT_CLASSIFICATION	{{{ updateFileView() method
WITHOUT_CLASSIFICATION	{{{ removeNotify() method
WITHOUT_CLASSIFICATION	{{{ loadDirectory() method
WITHOUT_CLASSIFICATION	{{{ selectNone() method
WITHOUT_CLASSIFICATION	{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	{{{ saveExpansionState() method
WITHOUT_CLASSIFICATION	{{{ directoryLoaded() method
WITHOUT_CLASSIFICATION	{{{ getBrowser() method
WITHOUT_CLASSIFICATION	{{{ If reloading root, update parent directory list
WITHOUT_CLASSIFICATION	for the parent directory right-click; on the click we select the clicked item, but when the popup goes away we select the currently showing directory.
WITHOUT_CLASSIFICATION	{{{ getTable() method
WITHOUT_CLASSIFICATION	{{{ getParentDirectoryList() method
WITHOUT_CLASSIFICATION	we use SwingUtilities.invokeLater() so that the action is executed before the popup is hidden.
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ dispose() method
WITHOUT_CLASSIFICATION	{{{ Inner classes
WITHOUT_CLASSIFICATION	{{{ processKeyEvent() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ getSelectedFiles() method
WITHOUT_CLASSIFICATION	so that it doesn't resize...
WITHOUT_CLASSIFICATION	because this method is called for every VFS update, we don't want to scan the tree all the time. So we use the following algorithm to determine if the path might be part of the tree: - if the path starts with the browser's current directory, we do the tree scan - if the browser's directory is 'favorites:' -- we have to do the tree scan, as every path can appear under the favorites list - if the browser's directory is 'roots:' and path is on the local filesystem, do a tree scan
WITHOUT_CLASSIFICATION	{{{ mousePressed() method
WITHOUT_CLASSIFICATION	{{{ isManagingFocus() method
WITHOUT_CLASSIFICATION	nothing
WITHOUT_CLASSIFICATION	{{{ doComplete() method
WITHOUT_CLASSIFICATION	{{{ mouseReleased() method
WITHOUT_CLASSIFICATION	{{{ getFocusTraversalKeysEnabled() method
WITHOUT_CLASSIFICATION	{{{ VFSFileNameField constructor
WITHOUT_CLASSIFICATION	{{{ VFSFileChooserDialog constructor
WITHOUT_CLASSIFICATION	fix for bug #765507 we don't type complete in save dialog boxes. Press TAB to do an explicit complete
WITHOUT_CLASSIFICATION	fix for bug #765507 we don't type complete in save dialog boxes. Press TAB to do an explicit complete
WITHOUT_CLASSIFICATION	{{{ goToParent() method
WITHOUT_CLASSIFICATION	{{{ BrowserHandler class
WITHOUT_CLASSIFICATION	{{{ BackspaceAction class
WITHOUT_CLASSIFICATION	browser.getBrowserView().getTable().addKeyListener(new KeyHandler());
WITHOUT_CLASSIFICATION	String filename = filenameField.getText();
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ doFileExistsWarning() method
WITHOUT_CLASSIFICATION	{{{ filesSelected() method
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ handleMessage() method
WITHOUT_CLASSIFICATION	{{{ getView() method
WITHOUT_CLASSIFICATION	{{{ getActionContext() method
WITHOUT_CLASSIFICATION	{{{ getMode() method
WITHOUT_CLASSIFICATION	{{{ removeNotify() method
WITHOUT_CLASSIFICATION	{{{ KeyHandler class
WITHOUT_CLASSIFICATION	{{{ filesActivated() method
WITHOUT_CLASSIFICATION	non-existent file
WITHOUT_CLASSIFICATION	user pressed enter when the vfs table or file name field has focus, with nothing selected.
WITHOUT_CLASSIFICATION	{{{ progressUpdate() method
WITHOUT_CLASSIFICATION	{{{ WorkThreadListener class
WITHOUT_CLASSIFICATION	{{{ statusUpdate() method
WITHOUT_CLASSIFICATION	{{{ GetFileTypeRequest class
WITHOUT_CLASSIFICATION	because its preferred size can be quite wide, we don't want it to make the browser way too big, so set the preferred width to 0.
WITHOUT_CLASSIFICATION	{{{ Browser types
WITHOUT_CLASSIFICATION	{{{ browseDirectoryInNewWindow() method
WITHOUT_CLASSIFICATION	{{{ VFSBrowser constructor
WITHOUT_CLASSIFICATION	{{{ VFSBrowser constructor
WITHOUT_CLASSIFICATION	{{{ browseDirectory() method
WITHOUT_CLASSIFICATION	see VFSBrowser.browseDirectory()
WITHOUT_CLASSIFICATION	{{{ addNotify() method
WITHOUT_CLASSIFICATION	{{{ focusOnDefaultComponent() method
WITHOUT_CLASSIFICATION	unknown value??!!!
WITHOUT_CLASSIFICATION	{{{ isMultipleSelectionEnabled() method
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ newFile() method
WITHOUT_CLASSIFICATION	{{{ getDirectory() method
WITHOUT_CLASSIFICATION	{{{ getSelectedFiles() method
WITHOUT_CLASSIFICATION	{{{ setDirectory() method
WITHOUT_CLASSIFICATION	{{{ delete() method
WITHOUT_CLASSIFICATION	{{{ rename() method
WITHOUT_CLASSIFICATION	{{{ mkdir() method
WITHOUT_CLASSIFICATION	{{{ directoryLoaded() method
WITHOUT_CLASSIFICATION	{{{ filesSelected() method
WITHOUT_CLASSIFICATION	used by FTP plugin to clear directory cache
WITHOUT_CLASSIFICATION	{{{ isHorizontalLayout() method
WITHOUT_CLASSIFICATION	{{{ setShowHiddenFiles() method
WITHOUT_CLASSIFICATION	{{{ getShowHiddenFiles() method
WITHOUT_CLASSIFICATION	{{{ locateFile() method
WITHOUT_CLASSIFICATION	{{{ getFilenameFilter() method
WITHOUT_CLASSIFICATION	if a directory is selected, create new dir in there. if a file is selected, create new dir inside its parent.
WITHOUT_CLASSIFICATION	{{{ setFilenameFilter() method
WITHOUT_CLASSIFICATION	{{{ getDirectoryField() method
WITHOUT_CLASSIFICATION	path is the currently viewed directory in the browser
WITHOUT_CLASSIFICATION	{{{ rootDirectory() method
WITHOUT_CLASSIFICATION	{{{ addBrowserListener() method
WITHOUT_CLASSIFICATION	{{{ reloadDirectory() method
WITHOUT_CLASSIFICATION	{{{ searchInDirectory() method
WITHOUT_CLASSIFICATION	{{{ searchInDirectory() method
WITHOUT_CLASSIFICATION	{{{ removeBrowserListener() method
WITHOUT_CLASSIFICATION	{{{ getBrowserView() method
WITHOUT_CLASSIFICATION	{{{ pathsEqual() method
WITHOUT_CLASSIFICATION	{{{ updateFilenameFilter() method
WITHOUT_CLASSIFICATION	{{{ endRequest() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ Inner classes
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ maybeReloadDirectory() method
WITHOUT_CLASSIFICATION	We do this stuff because the browser is not able to handle more than one request yet
WITHOUT_CLASSIFICATION	close if this buffer is currently visible in the view.
WITHOUT_CLASSIFICATION	if a file is selected in OPEN_DIALOG or SAVE_DIALOG mode, just let the listener(s) handle it
WITHOUT_CLASSIFICATION	{{{ updatePopupMenu() method
WITHOUT_CLASSIFICATION	{{{ createMenuBar() method
WITHOUT_CLASSIFICATION	{{{ startRequest() method
WITHOUT_CLASSIFICATION	{{{ createToolBar() method
WITHOUT_CLASSIFICATION	Log.log(Log.WARNING,this,"VFS update: request already in progress");
WITHOUT_CLASSIFICATION	{{{ CommandsMenuButton class
WITHOUT_CLASSIFICATION	dump stack trace for debugging purposes
WITHOUT_CLASSIFICATION	save a file -> sends vfs update. if a VFS file dialog box is shown from the same event frame as the save, the VFSUpdate will be delivered before the directory is loaded, and before the path is set.
WITHOUT_CLASSIFICATION	{{{ updateFilterEnabled() method
WITHOUT_CLASSIFICATION	{{{ PluginsMenuButton class
WITHOUT_CLASSIFICATION	{{{ CommandsMenuButton constructor
WITHOUT_CLASSIFICATION	we're in a modal dialog
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	{{{ PluginsMenuButton constructor
WITHOUT_CLASSIFICATION	{{{ createPopupMenu() method
WITHOUT_CLASSIFICATION	{{{ createPopupMenu() method
WITHOUT_CLASSIFICATION	{{{ FavoritesMenuButton class
WITHOUT_CLASSIFICATION	{{{ old API
WITHOUT_CLASSIFICATION	{{{ DirectoryLoadedAWTRequest class
WITHOUT_CLASSIFICATION	{{{ new API
WITHOUT_CLASSIFICATION	{{{ FavoritesMenuButton constructor
WITHOUT_CLASSIFICATION	This is the new, canonical path
WITHOUT_CLASSIFICATION	there was an error
WITHOUT_CLASSIFICATION	{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ load() method
WITHOUT_CLASSIFICATION	Log.log(Log.DEBUG,BufferHistory.class,fnf);
WITHOUT_CLASSIFICATION	to avoid data loss, only do this if the above completed successfully
WITHOUT_CLASSIFICATION	{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	if any directories are selected, add them, otherwise add current directory
WITHOUT_CLASSIFICATION	ensure consistent history; eg we don't want both foo/ and foo
WITHOUT_CLASSIFICATION	to notify listeners that any existing selection has been deactivated
WITHOUT_CLASSIFICATION	turns out under some circumstances this method can switch the current buffer in BROWSER mode.
WITHOUT_CLASSIFICATION	in any case, this is only needed for the directory chooser (why?), so we add a check. otherwise poor Rick will go insane.
WITHOUT_CLASSIFICATION	{{{ BrowserActionContext class
WITHOUT_CLASSIFICATION	in the future we will want something better, eg. having an 'evt' object passed to EditAction.invoke().
WITHOUT_CLASSIFICATION	for now, since all browser actions are written in beanshell we set the 'browser' variable directly.
WITHOUT_CLASSIFICATION	I guess ideally all browsers should have views, but since they don't, we just use the active view in that case, since some actions depend on a view being there and I don't want to add checks to them all
WITHOUT_CLASSIFICATION	{{{ getListModel() method
WITHOUT_CLASSIFICATION	{{{ changed() method
WITHOUT_CLASSIFICATION	compare existing entries' hashcode with this
WITHOUT_CLASSIFICATION	{{{ add() method
WITHOUT_CLASSIFICATION	strings might be equal!
WITHOUT_CLASSIFICATION	no duplicates, check for all-whitespace string
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ read() method
WITHOUT_CLASSIFICATION	this will result in a slight speed up, since we don't need to read the DTD anyway, as AElfred is non-validating
WITHOUT_CLASSIFICATION	{{{ load() method
WITHOUT_CLASSIFICATION	{{{ run() method
WITHOUT_CLASSIFICATION	{{{ remove() method
WITHOUT_CLASSIFICATION	{{{ KillRingHandler class
WITHOUT_CLASSIFICATION	we don't want duplicate entries in the kill ring
WITHOUT_CLASSIFICATION	{{{ RingListModel class
WITHOUT_CLASSIFICATION	we don't want duplicate entries in the kill ring
WITHOUT_CLASSIFICATION	True if a \n was read after a \r. Usually means this is a DOS/Windows file
WITHOUT_CLASSIFICATION	{{{ BufferIORequest constructor
WITHOUT_CLASSIFICATION	{{{ Constants
WITHOUT_CLASSIFICATION	auto-detect encoding within the gzip stream.
WITHOUT_CLASSIFICATION	do not reset the stream and just treat it like a normal UTF-8 file.
WITHOUT_CLASSIFICATION	we guess an initial size for the array
WITHOUT_CLASSIFICATION	only true if the file size is known
WITHOUT_CLASSIFICATION	if the file size is not known, start with a resonable default buffer size
WITHOUT_CLASSIFICATION	Number of characters in 'buf' array. InputStream.read() doesn't always fill the array (eg, the file size is not a multiple of IOBUFSIZE, or it is a GZipped file, etc)
WITHOUT_CLASSIFICATION	A \r was read, hence a MacOS file
WITHOUT_CLASSIFICATION	Was the previous read character a \r? If we read a \n and this is true, we assume we have a DOS/Windows file
WITHOUT_CLASSIFICATION	If we read a \r and lastWasCR is also true, it is probably a Mac file (\r\r in stream)
WITHOUT_CLASSIFICATION	Number of lines read. Every 100 lines, we update the progress bar
WITHOUT_CLASSIFICATION	Offset of previous line, relative to the start of the I/O buffer (NOT relative to the start of the document)
WITHOUT_CLASSIFICATION	Look for line endings.
WITHOUT_CLASSIFICATION	Otherwise set a flag, so that \n knows that last was a \r
WITHOUT_CLASSIFICATION	This is i+1 to take the trailing \n into account
WITHOUT_CLASSIFICATION	Insert a line
WITHOUT_CLASSIFICATION	If lastWasCR is true, we just read a \r followed by a \n. We specify that this is a Windows file, but take no further action and just ignore the \r.
WITHOUT_CLASSIFICATION	Bump lastLine so that the next line doesn't erronously pick up the \r
WITHOUT_CLASSIFICATION	Otherwise, we found a \n that follows some other character, hence we have a Unix file
WITHOUT_CLASSIFICATION	If we find some other character that follows a \r, so it is not a Windows file, and probably a Mac file
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ write() method
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	For `reload' command
WITHOUT_CLASSIFICATION	{{{ autosave() method
WITHOUT_CLASSIFICATION	{{{ insert() method
WITHOUT_CLASSIFICATION	{{{ undo() method
WITHOUT_CLASSIFICATION	{{{ redo() method
WITHOUT_CLASSIFICATION	{{{ beginCompoundEdit() method
WITHOUT_CLASSIFICATION	{{{ endCompoundEdit() method
WITHOUT_CLASSIFICATION	{{{ contentInserted() method
WITHOUT_CLASSIFICATION	Chop trailing newline and/or ^Z (if any)
WITHOUT_CLASSIFICATION	Add remaining stuff from buffer
WITHOUT_CLASSIFICATION	the entire save operation can be aborted...
WITHOUT_CLASSIFICATION	to avoid having to deal with read/write locks and such, we insert the loaded data into the buffer in the post-load cleanup runnable, which runs in the AWT thread.
WITHOUT_CLASSIFICATION	DOS ^Z
WITHOUT_CLASSIFICATION	{{{ readMarkers() method
WITHOUT_CLASSIFICATION	add a line marker at the end for proper offset manager operation
WITHOUT_CLASSIFICATION	used in insert()
WITHOUT_CLASSIFICATION	the entire save operation can be aborted...
WITHOUT_CLASSIFICATION	if the VFS supports renaming files, we first save to #<filename>#save#, then rename that to <filename>, so that if the save fails, data will not be lost. as of 4.1pre7 we now call vfs.getTwoStageSaveName() instead of constructing the path directly since some VFS's might not allow # in filenames.
WITHOUT_CLASSIFICATION	buffer.readLock();
WITHOUT_CLASSIFICATION	Only backup once per session
WITHOUT_CLASSIFICATION	this must be after the stream is created or we deadlock with SSHTools.
WITHOUT_CLASSIFICATION	We only save markers to VFS's that support deletion. Otherwise, we will accumilate stale marks files.
WITHOUT_CLASSIFICATION	Can't use buffer.getName() here because it is not changed until the save is complete
WITHOUT_CLASSIFICATION	buffer.readUnlock();
WITHOUT_CLASSIFICATION	{{{ writeMarkers() method
WITHOUT_CLASSIFICATION	buffer has been saved while we were waiting.
WITHOUT_CLASSIFICATION	{{{ setLimit() method
WITHOUT_CLASSIFICATION	not supported by Java...
WITHOUT_CLASSIFICATION	{{{ UndoManager constructor
WITHOUT_CLASSIFICATION	we don't do this in Buffer.insert() so that we can insert multiple files at once
WITHOUT_CLASSIFICATION	{{{ clear() method
WITHOUT_CLASSIFICATION	nothing done between begin/end calls
WITHOUT_CLASSIFICATION	{{{ contentRemoved() method
WITHOUT_CLASSIFICATION	{{{ bufferSaved() method
WITHOUT_CLASSIFICATION	{{{ Remove class
WITHOUT_CLASSIFICATION	{{{ Remove constructor
WITHOUT_CLASSIFICATION	{{{ Remove constructor
WITHOUT_CLASSIFICATION	{{{ Inner classes
WITHOUT_CLASSIFICATION	{{{ undo() method
WITHOUT_CLASSIFICATION	{{{ undo() method
WITHOUT_CLASSIFICATION	{{{ undo() method
WITHOUT_CLASSIFICATION	{{{ undo() method
WITHOUT_CLASSIFICATION	{{{ undo() method
WITHOUT_CLASSIFICATION	{{{ undo() method
WITHOUT_CLASSIFICATION	{{{ undo() method
WITHOUT_CLASSIFICATION	{{{ undo() method
WITHOUT_CLASSIFICATION	{{{ redo() method
WITHOUT_CLASSIFICATION	{{{ redo() method
WITHOUT_CLASSIFICATION	{{{ redo() method
WITHOUT_CLASSIFICATION	{{{ redo() method
WITHOUT_CLASSIFICATION	{{{ redo() method
WITHOUT_CLASSIFICATION	{{{ redo() method
WITHOUT_CLASSIFICATION	{{{ redo() method
WITHOUT_CLASSIFICATION	{{{ redo() method
WITHOUT_CLASSIFICATION	{{{ add() method
WITHOUT_CLASSIFICATION	{{{ add() method
WITHOUT_CLASSIFICATION	queue of undos. last is most recent, first is oldest
WITHOUT_CLASSIFICATION	{{{ Insert class
WITHOUT_CLASSIFICATION	queue of redos. first is most recent, last is oldest
WITHOUT_CLASSIFICATION	{{{ addEdit() method
WITHOUT_CLASSIFICATION	{{{ Insert constructor
WITHOUT_CLASSIFICATION	{{{ getMergeEdit() method
WITHOUT_CLASSIFICATION	{{{ Insert constructor
WITHOUT_CLASSIFICATION	{{{ getLastEdit() method
WITHOUT_CLASSIFICATION	{{{ Edit class
WITHOUT_CLASSIFICATION	{{{ CompoundEdit class
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ equals() method
WITHOUT_CLASSIFICATION	{{{ createPosition() method
WITHOUT_CLASSIFICATION	{{{ getName() method
WITHOUT_CLASSIFICATION	{{{ finalize() method
WITHOUT_CLASSIFICATION	{{{ Inner classes
WITHOUT_CLASSIFICATION	{{{ contentInserted() method
WITHOUT_CLASSIFICATION	{{{ contentInserted() method
WITHOUT_CLASSIFICATION	{{{ contentRemoved() method
WITHOUT_CLASSIFICATION	{{{ contentRemoved() method
WITHOUT_CLASSIFICATION	get all positions from offset to the end, inclusive
WITHOUT_CLASSIFICATION	get all positions from offset to the end, inclusive
WITHOUT_CLASSIFICATION	{{{ PosTopHalf class
WITHOUT_CLASSIFICATION	{{{ unref() method
WITHOUT_CLASSIFICATION	{{{ PosTopHalf constructor
WITHOUT_CLASSIFICATION	{{{ foldHandlerChanged() method
WITHOUT_CLASSIFICATION	{{{ getOffset() method
WITHOUT_CLASSIFICATION	{{{ compareTo() method
WITHOUT_CLASSIFICATION	{{{ PosBottomHalf class
WITHOUT_CLASSIFICATION	{{{ getStartOffset() method
WITHOUT_CLASSIFICATION	{{{ PosBottomHalf constructor
WITHOUT_CLASSIFICATION	{{{ foldLevelChanged() method
WITHOUT_CLASSIFICATION	{{{ ref() method
WITHOUT_CLASSIFICATION	{{{ LineElement constructor
WITHOUT_CLASSIFICATION	{{{ preContentRemoved() method
WITHOUT_CLASSIFICATION	{{{ transactionComplete() method
WITHOUT_CLASSIFICATION	{{{ getDocument() method
WITHOUT_CLASSIFICATION	{{{ getEndOffset() method
WITHOUT_CLASSIFICATION	{{{ getParentElement() method
WITHOUT_CLASSIFICATION	{{{ getAttributes() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ getLength() method
WITHOUT_CLASSIFICATION	{{{ getLineCount() method
WITHOUT_CLASSIFICATION	{{{ getLineOfOffset() method
WITHOUT_CLASSIFICATION	{{{ getLineEndOffset() method
WITHOUT_CLASSIFICATION	{{{ getText() method
WITHOUT_CLASSIFICATION	{{{ getText() method
WITHOUT_CLASSIFICATION	{{{ insert() method
WITHOUT_CLASSIFICATION	{{{ insert() method
WITHOUT_CLASSIFICATION	{{{ remove() method
WITHOUT_CLASSIFICATION	{{{ getFoldLevel() method
WITHOUT_CLASSIFICATION	{{{ getFoldLevel() method
WITHOUT_CLASSIFICATION	{{{ getFoldLevel() method
WITHOUT_CLASSIFICATION	copy text after gap
WITHOUT_CLASSIFICATION	{{{ getElementIndex() method
WITHOUT_CLASSIFICATION	{{{ getScreenLineCount() method
WITHOUT_CLASSIFICATION	{{{ getElementCount() method
WITHOUT_CLASSIFICATION	{{{ _setContent() method
WITHOUT_CLASSIFICATION	{{{ getElement() method
WITHOUT_CLASSIFICATION	limitations...
WITHOUT_CLASSIFICATION	{{{ isLeaf() method
WITHOUT_CLASSIFICATION	{{{ moveGapStart() method
WITHOUT_CLASSIFICATION	{{{ ExplicitFoldHandler constructor
WITHOUT_CLASSIFICATION	limitations...
WITHOUT_CLASSIFICATION	copy text before gap
WITHOUT_CLASSIFICATION	{{{ moveGapEnd() method
WITHOUT_CLASSIFICATION	{{{ setFirstInvalidFoldLevel() method
WITHOUT_CLASSIFICATION	{{{ DummyFoldHandler constructor
WITHOUT_CLASSIFICATION	{{{ setScreenLineCount() method
WITHOUT_CLASSIFICATION	{{{ LineManager constructor
WITHOUT_CLASSIFICATION	{{{ getFirstInvalidFoldLevel() method
WITHOUT_CLASSIFICATION	{{{ isScreenLineCountValid() method
WITHOUT_CLASSIFICATION	{{{ getLineContext() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ equals() method
WITHOUT_CLASSIFICATION	{{{ getName() method
WITHOUT_CLASSIFICATION	{{{ getFoldLevel() method
WITHOUT_CLASSIFICATION	{{{ getFoldHandler() method
WITHOUT_CLASSIFICATION	{{{ contentInserted() method
WITHOUT_CLASSIFICATION	{{{ contentInserted() method
WITHOUT_CLASSIFICATION	{{{ contentRemoved() method
WITHOUT_CLASSIFICATION	{{{ contentRemoved() method
WITHOUT_CLASSIFICATION	{{{ foldLevelChanged() method
WITHOUT_CLASSIFICATION	{{{ preContentRemoved() method
WITHOUT_CLASSIFICATION	{{{ transactionComplete() method
WITHOUT_CLASSIFICATION	{{{ foldHandlerChanged() method
WITHOUT_CLASSIFICATION	{{{ Update line info and line context arrays
WITHOUT_CLASSIFICATION	{{{ setLineContext() method
WITHOUT_CLASSIFICATION	{{{ Update line info and line context arrays
WITHOUT_CLASSIFICATION	{{{ setFirstInvalidLineContext() method
WITHOUT_CLASSIFICATION	{{{ getFirstInvalidLineContext() method
WITHOUT_CLASSIFICATION	moveGap(-1,0,"contentInserted");
WITHOUT_CLASSIFICATION	{{{ invalidateScreenLineCounts() method
WITHOUT_CLASSIFICATION	{{{ setLineEndOffset() method
WITHOUT_CLASSIFICATION	{{{ _contentInserted() method
WITHOUT_CLASSIFICATION	Having all the info packed into an int is not very OO and makes the code somewhat more complicated, but it saves a lot of memory. The new document model has just 12 bytes of overhead per line. LineContext instances are now internalized, so only a few should actually be in the heap. In the old document model there were 5 objects per line, for a total of about 100 bytes, plus a cached token list, which used another 100 or so bytes.
WITHOUT_CLASSIFICATION	moveGap(-1,0,"contentRemoved");
WITHOUT_CLASSIFICATION	{{{ registerFoldHandler() method
WITHOUT_CLASSIFICATION	{{{ moveGap() method
WITHOUT_CLASSIFICATION	{{{ unregisterFoldHandler() method
WITHOUT_CLASSIFICATION	Default implementation... subclasses can extend this.
WITHOUT_CLASSIFICATION	{{{ getFoldHandlers() method
WITHOUT_CLASSIFICATION	{{{ hashCode() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ start() method
WITHOUT_CLASSIFICATION	{{{ invoke() method
WITHOUT_CLASSIFICATION	{{{ stop() method
WITHOUT_CLASSIFICATION	{{{ Inner classes
WITHOUT_CLASSIFICATION	{{{ getIcon() method
WITHOUT_CLASSIFICATION	{{{ getFoldLevel() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	if 'temp' is true, hide search bar after user is done with it
WITHOUT_CLASSIFICATION	{{{ getFoldModes() method
WITHOUT_CLASSIFICATION	empty line. inherit previous line's fold level
WITHOUT_CLASSIFICATION	{{{ FoldHandler() constructor
WITHOUT_CLASSIFICATION	{{{ getExpansion() method
WITHOUT_CLASSIFICATION	{{{ Static initializer
WITHOUT_CLASSIFICATION	{{{ AnimatedIcon constructor
WITHOUT_CLASSIFICATION	{{{ getFrames() method
WITHOUT_CLASSIFICATION	{{{ setExpansion() method
WITHOUT_CLASSIFICATION	{{{ getRate() method
WITHOUT_CLASSIFICATION	{{{ getField() method
WITHOUT_CLASSIFICATION	{{{ setFrames() method
WITHOUT_CLASSIFICATION	{{{ getAbbrevField() method
WITHOUT_CLASSIFICATION	{{{ setIcon() method
WITHOUT_CLASSIFICATION	{{{ setRate() method
WITHOUT_CLASSIFICATION	{{{ getBeforeCaretTextArea() method
WITHOUT_CLASSIFICATION	{{{ goToActionBar() method
WITHOUT_CLASSIFICATION	{{{ getAfterCaretTextArea() method
WITHOUT_CLASSIFICATION	{{{ ActionBar constructor
WITHOUT_CLASSIFICATION	construct a BeanShell snippet instead of invoking directly so that user can record property changes in macros.
WITHOUT_CLASSIFICATION	{{{ getCompletions() method
WITHOUT_CLASSIFICATION	{{{ complete() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	protected members
WITHOUT_CLASSIFICATION	{{{ isOK() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ KeyHandler class
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	{{{ changedUpdate() method
WITHOUT_CLASSIFICATION	{{{ DocumentHandler class
WITHOUT_CLASSIFICATION	{{{ insertUpdate() method
WITHOUT_CLASSIFICATION	{{{ ActionTextField class
WITHOUT_CLASSIFICATION	{{{ removeUpdate() method
WITHOUT_CLASSIFICATION	{{{ setModel() method
WITHOUT_CLASSIFICATION	{{{ TipOfTheDay constructor
WITHOUT_CLASSIFICATION	{{{ CompletionPopup class
WITHOUT_CLASSIFICATION	{{{ CompletionList class
WITHOUT_CLASSIFICATION	{{{ CompletionPopup constructor
WITHOUT_CLASSIFICATION	we need this public not protected
WITHOUT_CLASSIFICATION	Recursively adds our key listener to sub-components
WITHOUT_CLASSIFICATION	{{{ nextTip() method
WITHOUT_CLASSIFICATION	{{{ SelectLineRange constructor
WITHOUT_CLASSIFICATION	{{{ createFieldPanel() method
WITHOUT_CLASSIFICATION	{{{ CloseDialog constructor
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ dispose() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ getCompletions() method
WITHOUT_CLASSIFICATION	{{{ getCompletions() method
WITHOUT_CLASSIFICATION	only set if all buffers saved/closed
WITHOUT_CLASSIFICATION	so that we don't see the same tip again if the user clicks 'Next Tip'
WITHOUT_CLASSIFICATION	{{{ completeWord() method
WITHOUT_CLASSIFICATION	do nothing }}}
WITHOUT_CLASSIFICATION	{{{ completeWord() method
WITHOUT_CLASSIFICATION	{{{ ListHandler class
WITHOUT_CLASSIFICATION	{{{ CompleteWord constructor
WITHOUT_CLASSIFICATION	}}} {{{ show popup if > 1
WITHOUT_CLASSIFICATION	{{{ if there is only one competion, insert in buffer
WITHOUT_CLASSIFICATION	attempting to expand non-word char
WITHOUT_CLASSIFICATION	figure out what constitutes a word character and what doesn't
WITHOUT_CLASSIFICATION	{{{ getNonAlphaNumericWordChars() method
WITHOUT_CLASSIFICATION	{{{ getWordToComplete() method
WITHOUT_CLASSIFICATION	build a list of unique words in all visible buffers
WITHOUT_CLASSIFICATION	only complete current buffer's keyword map
WITHOUT_CLASSIFICATION	only complete current buffer's keyword map
WITHOUT_CLASSIFICATION	{{{ try to find matching keywords
WITHOUT_CLASSIFICATION	{{{ loop through all lines of current buffer
WITHOUT_CLASSIFICATION	check for match at start of line
WITHOUT_CLASSIFICATION	check for match inside line
WITHOUT_CLASSIFICATION	'+ 1' so that findWordEnd() doesn't pick up the space at the start
WITHOUT_CLASSIFICATION	{{{ insertSelected() method
WITHOUT_CLASSIFICATION	{{{ Completion class
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	{{{ setMessageAndClear() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ removeNotify() method
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ statusUpdate() method
WITHOUT_CLASSIFICATION	{{{ progressUpdate() method
WITHOUT_CLASSIFICATION	{{{ addNotify() method
WITHOUT_CLASSIFICATION	UIManager.getFont("Label.font");
WITHOUT_CLASSIFICATION	{{{ updateCaption() method
WITHOUT_CLASSIFICATION	{{{ ThreadProgress constructor
WITHOUT_CLASSIFICATION	{{{ WorkThreadHandler class
WITHOUT_CLASSIFICATION	{{{ StatusBar constructor
WITHOUT_CLASSIFICATION	{{{ ThreadProgress class
WITHOUT_CLASSIFICATION	System.err.println("value: " + thread.getProgressValue());
WITHOUT_CLASSIFICATION	{{{ setMessageComponent() method
WITHOUT_CLASSIFICATION	{{{ TextAreaDialog constructor
WITHOUT_CLASSIFICATION	{{{ TextAreaDialog constructor
WITHOUT_CLASSIFICATION	{{{ TextAreaDialog constructor
WITHOUT_CLASSIFICATION	{{{ TextAreaDialog constructor
WITHOUT_CLASSIFICATION	{{{ WorkThreadListener implementation
WITHOUT_CLASSIFICATION	so if view is closed in the meantime...
WITHOUT_CLASSIFICATION	{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	don't obscure existing message
WITHOUT_CLASSIFICATION	{{{ updateCaretStatus() method
WITHOUT_CLASSIFICATION	{{{ setMessage() method
WITHOUT_CLASSIFICATION	can happen when switching buffers sometimes
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	{{{ paintComponent() method
WITHOUT_CLASSIFICATION	{{{ removeNotify() method
WITHOUT_CLASSIFICATION	{{{ removeNotify() method
WITHOUT_CLASSIFICATION	{{{ addNotify() method
WITHOUT_CLASSIFICATION	{{{ addNotify() method
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	hopefully another caret update will come?
WITHOUT_CLASSIFICATION	{{{ ToolTipLabel class
WITHOUT_CLASSIFICATION	see above
WITHOUT_CLASSIFICATION	{{{ updateMiscStatus() method
WITHOUT_CLASSIFICATION	{{{ updateBufferStatus() method
WITHOUT_CLASSIFICATION	{{{ MemoryStatus class
WITHOUT_CLASSIFICATION	{{{ getToolTipLocation() method
WITHOUT_CLASSIFICATION	package-private for speed
WITHOUT_CLASSIFICATION	{{{ getToolTipText() method
WITHOUT_CLASSIFICATION	{{{ getToolTipLocation() method
WITHOUT_CLASSIFICATION	{{{ getToolTipLocation() method
WITHOUT_CLASSIFICATION	{{{ MemoryStatus constructor
WITHOUT_CLASSIFICATION	{{{ getToolTipText() method
WITHOUT_CLASSIFICATION	Font font = UIManager.getFont("Label.font");
WITHOUT_CLASSIFICATION	{{{ Clock class
WITHOUT_CLASSIFICATION	MemoryStatus.this.getBorder().getBorderInsets(this);
WITHOUT_CLASSIFICATION	FontRenderContext frc = new FontRenderContext(null,false,false);Rectangle2D bounds = getFont().getStringBounds(getTime(),frc);Dimension dim = new Dimension((int)bounds.getWidth(),(int)bounds.getHeight());setPreferredSize(dim);setMaximumSize(dim);
WITHOUT_CLASSIFICATION	{{{ Clock constructor
WITHOUT_CLASSIFICATION	{{{ getTime() method
WITHOUT_CLASSIFICATION	{{{ HistoryTextField constructor
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	{{{ paintComponent() method
WITHOUT_CLASSIFICATION	{{{ removeNotify() method
WITHOUT_CLASSIFICATION	{{{ removeNotify() method
WITHOUT_CLASSIFICATION	{{{ addNotify() method
WITHOUT_CLASSIFICATION	{{{ addNotify() method
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	{{{ getToolTipLocation() method
WITHOUT_CLASSIFICATION	{{{ getToolTipLocation() method
WITHOUT_CLASSIFICATION	{{{ getToolTipLocation() method
WITHOUT_CLASSIFICATION	{{{ MemoryStatus constructor
WITHOUT_CLASSIFICATION	{{{ setSelectAllOnFocus() method
WITHOUT_CLASSIFICATION	Font font = UIManager.getFont("Label.font");
WITHOUT_CLASSIFICATION	{{{ getToolTipText() method
WITHOUT_CLASSIFICATION	{{{ getToolTipText() method
WITHOUT_CLASSIFICATION	MemoryStatus.this.getBorder().getBorderInsets(this);
WITHOUT_CLASSIFICATION	{{{ Clock constructor
WITHOUT_CLASSIFICATION	FontRenderContext frc = new FontRenderContext(null,false,false);Rectangle2D bounds = getFont().getStringBounds(getTime(),frc);Dimension dim = new Dimension((int)bounds.getWidth(),(int)bounds.getHeight());setPreferredSize(dim);setMaximumSize(dim);
WITHOUT_CLASSIFICATION	{{{ getTime() method
WITHOUT_CLASSIFICATION	{{{ HistoryTextField constructor
WITHOUT_CLASSIFICATION	{{{ HistoryTextField constructor
WITHOUT_CLASSIFICATION	{{{ HistoryTextField constructor
WITHOUT_CLASSIFICATION	{{{ setInstantPopups() method
WITHOUT_CLASSIFICATION	{{{ getInstantPopups() method
WITHOUT_CLASSIFICATION	{{{ getSelectAllOnFocus() method
WITHOUT_CLASSIFICATION	{{{ setEnterAddsToHistory() method
WITHOUT_CLASSIFICATION	{{{ getEnterAddsToHistory() method
WITHOUT_CLASSIFICATION	{{{ getModel() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ showPopupMenu() method
WITHOUT_CLASSIFICATION	{{{ showPopupMenu() method
WITHOUT_CLASSIFICATION	{{{ Protected members
WITHOUT_CLASSIFICATION	{{{ Inner classes
WITHOUT_CLASSIFICATION	{{{ processKeyEvent() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ mousePressed() method
WITHOUT_CLASSIFICATION	{{{ mouseReleased() method
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	{{{ setModel() method
WITHOUT_CLASSIFICATION	{{{ historyPrevious() method
WITHOUT_CLASSIFICATION	{{{ addCurrentToHistory() method
WITHOUT_CLASSIFICATION	{{{ processMouseEvent() method
WITHOUT_CLASSIFICATION	{{{ setText() method
WITHOUT_CLASSIFICATION	{{{ mouseMoved() method
WITHOUT_CLASSIFICATION	{{{ fireActionPerformed() method
WITHOUT_CLASSIFICATION	{{{ doBackwardSearch() method
WITHOUT_CLASSIFICATION	have to do this because setText() sets index to -1
WITHOUT_CLASSIFICATION	{{{ doForwardSearch() method
WITHOUT_CLASSIFICATION	down arrow
WITHOUT_CLASSIFICATION	have to do this because setText() sets index to -1
WITHOUT_CLASSIFICATION	{{{ mouseDragged() method
WITHOUT_CLASSIFICATION	{{{ historyNext() method
WITHOUT_CLASSIFICATION	{{{ ColorWellButton constructor
WITHOUT_CLASSIFICATION	{{{ HistoryBorder class
WITHOUT_CLASSIFICATION	according to krisk this looks better on OS X...
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ processKeyEvent() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ Renderer class
WITHOUT_CLASSIFICATION	we don't handle key pressed A+
WITHOUT_CLASSIFICATION	{{{ getSelectedColor() method
WITHOUT_CLASSIFICATION	{{{ ColorPickerDialog class
WITHOUT_CLASSIFICATION	{{{ setSelectedColor() method
WITHOUT_CLASSIFICATION	}}} {{{ KEY_TYPED...
WITHOUT_CLASSIFICATION	{{{ ColorWell class
WITHOUT_CLASSIFICATION	{{{ KEY_PRESSED...
WITHOUT_CLASSIFICATION	they're too troublesome
WITHOUT_CLASSIFICATION	get rid of keys we never need to handle
WITHOUT_CLASSIFICATION	need to let \b through so that backspace will work in HistoryTextFields
WITHOUT_CLASSIFICATION	case KeyEvent.VK_SEPARATOR:
WITHOUT_CLASSIFICATION	{{{ updateButtons() method
WITHOUT_CLASSIFICATION	if the last key was a numeric keypad key and NumLock is off, filter it out
WITHOUT_CLASSIFICATION	{{{ PasteFromListDialog constructor
WITHOUT_CLASSIFICATION	{{{ numericKeypadKey() method
WITHOUT_CLASSIFICATION	{{{ getSelectedClipText()
WITHOUT_CLASSIFICATION	{{{ showClipText() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ reload() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	{{{ ListHandler class
WITHOUT_CLASSIFICATION	{{{ Renderer class
WITHOUT_CLASSIFICATION	{{{ InputHandler constructor
WITHOUT_CLASSIFICATION	{{{ selectAll() method
WITHOUT_CLASSIFICATION	{{{ valueChanged() method
WITHOUT_CLASSIFICATION	{{{ isPrefixActive() method
WITHOUT_CLASSIFICATION	for ABI compatibility
WITHOUT_CLASSIFICATION	is it a header?
WITHOUT_CLASSIFICATION	{{{ FilesChangedDialog constructor
WITHOUT_CLASSIFICATION	{{{ addKeyBinding() method
WITHOUT_CLASSIFICATION	{{{ updateEnabled() method
WITHOUT_CLASSIFICATION	remove empty category branches
WITHOUT_CLASSIFICATION	{{{ addKeyBinding() method
WITHOUT_CLASSIFICATION	selected a header; skip to the next row
WITHOUT_CLASSIFICATION	{{{ getLastAction() method
WITHOUT_CLASSIFICATION	{{{ TreeHandler class
WITHOUT_CLASSIFICATION	{{{ handleKey() method
WITHOUT_CLASSIFICATION	{{{ removeKeyBinding() method
WITHOUT_CLASSIFICATION	{{{ removeAllKeyBindings() method
WITHOUT_CLASSIFICATION	{{{ getLastActionCount() method
WITHOUT_CLASSIFICATION	{{{ getRepeatCount() method
WITHOUT_CLASSIFICATION	{{{ setRepeatCount() method
WITHOUT_CLASSIFICATION	{{{ readNextChar() method
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ Protected members
WITHOUT_CLASSIFICATION	{{{ Entry class
WITHOUT_CLASSIFICATION	{{{ invokeAction() method
WITHOUT_CLASSIFICATION	{{{ invokeAction() method
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ setModel() method
WITHOUT_CLASSIFICATION	{{{ setModel() method
WITHOUT_CLASSIFICATION	{{{ selectAll() method
WITHOUT_CLASSIFICATION	{{{ readNextChar() method
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	{{{ resetLastActionCount() method
WITHOUT_CLASSIFICATION	If repeat was true originally, clear it Otherwise it might have been set by the action, etc
WITHOUT_CLASSIFICATION	remember the last executed action
WITHOUT_CLASSIFICATION	{{{ invokeReadNextChar() method
WITHOUT_CLASSIFICATION	remember old values, in case action changes them
WITHOUT_CLASSIFICATION	first of all, if this action set a readNextChar, do not clear the repeat
WITHOUT_CLASSIFICATION	execute the action
WITHOUT_CLASSIFICATION	{{{ getValues() method
WITHOUT_CLASSIFICATION	stop people doing dumb stuff like C+ENTER 100 C+n
WITHOUT_CLASSIFICATION	stop people doing dumb stuff like C+ENTER 100 C+n
WITHOUT_CLASSIFICATION	{{{ invokeLastAction() method
WITHOUT_CLASSIFICATION	this might be a bit slow if __char__ occurs a lot
WITHOUT_CLASSIFICATION	{{{ userInput() method
WITHOUT_CLASSIFICATION	{{{ JCheckBoxList constructor
WITHOUT_CLASSIFICATION	{{{ JCheckBoxList constructor
WITHOUT_CLASSIFICATION	{{{ getSelectedValue() method
WITHOUT_CLASSIFICATION	{{{ getCheckedValues() method
WITHOUT_CLASSIFICATION	hasFocus
WITHOUT_CLASSIFICATION	{{{ getCellRenderer() method
WITHOUT_CLASSIFICATION	{{{ DummyRenderer class
WITHOUT_CLASSIFICATION	{{{ LabelRenderer class
WITHOUT_CLASSIFICATION	{{{ AboutDialog constructor
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	can't happen
WITHOUT_CLASSIFICATION	{{{ invoke() method
WITHOUT_CLASSIFICATION	{{{ load() method
WITHOUT_CLASSIFICATION	{{{ resolveEntity() method
WITHOUT_CLASSIFICATION	{{{ attribute() method
WITHOUT_CLASSIFICATION	{{{ doctypeDecl() method
WITHOUT_CLASSIFICATION	{{{ charData() method
WITHOUT_CLASSIFICATION	{{{ startElement() method
WITHOUT_CLASSIFICATION	{{{ endElement() method
WITHOUT_CLASSIFICATION	{{{ startDocument() method
WITHOUT_CLASSIFICATION	{{{ pushElement() method
WITHOUT_CLASSIFICATION	{{{ peekElement() method
WITHOUT_CLASSIFICATION	{{{ popElement() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ Constants
WITHOUT_CLASSIFICATION	{{{ createDockableWindow() method
WITHOUT_CLASSIFICATION	{{{ AboutPanel class
WITHOUT_CLASSIFICATION	{{{ cacheDockableWindows() method
WITHOUT_CLASSIFICATION	{{{ Static part of class
WITHOUT_CLASSIFICATION	{{{ getCachedDockableNames() method
WITHOUT_CLASSIFICATION	{{{ loadDockableWindows() method
WITHOUT_CLASSIFICATION	{{{ registerDockableWindow() method
WITHOUT_CLASSIFICATION	{{{ unloadDockableWindows() method
WITHOUT_CLASSIFICATION	{{{ getRegisteredDockableWindows() method
WITHOUT_CLASSIFICATION	{{{ getCachedDockableActionFlags() method
WITHOUT_CLASSIFICATION	{{{ DockableListHandler class
WITHOUT_CLASSIFICATION	{{{ OpenAction class
WITHOUT_CLASSIFICATION	{{{ DockableListHandler constructor
WITHOUT_CLASSIFICATION	{{{ Factory class
WITHOUT_CLASSIFICATION	{{{ Factory constructor
WITHOUT_CLASSIFICATION	{{{ OpenAction constructor
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ invoke() method
WITHOUT_CLASSIFICATION	{{{ invoke() method
WITHOUT_CLASSIFICATION	{{{ getCode() method
WITHOUT_CLASSIFICATION	{{{ getCode() method
WITHOUT_CLASSIFICATION	{{{ getCode() method
WITHOUT_CLASSIFICATION	}}} }}} }}}
WITHOUT_CLASSIFICATION	{{{ getView() method
WITHOUT_CLASSIFICATION	{{{ isSelected() method
WITHOUT_CLASSIFICATION	{{{ Static initializer
WITHOUT_CLASSIFICATION	{{{ showDockableWindow() method
WITHOUT_CLASSIFICATION	make default be true for the next action
WITHOUT_CLASSIFICATION	{{{ Instance part of class
WITHOUT_CLASSIFICATION	{{{ ToggleAction class
WITHOUT_CLASSIFICATION	{{{ removeDockableWindow() method
WITHOUT_CLASSIFICATION	{{{ ToggleAction constructor
WITHOUT_CLASSIFICATION	{{{ DockableWindowManager constructor
WITHOUT_CLASSIFICATION	{{{ FloatAction class
WITHOUT_CLASSIFICATION	an error occurred
WITHOUT_CLASSIFICATION	{{{ FloatAction constructor
WITHOUT_CLASSIFICATION	{{{ floatDockableWindow() method
WITHOUT_CLASSIFICATION	{{{ closeCurrentArea() method
WITHOUT_CLASSIFICATION	create a copy of this dockable window and float it
WITHOUT_CLASSIFICATION	{{{ toggleDockableWindow() method
WITHOUT_CLASSIFICATION	{{{ addDockableWindow() method
WITHOUT_CLASSIFICATION	{{{ getDockableTitle() method
WITHOUT_CLASSIFICATION	{{{ hideDockableWindow() method
WITHOUT_CLASSIFICATION	{{{ getDockableWindow() method
WITHOUT_CLASSIFICATION	{{{ isDockableWindowVisible() method
WITHOUT_CLASSIFICATION	{{{ getDockable() method
WITHOUT_CLASSIFICATION	System.err.println(comp.getClass());
WITHOUT_CLASSIFICATION	{{{ isDockableWindowDocked() method
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ handleMessage() method
WITHOUT_CLASSIFICATION	{{{ addEntry() method
WITHOUT_CLASSIFICATION	{{{ getTopDockingArea() method
WITHOUT_CLASSIFICATION	we don't care
WITHOUT_CLASSIFICATION	{{{ close() method
WITHOUT_CLASSIFICATION	{{{ createPopupMenu() method
WITHOUT_CLASSIFICATION	{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	{{{ getLeftDockingArea() method
WITHOUT_CLASSIFICATION	{{{ getAllPluginEntries() method
WITHOUT_CLASSIFICATION	{{{ setResizePos() method
WITHOUT_CLASSIFICATION	{{{ getBottomDockingArea() method
WITHOUT_CLASSIFICATION	{{{ getRightDockingArea() method
WITHOUT_CLASSIFICATION	{{{ finishResizing() method
WITHOUT_CLASSIFICATION	{{{ paintChildren() method
WITHOUT_CLASSIFICATION	{{{ DockableLayout class
WITHOUT_CLASSIFICATION	don't show menu items to dock into a plain view
WITHOUT_CLASSIFICATION	{{{ addLayoutComponent() method
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	{{{ preferredLayoutSize() method
WITHOUT_CLASSIFICATION	{{{ addLayoutComponent() method
WITHOUT_CLASSIFICATION	{{{ Lay out dependent buttons
WITHOUT_CLASSIFICATION	{{{ removeLayoutComponent() method
WITHOUT_CLASSIFICATION	{{{ maximumLayoutSize() method
WITHOUT_CLASSIFICATION	{{{ minimumLayoutSize() method
WITHOUT_CLASSIFICATION	{{{ layoutContainer() method
WITHOUT_CLASSIFICATION	{{{ Lay out docking areas
WITHOUT_CLASSIFICATION	{{{ Lay out independent buttons
WITHOUT_CLASSIFICATION	I'm lazy
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ Entry class
WITHOUT_CLASSIFICATION	{{{ Lay out independent buttons
WITHOUT_CLASSIFICATION	{{{ Lay out dependent buttons
WITHOUT_CLASSIFICATION	{{{ Lay out docking areas
WITHOUT_CLASSIFICATION	{{{ Position tool bars if they are managed by us
WITHOUT_CLASSIFICATION	{{{ Position center (edit pane, or split pane)
WITHOUT_CLASSIFICATION	{{{ adjustDockingAreasToFit() method
WITHOUT_CLASSIFICATION	{{{ getLayoutAlignmentX() method
WITHOUT_CLASSIFICATION	{{{ getLayoutAlignmentY() method
WITHOUT_CLASSIFICATION	{{{ invalidateLayout() method
WITHOUT_CLASSIFICATION	only set if open
WITHOUT_CLASSIFICATION	only for docked
WITHOUT_CLASSIFICATION	{{{ Entry constructor
WITHOUT_CLASSIFICATION	{{{ Entry constructor
WITHOUT_CLASSIFICATION	get the title here, not in the factory constructor, since the factory might be created before a plugin's props are loaded
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ getShortcut() method
WITHOUT_CLASSIFICATION	{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	{{{ processKeyEvent() method
WITHOUT_CLASSIFICATION	{{{ processKeyEvent() method
WITHOUT_CLASSIFICATION	{{{ isOK() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ isManagingFocus() method
WITHOUT_CLASSIFICATION	{{{ getFocusTraversalKeysEnabled() method
WITHOUT_CLASSIFICATION	{{{ getFocusTraversalKeysEnabled() method
WITHOUT_CLASSIFICATION	eg, trying to bind C+n C+p if C+n already bound
WITHOUT_CLASSIFICATION	{{{ GrabKeyDialog constructor
WITHOUT_CLASSIFICATION	{{{ GrabKeyDialog constructor
WITHOUT_CLASSIFICATION	{{{ Instance variables this is a bad hack
WITHOUT_CLASSIFICATION	show "remove" button
WITHOUT_CLASSIFICATION	create a panel with a BoxLayout. Can't use Box here because Box doesn't have setBorder().
WITHOUT_CLASSIFICATION	{{{ updateAssignedTo() method
WITHOUT_CLASSIFICATION	{{{ getSymbolicName() method
WITHOUT_CLASSIFICATION	create a temporary (synthetic) prefix KeyBinding, that won't be saved
WITHOUT_CLASSIFICATION	{{{ getKeyBinding() method
WITHOUT_CLASSIFICATION	{{{ InputPane class
WITHOUT_CLASSIFICATION	eg, trying to bind C+e if C+e is a prefix
WITHOUT_CLASSIFICATION	ask whether to remove the old shortcut
WITHOUT_CLASSIFICATION	{{{ KeyBinding class
WITHOUT_CLASSIFICATION	we don't need two identical shortcuts
WITHOUT_CLASSIFICATION	{{{ canClose() method
WITHOUT_CLASSIFICATION	check whether the other shortcut is the alt. shortcut
WITHOUT_CLASSIFICATION	check whether this shortcut already exists
WITHOUT_CLASSIFICATION	check whether shortcut is a prefix to others
WITHOUT_CLASSIFICATION	can't override prefix shortcuts
WITHOUT_CLASSIFICATION	ask whether to override that other shortcut
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	Pass 1: compute preferred row heights / column widths
WITHOUT_CLASSIFICATION	Pass 2: redistribute free space
WITHOUT_CLASSIFICATION	Pass 3: layout components
WITHOUT_CLASSIFICATION	synchronized
WITHOUT_CLASSIFICATION	{{{ dispose() method
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ Protected members
WITHOUT_CLASSIFICATION	{{{ addOptionGroup() method
WITHOUT_CLASSIFICATION	{{{ addOptionPane() method
WITHOUT_CLASSIFICATION	{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ valueChanged() method
WITHOUT_CLASSIFICATION	in case saved geometry is too small
WITHOUT_CLASSIFICATION	{{{ OptionsDialog constructor
WITHOUT_CLASSIFICATION	{{{ OptionsDialog constructor
WITHOUT_CLASSIFICATION	Save settings to disk
WITHOUT_CLASSIFICATION	This will fire the PROPERTIES_CHANGED event
WITHOUT_CLASSIFICATION	register the Options dialog as a TreeSelectionListener. this is done before the initial selection to ensure that the first selected OptionPane is displayed on startup.
WITHOUT_CLASSIFICATION	get rid of this dialog if necessary
WITHOUT_CLASSIFICATION	{{{ updateSize() method
WITHOUT_CLASSIFICATION	{{{ OptionTreeModel class
WITHOUT_CLASSIFICATION	{{{ selectPane() method
WITHOUT_CLASSIFICATION	{{{ selectPane() method
WITHOUT_CLASSIFICATION	{{{ PaneNameRenderer class
WITHOUT_CLASSIFICATION	this model may not be changed by the TableCellEditor
WITHOUT_CLASSIFICATION	{{{ BufferOptions constructor
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ paintComponent() method
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ Line separator
WITHOUT_CLASSIFICATION	returns false if no such pane exists; calling with null param selects first option pane found
WITHOUT_CLASSIFICATION	setFont(new Font("Dialog",Font.BOLD,10));
WITHOUT_CLASSIFICATION	wait for it to be painted to ensure progress is updated continuously
WITHOUT_CLASSIFICATION	{{{ Max line length
WITHOUT_CLASSIFICATION	{{{ Encoding
WITHOUT_CLASSIFICATION	{{{ GZipped setting
WITHOUT_CLASSIFICATION	{{{ Tab size
WITHOUT_CLASSIFICATION	{{{ Edit mode
WITHOUT_CLASSIFICATION	{{{ FontSelector constructor
WITHOUT_CLASSIFICATION	{{{ Fold mode
WITHOUT_CLASSIFICATION	{{{ Indent size
WITHOUT_CLASSIFICATION	{{{ Wrap mode
WITHOUT_CLASSIFICATION	{{{ FontSelector constructor
WITHOUT_CLASSIFICATION	{{{ Soft tabs
WITHOUT_CLASSIFICATION	{{{ FontSelectorDialog class
WITHOUT_CLASSIFICATION	{{{ Buttons
WITHOUT_CLASSIFICATION	{{{ isAntiAliasEnabled() method
WITHOUT_CLASSIFICATION	{{{ FontSelectorDialog constructor
WITHOUT_CLASSIFICATION	{{{ setAntiAliasEnabled() method
WITHOUT_CLASSIFICATION	{{{ setAntiAliasEnabled() method
WITHOUT_CLASSIFICATION	{{{ FontSelectorDialog constructor
WITHOUT_CLASSIFICATION	{{{ updateText() method
WITHOUT_CLASSIFICATION	{{{ FontSelectorDialog constructor
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ ListHandler class
WITHOUT_CLASSIFICATION	{{{ updatePreview() method
WITHOUT_CLASSIFICATION	if the buffer count becomes 0, then it is guaranteed to become 1 very soon, so don't do anything in that case.
WITHOUT_CLASSIFICATION	{{{ FontSelectorDialog constructor
WITHOUT_CLASSIFICATION	fonts = getToolkit().getFontList();
WITHOUT_CLASSIFICATION	{{{ getSelectedFont() method
WITHOUT_CLASSIFICATION	for SPACE or S+SPACE we pass the key typed since international keyboards sometimes produce a KEY_PRESSED SPACE but not a KEY_TYPED SPACE, eg if you have to do a "<space> to insert ".
WITHOUT_CLASSIFICATION	Log.log(Log.ERROR,this,"Using deprecated Toolkit.getFontList()");
WITHOUT_CLASSIFICATION	{{{ getFontList() method
WITHOUT_CLASSIFICATION	{{{ addTranslation() method
WITHOUT_CLASSIFICATION	{{{ createTextFieldAndListPanel() method
WITHOUT_CLASSIFICATION	on MacOS, A+ can be user input
WITHOUT_CLASSIFICATION	{{{ translateKeyEvent() method
WITHOUT_CLASSIFICATION	on MacOS, A+ can be user input
WITHOUT_CLASSIFICATION	{{{ getSymbolicModifierName() method
WITHOUT_CLASSIFICATION	{{{ parseKey() method
WITHOUT_CLASSIFICATION	{{{ setModifierMapping() method
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ Inner classes
WITHOUT_CLASSIFICATION	{{{ remove() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	M+ discarded by key event workaround!
WITHOUT_CLASSIFICATION	== C+
WITHOUT_CLASSIFICATION	== A+
WITHOUT_CLASSIFICATION	== M+
WITHOUT_CLASSIFICATION	{{{ DockableWindowCompare class
WITHOUT_CLASSIFICATION	{{{ register() method
WITHOUT_CLASSIFICATION	== S+
WITHOUT_CLASSIFICATION	removing last component, so remove border
WITHOUT_CLASSIFICATION	{{{ Key class
WITHOUT_CLASSIFICATION	{{{ Create button
WITHOUT_CLASSIFICATION	{{{ PanelWindowContainer constructor
WITHOUT_CLASSIFICATION	{{{ setDimension() method
WITHOUT_CLASSIFICATION	{{{ Button box setup
WITHOUT_CLASSIFICATION	{{{ isVisible() method
WITHOUT_CLASSIFICATION	{{{ unregister() method
WITHOUT_CLASSIFICATION	{{{ showMostRecent() method
WITHOUT_CLASSIFICATION	{{{ getCurrent() method
WITHOUT_CLASSIFICATION	{{{ show() method
WITHOUT_CLASSIFICATION	{{{ sortDockables() method
WITHOUT_CLASSIFICATION	{{{ getDimension() method
WITHOUT_CLASSIFICATION	{{{ MenuMouseHandler class
WITHOUT_CLASSIFICATION	{{{ getDockables() method
WITHOUT_CLASSIFICATION	{{{ getWrappedDimension() method
WITHOUT_CLASSIFICATION	remember the most recent dockable
WITHOUT_CLASSIFICATION	{{{ DockBorder class
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ getMinimumSize() method
WITHOUT_CLASSIFICATION	{{{ paintBorder() method
WITHOUT_CLASSIFICATION	{{{ getBorderInsets() method
WITHOUT_CLASSIFICATION	{{{ isBorderOpaque() method
WITHOUT_CLASSIFICATION	{{{ getPreferredSize() method
WITHOUT_CLASSIFICATION	{{{ preferredLayoutSize() method
WITHOUT_CLASSIFICATION	{{{ minimumLayoutSize() method
WITHOUT_CLASSIFICATION	{{{ layoutContainer() method
WITHOUT_CLASSIFICATION	{{{ getWrappedDimension() method
WITHOUT_CLASSIFICATION	{{{ removeLayoutComponent() method }}}
WITHOUT_CLASSIFICATION	{{{ DockBorder constructor
WITHOUT_CLASSIFICATION	{{{ RotatedTextIcon class
WITHOUT_CLASSIFICATION	{{{ paintHorizBorder() method
WITHOUT_CLASSIFICATION	{{{ getIconHeight() method
WITHOUT_CLASSIFICATION	{{{ paintVertBorder() method
WITHOUT_CLASSIFICATION	{{{ RotatedTextIcon constructor
WITHOUT_CLASSIFICATION	{{{ updateColors() method
WITHOUT_CLASSIFICATION	}}} {{{ Counterclockwise rotation
WITHOUT_CLASSIFICATION	height = (int)glyphs.getLogicalBounds().getHeight();
WITHOUT_CLASSIFICATION	{{{ paintIcon() method
WITHOUT_CLASSIFICATION	{{{ getIconWidth() method
WITHOUT_CLASSIFICATION	{{{ DockablePanel constructor
WITHOUT_CLASSIFICATION	{{{ No rotation
WITHOUT_CLASSIFICATION	{{{ ButtonLayout class
WITHOUT_CLASSIFICATION	}}} {{{ Clockwise rotation
WITHOUT_CLASSIFICATION	nothing 'cept close box
WITHOUT_CLASSIFICATION	{{{ addLayoutComponent() method }}}
WITHOUT_CLASSIFICATION	{{{ setBounds() method
WITHOUT_CLASSIFICATION	{{{ getWindowContainer() method
WITHOUT_CLASSIFICATION	{{{ DockablePanel class
WITHOUT_CLASSIFICATION	{{{ ResizeMouseHandler class
WITHOUT_CLASSIFICATION	{{{ showDockable() method
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ handleMessage() method
WITHOUT_CLASSIFICATION	}}} }}} }}}
WITHOUT_CLASSIFICATION	{{{ mousePressed() method
WITHOUT_CLASSIFICATION	{{{ mouseReleased() method
WITHOUT_CLASSIFICATION	{{{ mouseMoved() method
WITHOUT_CLASSIFICATION	{{{ mouseDragged() method
WITHOUT_CLASSIFICATION	collapsed
WITHOUT_CLASSIFICATION	{{{ Top...
WITHOUT_CLASSIFICATION	{{{ Top...
WITHOUT_CLASSIFICATION	}}} {{{ Left...
WITHOUT_CLASSIFICATION	}}} {{{ Left...
WITHOUT_CLASSIFICATION	}}} {{{ Bottom...
WITHOUT_CLASSIFICATION	}}} {{{ Bottom...
WITHOUT_CLASSIFICATION	}}} {{{ Right...
WITHOUT_CLASSIFICATION	}}} {{{ Right...
WITHOUT_CLASSIFICATION	can't happen?
WITHOUT_CLASSIFICATION	{{{ mouseExited() method
WITHOUT_CLASSIFICATION	{{{ getCursor() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ dispose() method
WITHOUT_CLASSIFICATION	{{{ getDockableWindowManager() method
WITHOUT_CLASSIFICATION	{{{ getMinimumSize() method
WITHOUT_CLASSIFICATION	{{{ remove() method
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	{{{ register() method
WITHOUT_CLASSIFICATION	{{{ unregister() method
WITHOUT_CLASSIFICATION	{{{ show() method
WITHOUT_CLASSIFICATION	{{{ isVisible() method
WITHOUT_CLASSIFICATION	{{{ FloatingWindowContainer constructor
WITHOUT_CLASSIFICATION	{{{ LogViewer constructor
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ addKeyBinding() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ removeNotify() method
WITHOUT_CLASSIFICATION	{{{ KeyHandler class
WITHOUT_CLASSIFICATION	{{{ focusOnDefaultComponent() method
WITHOUT_CLASSIFICATION	{{{ addNotify() method
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	{{{ getAbbrev() method
WITHOUT_CLASSIFICATION	{{{ getExpansion() method
WITHOUT_CLASSIFICATION	{{{ ListHandler class
WITHOUT_CLASSIFICATION	{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	{{{ addKeyBinding() method
WITHOUT_CLASSIFICATION	{{{ removeKeyBinding() method
WITHOUT_CLASSIFICATION	{{{ checkForExistingAbbrev() method
WITHOUT_CLASSIFICATION	{{{ LogList class
WITHOUT_CLASSIFICATION	{{{ setEnabled() method
WITHOUT_CLASSIFICATION	{{{ RolloverButton constructor
WITHOUT_CLASSIFICATION	{{{ RolloverButton constructor
WITHOUT_CLASSIFICATION	{{{ updateUI() method
WITHOUT_CLASSIFICATION	{{{ setBorderPainted() method
WITHOUT_CLASSIFICATION	{{{ DefaultInputHandler constructor
WITHOUT_CLASSIFICATION	{{{ isOpaque() method
WITHOUT_CLASSIFICATION	{{{ revalidate() method
WITHOUT_CLASSIFICATION	{{{ DefaultInputHandler constructor
WITHOUT_CLASSIFICATION	{{{ paint() method
WITHOUT_CLASSIFICATION	{{{ EditAbbrevDialog constructor
WITHOUT_CLASSIFICATION	{{{ EditAbbrevDialog constructor
WITHOUT_CLASSIFICATION	user asks to remove non-existent
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ getName() method
WITHOUT_CLASSIFICATION	to avoid data loss, only do this if the above completed successfully
WITHOUT_CLASSIFICATION	{{{ removeAllKeyBindings() method
WITHOUT_CLASSIFICATION	{{{ addToolBar() method
WITHOUT_CLASSIFICATION	{{{ removeToolBar() method
WITHOUT_CLASSIFICATION	{{{ clear() method
WITHOUT_CLASSIFICATION	{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	{{{ getModel() method
WITHOUT_CLASSIFICATION	case KeyEvent.VK_SEPARATOR:
WITHOUT_CLASSIFICATION	{{{ isPrefixActive() method
WITHOUT_CLASSIFICATION	{{{ handleKey() method
WITHOUT_CLASSIFICATION	{{{ getKeyBinding() method
WITHOUT_CLASSIFICATION	{{{ getSymbolicModifierName() method
WITHOUT_CLASSIFICATION	{{{ _addKeyBinding() method
WITHOUT_CLASSIFICATION	Don't beep if the user presses some key we don't know about unless a prefix is active. Otherwise it will beep when caps lock is pressed, etc.
WITHOUT_CLASSIFICATION	{{{ saveHistory() method
WITHOUT_CLASSIFICATION	F10 should be passed on, but C+e F10 shouldn't
WITHOUT_CLASSIFICATION	{{{ getSize() method
WITHOUT_CLASSIFICATION	{{{ parseKeyStroke() method
WITHOUT_CLASSIFICATION	{{{ HistoryModel constructor
WITHOUT_CLASSIFICATION	Stores prefix name in bindings hashtable
WITHOUT_CLASSIFICATION	{{{ setCurrentBindings() method
WITHOUT_CLASSIFICATION	{{{ loadHistory() method
WITHOUT_CLASSIFICATION	{{{ addItem() method
WITHOUT_CLASSIFICATION	{{{ ToolBarManager constructor
WITHOUT_CLASSIFICATION	{{{ getItem() method
WITHOUT_CLASSIFICATION	{{{ getElementAt() method
WITHOUT_CLASSIFICATION	Log.log(Log.DEBUG,HistoryModel.class,fnf);
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ handleMessage() method
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	{{{ dispose() method
WITHOUT_CLASSIFICATION	{{{ Entry class
WITHOUT_CLASSIFICATION	{{{ addToolBar() method
WITHOUT_CLASSIFICATION	{{{ removeToolBar() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	{{{ HelpSearchPanel constructor
WITHOUT_CLASSIFICATION	See if we should place this toolbar before any others
WITHOUT_CLASSIFICATION	select the appropriate tree node.
WITHOUT_CLASSIFICATION	Place the toolbar at the bottom of the group
WITHOUT_CLASSIFICATION	{{{ ResultIcon class
WITHOUT_CLASSIFICATION	EnhancedDialog implementation
WITHOUT_CLASSIFICATION	we later use this to compute a relative ranking
WITHOUT_CLASSIFICATION	end EnhancedDialog implementation
WITHOUT_CLASSIFICATION	what to do?
WITHOUT_CLASSIFICATION	{{{ ResultRenderer class
WITHOUT_CLASSIFICATION	multiple files w/ word bonus
WITHOUT_CLASSIFICATION	{{{ Result class
WITHOUT_CLASSIFICATION	{{{ ResultCompare class
WITHOUT_CLASSIFICATION	turn the rankings into relative rankings, from 1 to 4
WITHOUT_CLASSIFICATION	{{{ gotoURL() method
WITHOUT_CLASSIFICATION	{{{ HelpViewer constructor
WITHOUT_CLASSIFICATION	{{{ HelpViewer constructor
WITHOUT_CLASSIFICATION	{{{ HelpViewer constructor
WITHOUT_CLASSIFICATION	{{{ getBaseURL() method
WITHOUT_CLASSIFICATION	don't show loading msg because we won't receive a propertyChanged
WITHOUT_CLASSIFICATION	{{{ queueTOCReload() method
WITHOUT_CLASSIFICATION	{{{ getShortURL() method
WITHOUT_CLASSIFICATION	{{{ Instance members
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getFile() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ load() method
WITHOUT_CLASSIFICATION	{{{ Inner classes
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	reset default cursor so that the hand cursor doesn't stick around
WITHOUT_CLASSIFICATION	the TOC pane looks up user's guide URLs relative to the doc directory...
WITHOUT_CLASSIFICATION	{{{ HelpIndex constructor
WITHOUT_CLASSIFICATION	{{{ indexJAR() method
WITHOUT_CLASSIFICATION	{{{ actionPerformed() class
WITHOUT_CLASSIFICATION	{{{ HelpIndex constructorpublic HelpIndex(String fileListPath, String wordIndexPath){this();} }}}
WITHOUT_CLASSIFICATION	{{{ LinkHandler class
WITHOUT_CLASSIFICATION	{{{ HelpFile class
WITHOUT_CLASSIFICATION	{{{ hyperlinkUpdate() method
WITHOUT_CLASSIFICATION	{{{ indexEditorHelp() method
WITHOUT_CLASSIFICATION	{{{ PropertyChangeHandler class
WITHOUT_CLASSIFICATION	|| lname.endsWith(".txt")
WITHOUT_CLASSIFICATION	{{{ ignoreWord() method
WITHOUT_CLASSIFICATION	{{{ indexDirectory() method
WITHOUT_CLASSIFICATION	how much an occurrence in the title is worth
WITHOUT_CLASSIFICATION	{{{ indexStream() method
WITHOUT_CLASSIFICATION	{{{ indexURL() method
WITHOUT_CLASSIFICATION	{{{ lookupWord() method
WITHOUT_CLASSIFICATION	{{{ addWord() method
WITHOUT_CLASSIFICATION	the word
WITHOUT_CLASSIFICATION	{{{ Word class
WITHOUT_CLASSIFICATION	{{{ HelpTOCPanel constructor
WITHOUT_CLASSIFICATION	files it occurs in
WITHOUT_CLASSIFICATION	{{{ createTOC() method
WITHOUT_CLASSIFICATION	{{{ HelpNode class
WITHOUT_CLASSIFICATION	{{{ selectNode() method
WITHOUT_CLASSIFICATION	so that HelpViewer constructor doesn't try to expand
WITHOUT_CLASSIFICATION	{{{ createNode() method
WITHOUT_CLASSIFICATION	{{{ loadTOC() method
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ start() method
WITHOUT_CLASSIFICATION	{{{ attribute() method
WITHOUT_CLASSIFICATION	{{{ charData() method
WITHOUT_CLASSIFICATION	{{{ startElement() method
WITHOUT_CLASSIFICATION	{{{ endElement() method
WITHOUT_CLASSIFICATION	{{{ getToolTipLocation() method
WITHOUT_CLASSIFICATION	{{{ getToolTipText() method
WITHOUT_CLASSIFICATION	{{{ processMouseEvent() method
WITHOUT_CLASSIFICATION	{{{ TOCHandler constructor
WITHOUT_CLASSIFICATION	{{{ Private members used to mark words to ignore (see constructor for the list)
WITHOUT_CLASSIFICATION	{{{ TOCHandler class
WITHOUT_CLASSIFICATION	{{{ HelpNode constructor
WITHOUT_CLASSIFICATION	ToolTipManager ttm = ToolTipManager.sharedInstance();
WITHOUT_CLASSIFICATION	{{{ TOCTree constructor
WITHOUT_CLASSIFICATION	{{{ TOCTree class
WITHOUT_CLASSIFICATION	case MouseEvent.MOUSE_ENTERED:toolTipInitialDelay = ttm.getInitialDelay();toolTipReshowDelay = ttm.getReshowDelay();ttm.setInitialDelay(200);ttm.setReshowDelay(0);super.processMouseEvent(evt);break;case MouseEvent.MOUSE_EXITED:ttm.setInitialDelay(toolTipInitialDelay);ttm.setReshowDelay(toolTipReshowDelay);super.processMouseEvent(evt);break;
WITHOUT_CLASSIFICATION	{{{ cellRectIsVisible() method
WITHOUT_CLASSIFICATION	{{{ TOCCellRenderer class
WITHOUT_CLASSIFICATION	{{{ PluginCompare class
WITHOUT_CLASSIFICATION	{{{ VFS methods
WITHOUT_CLASSIFICATION	{{{ getFileVFS() method
WITHOUT_CLASSIFICATION	{{{ getUrlVFS() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ runInAWTThread() method
WITHOUT_CLASSIFICATION	{{{ runInWorkThread() method
WITHOUT_CLASSIFICATION	{{{ error() method
WITHOUT_CLASSIFICATION	{{{ error() method
WITHOUT_CLASSIFICATION	{{{ Static variables
WITHOUT_CLASSIFICATION	{{{ Class initializer
WITHOUT_CLASSIFICATION	in new api, protocol always equals name
WITHOUT_CLASSIFICATION	{{{ getVFSByName() method
WITHOUT_CLASSIFICATION	{{{ getFilesystems() method
WITHOUT_CLASSIFICATION	{{{ waitForRequests() method
WITHOUT_CLASSIFICATION	{{{ getVFSForProtocol() method
WITHOUT_CLASSIFICATION	{{{ getVFSs() method
WITHOUT_CLASSIFICATION	{{{ getVFSForPath() method
WITHOUT_CLASSIFICATION	we were the first to add an update; add update sending runnable to AWT thread
WITHOUT_CLASSIFICATION	{{{ registerVFS() method
WITHOUT_CLASSIFICATION	{{{ errorOccurred() method
WITHOUT_CLASSIFICATION	{{{ I/O request methods
WITHOUT_CLASSIFICATION	{{{ sendVFSUpdate() method
WITHOUT_CLASSIFICATION	{{{ getIOThreadPool() method
WITHOUT_CLASSIFICATION	the vfs browser has what you might call a design flaw, it doesn't update properly unless the vfs update for a parent arrives before any updates for the children. sorting the list alphanumerically guarantees this.
WITHOUT_CLASSIFICATION	{{{ getRequestCount() method
WITHOUT_CLASSIFICATION	don't send two updates for the same path
WITHOUT_CLASSIFICATION	if we are already in the AWT thread, take a shortcut
WITHOUT_CLASSIFICATION	{{{ SendVFSUpdatesSafely class
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ constructPath() method
WITHOUT_CLASSIFICATION	{{{ constructPath() method
WITHOUT_CLASSIFICATION	{{{ getParentOfPath() method
WITHOUT_CLASSIFICATION	{{{ insert() method
WITHOUT_CLASSIFICATION	{{{ _createOutputStream() method
WITHOUT_CLASSIFICATION	{{{ UrlVFS constructor
WITHOUT_CLASSIFICATION	{{{ _canonPath() method
WITHOUT_CLASSIFICATION	{{{ _createInputStream() method
WITHOUT_CLASSIFICATION	Check for backup.directory, and create that directory if it doesn't exist
WITHOUT_CLASSIFICATION	{{{ FileVFS method
WITHOUT_CLASSIFICATION	{{{ LocalDirectoryEntry class
WITHOUT_CLASSIFICATION	{{{ getFileSeparator() method
WITHOUT_CLASSIFICATION	{{{ _getDirectoryEntry() method
WITHOUT_CLASSIFICATION	{{{ Check if file is valid
WITHOUT_CLASSIFICATION	{{{ _rename() method
WITHOUT_CLASSIFICATION	use system default short format
WITHOUT_CLASSIFICATION	{{{ _listDirectory() method
WITHOUT_CLASSIFICATION	{{{ _delete() method
WITHOUT_CLASSIFICATION	{{{ _backup() method
WITHOUT_CLASSIFICATION	do some platforms throw exceptions if the file does not exist when we ask for the canonical path?
WITHOUT_CLASSIFICATION	this is needed because on OS X renaming to a non-existent directory causes problems
WITHOUT_CLASSIFICATION	Fetch properties
WITHOUT_CLASSIFICATION	{{{ _mkdir() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ getParentOfPath() method
WITHOUT_CLASSIFICATION	{{{ getParentOfPath() method
WITHOUT_CLASSIFICATION	{{{ _createInputStream() method
WITHOUT_CLASSIFICATION	{{{ _createOutputStream() method
WITHOUT_CLASSIFICATION	{{{ _listDirectory() method
WITHOUT_CLASSIFICATION	{{{ _listDirectory() method
WITHOUT_CLASSIFICATION	{{{ _getDirectoryEntry() method
WITHOUT_CLASSIFICATION	{{{ _getDirectoryEntry() method
WITHOUT_CLASSIFICATION	{{{ _delete() method
WITHOUT_CLASSIFICATION	{{{ setPermissions() method
WITHOUT_CLASSIFICATION	{{{ _saveComplete() method
WITHOUT_CLASSIFICATION	{{{ addToFavorites() method
WITHOUT_CLASSIFICATION	{{{ Permission preservation code
WITHOUT_CLASSIFICATION	{{{ getPermissions() method
WITHOUT_CLASSIFICATION	{{{ FavoritesVFS constructor
WITHOUT_CLASSIFICATION	{{{ saveFavorites() method
WITHOUT_CLASSIFICATION	{{{ loadFavorites() method
WITHOUT_CLASSIFICATION	don't want it to show "0 bytes" for size, etc.
WITHOUT_CLASSIFICATION	{{{ listRoots() method
WITHOUT_CLASSIFICATION	{{{ getFavorites() method
WITHOUT_CLASSIFICATION	{{{ FileRootsVFS constructor
WITHOUT_CLASSIFICATION	{{{ FavoritesEntry class
WITHOUT_CLASSIFICATION	JDK 1.4 adds methods to obtain a drive letter label and list the desktop on Windows
WITHOUT_CLASSIFICATION	Make sure people don't do stupid things like putting files in /Volumes
WITHOUT_CLASSIFICATION	{{{ getName() method
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ load() method
WITHOUT_CLASSIFICATION	{{{ constructPath() method
WITHOUT_CLASSIFICATION	{{{ getFileName() method
WITHOUT_CLASSIFICATION	{{{ getParentOfPath() method
WITHOUT_CLASSIFICATION	{{{ insert() method
WITHOUT_CLASSIFICATION	{{{ reloadDirectory() method
WITHOUT_CLASSIFICATION	{{{ getFileSeparator() method
WITHOUT_CLASSIFICATION	{{{ _canonPath() method
WITHOUT_CLASSIFICATION	{{{ _listDirectory() method
WITHOUT_CLASSIFICATION	{{{ _listDirectory() method
WITHOUT_CLASSIFICATION	{{{ _getDirectoryEntry() method
WITHOUT_CLASSIFICATION	don't want it to show "0 bytes" for size, etc.
WITHOUT_CLASSIFICATION	{{{ showBrowseDialog() method
WITHOUT_CLASSIFICATION	{{{ RootsEntry class
WITHOUT_CLASSIFICATION	so an empty cd drive is not reported as a file
WITHOUT_CLASSIFICATION	REMIND: calling isDirectory() on a floppy drive displays stupid I/O error dialog box on Windows
WITHOUT_CLASSIFICATION	reasonable defaults (?)
WITHOUT_CLASSIFICATION	to prevent windows looking for a disk in the floppy drive
WITHOUT_CLASSIFICATION	{{{ Capabilities
WITHOUT_CLASSIFICATION	this ensures that getFileParent("protocol:"), for example, is "protocol:" and not "".
WITHOUT_CLASSIFICATION	{{{ Extended attributes
WITHOUT_CLASSIFICATION	{{{ getCapabilities() method
WITHOUT_CLASSIFICATION	{{{ VFS constructor
WITHOUT_CLASSIFICATION	{{{ VFS constructor
WITHOUT_CLASSIFICATION	{{{ VFS constructor
WITHOUT_CLASSIFICATION	don't want getFileName("roots:") to return ""
WITHOUT_CLASSIFICATION	{{{ getExtendedAttributes() method
WITHOUT_CLASSIFICATION	this makes HyperSearch much faster
WITHOUT_CLASSIFICATION	{{{ getTwoStageSaveName() method
WITHOUT_CLASSIFICATION	ignore last character of path to properly handle paths like /foo/bar/
WITHOUT_CLASSIFICATION	When doing a 'save as', the path to save to (path) will not be the same as the buffer's previous path (buffer.getPath()). In that case, we want to create a backup of the new path, even if the old path was backed up as well (BACKED_UP property set)
WITHOUT_CLASSIFICATION	{{{ createVFSSession() method
WITHOUT_CLASSIFICATION	A method name that starts with _ requires a session object
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ updateEveryTime() method
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	{{{ Class initializer
WITHOUT_CLASSIFICATION	{{{ getExtendedAttribute() method
WITHOUT_CLASSIFICATION	{{{ _createInputStream() method
WITHOUT_CLASSIFICATION	{{{ _createOutputStream() method
WITHOUT_CLASSIFICATION	{{{ _listDirectory() method
WITHOUT_CLASSIFICATION	{{{ _delete() method
WITHOUT_CLASSIFICATION	{{{ _rename() method
WITHOUT_CLASSIFICATION	{{{ _mkdir() method
WITHOUT_CLASSIFICATION	{{{ _backup() method
WITHOUT_CLASSIFICATION	{{{ _saveComplete() method
WITHOUT_CLASSIFICATION	{{{ _endVFSSession() method
WITHOUT_CLASSIFICATION	{{{ DirectoryEntry class
WITHOUT_CLASSIFICATION	{{{ File types
WITHOUT_CLASSIFICATION	{{{ getDefaultColorFor() method
WITHOUT_CLASSIFICATION	{{{ DirectoryEntry constructor
WITHOUT_CLASSIFICATION	{{{ DirectoryEntry constructor
WITHOUT_CLASSIFICATION	{{{ ColorEntry class
WITHOUT_CLASSIFICATION	maintain backwards compatibility
WITHOUT_CLASSIFICATION	{{{ DirectoryEntryCompare class
WITHOUT_CLASSIFICATION	{{{ getColor() method
WITHOUT_CLASSIFICATION	skip autosave files
WITHOUT_CLASSIFICATION	{{{ DirectoryProvider constructor
WITHOUT_CLASSIFICATION	resolve symlinks to avoid loops
WITHOUT_CLASSIFICATION	{{{ loadColors() method
WITHOUT_CLASSIFICATION	{{{ ActionListeners
WITHOUT_CLASSIFICATION	skip backup files
WITHOUT_CLASSIFICATION	for filtering out backups
WITHOUT_CLASSIFICATION	skip marker files
WITHOUT_CLASSIFICATION	current.addSeparator();
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ updateEveryTime() method
WITHOUT_CLASSIFICATION	{{{ updateEveryTime() method
WITHOUT_CLASSIFICATION	{{{ updateEveryTime() method
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	{{{ getShortcut() method
WITHOUT_CLASSIFICATION	{{{ getShortcut() method
WITHOUT_CLASSIFICATION	{{{ Class initializer
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	{{{ old API
WITHOUT_CLASSIFICATION	{{{ getPreferredSize() method
WITHOUT_CLASSIFICATION	{{{ getPreferredSize() method
WITHOUT_CLASSIFICATION	{{{ getPreferredSize() method
WITHOUT_CLASSIFICATION	{{{ paint() method
WITHOUT_CLASSIFICATION	{{{ paint() method
WITHOUT_CLASSIFICATION	{{{ ActionListeners
WITHOUT_CLASSIFICATION	current.addSeparator();
WITHOUT_CLASSIFICATION	We build a set of lists, each list contains plugin menu items that begin with a given letter.
WITHOUT_CLASSIFICATION	{{{ addToLetterMap() method
WITHOUT_CLASSIFICATION	Sort each letter
WITHOUT_CLASSIFICATION	if less than 20 items, put them directly in the menu
WITHOUT_CLASSIFICATION	{{{ MarkersMenuItem class
WITHOUT_CLASSIFICATION	Collect blocks of up to maxItems of consecutive letters
WITHOUT_CLASSIFICATION	{{{ MarkersMenuItem constructor
WITHOUT_CLASSIFICATION	{{{ EnhancedMenuItem constructor
WITHOUT_CLASSIFICATION	{{{ EnhancedCheckBoxMenuItem constructor
WITHOUT_CLASSIFICATION	{{{ Model class
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ menuSelected() method
WITHOUT_CLASSIFICATION	{{{ updateEveryTime() method
WITHOUT_CLASSIFICATION	{{{ updateEveryTime() method
WITHOUT_CLASSIFICATION	{{{ updateEveryTime() method
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	{{{ getShortcut() method
WITHOUT_CLASSIFICATION	{{{ Class initializer
WITHOUT_CLASSIFICATION	{{{ getView() method
WITHOUT_CLASSIFICATION	{{{ Protected members
WITHOUT_CLASSIFICATION	{{{ finalize() method
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	{{{ paint() method
WITHOUT_CLASSIFICATION	{{{ ViewUpdate constructor
WITHOUT_CLASSIFICATION	{{{ EnhancedMenu constructor
WITHOUT_CLASSIFICATION	{{{ createMacrosMenu() method
WITHOUT_CLASSIFICATION	{{{ EnhancedMenu constructor
WITHOUT_CLASSIFICATION	{{{ ActionListener...
WITHOUT_CLASSIFICATION	{{{ ActionListener...
WITHOUT_CLASSIFICATION	{{{ EnhancedMenu constructor
WITHOUT_CLASSIFICATION	{{{ MouseListener...
WITHOUT_CLASSIFICATION	{{{ MouseListener...
WITHOUT_CLASSIFICATION	{{{ EditBusStub class
WITHOUT_CLASSIFICATION	{{{ getWhat() method
WITHOUT_CLASSIFICATION	EnhancedMenu has a reference to EditBusStub, but not the other way around. So when the EnhancedMenu is being garbage collected its finalize() method removes the EditBusStub from the edit bus.
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	{{{ getView() method
WITHOUT_CLASSIFICATION	{{{ Protected members
WITHOUT_CLASSIFICATION	{{{ getPluginJAR() method
WITHOUT_CLASSIFICATION	{{{ getBuffer() method
WITHOUT_CLASSIFICATION	{{{ setSelectedRow() method
WITHOUT_CLASSIFICATION	{{{ updateEnabled() method
WITHOUT_CLASSIFICATION	{{{ getDockable() method
WITHOUT_CLASSIFICATION	{{{ getWhat() method
WITHOUT_CLASSIFICATION	{{{ getWhat() method
WITHOUT_CLASSIFICATION	{{{ getWhat() method
WITHOUT_CLASSIFICATION	{{{ getMenuName() method
WITHOUT_CLASSIFICATION	{{{ Message types
WITHOUT_CLASSIFICATION	{{{ Message types
WITHOUT_CLASSIFICATION	{{{ Message types
WITHOUT_CLASSIFICATION	{{{ DockableWindowUpdate constructor
WITHOUT_CLASSIFICATION	{{{ BufferUpdate constructor
WITHOUT_CLASSIFICATION	{{{ PluginUpdate constructor
WITHOUT_CLASSIFICATION	{{{ isExiting() method
WITHOUT_CLASSIFICATION	{{{ BrowserColorsOptionPane constructor
WITHOUT_CLASSIFICATION	{{{ DynamicMenuChanged constructor
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ Entry class
WITHOUT_CLASSIFICATION	{{{ remove() method
WITHOUT_CLASSIFICATION	{{{ remove() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ getTableCellRendererComponent() method
WITHOUT_CLASSIFICATION	{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	{{{ getRowCount() method
WITHOUT_CLASSIFICATION	{{{ getRowCount() method
WITHOUT_CLASSIFICATION	{{{ getColumnName() method
WITHOUT_CLASSIFICATION	{{{ getColumnClass() method
WITHOUT_CLASSIFICATION	{{{ getValueAt() method
WITHOUT_CLASSIFICATION	{{{ getValueAt() method
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	{{{ add() method
WITHOUT_CLASSIFICATION	{{{ add() method
WITHOUT_CLASSIFICATION	{{{ SelectionHandler class
WITHOUT_CLASSIFICATION	{{{ isCellEditable() method
WITHOUT_CLASSIFICATION	{{{ BrowserColorsModel class
WITHOUT_CLASSIFICATION	{{{ BrowserColorsModel constructor
WITHOUT_CLASSIFICATION	{{{ BrowserColorsModel constructor
WITHOUT_CLASSIFICATION	{{{ setValueAt() method
WITHOUT_CLASSIFICATION	{{{ moveUp() method
WITHOUT_CLASSIFICATION	{{{ moveUp() method
WITHOUT_CLASSIFICATION	{{{ moveDown() method
WITHOUT_CLASSIFICATION	{{{ moveDown() method
WITHOUT_CLASSIFICATION	{{{ ColorRenderer class
WITHOUT_CLASSIFICATION	{{{ ColorRenderer constructor
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	}}} }}} }}}
WITHOUT_CLASSIFICATION	{{{ Entry class
WITHOUT_CLASSIFICATION	protected members
WITHOUT_CLASSIFICATION	{{{ getTableCellRendererComponent() method
WITHOUT_CLASSIFICATION	{{{ getTableCellRendererComponent() method
WITHOUT_CLASSIFICATION	{{{ getColumnName() method
WITHOUT_CLASSIFICATION	{{{ getColumnClass() method
WITHOUT_CLASSIFICATION	{{{ updateEnabled() method
WITHOUT_CLASSIFICATION	{{{ isCellEditable() method
WITHOUT_CLASSIFICATION	{{{ setValueAt() method
WITHOUT_CLASSIFICATION	{{{ ColorRenderer class
WITHOUT_CLASSIFICATION	{{{ ColorRenderer constructor
WITHOUT_CLASSIFICATION	{{{ ColorRenderer constructor
WITHOUT_CLASSIFICATION	Text color
WITHOUT_CLASSIFICATION	{{{ TextAreaOptionPane constructor
WITHOUT_CLASSIFICATION	Multiple selection color
WITHOUT_CLASSIFICATION	Font
WITHOUT_CLASSIFICATION	Fractional font metrics
WITHOUT_CLASSIFICATION	Background color
WITHOUT_CLASSIFICATION	Line highlight
WITHOUT_CLASSIFICATION	Caret color, caret blink, block caret
WITHOUT_CLASSIFICATION	Wrap guide
WITHOUT_CLASSIFICATION	Selection color
WITHOUT_CLASSIFICATION	Skip certain actions this way
WITHOUT_CLASSIFICATION	Structure highlight
WITHOUT_CLASSIFICATION	Electric borders
WITHOUT_CLASSIFICATION	EOL markers
WITHOUT_CLASSIFICATION	{{{ EditingOptionPane constructor
WITHOUT_CLASSIFICATION	Anti-aliasing
WITHOUT_CLASSIFICATION	redraw the whole table because a second shortcut might have changed, too
WITHOUT_CLASSIFICATION	{{{ selectMode() method
WITHOUT_CLASSIFICATION	{{{ saveMode() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ load() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ updateButtons() method
WITHOUT_CLASSIFICATION	{{{ PluginOptions constructor
WITHOUT_CLASSIFICATION	{{{ ModeProperties class
WITHOUT_CLASSIFICATION	don't do anything if the user didn't change any settings
WITHOUT_CLASSIFICATION	{{{ ModeProperties constructor
WITHOUT_CLASSIFICATION	{{{ ModeProperties constructor
WITHOUT_CLASSIFICATION	{{{ PluginOptions constructor
WITHOUT_CLASSIFICATION	need to call Mode.init() if the file name or first line globs change
WITHOUT_CLASSIFICATION	Old API
WITHOUT_CLASSIFICATION	{{{ PluginOptions constructor
WITHOUT_CLASSIFICATION	{{{ PluginOptions constructor
WITHOUT_CLASSIFICATION	initialize the Plugins branch of the options tree
WITHOUT_CLASSIFICATION	{{{ createOptionTreeModel() method
WITHOUT_CLASSIFICATION	{{{ Ceate icons list
WITHOUT_CLASSIFICATION	Query plugins for option panes
WITHOUT_CLASSIFICATION	{{{ NoPluginsPane class
WITHOUT_CLASSIFICATION	only add the Plugins branch if there are OptionPanes
WITHOUT_CLASSIFICATION	Show toolbar
WITHOUT_CLASSIFICATION	{{{ getDefaultGroup() method
WITHOUT_CLASSIFICATION	{{{ ToolBarOptionPane constructor
WITHOUT_CLASSIFICATION	{{{ Create buttons
WITHOUT_CLASSIFICATION	}}} /}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	protected members
WITHOUT_CLASSIFICATION	{{{ Inner classes
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ ListHandler class
WITHOUT_CLASSIFICATION	{{{ updateEnabled() method
WITHOUT_CLASSIFICATION	{{{ updateEnabled() method
WITHOUT_CLASSIFICATION	{{{ ToolBarEditDialog constructor
WITHOUT_CLASSIFICATION	{{{ ButtonCompare class
WITHOUT_CLASSIFICATION	{{{ IconListEntry class
WITHOUT_CLASSIFICATION	{{{ Button class
WITHOUT_CLASSIFICATION	{{{ ToolBarEditDialog constructor
WITHOUT_CLASSIFICATION	{{{ ButtonCellRenderer class
WITHOUT_CLASSIFICATION	{{{ IconCellRenderer class
WITHOUT_CLASSIFICATION	Icon selection
WITHOUT_CLASSIFICATION	{{{ ToolBarEditDialog class
WITHOUT_CLASSIFICATION	{{{ updateList() method
WITHOUT_CLASSIFICATION	Icon selection
WITHOUT_CLASSIFICATION	{{{ updateList() method
WITHOUT_CLASSIFICATION	{{{ getSelection() method
WITHOUT_CLASSIFICATION	{{{ getSelection() method
WITHOUT_CLASSIFICATION	{{{ StyleOptionPane constructor
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	start at 1 not 0 to skip Token.NULL
WITHOUT_CLASSIFICATION	start at 1 not 0 to skip Token.NULL
WITHOUT_CLASSIFICATION	}}} }}} }}}
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ Protected members
WITHOUT_CLASSIFICATION	{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	{{{ getTableCellRendererComponent() method
WITHOUT_CLASSIFICATION	{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	{{{ getRowCount() method
WITHOUT_CLASSIFICATION	{{{ getColumnName() method
WITHOUT_CLASSIFICATION	{{{ getValueAt() method
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	{{{ setValueAt() method
WITHOUT_CLASSIFICATION	{{{ createStyleTableScroller() method
WITHOUT_CLASSIFICATION	{{{ StyleTableModel class
WITHOUT_CLASSIFICATION	{{{ createStyleTableModel() method
WITHOUT_CLASSIFICATION	for sorting
WITHOUT_CLASSIFICATION	{{{ StyleTableModel constructor
WITHOUT_CLASSIFICATION	{{{ StyleTableModel constructor
WITHOUT_CLASSIFICATION	{{{ addStyleChoice() method
WITHOUT_CLASSIFICATION	{{{ StyleRenderer class
WITHOUT_CLASSIFICATION	{{{ StyleChoice class
WITHOUT_CLASSIFICATION	{{{ StyleEditor class
WITHOUT_CLASSIFICATION	{{{ StyleRenderer constructor
WITHOUT_CLASSIFICATION	{{{ StyleEditor constructor
WITHOUT_CLASSIFICATION	{{{ getStyle() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	{{{ getTableCellRendererComponent() method
WITHOUT_CLASSIFICATION	{{{ getTableCellRendererComponent() method
WITHOUT_CLASSIFICATION	{{{ getRowCount() method
WITHOUT_CLASSIFICATION	{{{ getColumnName() method
WITHOUT_CLASSIFICATION	{{{ getValueAt() method
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ setValueAt() method
WITHOUT_CLASSIFICATION	Text color
WITHOUT_CLASSIFICATION	Background color
WITHOUT_CLASSIFICATION	Structure highlight
WITHOUT_CLASSIFICATION	{{{ addStyleChoice() method
WITHOUT_CLASSIFICATION	{{{ StyleChoice class
WITHOUT_CLASSIFICATION	for sorting
WITHOUT_CLASSIFICATION	for sorting
WITHOUT_CLASSIFICATION	{{{ StyleRenderer class
WITHOUT_CLASSIFICATION	{{{ StyleRenderer constructor
WITHOUT_CLASSIFICATION	{{{ StyleRenderer constructor
WITHOUT_CLASSIFICATION	{{{ StyleEditor constructor
WITHOUT_CLASSIFICATION	{{{ getStyle() method
WITHOUT_CLASSIFICATION	Text font
WITHOUT_CLASSIFICATION	{{{ GutterOptionPane constructor
WITHOUT_CLASSIFICATION	Line numbering
WITHOUT_CLASSIFICATION	Number alignment
WITHOUT_CLASSIFICATION	Border width
WITHOUT_CLASSIFICATION	Marker highlight
WITHOUT_CLASSIFICATION	gutterBorderWidth = new JTextField(jEdit.getProperty("view.gutter.borderWidth"));addComponent(jEdit.getProperty("options.gutter.borderWidth"),gutterBorderWidth);
WITHOUT_CLASSIFICATION	Current line highlight
WITHOUT_CLASSIFICATION	unfocused border color
WITHOUT_CLASSIFICATION	Highlight interval and color
WITHOUT_CLASSIFICATION	Fold marker color
WITHOUT_CLASSIFICATION	Focused border color
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	Background color
WITHOUT_CLASSIFICATION	Status bar visible
WITHOUT_CLASSIFICATION	{{{ StatusBarOptionPane constructor
WITHOUT_CLASSIFICATION	Edit mode
WITHOUT_CLASSIFICATION	Wrap
WITHOUT_CLASSIFICATION	Foreground color
WITHOUT_CLASSIFICATION	Fold mode
WITHOUT_CLASSIFICATION	Caret status
WITHOUT_CLASSIFICATION	Memory status
WITHOUT_CLASSIFICATION	Multi select
WITHOUT_CLASSIFICATION	Encoding
WITHOUT_CLASSIFICATION	Overwrite
WITHOUT_CLASSIFICATION	Memory background color
WITHOUT_CLASSIFICATION	Rect select
WITHOUT_CLASSIFICATION	Line seperator
WITHOUT_CLASSIFICATION	{{{ MouseOptionPane constructor
WITHOUT_CLASSIFICATION	Memory foreground color
WITHOUT_CLASSIFICATION	Clock
WITHOUT_CLASSIFICATION	Non word character selection behavior
WITHOUT_CLASSIFICATION	Text drag and drop
WITHOUT_CLASSIFICATION	Middle mouse button click pastes % register
WITHOUT_CLASSIFICATION	Gutter mouse actions
WITHOUT_CLASSIFICATION	{{{ FirewallOptionPane constructor
WITHOUT_CLASSIFICATION	checkbox
WITHOUT_CLASSIFICATION	checkbox
WITHOUT_CLASSIFICATION	proxy host
WITHOUT_CLASSIFICATION	proxy host
WITHOUT_CLASSIFICATION	proxy port
WITHOUT_CLASSIFICATION	proxy port
WITHOUT_CLASSIFICATION	proxy username
WITHOUT_CLASSIFICATION	proxy password
WITHOUT_CLASSIFICATION	no proxy for
WITHOUT_CLASSIFICATION	{{{ DockingOptionPane constructor
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ Entry class
WITHOUT_CLASSIFICATION	{{{ Entry class
WITHOUT_CLASSIFICATION	{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	{{{ getRowCount() method
WITHOUT_CLASSIFICATION	{{{ getRowCount() method
WITHOUT_CLASSIFICATION	{{{ getColumnName() method
WITHOUT_CLASSIFICATION	{{{ getColumnName() method
WITHOUT_CLASSIFICATION	{{{ getColumnClass() method
WITHOUT_CLASSIFICATION	{{{ getColumnClass() method
WITHOUT_CLASSIFICATION	{{{ getValueAt() method
WITHOUT_CLASSIFICATION	{{{ getValueAt() method
WITHOUT_CLASSIFICATION	{{{ isCellEditable() method
WITHOUT_CLASSIFICATION	{{{ isCellEditable() method
WITHOUT_CLASSIFICATION	{{{ setValueAt() method
WITHOUT_CLASSIFICATION	{{{ setValueAt() method
WITHOUT_CLASSIFICATION	{{{ WindowTableModel constructor
WITHOUT_CLASSIFICATION	{{{ createWindowTableScroller() method
WITHOUT_CLASSIFICATION	{{{ WindowTableModel constructor
WITHOUT_CLASSIFICATION	{{{ createWindowModel() method
WITHOUT_CLASSIFICATION	{{{ DockPositionCellRenderer class
WITHOUT_CLASSIFICATION	{{{ sort() method
WITHOUT_CLASSIFICATION	{{{ WindowTableModel class
WITHOUT_CLASSIFICATION	{{{ sort() method
WITHOUT_CLASSIFICATION	{{{ WindowCompare class
WITHOUT_CLASSIFICATION	{{{ WindowCompare class
WITHOUT_CLASSIFICATION	{{{ GlobalOptions constructor
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ Constructor
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ updateEnabled() method
WITHOUT_CLASSIFICATION	{{{ createOptionTreeModel() method
WITHOUT_CLASSIFICATION	{{{ getDefaultGroup() method
WITHOUT_CLASSIFICATION	{{{ GlobalOptions constructor
WITHOUT_CLASSIFICATION	{{{ GlobalOptions constructor
WITHOUT_CLASSIFICATION	{{{ GlobalOptions constructor
WITHOUT_CLASSIFICATION	{{{ AutosaveBackupOptionPane constructor
WITHOUT_CLASSIFICATION	initialize the jEdit branch of the options tree
WITHOUT_CLASSIFICATION	Backup on every save
WITHOUT_CLASSIFICATION	Autosave interval
WITHOUT_CLASSIFICATION	Install location
WITHOUT_CLASSIFICATION	Backup count
WITHOUT_CLASSIFICATION	Download mirror
WITHOUT_CLASSIFICATION	Backup directory
WITHOUT_CLASSIFICATION	{{{ DownloadMirrorsThread class
WITHOUT_CLASSIFICATION	Backup filename prefix
WITHOUT_CLASSIFICATION	Update mirror list
WITHOUT_CLASSIFICATION	Backup suffix
WITHOUT_CLASSIFICATION	Insert code to update the plugin managers list here later
WITHOUT_CLASSIFICATION	Download source
WITHOUT_CLASSIFICATION	Delete downloaded files
WITHOUT_CLASSIFICATION	{{{ MirrorModel class
WITHOUT_CLASSIFICATION	{{{ AbbrevsOptionPane constructor
WITHOUT_CLASSIFICATION	{{{ SingleSelectionModel class
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ remove() method
WITHOUT_CLASSIFICATION	{{{ remove() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	{{{ getRowCount() method
WITHOUT_CLASSIFICATION	{{{ getRowCount() method
WITHOUT_CLASSIFICATION	{{{ getColumnName() method
WITHOUT_CLASSIFICATION	{{{ getValueAt() method
WITHOUT_CLASSIFICATION	{{{ getValueAt() method
WITHOUT_CLASSIFICATION	{{{ TableMouseHandler class
WITHOUT_CLASSIFICATION	{{{ add() method
WITHOUT_CLASSIFICATION	{{{ add() method
WITHOUT_CLASSIFICATION	{{{ add() method
WITHOUT_CLASSIFICATION	{{{ Renderer class
WITHOUT_CLASSIFICATION	{{{ SelectionHandler class
WITHOUT_CLASSIFICATION	{{{ isCellEditable() method
WITHOUT_CLASSIFICATION	{{{ setValueAt() method
WITHOUT_CLASSIFICATION	{{{ sort() method
WITHOUT_CLASSIFICATION	{{{ sort() method
WITHOUT_CLASSIFICATION	{{{ edit() method
WITHOUT_CLASSIFICATION	{{{ toHashtable() method
WITHOUT_CLASSIFICATION	{{{ HeaderMouseHandler class
WITHOUT_CLASSIFICATION	{{{ toHashtable() method
WITHOUT_CLASSIFICATION	{{{ AbbrevsModel class
WITHOUT_CLASSIFICATION	{{{ AbbrevsModel constructor
WITHOUT_CLASSIFICATION	{{{ AbbrevsModel constructor
WITHOUT_CLASSIFICATION	{{{ AbbrevCompare class
WITHOUT_CLASSIFICATION	{{{ Abbrev class
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ getColumnName() method
WITHOUT_CLASSIFICATION	{{{ updateEnabled() method
WITHOUT_CLASSIFICATION	{{{ isCellEditable() method
WITHOUT_CLASSIFICATION	{{{ setValueAt() method
WITHOUT_CLASSIFICATION	{{{ AbbrevCompare class
WITHOUT_CLASSIFICATION	Ignore case when sorting
WITHOUT_CLASSIFICATION	{{{ BrowserOptionPane constructor
WITHOUT_CLASSIFICATION	Show menu bar
WITHOUT_CLASSIFICATION	Default directory
WITHOUT_CLASSIFICATION	split VFSFileDialog horizontally
WITHOUT_CLASSIFICATION	Show tool bar
WITHOUT_CLASSIFICATION	Show icons
WITHOUT_CLASSIFICATION	Mix files and directories
WITHOUT_CLASSIFICATION	Show hidden files
WITHOUT_CLASSIFICATION	Beep on search auto wrap
WITHOUT_CLASSIFICATION	{{{ ViewOptionPane constructor
WITHOUT_CLASSIFICATION	Double-click close
WITHOUT_CLASSIFICATION	Show full path
WITHOUT_CLASSIFICATION	{{{ AppearanceOptionPane constructor
WITHOUT_CLASSIFICATION	View dock layout
WITHOUT_CLASSIFICATION	Show search bar
WITHOUT_CLASSIFICATION	Primary Metal L&F font
WITHOUT_CLASSIFICATION	Show buffer switcher
WITHOUT_CLASSIFICATION	Menu spillover count
WITHOUT_CLASSIFICATION	Look and feel
WITHOUT_CLASSIFICATION	History count
WITHOUT_CLASSIFICATION	Secondary Metal L&F font
WITHOUT_CLASSIFICATION	Use jEdit colors in all text components
WITHOUT_CLASSIFICATION	Show tip of the day
WITHOUT_CLASSIFICATION	Show splash screen
WITHOUT_CLASSIFICATION	Decorate frames with look and feel (JDK 1.4 only)
WITHOUT_CLASSIFICATION	Decorate dialogs with look and feel (JDK 1.4 only)
WITHOUT_CLASSIFICATION	{{{ PrintOptionPane constructor
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Constructor
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	{{{ getEntry() method
WITHOUT_CLASSIFICATION	{{{ Entry class
WITHOUT_CLASSIFICATION	{{{ Inner classes
WITHOUT_CLASSIFICATION	{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	{{{ getRowCount() method
WITHOUT_CLASSIFICATION	{{{ getColumnName() method
WITHOUT_CLASSIFICATION	{{{ getColumnClass() method
WITHOUT_CLASSIFICATION	{{{ getValueAt() method
WITHOUT_CLASSIFICATION	{{{ isCellEditable() method
WITHOUT_CLASSIFICATION	Font
WITHOUT_CLASSIFICATION	Line numbering
WITHOUT_CLASSIFICATION	Tab size
WITHOUT_CLASSIFICATION	Header
WITHOUT_CLASSIFICATION	Persistent markers
WITHOUT_CLASSIFICATION	Footer
WITHOUT_CLASSIFICATION	{{{ GeneralOptionPane constructor
WITHOUT_CLASSIFICATION	Color
WITHOUT_CLASSIFICATION	Auto detect encoding
WITHOUT_CLASSIFICATION	Line separator
WITHOUT_CLASSIFICATION	Sort recent file list
WITHOUT_CLASSIFICATION	Force 1.3 print dialog
WITHOUT_CLASSIFICATION	Default file encoding
WITHOUT_CLASSIFICATION	Check mod status on focus
WITHOUT_CLASSIFICATION	Create the plugin table
WITHOUT_CLASSIFICATION	Recent file list size
WITHOUT_CLASSIFICATION	Save caret positions
WITHOUT_CLASSIFICATION	Sort buffers by names
WITHOUT_CLASSIFICATION	Session management
WITHOUT_CLASSIFICATION	Confirm save all
WITHOUT_CLASSIFICATION	Sort buffers
WITHOUT_CLASSIFICATION	Two-stage save
WITHOUT_CLASSIFICATION	{{{ ManagePanel constructor
WITHOUT_CLASSIFICATION	Strip trailing EOL
WITHOUT_CLASSIFICATION	Create button panel
WITHOUT_CLASSIFICATION	{{{ showListConfirm() method
WITHOUT_CLASSIFICATION	{{{ PluginTableModel class
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ unloadPluginJAR() method
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	{{{ Inner classes
WITHOUT_CLASSIFICATION	{{{ add() method
WITHOUT_CLASSIFICATION	{{{ setValueAt() method
WITHOUT_CLASSIFICATION	{{{ sort() method
WITHOUT_CLASSIFICATION	{{{ HeaderMouseHandler class
WITHOUT_CLASSIFICATION	{{{ Mirror class
WITHOUT_CLASSIFICATION	{{{ setSortType() method
WITHOUT_CLASSIFICATION	{{{ unloadPluginJARWithDialog() method
WITHOUT_CLASSIFICATION	{{{ loadExtraJARsIfNecessary() method
WITHOUT_CLASSIFICATION	{{{ HelpButton class
WITHOUT_CLASSIFICATION	{{{ transitiveClosure() method
WITHOUT_CLASSIFICATION	{{{ TextRenderer class
WITHOUT_CLASSIFICATION	{{{ EntryCompare class
WITHOUT_CLASSIFICATION	{{{ HideLibrariesButton class
WITHOUT_CLASSIFICATION	{{{ MirrorCompare class
WITHOUT_CLASSIFICATION	{{{ RemoveButton class
WITHOUT_CLASSIFICATION	{{{ MirrorList constructor
WITHOUT_CLASSIFICATION	{{{ finished() method
WITHOUT_CLASSIFICATION	{{{ PluginList constructor
WITHOUT_CLASSIFICATION	{{{ addPlugin() method
WITHOUT_CLASSIFICATION	{{{ addPluginSet() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ handleMessage() method
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	this will result in a slight speed up, since we don't need to read the DTD anyway, as AElfred is non-validating
WITHOUT_CLASSIFICATION	{{{ dispose() method
WITHOUT_CLASSIFICATION	end HandlerBase implementation
WITHOUT_CLASSIFICATION	{{{ dump() method
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ finished() method
WITHOUT_CLASSIFICATION	{{{ Dependency class
WITHOUT_CLASSIFICATION	after the entire list is loaded, fill out plugin field in dependencies
WITHOUT_CLASSIFICATION	{{{ PluginSet class
WITHOUT_CLASSIFICATION	branch.satisfyDependencies(roster,installDirectory, downloadSource);
WITHOUT_CLASSIFICATION	{{{ Plugin class
WITHOUT_CLASSIFICATION	String installed; String installedVersion;
WITHOUT_CLASSIFICATION	{{{ Branch class
WITHOUT_CLASSIFICATION	Force the install tab to refresh for possible change of mirror
WITHOUT_CLASSIFICATION	only used if what is "plugin"
WITHOUT_CLASSIFICATION	{{{ getPluginList() method
WITHOUT_CLASSIFICATION	{{{ getInstance() method
WITHOUT_CLASSIFICATION	{{{ showPluginManager() method
WITHOUT_CLASSIFICATION	Setup panes
WITHOUT_CLASSIFICATION	{{{ PluginManager constructor
WITHOUT_CLASSIFICATION	{{{ updatePluginList() method
WITHOUT_CLASSIFICATION	Create the buttons
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Variables
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	{{{ Entry class
WITHOUT_CLASSIFICATION	{{{ Inner classes
WITHOUT_CLASSIFICATION	{{{ Inner classes
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	{{{ getRowCount() method
WITHOUT_CLASSIFICATION	{{{ getColumnName() method
WITHOUT_CLASSIFICATION	{{{ getColumnClass() method
WITHOUT_CLASSIFICATION	{{{ getValueAt() method
WITHOUT_CLASSIFICATION	{{{ clear() method
WITHOUT_CLASSIFICATION	{{{ isCellEditable() method
WITHOUT_CLASSIFICATION	{{{ setValueAt() method
WITHOUT_CLASSIFICATION	{{{ sort() method
WITHOUT_CLASSIFICATION	{{{ HeaderMouseHandler class
WITHOUT_CLASSIFICATION	{{{ PluginTableModel class
WITHOUT_CLASSIFICATION	{{{ setSortType() method
WITHOUT_CLASSIFICATION	{{{ EntryCompare class
WITHOUT_CLASSIFICATION	{{{ PluginInfoBox class
WITHOUT_CLASSIFICATION	{{{ ListUpdater class
WITHOUT_CLASSIFICATION	Create buttons
WITHOUT_CLASSIFICATION	{{{ InstallPanel constructor
WITHOUT_CLASSIFICATION	Setup the table
WITHOUT_CLASSIFICATION	{{{ updateModel() method
WITHOUT_CLASSIFICATION	Create description
WITHOUT_CLASSIFICATION	{{{ SizeLabel class
WITHOUT_CLASSIFICATION	{{{ formatSize() method
WITHOUT_CLASSIFICATION	{{{ setSelectAll() method
WITHOUT_CLASSIFICATION	{{{ SelectallButton class
WITHOUT_CLASSIFICATION	{{{ isDownloadingList() method
WITHOUT_CLASSIFICATION	{{{ InstallButton class
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ Constructor
WITHOUT_CLASSIFICATION	{{{ Variables
WITHOUT_CLASSIFICATION	this will result in a slight speed up, since we don't need to read the DTD anyway, as AElfred is non-validating
WITHOUT_CLASSIFICATION	{{{ WindowHandler class
WITHOUT_CLASSIFICATION	{{{ resolveEntity() method
WITHOUT_CLASSIFICATION	{{{ attribute() method
WITHOUT_CLASSIFICATION	{{{ doctypeDecl() method
WITHOUT_CLASSIFICATION	{{{ charData() method
WITHOUT_CLASSIFICATION	{{{ startElement() method
WITHOUT_CLASSIFICATION	{{{ endElement() method
WITHOUT_CLASSIFICATION	{{{ startDocument() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ PluginManagerProgress constructor
WITHOUT_CLASSIFICATION	{{{ TextRenderer
WITHOUT_CLASSIFICATION	{{{ RosterThread class
WITHOUT_CLASSIFICATION	{{{ endDocument() method
WITHOUT_CLASSIFICATION	{{{ setValue() method
WITHOUT_CLASSIFICATION	{{{ BufferPrintable constructor
WITHOUT_CLASSIFICATION	{{{ done() method
WITHOUT_CLASSIFICATION	progress value as of start of current task
WITHOUT_CLASSIFICATION	Change any white text to black
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ Static variables
WITHOUT_CLASSIFICATION	buffer.readLock();
WITHOUT_CLASSIFICATION	buffer.readUnlock();
WITHOUT_CLASSIFICATION	{{{ printPage() method
WITHOUT_CLASSIFICATION	{{{ print() method
WITHOUT_CLASSIFICATION	{{{ print() method
WITHOUT_CLASSIFICATION	{{{ print() method
WITHOUT_CLASSIFICATION	{{{ print() method
WITHOUT_CLASSIFICATION	{{{ calculate tab size
WITHOUT_CLASSIFICATION	{{{ nextTabStop() method
WITHOUT_CLASSIFICATION	{{{ determine line number width
WITHOUT_CLASSIFICATION	{{{ paintHeader() method
WITHOUT_CLASSIFICATION	the +1's ensure that 99 gets 3 digits, 103 gets 4 digits, and so on.
WITHOUT_CLASSIFICATION	no need to always keep the same job name for every printout.
WITHOUT_CLASSIFICATION	now that we know how many chars there are, get the width.
WITHOUT_CLASSIFICATION	{{{ getPrintJob() method
WITHOUT_CLASSIFICATION	{{{ paintFooter() method
WITHOUT_CLASSIFICATION	{{{ getPrintJob() method
WITHOUT_CLASSIFICATION	{{{ PrintTabExpander class
WITHOUT_CLASSIFICATION	{{{ getPageFormat() method
WITHOUT_CLASSIFICATION	{{{ PrintTabExpander constructor
WITHOUT_CLASSIFICATION	{{{ getPageFormat() method
WITHOUT_CLASSIFICATION	format.setOrientation(PageFormat.PORTRAIT);
WITHOUT_CLASSIFICATION	{{{ pageSetup() method
WITHOUT_CLASSIFICATION	{{{ pageSetup() method
WITHOUT_CLASSIFICATION	for backwards compatibility, the color variable is stored also as a property
WITHOUT_CLASSIFICATION	for backwards compatibility, the color variable is stored also as a property
WITHOUT_CLASSIFICATION	convert from PrintRequestAttributeSet to the pageFormat
WITHOUT_CLASSIFICATION	{{{ savePrintSpec() method
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	{{{ getCode() method
WITHOUT_CLASSIFICATION	doesnt exist?? pf.setOrientation(PageFormat.REVERSE_PORTRAIT); then just do the next best thing
WITHOUT_CLASSIFICATION	{{{ getBuffer() method
WITHOUT_CLASSIFICATION	if 'temp' is true, hide search bar after user is done with it
WITHOUT_CLASSIFICATION	{{{ getField() method
WITHOUT_CLASSIFICATION	{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	{{{ getSelection() method
WITHOUT_CLASSIFICATION	{{{ Occur constructor
WITHOUT_CLASSIFICATION	{{{ bufferClosed() method
WITHOUT_CLASSIFICATION	cached for speed
WITHOUT_CLASSIFICATION	{{{ bufferClosed() method
WITHOUT_CLASSIFICATION	{{{ goTo() method
WITHOUT_CLASSIFICATION	{{{ Create the timer used by incremental search
WITHOUT_CLASSIFICATION	{{{ HyperSearchResult constructor
WITHOUT_CLASSIFICATION	{{{ addOccur() method
WITHOUT_CLASSIFICATION	{{{ bufferOpened() method
WITHOUT_CLASSIFICATION	{{{ bufferOpened() method
WITHOUT_CLASSIFICATION	{{{ getFirstFile() method
WITHOUT_CLASSIFICATION	{{{ pathEquals() method
WITHOUT_CLASSIFICATION	{{{ getFileCount() method
WITHOUT_CLASSIFICATION	{{{ Occur class
WITHOUT_CLASSIFICATION	{{{ getNextFile() method
WITHOUT_CLASSIFICATION	not supported for arbitriary filesets
WITHOUT_CLASSIFICATION	-1 so that the last isn't checked
WITHOUT_CLASSIFICATION	not found at all.
WITHOUT_CLASSIFICATION	{{{ getFiles() method
WITHOUT_CLASSIFICATION	{{{ invalidateCachedList() method
WITHOUT_CLASSIFICATION	{{{ SearchBar constructor
WITHOUT_CLASSIFICATION	{{{ setHyperSearch() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	{{{ Inner classes
WITHOUT_CLASSIFICATION	{{{ getDirectory() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ setDirectory() method
WITHOUT_CLASSIFICATION	{{{ KeyHandler class
WITHOUT_CLASSIFICATION	{{{ DocumentHandler class
WITHOUT_CLASSIFICATION	{{{ insertUpdate() method
WITHOUT_CLASSIFICATION	{{{ insertUpdate() method
WITHOUT_CLASSIFICATION	{{{ removeUpdate() method
WITHOUT_CLASSIFICATION	{{{ removeUpdate() method
WITHOUT_CLASSIFICATION	{{{ changedUpdate() method
WITHOUT_CLASSIFICATION	{{{ changedUpdate() method
WITHOUT_CLASSIFICATION	not found at all.
WITHOUT_CLASSIFICATION	{{{ find() method
WITHOUT_CLASSIFICATION	close button only there if 'temp' is true
WITHOUT_CLASSIFICATION	{{{ If nothing entered, show search and replace dialog box
WITHOUT_CLASSIFICATION	}}} {{{ HyperSearch
WITHOUT_CLASSIFICATION	}}} {{{ Incremental search
WITHOUT_CLASSIFICATION	on enter, start search from end of current match to find next one
WITHOUT_CLASSIFICATION	not found. start from beginning
WITHOUT_CLASSIFICATION	inform user search restarted
WITHOUT_CLASSIFICATION	beep if beep property set
WITHOUT_CLASSIFICATION	{{{ incrementalSearch() method
WITHOUT_CLASSIFICATION	For example, if the current fileset is a directory, C+g will find the next match within that fileset. This can be annoying if you have just done an incremental search and want the next occurrence in the current buffer.
WITHOUT_CLASSIFICATION	{{{ timerIncrementalSearch() method
WITHOUT_CLASSIFICATION	on insert, start search from beginning of current match. This will continue to highlight the current match until another match is found
WITHOUT_CLASSIFICATION	on backspace, restart from beginning
WITHOUT_CLASSIFICATION	on backspace, restart from beginning
WITHOUT_CLASSIFICATION	don't beep if not found. subsequent beeps are very annoying when backspacing an invalid search string.
WITHOUT_CLASSIFICATION	{{{ DirectoryListSet constructor
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ handleMessage() method
WITHOUT_CLASSIFICATION	{{{ getCode() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ removeNotify() method
WITHOUT_CLASSIFICATION	{{{ KeyHandler class
WITHOUT_CLASSIFICATION	{{{ focusOnDefaultComponent() method
WITHOUT_CLASSIFICATION	{{{ addNotify() method
WITHOUT_CLASSIFICATION	on insert, start search from beginning of current match. This will continue to highlight the current match until another match is found
WITHOUT_CLASSIFICATION	don't beep if not found. subsequent beeps are very annoying when backspacing an invalid search string.
WITHOUT_CLASSIFICATION	{{{ setRecursive() method
WITHOUT_CLASSIFICATION	reverse regexp search not supported yet, so 'simulate' with restart
WITHOUT_CLASSIFICATION	reverse regexp search not supported yet, so 'simulate' with restart
WITHOUT_CLASSIFICATION	{{{ getTreeModel() method
WITHOUT_CLASSIFICATION	{{{ getFileFilter() method
WITHOUT_CLASSIFICATION	{{{ _getFiles() method
WITHOUT_CLASSIFICATION	{{{ setFileFilter() method
WITHOUT_CLASSIFICATION	{{{ isRecursive() method
WITHOUT_CLASSIFICATION	{{{ getTree() method
WITHOUT_CLASSIFICATION	{{{ HyperSearchResults constructor
WITHOUT_CLASSIFICATION	{{{ searchDone() method
WITHOUT_CLASSIFICATION	{{{ visitBuffers() method
WITHOUT_CLASSIFICATION	{{{ searchStarted() method
WITHOUT_CLASSIFICATION	BufferUpdate.CLOSED
WITHOUT_CLASSIFICATION	{{{ updateMultiStatus() method
WITHOUT_CLASSIFICATION	{{{ searchFailed() method
WITHOUT_CLASSIFICATION	collapse all nodes, as suggested on user mailing list...
WITHOUT_CLASSIFICATION	{{{ goToSelectedNode() method
WITHOUT_CLASSIFICATION	do nothing if clicked "foo (showing n occurrences in m files)"
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ mousePressed() method
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	{{{ Getters and setters
WITHOUT_CLASSIFICATION	{{{ showPopupMenu method
WITHOUT_CLASSIFICATION	{{{ ResultCellRenderer class
WITHOUT_CLASSIFICATION	{{{ RemoveTreeNodeAction class
WITHOUT_CLASSIFICATION	{{{ ResultVisitor interface
WITHOUT_CLASSIFICATION	{{{ RemoveAllTreeNodesAction class
WITHOUT_CLASSIFICATION	{{{ ResultCellRenderer constructor
WITHOUT_CLASSIFICATION	{{{ getRegexp() method
WITHOUT_CLASSIFICATION	{{{ getTreeCellRendererComponent() method
WITHOUT_CLASSIFICATION	{{{ BufferLoadedVisitor class
WITHOUT_CLASSIFICATION	{{{ setIgnoreCase() method
WITHOUT_CLASSIFICATION	{{{ BufferClosedVisitor class
WITHOUT_CLASSIFICATION	{{{ Match class
WITHOUT_CLASSIFICATION	{{{ setReverseSearch() method
WITHOUT_CLASSIFICATION	{{{ getIgnoreCase() method
WITHOUT_CLASSIFICATION	{{{ getBeanShellReplace() method
WITHOUT_CLASSIFICATION	{{{ setRegexp() method
WITHOUT_CLASSIFICATION	{{{ getReverseSearch() method
WITHOUT_CLASSIFICATION	{{{ setAutoWrap() method
WITHOUT_CLASSIFICATION	{{{ setBeanShellReplace() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ dispose() method
WITHOUT_CLASSIFICATION	{{{ find() method
WITHOUT_CLASSIFICATION	{{{ find() method
WITHOUT_CLASSIFICATION	{{{ find() method
WITHOUT_CLASSIFICATION	beep if beep property set
WITHOUT_CLASSIFICATION	{{{ setSearchFileSet() method
WITHOUT_CLASSIFICATION	{{{ getAutoWrap() method
WITHOUT_CLASSIFICATION	{{{ setSearchMatcher() method
WITHOUT_CLASSIFICATION	start search from beginning
WITHOUT_CLASSIFICATION	{{{ getSearchMatcher() method
WITHOUT_CLASSIFICATION	{{{ Actions
WITHOUT_CLASSIFICATION	{{{ getSearchFileSet() method
WITHOUT_CLASSIFICATION	component that will parent any dialog boxes
WITHOUT_CLASSIFICATION	{{{ getSmartCaseReplace() method
WITHOUT_CLASSIFICATION	{{{ hyperSearch() method
WITHOUT_CLASSIFICATION	{{{ hyperSearch() method
WITHOUT_CLASSIFICATION	component that will parent any dialog boxes
WITHOUT_CLASSIFICATION	component that will parent any dialog boxes
WITHOUT_CLASSIFICATION	component that will parent any dialog boxes
WITHOUT_CLASSIFICATION	component that will parent any dialog boxes
WITHOUT_CLASSIFICATION	Wait for the buffer to load
WITHOUT_CLASSIFICATION	the start and end flags will be wrong with reverse search enabled, but they are only used by the regexp matcher, which doesn't support reverse search yet. REMIND: fix flags when adding reverse regexp search.
WITHOUT_CLASSIFICATION	make sure end of match is visible
WITHOUT_CLASSIFICATION	make sure start of match is visible
WITHOUT_CLASSIFICATION	{{{ replace() method
WITHOUT_CLASSIFICATION	{{{ replace() method
WITHOUT_CLASSIFICATION	so that Replace and Find continues from the right location
WITHOUT_CLASSIFICATION	{{{ replaceAll() method
WITHOUT_CLASSIFICATION	Wait for buffer to finish loading
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ handleMessage() method
WITHOUT_CLASSIFICATION	{{{ record() method
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ load() method
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ Constants
WITHOUT_CLASSIFICATION	{{{ preloadSearchDialog() method
WITHOUT_CLASSIFICATION	Don't do this when playing a macro, cos it's annoying
WITHOUT_CLASSIFICATION	{{{ handleError() method
WITHOUT_CLASSIFICATION	Tags plugin likes to call this method at times other than startup; so we need to fire a SearchSettingsChanged to notify the search bar and so on.
WITHOUT_CLASSIFICATION	{{{ regexpBeanShellReplace() method
WITHOUT_CLASSIFICATION	{{{ initReplace() method
WITHOUT_CLASSIFICATION	only record this if doing a find next
WITHOUT_CLASSIFICATION	{{{ regexpReplace() method
WITHOUT_CLASSIFICATION	{{{ replaceInSelection() method
WITHOUT_CLASSIFICATION	{{{ showSearchDialog() method
WITHOUT_CLASSIFICATION	{{{ _replace() method
WITHOUT_CLASSIFICATION	{{{ literalBeanShellReplace() method
WITHOUT_CLASSIFICATION	{{{ replaceOne() method
WITHOUT_CLASSIFICATION	{{{ replaceOne() method
WITHOUT_CLASSIFICATION	{{{ getColumnOnOtherLine() method
WITHOUT_CLASSIFICATION	{{{ getSearchDialog() method
WITHOUT_CLASSIFICATION	might be already selected, see above.
WITHOUT_CLASSIFICATION	this property is only loaded and saved if the 'current buffer' file set is selected. otherwise, it defaults to on.
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	can't happen
WITHOUT_CLASSIFICATION	{{{ getCode() method
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ load() method
WITHOUT_CLASSIFICATION	{{{ Inner classes
WITHOUT_CLASSIFICATION	{{{ createFieldPanel() method
WITHOUT_CLASSIFICATION	{{{ updateEnabled() method
WITHOUT_CLASSIFICATION	{{{ getFileFilter() method
WITHOUT_CLASSIFICATION	{{{ SearchDialog constructor
WITHOUT_CLASSIFICATION	fields
WITHOUT_CLASSIFICATION	search settings
WITHOUT_CLASSIFICATION	replaceBtn = new JButton(jEdit.getProperty("search.replaceBtn"));replaceBtn.setMnemonic(jEdit.getProperty("search.replaceBtn.mnemonic").charAt(0));grid.add(replaceBtn);replaceBtn.addActionListener(actionHandler);
WITHOUT_CLASSIFICATION	multifile settings
WITHOUT_CLASSIFICATION	{{{ createSearchSettingsPanel() method
WITHOUT_CLASSIFICATION	buttons
WITHOUT_CLASSIFICATION	{{{ closeOrKeepDialog() method
WITHOUT_CLASSIFICATION	replaceBtn,
WITHOUT_CLASSIFICATION	replaceBtn,
WITHOUT_CLASSIFICATION	replaceBtn,
WITHOUT_CLASSIFICATION	replaceBtn,
WITHOUT_CLASSIFICATION	prevents us from handling SearchSettingsChanged as a result of below
WITHOUT_CLASSIFICATION	{{{ createMultiFilePanel() method
WITHOUT_CLASSIFICATION	source is directory or filter field
WITHOUT_CLASSIFICATION	{{{ createButtonsPanel() method
WITHOUT_CLASSIFICATION	{{{ synchronizeMultiFileSettings() method
WITHOUT_CLASSIFICATION	{{{ ReplaceActionHandler class
WITHOUT_CLASSIFICATION	source is directory or filter field
WITHOUT_CLASSIFICATION	{{{ SettingsActionHandler class
WITHOUT_CLASSIFICATION	{{{ MyJRadioButton class
WITHOUT_CLASSIFICATION	{{{ MultiFileActionHandler class
WITHOUT_CLASSIFICATION	{{{ ButtonActionHandler class
WITHOUT_CLASSIFICATION	{{{ AllBufferSet constructor
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ getCode() method
WITHOUT_CLASSIFICATION	{{{ run() method
WITHOUT_CLASSIFICATION	{{{ getFirstFile() method
WITHOUT_CLASSIFICATION	{{{ getNextFile() method
WITHOUT_CLASSIFICATION	{{{ getFiles() method
WITHOUT_CLASSIFICATION	{{{ getFileCount() method
WITHOUT_CLASSIFICATION	{{{ _getFiles() method
WITHOUT_CLASSIFICATION	{{{ searchInSelection() method
WITHOUT_CLASSIFICATION	just as if Enter was pressed in another text field
WITHOUT_CLASSIFICATION	just as if Enter was pressed in another text field
WITHOUT_CLASSIFICATION	to minimise synchronization and stuff like that, we only show a status message at most twice a second
WITHOUT_CLASSIFICATION	{{{ HyperSearchRequest constructor
WITHOUT_CLASSIFICATION	{{{ match() method
WITHOUT_CLASSIFICATION	initially zero, so that we always show the first message
WITHOUT_CLASSIFICATION	{{{ BoyerMooreSearchMatcher constructor
WITHOUT_CLASSIFICATION	{{{ doHyperSearch() method
WITHOUT_CLASSIFICATION	{{{ doHyperSearch() method
WITHOUT_CLASSIFICATION	{{{ doHyperSearch() method
WITHOUT_CLASSIFICATION	{{{ nextMatch() method
WITHOUT_CLASSIFICATION	position variable for pattern test position
WITHOUT_CLASSIFICATION	a good introduction to the Boyer-Moore fast string matching algorithm may be found on Moore's website at: http:www.cs.utexas.edu/users/moore/best-ideas/string-searching/
WITHOUT_CLASSIFICATION	pattern test
WITHOUT_CLASSIFICATION	position variable for pattern start
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ nextMatch() method
WITHOUT_CLASSIFICATION	heuristic #2
WITHOUT_CLASSIFICATION	last possible start position of a match with this pattern; this is negative if the pattern is longer than the text causing the search loop below to immediately fail int last_anchor = reverseSearch ? offset + pattern.length - 1 : length - pattern.length;
WITHOUT_CLASSIFICATION	the search works by starting the anchor (first character of the pattern) at the initial offset. as long as the anchor is far enough from the enough of the text for the pattern to match, and until the pattern matches, we compare the pattern to the text from the last character to the first character in reverse order. where a character in the pattern mismatches, we use the two heuristics based on the mismatch character and its position in the pattern to determine the furthest we can move the anchor without missing any potential pattern matches.
WITHOUT_CLASSIFICATION	character mismatch, determine how many characters to skip
WITHOUT_CLASSIFICATION	go back to the while loop
WITHOUT_CLASSIFICATION	heuristic #1
WITHOUT_CLASSIFICATION	MISMATCH: return -1 as defined by API
WITHOUT_CLASSIFICATION	skip the greater of the two distances provided by the heuristics
WITHOUT_CLASSIFICATION	Boyer-Moore helper methods
WITHOUT_CLASSIFICATION	MATCH: return the position of its first character
WITHOUT_CLASSIFICATION	leave the table cleanly-initialized for an empty pattern
WITHOUT_CLASSIFICATION	Boyer-Moore member fields
WITHOUT_CLASSIFICATION	the 'skip' array is used to determine for each index in the hashed alphabet how many characters can be skipped if a mismatch occurs on a characater hashing to that index.
WITHOUT_CLASSIFICATION	{{{ generateSkipArray() method
WITHOUT_CLASSIFICATION	initialize the skip array to all zeros
WITHOUT_CLASSIFICATION	to avoid our skip table having a length of 2 ^ 16, we hash each character of the input into a character in the alphabet [\x00-\xFF] using the lower 8 bits of the character's value (resulting in a more reasonable skip table of length 2 ^ 8). the result of this is that more than one character can hash to the same index, but since the skip table encodes the position of occurence of the character furthest into the string with a particular index (whether or not it is the only character with that index), an index collision only means that that this heuristic will give a sub-optimal skip (i.e. a complete skip table could use the differences between colliding characters to maximal effect, at the expense of building a table that is over 2 orders of magnitude larger and very sparse).
WITHOUT_CLASSIFICATION	{{{ getSkipIndex() method
WITHOUT_CLASSIFICATION	{{{ generateSuffixArray() method
WITHOUT_CLASSIFICATION	{{{ RESearchMatcher constructor
WITHOUT_CLASSIFICATION	never mind
WITHOUT_CLASSIFICATION	{{{ stringToToken() method
WITHOUT_CLASSIFICATION	{{{ createToken() method
WITHOUT_CLASSIFICATION	{{{ addToken() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ Protected members
WITHOUT_CLASSIFICATION	{{{ add() method
WITHOUT_CLASSIFICATION	{{{ add() method
WITHOUT_CLASSIFICATION	{{{ add() method
WITHOUT_CLASSIFICATION	{{{ getLineContext() method
WITHOUT_CLASSIFICATION	{{{ setLineContext() method
WITHOUT_CLASSIFICATION	{{{ setIgnoreCase() method
WITHOUT_CLASSIFICATION	{{{ getIgnoreCase() method
WITHOUT_CLASSIFICATION	unless we are matching to the end of the buffer, $ should not match on the end of the substring
WITHOUT_CLASSIFICATION	unless we are matching from the start of the buffer, ^ should not match on the beginning of the substring
WITHOUT_CLASSIFICATION	{{{ lookup() method
WITHOUT_CLASSIFICATION	{{{ reset() method
WITHOUT_CLASSIFICATION	{{{ Token types
WITHOUT_CLASSIFICATION	{{{ getTokens() method
WITHOUT_CLASSIFICATION	Special:
WITHOUT_CLASSIFICATION	{{{ getNonAlphaNumericChars() method
WITHOUT_CLASSIFICATION	{{{ Token constructor
WITHOUT_CLASSIFICATION	{{{ handleToken() method
WITHOUT_CLASSIFICATION	{{{ regionMatches() method
WITHOUT_CLASSIFICATION	{{{ TokenMarker constructor
WITHOUT_CLASSIFICATION	{{{ getParserRuleSet() method
WITHOUT_CLASSIFICATION	{{{ getKeywords() method
WITHOUT_CLASSIFICATION	{{{ KeywordMap constructor
WITHOUT_CLASSIFICATION	{{{ KeywordMap constructor
WITHOUT_CLASSIFICATION	{{{ addRuleSet() method
WITHOUT_CLASSIFICATION	{{{ getStringMapKey() method
WITHOUT_CLASSIFICATION	{{{ getSegmentMapKey() method
WITHOUT_CLASSIFICATION	{{{ Keyword class
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ markTokens() method
WITHOUT_CLASSIFICATION	{{{ check if we have to stop parsing
WITHOUT_CLASSIFICATION	{{{ getMainRuleSet() method
WITHOUT_CLASSIFICATION	{{{ Set up some instance variables this is to avoid having to pass around lots and lots of parameters.
WITHOUT_CLASSIFICATION	{{{ getRuleSet() method
WITHOUT_CLASSIFICATION	{{{ See if the rule's start or end sequence matches here
WITHOUT_CLASSIFICATION	{{{ getRuleSets() method
WITHOUT_CLASSIFICATION	{{{ Main parser loop
WITHOUT_CLASSIFICATION	stop checking rules if there was a match
WITHOUT_CLASSIFICATION	{{{ check for end of delegate
WITHOUT_CLASSIFICATION	{{{ Mark all remaining characters
WITHOUT_CLASSIFICATION	{{{ check every rule
WITHOUT_CLASSIFICATION	{{{ check if current character is a word separator
WITHOUT_CLASSIFICATION	{{{ checkDelegateEnd() method
WITHOUT_CLASSIFICATION	{{{ Unwind any NO_LINE_BREAK parent delegates
WITHOUT_CLASSIFICATION	{{{ handleRule() method
WITHOUT_CLASSIFICATION	move pos to last character of match sequence
WITHOUT_CLASSIFICATION	check escape rule of parent
WITHOUT_CLASSIFICATION	{{{ Some rules can only match in certain locations
WITHOUT_CLASSIFICATION	{{{ SEQ
WITHOUT_CLASSIFICATION	the end cannot be a regular expression
WITHOUT_CLASSIFICATION	substitute result of matching the rule start into the end string. eg, in shell script mode, <<\s(\w+) is matched into \<$1\> to construct rules for highlighting read-ins like this <<EOF ... EOF
WITHOUT_CLASSIFICATION	{{{ Check for an escape sequence
WITHOUT_CLASSIFICATION	{{{ handleNoWordBreak() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ equals() method
WITHOUT_CLASSIFICATION	this will result in a slight speed up, since we don't need to read the DTD anyway, as AElfred is non-validating
WITHOUT_CLASSIFICATION	{{{ resolveEntity() method
WITHOUT_CLASSIFICATION	{{{ attribute() method
WITHOUT_CLASSIFICATION	{{{ hashCode() method
WITHOUT_CLASSIFICATION	}}} {{{ MARK_FOLLOWING
WITHOUT_CLASSIFICATION	Instead of passing these around to each method, we just store them as instance variables. Note that this is not thread-safe.
WITHOUT_CLASSIFICATION	move pos to last character of match sequence
WITHOUT_CLASSIFICATION	note that all regexps start with \A so they only match the start of the string
WITHOUT_CLASSIFICATION	a DELEGATE attribute on a SEQ changes the ruleset from the end of the SEQ onwards
WITHOUT_CLASSIFICATION	}}} {{{ Handle start of rule
WITHOUT_CLASSIFICATION	break out of inner for loop to check next char }}} {{{ Handle end of MARK_FOLLOWING
WITHOUT_CLASSIFICATION	}}} {{{ SPAN, EOL_SPAN
WITHOUT_CLASSIFICATION	{{{ markKeyword() method
WITHOUT_CLASSIFICATION	}}} {{{ MARK_PREVIOUS
WITHOUT_CLASSIFICATION	{{{ substitute() method
WITHOUT_CLASSIFICATION	{{{ handleTokenWithSpaces() method
WITHOUT_CLASSIFICATION	{{{ Do keywords
WITHOUT_CLASSIFICATION	{{{ Do digits
WITHOUT_CLASSIFICATION	used for SPAN_REGEXP rules; otherwise null
WITHOUT_CLASSIFICATION	only match against regexp if its not all digits; if all digits, no point matching
WITHOUT_CLASSIFICATION	{{{ Handle any remaining crud
WITHOUT_CLASSIFICATION	{{{ clone() method
WITHOUT_CLASSIFICATION	{{{ LineContext class
WITHOUT_CLASSIFICATION	{{{ intern() method
WITHOUT_CLASSIFICATION	{{{ LineContext constructor
WITHOUT_CLASSIFICATION	{{{ LineContext constructor
WITHOUT_CLASSIFICATION	{{{ XModeHandler constructor
WITHOUT_CLASSIFICATION	{{{ charArraysEqual() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	can't happen
WITHOUT_CLASSIFICATION	{{{ error() method
WITHOUT_CLASSIFICATION	{{{ Protected members
WITHOUT_CLASSIFICATION	{{{ doctypeDecl() method
WITHOUT_CLASSIFICATION	{{{ charData() method
WITHOUT_CLASSIFICATION	{{{ startElement() method
WITHOUT_CLASSIFICATION	{{{ endElement() method
WITHOUT_CLASSIFICATION	{{{ startDocument() method
WITHOUT_CLASSIFICATION	{{{ pushElement() method
WITHOUT_CLASSIFICATION	{{{ peekElement() method
WITHOUT_CLASSIFICATION	{{{ popElement() method
WITHOUT_CLASSIFICATION	{{{ getTokenMarker() method
WITHOUT_CLASSIFICATION	{{{ getTokenMarker() method
WITHOUT_CLASSIFICATION	{{{ endDocument() method
WITHOUT_CLASSIFICATION	{{{ reset() method
WITHOUT_CLASSIFICATION	{{{ handleToken() method
WITHOUT_CLASSIFICATION	}}} {{{ MARK_FOLLOWING
WITHOUT_CLASSIFICATION	}}} {{{ MARK_PREVIOUS
WITHOUT_CLASSIFICATION	}}} {{{ EOL_SPAN
WITHOUT_CLASSIFICATION	mixed digit/alpha keyword, and no regexp... don't highlight as DIGIT
WITHOUT_CLASSIFICATION	}}} {{{ RULES
WITHOUT_CLASSIFICATION	{{{ PROPERTY
WITHOUT_CLASSIFICATION	}}} {{{ TERMINATE
WITHOUT_CLASSIFICATION	}}} {{{ PROPS
WITHOUT_CLASSIFICATION	}}} {{{ IMPORT
WITHOUT_CLASSIFICATION	}}} {{{ SEQ_REGEXP
WITHOUT_CLASSIFICATION	}}} {{{ SEQ
WITHOUT_CLASSIFICATION	}}} {{{ SPAN_REGEXP
WITHOUT_CLASSIFICATION	}}} {{{ SPAN
WITHOUT_CLASSIFICATION	{{{ getModeProperties() method
WITHOUT_CLASSIFICATION	}}} {{{ Keywords
WITHOUT_CLASSIFICATION	}}} {{{ EOL_SPAN_REGEXP
WITHOUT_CLASSIFICATION	{{{ addKeyword() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ setLineContext() method
WITHOUT_CLASSIFICATION	{{{ Major actions
WITHOUT_CLASSIFICATION	{{{ paintChunkList() method
WITHOUT_CLASSIFICATION	{{{ paintChunkBackgrounds() method
WITHOUT_CLASSIFICATION	only paint visible chunks
WITHOUT_CLASSIFICATION	only paint visible chunks
WITHOUT_CLASSIFICATION	{{{ Chunk constructor
WITHOUT_CLASSIFICATION	Useful for debugging purposes
WITHOUT_CLASSIFICATION	{{{ Paint token background color if necessary
WITHOUT_CLASSIFICATION	{{{ Chunk constructor
WITHOUT_CLASSIFICATION	{{{ offsetToX() method
WITHOUT_CLASSIFICATION	{{{ offsetToX() method
WITHOUT_CLASSIFICATION	{{{ createSpanRule() method
WITHOUT_CLASSIFICATION	{{{ xToOffset() method
WITHOUT_CLASSIFICATION	{{{ xToOffset() method
WITHOUT_CLASSIFICATION	{{{ getPositions() method
WITHOUT_CLASSIFICATION	set up after init()
WITHOUT_CLASSIFICATION	{{{ Action hints
WITHOUT_CLASSIFICATION	{{{ Position match hints
WITHOUT_CLASSIFICATION	{{{ createRegexpSpanRule() method
WITHOUT_CLASSIFICATION	{{{ createSequenceRule() method
WITHOUT_CLASSIFICATION	{{{ createEOLSpanRule() method
WITHOUT_CLASSIFICATION	{{{ createRegexpSequenceRule() method
WITHOUT_CLASSIFICATION	{{{ createRegexpEOLSpanRule() method
WITHOUT_CLASSIFICATION	{{{ createMarkFollowingRule() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ getName() method
WITHOUT_CLASSIFICATION	{{{ getProperties() method
WITHOUT_CLASSIFICATION	{{{ setProperties() method
WITHOUT_CLASSIFICATION	{{{ setIgnoreCase() method
WITHOUT_CLASSIFICATION	{{{ getIgnoreCase() method
WITHOUT_CLASSIFICATION	{{{ getKeywords() method
WITHOUT_CLASSIFICATION	{{{ addRuleSet() method
WITHOUT_CLASSIFICATION	{{{ getModeName() method
WITHOUT_CLASSIFICATION	{{{ createMarkPreviousRule() method
WITHOUT_CLASSIFICATION	{{{ setEscapeRule() method
WITHOUT_CLASSIFICATION	{{{ createEscapeRule() method
WITHOUT_CLASSIFICATION	{{{ getSetName() method
WITHOUT_CLASSIFICATION	{{{ getStandardRuleSet() method
WITHOUT_CLASSIFICATION	{{{ setKeywords() method
WITHOUT_CLASSIFICATION	{{{ ParserRuleSet constructor
WITHOUT_CLASSIFICATION	{{{ resolveImports() method
WITHOUT_CLASSIFICATION	{{{ getHighlightDigits() method
WITHOUT_CLASSIFICATION	{{{ addRule() method
WITHOUT_CLASSIFICATION	{{{ getDefault() method
WITHOUT_CLASSIFICATION	{{{ getRules() method
WITHOUT_CLASSIFICATION	{{{ setHighlightDigits() method
WITHOUT_CLASSIFICATION	{{{ getRuleCount() method
WITHOUT_CLASSIFICATION	{{{ getTerminateChar() method
WITHOUT_CLASSIFICATION	{{{ getDigitRegexp() method
WITHOUT_CLASSIFICATION	{{{ setTerminateChar() method
WITHOUT_CLASSIFICATION	{{{ setDefault() method
WITHOUT_CLASSIFICATION	{{{ setDigitRegexp() method
WITHOUT_CLASSIFICATION	{{{ getEscapeRule() method
WITHOUT_CLASSIFICATION	{{{ getNoWordSep() method
WITHOUT_CLASSIFICATION	{{{ setNoWordSep() method
WITHOUT_CLASSIFICATION	{{{ isBuiltIn() method
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ bufferClosed() method
WITHOUT_CLASSIFICATION	{{{ handleToken() method
WITHOUT_CLASSIFICATION	{{{ setCharWidth() method
WITHOUT_CLASSIFICATION	SILLY: allow for anti-aliased characters' "fuzz"
WITHOUT_CLASSIFICATION	{{{ canMerge() method
WITHOUT_CLASSIFICATION	don't have chunks longer than 100 characters to avoid slowing things down
WITHOUT_CLASSIFICATION	{{{ getChunkList() method
WITHOUT_CLASSIFICATION	{{{ textAreaDisposed() method
WITHOUT_CLASSIFICATION	{{{ SyntaxStyle constructor
WITHOUT_CLASSIFICATION	{{{ createChunk() method
WITHOUT_CLASSIFICATION	{{{ Static part
WITHOUT_CLASSIFICATION	{{{ initChunk() method
WITHOUT_CLASSIFICATION	{{{ getForegroundColor() method
WITHOUT_CLASSIFICATION	{{{ merge() method
WITHOUT_CLASSIFICATION	in case already initialized; un-initialize it
WITHOUT_CLASSIFICATION	{{{ getBackgroundColor() method
WITHOUT_CLASSIFICATION	{{{ getDisplayManager() method
WITHOUT_CLASSIFICATION	{{{ getFont() method
WITHOUT_CLASSIFICATION	{{{ _notifyScreenLineChanges() method
WITHOUT_CLASSIFICATION	{{{ getCharWidth() method
WITHOUT_CLASSIFICATION	if we got here, no unused display manager in list
WITHOUT_CLASSIFICATION	{{{ isLineVisible() method
WITHOUT_CLASSIFICATION	{{{ releaseDisplayManager() method
WITHOUT_CLASSIFICATION	{{{ getFirstVisibleLine() method
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ getScreenLineCount() method
WITHOUT_CLASSIFICATION	{{{ getNextVisibleLine() method
WITHOUT_CLASSIFICATION	{{{ getLastVisibleLine() method
WITHOUT_CLASSIFICATION	{{{ getPrevVisibleLine() method
WITHOUT_CLASSIFICATION	start of next expanded range
WITHOUT_CLASSIFICATION	in collapsed range
WITHOUT_CLASSIFICATION	in collapsed range
WITHOUT_CLASSIFICATION	start of next expanded range
WITHOUT_CLASSIFICATION	beyond last visible line
WITHOUT_CLASSIFICATION	equal to last visible line
WITHOUT_CLASSIFICATION	last in expanded range
WITHOUT_CLASSIFICATION	end of prev expanded range
WITHOUT_CLASSIFICATION	next in expanded range
WITHOUT_CLASSIFICATION	end of prev expanded range
WITHOUT_CLASSIFICATION	before first visible line
WITHOUT_CLASSIFICATION	prev in expanded range
WITHOUT_CLASSIFICATION	equal to first visible line
WITHOUT_CLASSIFICATION	first in expanded range
WITHOUT_CLASSIFICATION	{{{ Find fold start and end...
WITHOUT_CLASSIFICATION	{{{ collapseFold() method
WITHOUT_CLASSIFICATION	{{{ getScrollLineCount() method
WITHOUT_CLASSIFICATION	scan backwards looking for the start
WITHOUT_CLASSIFICATION	this line is the start of a fold
WITHOUT_CLASSIFICATION	this line is the start of a fold
WITHOUT_CLASSIFICATION	no folds in buffer
WITHOUT_CLASSIFICATION	Collapse the fold...
WITHOUT_CLASSIFICATION	{{{ expandFold() method
WITHOUT_CLASSIFICATION	the first sub-fold. used by JEditTextArea.expandFold().
WITHOUT_CLASSIFICATION	{{{ Find fold start and fold end...
WITHOUT_CLASSIFICATION	isLineVisible(i) &&
WITHOUT_CLASSIFICATION	XXX
WITHOUT_CLASSIFICATION	{{{ Expand the fold...
WITHOUT_CLASSIFICATION	we need a different value of initialFoldLevel here!
WITHOUT_CLASSIFICATION	{{{ expandAllFolds() method
WITHOUT_CLASSIFICATION	{{{ expandFolds() method
WITHOUT_CLASSIFICATION	{{{ expandFolds() method
WITHOUT_CLASSIFICATION	this ensures that the first line is always visible
WITHOUT_CLASSIFICATION	{{{ narrow() method
WITHOUT_CLASSIFICATION	if we narrowed to a single collapsed fold
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ dispose() method
WITHOUT_CLASSIFICATION	{{{ changed() method
WITHOUT_CLASSIFICATION	{{{ changed() method
WITHOUT_CLASSIFICATION	{{{ setScreenLineCount() method
WITHOUT_CLASSIFICATION	{{{ reset() method
WITHOUT_CLASSIFICATION	{{{ reset() method
WITHOUT_CLASSIFICATION	{{{ _notifyScreenLineChanges() method
WITHOUT_CLASSIFICATION	XXX
WITHOUT_CLASSIFICATION	when the text area switches to us, it will do a reset anyway
WITHOUT_CLASSIFICATION	this notifies each display manager editing this buffer of the screen line count change
WITHOUT_CLASSIFICATION	{{{ fvmget() method
WITHOUT_CLASSIFICATION	{{{ updateWrapSettings() method
WITHOUT_CLASSIFICATION	{{{ DisplayManager constructor
WITHOUT_CLASSIFICATION	{{{ showLineRange() method
WITHOUT_CLASSIFICATION	{{{ fvmput() method
WITHOUT_CLASSIFICATION	{{{ hideLineRange() method
WITHOUT_CLASSIFICATION	{{{ fvmreset() method
WITHOUT_CLASSIFICATION	important: not lineMgr.getScreenLineCount()
WITHOUT_CLASSIFICATION	{{{ fvmput2() method
WITHOUT_CLASSIFICATION	ScrollLineCount.changed() does the same thing
WITHOUT_CLASSIFICATION	{{{ fvmdump() method
WITHOUT_CLASSIFICATION	{{{ _setScreenLineCount() method
WITHOUT_CLASSIFICATION	update fold visibility map.
WITHOUT_CLASSIFICATION	update fold visibility map.
WITHOUT_CLASSIFICATION	{{{ FirstLine class
WITHOUT_CLASSIFICATION	{{{ Anchor class
WITHOUT_CLASSIFICATION	{{{ Debug code
WITHOUT_CLASSIFICATION	{{{ ScrollLineCount class
WITHOUT_CLASSIFICATION	{{{ Debug code
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ contentInserted() method
WITHOUT_CLASSIFICATION	{{{ contentRemoved() method
WITHOUT_CLASSIFICATION	{{{ foldLevelChanged() method
WITHOUT_CLASSIFICATION	{{{ preContentRemoved() method
WITHOUT_CLASSIFICATION	{{{ transactionComplete() method
WITHOUT_CLASSIFICATION	{{{ foldHandlerChanged() method
WITHOUT_CLASSIFICATION	update fold visibility map.
WITHOUT_CLASSIFICATION	{{{ Debug code
WITHOUT_CLASSIFICATION	JEditTextArea.scrollTo() needs this to simplify its code
WITHOUT_CLASSIFICATION	JEditTextArea.scrollTo() needs this to simplify its code
WITHOUT_CLASSIFICATION	{{{ physUp() method scroll up by physical line amount
WITHOUT_CLASSIFICATION	{{{ scrollDown() method scroll down by screen line amount
WITHOUT_CLASSIFICATION	{{{ scrollUp() method scroll up by screen line amount
WITHOUT_CLASSIFICATION	{{{ ensurePhysicalLineIsVisible() method
WITHOUT_CLASSIFICATION	{{{ BufferChangeHandler class
WITHOUT_CLASSIFICATION	System.err.println("foldLevelChanged " + (start-1) + " to " + textArea.getLastPhysicalLine() + "," + end);
WITHOUT_CLASSIFICATION	{{{ resize selections if necessary
WITHOUT_CLASSIFICATION	{{{ resize selections if necessary
WITHOUT_CLASSIFICATION	both have same visibility; just remove anything in between.
WITHOUT_CLASSIFICATION	we're removing from before the first visible to after the last visible
WITHOUT_CLASSIFICATION	collapse 2
WITHOUT_CLASSIFICATION	we're removing from the first visible to after the last visible
WITHOUT_CLASSIFICATION	shift
WITHOUT_CLASSIFICATION	update
WITHOUT_CLASSIFICATION	will be handled later. see comments at the end of transactionComplete().
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ contentInserted() method
WITHOUT_CLASSIFICATION	{{{ preContentRemoved() method
WITHOUT_CLASSIFICATION	XXX
WITHOUT_CLASSIFICATION	{{{ setBorder() method
WITHOUT_CLASSIFICATION	{{{ doDelayedUpdate() method
WITHOUT_CLASSIFICATION	must update screen line counts before we call _notifyScreenLineChanges() since that calls updateScrollBars() which needs valid info
WITHOUT_CLASSIFICATION	must be before the below call so that the chunk cache is not updated with an invisible first line (see above)
WITHOUT_CLASSIFICATION	update visible lines
WITHOUT_CLASSIFICATION	force the fold levels to be updated.
WITHOUT_CLASSIFICATION	when painting the last line of a buffer, Buffer.isFoldStart() doesn't call getFoldLevel(), hence the foldLevelChanged() event might not be sent for the previous line.
WITHOUT_CLASSIFICATION	{{{ delayedUpdate() method
WITHOUT_CLASSIFICATION	{{{ caretAutoScroll() method
WITHOUT_CLASSIFICATION	{{{ updateBorder() method
WITHOUT_CLASSIFICATION	{{{ Layers
WITHOUT_CLASSIFICATION	{{{ paintComponent() method
WITHOUT_CLASSIFICATION	{{{ getToolTipText() method
WITHOUT_CLASSIFICATION	{{{ getToolTipText() method
WITHOUT_CLASSIFICATION	{{{ Match class
WITHOUT_CLASSIFICATION	{{{ paintInvalidLine() method
WITHOUT_CLASSIFICATION	{{{ paintScreenLineRange() method
WITHOUT_CLASSIFICATION	{{{ selectMatch() method
WITHOUT_CLASSIFICATION	{{{ paintValidLine() method
WITHOUT_CLASSIFICATION	fill the background
WITHOUT_CLASSIFICATION	{{{ MouseActions constructor
WITHOUT_CLASSIFICATION	{{{ BracketMatcher class
WITHOUT_CLASSIFICATION	{{{ getActionForEvent() method
WITHOUT_CLASSIFICATION	{{{ removeExtension() method
WITHOUT_CLASSIFICATION	{{{ getMatch() method
WITHOUT_CLASSIFICATION	if buffer is loading, don't paint anything
WITHOUT_CLASSIFICATION	{{{ Highlight class
WITHOUT_CLASSIFICATION	{{{ Gutter constructor
WITHOUT_CLASSIFICATION	{{{ getExtensions() method
WITHOUT_CLASSIFICATION	{{{ addExtension() method
WITHOUT_CLASSIFICATION	{{{ addExtension() method
WITHOUT_CLASSIFICATION	{{{ setBorder() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ getMinimumSize() method
WITHOUT_CLASSIFICATION	{{{ toggleExpanded() method
WITHOUT_CLASSIFICATION	{{{ getPreferredSize() method
WITHOUT_CLASSIFICATION	{{{ Getters and setters
WITHOUT_CLASSIFICATION	Component.getPreferredSize() is overridden here to support the collapsing behavior.
WITHOUT_CLASSIFICATION	JComponent.setBorder(Border) is overridden here to cache the left inset of the border (if any) to avoid having to fetch it during every repaint.
WITHOUT_CLASSIFICATION	{{{ getHighlightedForeground() method
WITHOUT_CLASSIFICATION	{{{ setFont() method
WITHOUT_CLASSIFICATION	{{{ setHighlightInterval() method
WITHOUT_CLASSIFICATION	JComponent.setFont(Font) is overridden here to cache the baseline for the font. This avoids having to get the font metrics during every repaint.
WITHOUT_CLASSIFICATION	{{{ setHighlightedForeground() method
WITHOUT_CLASSIFICATION	{{{ getLineNumberAlignment() method
WITHOUT_CLASSIFICATION	{{{ getCurrentLineForeground() method
WITHOUT_CLASSIFICATION	{{{ isStructureHighlightEnabled() method
WITHOUT_CLASSIFICATION	{{{ setCurrentLineForeground() method
WITHOUT_CLASSIFICATION	{{{ setLineNumberAlignment() method
WITHOUT_CLASSIFICATION	{{{ getFoldColor() method
WITHOUT_CLASSIFICATION	{{{ isCurrentLineHighlightEnabled() method
WITHOUT_CLASSIFICATION	{{{ setFoldColor() method
WITHOUT_CLASSIFICATION	{{{ isMarkerHighlightEnabled()
WITHOUT_CLASSIFICATION	{{{ isExpanded() method
WITHOUT_CLASSIFICATION	{{{ setCurrentLineHighlightEnabled() method
WITHOUT_CLASSIFICATION	{{{ setExpanded() method
WITHOUT_CLASSIFICATION	{{{ setStructureHighlightEnabled() method
WITHOUT_CLASSIFICATION	{{{ getHighlightInterval() method
WITHOUT_CLASSIFICATION	{{{ getStructureHighlightColor() method
WITHOUT_CLASSIFICATION	{{{ getMarkerHighlightColor() method
WITHOUT_CLASSIFICATION	{{{ setStructureHighlightColor() method
WITHOUT_CLASSIFICATION	{{{ setMarkerHighlightColor() method
WITHOUT_CLASSIFICATION	{{{ isMarkerHighlightEnabled() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ Layers
WITHOUT_CLASSIFICATION	{{{ mousePressed() method
WITHOUT_CLASSIFICATION	{{{ mouseReleased() method
WITHOUT_CLASSIFICATION	{{{ isManagingFocus() method
WITHOUT_CLASSIFICATION	{{{ getFocusTraversalKeysEnabled() method
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	{{{ getToolTipText() method
WITHOUT_CLASSIFICATION	{{{ mouseDragged() method
WITHOUT_CLASSIFICATION	{{{ setBounds() method
WITHOUT_CLASSIFICATION	{{{ mouseExited() method
WITHOUT_CLASSIFICATION	{{{ Getters and setters
WITHOUT_CLASSIFICATION	{{{ paintValidLine() method
WITHOUT_CLASSIFICATION	{{{ mouseEntered() method
WITHOUT_CLASSIFICATION	{{{ paintLine() method
WITHOUT_CLASSIFICATION	draw |
WITHOUT_CLASSIFICATION	Skip lines beyond EOF
WITHOUT_CLASSIFICATION	{{{ Handle actions
WITHOUT_CLASSIFICATION	{{{ Paint fold triangles
WITHOUT_CLASSIFICATION	draw |^
WITHOUT_CLASSIFICATION	draw |_
WITHOUT_CLASSIFICATION	{{{ Paint line numbers
WITHOUT_CLASSIFICATION	{{{ MarkerHighlight class
WITHOUT_CLASSIFICATION	{{{ Determine action
WITHOUT_CLASSIFICATION	{{{ setStyles() method
WITHOUT_CLASSIFICATION	&& e.getX() >= getWidth() - borderWidth 2
WITHOUT_CLASSIFICATION	{{{ getStyles() method
WITHOUT_CLASSIFICATION	{{{ setCaretColor() method
WITHOUT_CLASSIFICATION	{{{ getCaretColor() method
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ isAntiAliasEnabled() method
WITHOUT_CLASSIFICATION	{{{ setAntiAliasEnabled() method
WITHOUT_CLASSIFICATION	{{{ getStructureHighlightColor() method
WITHOUT_CLASSIFICATION	{{{ setStructureHighlightColor() method
WITHOUT_CLASSIFICATION	{{{ isStructureHighlightEnabled() method
WITHOUT_CLASSIFICATION	{{{ setStructureHighlightEnabled() method
WITHOUT_CLASSIFICATION	{{{ isBlockCaretEnabled() method
WITHOUT_CLASSIFICATION	assumed this is called after a font render context is set up. changing font render context settings without a setStyles() call will not reset cached monospaced font info.
WITHOUT_CLASSIFICATION	{{{ getMultipleSelectionColor() method
WITHOUT_CLASSIFICATION	{{{ getSelectionColor() method
WITHOUT_CLASSIFICATION	{{{ getWrapGuideColor() method
WITHOUT_CLASSIFICATION	{{{ setSelectionColor() method
WITHOUT_CLASSIFICATION	{{{ setMultipleSelectionColor() method
WITHOUT_CLASSIFICATION	{{{ setBlockCaretEnabled() method
WITHOUT_CLASSIFICATION	{{{ getLineHighlightColor() method
WITHOUT_CLASSIFICATION	{{{ setLineHighlightColor() method
WITHOUT_CLASSIFICATION	{{{ getEOLMarkerColor() method
WITHOUT_CLASSIFICATION	{{{ isLineHighlightEnabled() method
WITHOUT_CLASSIFICATION	{{{ setWrapGuideColor() method
WITHOUT_CLASSIFICATION	{{{ setLineHighlightEnabled() method
WITHOUT_CLASSIFICATION	{{{ setFractionalFontMetricsEnabled() method
WITHOUT_CLASSIFICATION	{{{ setEOLMarkerColor() method
WITHOUT_CLASSIFICATION	{{{ isWrapGuidePainted() method
WITHOUT_CLASSIFICATION	{{{ getEOLMarkersPainted() method
WITHOUT_CLASSIFICATION	{{{ setEOLMarkersPainted() method
WITHOUT_CLASSIFICATION	{{{ isFractionalFontMetricsEnabled() method
WITHOUT_CLASSIFICATION	{{{ setWrapGuidePainted() method
WITHOUT_CLASSIFICATION	{{{ getFoldLineStyle() method
WITHOUT_CLASSIFICATION	{{{ setFoldLineStyle() method
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ Inner classes
WITHOUT_CLASSIFICATION	{{{ setBuffer() method
WITHOUT_CLASSIFICATION	{{{ getMinimumSize() method
WITHOUT_CLASSIFICATION	{{{ paintComponent() method
WITHOUT_CLASSIFICATION	{{{ getToolTipText() method
WITHOUT_CLASSIFICATION	{{{ getPreferredSize() method
WITHOUT_CLASSIFICATION	{{{ nextTabStop() method
WITHOUT_CLASSIFICATION	{{{ getCharWidth() method
WITHOUT_CLASSIFICATION	{{{ paintValidLine() method
WITHOUT_CLASSIFICATION	{{{ addExtension() method
WITHOUT_CLASSIFICATION	{{{ addExtension() method
WITHOUT_CLASSIFICATION	{{{ removeExtension() method
WITHOUT_CLASSIFICATION	{{{ getExtensions() method
WITHOUT_CLASSIFICATION	{{{ setFont() method
WITHOUT_CLASSIFICATION	{{{ getFontRenderContext() method
WITHOUT_CLASSIFICATION	{{{ getStringWidth() method
WITHOUT_CLASSIFICATION	{{{ getFontMetrics() method
WITHOUT_CLASSIFICATION	{{{ updateRenderingHints() method
WITHOUT_CLASSIFICATION	package-private since they are accessed by inner classes and we want this to be fast
WITHOUT_CLASSIFICATION	{{{ Paint line highlight and collapsed fold highlight
WITHOUT_CLASSIFICATION	should try to use this as little as possible.
WITHOUT_CLASSIFICATION	hints.put(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
WITHOUT_CLASSIFICATION	{{{ TextAreaPainter constructor
WITHOUT_CLASSIFICATION	{{{ PaintLineBackground class
WITHOUT_CLASSIFICATION	{{{ Paint token backgrounds
WITHOUT_CLASSIFICATION	minimise access$ methods
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ dispose() method
WITHOUT_CLASSIFICATION	}}} }}} }}}
WITHOUT_CLASSIFICATION	{{{ getView() method
WITHOUT_CLASSIFICATION	{{{ getBuffer() method
WITHOUT_CLASSIFICATION	{{{ Getters and setters
WITHOUT_CLASSIFICATION	{{{ getDisplayManager() method
WITHOUT_CLASSIFICATION	{{{ paintValidLine() method
WITHOUT_CLASSIFICATION	horizontal.setBorder(null);
WITHOUT_CLASSIFICATION	Because the clipRect's height is usually an even multiple of the font height, we subtract 1 from it, otherwise one too many lines will always be painted.
WITHOUT_CLASSIFICATION	{{{ PaintSelection class
WITHOUT_CLASSIFICATION	{{{ JEditTextArea constructor
WITHOUT_CLASSIFICATION	{{{ paintSelection() method
WITHOUT_CLASSIFICATION	{{{ PaintWrapGuide class
WITHOUT_CLASSIFICATION	{{{ Initialize some misc. stuff
WITHOUT_CLASSIFICATION	{{{ PaintText class
WITHOUT_CLASSIFICATION	{{{ Add some event listeners
WITHOUT_CLASSIFICATION	{{{ PaintCaret class
WITHOUT_CLASSIFICATION	{{{ Initialize the GUI
WITHOUT_CLASSIFICATION	{{{ setCaretBlinkEnabled() method
WITHOUT_CLASSIFICATION	some plugins add stuff in a "right-hand" gutter
WITHOUT_CLASSIFICATION	{{{ setQuickCopyEnabled() method
WITHOUT_CLASSIFICATION	{{{ getPainter() method
WITHOUT_CLASSIFICATION	{{{ getElectricScroll() method
WITHOUT_CLASSIFICATION	{{{ getGutter() method
WITHOUT_CLASSIFICATION	{{{ isCaretBlinkEnabled() method
WITHOUT_CLASSIFICATION	{{{ setElectricScroll() method
WITHOUT_CLASSIFICATION	{{{ isQuickCopyEnabled() method
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	{{{ isEditable() method
WITHOUT_CLASSIFICATION	JEditTextArea.scrollTo() needs this to simplify its code
WITHOUT_CLASSIFICATION	dubious? setFirstLine(0);
WITHOUT_CLASSIFICATION	{{{ this ensures that the text area's look is slightly more consistent with the rest of the metal l&f. while it depends on not-so-well-documented portions of Swing, it only affects appearance, so future breakage shouldn't matter
WITHOUT_CLASSIFICATION	{{{ setDragEnabled() method
WITHOUT_CLASSIFICATION	{{{ getDragAndDropCallback() method
WITHOUT_CLASSIFICATION	{{{ scrollUpPage() method
WITHOUT_CLASSIFICATION	{{{ Scrolling
WITHOUT_CLASSIFICATION	{{{ setDragAndDropCallback() method
WITHOUT_CLASSIFICATION	we have to be careful
WITHOUT_CLASSIFICATION	{{{ isDragInProgress() method
WITHOUT_CLASSIFICATION	{{{ Debugging code
WITHOUT_CLASSIFICATION	{{{ setDragInProgress() method
WITHOUT_CLASSIFICATION	we have to be careful
WITHOUT_CLASSIFICATION	{{{ isDragEnabled() method
WITHOUT_CLASSIFICATION	{{{ getVisibleLines() method
WITHOUT_CLASSIFICATION	{{{ getFirstLine() method
WITHOUT_CLASSIFICATION	{{{ getFirstPhysicalLine() method
WITHOUT_CLASSIFICATION	{{{ setFirstLine() method
WITHOUT_CLASSIFICATION	{{{ ensure we don't have empty space at the bottom or top, etc
WITHOUT_CLASSIFICATION	{{{ ensure we don't have empty space at the bottom or top, etc
WITHOUT_CLASSIFICATION	{{{ setFirstPhysicalLine() method
WITHOUT_CLASSIFICATION	{{{ setFirstPhysicalLine() method
WITHOUT_CLASSIFICATION	{{{ getHorizontalOffset() method
WITHOUT_CLASSIFICATION	{{{ getLastPhysicalLine() method
WITHOUT_CLASSIFICATION	{{{ scrollDownLine() method
WITHOUT_CLASSIFICATION	{{{ setHorizontalOffset() method
WITHOUT_CLASSIFICATION	{{{ scrollUpLine() method
WITHOUT_CLASSIFICATION	{{{ getLineCount() method
WITHOUT_CLASSIFICATION	{{{ addScrollListener() method
WITHOUT_CLASSIFICATION	{{{ scrollDownPage() method
WITHOUT_CLASSIFICATION	{{{ scrollToCaret() method
WITHOUT_CLASSIFICATION	{{{ removeScrollListener() method
WITHOUT_CLASSIFICATION	{{{ scrollTo() method
WITHOUT_CLASSIFICATION	{{{ scrollTo() method
WITHOUT_CLASSIFICATION	{{{ Offset conversion
WITHOUT_CLASSIFICATION	{{{ Get ready
WITHOUT_CLASSIFICATION	{{{ Screen line stuff
WITHOUT_CLASSIFICATION	{{{ Scroll vertically
WITHOUT_CLASSIFICATION	{{{ invalidateScreenLineRange() method
WITHOUT_CLASSIFICATION	{{{ Scroll horizontally
WITHOUT_CLASSIFICATION	{{{ xyToOffset() method
WITHOUT_CLASSIFICATION	{{{ getPhysicalLineOfScreenLine() method
WITHOUT_CLASSIFICATION	{{{ xyToOffset() method
WITHOUT_CLASSIFICATION	{{{ getScreenLineOfOffset() method
WITHOUT_CLASSIFICATION	{{{ Convenience methods
WITHOUT_CLASSIFICATION	{{{ getScreenLineStartOffset() method
WITHOUT_CLASSIFICATION	{{{ xToScreenLineOffset() method
WITHOUT_CLASSIFICATION	{{{ getScreenLineEndOffset() method
WITHOUT_CLASSIFICATION	{{{ invalidateLine() method
WITHOUT_CLASSIFICATION	{{{ offsetToXY() method
WITHOUT_CLASSIFICATION	{{{ offsetToXY() method
WITHOUT_CLASSIFICATION	{{{ Painting
WITHOUT_CLASSIFICATION	{{{ invalidateLineRange() method
WITHOUT_CLASSIFICATION	{{{ getBufferLength() method
WITHOUT_CLASSIFICATION	{{{ invalidateSelectedLines() method
WITHOUT_CLASSIFICATION	to hide line highlight if selections are being added later on
WITHOUT_CLASSIFICATION	{{{ getLineOfOffset() method
WITHOUT_CLASSIFICATION	{{{ getLineStartOffset() method
WITHOUT_CLASSIFICATION	{{{ getLineEndOffset() method
WITHOUT_CLASSIFICATION	{{{ getLineLength() method
WITHOUT_CLASSIFICATION	{{{ getLineText() method
WITHOUT_CLASSIFICATION	{{{ getLineText() method
WITHOUT_CLASSIFICATION	{{{ getText() method
WITHOUT_CLASSIFICATION	{{{ getText() method
WITHOUT_CLASSIFICATION	{{{ getText() method
WITHOUT_CLASSIFICATION	{{{ selectNone() method
WITHOUT_CLASSIFICATION	{{{ setText() method
WITHOUT_CLASSIFICATION	{{{ selectAll() method
WITHOUT_CLASSIFICATION	{{{ getSelection() method
WITHOUT_CLASSIFICATION	Scan backwards, trying to find a bracket
WITHOUT_CLASSIFICATION	{{{ Selection
WITHOUT_CLASSIFICATION	{{{ selectLine() method
WITHOUT_CLASSIFICATION	{{{ getSelectionCount() method
WITHOUT_CLASSIFICATION	{{{ selectParagraph() method
WITHOUT_CLASSIFICATION	We can't do the backward scan if start == 0
WITHOUT_CLASSIFICATION	{{{ selectWord() method
WITHOUT_CLASSIFICATION	to hide current line highlight
WITHOUT_CLASSIFICATION	{{{ selectToMatchingBracket() method
WITHOUT_CLASSIFICATION	{{{ selectToMatchingBracket() method
WITHOUT_CLASSIFICATION	Reset count
WITHOUT_CLASSIFICATION	{{{ selectBlock() method
WITHOUT_CLASSIFICATION	{{{ setSelection() method
WITHOUT_CLASSIFICATION	{{{ setSelection() method
WITHOUT_CLASSIFICATION	Scan forward, matching that bracket
WITHOUT_CLASSIFICATION	to hide current line highlight
WITHOUT_CLASSIFICATION	{{{ lineInStructureScope() method
WITHOUT_CLASSIFICATION	invalidate the old selection
WITHOUT_CLASSIFICATION	{{{ invertSelection() method
WITHOUT_CLASSIFICATION	{{{ addToSelection() method
WITHOUT_CLASSIFICATION	{{{ addToSelection() method
WITHOUT_CLASSIFICATION	to hide current line highlight
WITHOUT_CLASSIFICATION	to hide current line highlight
WITHOUT_CLASSIFICATION	{{{ getSelectionAtOffset() method
WITHOUT_CLASSIFICATION	{{{ setSelectedText() method
WITHOUT_CLASSIFICATION	{{{ removeFromSelection() method
WITHOUT_CLASSIFICATION	{{{ removeFromSelection() method
WITHOUT_CLASSIFICATION	{{{ setSelectedText() method
WITHOUT_CLASSIFICATION	{{{ resizeSelection() method
WITHOUT_CLASSIFICATION	{{{ setSelectedText() method
WITHOUT_CLASSIFICATION	{{{ extendSelection() method
WITHOUT_CLASSIFICATION	{{{ extendSelection() method
WITHOUT_CLASSIFICATION	{{{ Caret
WITHOUT_CLASSIFICATION	{{{ getSelectedText() method
WITHOUT_CLASSIFICATION	{{{ getSelectedText() method
WITHOUT_CLASSIFICATION	{{{ getSelectedText() method
WITHOUT_CLASSIFICATION	no no no!!!! selectNone(); }}}
WITHOUT_CLASSIFICATION	{{{ setCaretPosition() method
WITHOUT_CLASSIFICATION	for compatibility with older jEdit versions
WITHOUT_CLASSIFICATION	{{{ addStructureMatcher() method
WITHOUT_CLASSIFICATION	{{{ getSelectedLines() method
WITHOUT_CLASSIFICATION	{{{ setCaretPosition() method
WITHOUT_CLASSIFICATION	{{{ showSelectLineRangeDialog() method
WITHOUT_CLASSIFICATION	{{{ removeStructureMatcher() method
WITHOUT_CLASSIFICATION	{{{ getStructureMatch() method
WITHOUT_CLASSIFICATION	{{{ moveCaretPosition() method
WITHOUT_CLASSIFICATION	{{{ blinkCaret() method
WITHOUT_CLASSIFICATION	{{{ moveCaretPosition() method
WITHOUT_CLASSIFICATION	{{{ centerCaret() method
WITHOUT_CLASSIFICATION	{{{ moveCaretPosition() method
WITHOUT_CLASSIFICATION	{{{ getCaretPosition() method
WITHOUT_CLASSIFICATION	{{{ getCaretLine() method
WITHOUT_CLASSIFICATION	{{{ goToNextParagraph() method
WITHOUT_CLASSIFICATION	{{{ getMagicCaretPosition() method
WITHOUT_CLASSIFICATION	{{{ setMagicCaretPosition() method
WITHOUT_CLASSIFICATION	{{{ goToNextWord() method
WITHOUT_CLASSIFICATION	{{{ addCaretListener() method
WITHOUT_CLASSIFICATION	{{{ goToNextWord() method
WITHOUT_CLASSIFICATION	{{{ removeCaretListener() method
WITHOUT_CLASSIFICATION	{{{ smartHome() method
WITHOUT_CLASSIFICATION	{{{ goToNextBracket() method
WITHOUT_CLASSIFICATION	{{{ goToPrevBracket() method
WITHOUT_CLASSIFICATION	{{{ goToNextLine() method
WITHOUT_CLASSIFICATION	{{{ goToFirstVisibleLine() method
WITHOUT_CLASSIFICATION	{{{ goToNextMarker() method
WITHOUT_CLASSIFICATION	{{{ goToPrevLine() method
WITHOUT_CLASSIFICATION	{{{ goToNextPage() method
WITHOUT_CLASSIFICATION	case 3:
WITHOUT_CLASSIFICATION	case 3:
WITHOUT_CLASSIFICATION	{{{ goToPrevMarker() method
WITHOUT_CLASSIFICATION	{{{ goToPrevPage() method
WITHOUT_CLASSIFICATION	{{{ smartEnd() method
WITHOUT_CLASSIFICATION	{{{ goToPrevParagraph() method
WITHOUT_CLASSIFICATION	{{{ goToLastVisibleLine() method
WITHOUT_CLASSIFICATION	{{{ goToPrevWord() method
WITHOUT_CLASSIFICATION	{{{ goToPrevWord() method
WITHOUT_CLASSIFICATION	{{{ goToStartOfLine() method
WITHOUT_CLASSIFICATION	{{{ goToEndOfLine() method
WITHOUT_CLASSIFICATION	{{{ goToBufferStart() method
WITHOUT_CLASSIFICATION	{{{ goToStartOfWhiteSpace() method
WITHOUT_CLASSIFICATION	{{{ goToEndOfWhiteSpace() method
WITHOUT_CLASSIFICATION	{{{ goToBufferEnd() method
WITHOUT_CLASSIFICATION	{{{ addMarker() method
WITHOUT_CLASSIFICATION	{{{ delete() method
WITHOUT_CLASSIFICATION	{{{ isMultipleSelectionEnabled() method
WITHOUT_CLASSIFICATION	{{{ userInput() method
WITHOUT_CLASSIFICATION	{{{ deleteParagraph() method
WITHOUT_CLASSIFICATION	{{{ goToMatchingBracket() method
WITHOUT_CLASSIFICATION	{{{ toggleOverwriteEnabled() method
WITHOUT_CLASSIFICATION	{{{ showGoToLineDialog() method
WITHOUT_CLASSIFICATION	{{{ User input
WITHOUT_CLASSIFICATION	{{{ backspace() method
WITHOUT_CLASSIFICATION	check if the user entered a bracket
WITHOUT_CLASSIFICATION	{{{ deleteToStartOfLine() method
WITHOUT_CLASSIFICATION	{{{ isOverwriteEnabled() method
WITHOUT_CLASSIFICATION	{{{ backspaceWord() method
WITHOUT_CLASSIFICATION	{{{ setOverwriteEnabled() method
WITHOUT_CLASSIFICATION	{{{ backspaceWord() method
WITHOUT_CLASSIFICATION	{{{ toggleRectangularSelectionEnabled() method
WITHOUT_CLASSIFICATION	{{{ deleteToEndOfLine() method
WITHOUT_CLASSIFICATION	{{{ deleteWord() method
WITHOUT_CLASSIFICATION	{{{ deleteLine() method
WITHOUT_CLASSIFICATION	{{{ deleteWord() method
WITHOUT_CLASSIFICATION	otherwise a bunch of consecutive C+d's would be merged into one edit
WITHOUT_CLASSIFICATION	{{{ swapMarkerAndCaret() method
WITHOUT_CLASSIFICATION	{{{ setRectangularSelectionEnabled() method
WITHOUT_CLASSIFICATION	{{{ toggleMultipleSelectionEnabled() method
WITHOUT_CLASSIFICATION	{{{ setMultipleSelectionEnabled() method
WITHOUT_CLASSIFICATION	{{{ Markers
WITHOUT_CLASSIFICATION	{{{ isRectangularSelectionEnabled() method
WITHOUT_CLASSIFICATION	{{{ Folding
WITHOUT_CLASSIFICATION	{{{ goToMarker() method
WITHOUT_CLASSIFICATION	always add markers on selected lines
WITHOUT_CLASSIFICATION	toggle marker on caret line
WITHOUT_CLASSIFICATION	{{{ removeTrailingWhiteSpace() method
WITHOUT_CLASSIFICATION	{{{ shiftIndentLeft() method
WITHOUT_CLASSIFICATION	{{{ shiftIndentRight() method
WITHOUT_CLASSIFICATION	{{{ spacesToTabs() method
WITHOUT_CLASSIFICATION	{{{ tabsToSpaces() method
WITHOUT_CLASSIFICATION	{{{ formatParagraph() method
WITHOUT_CLASSIFICATION	{{{ collapseFold() method
WITHOUT_CLASSIFICATION	{{{ expandFold() method
WITHOUT_CLASSIFICATION	{{{ toUpperCase() method
WITHOUT_CLASSIFICATION	{{{ goToParentFold() method
WITHOUT_CLASSIFICATION	{{{ narrowToFold() method
WITHOUT_CLASSIFICATION	{{{ goToNextFold() method
WITHOUT_CLASSIFICATION	{{{ goToPrevFold() method
WITHOUT_CLASSIFICATION	{{{ narrowToSelection() method
WITHOUT_CLASSIFICATION	{{{ selectFold() method
WITHOUT_CLASSIFICATION	{{{ selectFold() method
WITHOUT_CLASSIFICATION	{{{ toLowerCase() method
WITHOUT_CLASSIFICATION	{{{ addExplicitFold() method
WITHOUT_CLASSIFICATION	{{{ showWordCountDialog() method
WITHOUT_CLASSIFICATION	{{{ insertEnterAndIndent() method
WITHOUT_CLASSIFICATION	{{{ Text editing
WITHOUT_CLASSIFICATION	{{{ lineComment() method
WITHOUT_CLASSIFICATION	{{{ insertTabAndIndent() method
WITHOUT_CLASSIFICATION	{{{ rangeComment() method
WITHOUT_CLASSIFICATION	{{{ Right click popup
WITHOUT_CLASSIFICATION	if caret is inside leading whitespace, indent.
WITHOUT_CLASSIFICATION	{{{ isRightClickPopupEnabled() method
WITHOUT_CLASSIFICATION	{{{ indentSelectedLines() method
WITHOUT_CLASSIFICATION	{{{ joinLines() method
WITHOUT_CLASSIFICATION	{{{ setRightClickPopupEnabled() method
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ Deprecated methods
WITHOUT_CLASSIFICATION	{{{ AWT stuff
WITHOUT_CLASSIFICATION	{{{ processKeyEvent() method
WITHOUT_CLASSIFICATION	{{{ removeNotify() method
WITHOUT_CLASSIFICATION	{{{ getFocusTraversalKeysEnabled() method
WITHOUT_CLASSIFICATION	{{{ addNotify() method
WITHOUT_CLASSIFICATION	{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	{{{ getRightClickPopup() method
WITHOUT_CLASSIFICATION	{{{ addLeftOfScrollBar() method
WITHOUT_CLASSIFICATION	{{{ setRightClickPopup() method
WITHOUT_CLASSIFICATION	{{{ getSelectionStartLine() method
WITHOUT_CLASSIFICATION	{{{ handlePopupTrigger() method
WITHOUT_CLASSIFICATION	{{{ getMarkLine() method
WITHOUT_CLASSIFICATION	{{{ removeLeftOfScrollBar() method
WITHOUT_CLASSIFICATION	{{{ setSelectionStart() method
WITHOUT_CLASSIFICATION	{{{ getFocusCycleRoot() method
WITHOUT_CLASSIFICATION	{{{ addTopComponent() method
WITHOUT_CLASSIFICATION	{{{ getSelectionEnd() method
WITHOUT_CLASSIFICATION	{{{ removeTopComponent() method
WITHOUT_CLASSIFICATION	{{{ getSelectionEnd() method
WITHOUT_CLASSIFICATION	{{{ getSelectionStart() method
WITHOUT_CLASSIFICATION	{{{ getSelectionStart() method
WITHOUT_CLASSIFICATION	{{{ select() method
WITHOUT_CLASSIFICATION	{{{ getSelectionEndLine() method
WITHOUT_CLASSIFICATION	{{{ select() method
WITHOUT_CLASSIFICATION	{{{ setSelectionEnd() method
WITHOUT_CLASSIFICATION	{{{ getMarkPosition() method
WITHOUT_CLASSIFICATION	{{{ isSelectionRectangular() method
WITHOUT_CLASSIFICATION	used to store offsetToXY() results
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ Static variables
WITHOUT_CLASSIFICATION	this does the "trick" to eliminate blank space at the end
WITHOUT_CLASSIFICATION	{{{ isCaretVisible() method
WITHOUT_CLASSIFICATION	on JDK 1.4, this is set to a method by Java14. The method must take these parameters: - a JEditTextArea - an InputEvent - a boolean (copy text or move, depending on modifier user held down)
WITHOUT_CLASSIFICATION	{{{ isStructureHighlightVisible() method
WITHOUT_CLASSIFICATION	{{{ foldStructureChanged() method
WITHOUT_CLASSIFICATION	{{{ updateMaxHorizontalScrollWidth() method
WITHOUT_CLASSIFICATION	in case one of the above fails, we still want to clear these flags.
WITHOUT_CLASSIFICATION	{{{ recalculateVisibleLines() method
WITHOUT_CLASSIFICATION	{{{ finishCaretUpdate() method
WITHOUT_CLASSIFICATION	{{{ updateScrollBars() method
WITHOUT_CLASSIFICATION	{{{ getSelectionStartEndOnLine() method
WITHOUT_CLASSIFICATION	{{{ _finishCaretUpdate() method
WITHOUT_CLASSIFICATION	see finishCaretUpdate() & _finishCaretUpdate()
WITHOUT_CLASSIFICATION	called by DisplayManager.BufferChangeHandler.transactionComplete()
WITHOUT_CLASSIFICATION	{{{ insideSelection() method
WITHOUT_CLASSIFICATION	When the user is typing, etc, we don't want the caret to blink
WITHOUT_CLASSIFICATION	JDiff, error list add stuff here
WITHOUT_CLASSIFICATION	otherwise DisplayManager.BufferChangeHandler calls
WITHOUT_CLASSIFICATION	{{{ startDragAndDrop() method calls dndCallback via reflection
WITHOUT_CLASSIFICATION	{{{ doWordWrap() method
WITHOUT_CLASSIFICATION	{{{ _addToSelection() method
WITHOUT_CLASSIFICATION	{{{ updateStructureHighlightWithDelay() method
WITHOUT_CLASSIFICATION	{{{ fireCaretEvent() method
WITHOUT_CLASSIFICATION	only ever return true if space was pressed with logicalLength == maxLineLen
WITHOUT_CLASSIFICATION	{{{ fireScrollEvent() method
WITHOUT_CLASSIFICATION	{{{ insertTab() method
WITHOUT_CLASSIFICATION	{{{ doWordCount() method
WITHOUT_CLASSIFICATION	{{{ updateStructureHighlight() method
WITHOUT_CLASSIFICATION	Fix bug #922951 Off-by-one error in Word Count
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	{{{ Inner classes
WITHOUT_CLASSIFICATION	{{{ FocusHandler class
WITHOUT_CLASSIFICATION	{{{ paintBorder() method
WITHOUT_CLASSIFICATION	{{{ getBorderInsets() method
WITHOUT_CLASSIFICATION	{{{ delete() method
WITHOUT_CLASSIFICATION	{{{ mousePressed() method
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	{{{ addLayoutComponent() method
WITHOUT_CLASSIFICATION	{{{ removeLayoutComponent() method
WITHOUT_CLASSIFICATION	{{{ preferredLayoutSize() method
WITHOUT_CLASSIFICATION	{{{ minimumLayoutSize() method
WITHOUT_CLASSIFICATION	{{{ layoutContainer() method
WITHOUT_CLASSIFICATION	case 3:
WITHOUT_CLASSIFICATION	{{{ recalculateLastPhysicalLine() method
WITHOUT_CLASSIFICATION	only wrap if we're at the end of a line, or the rest of the line text is whitespace
WITHOUT_CLASSIFICATION	{{{ showStructureStatusMessage() method
WITHOUT_CLASSIFICATION	last character before wrap length with tabs expanded
WITHOUT_CLASSIFICATION	{{{ ScrollLayout class
WITHOUT_CLASSIFICATION	caretLine would have been incremented since insertNewLineAt <= caretPos
WITHOUT_CLASSIFICATION	get rid of embedded tabs not removed by trim()
WITHOUT_CLASSIFICATION	{{{ shiftTallCaretLeft() method
WITHOUT_CLASSIFICATION	{{{ getRectParams() method
WITHOUT_CLASSIFICATION	{{{ focusGained() method
WITHOUT_CLASSIFICATION	{{{ tallCaretDelete() method
WITHOUT_CLASSIFICATION	{{{ TextAreaBorder class
WITHOUT_CLASSIFICATION	{{{ CaretBlinker class
WITHOUT_CLASSIFICATION	{{{ MutableCaretEvent constructor
WITHOUT_CLASSIFICATION	{{{ MutableCaretEvent class
WITHOUT_CLASSIFICATION	{{{ getMark() method
WITHOUT_CLASSIFICATION	{{{ getDot() method
WITHOUT_CLASSIFICATION	{{{ adjustmentValueChanged() method
WITHOUT_CLASSIFICATION	{{{ AdjustHandler class
WITHOUT_CLASSIFICATION	XXX: getMarkPosition() deprecated!
WITHOUT_CLASSIFICATION	with drag and drop on, a mouse down in a selection does notimmediately deselect
WITHOUT_CLASSIFICATION	{{{ focusLost() method
WITHOUT_CLASSIFICATION	{{{ doSingleClick() method
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ Class initializer
WITHOUT_CLASSIFICATION	{{{ mouseReleased() method
WITHOUT_CLASSIFICATION	{{{ mouseDragged() method
WITHOUT_CLASSIFICATION	case 3:
WITHOUT_CLASSIFICATION	so that Home <mouse click> Home is not the same as pressing Home twice in a row
WITHOUT_CLASSIFICATION	control-click in virtual space inserts whitespace and moves caret
WITHOUT_CLASSIFICATION	so that shift-click-drag works
WITHOUT_CLASSIFICATION	so that quick copy works
WITHOUT_CLASSIFICATION	{{{ doDoubleClick() method
WITHOUT_CLASSIFICATION	Ignore empty lines
WITHOUT_CLASSIFICATION	{{{ doTripleClick() method
WITHOUT_CLASSIFICATION	{{{ doSingleDrag() method
WITHOUT_CLASSIFICATION	just scroll to the dragged location
WITHOUT_CLASSIFICATION	{{{ doDoubleDrag() method
WITHOUT_CLASSIFICATION	{{{ doTripleDrag() method
WITHOUT_CLASSIFICATION	middle mouse button drag inserts selection at caret position
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ setBuffer() method
WITHOUT_CLASSIFICATION	{{{ getScreenLineOfOffset() method
WITHOUT_CLASSIFICATION	{{{ recalculateVisibleLines() method
WITHOUT_CLASSIFICATION	{{{ xToSubregionOffset() method
WITHOUT_CLASSIFICATION	{{{ ChunkCache constructor
WITHOUT_CLASSIFICATION	return -1;
WITHOUT_CLASSIFICATION	{{{ getMaxHorizontalScrollWidth() method
WITHOUT_CLASSIFICATION	{{{ invalidateChunksFromPhys() method
WITHOUT_CLASSIFICATION	Find the screen line containing this offset
WITHOUT_CLASSIFICATION	{{{ scrollDown() method
WITHOUT_CLASSIFICATION	line is invisible?
WITHOUT_CLASSIFICATION	{{{ xToSubregionOffset() method
WITHOUT_CLASSIFICATION	{{{ scrollUp() method
WITHOUT_CLASSIFICATION	{{{ subregionOffsetToX() method
WITHOUT_CLASSIFICATION	{{{ invalidateAll() method
WITHOUT_CLASSIFICATION	{{{ getLineInfo() method
WITHOUT_CLASSIFICATION	{{{ invalidateChunksFrom() method
WITHOUT_CLASSIFICATION	{{{ subregionOffsetToX() method
WITHOUT_CLASSIFICATION	{{{ getLineSubregionCount() method
WITHOUT_CLASSIFICATION	{{{ getBelowPosition() method
WITHOUT_CLASSIFICATION	{{{ getSubregionOfOffset() method
WITHOUT_CLASSIFICATION	{{{ updateChunksUpTo() method
WITHOUT_CLASSIFICATION	{{{ getSubregionStartOffset() method
WITHOUT_CLASSIFICATION	{{{ getAbovePosition() method
WITHOUT_CLASSIFICATION	{{{ getSubregionEndOffset() method
WITHOUT_CLASSIFICATION	{{{ needFullRepaint() method
WITHOUT_CLASSIFICATION	{{{ getLineInfosForPhysicalLine() method
WITHOUT_CLASSIFICATION	{{{ getLineInfosForPhysicalLine() method
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ clone() method
WITHOUT_CLASSIFICATION	Note that we rely on the fact that when a physical line is invalidated, all screen lines/subregions of that line are invalidated as well. See below comment for code that tries to uphold this assumption.
WITHOUT_CLASSIFICATION	find a valid line closest to the last screen line
WITHOUT_CLASSIFICATION	otherwise, determine the next visible line
WITHOUT_CLASSIFICATION	for the first line displayed, take its physical line to be the text area's first physical line
WITHOUT_CLASSIFICATION	if the user changes the syntax token at the end of a line, need to do a full repaint.
WITHOUT_CLASSIFICATION	if -1, the empty space at the end of the text area when the buffer has less lines than are visible
WITHOUT_CLASSIFICATION	empty space
WITHOUT_CLASSIFICATION	get another line of chunks
WITHOUT_CLASSIFICATION	if the line has no text, out.size() == 0
WITHOUT_CLASSIFICATION	unless this is the first time, increment the line number
WITHOUT_CLASSIFICATION	fix the bug where the horiz. scroll bar was not updated after creating a new file.
WITHOUT_CLASSIFICATION	We only cache entire physical lines at once; don't want to split a physical line into screen lines and only have some valid.
WITHOUT_CLASSIFICATION	chunk the line.
WITHOUT_CLASSIFICATION	otherwise, the number of subregions
WITHOUT_CLASSIFICATION	If this line has become longer or shorter (in which case the new physical line number is different from the cached one) we need to: - continue updating past the last line - advise the text area to repaint On the other hand, if the line wraps beyond lastScreenLine, we need to keep updating the chunk list to ensure proper alignment of invalidation flags (see start of method)
WITHOUT_CLASSIFICATION	{{{ LineInfo class
WITHOUT_CLASSIFICATION	{{{ getStartLine() method
WITHOUT_CLASSIFICATION	{{{ lineToChunkList() method
WITHOUT_CLASSIFICATION	{{{ getEnd() method
WITHOUT_CLASSIFICATION	{{{ getStart() method
WITHOUT_CLASSIFICATION	{{{ getStart() method
WITHOUT_CLASSIFICATION	{{{ getEnd() method
WITHOUT_CLASSIFICATION	{{{ Selection constructor
WITHOUT_CLASSIFICATION	{{{ overlaps() method
WITHOUT_CLASSIFICATION	{{{ getEndLine() method
WITHOUT_CLASSIFICATION	{{{ Selection constructor
WITHOUT_CLASSIFICATION	{{{ Selection constructor
WITHOUT_CLASSIFICATION	{{{ Range class
WITHOUT_CLASSIFICATION	{{{ Range constructor
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ getText() method
WITHOUT_CLASSIFICATION	{{{ getText() method
WITHOUT_CLASSIFICATION	{{{ contentInserted() method
WITHOUT_CLASSIFICATION	{{{ contentInserted() method
WITHOUT_CLASSIFICATION	{{{ contentRemoved() method
WITHOUT_CLASSIFICATION	{{{ contentRemoved() method
WITHOUT_CLASSIFICATION	{{{ setText() method
WITHOUT_CLASSIFICATION	{{{ setText() method
WITHOUT_CLASSIFICATION	{{{ getColumnOnOtherLine() method
WITHOUT_CLASSIFICATION	{{{ getStart() method
WITHOUT_CLASSIFICATION	{{{ getStart() method
WITHOUT_CLASSIFICATION	{{{ getEnd() method
WITHOUT_CLASSIFICATION	{{{ getEnd() method
WITHOUT_CLASSIFICATION	{{{ Range constructor
WITHOUT_CLASSIFICATION	{{{ Range constructor
WITHOUT_CLASSIFICATION	{{{ Move the caret down a line
WITHOUT_CLASSIFICATION	{{{ Rect class
WITHOUT_CLASSIFICATION	{{{ getStartColumn() method
WITHOUT_CLASSIFICATION	{{{ Rect constructor
WITHOUT_CLASSIFICATION	{{{ Rect constructor
WITHOUT_CLASSIFICATION	{{{ Rect constructor
WITHOUT_CLASSIFICATION	{{{ Rect constructor
WITHOUT_CLASSIFICATION	{{{ Rect constructor
WITHOUT_CLASSIFICATION	{{{ getEndColumn() method
WITHOUT_CLASSIFICATION	{{{ Split the text into lines
WITHOUT_CLASSIFICATION	{{{ Insert the lines into the buffer
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	{{{ Entry class
WITHOUT_CLASSIFICATION	{{{ Constants
WITHOUT_CLASSIFICATION	{{{ getToolTipText() method
WITHOUT_CLASSIFICATION	{{{ paintScreenLineRange() method
WITHOUT_CLASSIFICATION	{{{ paintScreenLineRange() method
WITHOUT_CLASSIFICATION	{{{ addExtension() method
WITHOUT_CLASSIFICATION	{{{ removeExtension() method
WITHOUT_CLASSIFICATION	{{{ getExtensions() method
WITHOUT_CLASSIFICATION	notify a running waitForRequests() method
WITHOUT_CLASSIFICATION	wait for more requests
WITHOUT_CLASSIFICATION	status message changed, operation started, operation ends, ...
WITHOUT_CLASSIFICATION	progress bar value change
WITHOUT_CLASSIFICATION	Log some stuff
WITHOUT_CLASSIFICATION	{{{ setLogWriter() method
WITHOUT_CLASSIFICATION	do nothing, who cares
WITHOUT_CLASSIFICATION	{{{ flushStream() method
WITHOUT_CLASSIFICATION	{{{ closeStream() method
WITHOUT_CLASSIFICATION	{{{ getLogListModel() method
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ start() method
WITHOUT_CLASSIFICATION	{{{ Class initializer
WITHOUT_CLASSIFICATION	{{{ waitForRequests() method
WITHOUT_CLASSIFICATION	{{{ getRequestCount() method
WITHOUT_CLASSIFICATION	{{{ reset() method
WITHOUT_CLASSIFICATION	{{{ CharIndexedSegment constructor
WITHOUT_CLASSIFICATION	remove it so editor can continue functioning
WITHOUT_CLASSIFICATION	{{{ log() method
WITHOUT_CLASSIFICATION	so that jEdit doesn't exit with no views open automatically setDaemon(true);
WITHOUT_CLASSIFICATION	{{{ CharIndexedSegment constructor
WITHOUT_CLASSIFICATION	If multiple threads log stuff, we don't want the output to get mixed up
WITHOUT_CLASSIFICATION	not really needed since threads don't start until after
WITHOUT_CLASSIFICATION	{{{ createPrintStream() method
WITHOUT_CLASSIFICATION	{{{ charAt() method
WITHOUT_CLASSIFICATION	{{{ _logException() method
WITHOUT_CLASSIFICATION	{{{ _log() method
WITHOUT_CLASSIFICATION	{{{ isValid() method
WITHOUT_CLASSIFICATION	{{{ LogListModel class
WITHOUT_CLASSIFICATION	{{{ addWorkRequest() method
WITHOUT_CLASSIFICATION	do any queued AWT runnables
WITHOUT_CLASSIFICATION	{{{ move() method
WITHOUT_CLASSIFICATION	{{{ if there are no requests, execute AWT requests immediately
WITHOUT_CLASSIFICATION	{{{ WorkThreadPool constructor
WITHOUT_CLASSIFICATION	{{{ fireStatusChanged() method
WITHOUT_CLASSIFICATION	{{{ getThreadCount() method
WITHOUT_CLASSIFICATION	Log.log(Log.DEBUG,this,"AWT immediate: " + run);
WITHOUT_CLASSIFICATION	{{{ Add to AWT queue...
WITHOUT_CLASSIFICATION	{{{ getThread() method
WITHOUT_CLASSIFICATION	{{{ addProgressListener() method
WITHOUT_CLASSIFICATION	{{{ removeProgressListener() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ append() method
WITHOUT_CLASSIFICATION	{{{ append() method
WITHOUT_CLASSIFICATION	{{{ readLock() method
WITHOUT_CLASSIFICATION	{{{ readUnlock() method
WITHOUT_CLASSIFICATION	{{{ writeLock() method
WITHOUT_CLASSIFICATION	{{{ writeUnlock() method
WITHOUT_CLASSIFICATION	{{{ ensureCapacity() method
WITHOUT_CLASSIFICATION	AWT thread magic
WITHOUT_CLASSIFICATION	}}} {{{ Add to work thread queue...
WITHOUT_CLASSIFICATION	{{{ queueAWTRunner() method
WITHOUT_CLASSIFICATION	{{{ fireProgressChanged() method
WITHOUT_CLASSIFICATION	{{{ doAWTRequests() method
WITHOUT_CLASSIFICATION	{{{ requestDone() method
WITHOUT_CLASSIFICATION	{{{ RunRequestsInAWTThread class
WITHOUT_CLASSIFICATION	{{{ getNextRequest() method
WITHOUT_CLASSIFICATION	{{{ doAWTRequest() method
WITHOUT_CLASSIFICATION	Request queue
WITHOUT_CLASSIFICATION	Log.log(Log.DEBUG,this,"AWT runner queued");
WITHOUT_CLASSIFICATION	readers.removeElement(Thread.currentThread());
WITHOUT_CLASSIFICATION	Log.log(Log.DEBUG,this,"Running in AWT thread: " + request);
WITHOUT_CLASSIFICATION	{{{ SegmentBuffer constructor
WITHOUT_CLASSIFICATION	{{{ getNextAWTRequest() method
WITHOUT_CLASSIFICATION	{{{ allowRead() method
WITHOUT_CLASSIFICATION	{{{ Request class
WITHOUT_CLASSIFICATION	Write in progress.
WITHOUT_CLASSIFICATION	readers.addElement(Thread.currentThread());
WITHOUT_CLASSIFICATION	Roll back state.
WITHOUT_CLASSIFICATION	{{{ allowWrite() method
WITHOUT_CLASSIFICATION	Same thread.
WITHOUT_CLASSIFICATION	{{{ isWriteLocked() method
WITHOUT_CLASSIFICATION	{{{ claimWriteLock() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ add() method
WITHOUT_CLASSIFICATION	{{{ clear() method
WITHOUT_CLASSIFICATION	{{{ getSize() method
WITHOUT_CLASSIFICATION	case ClassWriter.FIELD: case ClassWriter.METH: case ClassWriter.IMETH:
WITHOUT_CLASSIFICATION	{{{ IntegerArray constructor
WITHOUT_CLASSIFICATION	{{{ IntegerArray constructor
WITHOUT_CLASSIFICATION	{{{ get() method
WITHOUT_CLASSIFICATION	{{{ setSize() method
WITHOUT_CLASSIFICATION	{{{ getArray() method
WITHOUT_CLASSIFICATION	A constant pool item. Constant pool items can be created with the 'newXXX' methods in the {@link ClassWriter} class.
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------- Special instructions -------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------- Exceptions table entries, max stack size and max locals -------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------- Debug information -------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Fields for the control flow graph analysis algorithm (used to compute the maximum stack size). A control flow graph contains one node per "basic block", and one edge per "jump" from one basic block to another. Each node (i.e., each basic block) is represented by the Label object that corresponds to the first instruction of this basic block. Each node also stores the list of it successors in the graph, as a linked list of Edge objects. --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Constructor --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Methods to compute offsets and to manage forward references --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	changes the opcode of the jump instruction, in order to be able to find it later (see resizeInstructions in CodeWriter). These temporary opcodes are similar to jump instruction opcodes, except that the 2 bytes offset is unsigned (and can therefore represent values from 0 to 65535, which is sufficient since the size of a method is limited to 65535 bytes).
WITHOUT_CLASSIFICATION	changes IFEQ ... JSR to opcodes 202 to 217 (inclusive)
WITHOUT_CLASSIFICATION	changes IFNULL and IFNONNULL to opcodes 218 and 219 (inclusive)
WITHOUT_CLASSIFICATION	updates maxLocals
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Constructors --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	case 'L':
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Accessors --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	case ARRAY: case OBJECT:
WITHOUT_CLASSIFICATION	case ARRAY: case OBJECT:
WITHOUT_CLASSIFICATION	case ARRAY: case OBJECT:
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Direct conversion from classes to type descriptors, without intermediate Type objects --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Corresponding size and opcodes --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Static initializer --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	pushes the first block onto the stack of blocks to be visited
WITHOUT_CLASSIFICATION	adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	if opcode == ATHROW or xRETURN, ends current block (no successor)
WITHOUT_CLASSIFICATION	updates current and max stack sizes
WITHOUT_CLASSIFICATION	updates current and max stack sizes
WITHOUT_CLASSIFICATION	adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	BIPUSH or NEWARRAY
WITHOUT_CLASSIFICATION	no stack change, but end of current block (no successor)
WITHOUT_CLASSIFICATION	xLOAD or xSTORE
WITHOUT_CLASSIFICATION	updates max locals
WITHOUT_CLASSIFICATION	ILOAD_0
WITHOUT_CLASSIFICATION	ISTORE_0
WITHOUT_CLASSIFICATION	WIDE
WITHOUT_CLASSIFICATION	updates current and max stack sizes
WITHOUT_CLASSIFICATION	updates current and max stack sizes
WITHOUT_CLASSIFICATION	updates current and max stack sizes
WITHOUT_CLASSIFICATION	adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	computes the stack size variation
WITHOUT_CLASSIFICATION	updates current and max stack sizes only if opcode == NEWARRAY (stack size variation = 0 for BIPUSH or SIPUSH)
WITHOUT_CLASSIFICATION	WIDE
WITHOUT_CLASSIFICATION	updates current and max stack sizes only if opcode == NEW (stack size variation = 0 for ANEWARRAY, CHECKCAST, INSTANCEOF)
WITHOUT_CLASSIFICATION	case Constants.PUTFIELD:
WITHOUT_CLASSIFICATION	computes the stack size variation
WITHOUT_CLASSIFICATION	computes the stack size variation. In order not to recompute several times this variation for the same Item, we use the intVal field of this item to store this variation, once it has been computed. More precisely this intVal field stores the sizes of the arguments and of the return value corresponding to desc.
WITHOUT_CLASSIFICATION	JSR_W
WITHOUT_CLASSIFICATION	the above sizes have not been computed yet, so we compute them...
WITHOUT_CLASSIFICATION	... and we save them in order not to recompute them in the future
WITHOUT_CLASSIFICATION	no stack change, but end of current block (with one new successor)
WITHOUT_CLASSIFICATION	GOTO_W
WITHOUT_CLASSIFICATION	ends current block (with one new successor)
WITHOUT_CLASSIFICATION	resolves previous forward references to label, if any
WITHOUT_CLASSIFICATION	LDC2_W
WITHOUT_CLASSIFICATION	LDC_W
WITHOUT_CLASSIFICATION	updates max locals only (no stack change)
WITHOUT_CLASSIFICATION	updates current stack size (max stack size unchanged)
WITHOUT_CLASSIFICATION	updates current stack size (max stack size unchanged)
WITHOUT_CLASSIFICATION	ends current block (with many new successors)
WITHOUT_CLASSIFICATION	ends current block (with many new successors)
WITHOUT_CLASSIFICATION	jump offset GOTO_W
WITHOUT_CLASSIFICATION	case of a backward jump with an offset >= -32768, or of a forward jump with, of course, an unknown offset. In these cases we store the offset in 2 bytes (which will be increased in resizeInstructions, if needed).
WITHOUT_CLASSIFICATION	begins a new current block, resets the relative current and max stack sizes
WITHOUT_CLASSIFICATION	updates current stack size (max stack size unchanged because stack size variation always negative or null)
WITHOUT_CLASSIFICATION	pushes handler block onto the stack of blocks to be visited
WITHOUT_CLASSIFICATION	true (non relative) max stack size
WITHOUT_CLASSIFICATION	pops a block from the stack
WITHOUT_CLASSIFICATION	computes the true (non relative) max stack size of this block
WITHOUT_CLASSIFICATION	updates the global max stack size
WITHOUT_CLASSIFICATION	analyses the successors of the block
WITHOUT_CLASSIFICATION	if this successor has not already been pushed onto the stack...
WITHOUT_CLASSIFICATION	computes the true beginning stack size of this successor block
WITHOUT_CLASSIFICATION	pushes this successor onto the stack
WITHOUT_CLASSIFICATION	releases all the Edge objects used by this CodeWriter
WITHOUT_CLASSIFICATION	appends the [head ... tail] list at the beginning of the pool list
WITHOUT_CLASSIFICATION	creates a new Edge object or reuses one from the shared pool
WITHOUT_CLASSIFICATION	removes b from the pool
WITHOUT_CLASSIFICATION	adds the previous Edge to the list of Edges used by this CodeWriter
WITHOUT_CLASSIFICATION	initializes the previous Edge object...
WITHOUT_CLASSIFICATION	...and adds it to the successor list of the currentBlock block
WITHOUT_CLASSIFICATION	replaces the temporary jump opcodes introduced by Label.resolve.
WITHOUT_CLASSIFICATION	replaces old bytecodes with new ones
WITHOUT_CLASSIFICATION	returns the positions of the resized instructions
WITHOUT_CLASSIFICATION	forward jump
WITHOUT_CLASSIFICATION	backward jump
WITHOUT_CLASSIFICATION	access flags
WITHOUT_CLASSIFICATION	types for NEWARRAY
WITHOUT_CLASSIFICATION	JSR_W
WITHOUT_CLASSIFICATION	over estimation of the number of bytes to be added to this instruction = 3 - current number of padding bytes = 3 - (3 - u%4) = u%4 = u & 3
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Utility methods: instruction resizing (used to handle GOTO_W and JSR_W) --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	bytecode of the method indexes in b loop indexes
WITHOUT_CLASSIFICATION	3 = loop again, 2 = loop ended, 1 = last pass, 0 = done
WITHOUT_CLASSIFICATION	two additional bytes will be required to replace this GOTO or JSR instruction with a GOTO_W or a JSR_W
WITHOUT_CLASSIFICATION	opcode of current instruction bytes to be added after this instruction
WITHOUT_CLASSIFICATION	true number of bytes to be added (or removed) from this instruction = (future number of padding bytes - current number of padding byte) - previously over estimated variation = = ((3 - newOffset%4) - (3 - u%4)) - u%4 = (-newOffset%4 + u%4) - u%4 = -(newOffset & 3)
WITHOUT_CLASSIFICATION	converts temporary opcodes 202 to 217 (inclusive), 218 and 219 to IFEQ ... JSR (inclusive), IFNULL and IFNONNULL
WITHOUT_CLASSIFICATION	five additional bytes will be required to replace this IFxxx <l> instruction with IFNOTxxx <l'> GOTO_W <l>, where IFNOTxxx is the "opposite" opcode of IFxxx (i.e., IFNE for IFEQ) and where <l'> designates the instruction just after the GOTO_W.
WITHOUT_CLASSIFICATION	like TABL_INSN
WITHOUT_CLASSIFICATION	like TABL_INSN
WITHOUT_CLASSIFICATION	skips instruction
WITHOUT_CLASSIFICATION	skips instruction
WITHOUT_CLASSIFICATION	adds a new (u, insert) entry in the allIndexes and allSizes arrays
WITHOUT_CLASSIFICATION	replaces GOTO with GOTO_W, JSR with JSR_W and IFxxx <l> with IFNOTxxx <l'> GOTO_W <l>, where IFNOTxxx is the "opposite" opcode of IFxxx (i.e., IFNE for IFEQ) and where <l'> designates the instruction just after the GOTO_W.
WITHOUT_CLASSIFICATION	case ClassWriter.MANA_INSN:
WITHOUT_CLASSIFICATION	changes temporary opcodes 202 to 217 (inclusive), 218 and 219 to IFEQ ... JSR (inclusive), IFNULL and IFNONNULL
WITHOUT_CLASSIFICATION	2nd step: copies the bytecode of the method into a new bytevector, updates the offsets, and inserts (or removes) bytes as requested.
WITHOUT_CLASSIFICATION	reads and copies instruction
WITHOUT_CLASSIFICATION	skips 0 to 3 padding bytes
WITHOUT_CLASSIFICATION	jump offset GOTO_W newOffset now computed from start of GOTO_W
WITHOUT_CLASSIFICATION	skips 0 to 3 padding bytes
WITHOUT_CLASSIFICATION	reads and copies instruction
WITHOUT_CLASSIFICATION	updates the instructions addresses in the catch, local var and line number tables
WITHOUT_CLASSIFICATION	case MANA_INSN:
WITHOUT_CLASSIFICATION	opcodes visit method (- = idem)
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	scan from selection to end failed, so scan from start to selection
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Constructor --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Static initializer --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Implementation of the ClassVisitor interface --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Other public methods --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	computes the real size of the bytecode of this class
WITHOUT_CLASSIFICATION	allocates a byte vector of this size, in order to avoid unnecessary arraycopy operations in the ByteVector.enlarge() method
WITHOUT_CLASSIFICATION	special case: no current development version
WITHOUT_CLASSIFICATION	end AbstractOptionPane implementation
WITHOUT_CLASSIFICATION	begin ActionListener implementation
WITHOUT_CLASSIFICATION	helper method to get Font from plugin properties
WITHOUT_CLASSIFICATION	Constructor
WITHOUT_CLASSIFICATION	Attribute methods
WITHOUT_CLASSIFICATION	for toolbar display
WITHOUT_CLASSIFICATION	EBComponent implementation
WITHOUT_CLASSIFICATION	These JComponent methods provide the appropriate points to subscribe and unsubscribe this object to the EditBus
WITHOUT_CLASSIFICATION	QuickNotepadActions implementation
WITHOUT_CLASSIFICATION	Listener objects
WITHOUT_CLASSIFICATION	<Esc> closes a floating window
WITHOUT_CLASSIFICATION	cwd not implemented in this version
WITHOUT_CLASSIFICATION	end JcmdProcess.java
WITHOUT_CLASSIFICATION	Get full command line
WITHOUT_CLASSIFICATION	this will result in a slight speed up, since we don't need to read the DTD anyway, as AElfred is non-validating
WITHOUT_CLASSIFICATION	this will result in a slight speed up, since we don't need to read the DTD anyway, as AElfred is non-validating
WITHOUT_CLASSIFICATION	we remember which classes we don't exist because BeanShell tries loading all possible <imported prefix>.<class name> combinations
WITHOUT_CLASSIFICATION	if it's not in the class hash, and not marked as non-existent, try loading it from the CLASSPATH
WITHOUT_CLASSIFICATION	To avoid any problems if components are added or removed while the message is being sent
WITHOUT_CLASSIFICATION	Some Java versions return the clipboard contents using the native line separator, so have to convert it here
WITHOUT_CLASSIFICATION	Either class sun.tools.javac.Main or com.sun.tools.javac.Main must be there:
WITHOUT_CLASSIFICATION	Stop script kiddies from opening the edit server port and just leaving it open, as a DoS
WITHOUT_CLASSIFICATION	coming out of background mode. no views open. no buffers open if args empty.
WITHOUT_CLASSIFICATION	since recentBuffer will be set to the one that was closed
WITHOUT_CLASSIFICATION	- don't do these checks while a save is in progress, because for a moment newModTime will be greater than oldModTime, due to the multithreading - only supported on local file system
WITHOUT_CLASSIFICATION	this ensures that undo can clear the dirty flag properly when all edits up to a save are undone
WITHOUT_CLASSIFICATION	note that if firstLine == lastLine, loop does not execute
WITHOUT_CLASSIFICATION	fill in defaults for these from system properties if the corresponding buffer.XXX properties not set
WITHOUT_CLASSIFICATION	create a DirectoryEntry manually instead of using _vfs._getDirectoryEntry() since so many VFS's have broken implementations of this method
WITHOUT_CLASSIFICATION	Java does not support this encoding so we have to handle it manually.
WITHOUT_CLASSIFICATION	file begins with UTF-8-Y signature. discard the signature, and read the remainder as UTF-8.
WITHOUT_CLASSIFICATION	fix for "[ 865589 ] 0-byte files should open using the default line seperator"
WITHOUT_CLASSIFICATION	helper methods
WITHOUT_CLASSIFICATION	call sendBreak after fixed number of lines of stdout are read
WITHOUT_CLASSIFICATION	end JcmdProcessTest.java
WITHOUT_CLASSIFICATION	Big enough for a \r\n pair lookBehind[0] = most recent lookBehind[1] = second most recent
WITHOUT_CLASSIFICATION	Is this it? Is the class public or can we use accessibility?
WITHOUT_CLASSIFICATION	we don't know the right hand side of the assignment yet. has at least one setter of the right name?
WITHOUT_CLASSIFICATION	Add the '0-repeats' index positions.elementAt(z) == position [] in input after <<z>> matches
WITHOUT_CLASSIFICATION	Order these from longest to shortest Start by assuming longest (more repeats)
WITHOUT_CLASSIFICATION	These variables are package scope for fast access within the engine execution flags this match was made using
WITHOUT_CLASSIFICATION	These are, respectively, the first and last tokens in our linked list If there is only one token, firstToken == lastToken
WITHOUT_CLASSIFICATION	not in settings directory or jEdit home directory. no need to reload anything.
WITHOUT_CLASSIFICATION	}}} {{{ Insert the expansion
WITHOUT_CLASSIFICATION	$ at end is literal }}}
WITHOUT_CLASSIFICATION	later on we need to know if certain code is called from the main thread
WITHOUT_CLASSIFICATION	ok, this one seems to confuse newbies endlessly, so log it as NOTICE, not ERROR
WITHOUT_CLASSIFICATION	don't show splash screen if there is a file named 'nosplash' in the settings directory
WITHOUT_CLASSIFICATION	This reloads the token marker and sends a message which causes edit panes to repaint their text areas
WITHOUT_CLASSIFICATION	If only one new file is open which is clean, just close it, which will create an 'Untitled-1'
WITHOUT_CLASSIFICATION	can happen if the user presses C+w twice real quick and the buffer has unsaved changes
WITHOUT_CLASSIFICATION	paths on case-insensitive filesystems are stored as lower case in the hash.
WITHOUT_CLASSIFICATION	still need to call the status check even if the option is off, so that the write protection is updated if it changes on disk
WITHOUT_CLASSIFICATION	the problem with this is that if we have two edit panes looking at the same buffer and the file is reloaded both will jump to the same location
WITHOUT_CLASSIFICATION	Don't show the welcome message if jEdit was started with the -nosettings switch
WITHOUT_CLASSIFICATION	Log.log(Log.DEBUG,jEdit.class,"Adding edit mode " + mode.getName());
WITHOUT_CLASSIFICATION	if only one, clean, 'untitled' buffer is open, we replace it
WITHOUT_CLASSIFICATION	if the user pressed eg C+e n n in the search bar we want focus to go back there after the prefix is done
WITHOUT_CLASSIFICATION	we might have been closed as a result of the above
WITHOUT_CLASSIFICATION	we might have been closed as a result of the above
WITHOUT_CLASSIFICATION	tool bar and status bar gets added in propertiesChanged() depending in the 'tool bar alternate layout' setting.
WITHOUT_CLASSIFICATION	null some variables so that retaining references to closed views won't hurt as much.
WITHOUT_CLASSIFICATION	we create a stream tokenizer for parsing a simple stack-based language
WITHOUT_CLASSIFICATION	REVIEW This is horribly inefficient, but it ensures that we properly skip over bytes via the TarBuffer...
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Do not evaluate methods this() or super() in class instance space (i.e. inside a constructor)
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Check if a plugin with the same name is already loaded
WITHOUT_CLASSIFICATION	remove action sets, dockables, etc so that user doesn't see the broken plugin
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	endIndex is now position at a ')','\)' nextIndex is end of string or position after ')' or '\)'
WITHOUT_CLASSIFICATION	ONE-OR-MORE REPEAT OPERATOR + | \+ depending on RE_BK_PLUS_QM not available if RE_LIMITED_OPS is set
WITHOUT_CLASSIFICATION	ZERO-OR-ONE REPEAT OPERATOR / STINGY MATCHING OPERATOR ? | \? depending on RE_BK_PLUS_QM not available if RE_LIMITED_OPS is set stingy matching if RE_STINGY_OPS is set and it follows a quantifier
WITHOUT_CLASSIFICATION	WORD BREAK OPERATOR \b if ????
WITHOUT_CLASSIFICATION	DIGIT OPERATOR \d if RE_CHAR_CLASS_ESCAPES is set
WITHOUT_CLASSIFICATION	NON-WHITESPACE OPERATOR \S
WITHOUT_CLASSIFICATION	(?:) ?,??,+?,{}? (?=)(?!) \A,\Z \d,\D,\w,\W,\s,\S within [] (?#)
WITHOUT_CLASSIFICATION	if chain returns false, it "rejected" the token due to an optimization, and next was combined with lastToken
WITHOUT_CLASSIFICATION	next succeeds is a match try next option
WITHOUT_CLASSIFICATION	No absolute pathnames Windows (and Posix?) paths can start with "\\NetworkDrive\", so we loop on starting /'s.
WITHOUT_CLASSIFICATION	this will result in a slight speed up, since we don't need to read the DTD anyway, as AElfred is non-validating
WITHOUT_CLASSIFICATION	int totalDraw = (n + 1 + NUM_OVERSHOOT_BYTES) + (n + NUM_OVERSHOOT_BYTES) + n + 65537; compressOutOfMemory ( totalDraw, n );
WITHOUT_CLASSIFICATION	ensures that active view is saved last, ie created last on next load, ie in front on next load
WITHOUT_CLASSIFICATION	this will result in a slight speed up, since we don't need to read the DTD anyway, as AElfred is non-validating
WITHOUT_CLASSIFICATION	record \n and \t on lines specially so that auto indent can take place
WITHOUT_CLASSIFICATION	since subsequent macros with the same name are ignored, load user macros first so that they override the system macros.
WITHOUT_CLASSIFICATION	in case macro file name has a space in it. spaces break the view.toolBar property, for instance, since it uses spaces to delimit action names.
WITHOUT_CLASSIFICATION	System.err.println("y=" + y + ",offsetY=" + offsetY + ",size.height=" + size.height + ",win.height=" + win.getHeight());
WITHOUT_CLASSIFICATION	I'm not sure when this can happen, but it does sometimes, witness the jEdit bug tracker.
WITHOUT_CLASSIFICATION	Constructors.
WITHOUT_CLASSIFICATION	Constants for input.
WITHOUT_CLASSIFICATION	Read the value, normalizing whitespace if it is not CDATA.
WITHOUT_CLASSIFICATION	Check for surrogates: 00000000 0000xxxx yyyyyyyy zzzzzzzz (1101|10xx|xxyy|yyyy + 1101|11yy|zzzz|zzzz:
WITHOUT_CLASSIFICATION	Search for a matching tuple, and return the string if we find one.
WITHOUT_CLASSIFICATION	OK, add it to the end of the bucket.
WITHOUT_CLASSIFICATION	Attributes
WITHOUT_CLASSIFICATION	High-level I/O.
WITHOUT_CLASSIFICATION	UCS-4 must begin with "<!XML" 0x00 0x00 0x00 0x3c: UCS-4, big-endian (1234)
WITHOUT_CLASSIFICATION	Set up a snapshot of the current input source.
WITHOUT_CLASSIFICATION	Compare the input, character- by character.
WITHOUT_CLASSIFICATION	Buffers for decoded but unparsed character input.
WITHOUT_CLASSIFICATION	Buffer for undecoded raw byte input.
WITHOUT_CLASSIFICATION	This is necessary to have a file opened from the Finder before jEdit is running set as the currently active buffer.
WITHOUT_CLASSIFICATION	super(); }}}
WITHOUT_CLASSIFICATION	put forNameSpace it on the top of the stack Note: it's important that there is only one exit point from this method so that we can swap back the namespace.
WITHOUT_CLASSIFICATION	The lock is our declaring namespace's This reference (the method's 'super'). Or in the case of a class it's the class instance.
WITHOUT_CLASSIFICATION	Set untyped variable untyped param
WITHOUT_CLASSIFICATION	Check for explicit return of value from void method type. retControl.returnPoint is the Node of the return statement
WITHOUT_CLASSIFICATION	remove the bsh: get the index of the : between the host and the port is located
WITHOUT_CLASSIFICATION	Unwrap target exception. If the interface declares that it throws the ex it will be delivered. If not it will be wrapped in an UndeclaredThrowable
WITHOUT_CLASSIFICATION	Get the type by constructing a prototype array with arbitrary (zero) length in each dimension. int array default zeros
WITHOUT_CLASSIFICATION	If it had a different type throw error. This allows declaring the same var again, but not with a different (even if assignable) type.
WITHOUT_CLASSIFICATION	Careful here: else fall through to override and install the new typed version
WITHOUT_CLASSIFICATION	now done in NameSpace automatically when root The classes which are imported by default globalNameSpace.loadDefaultImports();
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	this will result in a slight speed up, since we don't need to read the DTD anyway, as AElfred is non-validating
WITHOUT_CLASSIFICATION	--------------------------------------------------------- The following instance variables mutate during evaluation and should be reset by the reset() method where necessary
WITHOUT_CLASSIFICATION	No variable or class found in 'this' type ref. if autoAllocateThis then create one; a child 'this'.
WITHOUT_CLASSIFICATION	null 'from' type corresponds to type of Primitive.NULL assign to any object type
WITHOUT_CLASSIFICATION	wrapper to primitive Convert value to Primitive and check/cast it.
WITHOUT_CLASSIFICATION	For operator-assign operations save the lhs value before evaluating the rhs. This is correct Java behavior for postfix operations e.g. i=1; i+=i++; should be 2 not 3
WITHOUT_CLASSIFICATION	number of nodes on stack current mark
WITHOUT_CLASSIFICATION	Try to load the module don't refer to it directly here or we're dependent upon it
WITHOUT_CLASSIFICATION	NULL return null as type... we currently use null type to indicate loose typing throughout bsh.
WITHOUT_CLASSIFICATION	Trying to cast primitive to an object type Primitive.NULL can be cast to any object type
WITHOUT_CLASSIFICATION	Begin BeanShell Modification - super constructor args null node, null callstack, ParseException knows where the error is.
WITHOUT_CLASSIFICATION	Push nulls for various args of invokeMethod interpreter callstack callerinfo
WITHOUT_CLASSIFICATION	Generate code to call ClassGeneratorUtil to get our switch index and give us args...
WITHOUT_CLASSIFICATION	check to see if the instance has already been initialized (the case if using a this() alternate constuctor)
WITHOUT_CLASSIFICATION	evaluate the instance portion of the block in it Evaluate the initializer block
WITHOUT_CLASSIFICATION	Handle ".class" suffix operation Prefix must be a BSHType
WITHOUT_CLASSIFICATION	}}} {{{ Word character...
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	this will result in a slight speed up, since we don't need to read the DTD anyway, as AElfred is non-validating
WITHOUT_CLASSIFICATION	we didn't have a component previously, so create a border
WITHOUT_CLASSIFICATION	{{{ filesActivated() method canDoubleClickClose set to false when ENTER pressed
WITHOUT_CLASSIFICATION	we expand those that are non-empty, and remove those that are empty
WITHOUT_CLASSIFICATION	{{{ setFoldLevel() method Also sets 'fold level valid' flag
WITHOUT_CLASSIFICATION	if auto wrap is on, always restart search. if auto wrap is off, and we're called from a macro, stop search. If we're called interactively, ask the user what to do.
WITHOUT_CLASSIFICATION	for backwards compatibility with plugins that fiddle with jEdit's UI layout
WITHOUT_CLASSIFICATION	we have binding foo but user asks to remove foo bar?
WITHOUT_CLASSIFICATION	we keep the first non-null frc we get, since sometimes we get invalid ones on subsequent pages on Windows
WITHOUT_CLASSIFICATION	this is handled a little differently from other jEdit settings as the splash screen flag needs to be known very early in the startup sequence, before the user properties have been loaded
WITHOUT_CLASSIFICATION	impl note: since multiple searches now allowed, extra level in hierarchy
WITHOUT_CLASSIFICATION	invalid regexp, ignore return true to avoid annoying beeping while typing a re
WITHOUT_CLASSIFICATION	we use a custom JRadioButton subclass that returns false for isFocusTraversable() so that the user can tab from the search field to the replace field with one keystroke
WITHOUT_CLASSIFICATION	the code above builds a 1-indexed suffix array, but we shift it to be 0-indexed, ignoring the original 0-th element
WITHOUT_CLASSIFICATION	Leave buffer in a consistent state if an error occurs
WITHOUT_CLASSIFICATION	{{{ lazily create skip and suffix arrays for either the search pattern, or the reversed search pattern
WITHOUT_CLASSIFICATION	used for the stringReplace and beanShell replace radio buttons, so that the user can press tab to go from the find field to the replace field in one go
WITHOUT_CLASSIFICATION	if the caret is on a collapsed fold, collapse the parent fold
WITHOUT_CLASSIFICATION	this is either style.getBackgroundColor() or styles[defaultID].getBackgroundColor()
WITHOUT_CLASSIFICATION	complete-word command needs a list of all non-alphanumeric characters used in a keyword map.
WITHOUT_CLASSIFICATION	}}} {{{ Paint bracket scope
WITHOUT_CLASSIFICATION	{{{ physDown() method scroll down by physical line amount
WITHOUT_CLASSIFICATION	still have to call this even if it equals the old one so that the offset manager sets the validity flag!
WITHOUT_CLASSIFICATION	No matter what happends... stops us from leaving buffer in a bad state
WITHOUT_CLASSIFICATION	Don't overstrike if we're on the end of the line
WITHOUT_CLASSIFICATION	so that end followed by up arrow will always put caret at the end of the previous line, for example setMagicCaretPosition(Integer.MAX_VALUE); }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	this is package-private so that the painter can use it without having to call getSelection() (which involves an array copy)
WITHOUT_CLASSIFICATION	try and merge existing selections one by one with the new selection
WITHOUT_CLASSIFICATION	if one line's chunks are invalid, remaining lines are also invalid
WITHOUT_CLASSIFICATION	case ClassWriter.FIELD: case ClassWriter.METH: case ClassWriter.IMETH:
WITHOUT_CLASSIFICATION	updates current stack size (max stack size unchanged because stack size variation always negative in this case)
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Utility methods: control flow analysis algorithm --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	copy of indexes copy of sizes instructions to be resized future offset of a jump instruction
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Perform a cast, cast check, or assignability check.@param toType the class type of the cast result, which may includeprimitive types, e.g. Byte.TYPE. toType may be null to indicate aloose type assignment (which matches any fromType).@param fromType is the class type of the value to be cast includingjava primitive TYPE classes for primitives.fromType should be null to indicate that the fromValue is or wouldbe Primitive.NULL@param fromValue an Object or bsh.Primitive primitive value (includingPrimitive.NULL or Primitive.VOID )@param checkOnly If checkOnly is true then fromValue must be null.FromType is checked for the cast to toType...If checkOnly is false then fromValue must be non-null(Primitive.NULL is ok) and the actual cast is performed.@throws UtilEvalError on invalid assignment (when operation isassignment ).@throws UtilTargetError wrapping ClassCastException on cast error (when operation is cast)@param operation is Types.CAST or Types.ASSIGNMENT@see Primitive.getType()
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	for debugging
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	I/O information. current reader current input stream current line number current column number type of input source stack of input soruces current external entity current character encoding. how many bytes read from current source.
WITHOUT_CLASSIFICATION	We'll print our banner using eval(String) in order to exercise the parser and get the basic expression classes loaded... This ameliorates the delay after typing the first statement.
WITHOUT_CLASSIFICATION	Disallowing VOIDs here was an easy way to support the throwing of a more descriptive error message on use of an undefined argument to a method call (very common). If it ever turns out that we need to support that for some reason we'll have to re-evaluate how we get "meta-information" about the arguments in the various invoke() methods that take Object []. We could either pass BSHArguments down to overloaded forms of the methods or throw an exception subtype including the argument position back up, where the error message wouldbe compounded.
WITHOUT_CLASSIFICATION	Primitive (number or void) is not normally an instanceofanything. But for internal use we'll test true for thebsh.Primitive class. i.e. (5 instanceof bsh.Primitive) will be true
WITHOUT_CLASSIFICATION	this will be the current parse character (pattern[index])
WITHOUT_CLASSIFICATION	this will result in a slight speed up, since we don't need to read the DTD anyway, as AElfred is non-validating
WITHOUT_CLASSIFICATION	fixes the hang that can occur if we 'save as' to a new filename which requires re-sorting
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Conversion to type descriptors --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	each JAR file listed in the plugin's jars property needs to know that we need them
WITHOUT_CLASSIFICATION	Maintain a count of errors.
WITHOUT_CLASSIFICATION	number of child nodes
WITHOUT_CLASSIFICATION	number of child nodes
WITHOUT_CLASSIFICATION	wrap the exception in a TargetException to propogate it up
WITHOUT_CLASSIFICATION	object is a java.lang wrapper for boolean, char, or number type
WITHOUT_CLASSIFICATION	ALTERNATION OPERATOR \| or | (if RE_NO_BK_VBAR) or newline (if RE_NEWLINE_ALT) not available if RE_LIMITED_OPS is set
WITHOUT_CLASSIFICATION	}}} }}} }}}
WITHOUT_CLASSIFICATION	{{{ removeBufferFromList() method
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Fields for the control flow graph analysis algorithm (used to compute the maximum stack size). A control flow graph contains one node per "basic block", and one edge per "jump" from one basic block to another. Each node (i.e., each basic block) is represented by the Label object that corresponds to the first instruction of this basic block. Each node also stores the list of its successors in the graph, as a linked list of Edge objects. --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	default for plugins that don't specify this property (ie, 4.1-style plugins) is to load them on startup
WITHOUT_CLASSIFICATION	overflow character from last data chunk.
WITHOUT_CLASSIFICATION	sanity check during development
WITHOUT_CLASSIFICATION	A definite node is constructed from a specified number of children. That number of nodes are popped from the stack and made the children of the definite node. Then the definite node is pushed on to the stack.
WITHOUT_CLASSIFICATION	while in list Out of list, index is one past ']'
WITHOUT_CLASSIFICATION	don't do this in static{} since we need jEdit.initMisc() run first so we have the jeditresource: protocol
WITHOUT_CLASSIFICATION	if value is null: - if default is null, unset user prop - else set user prop to "" else - if default equals value, ignore - if default doesn't equal value, set user
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Fields to optimize the creation of {@link Edge Edge} objects by using a pool of reusable objects. The (shared) pool is a linked list of Edge objects, linked to each other by their {@link Edge#poolNext} field. Each time a CodeWriter needs to allocate an Edge, it removes the first Edge of the pool and adds it to a private list of Edge objects. After the end of the control flow analysis algorithm, the Edge objects in the private list of the CodeWriter are added back to the pool (by appending this private list to the pool list; in order to do this in constant time, both head and tail of the private list are stored in this CodeWriter). --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	buffers retain a reference to the fold handler in question... and the easiest way to handle fold handler unloading is this...
WITHOUT_CLASSIFICATION	Buffer for parsed character data.
WITHOUT_CLASSIFICATION	We get stuck in infinite loops here when unicode escapesfail. Must re-init the char stream reader (ASCII_UCodeESC_CharStream.java)
WITHOUT_CLASSIFICATION	find the java method
WITHOUT_CLASSIFICATION	SUBEXPRESSIONS (...) | \(...\) depending on RE_NO_BK_PARENS
WITHOUT_CLASSIFICATION	even though this class is called AbstractOptionPane, it is not really abstract, since BufferOptions uses an instance of it to lay out its components.
WITHOUT_CLASSIFICATION	{{{ loadIfNecessary() method
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Implementation of the CodeVisitor interface --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	Buffer for parsed names.
WITHOUT_CLASSIFICATION	reinit the callstack
WITHOUT_CLASSIFICATION	Do we have the necessary jdk1.2 packages and optional package?
WITHOUT_CLASSIFICATION	I guess this is when we pass it as an argument? Setting locally
WITHOUT_CLASSIFICATION	not a comment create RE subexpression as token.
WITHOUT_CLASSIFICATION	{{{ addComponent() method
WITHOUT_CLASSIFICATION	{{{ setProperties() method
WITHOUT_CLASSIFICATION	adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	Hash table of attributes found in current start tag.
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	UNMATCHED RIGHT PAREN ) or \) throw exception if !syntax.get(RESyntax.RE_UNMATCHED_RIGHT_PAREN_ORD)
WITHOUT_CLASSIFICATION	private
WITHOUT_CLASSIFICATION	need to carry over file name and first line globs because they are not given to us by the XMode handler, but instead are filled in by the catalog loader.
WITHOUT_CLASSIFICATION	case of a backward jump with an offset < -32768. In this case we automatically replace GOTO with GOTO_W, JSR with JSR_W and IFxxx <l> with IFNOTxxx <l'> GOTO_W <l>, where IFNOTxxx is the "opposite" opcode of IFxxx (i.e., IFNE for IFEQ) and where <l'> designates the instruction just after the GOTO_W.
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	dockMenu.addItem(new NSMenuItem().separatorItem()); dockMenu.addItem(miMac);
WITHOUT_CLASSIFICATION	Create non-interactive local interpreter for this namespacewith source from the input stream and out/err same as this interpreter.
WITHOUT_CLASSIFICATION	If not found and there are arguments to match - Look for an overloaded assignable match (First find the method, then find accessible version of it)
WITHOUT_CLASSIFICATION	MATCH-ANY-CHARACTER OPERATOR (except possibly newline and null) .
WITHOUT_CLASSIFICATION	{{{ JARClassLoader constructor
WITHOUT_CLASSIFICATION	no need to do this for macros!
WITHOUT_CLASSIFICATION	GOTO_W
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ applicationShouldHandleReopen() method
WITHOUT_CLASSIFICATION	throw new EvalError("Sourced file: "+sourceFileInfo+" parser Error: " + e.getMessage( DEBUG ), node, callstack );
WITHOUT_CLASSIFICATION	Try static and then object, if allowed Note that the Java compiler should not allow both.
WITHOUT_CLASSIFICATION	search all of its interfaces breadth first
WITHOUT_CLASSIFICATION	ZERO-OR-MORE REPEAT OPERATOR
WITHOUT_CLASSIFICATION	see what JARClassLoader this class is in
WITHOUT_CLASSIFICATION	never called
WITHOUT_CLASSIFICATION	control flow analysis algorithm: while the block stack is not empty, pop a block from this stack, update the max stack size, compute the true (non relative) begin stack size of the successors of this block, and push these successors onto the stack (unless they have already been pushed onto the stack). Note: by hypothesis, the {@link Label#beginStackSize} of the blocks in the block stack are the true (non relative) beginning stack sizes of these blocks.
WITHOUT_CLASSIFICATION	Note: some interesting things are going on here.1) We swap instead of push... The primary mode of operation acts like we are in the enclosing namespace... (super must be preserved, etc.)2) We do not call the body block eval with the namespace override. Instead we allow it to create a second subordinate BlockNameSpace child of the forNameSpace. Variable propogation still works through the chain, but the block's child cleans the state between iteration. (which is correct Java behavior... see forscope4.bsh)
WITHOUT_CLASSIFICATION	WORD BEGIN OPERATOR \< if ????
WITHOUT_CLASSIFICATION	used to mark non-existent classes in class hash
WITHOUT_CLASSIFICATION	evaluate a method declaration
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Utility methods: dump bytecode array --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	End methods for interacting with Parser
WITHOUT_CLASSIFICATION	NULL means "no value". This ia a placeholder for primitive null value.
WITHOUT_CLASSIFICATION	If idealMatch fits targetMatch and this is the first match or targetMatch is more specific than the best match, make it the new best match.
WITHOUT_CLASSIFICATION	TAB ESCAPE \t
WITHOUT_CLASSIFICATION	{{{ cut() method
WITHOUT_CLASSIFICATION	{{{ CustomClassManager class
WITHOUT_CLASSIFICATION	Set the default entities here.
WITHOUT_CLASSIFICATION	The canonical file name is also absolute. No need for getAbsolutePath() here...
WITHOUT_CLASSIFICATION	private to prevent invocation with param that isn't a primitive-wrapper
WITHOUT_CLASSIFICATION	NON-SPECIAL CHARACTER (or escape to make literal) c | \ for example
WITHOUT_CLASSIFICATION	{{{ getRegister() method
WITHOUT_CLASSIFICATION	1st step: As explained above, resizing an instruction may require to resize another one, which may require to resize yet another one, and so on. The first step of the algorithm consists in finding all the instructions that need to be resized, without modifying the code. This is done by the following "fix point" algorithm: - parse the code to find the jump instructions whose offset will need more than 2 bytes to be stored (the future offset is computed from the current offset and from the number of bytes that will be inserted or removed between the source and target instructions). For each such instruction, adds an entry in (a copy of) the indexes and sizes arrays (if this has not already been done in a previous iteration!) - if at least one entry has been added during the previous step, go back to the beginning, otherwise stop. In fact the real algorithm is complicated by the fact that the size of TABLESWITCH and LOOKUPSWITCH instructions depends on their position in the bytecode (because of padding). In order to ensure the convergence of the algorithm, the number of bytes to be added or removed from these instructions is over estimated during the previous loop, and computed exactly only after the loop is finished (this requires another pass to parse the bytecode of the method).
WITHOUT_CLASSIFICATION	When the class is loaded, populate the hash table of attribute types.
WITHOUT_CLASSIFICATION	modifiers
WITHOUT_CLASSIFICATION	If this type of This implements it directly return this,else try complain that we don't have the proxy mechanism.
WITHOUT_CLASSIFICATION	If both original args were Primitives return a Primitive result else it was mixed (wrapper/primitive) return the wrapper type Exception is for boolean result, return the primitive
WITHOUT_CLASSIFICATION	bcm
WITHOUT_CLASSIFICATION	Overrides REToken.chain
WITHOUT_CLASSIFICATION	{{{ constructPath() method
WITHOUT_CLASSIFICATION	clear the static caches in BshClassManager
WITHOUT_CLASSIFICATION	visitInsn - - - - - - - - - - - - - - - visitIntInsn - visitLdcInsn int LDC_W = 19; - int LDC2_W = 20; - visitVarInsn - - - - int ILOAD_0 = 26; - int ILOAD_1 = 27; - int ILOAD_2 = 28; - int ILOAD_3 = 29; - int LLOAD_0 = 30; - int LLOAD_1 = 31; - int LLOAD_2 = 32; - int LLOAD_3 = 33; - int FLOAD_0 = 34; - int FLOAD_1 = 35; - int FLOAD_2 = 36; - int FLOAD_3 = 37; - int DLOAD_0 = 38; - int DLOAD_1 = 39; - int DLOAD_2 = 40; - int DLOAD_3 = 41; - int ALOAD_0 = 42; - int ALOAD_1 = 43; - int ALOAD_2 = 44; - int ALOAD_3 = 45; - visitInsn - - - - - - - visitVarInsn - - - - int ISTORE_0 = 59; - int ISTORE_1 = 60; - int ISTORE_2 = 61; - int ISTORE_3 = 62; - int LSTORE_0 = 63; - int LSTORE_1 = 64; - int LSTORE_2 = 65; - int LSTORE_3 = 66; - int FSTORE_0 = 67; - int FSTORE_1 = 68; - int FSTORE_2 = 69; - int FSTORE_3 = 70; - int DSTORE_0 = 71; - int DSTORE_1 = 72; - int DSTORE_2 = 73; - int DSTORE_3 = 74; - int ASTORE_0 = 75; - int ASTORE_1 = 76; - int ASTORE_2 = 77; - int ASTORE_3 = 78; - visitInsn - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - visitIincInsn visitInsn - - - - - - - - - - - - - - - - - - - visitJumpInsn - - - - - - - - - - - - - - - visitVarInsn visiTableSwitchInsn visitLookupSwitch visitInsn - - - - - visitFieldInsn - - - visitMethodInsn - - - int UNUSED = 186; NOT VISITED visitTypeInsn visitIntInsn visitTypeInsn visitInsn - visitTypeInsn - visitInsn - int WIDE = 196; NOT VISITED visitMultiANewArrayInsn visitJumpInsn - int GOTO_W = 200; - int JSR_W = 201; -
WITHOUT_CLASSIFICATION	Flags for reading literals.
WITHOUT_CLASSIFICATION	If null callstack
WITHOUT_CLASSIFICATION	invokeMethod() here is generally used by outside code to callbackinto the bsh interpreter. e.g. when we are acting as an interfacefor a scripted listener, etc. In this case there is no real call stackso we make a default one starting with the special JAVACODE namespaceand our namespace as the next.
WITHOUT_CLASSIFICATION	arithmetic
WITHOUT_CLASSIFICATION	eof
WITHOUT_CLASSIFICATION	this has been changed since 1.03 to be non-overlapping matches
WITHOUT_CLASSIFICATION	have to handle this case specially on windows. insert \ between, eg A: and myfile.txt.
WITHOUT_CLASSIFICATION	{{{ ToolBar-related constants
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Utility methods: constant pool management --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	Error reporting.
WITHOUT_CLASSIFICATION	Invoke the block, overriding namespace with localNameSpace
WITHOUT_CLASSIFICATION	a default hashCode()
WITHOUT_CLASSIFICATION	can't cast void to anything
WITHOUT_CLASSIFICATION	Thanks to Sreenivasa Viswanadha for suggesting how to get rid of expensivelookahead here.
WITHOUT_CLASSIFICATION	Create a new REMatch to hold results
WITHOUT_CLASSIFICATION	{{{ saveBackup() method
WITHOUT_CLASSIFICATION	{{{ saveBackup() method
WITHOUT_CLASSIFICATION	{{{ Layers
WITHOUT_CLASSIFICATION	Method body can only use 'return' statment type return control.
WITHOUT_CLASSIFICATION	These are necessary to let us test synchronization from scripts
WITHOUT_CLASSIFICATION	Only allow legal Java assignment unless we're a CAST operation
WITHOUT_CLASSIFICATION	@bgen(jjtree) ArrayInitializer
WITHOUT_CLASSIFICATION	Optimization: check if anchor + minimumLength > length
WITHOUT_CLASSIFICATION	if backup file was created less than 'backupTimeDistance' ago, we do not create the backup
WITHOUT_CLASSIFICATION	{{{ actionBar() method
WITHOUT_CLASSIFICATION	Read the attribute name.
WITHOUT_CLASSIFICATION	retControl.returnPoint is the Node of the return statement
WITHOUT_CLASSIFICATION	null evalname and we're finished base object for current eval
WITHOUT_CLASSIFICATION	Begin BeanShell Modification - constructor
WITHOUT_CLASSIFICATION	Originally called ResultType in the grammar
WITHOUT_CLASSIFICATION	Special handling at end of input for e.g. "$"
WITHOUT_CLASSIFICATION	{{{ quicksort() method
WITHOUT_CLASSIFICATION	{{{ quicksort() method
WITHOUT_CLASSIFICATION	this should never throw an exception.
WITHOUT_CLASSIFICATION	Inform the handler about the attribute.
WITHOUT_CLASSIFICATION	If return type void, return void as the value.
WITHOUT_CLASSIFICATION	Note: it's ok to cache class resolution here because when the class space changes the namespace will discard cached names.
WITHOUT_CLASSIFICATION	EOF, not zero read apparently
WITHOUT_CLASSIFICATION	Expression syntax follows.
WITHOUT_CLASSIFICATION	Precondition: pattern[index-1] == ':' we will return pos of closing ']'.
WITHOUT_CLASSIFICATION	{{{ isToolsJarAvailable() method
WITHOUT_CLASSIFICATION	Bind to any port on localhost; accept 2 simultaneous connection attempts before rejecting connections
WITHOUT_CLASSIFICATION	Found "<?"
WITHOUT_CLASSIFICATION	If we have type info and the child is an array initializerpass it along... Else use the default eval style.(This allows array initializer to handle the problem... allowing for future enhancements in loosening types there).
WITHOUT_CLASSIFICATION	Is it a simple variable name?Doing this first gives the correct Java precedence for vars vs. imported class names (at least in the simple case - seetests/precedence1.bsh). It should also speed things up a bit.
WITHOUT_CLASSIFICATION	@bgen(jjtree) MethodInvocation
WITHOUT_CLASSIFICATION	Check for {} tomfoolery
WITHOUT_CLASSIFICATION	{{{ parsePermissions() method
WITHOUT_CLASSIFICATION	we have to deal with a huge range of possible border cases here.
WITHOUT_CLASSIFICATION	Make a hash of the interface hashcodes in order to cache them
WITHOUT_CLASSIFICATION	Is it a bsh script variable reference?If we're just starting the eval of name (no base object)or we're evaluating relative to a This type reference check.
WITHOUT_CLASSIFICATION	Generate code to push the BSHTHIS or BSHSTATIC field
WITHOUT_CLASSIFICATION	@bgen(jjtree) Arguments
WITHOUT_CLASSIFICATION	We could let a String fall through to final input, but since it's the most likely input type, we check it first.
WITHOUT_CLASSIFICATION	{{{ Expansion class
WITHOUT_CLASSIFICATION	no background mode, and opening a new view
WITHOUT_CLASSIFICATION	Get the string of enumerated values if necessary.
WITHOUT_CLASSIFICATION	leave null
WITHOUT_CLASSIFICATION	Is it a class name?If we're just starting eval of name try to make it, else fail.
WITHOUT_CLASSIFICATION	Push 'this'
WITHOUT_CLASSIFICATION	@bgen(jjtree) Block
WITHOUT_CLASSIFICATION	UNDONE When File lets us get the userName, use it!
WITHOUT_CLASSIFICATION	}}} {{{ Handle $
WITHOUT_CLASSIFICATION	{{{ getBufferSwitcher() method
WITHOUT_CLASSIFICATION	getClassInstance() throws exception if not there
WITHOUT_CLASSIFICATION	Push the name of the method as a constant
WITHOUT_CLASSIFICATION	@bgen(jjtree) IfStatement
WITHOUT_CLASSIFICATION	freq table collected to save a pass over the data during decompression.
WITHOUT_CLASSIFICATION	if no server running and user runs jedit -quit, just exit
WITHOUT_CLASSIFICATION	{{{ loadCaretInfo() method
WITHOUT_CLASSIFICATION	Parse a conditional section. [63] conditionalSect ::= includeSect || ignoreSect [64] includeSect ::= '<![' %'INCLUDE' '[' (%markupdecl) ']]>' [65] ignoreSect ::= '<![' %'IGNORE' '[' ignoreSectContents ']]>' [66] ignoreSectContents ::= ((SkipLit | Comment | PI) -(Char ']]>')) | ('<![' ignoreSectContents ']]>') | (Char - (']' | [<'"])) | ('<!' (Char - ('-' | '['))) NOTE: the '<![' has already been read. TODO: verify that I am handling ignoreSectContents right.
WITHOUT_CLASSIFICATION	If we've fallen through here we are no longer resolving toa class type.
WITHOUT_CLASSIFICATION	generate the default branch of switch
WITHOUT_CLASSIFICATION	@bgen(jjtree) WhileStatement
WITHOUT_CLASSIFICATION	always: in the range 0 .. 9. The current block size is 100000 this number.
WITHOUT_CLASSIFICATION	{{{ Property methods
WITHOUT_CLASSIFICATION	@bgen(jjtree) ReturnStatement
WITHOUT_CLASSIFICATION	fall through
WITHOUT_CLASSIFICATION	NOTE We have fit EOF, and the block is not full! This is a broken archive. It does not follow the standard blocking algorithm. However, because we are generous, and it requires little effort, we will simply ignore the error and continue as if the entire block were read. This does not appear to break anything upstream. We used to return false in this case. Thanks to 'Yohann.Roussel@alcatel.fr' for this fix.
WITHOUT_CLASSIFICATION	file name
WITHOUT_CLASSIFICATION	{{{ getColorProperty() method
WITHOUT_CLASSIFICATION	left == default case
WITHOUT_CLASSIFICATION	OK, the cheat didn't work; start over and do it by the book.
WITHOUT_CLASSIFICATION	don't break jEdit core and plugins! throw new InterpreterError("null variable value");
WITHOUT_CLASSIFICATION	Generate a branch of the constructor switch. This method is called bygenerateConstructorSwitch.The code generated by this method assumes that the argument array is on the stack.
WITHOUT_CLASSIFICATION	@bgen(jjtree) ReturnStatement
WITHOUT_CLASSIFICATION	index of the last char in the block, so the block size == last + 1.
WITHOUT_CLASSIFICATION	Start with a little cheat. Most of the time, the white space will fall within the current read buffer; if not, then fall through.
WITHOUT_CLASSIFICATION	If recurse, set global untyped var, else set it here. NameSpace varScope = recurse ? getGlobal() : this; This modification makes default allocation local
WITHOUT_CLASSIFICATION	bubble up if allowed
WITHOUT_CLASSIFICATION	ok?
WITHOUT_CLASSIFICATION	squeltch
WITHOUT_CLASSIFICATION	squeltch
WITHOUT_CLASSIFICATION	Setting up the unzftab entries here is not strictly necessary, but it does save having to do it later in a separate pass, and so saves a block's worth of cache misses.
WITHOUT_CLASSIFICATION	{{{ getMode() method
WITHOUT_CLASSIFICATION	{{{ getAutosaveFile() method
WITHOUT_CLASSIFICATION	Normalise whitespace if necessary.
WITHOUT_CLASSIFICATION	try parent
WITHOUT_CLASSIFICATION	forcclass
WITHOUT_CLASSIFICATION	Note: technically I think we could get by passing in only thecurrent namespace or perhaps BshClassManager here instead of CallStack and Interpreter. However let's just play it safe in caseof future changes - anywhere you eval a node you need these.
WITHOUT_CLASSIFICATION	Undo the MTF values for the selectors.
WITHOUT_CLASSIFICATION	{{{ newFile() method
WITHOUT_CLASSIFICATION	{{{ addBufferChangeListener() method
WITHOUT_CLASSIFICATION	system id
WITHOUT_CLASSIFICATION	Add the new typed var
WITHOUT_CLASSIFICATION	If this was a literal "super" reference then we allow recursionin setting the variable to get the normal effect of finding thenearest definition starting at the super scope. On any otherresolution qualified by a 'this' type reference we want to setthe variable directly in that scope. e.g. this.x=5; or someThisType.x=5;In the old scoping rules super didn't do this.
WITHOUT_CLASSIFICATION	type is correct here
WITHOUT_CLASSIFICATION	Word boundary means input[index-1] was a word character and input[index] is not, or input[index] is a word character and input[index-1] was not In the string "one two three", these positions match: |o|n|e| |t|w|o| |t|h|r|e|e| ^ ^ ^ ^ ^ ^ is current character a letter or digit? is previous character a letter or digit?
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	Wait for pending I/O requests
WITHOUT_CLASSIFICATION	Wait for pending I/O requests
WITHOUT_CLASSIFICATION	will be cached from now on...
WITHOUT_CLASSIFICATION	Utility routines.
WITHOUT_CLASSIFICATION	declaredOnly
WITHOUT_CLASSIFICATION	declaredOnly
WITHOUT_CLASSIFICATION	declaredOnly
WITHOUT_CLASSIFICATION	Note: if we want methods declared inside blocks to be accessible via this.methodname() inside the block we could handle it here as a special case. See also resolveThisFieldReference() special handling for BlockNameSpace case. They currently work via the direct name e.g. methodName().
WITHOUT_CLASSIFICATION	auto-gen default constructor use default super constructor
WITHOUT_CLASSIFICATION	number of times we've matched so far
WITHOUT_CLASSIFICATION	Create a new file when the last is closed
WITHOUT_CLASSIFICATION	{{{ Edit modes, syntax highlighting
WITHOUT_CLASSIFICATION	The new length is <= the old one.
WITHOUT_CLASSIFICATION	Try object imports
WITHOUT_CLASSIFICATION	found an object and it's not an undefined variable
WITHOUT_CLASSIFICATION	Determine if the constructor calls this() or super()
WITHOUT_CLASSIFICATION	Check for stingy match for each possibility.
WITHOUT_CLASSIFICATION	Nodes and heap entries run from 1. Entry 0 for both the heap and nodes is a sentinel.
WITHOUT_CLASSIFICATION	Nodes and heap entries run from 1. Entry 0 for both the heap and nodes is a sentinel.
WITHOUT_CLASSIFICATION	Nodes and heap entries run from 1. Entry 0 for both the heap and nodes is a sentinel.
WITHOUT_CLASSIFICATION	Nodes and heap entries run from 1. Entry 0 for both the heap and nodes is a sentinel.
WITHOUT_CLASSIFICATION	Nodes and heap entries run from 1. Entry 0 for both the heap and nodes is a sentinel.
WITHOUT_CLASSIFICATION	Nodes and heap entries run from 1. Entry 0 for both the heap and nodes is a sentinel.
WITHOUT_CLASSIFICATION	{{{ closeAllBuffers() method
WITHOUT_CLASSIFICATION	{{{ closeAllBuffers() method
WITHOUT_CLASSIFICATION	{{{ need to convert entries of 'props' to PropValue instances
WITHOUT_CLASSIFICATION	Insert the content type, if any.
WITHOUT_CLASSIFICATION	Try static imports
WITHOUT_CLASSIFICATION	this() constructors come after super constructors in the table
WITHOUT_CLASSIFICATION	Order these from longest to shortest Start by assuming longest (more repeats)
WITHOUT_CLASSIFICATION	A 6-byte block header, the value chosen arbitrarily as 0x314159265359 :-). A 32 bit value does not really give a strong enough guarantee that the value will not appear by chance in the compressed datastream. Worst-case probability of this event, for a 900k block, is about 2.0e-3 for 32 bits, 1.0e-5 for 40 bits and 4.0e-8 for 48 bits. For a compressed file of size 100Gb -- about 100000 blocks -- only a 48-bit marker will do. NB: normal compression/ decompression do not rely on these statistical properties. They are only important when trying to recover blocks from damaged files.
WITHOUT_CLASSIFICATION	close remaining buffers (the close dialog only deals with dirty ones)
WITHOUT_CLASSIFICATION	we do a write lock so that the autosave, which grabs a read lock, is not executed between the deletion of the autosave file and clearing of the dirty flag
WITHOUT_CLASSIFICATION	If we want to support multiple commands in the command path we need tochange this to not throw the exception.
WITHOUT_CLASSIFICATION	Check for existing method
WITHOUT_CLASSIFICATION	Create the instance 'This' namespace, set it on the object instance and invoke the instance initializer
WITHOUT_CLASSIFICATION	Find new doablesLast
WITHOUT_CLASSIFICATION	20 is just a paranoia constant
WITHOUT_CLASSIFICATION	{{{ saveAllBuffers() method
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	UCS-4 must begin with "<!XML" 0x3c 0x00 0x00 0x00: UCS-4, little-endian (4321)
WITHOUT_CLASSIFICATION	return countParts(value) > 1;
WITHOUT_CLASSIFICATION	The object instance has already been initialzed by another constructor. Fall through to invoke the constructor body below.
WITHOUT_CLASSIFICATION	At this point we've either got too many or just the right amount. See if this numRepeats works with the rest of the regexp.
WITHOUT_CLASSIFICATION	Write `magic' bytes h indicating file-format == huffmanised, followed by a digit indicating blockSize100k.
WITHOUT_CLASSIFICATION	auto reload changed buffers?
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	UCS-4 must begin with "<!XML" 0x00 0x3c 0x00 0x00: UCS-4, unusual (3421)
WITHOUT_CLASSIFICATION	Test all possible matches for this number of repeats
WITHOUT_CLASSIFICATION	Complete the big bucket [ss] by quicksorting any unsorted small buckets [ss, j]. Hopefully previous pointer-scanning phases have already completed many of the small buckets [ss, j], so we don't have to sort them at all.
WITHOUT_CLASSIFICATION	... sweet. saveBackup() will create backupDir if it doesn't exist.
WITHOUT_CLASSIFICATION	{{{ ParentMouseHandler class
WITHOUT_CLASSIFICATION	UCS-2 with a byte-order marker. 0xff 0xfe: UCS-2, little-endian (21)
WITHOUT_CLASSIFICATION	Can't call it getClass()
WITHOUT_CLASSIFICATION	handle primitive widening conversions - JLS 5.1.2
WITHOUT_CLASSIFICATION	overrideNamespace
WITHOUT_CLASSIFICATION	Now scan this big bucket so as to synthesise the sorted order for small buckets [t, ss] for all t != ss.
WITHOUT_CLASSIFICATION	Even if reallyExit is false, we still exit properly if background mode is off
WITHOUT_CLASSIFICATION	compare existing entries' hashcode with this
WITHOUT_CLASSIFICATION	Compare with number of dimensions actually created with the number specified (syntax uses the undefined ones here)
WITHOUT_CLASSIFICATION	Some kind of 8-bit encoding without "<?XML" (otherwise) UTF-8 without encoding/XML declaration
WITHOUT_CLASSIFICATION	Lots of preconditions checked here...Once things are running smoothly we might comment these out(That's what assertions are for).
WITHOUT_CLASSIFICATION	dimensionsNode can return either a fully intialized array or VOID.when VOID the prescribed array dimensions (defined and undefined)are contained in the node.
WITHOUT_CLASSIFICATION	so that we don't try to reset() right away
WITHOUT_CLASSIFICATION	so that we don't try to reset() right away
WITHOUT_CLASSIFICATION	Find the coding table which is best for this group, and record its identity in the selector table.
WITHOUT_CLASSIFICATION	in this case, we can't directly call view.close(); we have to call closeView() for all open views
WITHOUT_CLASSIFICATION	execute nodes, skipping labels, until a break or return
WITHOUT_CLASSIFICATION	Check for entity recursion.
WITHOUT_CLASSIFICATION	--- Instance data ---
WITHOUT_CLASSIFICATION	Both primitives, do primitive cast
WITHOUT_CLASSIFICATION	filter
WITHOUT_CLASSIFICATION	check if input is at a valid position
WITHOUT_CLASSIFICATION	10
WITHOUT_CLASSIFICATION	Stop server
WITHOUT_CLASSIFICATION	{{{ EnhancedButton constructor
WITHOUT_CLASSIFICATION	Stop all plugins
WITHOUT_CLASSIFICATION	Delegate to the static method
WITHOUT_CLASSIFICATION	Test for a match, and push the character back if the match fails.
WITHOUT_CLASSIFICATION	Interpreter has no input stream, use eval() only Interpreter has no input stream, use eval() only Interpreter has a user, print prompts, etc.
WITHOUT_CLASSIFICATION	Object r = checkOnly ? VALID_CAST :
WITHOUT_CLASSIFICATION	Perform a suffix operation on the given object and return the new value.<p>obj will be a Node when suffix evaluation begins, allowing us tointerpret it contextually. (e.g. for .class) Thereafter it will be an value object or LHS (as determined by toLHS).<p>We must handle the toLHS case at each point here.<p>
WITHOUT_CLASSIFICATION	copy 3
WITHOUT_CLASSIFICATION	{{{ updatePosition() method
WITHOUT_CLASSIFICATION	if no requests are running, requestDone() will not be called, so we must queue the AWT runner ourselves.
WITHOUT_CLASSIFICATION	Also cache the class so that no import resolution must occur this avoids having to load our enclosing class which isn't finished being generated yet... oy.
WITHOUT_CLASSIFICATION	Low-level I/O.
WITHOUT_CLASSIFICATION	need to set the input stream - reinit the parser?
WITHOUT_CLASSIFICATION	Primitive to arbitrary object type. Allow Primitive.castToType() to handle it as well as cases of Primitive.NULL and Primitive.VOID
WITHOUT_CLASSIFICATION	Evaluate our prefix if it needs evaluating first.If this is the first evaluation our prefix mayb be a Node (directly from the PrimaryPrefix) - eval() it to an object. If it's an LHS, resolve to a value.Note: The ambiguous name construct is now necessary where the node may be an ambiguous name. If this becomes common we might want to make a static method nodeToObject() or something. The point is that we can't just eval() - we need to direct the evaluation to the context sensitive type of result; namely object, class, etc.
WITHOUT_CLASSIFICATION	a la Perl, $0 is whole thing, $1 - $9 are subexpressions
WITHOUT_CLASSIFICATION	if started with java -jar jedit.jar
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Constructor --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	Read as many bytes as possible into the read buffer.
WITHOUT_CLASSIFICATION	init the static shared sharedObject if it's not there yet
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	map
WITHOUT_CLASSIFICATION	index tracks the position in the char array
WITHOUT_CLASSIFICATION	Pass 3: layout components
WITHOUT_CLASSIFICATION	Log.log(Log.DEBUG,jEdit.class,fnf);
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Fields --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	strict
WITHOUT_CLASSIFICATION	Dispatch to an encoding-specific reader method to populate the readBuffer.
WITHOUT_CLASSIFICATION	bsh.evalOnly
TEST	TODO Update this after old tests pass and then update the old tests to reflect this change.
TEST	DMS this is totally untested.
WITHOUT_CLASSIFICATION	Delete the ActionContributionItems with matching action.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Recompute the read only state.
WITHOUT_CLASSIFICATION	Refresh any actions that may become enabled or disabled.
WITHOUT_CLASSIFICATION	Create the command stack that will notify this editor as commands are executed.
WITHOUT_CLASSIFICATION	Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Try to select the affected objects.
WITHOUT_CLASSIFICATION	Create the editing domain with a special command stack.
WITHOUT_CLASSIFICATION	Make sure it's okay.
WITHOUT_CLASSIFICATION	Create an adapter factory that yields item providers.
WITHOUT_CLASSIFICATION	Try to select the items in the current content viewer of the editor.
WITHOUT_CLASSIFICATION	If it is changing...
WITHOUT_CLASSIFICATION	Create the listener on demand.
WITHOUT_CLASSIFICATION	Stop listening to the old one.
WITHOUT_CLASSIFICATION	Start listening to the new one.
WITHOUT_CLASSIFICATION	Remember it.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Set the editors selection based on the current viewer's selection.
WITHOUT_CLASSIFICATION	Load the resource through the editing domain.
WITHOUT_CLASSIFICATION	Create a page for the selection tree view.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Ensures that this editor will only display the page's tab area if there are more than one page
WITHOUT_CLASSIFICATION	The content outline is just a tree.
WITHOUT_CLASSIFICATION	This is the page for the list viewer
WITHOUT_CLASSIFICATION	This is the page for the tree viewer
WITHOUT_CLASSIFICATION	This is the page for the table viewer.
WITHOUT_CLASSIFICATION	This is the page for the table tree viewer.
WITHOUT_CLASSIFICATION	Make sure our popups work.
WITHOUT_CLASSIFICATION	Select the root object in the view.
WITHOUT_CLASSIFICATION	Listen to selection so that we can handle it is a special way.
WITHOUT_CLASSIFICATION	This ensures that we handle selections correctly.
WITHOUT_CLASSIFICATION	Set the selection to the widget.
WITHOUT_CLASSIFICATION	Save only resources that have actually changed.
WITHOUT_CLASSIFICATION	Do the work within an operation because this is a long running activity that modifies the workbench.
WITHOUT_CLASSIFICATION	Set the input to the widget.
WITHOUT_CLASSIFICATION	Save the resources to the file system.
WITHOUT_CLASSIFICATION	This runs the options, and shows progress.
WITHOUT_CLASSIFICATION	Refresh the necessary state.
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Create a default .jetsettings file file
WITHOUT_CLASSIFICATION	Something went wrong that shouldn't.
WITHOUT_CLASSIFICATION	Set the new variables.
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.emf.ecore.util.ExtendedMetaData#getPackage(java.lang.String)
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Remember the static instance.
WITHOUT_CLASSIFICATION	Check the type of the specified child object and return the proper feature to use for adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$
WITHOUT_CLASSIFICATION	Ecore2XMLResourceFactoryImpl
WITHOUT_CLASSIFICATION	The switch that delegates to the <code>createXXX</code> methods. <!-- begin-user-doc --> <!-- end-user-doc --> @generated
WITHOUT_CLASSIFICATION	Ecore2XMLAdapterFactory
WITHOUT_CLASSIFICATION	Ecore2XMLSwitch
WITHOUT_CLASSIFICATION	Obtain or create and register package
WITHOUT_CLASSIFICATION	Ecore2XMLResourceFactoryImpl
WITHOUT_CLASSIFICATION	FunctionNamePairImpl
WITHOUT_CLASSIFICATION	MappingFactoryImpl
WITHOUT_CLASSIFICATION	ComplexTypeConverterImpl
WITHOUT_CLASSIFICATION	MappingHelperImpl
WITHOUT_CLASSIFICATION	MappingStrategyImpl
WITHOUT_CLASSIFICATION	FunctionPairImpl
WITHOUT_CLASSIFICATION	Initialize simple dependencies
WITHOUT_CLASSIFICATION	Create package meta-data objects
WITHOUT_CLASSIFICATION	Mark meta-data to indicate it can't be changed
WITHOUT_CLASSIFICATION	Create classes and their features
WITHOUT_CLASSIFICATION	Initialize package
WITHOUT_CLASSIFICATION	Create type parameters
WITHOUT_CLASSIFICATION	Set bounds for type parameters
WITHOUT_CLASSIFICATION	Add supertypes to classes
WITHOUT_CLASSIFICATION	Initialize classes and features; add operations and parameters
WITHOUT_CLASSIFICATION	Create resource
WITHOUT_CLASSIFICATION	MappingImpl
WITHOUT_CLASSIFICATION	Remove zero width non-breaking space, which may be used as a byte order marker, and may be ignored according to the Unicode FAQ: http:www.unicode.org/unicode/faq/utf_bom.html#38
WITHOUT_CLASSIFICATION	TypeConverterImpl
WITHOUT_CLASSIFICATION	Barring a better result, this will be the result.
WITHOUT_CLASSIFICATION	If the intersection is empty, i.e., no ancestor is in the mapping...
WITHOUT_CLASSIFICATION	If this mapping isn't a parent, it's children definitely won't be either.
WITHOUT_CLASSIFICATION	Make sure the collections aren't identical...
WITHOUT_CLASSIFICATION	FB used to check for parent != null. Need to find the top most model object not including the resource. parent instanceof Eobject only checks for trees in model object space.
WITHOUT_CLASSIFICATION	printAdapters();
WITHOUT_CLASSIFICATION	MappingRootImpl
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	Try to select the items in the current content viewer of the editor.
WITHOUT_CLASSIFICATION	If it is changing...
WITHOUT_CLASSIFICATION	Create the listener on demand.
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	VAJ kludge
WITHOUT_CLASSIFICATION	This just notifies those things that are affected by the selection.
WITHOUT_CLASSIFICATION	Remember the static instance.
WITHOUT_CLASSIFICATION	Stop listening to the old one.
WITHOUT_CLASSIFICATION	Start listening to the new one.
WITHOUT_CLASSIFICATION	Remember it.
WITHOUT_CLASSIFICATION	EATM getDecoratedAdapterFactory().
WITHOUT_CLASSIFICATION	EATM getDecoratedAdapterFactory().
WITHOUT_CLASSIFICATION	EATM getDecoratedAdapterFactory().
WITHOUT_CLASSIFICATION	Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus.
WITHOUT_CLASSIFICATION	I assume that the editorInput is a file object.
WITHOUT_CLASSIFICATION	Handle the creation of the model from the modelFile.
WITHOUT_CLASSIFICATION	Restore the persistent command stack, if need be.
WITHOUT_CLASSIFICATION	Create a page for the selection tree view.
WITHOUT_CLASSIFICATION	Set up the tree viewer.
WITHOUT_CLASSIFICATION	Make sure our popups work.
WITHOUT_CLASSIFICATION	Select the root object in the view.
WITHOUT_CLASSIFICATION	This ensures that we handle selections correctly.
WITHOUT_CLASSIFICATION	Do the work within an operation because this is a long running activity that modifies the workbench.
WITHOUT_CLASSIFICATION	Load the resource through the editing domain. This will create a context and associate it with the resource set.
WITHOUT_CLASSIFICATION	The one object in the resource's extent should be the root object.
WITHOUT_CLASSIFICATION	Save the resource to the file system.
WITHOUT_CLASSIFICATION	Update the workbench's knowledge of the file's contents.
WITHOUT_CLASSIFICATION	Add the binding to the provided hash table:
WITHOUT_CLASSIFICATION	Refresh the necessary state.
WITHOUT_CLASSIFICATION	Something went wrong that shouldn't.
WITHOUT_CLASSIFICATION	Parse as an attribute=value:
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Create the mapping domain with a special command stack.
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Doing this just makes focus go to the default control, not the control that last has focus. super.setFocus();
WITHOUT_CLASSIFICATION	If the object is an input or output object, then use it.
WITHOUT_CLASSIFICATION	Process the children recursively.
WITHOUT_CLASSIFICATION	Look for a single-char work delimiter:
WITHOUT_CLASSIFICATION	oldWidth = table.getClientArea().width;
WITHOUT_CLASSIFICATION	Remember the static instance.
WITHOUT_CLASSIFICATION	Check the type of the specified child object and return the proper feature to use for adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	MappingPackage ePackage = ((ComplexTypeConverter)object).ePackageMapping();
WITHOUT_CLASSIFICATION	This is for the in2out feature.
WITHOUT_CLASSIFICATION	This is for the out2in feature.
WITHOUT_CLASSIFICATION	HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());
WITHOUT_CLASSIFICATION	This is for the in2out feature.
WITHOUT_CLASSIFICATION	This is for the topDown feature.
WITHOUT_CLASSIFICATION	MappingPackage ePackage = ((MappingRoot)msg.getNotifier()).ePackageMapping();
WITHOUT_CLASSIFICATION	hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());
WITHOUT_CLASSIFICATION	MappingPackage ePackage = ((FunctionNamePair)object).ePackageMapping();
WITHOUT_CLASSIFICATION	This is for the in2out feature.
WITHOUT_CLASSIFICATION	This is for the out2in feature.
WITHOUT_CLASSIFICATION	MappingPackage ePackage = ((FunctionNamePair)msg.getNotifier()).ePackageMapping();
WITHOUT_CLASSIFICATION	HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());
WITHOUT_CLASSIFICATION	MappingPackage ePackage = ((FunctionPair)object).ePackageMapping();
WITHOUT_CLASSIFICATION	MappingPackage ePackage = ((FunctionPair)msg.getNotifier()).ePackageMapping();
WITHOUT_CLASSIFICATION	HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());
WITHOUT_CLASSIFICATION	This is here only to support deprecated adapt(object) rather than adapt(object, Interface.class). supportedTypes.add(null);
WITHOUT_CLASSIFICATION	supportedTypes.add(IUpdateableItemText.class);
WITHOUT_CLASSIFICATION	FB ?????
WITHOUT_CLASSIFICATION	This is for the helper feature.
WITHOUT_CLASSIFICATION	This is for the typeMapping feature.
WITHOUT_CLASSIFICATION	FIX:::
WITHOUT_CLASSIFICATION	hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());
WITHOUT_CLASSIFICATION	fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());
WITHOUT_CLASSIFICATION	The switch that delegates to the <code>createXXX</code> methods. <!-- begin-user-doc --> <!-- end-user-doc --> @generated
WITHOUT_CLASSIFICATION	Create a resource set and load the model file into it.
WITHOUT_CLASSIFICATION	This is the path of the target directory.
WITHOUT_CLASSIFICATION	Break the cycle.
WITHOUT_CLASSIFICATION	MappingAdapterFactory
WITHOUT_CLASSIFICATION	This ensures that we are dealing with actual MOF objects.
WITHOUT_CLASSIFICATION	MappingSwitch
WITHOUT_CLASSIFICATION	This is the name of the model.
WITHOUT_CLASSIFICATION	Create a resource set and load the model file into it.
WITHOUT_CLASSIFICATION	This is the path of the target directory.
WITHOUT_CLASSIFICATION	This is to handle a genmodel produced by rose2genmodel.
WITHOUT_CLASSIFICATION	This is to handle a genmodel produced by rose2genmodel.
WITHOUT_CLASSIFICATION	Clean up any old project information.
WITHOUT_CLASSIFICATION	Remove variables since the plugin.xml should provide the complete path information.
WITHOUT_CLASSIFICATION	Look for a likely plugin name.
WITHOUT_CLASSIFICATION	Clean up any old project information.
WITHOUT_CLASSIFICATION	Remove variables since the plugin.xml should provide the complete path information.
WITHOUT_CLASSIFICATION	Consult the generator option for backwards compatibility.
WITHOUT_CLASSIFICATION	Apply a redirection pattern, if specified.
WITHOUT_CLASSIFICATION	If the target is read-only, we can ask the platform to release it.
WITHOUT_CLASSIFICATION	Multiple jet directives.
WITHOUT_CLASSIFICATION	If the target is read-only, we can ask the platform to release it.
WITHOUT_CLASSIFICATION	Merge with an existing file.
WITHOUT_CLASSIFICATION	If the target is read-only, we can ask the platform to release it, and it may be updated in the process.
WITHOUT_CLASSIFICATION	If the target is read-only, we can ask the platform to release it, and it may be updated in the process.
WITHOUT_CLASSIFICATION	Create a code formatter for this compilation unit, if needed.
WITHOUT_CLASSIFICATION	If a newline from the previous character data remains, add a generator for it.
WITHOUT_CLASSIFICATION	If we can't determine it by reading the file, look at the preferences instead.
WITHOUT_CLASSIFICATION	Since we're invoking plugged-in code, we must be defensive against cycles.
WITHOUT_CLASSIFICATION	Compute the GeneratorData for the given object and its children, then for the parents of the given object.
WITHOUT_CLASSIFICATION	Combine the two lists.
WITHOUT_CLASSIFICATION	Give all generator adapters the chance to do setup work.
WITHOUT_CLASSIFICATION	exception.printStackTrace();
WITHOUT_CLASSIFICATION	Give all generator adapters the chance to do tear down.
WITHOUT_CLASSIFICATION	EMFEdit generation
WITHOUT_CLASSIFICATION	returns the package in which this enum literal is defined returns the name of the enum literal get method in the package interface
WITHOUT_CLASSIFICATION	exception.printStackTrace();
WITHOUT_CLASSIFICATION	EMFEdit generation
WITHOUT_CLASSIFICATION	exception.printStackTrace();
WITHOUT_CLASSIFICATION	String getCapPackageID(); Includes features in other packages that delegate to those in this one.
WITHOUT_CLASSIFICATION	returns the package in which this feature is defined returns the name of the feature get method in the package interface (e.g. Company_Name) returns the name of the feature get method in the package interface (e.g. Xyz.eINSTANCE.getCompany_Name)
WITHOUT_CLASSIFICATION	exception.printStackTrace();
WITHOUT_CLASSIFICATION	exception.printStackTrace();
WITHOUT_CLASSIFICATION	exception.printStackTrace();
WITHOUT_CLASSIFICATION	EMF.Editor generation
WITHOUT_CLASSIFICATION	Tests generation
WITHOUT_CLASSIFICATION	boolean isGenerateEditPlugin(); boolean isGenerateEditorPlugin();
WITHOUT_CLASSIFICATION	Remove any non-Java dependencies from being added.
WITHOUT_CLASSIFICATION	This URI handler redirect the URI based on the mapping.
WITHOUT_CLASSIFICATION	There must be at least one match.
WITHOUT_CLASSIFICATION	Ignore if there is not substantial change.
WITHOUT_CLASSIFICATION	Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated.
WITHOUT_CLASSIFICATION	Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated.
WITHOUT_CLASSIFICATION	Do not allow an existing MANIFEST.MF to be overwritten, as the tests project is originally generated from scratch.
WITHOUT_CLASSIFICATION	Do not allow an existing build.properties to be overwritten, as the tests project is originally generated from scratch.
WITHOUT_CLASSIFICATION	We are not generating the manifest file if the plugin.xml exists.
WITHOUT_CLASSIFICATION	Use an alternate if we can't write to this one.
WITHOUT_CLASSIFICATION	J9 2.2 has problems assigning null to a Class variable.
WITHOUT_CLASSIFICATION	Create the options model.
WITHOUT_CLASSIFICATION	Remove any non-Java dependencies from being added.
WITHOUT_CLASSIFICATION	Escape a string that will terminate the comment in which this will all be nested.
WITHOUT_CLASSIFICATION	If it is an unqualified name, we will assume it refers to a type parameter, since we don't support default package.
WITHOUT_CLASSIFICATION	Search the local scope for a resolution of the type parameter name.
WITHOUT_CLASSIFICATION	Check if we found a resolution for it.
WITHOUT_CLASSIFICATION	If not we'll erase it to java.lang.Object.
WITHOUT_CLASSIFICATION	Otherwise, recursively call ourselves to substitute it in context if necessary.
WITHOUT_CLASSIFICATION	Add back in the array indices if there are any.
WITHOUT_CLASSIFICATION	Just import the name or use it directly.
WITHOUT_CLASSIFICATION	We treat the feature as volatile if it is volatile itself or if it is a reference whose opposite end is volatile, unless that opposite volatile reference delegates to a feature map, in which case, a full implementation of the references can be generated.
WITHOUT_CLASSIFICATION	EMFEdit generation
WITHOUT_CLASSIFICATION	/ HEADLESS INVOCATION /
WITHOUT_CLASSIFICATION	for Ecore or something that explicitly extends it, we need to exclude EObject, which is already handled by the default case
WITHOUT_CLASSIFICATION	We assume that the rootExtendsClass already implements it.
WITHOUT_CLASSIFICATION	We assume that the rootExtendsClass already implements it.
WITHOUT_CLASSIFICATION	If the flag will straddle two fields, bump it to the next one.
WITHOUT_CLASSIFICATION	EMFEdit generation
WITHOUT_CLASSIFICATION	Ignore the exception.
WITHOUT_CLASSIFICATION	An interface should be abstract, but this makes sure of that fact.
WITHOUT_CLASSIFICATION	Simple cases: no mix-ins for no inheritance or for a single base class.
WITHOUT_CLASSIFICATION	If extending an interface, its mix-ins must be included, since there is no implementation to handle them.
WITHOUT_CLASSIFICATION	Mix-ins are everything after the base class.
WITHOUT_CLASSIFICATION	If this is class has mixed content, the mixed feature should always be included, even if inherited, and come first.
WITHOUT_CLASSIFICATION	Add all other create child features that this item provider is responsible for.
WITHOUT_CLASSIFICATION	Many inherited methods must be overridden to handle this case.
WITHOUT_CLASSIFICATION	If this looks like a feature getter, a kind property will allow it to be recognized properly.
WITHOUT_CLASSIFICATION	Since we only use this right on an operation, we always want to include the keyType and valueType, and we never want to qualify the property names.
WITHOUT_CLASSIFICATION	Type parameter casts can't be checked.
WITHOUT_CLASSIFICATION	If there are any arguments and they are not unbounded wildcards, casts can't be checked.
WITHOUT_CLASSIFICATION	Optimize the performance of applying the import regular expressions locating the last import line
WITHOUT_CLASSIFICATION	Some XML types declare nebulous Object mappings. They actually map to internal types that shouldn't be generated into code.
WITHOUT_CLASSIFICATION	If there is a base XML or Ecore type, use one of the two corresponding built-in factories to create a value from the literal string.
WITHOUT_CLASSIFICATION	Get the Java literal expression for the value.
WITHOUT_CLASSIFICATION	Otherwise, produce an expression that uses the appropriate factory to create a value from the literal.
WITHOUT_CLASSIFICATION	If the base package isn't set but there is a parent package, us it's information instead.
WITHOUT_CLASSIFICATION	Add all classes from this package first, to guarantee they get the simple names
WITHOUT_CLASSIFICATION	Do this here because getExtendedMetaData() is used during initialization and the mappings are are populated the first time it's fetched which will miss the packages we add as we initialize the tree.
WITHOUT_CLASSIFICATION	Set the mapper to build an XSD2EcoreMappingRoot, if available.
WITHOUT_CLASSIFICATION	EMFEdit generation
WITHOUT_CLASSIFICATION	if there are no groups defined or matched, but the whole pattern matches, then markup nodes with pattern name
WITHOUT_CLASSIFICATION	Restore original resource URI values.
WITHOUT_CLASSIFICATION	The "suffix" can actually be a substitution pattern for the package name.
WITHOUT_CLASSIFICATION	Walk up the superpackages, collecting the package names. Because empty packages are ommitted from the GenModel, we need to walk up the EPackages.
WITHOUT_CLASSIFICATION	Any features that delegate to features in this package.
WITHOUT_CLASSIFICATION	If there are delegated features, add only those that aren't already in this package to the end of the list.
WITHOUT_CLASSIFICATION	We need to screen out duplicates in the unlikely event that we have two features with the same class-qualified name. We'll only generate one property string in that case and let the user add the second one manually, if necessary.
WITHOUT_CLASSIFICATION	EMFEdit generation
WITHOUT_CLASSIFICATION	source method return type is array (getExceptions), target is not array (i.e. addException)
WITHOUT_CLASSIFICATION	We also need to set it on any GenModels holding any used or static packages that may be refered to.
WITHOUT_CLASSIFICATION	We also need to set it on any GenModels holding any used or static packages that may be refered to.
WITHOUT_CLASSIFICATION	And we need to set it on any cached GenModels holding the special Ecore and XML packages.
WITHOUT_CLASSIFICATION	And we need to set it on any cached GenModels holding the special Ecore and XML packages.
WITHOUT_CLASSIFICATION	It's okay for there not be a precompiled template, so fail quietly. exception.printStackTrace();
WITHOUT_CLASSIFICATION	If there are any warnings other than raw type warnings, include all the warnings.
WITHOUT_CLASSIFICATION	Force the project to be setup properly.
WITHOUT_CLASSIFICATION	Force the project to be setup properly.
WITHOUT_CLASSIFICATION	node is not marked up by now, but keep checking other rules
WITHOUT_CLASSIFICATION	Subclasses may override this method
WITHOUT_CLASSIFICATION	Tests generation
WITHOUT_CLASSIFICATION	If we change to pattern defaults, will have to specify plain suffix in no main package case.
WITHOUT_CLASSIFICATION	If we change to pattern defaults, will have to specify plain suffix in no main package case.
WITHOUT_CLASSIFICATION	If we change to pattern defaults, will have to specify plain suffix in no main package case.
WITHOUT_CLASSIFICATION	Subclasses may override this method
WITHOUT_CLASSIFICATION	See if a GenModel is registered for the package's URI, and if so, try to load it.
WITHOUT_CLASSIFICATION	If that didn't work, just synthesize one.
WITHOUT_CLASSIFICATION	Different than the Edit and Editor projects, this method is invoked while generating the model plugin xml.
WITHOUT_CLASSIFICATION	EATM Foreign Model
WITHOUT_CLASSIFICATION	Any features from one package that delegate to features in another.
WITHOUT_CLASSIFICATION	If there are features delegating across packages, add only those that aren't already being generated.
WITHOUT_CLASSIFICATION	Recompute the read only state.
WITHOUT_CLASSIFICATION	Refresh any actions that may become enabled or disabled.
WITHOUT_CLASSIFICATION	Create the command stack that will notify this editor as commands are executed.
WITHOUT_CLASSIFICATION	Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus.
WITHOUT_CLASSIFICATION	Try to select the affected objects.
WITHOUT_CLASSIFICATION	Create the editing domain with a special command stack.
WITHOUT_CLASSIFICATION	Make sure it's okay.
WITHOUT_CLASSIFICATION	Try to select the items in the current content viewer of the editor.
WITHOUT_CLASSIFICATION	If it is changing...
WITHOUT_CLASSIFICATION	Create the listener on demand.
WITHOUT_CLASSIFICATION	This just notifies those things that are affected by the section.
WITHOUT_CLASSIFICATION	Stop listening to the old one.
WITHOUT_CLASSIFICATION	Start listening to the new one.
WITHOUT_CLASSIFICATION	Remember it.
WITHOUT_CLASSIFICATION	Set the editors selection based on the current viewer's selection.
WITHOUT_CLASSIFICATION	Load the resource through the editing domain.
WITHOUT_CLASSIFICATION	Creates the model from the editor input
WITHOUT_CLASSIFICATION	Only creates the other pages if there is something that can be edited
WITHOUT_CLASSIFICATION	Create a page for the selection tree view.
WITHOUT_CLASSIFICATION	Ensures that this editor will only display the page's tab area if there are more than one page
WITHOUT_CLASSIFICATION	The content outline is just a tree.
WITHOUT_CLASSIFICATION	Set up the tree viewer.
WITHOUT_CLASSIFICATION	Make sure our popups work.
WITHOUT_CLASSIFICATION	Select the root object in the view.
WITHOUT_CLASSIFICATION	Listen to selection so that we can handle it is a special way.
WITHOUT_CLASSIFICATION	This ensures that we handle selections correctly.
WITHOUT_CLASSIFICATION	Get the first selected element.
WITHOUT_CLASSIFICATION	log the error, ignore the change and continue
WITHOUT_CLASSIFICATION	Save the resources to the file system.
WITHOUT_CLASSIFICATION	Set the selection to the widget.
WITHOUT_CLASSIFICATION	Do the work within an operation because this is a long running activity that modifies the workbench.
WITHOUT_CLASSIFICATION	Save only resources that have actually changed.
WITHOUT_CLASSIFICATION	This is the method that gets invoked when the operation runs.
WITHOUT_CLASSIFICATION	loop for all commented out nodes
WITHOUT_CLASSIFICATION	Do the work within an operation because this is a long running activity that modifies the workbench.
WITHOUT_CLASSIFICATION	Refresh the necessary state.
WITHOUT_CLASSIFICATION	This runs the options, and shows progress.
WITHOUT_CLASSIFICATION	insert line break and comment out the first line if needed note that first line might move backward beyond node start (e.g. if a comma of the previous enum constant has been commented out)
WITHOUT_CLASSIFICATION	Something went wrong that shouldn't.
WITHOUT_CLASSIFICATION	Nothing to do
WITHOUT_CLASSIFICATION	This is the method that gets invoked when the operation runs.
WITHOUT_CLASSIFICATION	Something went wrong that shouldn't.
WITHOUT_CLASSIFICATION	Stop only on cancel.
WITHOUT_CLASSIFICATION	insert line break at the first line if there is something before the node start and the beginning of the line
WITHOUT_CLASSIFICATION	Switch to the new selection provider.
WITHOUT_CLASSIFICATION	Fake a selection changed event to update the menus.
WITHOUT_CLASSIFICATION	Check the type of the specified child object and return the proper feature to use for adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	Remember the static instance.
WITHOUT_CLASSIFICATION	Class/genFeature.override.javajetinc for
WITHOUT_CLASSIFICATION	Kick of a Java build if not already in a build.
WITHOUT_CLASSIFICATION	Class/implementedGenOperation.override.javajetinc for
WITHOUT_CLASSIFICATION	do not add a new line if there is one
WITHOUT_CLASSIFICATION	This call should get the files checked out from version control if the project is a 'team' project.
WITHOUT_CLASSIFICATION	there is only whitespace on this line - no need for line break
WITHOUT_CLASSIFICATION	Check which directive it is.
WITHOUT_CLASSIFICATION	reader.reset(start); return false;
WITHOUT_CLASSIFICATION	Parse the attr-val pairs.
WITHOUT_CLASSIFICATION	If the template path points at a project with a JET Nature, then we will assume that the templates we want to use are already compiled in this plugin Java project.
WITHOUT_CLASSIFICATION	Compute the URL for where the classes for this project will be located.
WITHOUT_CLASSIFICATION	Compute the URLs for all the output folder of all the project dependencies.
WITHOUT_CLASSIFICATION	Define a class loader that will look in the URLs first, and if it doesn't find the class there, uses the emitter's loader.
WITHOUT_CLASSIFICATION	Define a class loader that will look up the class in the bundle, and if it doesn't find it there, will look in the parent.
WITHOUT_CLASSIFICATION	Strip off the trailing "_" and load that class.
WITHOUT_CLASSIFICATION	Check that the class is actually different from the one that's directly visible to the JETEmitter.
WITHOUT_CLASSIFICATION	Don't do any of the other normally dynamic JETEmitter project processing.
WITHOUT_CLASSIFICATION	Get the existing classpath and remove the project root if necessary. Any new non-duplicate entries will be added to this.
WITHOUT_CLASSIFICATION	Add the new entries, including source, JRE container, and added variables and classpath containers.
WITHOUT_CLASSIFICATION	Construct a proper URL for relative lookup.
WITHOUT_CLASSIFICATION	Determine all the bundles that this project depends on.
WITHOUT_CLASSIFICATION	If it doesn't correspond to a bundle, then try to process it as a project in the workspace.
WITHOUT_CLASSIFICATION	Add JETBuilder
WITHOUT_CLASSIFICATION	Create .jetproperties file
WITHOUT_CLASSIFICATION	clone includeStack without cloning contents
WITHOUT_CLASSIFICATION	Store the current state in stack.
WITHOUT_CLASSIFICATION	Set the new variables.
WITHOUT_CLASSIFICATION	Make sure we have something to pop.
WITHOUT_CLASSIFICATION	Get previous state in stack.
WITHOUT_CLASSIFICATION	Until the encoding can be specified within the template we need to assume an encoding capable of working with any character set.
WITHOUT_CLASSIFICATION	Register the file, and read its content:
WITHOUT_CLASSIFICATION	Is stack created ? (will happen if the JET file we're looking at is missing.
WITHOUT_CLASSIFICATION	Restore parser state:
WITHOUT_CLASSIFICATION	Consume the open quote:
WITHOUT_CLASSIFICATION	Check end of quote, skip closing quote:
WITHOUT_CLASSIFICATION	Get the attribute name:
WITHOUT_CLASSIFICATION	Check for an equal sign:
WITHOUT_CLASSIFICATION	Get the attribute value:
WITHOUT_CLASSIFICATION	insert line break if there is non-whitespace before end of the line
WITHOUT_CLASSIFICATION	End of the useBean tag.
WITHOUT_CLASSIFICATION	XMLesque Close tags
WITHOUT_CLASSIFICATION	Parse as an attribute=value:
WITHOUT_CLASSIFICATION	Reached EOF:
WITHOUT_CLASSIFICATION	Look for an end-of-comment or end-of-tag:
WITHOUT_CLASSIFICATION	The include succeeded, so if there is an alternative and we're not skipping, we need to start.
WITHOUT_CLASSIFICATION	If a newline from the previous character data remains, leave it around to be processed as if it appeared in the included file.
WITHOUT_CLASSIFICATION	The include failed, so if there is an alternative, we don't skip it.
WITHOUT_CLASSIFICATION	A section is not allowed without a preceding include with alternative.
WITHOUT_CLASSIFICATION	This pop is safe because a section couldn't have been started without an include that pushed.
WITHOUT_CLASSIFICATION	Process this first.
WITHOUT_CLASSIFICATION	Ignore this now
WITHOUT_CLASSIFICATION	If a newline from the previous character data remains, add a generator for it.
WITHOUT_CLASSIFICATION	An expression with more that 931 "+" will break Sun and IBM javac compilers.
WITHOUT_CLASSIFICATION	Register our directive.
WITHOUT_CLASSIFICATION	Ignore it if there are multiple comments.
WITHOUT_CLASSIFICATION	Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI.
WITHOUT_CLASSIFICATION	Create the source and target JDOMs.
WITHOUT_CLASSIFICATION	Create a pattern dictionary for each.
WITHOUT_CLASSIFICATION	We expect this failure when running stand-alone
WITHOUT_CLASSIFICATION	JControlModel.class is used with classNames that were not found
WITHOUT_CLASSIFICATION	Ignore the further-most javadoc
WITHOUT_CLASSIFICATION	retrieve source node corresponding to target
WITHOUT_CLASSIFICATION	convert the target node to a compatible node
WITHOUT_CLASSIFICATION	There must be at least one match.
WITHOUT_CLASSIFICATION	Ignore if there is not substantial change.
WITHOUT_CLASSIFICATION	Create the options model.
WITHOUT_CLASSIFICATION	Create a pattern dictionary for each.
WITHOUT_CLASSIFICATION	retrieve source node corresponding to target
WITHOUT_CLASSIFICATION	convert the target node to a compatible node
WITHOUT_CLASSIFICATION	Method created to increase the performance of regular expressions by reducing the length of the string that is matched.
WITHOUT_CLASSIFICATION	Skip if there's an equality filter and the values aren't equal.
WITHOUT_CLASSIFICATION	The methods were matched by a process that doesn't consider the parameters
WITHOUT_CLASSIFICATION	Don't push method annotations into redirected methods.
WITHOUT_CLASSIFICATION	Three arguments are expected: the .xml getControlModel() URI, the source java URI, and the target java URI.
WITHOUT_CLASSIFICATION	Create the source and target JCompilationUnit.
WITHOUT_CLASSIFICATION	apply changes using ASTRewrite
WITHOUT_CLASSIFICATION	apply additional edits like replacing or commenting out nodes
WITHOUT_CLASSIFICATION	if the node is less than 1 line long, but its contents is replaced by multiple lines, comment out each line in it
WITHOUT_CLASSIFICATION	replace existing InsertEdit at this position (case when previous node ends at the same position that current node starts at)
WITHOUT_CLASSIFICATION	create and try to add dummy edit to find the ReplaceEdit this should be faster than lookup since underneath of addChild() binary search is used
WITHOUT_CLASSIFICATION	caching parser does not parse 2nd file in the same way (javadoc of package for example) hence, new parser is created every time this method is called
WITHOUT_CLASSIFICATION	adding 'at' allows distinguish annotations from other members (i.e. inner class verses annotation of a class)
WITHOUT_CLASSIFICATION	find insertion point from returned result (-(insertion point) - 1) commentIndex is the index of the first element with end position > rangeEndPos
WITHOUT_CLASSIFICATION	find insertion point from returned result (-(insertion point) - 1) commentIndex is an index of the first element that has start position > rangeStartPos
WITHOUT_CLASSIFICATION	extend to include the comment at the same line as the position if there is nothing between the position and the comment
WITHOUT_CLASSIFICATION	there is anything else but comma after constant - insert line break
WITHOUT_CLASSIFICATION	we don't want to include the line comments immediately before an import in the returned range
WITHOUT_CLASSIFICATION	since enum constants are separated by commas, they should always have the default range we can not extend their range or reduce it
WITHOUT_CLASSIFICATION	check if given node should use the default range (i.e. node removed), or extended range (i.e. surrounding nodes removed)
WITHOUT_CLASSIFICATION	replace arguments that match the name of the fields with the initializer value of the field
WITHOUT_CLASSIFICATION	move all children to the type, converting enum constants to fields fields that are created by conversion from enum constants must be inserted after the last final field that is used in constructors for initializers
WITHOUT_CLASSIFICATION	Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI.
WITHOUT_CLASSIFICATION	Create the source and target JDOMs.
WITHOUT_CLASSIFICATION	indicate that initializer has been changed (required to not overwrite initializer if variables are split later)
WITHOUT_CLASSIFICATION	lower all except the last upper case character if there are more than one upper case characters in the beginning. e.g. XSDElementContent -> xsdElementContent However if the whole string is upper case, the whole string is turned into lower case. e.g. CPU -> cpu
WITHOUT_CLASSIFICATION	Remember the static instance.
WITHOUT_CLASSIFICATION	Don't do replacement if we just did one, or if previous line ended with a semicolon.
WITHOUT_CLASSIFICATION	Don't do replacement if previous line ended with a comment.
WITHOUT_CLASSIFICATION	If the path isn't within the root of the archive, create a new URI for the folder location of the archive, so we can look in the folder that contains it.
WITHOUT_CLASSIFICATION	Trim off the "bin" or "runtime" segment.
WITHOUT_CLASSIFICATION	Platform.resolve() doesn't work if the project is encoded.
WITHOUT_CLASSIFICATION	There needs to be another URL protocol right after the archive protocol, and not a "/".
WITHOUT_CLASSIFICATION	There must be at least one archive path.
WITHOUT_CLASSIFICATION	There must be at least one archive path.
WITHOUT_CLASSIFICATION	Parse to count the archive paths that must will be delegated to the nested URL based on the number of schemes at the start.
WITHOUT_CLASSIFICATION	There should be at least one archive separator per scheme.
WITHOUT_CLASSIFICATION	Parse to extract the archives that will be delegated to the nested URL based on the number of schemes at the start.
WITHOUT_CLASSIFICATION	Skip a scheme for the archive accessor to be handled directly here.
WITHOUT_CLASSIFICATION	Skip an archive accessor to be handled by delegation to the scheme in nested URL.
WITHOUT_CLASSIFICATION	Create the delegate URL.
WITHOUT_CLASSIFICATION	The cutoff point to the next archive.
WITHOUT_CLASSIFICATION	The cutoff point to the next archive.
WITHOUT_CLASSIFICATION	Construct the input stream in a special efficient way for case of a file scheme.
WITHOUT_CLASSIFICATION	Just get the stream from the URL.
WITHOUT_CLASSIFICATION	The name to be used for the entry.
WITHOUT_CLASSIFICATION	Skip over this archive path to the next one, since we are handling this one special.
WITHOUT_CLASSIFICATION	Loop over the archive paths.
WITHOUT_CLASSIFICATION	The entry name to be matched.
WITHOUT_CLASSIFICATION	Wrap the input stream as a zip stream to scan it's contents for a match.
WITHOUT_CLASSIFICATION	Skip to the next archive path and continue the loop.
WITHOUT_CLASSIFICATION	Create the delegate URL
WITHOUT_CLASSIFICATION	Create a temporary file where the existing contents of the archive can be written before the new contents are added.
WITHOUT_CLASSIFICATION	Record the input and output streams for closing in case of failure so that handles are not left open.
WITHOUT_CLASSIFICATION	Create the output stream to the temporary file and the input stream for the delegate URL.
WITHOUT_CLASSIFICATION	The most deeply nested output stream that will be returned wrapped as the result.
WITHOUT_CLASSIFICATION	A buffer for transferring archive contents.
WITHOUT_CLASSIFICATION	We expect there to be at least one archive path.
WITHOUT_CLASSIFICATION	The name that will be used as the archive entry.
WITHOUT_CLASSIFICATION	Wrap the current result as a zip stream, and record it for loop-based recursion.
WITHOUT_CLASSIFICATION	Wrap the current input as a zip stream, and record it for loop-based recursion.
WITHOUT_CLASSIFICATION	Loop over the entries in the zip stream.
WITHOUT_CLASSIFICATION	Transfer the entry and its contents.
WITHOUT_CLASSIFICATION	Find the next archive path and continue "recursively" if there is one.
WITHOUT_CLASSIFICATION	Create no entry since we are deleting and return immediately.
WITHOUT_CLASSIFICATION	Create a new or replaced entry and continue processing the remaining archives.
WITHOUT_CLASSIFICATION	Ensure that it won't be closed in the finally block.
WITHOUT_CLASSIFICATION	Wrap the deepest result so that on close, the results are finally transferred.
WITHOUT_CLASSIFICATION	Make sure we close only once.
WITHOUT_CLASSIFICATION	Close for real so that the temporary file is ready to be read.
WITHOUT_CLASSIFICATION	Make sure they are closed no matter what bad thing happens.
WITHOUT_CLASSIFICATION	Close in case of failure to complete.
WITHOUT_CLASSIFICATION	Close if we created this.
WITHOUT_CLASSIFICATION	Go through the commands of the list.
WITHOUT_CLASSIFICATION	If there are some...
WITHOUT_CLASSIFICATION	The termination guard is in the body.
WITHOUT_CLASSIFICATION	We can't undo it, so we'd better give up.
WITHOUT_CLASSIFICATION	Now is the best time to record isUndoable because later we would have to do all the executes again! This makes canUndo very simple!
WITHOUT_CLASSIFICATION	If we can't execute this one, we just can't do it at all.
WITHOUT_CLASSIFICATION	If we are pessimistic, then we need to undo all the commands that we have executed so far.
WITHOUT_CLASSIFICATION	The most recently processed command will never have been executed.
WITHOUT_CLASSIFICATION	We want to unroll all the effects of the previous commands.
WITHOUT_CLASSIFICATION	Skip over the command that threw the exception.
WITHOUT_CLASSIFICATION	Iterate back over the executed commands to undo them.
WITHOUT_CLASSIFICATION	If the command is executable, record and execute it.
WITHOUT_CLASSIFICATION	Clear the list past the top.
WITHOUT_CLASSIFICATION	Record the successfully executed command.
WITHOUT_CLASSIFICATION	note that string place holder adjusts indentation to correct this trackAndReplace method is used below
WITHOUT_CLASSIFICATION	Iterate back over the executed commands to undo them.
WITHOUT_CLASSIFICATION	Clear the list past the top.
WITHOUT_CLASSIFICATION	This forces isSaveNeded to always be true.
WITHOUT_CLASSIFICATION	Clear the list.
WITHOUT_CLASSIFICATION	Remember where we are now.
WITHOUT_CLASSIFICATION	Only if we are at the remembered index do we NOT need to save. return top != saveIndex;
WITHOUT_CLASSIFICATION	Skip over the command that threw the exception.
WITHOUT_CLASSIFICATION	Skip over the command that threw the exception.
WITHOUT_CLASSIFICATION	Iterate back over the executed commands to undo them.
WITHOUT_CLASSIFICATION	Iterate forward over the undone commands to redo them.
WITHOUT_CLASSIFICATION	This ensures that these useless state variables at least reflect the right value.
WITHOUT_CLASSIFICATION	Copy to a list and allocate positions.
WITHOUT_CLASSIFICATION	Copy to a list and allocate positions.
WITHOUT_CLASSIFICATION	Count up the objects that will be removed. The objects are exchanged to produce this list's order
WITHOUT_CLASSIFICATION	If any objects are matched.
WITHOUT_CLASSIFICATION	Remove from by position in reverse order.
WITHOUT_CLASSIFICATION	Remove from by position in reverse order.
WITHOUT_CLASSIFICATION	Compact the results to remove unmatched objects
WITHOUT_CLASSIFICATION	If any objects are matched.
WITHOUT_CLASSIFICATION	Remove from by position in reverse order.
WITHOUT_CLASSIFICATION	Compact the results to remove unmatched objects
WITHOUT_CLASSIFICATION	Create view form. control = new ViewForm(parent, getStyle());
WITHOUT_CLASSIFICATION	Listen to title changes. getViewPart().addPropertyListener(this);
WITHOUT_CLASSIFICATION	titleLabel.setBackground(WorkbenchColors.getActiveGradient(), WorkbenchColors.getActiveGradientPercents()); titleLabel.setForeground(titleLabel.getDisplay().getSystemColor(SWT.COLOR_TITLE_FOREGROUND));
WITHOUT_CLASSIFICATION	actionBar.setBackground(WorkbenchColors.getActiveGradientEnd()); systemBar.setBackground(WorkbenchColors.getActiveGradientEnd());
WITHOUT_CLASSIFICATION	titleLabel.setBackground(null, null); titleLabel.setForeground(null);
WITHOUT_CLASSIFICATION	IViewPart view = getViewPart(); titleLabel.setText(view.getTitle()); titleLabel.setImage(view.getTitleImage());
WITHOUT_CLASSIFICATION	If there are objects to populate...
WITHOUT_CLASSIFICATION	Create a new array.
WITHOUT_CLASSIFICATION	Fill in the result array with labels and re-populate the original list in order.
WITHOUT_CLASSIFICATION	Fill in the array with labels.
WITHOUT_CLASSIFICATION	Get the index into the list via this call to super.
WITHOUT_CLASSIFICATION	Set the index of the object value in the list via this call to super.
WITHOUT_CLASSIFICATION	Ensure there are no extraneous style bits.
WITHOUT_CLASSIFICATION	Assign default style bits, if necessary, and ensure none conflict.
WITHOUT_CLASSIFICATION	Paint over the selected padding spaces with the background colour. On GTK, the whole item, not just the text, is selected, so we don't do this.
WITHOUT_CLASSIFICATION	On Motif, selection color may be set as background.
WITHOUT_CLASSIFICATION	Draw the extra first-column image.
WITHOUT_CLASSIFICATION	Stop if the next item will be out the event bounds. The event bounds values are also misaligned on GTK.
WITHOUT_CLASSIFICATION	If the table is indenting, draw tree lines.
WITHOUT_CLASSIFICATION	private final boolean iri; private URI cachedASCIIURI;
WITHOUT_CLASSIFICATION	Additional useful character classes, including characters valid in certain URI components and separators used in parsing them out of a string. | ucschar | escaped
WITHOUT_CLASSIFICATION	private static final long SCHEME_CHAR_HI = ALPHANUM_HI | highBitmask("+-."); private static final long SCHEME_CHAR_LO = ALPHANUM_LO | lowBitmask("+-.");
WITHOUT_CLASSIFICATION	Returns the lower half bitmask for all ASCII characters between the two given characters, inclusive.
WITHOUT_CLASSIFICATION	Returns the upper half bitmask for all AsCII characters between the two given characters, inclusive.
WITHOUT_CLASSIFICATION	Returns the lower half bitmask for all the ASCII characters in the given string.
WITHOUT_CLASSIFICATION	Returns whether the given character is in the set specified by the given bitmask.
WITHOUT_CLASSIFICATION	Converts null to length-zero array, and clones array to ensure immutability.
WITHOUT_CLASSIFICATION	Checks whether the string contains any more segments after the one that starts at position i.
WITHOUT_CLASSIFICATION	Validates all of the URI components. Factory methods should call this before using the constructor, though they must ensure that the inter-component requirements described in their own Javadocs are all satisfied, themselves. If a new URI is being constructed out of an existing URI, this need not be called. Instead, just the new components may be validated individually.
WITHOUT_CLASSIFICATION	Alternate, stricter implementations of the following validation methods are provided, commented out, for possible future use...
WITHOUT_CLASSIFICATION	<p>A valid scheme may be null, or consist of a single letter followed by any number of letters, numbers, and the following characters: <code>+ - .</code>
WITHOUT_CLASSIFICATION	<p>A valid opaque part must be non-null and non-empty. It may contain any allowed URI characters, but its first character may not be <code>/</code>
WITHOUT_CLASSIFICATION	return value != null && value.length() != 0 && value.charAt(0) != SEGMENT_SEPARATOR && validate(value, URIC_HI, URIC_LO, true, true);
WITHOUT_CLASSIFICATION	A valid authority may be null or contain any allowed URI characters except for the following: <code>/ ?</code>
WITHOUT_CLASSIFICATION	<p>A valid path segment must be non-null and may contain any allowed URI characters except for the following: <code>/ ?</code>
WITHOUT_CLASSIFICATION	Returns null if the specified value is null or would be a valid path segment array of a URI; otherwise, the value of the first invalid segment.
WITHOUT_CLASSIFICATION	Searches the specified string for any characters in the set represented by the 128-bit bitmask. Returns true if any occur, or false otherwise.
WITHOUT_CLASSIFICATION	note: (absolutePath || authority == null) -> hierarchical (authority == null && device == null && !absolutePath) -> scheme == null
WITHOUT_CLASSIFICATION	note: authority == null -> hierarchical (authority == null && device == null && !absolutePath) -> scheme == null
WITHOUT_CLASSIFICATION	note: authority == null -> hierarchical (authority == null && device == null && !absolutePath) -> scheme == null
WITHOUT_CLASSIFICATION	note: authority == null -> hierarchical (authority == null && device == null && !absolutePath) -> scheme == null
WITHOUT_CLASSIFICATION	Returns true if the given value is an archive scheme, as defined by the org.eclipse.emf.common.util.URI.archiveSchemes system property. By default, "jar", "zip", and "archive" are considered archives.
WITHOUT_CLASSIFICATION	Tests whether this URI's path segment array is equal to that of the given uri.
WITHOUT_CLASSIFICATION	Tests two objects for equality, tolerating nulls; null is considered to be a valid value that is only equal to itself.
WITHOUT_CLASSIFICATION	Tests two strings for equality, tolerating nulls and optionally ignoring case.
WITHOUT_CLASSIFICATION	note: it's okay for two URIs to share a segments array, since neither will ever modify it
WITHOUT_CLASSIFICATION	relative path: merge with base and keep query (note: if the base has no path and this a non-empty relative path, there is an implied root in the resulting path)
WITHOUT_CLASSIFICATION	always keep fragment, even if null, and use scheme from base; no validation needed since all components are from existing URIs
WITHOUT_CLASSIFICATION	use a stack to accumulate segments of base, except for the last (i.e. skip trailing separator and anything following it), and of relative path
WITHOUT_CLASSIFICATION	Adds a segment to a stack, skipping empty segments and self references, and interpreting parent references.
WITHOUT_CLASSIFICATION	special care must be taken for a root's parent reference: it is either ignored or the symbolic reference itself is pushed
WITHOUT_CLASSIFICATION	unless we're already accumulating root parent references, parent references simply pop the last segment descended
WITHOUT_CLASSIFICATION	note: these assertions imply that neither this nor the base URI has a relative path; thus, both have either an absolute path or no path
WITHOUT_CLASSIFICATION	Returns the shortest relative path between the the non-relative path of the given base and this absolute path. If the base has no path, it is treated as the root absolute path.
WITHOUT_CLASSIFICATION	note that the copied tree should not be modified by wrapped ASTJField the copied tree will have source ranges for all nodes in the source file, hence, the get methods in the new ASTJField will not return the right contents
WITHOUT_CLASSIFICATION	a single separator, possibly preceded by some parent reference segments, is redundant
WITHOUT_CLASSIFICATION	an empty path needs to be replaced by a single "." if there is no query, to distinguish it from a current document reference
WITHOUT_CLASSIFICATION	Collapses non-ending empty segments, parent references, and self references in a non-relative path, returning the same path that would be produced from the base hierarchical URI as part of a resolve.
WITHOUT_CLASSIFICATION	if the path is non-empty and originally ended in an empty segment, a parent reference, or a self reference, add a trailing separator
WITHOUT_CLASSIFICATION	Returns a string representation of this URI for debugging, explicitly showing each of the components.
WITHOUT_CLASSIFICATION	If the new prefix has segments, it is not the root absolute path, and we need to drop the trailing empty segment and append the tail segments.
WITHOUT_CLASSIFICATION	If this is a hierarchical URI reference and prefix is a prefix of it, returns the portion of the path remaining after that prefix has been trimmed; null otherwise.
WITHOUT_CLASSIFICATION	Don't even consider it unless this is hierarchical and has scheme, authority, device and path absoluteness equal to those of the prefix.
WITHOUT_CLASSIFICATION	If the prefix has no segments, then it is the root absolute path, and we know this is an absolute path, too.
WITHOUT_CLASSIFICATION	This must have no fewer segments than the prefix. Since the prefix is not the root absolute path, its last segment is empty; all others must match.
WITHOUT_CLASSIFICATION	create new field and replace it all by original contents
WITHOUT_CLASSIFICATION	The prefix really is a prefix of this. If this has just one more, empty segment, the paths are the same.
WITHOUT_CLASSIFICATION	Encodes a complete URI, optionally leaving % characters unescaped when beginning a valid three-character escape sequence. We can either treat the first or # as a fragment separator, or encode them all.
WITHOUT_CLASSIFICATION	range to look for comments
WITHOUT_CLASSIFICATION	Encodes the given string, replacing each ASCII character that is not in the set specified by the 128-bit bitmask and each non-ASCII character below 0xA0 by an escape sequence of % followed by two hex digits. If % is not in the set but ignoreEscaped is true, then % will not be encoded iff it already begins a valid escape sequence.
WITHOUT_CLASSIFICATION	Tests whether an escape occurs in the given string, starting at index i. An escape sequence is a % followed by two hex digits.
WITHOUT_CLASSIFICATION	find start position of farthest preceding comment
WITHOUT_CLASSIFICATION	The byte is automatically widened into an int, with sign extension, for shifting. This can introduce 1's to the left of the byte, which must be cleared by masking before looking up the hex digit.
WITHOUT_CLASSIFICATION	Returns the character encoded by % followed by the two given hex digits, which is always 0xFF or less, so can safely be casted to a byte. If either character is not a hex digit, a bogus result will be returned.
WITHOUT_CLASSIFICATION	Determine the base URL by looking for the plugin.properties file in the standard way.
WITHOUT_CLASSIFICATION	add leading hanging comments to the previous node, hence, only comments immediately preceding the node will be in the range for removal
WITHOUT_CLASSIFICATION	for enum constants use special range
WITHOUT_CLASSIFICATION	Simpler implementation that sets the range of any node to be the node and all preceding comments public SourceRange computeSourceRange(ASTNode node) { SourceRange range = new SourceRange(node.getStartPosition(), node.getLength()); range = extendRangeBackward(findLeadingComment(node, getPreviousNode(node), false), range); return range; }
WITHOUT_CLASSIFICATION	default implementation does nothing
WITHOUT_CLASSIFICATION	clear old values
WITHOUT_CLASSIFICATION	Trim off the segments corresponding to the package nesting.
WITHOUT_CLASSIFICATION	For an archive URI, check for the plugin.properties in the archive.
WITHOUT_CLASSIFICATION	append extra dimensions since they are not stored in Type object
WITHOUT_CLASSIFICATION	Trim off the "bin" or "runtime" segment.
WITHOUT_CLASSIFICATION	If the plugin.properties isn't within the root of the archive, create a new URI for the folder location of the archive, so we can look in the folder that contains it.
WITHOUT_CLASSIFICATION	If we didn't find the plugin.properties in the usual place nor in the archive...
WITHOUT_CLASSIFICATION	If we can open an input stream, then the plugin.properties is in the folder, and we have a good base URL.
WITHOUT_CLASSIFICATION	If we still don't have a good base URL, complain about it.
WITHOUT_CLASSIFICATION	We don't create an iterator stack until the root mapping itself has been returned by next once. After that the stack should be non-empty and the top iterator should yield true for hasNext.
WITHOUT_CLASSIFICATION	If we are still on the root mapping itself...
WITHOUT_CLASSIFICATION	Yield that mapping, create a stack, record it as the next one to prune, and add it to the stack.
WITHOUT_CLASSIFICATION	Get the top iterator, retrieve it's result, and record it as the one to which remove will be delegated.
WITHOUT_CLASSIFICATION	If the result about to be returned has children...
WITHOUT_CLASSIFICATION	Record the iterator as the next one to prune, and add it to the stack.
WITHOUT_CLASSIFICATION	There will be no iterator to prune.
WITHOUT_CLASSIFICATION	While the current iterator has no next...
WITHOUT_CLASSIFICATION	Pop it from the stack.
WITHOUT_CLASSIFICATION	If the stack is empty, we're done.
WITHOUT_CLASSIFICATION	if the given class is subclass of enum and node is of subclass of type
WITHOUT_CLASSIFICATION	Pop it off the stack.
WITHOUT_CLASSIFICATION	Get the next one down and then test it for has next.
WITHOUT_CLASSIFICATION	If there is an iterator to prune.
WITHOUT_CLASSIFICATION	You can only prune once.
WITHOUT_CLASSIFICATION	If that iterator is still at the top of the stack...
WITHOUT_CLASSIFICATION	Allow for a bit-shift of growth.
WITHOUT_CLASSIFICATION	Keep popping the stack until an iterator that has a next is at the top.
WITHOUT_CLASSIFICATION	Conditionally create the data.
WITHOUT_CLASSIFICATION	++modCount
WITHOUT_CLASSIFICATION	Guard for no data.
WITHOUT_CLASSIFICATION	Guard for no data.
WITHOUT_CLASSIFICATION	++modCount
WITHOUT_CLASSIFICATION	++modCount
WITHOUT_CLASSIFICATION	Conditionally create the data.
WITHOUT_CLASSIFICATION	++modCount
WITHOUT_CLASSIFICATION	Don't hold onto a duplicate reference to the last object.
WITHOUT_CLASSIFICATION	Give it all back to the garbage collector.
WITHOUT_CLASSIFICATION	Give it all back to the garbage collector.
WITHOUT_CLASSIFICATION	Write the capacity.
WITHOUT_CLASSIFICATION	create map of public static final field initializers to fields
WITHOUT_CLASSIFICATION	This seems to be a pretty sweet formula that supports good growth. Adding an object to a list will create a list of capacity 4, which is just about the average list size.
WITHOUT_CLASSIFICATION	This should be transparent.
WITHOUT_CLASSIFICATION	Remember the static instance.
WITHOUT_CLASSIFICATION	Remember the static instance.
WITHOUT_CLASSIFICATION	Remember the static instance.
WITHOUT_CLASSIFICATION	Write all the entryData; there will be size of them.
WITHOUT_CLASSIFICATION	Restore the capacity, if there was any.
WITHOUT_CLASSIFICATION	Read all size number of entryData.
WITHOUT_CLASSIFICATION	0000 0000 0001 0000 0000 0010 0000 0000 0100 0000 0000 1000 0001 0000 0000 0010 0000 0000 0100 0000 0000 1000 0000 0000
WITHOUT_CLASSIFICATION	0000 0000 1111 1111 0000 0000
WITHOUT_CLASSIFICATION	This just represents going back to the unset state, but that doesn't affect the contents of the list.
WITHOUT_CLASSIFICATION	Remember the static instance.
WITHOUT_CLASSIFICATION	add all converted fields after the last final field that is used in initializers of the converted fields
WITHOUT_CLASSIFICATION	Internal bootstrap uses Literals constants, so we must force initialization this inner interface first.
WITHOUT_CLASSIFICATION	Open an editor on the new file.
WITHOUT_CLASSIFICATION	create field initializer from enum constant's arguments and body
WITHOUT_CLASSIFICATION	Apply the change.
WITHOUT_CLASSIFICATION	Delete the change information because it is invalid now that the objects have been changed.
WITHOUT_CLASSIFICATION	Apply the change and reverse the change information.
WITHOUT_CLASSIFICATION	Remember the static instance.
WITHOUT_CLASSIFICATION	Check the type of the specified child object and return the proper feature to use for adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	set original node of annotations (to allow get methods to work correctly)
WITHOUT_CLASSIFICATION	The next line leaves objectsBeforeApply with all the objects that were added during the last recording.
WITHOUT_CLASSIFICATION	Reverse the objects to attach and detach lists.
WITHOUT_CLASSIFICATION	Make sure the changed values of bidirectional reference lists are cached before we start to apply the change.
WITHOUT_CLASSIFICATION	This case will be handled special during apply
WITHOUT_CLASSIFICATION	Check the type of the specified child object and return the proper feature to use for adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	Check the type of the specified child object and return the proper feature to use for adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	New Template Container Entryfield
WITHOUT_CLASSIFICATION	If there's no position, the list is being cleared.
WITHOUT_CLASSIFICATION	If there's no position, the list is being cleared.
WITHOUT_CLASSIFICATION	EEnumImpl overrides this to do nothing. The only case that is special is when a more specific instance of AbstractEnumerator is generated/reused.
WITHOUT_CLASSIFICATION	When we attached we have to recompute the erasure of the type parameter.
WITHOUT_CLASSIFICATION	Interprets escaped characters within the string according to Java literal rules, with two exceptions: an unescaped " does not terminate the string, and a \ not followed by b, t, n, f, r, ", ', u, or an octal digit is taken literally, not as an error
WITHOUT_CLASSIFICATION	Create annotations http:/org/eclipse/emf/ecore/util/ExtendedMetaData
WITHOUT_CLASSIFICATION	This is needed for internal bootstrapping of EGenericType's default value for eRawType. It's simply not available before Ecore is constructed so we make it available and then patch what's missing.
WITHOUT_CLASSIFICATION	Create a key set that supports add.
WITHOUT_CLASSIFICATION	Skip derived features.
WITHOUT_CLASSIFICATION	Include derived relations only if they won't also come from mixed or a group.
WITHOUT_CLASSIFICATION	If this is just a proxy being resolved...
WITHOUT_CLASSIFICATION	Force the raw type to be resolved so we don't resolve this endlessly.
WITHOUT_CLASSIFICATION	Update the classifier and hence the raw type as normal.
WITHOUT_CLASSIFICATION	The notification for this list is being thrown by the delegating list
WITHOUT_CLASSIFICATION	At development time, the real factory may not be available. Just return null.
WITHOUT_CLASSIFICATION	Interprets escaped characters according to Java literal rules, with one exception: a single \ is taken literally, not as an error.
WITHOUT_CLASSIFICATION	protected static final EStructuralFeature CONTAINING_FEATURE = new EReferenceImpl(); protected static final EStructuralFeature CONTAINER = new EReferenceImpl();
WITHOUT_CLASSIFICATION	Entry entry = new Entry(eObject, CONTAINER); return (InternalEObject)map.get(entry);
WITHOUT_CLASSIFICATION	This should never be called.
WITHOUT_CLASSIFICATION	Entry entry = new Entry(eObject, CONTAINING_FEATURE); return (EStructuralFeature)map.get(entry);
WITHOUT_CLASSIFICATION	eContainer = newContainer; eContainerFeatureID = newContainerFeatureID;
WITHOUT_CLASSIFICATION	Since the cycle is detected by checking if we hit "this" again, after many iterations we'll call this method recursively in case we started with something that wasn't part of a cycle but later traversed up to a cycle.
WITHOUT_CLASSIFICATION	When setting the resource to null we assume that detach has already been called in the resource implementation
WITHOUT_CLASSIFICATION	Performs escape encoding on the given string so that it can be represented using 1-byte characters. Any characters higher than 0xFF are replaced with an escape of the form \\uXXXX, where XXXX is the four-digit hex representation of the Unicode code point.
WITHOUT_CLASSIFICATION	Compute the offset in the sequence of bit patterns for this feature ID and then get the bit pattern at that index.
WITHOUT_CLASSIFICATION	Compute the index within that bit pattern for this feature ID and fetch that bit at that index.
WITHOUT_CLASSIFICATION	For isSet, we only need to check the bit and return -1 when the bit is 0.
WITHOUT_CLASSIFICATION	If the value index set, there's no index to return.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Count just the bits up to this one. Note that shifting 32 bits is a no op.
WITHOUT_CLASSIFICATION	Count all the bits in the bit patterns up to this one in the sequence of bit patterns.
WITHOUT_CLASSIFICATION	Determine the index for the feature and return the value at that index, if an index is assigned.
WITHOUT_CLASSIFICATION	Determine if an index is assigned.
WITHOUT_CLASSIFICATION	Determine the index.
WITHOUT_CLASSIFICATION	If it's newly allocated, add a new value, and indicate there was no previous value.
WITHOUT_CLASSIFICATION	Set the value at the previously allocated index and return the previous value there.
WITHOUT_CLASSIFICATION	Forward the interned value.
WITHOUT_CLASSIFICATION	If it's a parameterized type...
WITHOUT_CLASSIFICATION	The instance class name is the erasure.
WITHOUT_CLASSIFICATION	If the name isn't a qualified name and isn't a primitive type, it's assumed to denote some arbitrary type parameter.
WITHOUT_CLASSIFICATION	Be sure to pick up any trailing [] brackets.
WITHOUT_CLASSIFICATION	If there is a cached result, return it. We expect that if the package is set to be a proxy, the code in EPackageImpl.eSetProxyURI override will have cleared this value.
WITHOUT_CLASSIFICATION	If the result is not a proxy, cache it.
WITHOUT_CLASSIFICATION	If we turn the package into a proxy, ensure that the child classifiers clear their cached container.
WITHOUT_CLASSIFICATION	Is the first character a special character, i.e., something other than '@'?
WITHOUT_CLASSIFICATION	Is it the start of a source URI of an annotation?
WITHOUT_CLASSIFICATION	Recompute the read only state.
WITHOUT_CLASSIFICATION	Refresh any actions that may become enabled or disabled.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	If this is just a proxy being resolved...
WITHOUT_CLASSIFICATION	Force the raw type to be resolved so we don't resolve this endlessly.
WITHOUT_CLASSIFICATION	Update the classifier and hence the raw type as normal.
WITHOUT_CLASSIFICATION	Find the closing '%'
WITHOUT_CLASSIFICATION	Decode all encoded characters.
WITHOUT_CLASSIFICATION	Check for a count, i.e., a '.' followed by a number.
WITHOUT_CLASSIFICATION	Look for the annotation with the matching source.
WITHOUT_CLASSIFICATION	Look for trailing count.
WITHOUT_CLASSIFICATION	Look for a matching named element.
WITHOUT_CLASSIFICATION	Find the uppermost class loader in the hierarchy that can load the class.
WITHOUT_CLASSIFICATION	We can't find the class, so we don't want this class loader, but instead want the last result that was able to load the class.
WITHOUT_CLASSIFICATION	Register with the upper most class loader that's able to load the class.
WITHOUT_CLASSIFICATION	This let's us test whether the string exists as a file. If not, we try as a URI.
WITHOUT_CLASSIFICATION	First try to see if this class has an eInstance
WITHOUT_CLASSIFICATION	First try to see if this class has an eInstance
WITHOUT_CLASSIFICATION	Remember the file.
WITHOUT_CLASSIFICATION	Do the work within an operation.
WITHOUT_CLASSIFICATION	Create a resource set
WITHOUT_CLASSIFICATION	Get the URI of the model file.
WITHOUT_CLASSIFICATION	Create a resource for this file.
WITHOUT_CLASSIFICATION	Add the initial model object to the contents.
WITHOUT_CLASSIFICATION	Save the contents of the resource to the file system.
WITHOUT_CLASSIFICATION	Select the new file resource in the current view.
WITHOUT_CLASSIFICATION	Make sure the file ends in ".ecore".
WITHOUT_CLASSIFICATION	Create a page, set the title, and the initial model file name.
WITHOUT_CLASSIFICATION	Try and get the resource selection to determine a current directory for the file dialog.
WITHOUT_CLASSIFICATION	Get the resource...
WITHOUT_CLASSIFICATION	Get the resource parent, if its a file.
WITHOUT_CLASSIFICATION	This gives us a directory...
WITHOUT_CLASSIFICATION	Set this for the container.
WITHOUT_CLASSIFICATION	Make up a unique new name here.
WITHOUT_CLASSIFICATION	Create an adapter factory that yields item providers.
WITHOUT_CLASSIFICATION	Create the command stack that will notify this editor as commands are executed.
WITHOUT_CLASSIFICATION	Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus.
WITHOUT_CLASSIFICATION	Try to select the affected objects.
WITHOUT_CLASSIFICATION	Create the editing domain with a special command stack.
WITHOUT_CLASSIFICATION	Make sure it's okay.
WITHOUT_CLASSIFICATION	Try to select the items in the current content viewer of the editor.
WITHOUT_CLASSIFICATION	If it is changing...
WITHOUT_CLASSIFICATION	Create the listener on demand.
WITHOUT_CLASSIFICATION	This just notifies those things that are affected by the section.
WITHOUT_CLASSIFICATION	Stop listening to the old one.
WITHOUT_CLASSIFICATION	Start listening to the new one.
WITHOUT_CLASSIFICATION	Remember it.
WITHOUT_CLASSIFICATION	Set the editors selection based on the current viewer's selection.
WITHOUT_CLASSIFICATION	Load the resource through the editing domain.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Create a page for the selection tree view.
WITHOUT_CLASSIFICATION	Ensures that this editor will only display the page's tab area if there are more than one page
WITHOUT_CLASSIFICATION	The content outline is just a tree.
WITHOUT_CLASSIFICATION	Set up the tree viewer.
WITHOUT_CLASSIFICATION	Make sure our popups work.
WITHOUT_CLASSIFICATION	Select the root object in the view.
WITHOUT_CLASSIFICATION	Listen to selection so that we can handle it is a special way.
WITHOUT_CLASSIFICATION	Get the first selected element.
WITHOUT_CLASSIFICATION	Set the selection to the widget.
WITHOUT_CLASSIFICATION	Save only resources that have actually changed.
WITHOUT_CLASSIFICATION	This is the method that gets invoked when the operation runs.
WITHOUT_CLASSIFICATION	Save the resources to the file system.
WITHOUT_CLASSIFICATION	This runs the options, and shows progress.
WITHOUT_CLASSIFICATION	Refresh the necessary state.
WITHOUT_CLASSIFICATION	Something went wrong that shouldn't.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Remember the file.
WITHOUT_CLASSIFICATION	Do the work within an operation.
WITHOUT_CLASSIFICATION	Create a resource set
WITHOUT_CLASSIFICATION	Get the URI of the model file.
WITHOUT_CLASSIFICATION	Save the contents of the resource to the file system.
WITHOUT_CLASSIFICATION	Select the new file resource in the current view.
WITHOUT_CLASSIFICATION	We can't have a null name, in case we're using EMOF serialization.
WITHOUT_CLASSIFICATION	Remember the static instance.
WITHOUT_CLASSIFICATION	Switch to the new selection provider.
WITHOUT_CLASSIFICATION	Fake a selection changed event to update the menus.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Try and get the resource selection to determine a current directory for the file dialog.
WITHOUT_CLASSIFICATION	Get the resource...
WITHOUT_CLASSIFICATION	Get the resource parent, if its a file.
WITHOUT_CLASSIFICATION	This gives us a directory...
WITHOUT_CLASSIFICATION	Make up a unique new name here.
WITHOUT_CLASSIFICATION	Prepare for CreateChild item addition or removal.
WITHOUT_CLASSIFICATION	Prepare for CreateSibling item addition or removal.
WITHOUT_CLASSIFICATION	Force an update because Eclipse hides empty menus now.
WITHOUT_CLASSIFICATION	Remove any menu items for old selection.
WITHOUT_CLASSIFICATION	Query the new selection for appropriate new child/sibling descriptors
WITHOUT_CLASSIFICATION	Generate actions for selection; populate and redraw the menus.
WITHOUT_CLASSIFICATION	Check the type of the specified child object and return the proper feature to use for adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	Look into SubContributionItems
WITHOUT_CLASSIFICATION	Delete the ActionContributionItems with matching action.
WITHOUT_CLASSIFICATION	If it's really a contained child, return the feature for it.
WITHOUT_CLASSIFICATION	Changes to the parameters should also update the label.
WITHOUT_CLASSIFICATION	Remember the static instance.
WITHOUT_CLASSIFICATION	Check the type of the specified child object and return the proper feature to use for adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	If it's really a contained child, return the feature for it.
WITHOUT_CLASSIFICATION	Set the instance type name instead, since that will also set the instance class name but this way will make undo restore the current instance type name correctly
WITHOUT_CLASSIFICATION	Changes to parameter types should also update the operation's label.
WITHOUT_CLASSIFICATION	Filter out types that aren't permitted.
WITHOUT_CLASSIFICATION	Filter out types that aren't permitted.
WITHOUT_CLASSIFICATION	Avoid allowing choices that will lead to duplicates.
WITHOUT_CLASSIFICATION	Avoid allowing a choice that will lead to duplicates.
WITHOUT_CLASSIFICATION	Ensure that there are enough type arguments to match the number of type parameters.
WITHOUT_CLASSIFICATION	You can only add type arguments if there are type parameters not yet used up.
WITHOUT_CLASSIFICATION	You cannot add any children for a type parameter.
WITHOUT_CLASSIFICATION	Only if you are contained by a generic type can you have bounds, and only if there is no classifier or type parameter and in that case the lower bound is returned only if that's the one that's set.
WITHOUT_CLASSIFICATION	Otherwise you can't make it a child.
WITHOUT_CLASSIFICATION	Let them choose type parameters as well.
WITHOUT_CLASSIFICATION	Check the type of the specified child object and return the proper feature to use for adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	Handle eOpposite specially.
WITHOUT_CLASSIFICATION	Don't use the normal reference copying for eOpposite.
WITHOUT_CLASSIFICATION	Write a signature that will be obviously corrupt if the binary contents end up being UTF-8 encoded or altered by line feed or carriage return changes.
WITHOUT_CLASSIFICATION	Filter out classes that aren't permitted.
WITHOUT_CLASSIFICATION	Read all the values into an array.
WITHOUT_CLASSIFICATION	Read all the values into an array.
WITHOUT_CLASSIFICATION	If the list is empty, we need to add all the objects, otherwise, the reference is bidirectional and the list is at least partially populated.
WITHOUT_CLASSIFICATION	If an input stream can't be created, ensure that the resource is still considered loaded after the failure, and do all the same processing we'd do if we actually were able to create a valid input stream.
WITHOUT_CLASSIFICATION	This guard is needed to ensure that clear doesn't make the resource become loaded.
WITHOUT_CLASSIFICATION	If we haven't yet encrypted or decrypted, generate a key. This key will only be used for encryption. Decryption keys are always derived from the header of the input stream itself.
WITHOUT_CLASSIFICATION	write the header to the output stream. this has the format (delimeters are not written): PBE IV|ENCRYPTION IV|ENCRYPTED KEY LENGTH|ENCRYPTED KEY
WITHOUT_CLASSIFICATION	The CipherOutputStream shoudln't close the underlying stream
WITHOUT_CLASSIFICATION	Build a list of the keys
WITHOUT_CLASSIFICATION	The classifier of an references's generic type must be a class.
WITHOUT_CLASSIFICATION	If they are the same classifier, they are of course equal.
WITHOUT_CLASSIFICATION	Ignore derived features.
WITHOUT_CLASSIFICATION	Don't set the type if it's already set.
WITHOUT_CLASSIFICATION	Look through all the references...
WITHOUT_CLASSIFICATION	Do the extent processing that should have been done for the root but was actualljy done for the document root.
WITHOUT_CLASSIFICATION	Ensure that the map for Ecore is not repeatedly populated and that Property maps to EReference rather than EAttribute.
WITHOUT_CLASSIFICATION	Create annotations http:/org/eclipse/emf/ecore/util/ExtendedMetaData
WITHOUT_CLASSIFICATION	Internal use only. The @ always matches line beginnings.
WITHOUT_CLASSIFICATION	Reserve a place to insert xmlns declarations after we know what they all are.
WITHOUT_CLASSIFICATION	result = new XMLResource.XMLInfoImpl(); result.setXMLRepresentation(XMLResource.XMLInfo.UNSPECIFIED);
WITHOUT_CLASSIFICATION	Need not to call setSource() because a caller can not access this match instance.
WITHOUT_CLASSIFICATION	src: o--------o sub: o----o res: o-o o-o Reuse src(=right res)
WITHOUT_CLASSIFICATION	Ignore CHAR tokens.
WITHOUT_CLASSIFICATION	missing Specials add manually 84
WITHOUT_CLASSIFICATION	Check if they are PAD characters Two PAD e.g. 3c[Pad][Pad] last 4 bits should be zero
WITHOUT_CLASSIFICATION	Path segments cannot contain '[' or ']' since pchar production was not changed by RFC 2732.
WITHOUT_CLASSIFICATION	Data
WITHOUT_CLASSIFICATION	Check for scheme, which must be before '/', '?' or '#'. Also handle names with DOS drive letters ('D:'), so 1-character schemes are not allowed.
WITHOUT_CLASSIFICATION	Check for scheme, which must be before '/', '?' or '#'. Also handle names with DOS drive letters ('D:'), so 1-character schemes are not allowed.
WITHOUT_CLASSIFICATION	6e - remove all "<segment>/../" where "<segment>" is a complete path segment not equal to ".."
WITHOUT_CLASSIFICATION	If the second character wasn't ':', in order to be valid, the remainder of the string must match IPv4Address, and we must have read exactly 6 16-bit groups.
WITHOUT_CLASSIFICATION	userinfo can contain alphanumerics, mark characters, escaped and ';',':','&','=','+','$',','
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) 49 Fill 26 of value (byte) -3 Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	Trying to match the following productions: hexseq = hex4 ( ":" hex4) hex4 = 14HEXDIG
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) 33 Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	Check whether there is an opposite that needs attention.
WITHOUT_CLASSIFICATION	Return whether there is a list, the value is in the list, and index is in range...
WITHOUT_CLASSIFICATION	If we're creating a child under an object in a feature map, the selection will be the feature map entry. We want to replace it with the model object.
WITHOUT_CLASSIFICATION	If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link.
WITHOUT_CLASSIFICATION	Only return the feedback for an executable command.
WITHOUT_CLASSIFICATION	No image is a good default.
WITHOUT_CLASSIFICATION	Add it to the list and remove it from the other list.
WITHOUT_CLASSIFICATION	Commands should operate on the values, not their wrappers. If the command's values needed to be unwrapped, we'll back get a new CommandParameter.
WITHOUT_CLASSIFICATION	When an object is controlled, the only change will be in the new resource's contents, so it must refresh the whole viewer to hit the object's label.
WITHOUT_CLASSIFICATION	Record the part.
WITHOUT_CLASSIFICATION	give up if we couldn't create the command; otherwise, use a CommandActionDelegate to set the action's text, tool-tip, icon, etc. or just use the default icon
WITHOUT_CLASSIFICATION	This came from trial and error, yielding decent results on all platforms. It should be consistent with activate().
WITHOUT_CLASSIFICATION	If we don't already have it, try to get the source early. We can't give feedback if it's not available yet (this is platform-dependent).
WITHOUT_CLASSIFICATION	Load the model and if it's not one already considered, e.g., a local version in the workspace, process its GenPackages.
WITHOUT_CLASSIFICATION	If we've found thing with type parameters, search them for a match.
WITHOUT_CLASSIFICATION	process documentation info and create eEnumLiteral for each line
WITHOUT_CLASSIFICATION	This just notifies those things that are affected by the section.
WITHOUT_CLASSIFICATION	Creates the model from the editor input
WITHOUT_CLASSIFICATION	This is the method that gets invoked when the operation runs.
WITHOUT_CLASSIFICATION	Generate actions for selection; populate and redraw the menus.
WITHOUT_CLASSIFICATION	this is the case that starting process rose file by passing cat file name this is a special case. normally, user should pass mdl file instead of cat file file is a cat file modelTree did contain quid info
WITHOUT_CLASSIFICATION	Create a page for the parent tree view.
WITHOUT_CLASSIFICATION	Make sure it's okay.
WITHOUT_CLASSIFICATION	We either remove the root mapping or we use the iterator that returned the most recent next mapping.
WITHOUT_CLASSIFICATION	Cache the tree path for each object.
WITHOUT_CLASSIFICATION	Set the editor's selection based on the current viewer's selection.
WITHOUT_CLASSIFICATION	The helper part assumes that the summary is likely based on the helper and will change when the helper is set.
WITHOUT_CLASSIFICATION	This is the method that gets invoked when the operation runs.
WITHOUT_CLASSIFICATION	This is for the out2in feature.
WITHOUT_CLASSIFICATION	This is for the topDown feature.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	There needs to be another URL protocol right after the archive protocol, and not a "/".
WITHOUT_CLASSIFICATION	Go directly to the right entry in the zip file, get the stream, and wrap it so that closing it closes the zip file.
WITHOUT_CLASSIFICATION	Record them as generic streams to record state during the loop that emulates recursion.
WITHOUT_CLASSIFICATION	If this entry isn't the end marker and isn't the matching one that we are replacing...
WITHOUT_CLASSIFICATION	Try to transfer it by reading the contents of the temporary file and writing them to the output stream of the delegate.
WITHOUT_CLASSIFICATION	Either execute or redo the command, as appropriate.
WITHOUT_CLASSIFICATION	Skip over the command that threw the exception.
WITHOUT_CLASSIFICATION	This is kind of tricky. If the saveIndex was in the redo part of the command list which has now been wiped out, then we can never reach a point where a save is not necessary, not even if we undo all the way back to the beginning.
WITHOUT_CLASSIFICATION	Count up the objects that will be removed. The objects are exchanged to produce this list's order
WITHOUT_CLASSIFICATION	Count up the objects that will be removed. The objects are exchanged to produce this list's order
WITHOUT_CLASSIFICATION	Count up the objects that will be removed. The objects are exchanged to produce this list's order
WITHOUT_CLASSIFICATION	Remove from by position in reverse order.
WITHOUT_CLASSIFICATION	remove/add the action bar from the view so to avoid having an empty action bar participating in the view's layout calculation (and maybe causing an empty bar to appear)
WITHOUT_CLASSIFICATION	actionBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND)); systemBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));
WITHOUT_CLASSIFICATION	Define gradient (blue to widget background color)
WITHOUT_CLASSIFICATION	Create a new array.
WITHOUT_CLASSIFICATION	buttonComposite has to be the first child of composite because subclasses are expecting this.
WITHOUT_CLASSIFICATION	Common to all URI types.
WITHOUT_CLASSIFICATION	A cache of URIs, keyed by the strings from which they were created. The fragment of any URI is removed before caching it here, to minimize the size of the cache in the usual case where most URIs only differ by the fragment.
WITHOUT_CLASSIFICATION	The lower-cased schemes that will be used to identify archive URIs.
WITHOUT_CLASSIFICATION	Special segment values interpreted at resolve and resolve time.
WITHOUT_CLASSIFICATION	Some character classes, as defined in RFC 2396's BNF for URI. These are 128-bit bitmasks, stored as two longs, where the Nth bit is set iff the ASCII character with value N is included in the set. These are created with the highBitmask() and lowBitmask() methods defined below, and a character is tested against them using matches().
WITHOUT_CLASSIFICATION	| ucschar | escaped
WITHOUT_CLASSIFICATION	We can't want to do encoding of platform resource URIs by default yet.
WITHOUT_CLASSIFICATION	Returns the upper half bitmask for all the ASCII characters in the given string.
WITHOUT_CLASSIFICATION	Uses a cache to speed up creation of a URI from a string. The cache is consulted to see if the URI, less any fragment, has already been created. If needed, the fragment is re-appended to the cached URI, which is considerably more efficient than creating the whole URI from scratch. If the URI wasn't found in the cache, it is created using parseIntoURI() and then cached. This method should always be used by string-parsing factory methods, instead of parseIntoURI() directly.
WITHOUT_CLASSIFICATION	Finds the next occurrence of one of the characters in the set represented by the given bitmask in the given string, beginning at index i. The index of the first found character, or s.length() if there is none, is returned. Before searching, i is limited to the range [0, s.length()].
WITHOUT_CLASSIFICATION	boolean iri = false;
WITHOUT_CLASSIFICATION	iri = iri || containsNonASCII(segments[i]);
WITHOUT_CLASSIFICATION	<p>A valid query may be null or contain any allowed URI characters.
WITHOUT_CLASSIFICATION	return value == null || validate(value, URIC_HI, URIC_LO, true, true);
WITHOUT_CLASSIFICATION	Tests the non-null string value to see if it contains only ASCII characters in the set represented by the specified 128-bit bitmask, as well as, optionally, non-ASCII characters 0xA0 and above, and, also optionally, escape sequences of % followed by two hex digits. This method is used for the new, strict URI validation that is not not currently in place.
WITHOUT_CLASSIFICATION	note: authority == null -> hierarchical (authority == null && device == null && !absolutePath) -> scheme == null
WITHOUT_CLASSIFICATION	current document reference: use base path and query
WITHOUT_CLASSIFICATION	else keep device, path, and query
WITHOUT_CLASSIFICATION	else keep authority, device, path, and query
WITHOUT_CLASSIFICATION	Merges this URI's relative path with the base non-relative path. If base has no path, treat it as the root absolute path, unless this has no path either.
WITHOUT_CLASSIFICATION	if the relative path is empty or ends in an empty segment, a parent reference, or a self reference, add a trailing separator to a non-empty path
WITHOUT_CLASSIFICATION	since base must be hierarchical, and since a non-hierarchical URI must have both scheme and opaque part, the complete absolute URI is needed to resolve to a non-hierarchical URI
WITHOUT_CLASSIFICATION	path form demands an absolute path: keep it and query
WITHOUT_CLASSIFICATION	always include fragment, even if null; no validation needed since all components are from existing URIs
WITHOUT_CLASSIFICATION	Returns true if the non-relative path includes segments that would be collapsed when resolving; false otherwise. If preserveRootParents is true, collapsible segments include any empty segments, except for the last segment, as well as and parent and self references. If preserveRootsParents is false, parent references are not collapsible if they are the first segment or preceded only by other parent references.
WITHOUT_CLASSIFICATION	if endPath is shorter than startPath, the last segment of endPath may not be compared: because startPath has been collapsed and had its last segment removed, all preceding segments can be considered non- empty and followed by a separator, while the last segment of endPath will either be non-empty and not followed by a separator, or just empty
WITHOUT_CLASSIFICATION	absolute path or no path -> absolute path
WITHOUT_CLASSIFICATION	Computes a three-character escape sequence for the byte, appending it to the StringBuffer. Only characters up to 0xFF should be escaped; all but the least significant byte will be ignored.
WITHOUT_CLASSIFICATION	Returns <code>true</code> if this URI contains non-ASCII characters; <code>false</code> otherwise. This unused code is included for possible future use...
WITHOUT_CLASSIFICATION	If that fails, determine the URL for the class itself. The URL will be of one of the following forms, so there are a few good places to consider looking for the plugin.properties. For a plugin.xml with runtime="common.jar": jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/common.jar!/org/eclipse/common/CommonPlugin.class For a plugin.xml with runtime="runtime/common.jar": jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/runtime/common.jar!/org/eclipse/common/CommonPlugin.class For a plugin.xml with runtime="." where the plugin is jarred: jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common.jar!/org/eclipse/common/CommonPlugin.class For a plugin.xml with runtime="." where the plugin is not jarred. file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/org/eclipse/emf/common/CommonPlugin.class Running in PDE with bin on classpath: file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/bin/org/eclipse/emf/common/CommonPlugin.class
WITHOUT_CLASSIFICATION	If we can open an input stream, then the plugin.properties is there, and we have a good base URL.
WITHOUT_CLASSIFICATION	If the bundle can't be found the normal way, try to find it as the base URL. If that also doesn't work, rethrow the original exception.
WITHOUT_CLASSIFICATION	++modCount
WITHOUT_CLASSIFICATION	++modCount
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Open an editor on the new file.
WITHOUT_CLASSIFICATION	Open an editor on the new file.
WITHOUT_CLASSIFICATION	feature is instance of EAttribute
WITHOUT_CLASSIFICATION	Create a proper feature map entry.
WITHOUT_CLASSIFICATION	Bidirectional references need to use this less efficient approach because some or all of the changes may already have been made from the other end.
WITHOUT_CLASSIFICATION	caches the list value.
WITHOUT_CLASSIFICATION	caches the list value.
WITHOUT_CLASSIFICATION	caches the list value.
WITHOUT_CLASSIFICATION	Maintain a (weak hash) set on the type parameter of all referencing generic types.
WITHOUT_CLASSIFICATION	The algorithm for the order of the features in this list should never change. Also, the fact that a new list is created whenever the contents change is something else that should never change. There are clients who rely on both these behaviors, and they will need to agree to any change, so that they can adjust their own code.
WITHOUT_CLASSIFICATION	The notification for this list is being thrown by the delegating list
WITHOUT_CLASSIFICATION	Keep trying until all else has failed.
WITHOUT_CLASSIFICATION	return eContainerFeatureID;
WITHOUT_CLASSIFICATION	If we're not setting a new resource, attach it to the old container's resource.
WITHOUT_CLASSIFICATION	If we didn't detach it from an old resource already, detach it from the old container's resource.
WITHOUT_CLASSIFICATION	backward compatibility with old generated overrides
WITHOUT_CLASSIFICATION	backward compatibility with old generated overrides
WITHOUT_CLASSIFICATION	Depending on the action and the current state, we'll toggle the state. i.e., for unset, we need to turn it off if it's on, and for set we need to turn it on if it's off.
WITHOUT_CLASSIFICATION	If the index was previously assigned, return it. Otherwise, return a negative result that encodes the newly assigned index.
WITHOUT_CLASSIFICATION	We set it and get back the interned string. This way, when instanceClassName == instanceTypeName we know we should serialize only the class name.
WITHOUT_CLASSIFICATION	The container class must be null for the open content features of the document root to ensure that they are looked up in the actual eClass() rather than assumed to be a feature with a feature ID relative to the actual class. Otherwise, it's good to have this optimization.
WITHOUT_CLASSIFICATION	Interpret it as part of the name.
WITHOUT_CLASSIFICATION	The class address was not equal, so we don't want this class loader, but instead want the last result that was able to load the class.
WITHOUT_CLASSIFICATION	Platform.getBundle(element.getNamespaceIdentifier()).loadClass(contributorClassName);
WITHOUT_CLASSIFICATION	First try to see if this class has an eInstance
WITHOUT_CLASSIFICATION	Create a resource for this file.
WITHOUT_CLASSIFICATION	Add the initial model object to the contents.
WITHOUT_CLASSIFICATION	Create a page, set the title, and the initial model file name.
WITHOUT_CLASSIFICATION	Set this for the container.
WITHOUT_CLASSIFICATION	Load the schema and packages that were used to load the instance into this resource set.
WITHOUT_CLASSIFICATION	Create a resource for this file. Don't specify a content type, as it could be Ecore or EMOF.
WITHOUT_CLASSIFICATION	Put all static package in the package registry.
WITHOUT_CLASSIFICATION	Look into SubContributionItems
WITHOUT_CLASSIFICATION	return;
WITHOUT_CLASSIFICATION	super.collectNewChildDescriptors(newChildDescriptors, object);
WITHOUT_CLASSIFICATION	If the list is empty, we need to add all the objects, otherwise, the reference is bidirectional and the list is at least partially populated.
WITHOUT_CLASSIFICATION	List subList(EStructuralFeature feature, int from, int to); EList list(EStructuralFeature feature);
WITHOUT_CLASSIFICATION	We do not want to diagnose any errors that have already been diagnosed by a super type. Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates.
WITHOUT_CLASSIFICATION	There is no match if the types are different and they don't each specify the same non-null instance class name.
WITHOUT_CLASSIFICATION	We need to be conservative and diagnose a problem only if we are quite sure that type is built-in and hence that the lack of a default value really represents a problem with being unable to convert the literal to a value.
WITHOUT_CLASSIFICATION	And even if it is contained, it must not be a forward reference. eTypeParameterIndex == index is allowed when the type parameter is the type argument of the bound, though
WITHOUT_CLASSIFICATION	A primitive type can only be used as the generic type of a typed element.
WITHOUT_CLASSIFICATION	Check if the bound specifies a classifier...
WITHOUT_CLASSIFICATION	Since we will do the processing recursively, we need to ensure we don't stack overflow if there is a circular super type.
WITHOUT_CLASSIFICATION	Or we test their relationship via their instance classes, if they have them.
WITHOUT_CLASSIFICATION	The bound is a wildcard with no constraints.
WITHOUT_CLASSIFICATION	The bound is a wildcard with no constraints.
WITHOUT_CLASSIFICATION	featureMap.add(eStructuralFeature, cursor++, o); expectedModCount = featureMap.getModCount(); ++entryCursor; ++lastCursor; lastCursor = -1; prepared = 0;
WITHOUT_CLASSIFICATION	Don't remove the adapter if the object is in a different resource and that resource (and hence all its contents) are being cross referenced.
WITHOUT_CLASSIFICATION	public List subList(EStructuralFeature feature, int from, int to) { return null; }
WITHOUT_CLASSIFICATION	Mark the bound as unspecified so that it won't be considered many but can nevertheless be recognized as being unspecified and perhaps still be treat as many.
WITHOUT_CLASSIFICATION	Mark the bound as unspecified so that it won't be considered many but can nevertheless be recognized as being unspecified and perhaps still be treat as many.
WITHOUT_CLASSIFICATION	If we can't add it, it must already be in the list so find it and move it to the end.
WITHOUT_CLASSIFICATION	Both eObject1 and eObject2 are not null. If eObject1 has been compared already...
WITHOUT_CLASSIFICATION	There's no reason they aren't equal, so they are.
WITHOUT_CLASSIFICATION	If the set states are the same, and the values of the feature are the structurally equal, they are equal.
WITHOUT_CLASSIFICATION	If entries don't have the same feature, the feature maps aren't equal.
WITHOUT_CLASSIFICATION	Do a base 64 conversion by turning every 3 bytes into 4 base 64 characters
WITHOUT_CLASSIFICATION	Get the current time in milliseconds since the epoch and adjust it to match the epoch required by the specification.
WITHOUT_CLASSIFICATION	The system time hasn't changed so add some increment of 100s of nanoseconds to guarantee uniqueness.
WITHOUT_CLASSIFICATION	Since the granularity of time in Java is only milliseconds, add an adjustment so that the time is represented in 100s of nanoseconds. The version number (1) is multiplexed into the most significant hex digit.
WITHOUT_CLASSIFICATION	Cc
WITHOUT_CLASSIFICATION	The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler.
WITHOUT_CLASSIFICATION	Handle the same document proxies, which may have problems resulting from the other end of a bidirectional reference being handled as an IDREF rather than as a proxy. When we are done with these, we know that funny proxies are now resolved as if they were handled as IDREFs.
WITHOUT_CLASSIFICATION	So if the resolved object is also present...
WITHOUT_CLASSIFICATION	If there is no root object, we're dealing with an EAttribute feature instead of an EReference feature. So create an instance of simple any type and prepare it to handle the text content.
WITHOUT_CLASSIFICATION	Continue with a different approach.
WITHOUT_CLASSIFICATION	Look for the first non-XMI element.
WITHOUT_CLASSIFICATION	set features and properties
WITHOUT_CLASSIFICATION	Include only non-duplicate namespace declarations.
WITHOUT_CLASSIFICATION	We need to be careful that we don't end up requiring the no namespace package just because the feature is unqualified.
WITHOUT_CLASSIFICATION	We must have a qualifier for an attribute that needs qualified.
WITHOUT_CLASSIFICATION	see if prefix already exists in current context
WITHOUT_CLASSIFICATION	Walk up the super types until we reach a root.
WITHOUT_CLASSIFICATION	Look for a matching element in the classifier's package but don't bother with the XML type package's document root.
WITHOUT_CLASSIFICATION	INTERNAL: this is a specialized method to add attributes for a top/root element
WITHOUT_CLASSIFICATION	it's intentional to keep going
WITHOUT_CLASSIFICATION	it's intentional to keep going
WITHOUT_CLASSIFICATION	it's intentional to keep going
WITHOUT_CLASSIFICATION	it's intentional to keep going
WITHOUT_CLASSIFICATION	Produce the supplemental character as an entity
WITHOUT_CLASSIFICATION	We not sure the encoding supports this code point, so we write it as a character entity reference.
WITHOUT_CLASSIFICATION	no property
WITHOUT_CLASSIFICATION	no property
WITHOUT_CLASSIFICATION	no property
WITHOUT_CLASSIFICATION	Only handle classifiers from this package.
WITHOUT_CLASSIFICATION	We effectively passed null, "" to look up the general-content feature.
WITHOUT_CLASSIFICATION	DocumentRoot
WITHOUT_CLASSIFICATION	Keep trying other member types until all have failed.
WITHOUT_CLASSIFICATION	Keep trying other member types until all have failed.
WITHOUT_CLASSIFICATION	================================================================
WITHOUT_CLASSIFICATION	================================================================
WITHOUT_CLASSIFICATION	================================================================
WITHOUT_CLASSIFICATION	================================================================
WITHOUT_CLASSIFICATION	================================================================
WITHOUT_CLASSIFICATION	================================================================
WITHOUT_CLASSIFICATION	================================================================
WITHOUT_CLASSIFICATION	================================================================
WITHOUT_CLASSIFICATION	================================================================
WITHOUT_CLASSIFICATION	================================================================
WITHOUT_CLASSIFICATION	================================================================
WITHOUT_CLASSIFICATION	================================================================
WITHOUT_CLASSIFICATION	================================================================
WITHOUT_CLASSIFICATION	Need not to call setSource() because a caller can not access this match instance.
WITHOUT_CLASSIFICATION	Need not to call setSource() because a caller can not access this match instance.
WITHOUT_CLASSIFICATION	The pattern has only fixed string. The engine uses Boyer-Moore.
WITHOUT_CLASSIFICATION	The pattern has only fixed string. The engine uses Boyer-Moore.
WITHOUT_CLASSIFICATION	The pattern contains a fixed string. The engine checks with Boyer-Moore whether the text contains the fixed string or not. If not, it return with false.
WITHOUT_CLASSIFICATION	ModifierOp CharOp for CHAR, BACKREFERENCE, CAPTURE, ANCHOR,
WITHOUT_CLASSIFICATION	STRING
WITHOUT_CLASSIFICATION	for RANGE or NRANGE
WITHOUT_CLASSIFICATION	Overlapped src: o--------o sub: o----o sub: o----o sub: o----o sub: o------------o
WITHOUT_CLASSIFICATION	this.ranges is sorted and compacted.
WITHOUT_CLASSIFICATION	src1: o--------o src2: o----o res: o--o Reuse src2
WITHOUT_CLASSIFICATION	this.setLocale(Locale.getDefault());
WITHOUT_CLASSIFICATION	public RegularExpression createRegex(String regex, int options) throws ParseException { Token tok = this.parse(regex, options); return new RegularExpression(regex, tok, this.parennumber, this.hasBackReferences, options); }
WITHOUT_CLASSIFICATION	')'
WITHOUT_CLASSIFICATION	Skips ')'
WITHOUT_CLASSIFICATION	off -> next of '}'
WITHOUT_CLASSIFICATION	\ + c backsolidus POSIX Character class such as [:alnum:]
WITHOUT_CLASSIFICATION	tok.dumpRanges();
WITHOUT_CLASSIFICATION	Skips ']'
WITHOUT_CLASSIFICATION	ESCAPE U+001B FORM FEED U+000C LINE FEED U+000A CRRIAGE RETURN U+000D HORIZONTAL TABULATION U+0009 case 'v': c = 0x0b; break; VERTICAL TABULATION U+000B
WITHOUT_CLASSIFICATION	for CLOSURE
WITHOUT_CLASSIFICATION	for STRING
WITHOUT_CLASSIFICATION	result.addRange(0, RegularExpression.LINE_FEED-1); result.addRange(RegularExpression.LINE_FEED+1, RegularExpression.CARRIAGE_RETURN-1); result.addRange(RegularExpression.CARRIAGE_RETURN+1, RegularExpression.LINE_SEPARATOR-1); result.addRange(RegularExpression.PARAGRAPH_SEPARATOR+1, UTF16_MAX); return 1;
WITHOUT_CLASSIFICATION	------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------
WITHOUT_CLASSIFICATION	28 29, 30 31-37
WITHOUT_CLASSIFICATION	Schema Rec. {Datatypes} - Punctuation Pi - initial quote Pf - final quote
WITHOUT_CLASSIFICATION	0590..05FF;
WITHOUT_CLASSIFICATION	0A00..0A7F;
WITHOUT_CLASSIFICATION	0D00..0D7F;
WITHOUT_CLASSIFICATION	10A0..10FF;
WITHOUT_CLASSIFICATION	16A0..16FF;
WITHOUT_CLASSIFICATION	2000..206F;
WITHOUT_CLASSIFICATION	2190..21FF;
WITHOUT_CLASSIFICATION	2500..257F;
WITHOUT_CLASSIFICATION	2FF0..2FFF;
WITHOUT_CLASSIFICATION	3190..319F;
WITHOUT_CLASSIFICATION	A000..A48F;
WITHOUT_CLASSIFICATION	FB50..FDFF;
WITHOUT_CLASSIFICATION	FF00..FFEF;
WITHOUT_CLASSIFICATION	1D400..1D7FF;
WITHOUT_CLASSIFICATION	ADD THOSE MANUALLY F0000..FFFFD; "Private Use", 100000..10FFFD; "Private Use" FFF0..FFFD; "Specials",
WITHOUT_CLASSIFICATION	;DEVANAGARI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; ;BENGALI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; ;GURMUKHI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; ;GUJARATI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; ;ORIYA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; ;TAMIL SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; ;TELUGU SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; ;KANNADA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; ;MALAYALAM SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; ;THAI CHARACTER PHINTHU;Mn;9;ON;;;;;N;THAI VOWEL SIGN PHINTHU;;;; ;TIBETAN MARK HALANTA;Mn;9;ON;;;;;N;TIBETAN VIRAMA;;;;
WITHOUT_CLASSIFICATION	Don't use 'cotinue' for this loop. single-range | from-to-range | subtraction
WITHOUT_CLASSIFICATION	both prefix (if any) a localpart must be valid NCName
WITHOUT_CLASSIFICATION	Empty.
WITHOUT_CLASSIFICATION	Empty.
WITHOUT_CLASSIFICATION	Empty.
WITHOUT_CLASSIFICATION	Empty.
WITHOUT_CLASSIFICATION	This class provides encode/decode for RFC 2045 Base64 as defined by RFC 2045, N. Freed and N. Borenstein. RFC 2045: Multipurpose Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies. Reference 1996 Available at: http:www.ietf.org/rfc/rfc2045.txt This class is used by XML Schema binary format validation This implementation does not encode/decode streaming data. You need the data that you will encode/decode already on a byte array. @author Jeffrey Rodriguez @author Sandy Gao
WITHOUT_CLASSIFICATION	if found "no data" just return null
WITHOUT_CLASSIFICATION	EncodingMap is a convenience class which handles conversions between IANA encoding names and Java encoding names, and vice versa. The encoding names used in XML instance documents <strong>must</strong> be the IANA encoding names specified or one of the aliases for those names which IANA defines. <p> <TABLE BORDER="0" WIDTH="100%"> <TR> <TD WIDTH="33%"> <P ALIGN="CENTER"><B>Common Name</B> </TD> <TD WIDTH="15%"> <P ALIGN="CENTER"><B>Use this name in XML files</B> </TD> <TD WIDTH="12%"> <P ALIGN="CENTER"><B>Name Type</B> </TD> <TD WIDTH="31%"> <P ALIGN="CENTER"><B>Xerces converts to this Java Encoder Name</B> </TD> </TR> <TR> <TD WIDTH="33%">8 bit Unicode</TD> <TD WIDTH="15%"> <P ALIGN="CENTER">UTF-8 </TD> <TD WIDTH="12%"> <P ALIGN="CENTER">IANA </TD> <TD WIDTH="31%"> <P ALIGN="CENTER">UTF8 </TD> </TR> <TR> <TD WIDTH="33%">ISO Latin 1</TD> <TD WIDTH="15%"> <P ALIGN="CENTER">ISO-8859-1 </TD> <TD WIDTH="12%"> <P ALIGN="CENTER">MIME </TD> <TD WIDTH="31%"> <P ALIGN="CENTER">ISO-8859-1 </TD> </TR> <TR> <TD WIDTH="33%">ISO Latin 2</TD> <TD WIDTH="15%"> <P ALIGN="CENTER">ISO-8859-2 </TD> <TD WIDTH="12%"> <P ALIGN="CENTER">MIME </TD> <TD WIDTH="31%"> <P ALIGN="CENTER">ISO-8859-2 </TD> </TR> <TR> <TD WIDTH="33%">ISO Latin 3</TD> <TD WIDTH="15%"> <P ALIGN="CENTER">ISO-8859-3 </TD> <TD WIDTH="12%"> <P ALIGN="CENTER">MIME </TD> <TD WIDTH="31%"> <P ALIGN="CENTER">ISO-8859-3 </TD> </TR> <TR> <TD WIDTH="33%">ISO Latin 4</TD> <TD WIDTH="15%"> <P ALIGN="CENTER">ISO-8859-4 </TD> <TD WIDTH="12%"> <P ALIGN="CENTER">MIME </TD> <TD WIDTH="31%"> <P ALIGN="CENTER">ISO-8859-4 </TD> </TR> <TR> <TD WIDTH="33%">ISO Latin Cyrillic</TD> <TD WIDTH="15%"> <P ALIGN="CENTER">ISO-8859-5 </TD> <TD WIDTH="12%"> <P ALIGN="CENTER">MIME </TD> <TD WIDTH="31%"> <P ALIGN="CENTER">ISO-8859-5 </TD> </TR> <TR> <TD WIDTH="33%">ISO Latin Arabic</TD> <TD WIDTH="15%"> <P ALIGN="CENTER">ISO-8859-6 </TD> <TD WIDTH="12%"> <P ALIGN="CENTER">MIME </TD> <TD WIDTH="31%"> <P ALIGN="CENTER">ISO-8859-6 </TD> </TR> <TR> <TD WIDTH="33%">ISO Latin Greek</TD> <TD WIDTH="15%"> <P ALIGN="CENTER">ISO-8859-7 </TD> <TD WIDTH="12%"> <P ALIGN="CENTER">MIME </TD> <TD WIDTH="31%"> <P ALIGN="CENTER">ISO-8859-7 </TD> </TR> <TR> <TD WIDTH="33%">ISO Latin Hebrew</TD> <TD WIDTH="15%"> <P ALIGN="CENTER">ISO-8859-8 </TD> <TD WIDTH="12%"> <P ALIGN="CENTER">MIME </TD> <TD WIDTH="31%"> <P ALIGN="CENTER">ISO-8859-8 </TD> </TR> <TR> <TD WIDTH="33%">ISO Latin 5</TD> <TD WIDTH="15%"> <P ALIGN="CENTER">ISO-8859-9 </TD> <TD WIDTH="12%"> <P ALIGN="CENTER">MIME </TD> <TD WIDTH="31%"> <P ALIGN="CENTER">ISO-8859-9 </TD> </TR> <TR> <TD WIDTH="33%">EBCDIC: US</TD> <TD WIDTH="15%"> <P ALIGN="CENTER">ebcdic-cp-us </TD> <TD WIDTH="12%"> <P ALIGN="CENTER">IANA </TD> <TD WIDTH="31%"> <P ALIGN="CENTER">cp037 </TD> </TR> <TR> <TD WIDTH="33%">EBCDIC: Canada</TD> <TD WIDTH="15%"> <P ALIGN="CENTER">ebcdic-cp-ca </TD> <TD WIDTH="12%"> <P ALIGN="CENTER">IANA </TD> <TD WIDTH="31%"> <P ALIGN="CENTER">cp037 </TD> </TR> <TR> <TD WIDTH="33%">EBCDIC: Netherlands</TD> <TD WIDTH="15%"> <P ALIGN="CENTER">ebcdic-cp-nl </TD> <TD WIDTH="12%"> <P ALIGN="CENTER">IANA </TD> <TD WIDTH="31%"> <P ALIGN="CENTER">cp037 </TD> </TR> <TR> <TD WIDTH="33%">EBCDIC: Denmark</TD> <TD WIDTH="15%"> <P ALIGN="CENTER">ebcdic-cp-dk </TD> <TD WIDTH="12%"> <P ALIGN="CENTER">IANA </TD> <TD WIDTH="31%"> <P ALIGN="CENTER">cp277 </TD> </TR> <TR> <TD WIDTH="33%">EBCDIC: Norway</TD> <TD WIDTH="15%"> <P ALIGN="CENTER">ebcdic-cp-no </TD> <TD WIDTH="12%"> <P ALIGN="CENTER">IANA </TD> <TD WIDTH="31%"> <P ALIGN="CENTER">cp277 </TD> </TR> <TR> <TD WIDTH="33%">EBCDIC: Finland</TD> <TD WIDTH="15%"> <P ALIGN="CENTER">ebcdic-cp-fi </TD> <TD WIDTH="12%"> <P ALIGN="CENTER">IANA </TD> <TD WIDTH="31%"> <P ALIGN="CENTER">cp278 </TD> </TR> <TR> <TD WIDTH="33%">EBCDIC: Sweden</TD> <TD WIDTH="15%"> <P ALIGN="CENTER">ebcdic-cp-se </TD> <TD WIDTH="12%"> <P ALIGN="CENTER">IANA </TD> <TD WIDTH="31%"> <P ALIGN="CENTER">cp278 </TD> </TR> <TR> <TD WIDTH="33%">EBCDIC: Italy</TD> <TD WIDTH="15%"> <P ALIGN="CENTER">ebcdic-cp-it </TD> <TD WIDTH="12%"> <P ALIGN="CENTER">IANA </TD> <TD WIDTH="31%"> <P ALIGN="CENTER">cp280 </TD> </TR> <TR> <TD WIDTH="33%">EBCDIC: Spain, Latin America</TD> <TD WIDTH="15%"> <P ALIGN="CENTER">ebcdic-cp-es </TD> <TD WIDTH="12%"> <P ALIGN="CENTER">IANA </TD> <TD WIDTH="31%"> <P ALIGN="CENTER">cp284 </TD> </TR> <TR> <TD WIDTH="33%">EBCDIC: Great Britain</TD> <TD WIDTH="15%"> <P ALIGN="CENTER">ebcdic-cp-gb </TD> <TD WIDTH="12%"> <P ALIGN="CENTER">IANA </TD> <TD WIDTH="31%"> <P ALIGN="CENTER">cp285 </TD> </TR> <TR> <TD WIDTH="33%">EBCDIC: France</TD> <TD WIDTH="15%"> <P ALIGN="CENTER">ebcdic-cp-fr </TD> <TD WIDTH="12%"> <P ALIGN="CENTER">IANA </TD> <TD WIDTH="31%"> <P ALIGN="CENTER">cp297 </TD> </TR> <TR> <TD WIDTH="33%">EBCDIC: Arabic</TD> <TD WIDTH="15%"> <P ALIGN="CENTER">ebcdic-cp-ar1 </TD> <TD WIDTH="12%"> <P ALIGN="CENTER">IANA </TD> <TD WIDTH="31%"> <P ALIGN="CENTER">cp420 </TD> </TR> <TR> <TD WIDTH="33%">EBCDIC: Hebrew</TD> <TD WIDTH="15%"> <P ALIGN="CENTER">ebcdic-cp-he </TD> <TD WIDTH="12%"> <P ALIGN="CENTER">IANA </TD> <TD WIDTH="31%"> <P ALIGN="CENTER">cp424 </TD> </TR> <TR> <TD WIDTH="33%">EBCDIC: Switzerland</TD> <TD WIDTH="15%"> <P ALIGN="CENTER">ebcdic-cp-ch </TD> <TD WIDTH="12%"> <P ALIGN="CENTER">IANA </TD> <TD WIDTH="31%"> <P ALIGN="CENTER">cp500 </TD> </TR> <TR> <TD WIDTH="33%">EBCDIC: Roece</TD> <TD WIDTH="15%"> <P ALIGN="CENTER">ebcdic-cp-roece </TD> <TD WIDTH="12%"> <P ALIGN="CENTER">IANA </TD> <TD WIDTH="31%"> <P ALIGN="CENTER">cp870 </TD> </TR> <TR> <TD WIDTH="33%">EBCDIC: Yugoslavia</TD> <TD WIDTH="15%"> <P ALIGN="CENTER">ebcdic-cp-yu </TD> <TD WIDTH="12%"> <P ALIGN="CENTER">IANA </TD> <TD WIDTH="31%"> <P ALIGN="CENTER">cp870 </TD> </TR> <TR> <TD WIDTH="33%">EBCDIC: Iceland</TD> <TD WIDTH="15%"> <P ALIGN="CENTER">ebcdic-cp-is </TD> <TD WIDTH="12%"> <P ALIGN="CENTER">IANA </TD> <TD WIDTH="31%"> <P ALIGN="CENTER">cp871 </TD> </TR> <TR> <TD WIDTH="33%">EBCDIC: Urdu</TD> <TD WIDTH="15%"> <P ALIGN="CENTER">ebcdic-cp-ar2 </TD> <TD WIDTH="12%"> <P ALIGN="CENTER">IANA </TD> <TD WIDTH="31%"> <P ALIGN="CENTER">cp918 </TD> </TR> <TR> <TD WIDTH="33%">Chinese for PRC, mixed 1/2 byte</TD> <TD WIDTH="15%"> <P ALIGN="CENTER">gb2312 </TD> <TD WIDTH="12%"> <P ALIGN="CENTER">MIME </TD> <TD WIDTH="31%"> <P ALIGN="CENTER">GB2312 </TD> </TR> <TR> <TD WIDTH="33%">Extended Unix Code, packed for Japanese</TD> <TD WIDTH="15%"> <P ALIGN="CENTER">euc-jp </TD> <TD WIDTH="12%"> <P ALIGN="CENTER">MIME </TD> <TD WIDTH="31%"> <P ALIGN="CENTER">eucjis </TD> </TR> <TR> <TD WIDTH="33%">Japanese: iso-2022-jp</TD> <TD WIDTH="15%"> <P ALIGN="CENTER">iso-2020-jp </TD> <TD WIDTH="12%"> <P ALIGN="CENTER">MIME </TD> <TD WIDTH="31%"> <P ALIGN="CENTER">JIS </TD> </TR> <TR> <TD WIDTH="33%">Japanese: Shift JIS</TD> <TD WIDTH="15%"> <P ALIGN="CENTER">Shift_JIS </TD> <TD WIDTH="12%"> <P ALIGN="CENTER">MIME </TD> <TD WIDTH="31%"> <P ALIGN="CENTER">SJIS </TD> </TR> <TR> <TD WIDTH="33%">Chinese: Big5</TD> <TD WIDTH="15%"> <P ALIGN="CENTER">Big5 </TD> <TD WIDTH="12%"> <P ALIGN="CENTER">MIME </TD> <TD WIDTH="31%"> <P ALIGN="CENTER">Big5 </TD> </TR> <TR> <TD WIDTH="33%">Extended Unix Code, packed for Korean</TD> <TD WIDTH="15%"> <P ALIGN="CENTER">euc-kr </TD> <TD WIDTH="12%"> <P ALIGN="CENTER">MIME </TD> <TD WIDTH="31%"> <P ALIGN="CENTER">iso2022kr </TD> </TR> <TR> <TD WIDTH="33%">Cyrillic</TD> <TD WIDTH="15%"> <P ALIGN="CENTER">koi8-r </TD> <TD WIDTH="12%"> <P ALIGN="CENTER">MIME </TD> <TD WIDTH="31%"> <P ALIGN="CENTER">koi8-r </TD> </TR> </TABLE> @author TAMURA Kent, IBM @author Andy Clark, IBM
WITHOUT_CLASSIFICATION	Static initialization
WITHOUT_CLASSIFICATION	Static initialization
WITHOUT_CLASSIFICATION	add IANA to Java encoding mappings.
WITHOUT_CLASSIFICATION	support for 1047, as proposed to be added to the IANA registry in http:lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html
WITHOUT_CLASSIFICATION	support for 1047, as proposed to be added to the IANA registry in http:lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html
WITHOUT_CLASSIFICATION	<clinit>()
WITHOUT_CLASSIFICATION	<clinit>()
WITHOUT_CLASSIFICATION	putJava2IANAMapping(String,String)
WITHOUT_CLASSIFICATION	getJava2IANAMapping(String):String
WITHOUT_CLASSIFICATION	removeJava2IANAMapping
WITHOUT_CLASSIFICATION	Add ASCII Letters
WITHOUT_CLASSIFICATION	Add Mark Characters
WITHOUT_CLASSIFICATION	Add Userinfo Characters
WITHOUT_CLASSIFICATION	just make a copy of the base if spec is empty
WITHOUT_CLASSIFICATION	A standalone base is a valid URI according to spec
WITHOUT_CLASSIFICATION	Two slashes means we may have authority, but definitely means we're either matching net_path or abs_path. These two productions are ambiguous in that every net_path (except those containing an IPv6Reference) is an abs_path. RFC 2396 resolves this ambiguity by applying a greedy left most matching rule. Try matching net_path first, and if that fails we don't have authority so then attempt to match abs_path. net_path = "" authority [ abs_path ] abs_path = "/" path_segments
WITHOUT_CLASSIFICATION	Two slashes means we may have authority, but definitely means we're either matching net_path or abs_path. These two productions are ambiguous in that every net_path (except those containing an IPv6Reference) is an abs_path. RFC 2396 resolves this ambiguity by applying a greedy left most matching rule. Try matching net_path first, and if that fails we don't have authority so then attempt to match abs_path. net_path = "" authority [ abs_path ] abs_path = "/" path_segments
WITHOUT_CLASSIFICATION	If we didn't find authority we need to back up. Attempt to match against abs_path next.
WITHOUT_CLASSIFICATION	create message
WITHOUT_CLASSIFICATION	check to see if this is the current doc - RFC 2396 5.2 #2 note that this is slightly different from the RFC spec in that we don't include the check for query string being null - this handles cases where the urispec is just a query string or a fragment (e.g. "?y" or "#s") - see <http:www.ics.uci.edu/~fielding/url/test1.html> which identified this as a bug in the RFC
WITHOUT_CLASSIFICATION	check for scheme - RFC 2396 5.2 #3 if we found a scheme, it means absolute URI, so we're done
WITHOUT_CLASSIFICATION	if we get to this point, we need to resolve relative path RFC 2396 5.2 #6
WITHOUT_CLASSIFICATION	check for valid escape sequence
WITHOUT_CLASSIFICATION	check for valid escape sequence
WITHOUT_CLASSIFICATION	check for valid escape sequence
WITHOUT_CLASSIFICATION	If the scheme specific part is opaque, it can contain '[' and ']'. uric_no_slash wasn't modified by RFC 2732, which I've interpreted as an error in the spec, since the production should be equivalent to (uric - '/'), and uric contains '[' and ']'. - mrglavas
WITHOUT_CLASSIFICATION	If the scheme specific part is opaque, it can contain '[' and ']'. uric_no_slash wasn't modified by RFC 2732, which I've interpreted as an error in the spec, since the production should be equivalent to (uric - '/'), and uric contains '[' and ']'. - mrglavas
WITHOUT_CLASSIFICATION	hostname = ( domainlabel "." ) toplabel [ "." ] domainlabel = alphanum | alphanum ( alphanum | "-" ) alphanum toplabel = alpha | alpha ( alphanum | "-" ) alphanum
WITHOUT_CLASSIFICATION	make sure that 1) we see only digits and dot separators, 2) that any dot separator is preceded and followed by a digit and 3) that we find 3 dots RFC 2732 amended RFC 2396 by replacing the definition of IPv4address with the one defined by RFC 2373. - mrglavas IPv4address = 13DIGIT "." 13DIGIT "." 13DIGIT "." 13DIGIT One to three digits must be in each segment.
WITHOUT_CLASSIFICATION	make sure that 1) we see only digits and dot separators, 2) that any dot separator is preceded and followed by a digit and 3) that we find 3 dots RFC 2732 amended RFC 2396 by replacing the definition of IPv4address with the one defined by RFC 2373. - mrglavas IPv4address = 13DIGIT "." 13DIGIT "." 13DIGIT "." 13DIGIT One to three digits must be in each segment.
WITHOUT_CLASSIFICATION	We've either reached the end of the string, the address ends in an IPv4 address, or it is invalid. scanHexSequence has already made sure that we have the right number of bits.
WITHOUT_CLASSIFICATION	This might be invalid or an IPv4address. If it's potentially an IPv4address, backup to just after the last valid character that matches hexseq.
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) 49 Fill 26 of value (byte) -3 Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 26 of value (byte) -3 Fill 60 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 68 of value (byte) -19 Fill 9 of value (byte) 33 Fill 36 of value (byte) -19 Fill 3 of value (byte) 33 Fill 2 of value (byte) -19 Fill 4 of value (byte) 33 Fill 30 of value (byte) -19 Fill 56 of value (byte) 33 Fill 89 of value (byte) -19 Fill 18 of value (byte) 33 Fill 7 of value (byte) -19 Fill 14 of value (byte) 33 Fill 2 of value (byte) -87 Fill 46 of value (byte) 33 Fill 70 of value (byte) -87 Fill 26 of value (byte) 33 Fill 2 of value (byte) -87 Fill 36 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 68 of value (byte) -19 Fill 9 of value (byte) 33 Fill 36 of value (byte) -19 Fill 3 of value (byte) 33 Fill 2 of value (byte) -19 Fill 4 of value (byte) 33 Fill 30 of value (byte) -19 Fill 56 of value (byte) 33 Fill 89 of value (byte) -19 Fill 18 of value (byte) 33 Fill 7 of value (byte) -19 Fill 14 of value (byte) 33 Fill 2 of value (byte) -87 Fill 46 of value (byte) 33 Fill 70 of value (byte) -87 Fill 26 of value (byte) 33 Fill 2 of value (byte) -87 Fill 36 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 4 of value (byte) -87 Fill 9 of value (byte) 33 Fill 53 of value (byte) -19 Fill 2 of value (byte) 33 Fill 2 of value (byte) -19 Fill 2 of value (byte) 33 Fill 2 of value (byte) -19 Fill 3 of value (byte) 33 Fill 28 of value (byte) -19 Fill 2 of value (byte) 33 Fill 8 of value (byte) -19 Fill 2 of value (byte) 33 Fill 2 of value (byte) -19 Fill 55 of value (byte) 33 Fill 38 of value (byte) -19 Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 7 of value (byte) 33 Fill 38 of value (byte) -19 Fill 10 of value (byte) 33 Fill 17 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 11 of value (byte) 33 Fill 27 of value (byte) -19 Fill 5 of value (byte) 33 Fill 3 of value (byte) -19 Fill 46 of value (byte) 33 Fill 26 of value (byte) -19 Fill 5 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 4 of value (byte) -87 Fill 2 of value (byte) 33 Fill 10 of value (byte) -87 Fill 519 of value (byte) 33 Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 16 of value (byte) -87 Fill 3 of value (byte) 33 Fill 4 of value (byte) -87 Fill 3 of value (byte) 33 Fill 10 of value (byte) -19 Fill 2 of value (byte) -87 Fill 2 of value (byte) 33 Fill 10 of value (byte) -87 Fill 17 of value (byte) 33 Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 5 of value (byte) 33 Fill 10 of value (byte) -87 Fill 17 of value (byte) 33 Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) -19 Fill 2 of value (byte) 33 Fill 4 of value (byte) -19 Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	}}
WITHOUT_CLASSIFICATION	Fill 6 of value (byte) -87 Fill 3 of value (byte) 33 Fill 2 of value (byte) -87 Fill 2 of value (byte) 33 Fill 3 of value (byte) -87 Fill 8 of value (byte) 33 Fill 2 of value (byte) -87 Fill 4 of value (byte) 33 Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 15 of value (byte) 33 Fill 9 of value (byte) -87 Fill 17 of value (byte) 33 Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 10 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 5 of value (byte) -19 Fill 4 of value (byte) 33 Fill 7 of value (byte) -87
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Javadoc copied from base class.
WITHOUT_CLASSIFICATION	cause a syntax error
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Look for a likely plugin name.
WITHOUT_CLASSIFICATION	Returns the dynamic template path, an ordered list of URIs corresponding to locations under which to find templates.
WITHOUT_CLASSIFICATION	Returns the base portion of the dynamic template path.
WITHOUT_CLASSIFICATION	It's okay for there not be a precompiled template, so fail quietly.
WITHOUT_CLASSIFICATION	Returns whether this class implements any of the given features.
WITHOUT_CLASSIFICATION	GenTypedElement
WITHOUT_CLASSIFICATION	GenTypeParameter
WITHOUT_CLASSIFICATION	GenRuntimeVersion
WITHOUT_CLASSIFICATION	GenModelPackage
WITHOUT_CLASSIFICATION	String getPackageID();
WITHOUT_CLASSIFICATION	getFirstFileExtension?
WITHOUT_CLASSIFICATION	this returns either "attribute", "attribute list", "reference", or "reference list"
WITHOUT_CLASSIFICATION	add variable fragment to new declaration
WITHOUT_CLASSIFICATION	Filtered for property keys to remove duplicates.
WITHOUT_CLASSIFICATION	GenModelFactory
WITHOUT_CLASSIFICATION	GenAnnotation
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Javadoc copied from base class.
WITHOUT_CLASSIFICATION	add added super interfaces to the array
WITHOUT_CLASSIFICATION	always returns original value
WITHOUT_CLASSIFICATION	only 1 fragment left - revert the changes
WITHOUT_CLASSIFICATION	split is performed
WITHOUT_CLASSIFICATION	name already contains "." - unset on demand property
WITHOUT_CLASSIFICATION	not supported in JDOM
WITHOUT_CLASSIFICATION	not supported in JDOM
WITHOUT_CLASSIFICATION	The shared instance.
WITHOUT_CLASSIFICATION	Remember the static instance.
WITHOUT_CLASSIFICATION	Empty extension to limit the effect of suppressing the deprecation warning.
WITHOUT_CLASSIFICATION	GenAnnotationImpl
WITHOUT_CLASSIFICATION	Obtain or create and register package
WITHOUT_CLASSIFICATION	Initialize simple dependencies
WITHOUT_CLASSIFICATION	Create package meta-data objects
WITHOUT_CLASSIFICATION	Initialize created meta-data
WITHOUT_CLASSIFICATION	Mark meta-data to indicate it can't be changed
WITHOUT_CLASSIFICATION	Create classes and their features
WITHOUT_CLASSIFICATION	Create enums
WITHOUT_CLASSIFICATION	Initialize package
WITHOUT_CLASSIFICATION	Create type parameters
WITHOUT_CLASSIFICATION	Set bounds for type parameters
WITHOUT_CLASSIFICATION	Add supertypes to classes
WITHOUT_CLASSIFICATION	Initialize enums and add enum literals
WITHOUT_CLASSIFICATION	Create resource
WITHOUT_CLASSIFICATION	GenModelPackageImpl
WITHOUT_CLASSIFICATION	Does nothing
WITHOUT_CLASSIFICATION	Create an import manager for this compilation unit
WITHOUT_CLASSIFICATION	Create a code formatter for this compilation unit, if needed
WITHOUT_CLASSIFICATION	InputStream contents = new ByteArrayInputStream(bytes);
WITHOUT_CLASSIFICATION	Clear the import manager
WITHOUT_CLASSIFICATION	FB TBD different objects for ecore model!
WITHOUT_CLASSIFICATION	BasicEMap.this.removeEntry(index, j);
WITHOUT_CLASSIFICATION	FB TBD different objects for ecore model!
WITHOUT_CLASSIFICATION	(eType instanceof EDataType)
WITHOUT_CLASSIFICATION	order genPackages by putting firstGenPackage (if non-null) first
WITHOUT_CLASSIFICATION	generateColor();
WITHOUT_CLASSIFICATION	If the value is null, the key is a referenced object
WITHOUT_CLASSIFICATION	If we've found thing with type parameters, search them for a match.
WITHOUT_CLASSIFICATION	Set from {@link #isChildren children} if unset, and return value.
WITHOUT_CLASSIFICATION	&& eReverseFeature.isNavigable();
WITHOUT_CLASSIFICATION	GenFeatureImpl
WITHOUT_CLASSIFICATION	Returns whether this class implements any of the given features.
WITHOUT_CLASSIFICATION	GenEnumImpl
WITHOUT_CLASSIFICATION	GenModelFactoryImpl
WITHOUT_CLASSIFICATION	build mapping from classes to list of features that use them
WITHOUT_CLASSIFICATION	scan feature lists for those with multiple elements and return them
WITHOUT_CLASSIFICATION	data type
WITHOUT_CLASSIFICATION	GenTypeParameterImpl
WITHOUT_CLASSIFICATION	GenTypedElementImpl
WITHOUT_CLASSIFICATION	escaped unicode form
WITHOUT_CLASSIFICATION	EObject is handled by default case
WITHOUT_CLASSIFICATION	Go through class super types to catch any from other packages
WITHOUT_CLASSIFICATION	Go through class super types to catch constraints from other packages
WITHOUT_CLASSIFICATION	Create helpers to cache and supply information for unique naming
WITHOUT_CLASSIFICATION	Ignore this soft dependency when it's not satisfied.
WITHOUT_CLASSIFICATION	return getPrefixedName("EditPlugin");
WITHOUT_CLASSIFICATION	return getProviderPackageName() + "." + getEditPluginClassName();
WITHOUT_CLASSIFICATION	return getPrefixedName("EditorPlugin");
WITHOUT_CLASSIFICATION	return getPresentationPackageName() + "." + getEditorPluginClassName();
WITHOUT_CLASSIFICATION	Trick to import java.util. without warnings
WITHOUT_CLASSIFICATION	TBD
WITHOUT_CLASSIFICATION	TBD
WITHOUT_CLASSIFICATION	GenPackageImpl
WITHOUT_CLASSIFICATION	Don't care about plugin class; we can generate a model without one.
WITHOUT_CLASSIFICATION	genPackage can be a broken proxy
WITHOUT_CLASSIFICATION	protected JETEmitter extendedItemProviderEmitter = null;
WITHOUT_CLASSIFICATION	ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc
WITHOUT_CLASSIFICATION	GenModelImpl
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc
WITHOUT_CLASSIFICATION	ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc
WITHOUT_CLASSIFICATION	Calls <code>validateXXX</code> for the corresponding classifier of the model. <!-- begin-user-doc --> <!-- end-user-doc --> @generated
WITHOUT_CLASSIFICATION	)
WITHOUT_CLASSIFICATION	(
WITHOUT_CLASSIFICATION	Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result. <!-- begin-user-doc --> <!-- end-user-doc --> @return the first non-null result returned by a <code>caseXXX</code> call. @generated
WITHOUT_CLASSIFICATION	GenModelSwitch
WITHOUT_CLASSIFICATION	GenModelAdapterFactory
WITHOUT_CLASSIFICATION	The switch that delegates to the <code>createXXX</code> methods. <!-- begin-user-doc --> <!-- end-user-doc --> @generated
WITHOUT_CLASSIFICATION	GenModelValidator
WITHOUT_CLASSIFICATION	ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc
WITHOUT_CLASSIFICATION	ItemProvider/getText.override.javajetinc
WITHOUT_CLASSIFICATION	ItemProvider/addPropertyDescriptor.override.javajetinc
WITHOUT_CLASSIFICATION	ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc
WITHOUT_CLASSIFICATION	ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc
WITHOUT_CLASSIFICATION	ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc
WITHOUT_CLASSIFICATION	ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc
WITHOUT_CLASSIFICATION	Trick to import java.util. without warnings
WITHOUT_CLASSIFICATION	return eProperties;
WITHOUT_CLASSIFICATION	Trick to import java.util. without warnings
WITHOUT_CLASSIFICATION	Class/reflectiveDelegation.override.javajetinc
WITHOUT_CLASSIFICATION	Editor/addItemproviderFactories.override.javajetinc"
WITHOUT_CLASSIFICATION	ResourceFactoryClass/createResource.override.javajetinc
WITHOUT_CLASSIFICATION	Class/declaredFieldGenFeature.override.javajetinc
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	volatile
WITHOUT_CLASSIFICATION	Class/getGenFeature.annotations.insert.javajetinc
WITHOUT_CLASSIFICATION	Class/getGenFeature.javadoc.override.javajetinc
WITHOUT_CLASSIFICATION	Class/getGenFeature.override.javajetinc
WITHOUT_CLASSIFICATION	Class/getGenFeature.todo.override.javajetinc
WITHOUT_CLASSIFICATION	Class/basicGetGenFeature.annotations.insert.javajetinc
WITHOUT_CLASSIFICATION	Class/basicGetGenFeature.todo.override.javajetinc
WITHOUT_CLASSIFICATION	Class/basicGetGenFeature.override.javajetinc
WITHOUT_CLASSIFICATION	Class/basicSetGenFeature.annotations.insert.javajetinc
WITHOUT_CLASSIFICATION	Class/basicSetGenFeature.todo.override.javajetinc
WITHOUT_CLASSIFICATION	Class/basicSetGenFeature.override.javajetinc
WITHOUT_CLASSIFICATION	Class/setGenFeature.javadoc.override.javajetinc
WITHOUT_CLASSIFICATION	Class/setGenFeature.annotations.insert.javajetinc
WITHOUT_CLASSIFICATION	Class/setGenFeature.todo.override.javajetinc
WITHOUT_CLASSIFICATION	Class/setGenFeature.override.javajetinc
WITHOUT_CLASSIFICATION	Class/basicUnsetGenFeature.annotations.insert.javajetinc
WITHOUT_CLASSIFICATION	Class/basicUnsetGenFeature.todo.override.javajetinc
WITHOUT_CLASSIFICATION	Class.basicUnsetGenFeature.override.javajetinc
WITHOUT_CLASSIFICATION	Class/unsetGenFeature.javadoc.override.javajetinc
WITHOUT_CLASSIFICATION	Class/unsetGenFeature.annotations.insert.javajetinc
WITHOUT_CLASSIFICATION	Class/unsetGenFeature.todo.override.javajetinc
WITHOUT_CLASSIFICATION	Class/unsetGenFeature.override.javajetinc
WITHOUT_CLASSIFICATION	Class/isSetGenFeature.javadoc.override.javajetinc
WITHOUT_CLASSIFICATION	Class/isSetGenFeature.annotations.insert.javajetinc
WITHOUT_CLASSIFICATION	Class/isSetGenFeature.todo.override.javajetinc
WITHOUT_CLASSIFICATION	Class/isSetGenFeature.override.javajetinc
WITHOUT_CLASSIFICATION	Class/genOperation.javadoc.override.javajetinc
WITHOUT_CLASSIFICATION	Class/genOperation.annotations.insert.javajetinc
WITHOUT_CLASSIFICATION	Class/implementedGenOperation.todo.override.javajetinc
WITHOUT_CLASSIFICATION	Class/eUnset.override.javajetinc
WITHOUT_CLASSIFICATION	datatype
WITHOUT_CLASSIFICATION	Class/eIsSet.override.javajetinc
WITHOUT_CLASSIFICATION	TestCase/getGenFeature.annotations.insert.javajetinc
WITHOUT_CLASSIFICATION	TestCase/getGenFeature.todo.override.javajetinc
WITHOUT_CLASSIFICATION	TestCase/getGenFeature.override.javajetinc
WITHOUT_CLASSIFICATION	TestCase/setGenFeature.annotations.insert.javajetinc
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Trick to import java.util. without warnings
WITHOUT_CLASSIFICATION	TestCase/setGenFeature.todo.override.javajetinc
WITHOUT_CLASSIFICATION	TestCase/setGenFeature.override.javajetinc
WITHOUT_CLASSIFICATION	TestCase/unsetGenFeature.annotations.insert.javajetinc
WITHOUT_CLASSIFICATION	TestCase/unsetGenFeature.todo.override.javajetinc
WITHOUT_CLASSIFICATION	TestCase/unsetGenFeature.override.javajetinc
WITHOUT_CLASSIFICATION	TestCase/isSetGenFeature.annotations.insert.javajetinc
WITHOUT_CLASSIFICATION	TestCase/isSetGenFeature.todo.override.javajetinc
WITHOUT_CLASSIFICATION	TestCase/implementedGenFeature.override.javajetinc
WITHOUT_CLASSIFICATION	TestCase/genOperation.annotations.insert.javajetinc
WITHOUT_CLASSIFICATION	TestCase/implementedGenOperation.todo.override.javajetinc
WITHOUT_CLASSIFICATION	TestCase/implementedGenOperation.override.javajetinc
WITHOUT_CLASSIFICATION	Char buffer for HTML data
WITHOUT_CLASSIFICATION	Match close.
WITHOUT_CLASSIFICATION	Continue processing dynamically as normal.
WITHOUT_CLASSIFICATION	Ignore because we'll rethrow the original exception eventually.
WITHOUT_CLASSIFICATION	pure obfuscated genius!
WITHOUT_CLASSIFICATION	Read value until delimiter is found:
WITHOUT_CLASSIFICATION	Take care of the quoting here.
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	(
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Close NCSA like attributes "->"
WITHOUT_CLASSIFICATION	Close variable like attributes "%>"
WITHOUT_CLASSIFICATION	XMLesque Close tags
WITHOUT_CLASSIFICATION	Reached EOF:
WITHOUT_CLASSIFICATION	Ignore the version
WITHOUT_CLASSIFICATION	dumpNodeContents(node);
WITHOUT_CLASSIFICATION	dumpNodeContents(node);
WITHOUT_CLASSIFICATION	exception.printStackTrace();
WITHOUT_CLASSIFICATION	exception.printStackTrace();
WITHOUT_CLASSIFICATION	)
WITHOUT_CLASSIFICATION	/ PULL /
WITHOUT_CLASSIFICATION	PULL Name targetPackage.setName(sourcePackage.getName());
WITHOUT_CLASSIFICATION	/ PUSH /
WITHOUT_CLASSIFICATION	/ SWEEP /
WITHOUT_CLASSIFICATION	/ SORT /
WITHOUT_CLASSIFICATION	/ CLONE AND MAP /
WITHOUT_CLASSIFICATION	System.err.println("Warning: Cannot clone '" + sourceNode.getContents() + "'");
WITHOUT_CLASSIFICATION	apply target parent pattern first
WITHOUT_CLASSIFICATION	exception.printStackTrace();
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	/ HEADLESS INVOCATION /
WITHOUT_CLASSIFICATION	Ignore the exception.
WITHOUT_CLASSIFICATION	use new node from now on
WITHOUT_CLASSIFICATION	redo the markup since nodes changed now
WITHOUT_CLASSIFICATION	super is called on converted node
WITHOUT_CLASSIFICATION	Back up over the whitespace.
WITHOUT_CLASSIFICATION	target method is NOT addSuperInterface
WITHOUT_CLASSIFICATION	if the parent is not in target, there is no point on checking the child
WITHOUT_CLASSIFICATION	by default nodes are marked up
WITHOUT_CLASSIFICATION	ignore rules for nodes of different class
WITHOUT_CLASSIFICATION	)
WITHOUT_CLASSIFICATION	exception.printStackTrace();
WITHOUT_CLASSIFICATION	use new node from now on
WITHOUT_CLASSIFICATION	redo the markup since nodes changed now
WITHOUT_CLASSIFICATION	super is called on converted node
WITHOUT_CLASSIFICATION	Command line execution methods
WITHOUT_CLASSIFICATION	do not crash when control model is not set
WITHOUT_CLASSIFICATION	Subclasses may override this method
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)
WITHOUT_CLASSIFICATION	Empty
WITHOUT_CLASSIFICATION	Empty
WITHOUT_CLASSIFICATION	Empty
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Not instantiable
WITHOUT_CLASSIFICATION	replace or append
WITHOUT_CLASSIFICATION	enable tracking for nodes that have string content
WITHOUT_CLASSIFICATION	enable tracking for commented out nodes
WITHOUT_CLASSIFICATION	apply header
WITHOUT_CLASSIFICATION	skip whitespace, up to the end of the line
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	this should never happen
WITHOUT_CLASSIFICATION	revert all current edits for this node
WITHOUT_CLASSIFICATION	log the error, ignore the change and continue
WITHOUT_CLASSIFICATION	comment out all lines of the node itself, from firstLine to last line
WITHOUT_CLASSIFICATION	if there is anything after the node on the same line, insert line break
WITHOUT_CLASSIFICATION	reset text edits; since this node is processed successfully, there is no need to revert these changes
WITHOUT_CLASSIFICATION	this line has been commented out, return next line number
WITHOUT_CLASSIFICATION	return the line number of the start of the node
WITHOUT_CLASSIFICATION	handle the case when there is a replace edit that covers these lines
WITHOUT_CLASSIFICATION	skip all lines that replace edit covers
WITHOUT_CLASSIFICATION	should not happen, re-throw exception
WITHOUT_CLASSIFICATION	make sure that dummy edit is not in the tree
WITHOUT_CLASSIFICATION	assume length will grow by 10% (average line length is 20 characters)
WITHOUT_CLASSIFICATION	next position is checked as well
WITHOUT_CLASSIFICATION	char at currentPos is copied as well
WITHOUT_CLASSIFICATION	lastPos, currentPos points at the next chars that will be copied later
WITHOUT_CLASSIFICATION	copy last piece if any
WITHOUT_CLASSIFICATION	if needed, comment out a comma of the previous enum constant
WITHOUT_CLASSIFICATION	if there is anything before the node on the same line, create line break and comment out the first line of the node
WITHOUT_CLASSIFICATION	there is only whitespace on this line - no need for line break
WITHOUT_CLASSIFICATION	for enum constants, insert line break after the comma if there is anything after the comma
WITHOUT_CLASSIFICATION	if there is any content after the node on the same line, insert line break (to prevent commenting out extra content)
WITHOUT_CLASSIFICATION	if previous node is not commented out, but all the following nodes are, comment out a comma (constant separator)
WITHOUT_CLASSIFICATION	if previous node is not commented out, but all following are
WITHOUT_CLASSIFICATION	insert new line at the end of previous constant
WITHOUT_CLASSIFICATION	if comma is on a line by itself, comment it out but do not insert the line break
WITHOUT_CLASSIFICATION	delete variable fragment from old declaration
WITHOUT_CLASSIFICATION	do not insert line break if there is only whitespace after comma
WITHOUT_CLASSIFICATION	there is only whitespace after enum constant on the same line - do not add line breaks
WITHOUT_CLASSIFICATION	listRewrite.remove((ASTNode)modifier, null);
WITHOUT_CLASSIFICATION	add added super interfaces to the array
WITHOUT_CLASSIFICATION	this could be method body, for example
WITHOUT_CLASSIFICATION	for field declarations use variable declaration fragments instead
WITHOUT_CLASSIFICATION	for all nodes but some use default extended range
WITHOUT_CLASSIFICATION	remove all existing modifiers
WITHOUT_CLASSIFICATION	Fill 4 of value (byte) -87 Fill 7 of value (byte) 33 Fill 2 of value (byte) -87 Fill 9 of value (byte) 33 Fill 2 of value (byte) -19 Fill 4 of value (byte) 33 Fill 10 of value (byte) -87 Fill 18 of value (byte) 33 Fill 2 of value (byte) -87
WITHOUT_CLASSIFICATION	append extra dimensions if any
WITHOUT_CLASSIFICATION	Fill 4 of value (byte) -87 Fill 7 of value (byte) 33 Fill 2 of value (byte) -87 Fill 9 of value (byte) 33 Fill 2 of value (byte) -19 Fill 4 of value (byte) 33 Fill 10 of value (byte) -87 Fill 18 of value (byte) 33 Fill 2 of value (byte) -87
WITHOUT_CLASSIFICATION	create new modifiers and add to rewrite
WITHOUT_CLASSIFICATION	parse
WITHOUT_CLASSIFICATION	specify the exact parent of annotations
WITHOUT_CLASSIFICATION	set source
WITHOUT_CLASSIFICATION	create rewriter to record changes
WITHOUT_CLASSIFICATION	keep comments between nodes when removing or moving nodes
WITHOUT_CLASSIFICATION	set properties
WITHOUT_CLASSIFICATION	create JNode and set properties
WITHOUT_CLASSIFICATION	Set of options that we want to copy from the current definition
WITHOUT_CLASSIFICATION	Set of options that we want to control
WITHOUT_CLASSIFICATION	separate fields with an empty line
WITHOUT_CLASSIFICATION	make all enum constants to be on separate lines
WITHOUT_CLASSIFICATION	handle field declarations separately
WITHOUT_CLASSIFICATION	create new node and replace it all by original contents
WITHOUT_CLASSIFICATION	set rewriter on the new node
WITHOUT_CLASSIFICATION	if there are multiple variables in the same field declaration, create declaration with only 1 variable
WITHOUT_CLASSIFICATION	rewriter is required for set methods
WITHOUT_CLASSIFICATION	set comment and initializer as strings
WITHOUT_CLASSIFICATION	set annotation contents
WITHOUT_CLASSIFICATION	skip nodes in hierarchy that can not be converted to JNode (i.e. VariableDeclarationFragment)
WITHOUT_CLASSIFICATION	get rewriter
WITHOUT_CLASSIFICATION	update the wrapped object map
WITHOUT_CLASSIFICATION	range to look for comments
WITHOUT_CLASSIFICATION	get the end position of the range for the previous node
WITHOUT_CLASSIFICATION	previousNode.getStartPosition() + previousNode.getLength();
WITHOUT_CLASSIFICATION	if there is an element with end position <= rangeEndPos
WITHOUT_CLASSIFICATION	the previous element must have end position <= rangeEndPos
WITHOUT_CLASSIFICATION	else - there is a comment that ends exactly at rangeEndPos
WITHOUT_CLASSIFICATION	if there is a comment with start position > rangeStartPos
WITHOUT_CLASSIFICATION	else - there is a comment that starts exactly at rangeStartPos
WITHOUT_CLASSIFICATION	find start position of farthest preceding comment
WITHOUT_CLASSIFICATION	check if there is just whitespace between position and start of the comment
WITHOUT_CLASSIFICATION	extend to include the comment at the same line as the position
WITHOUT_CLASSIFICATION	extend range backward
WITHOUT_CLASSIFICATION	extend range forward
WITHOUT_CLASSIFICATION	add trailing whitespace
WITHOUT_CLASSIFICATION	increments the position to add the white spaces
WITHOUT_CLASSIFICATION	for all nodes but some use default extended range
WITHOUT_CLASSIFICATION	include line comments following end of the nodes into the range
WITHOUT_CLASSIFICATION	add leading comments
WITHOUT_CLASSIFICATION	add trailing comments if necessary
WITHOUT_CLASSIFICATION	insert new declaration before this one
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	append extra dimensions if any
WITHOUT_CLASSIFICATION	default implementation does nothing
WITHOUT_CLASSIFICATION	disable commenting out
WITHOUT_CLASSIFICATION	enable commenting out
WITHOUT_CLASSIFICATION	mark the node as moved if node has been removed
WITHOUT_CLASSIFICATION	if are dealing with original, not cloned node
WITHOUT_CLASSIFICATION	mark the node to be removed
WITHOUT_CLASSIFICATION	assume that the node is being moved (to allow insertion after)
WITHOUT_CLASSIFICATION	remove the node
WITHOUT_CLASSIFICATION	insert new values
WITHOUT_CLASSIFICATION	stringValue not null, nodeValue is null
WITHOUT_CLASSIFICATION	always returns original value
WITHOUT_CLASSIFICATION	append extra dimensions since they are not stored in Type object
WITHOUT_CLASSIFICATION	create map of field names to fields
WITHOUT_CLASSIFICATION	move all children to the enum, converting some fields to constants
WITHOUT_CLASSIFICATION	remove type, insert enum
WITHOUT_CLASSIFICATION	convert only public static final fields
WITHOUT_CLASSIFICATION	convert only fields of the same type as parent
WITHOUT_CLASSIFICATION	set arguments and body
WITHOUT_CLASSIFICATION	move annotations
WITHOUT_CLASSIFICATION	unable to set arguments or body
WITHOUT_CLASSIFICATION	update the wrapped object
WITHOUT_CLASSIFICATION	move annotations
WITHOUT_CLASSIFICATION	convert enum constants and add to list of converted constants
WITHOUT_CLASSIFICATION	move the node
WITHOUT_CLASSIFICATION	insert nodeToInsert after targetNode
WITHOUT_CLASSIFICATION	replace type by enum
WITHOUT_CLASSIFICATION	create field declaration with 1 variable declaration fragment
WITHOUT_CLASSIFICATION	set the type to create
WITHOUT_CLASSIFICATION	set arguments
WITHOUT_CLASSIFICATION	replace some arguments by another field names (constants)
WITHOUT_CLASSIFICATION	update last field that is used
WITHOUT_CLASSIFICATION	set the arguments to the constructor
WITHOUT_CLASSIFICATION	set the body
WITHOUT_CLASSIFICATION	set the whole initializer
WITHOUT_CLASSIFICATION	return the whole declaration contents (not just variableDeclarationFragment)
WITHOUT_CLASSIFICATION	check number of fragments
WITHOUT_CLASSIFICATION	create a copy of declaration
WITHOUT_CLASSIFICATION	new declaration will not have fragments until performSplit() is called
WITHOUT_CLASSIFICATION	set rewritten node to be the original
WITHOUT_CLASSIFICATION	perform split if there is more than 1 fragment
WITHOUT_CLASSIFICATION	set javadoc
WITHOUT_CLASSIFICATION	set initializer
WITHOUT_CLASSIFICATION	set annotations contents
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	generateColor();
WITHOUT_CLASSIFICATION	exception.printStackTrace();
WITHOUT_CLASSIFICATION	container specification group
WITHOUT_CLASSIFICATION	New Template Container Label
WITHOUT_CLASSIFICATION	New Template Container Label
WITHOUT_CLASSIFICATION	New Template Container Entryfield
WITHOUT_CLASSIFICATION	jetNature.setTemplateContainers(newTemplateContainers);
WITHOUT_CLASSIFICATION	jetNature.setJavaSourceContainer(newJavaSourceContainer);
WITHOUT_CLASSIFICATION	will point at the character after 0 to 3 octal digits
WITHOUT_CLASSIFICATION	@since 2.4
WITHOUT_CLASSIFICATION	the for loop's condition finds the separator
WITHOUT_CLASSIFICATION	Assume that we aren't running.
WITHOUT_CLASSIFICATION	Assume that it's not available.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	System.err.println("Logged throwable: --------------------"); throwable.printStackTrace();
WITHOUT_CLASSIFICATION	System.err.println("Logged throwable: --------------------"); throwable.printStackTrace();
WITHOUT_CLASSIFICATION	Trim off the segments corresponding to the package nesting.
WITHOUT_CLASSIFICATION	For an archive URI, check for the path in the archive.
WITHOUT_CLASSIFICATION	Just print an error message.
WITHOUT_CLASSIFICATION	Assume the class is not available.
WITHOUT_CLASSIFICATION	Just return the default.
WITHOUT_CLASSIFICATION	Ignore the exception and return the original URI.
WITHOUT_CLASSIFICATION	Continue with the unresolved URI.
WITHOUT_CLASSIFICATION	Return the original URI.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	If we can open an input stream, then the path is there, and we have a good URL.
WITHOUT_CLASSIFICATION	If we didn't find the path in the usual place nor in the archive...
WITHOUT_CLASSIFICATION	Continue processing if the file doesn't exist so that we try create a new empty one.
WITHOUT_CLASSIFICATION	This is just a marker interface.
WITHOUT_CLASSIFICATION	This is just a marker interface.
WITHOUT_CLASSIFICATION	Javadoc copied from base class.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	@deprecated
WITHOUT_CLASSIFICATION	@deprecated
WITHOUT_CLASSIFICATION	Javadoc copied from base class.
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Subclasses may override
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Create a title bar.
WITHOUT_CLASSIFICATION	When the pane or any child gains focus, notify the workbench.
WITHOUT_CLASSIFICATION	Only do this once.
WITHOUT_CLASSIFICATION	Title.
WITHOUT_CLASSIFICATION	Action bar.
WITHOUT_CLASSIFICATION	System bar.
WITHOUT_CLASSIFICATION	Define gradient (blue to widget background color)
WITHOUT_CLASSIFICATION	colorMap.put(CLR_GRAD_START, clr1);
WITHOUT_CLASSIFICATION	colorMap.put(CLR_GRAD_START, clr1);
WITHOUT_CLASSIFICATION	Preload.
WITHOUT_CLASSIFICATION	Preload.
WITHOUT_CLASSIFICATION	was the details button pressed?
WITHOUT_CLASSIFICATION	create OK and Details buttons
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Empty block
WITHOUT_CLASSIFICATION	Empty block
WITHOUT_CLASSIFICATION	Empty block
WITHOUT_CLASSIFICATION	create a composite with standard margins and spacing
WITHOUT_CLASSIFICATION	Create a label if there are no children to force a smaller layout
WITHOUT_CLASSIFICATION	If it was not a warning or an diagnostic then return the diagnostic image
WITHOUT_CLASSIFICATION	Closing the detail area
WITHOUT_CLASSIFICATION	Opening the detail area
WITHOUT_CLASSIFICATION	Only one example per wizard
WITHOUT_CLASSIFICATION	null -> relative URI reference
WITHOUT_CLASSIFICATION	Applicable only to a hierarchical URI.
WITHOUT_CLASSIFICATION	empty last segment -> trailing separator
WITHOUT_CLASSIFICATION	Identifies a file-type absolute URI.
WITHOUT_CLASSIFICATION	Separators for parsing a URI string.
WITHOUT_CLASSIFICATION	Characters to use in escaping.
WITHOUT_CLASSIFICATION	| ucschar | escaped
WITHOUT_CLASSIFICATION	Static initializer for archiveSchemes.
WITHOUT_CLASSIFICATION	Returns the lower half bitmask for the given ASCII character.
WITHOUT_CLASSIFICATION	Returns the upper half bitmask for the given ACSII character.
WITHOUT_CLASSIFICATION	Debugging method: converts the given long to a string of binary digits.
WITHOUT_CLASSIFICATION	String-parsing implementation.
WITHOUT_CLASSIFICATION	&& uri.charAt(i) == FRAGMENT_SEPARATOR (implied)
WITHOUT_CLASSIFICATION	Private constructor for use of platform factory methods.
WITHOUT_CLASSIFICATION	Private constructor for use of static factory methods.
WITHOUT_CLASSIFICATION	iri = iri || containsNonASCII(authority);
WITHOUT_CLASSIFICATION	iri = iri || containsNonASCII(device);
WITHOUT_CLASSIFICATION	iri = iri || containsNonASCII(query);
WITHOUT_CLASSIFICATION	iri = iri || containsNonASCII(fragment);
WITHOUT_CLASSIFICATION	this.iri = iri;
WITHOUT_CLASSIFICATION	return value == null || validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);
WITHOUT_CLASSIFICATION	Ignore the exception and return false.
WITHOUT_CLASSIFICATION	return value != null && validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);
WITHOUT_CLASSIFICATION	return value == null || validate(value, URIC_HI, URIC_LO, true, true);
WITHOUT_CLASSIFICATION	<p>A valid fragment may be null or contain any allowed URI characters.
WITHOUT_CLASSIFICATION	note: hierarchical -> authority != null
WITHOUT_CLASSIFICATION	note: device != null -> hierarchical
WITHOUT_CLASSIFICATION	note: absolutePath -> hierarchical
WITHOUT_CLASSIFICATION	note: query != null -> hierarchical
WITHOUT_CLASSIFICATION	an absolute URI needs no resolving
WITHOUT_CLASSIFICATION	note: isRelative() -> hierarchical
WITHOUT_CLASSIFICATION	no authority: use base's
WITHOUT_CLASSIFICATION	no device: use base's
WITHOUT_CLASSIFICATION	else keep device, path, and query
WITHOUT_CLASSIFICATION	else absolute path: keep it and query
WITHOUT_CLASSIFICATION	else keep authority, device, path, and query
WITHOUT_CLASSIFICATION	return a correctly sized result
WITHOUT_CLASSIFICATION	skip empty segments and self references; push everything else
WITHOUT_CLASSIFICATION	different scheme: need complete, absolute URI
WITHOUT_CLASSIFICATION	matching authorities and no device or path removal
WITHOUT_CLASSIFICATION	matching devices and no path removal
WITHOUT_CLASSIFICATION	user rejects a relative path: keep absolute or no path
WITHOUT_CLASSIFICATION	current document reference: keep no path or query
WITHOUT_CLASSIFICATION	no paths: keep query only
WITHOUT_CLASSIFICATION	keep query and select relative or absolute path based on length
WITHOUT_CLASSIFICATION	user demands a relative path or the absolute path is longer
WITHOUT_CLASSIFICATION	else keep shorter absolute path
WITHOUT_CLASSIFICATION	treat an empty base path as the root absolute path
WITHOUT_CLASSIFICATION	drop last segment from base, as in resolving
WITHOUT_CLASSIFICATION	index of first segment that is different between endPath and startPath
WITHOUT_CLASSIFICATION	return a correctly sized result
WITHOUT_CLASSIFICATION	return a correctly sized result
WITHOUT_CLASSIFICATION	Empty statement.
WITHOUT_CLASSIFICATION	use a stack to accumulate segments
WITHOUT_CLASSIFICATION	absolute path or no path -> absolute path
WITHOUT_CLASSIFICATION	note: segments.length > 0 -> hierarchical
WITHOUT_CLASSIFICATION	note: segments.length > 0 -> hierarchical
WITHOUT_CLASSIFICATION	Get what's left of the segments after trimming the prefix.
WITHOUT_CLASSIFICATION	no validation needed since all components are from existing URIs
WITHOUT_CLASSIFICATION	Otherwise, the path needs only the remaining segments.
WITHOUT_CLASSIFICATION	Returns the int value of the given hex digit.
WITHOUT_CLASSIFICATION	Fill 6 of value (byte) -87 Fill 2 of value (byte) 33 Fill 10 of value (byte) -87 Fill 62 of value (byte) 33 Fill 2 of value (byte) -87 Fill 6 of value (byte) 33 Fill 10 of value (byte) -87 Fill 11 of value (byte) 33
WITHOUT_CLASSIFICATION	If this is an {@link #isIRI IRI}, converts it to a strict ASCII URI, using the procedure described in Section 3.1 of the <a href="http:www.w3.org/International/iri-edit/draft-duerst-iri-09.txt">IRI Draft RFC</a>. Otherwise, this URI, itself, is returned. This unused code is included for possible future use...
WITHOUT_CLASSIFICATION	Continue with the established base URL.
WITHOUT_CLASSIFICATION	Ignore the exception since we will throw one when all else fails.
WITHOUT_CLASSIFICATION	We'll rethrow the original exception, not this one.
WITHOUT_CLASSIFICATION	Ignore this since we will throw an exception when all else fails.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from source.
WITHOUT_CLASSIFICATION	Suppress default constructor for noninstantiability.
WITHOUT_CLASSIFICATION	Fill 6 of value (byte) -87 Fill 2 of value (byte) 33 Fill 10 of value (byte) -87 Fill 62 of value (byte) 33 Fill 2 of value (byte) -87 Fill 6 of value (byte) 33 Fill 10 of value (byte) -87 Fill 11 of value (byte) 33
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Subclasses may override
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	EParameter
WITHOUT_CLASSIFICATION	Subclasses may overrride
WITHOUT_CLASSIFICATION	WizardContainer variables
WITHOUT_CLASSIFICATION	Sorting only the genModels
WITHOUT_CLASSIFICATION	EOperation
WITHOUT_CLASSIFICATION	This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList
WITHOUT_CLASSIFICATION	This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList
WITHOUT_CLASSIFICATION	Fill 230 of value (byte) 33 Fill 38 of value (byte) -19 Fill 10 of value (byte) 33 Fill 39 of value (byte) -19 Fill 9 of value (byte) 33
WITHOUT_CLASSIFICATION	ETypedElement
WITHOUT_CLASSIFICATION	ETypeParameter
WITHOUT_CLASSIFICATION	EDataType
WITHOUT_CLASSIFICATION	EcoreFactory
WITHOUT_CLASSIFICATION	EAnnotation
WITHOUT_CLASSIFICATION	EGenericType
WITHOUT_CLASSIFICATION	EcorePackage
WITHOUT_CLASSIFICATION	Obtain or create and register package
WITHOUT_CLASSIFICATION	Initialize simple dependencies
WITHOUT_CLASSIFICATION	Create package meta-data objects
WITHOUT_CLASSIFICATION	Initialize created meta-data
WITHOUT_CLASSIFICATION	Mark meta-data to indicate it can't be changed
WITHOUT_CLASSIFICATION	Create classes and their features
WITHOUT_CLASSIFICATION	Create enums
WITHOUT_CLASSIFICATION	Initialize package
WITHOUT_CLASSIFICATION	Obtain other dependent packages
WITHOUT_CLASSIFICATION	Create type parameters
WITHOUT_CLASSIFICATION	Set bounds for type parameters
WITHOUT_CLASSIFICATION	Add supertypes to classes
WITHOUT_CLASSIFICATION	Initialize enums and add enum literals
WITHOUT_CLASSIFICATION	Create resource
WITHOUT_CLASSIFICATION	ListChange
WITHOUT_CLASSIFICATION	FeatureMapEntry
WITHOUT_CLASSIFICATION	FeatureChange
WITHOUT_CLASSIFICATION	ChangeDescription
WITHOUT_CLASSIFICATION	ChangeFactory
WITHOUT_CLASSIFICATION	ChangePackage
WITHOUT_CLASSIFICATION	ResourceChange
WITHOUT_CLASSIFICATION	ChangePackageImpl
WITHOUT_CLASSIFICATION	EObjectToChangesMapEntryImpl
WITHOUT_CLASSIFICATION	ListChangeImpl
WITHOUT_CLASSIFICATION	cache result
WITHOUT_CLASSIFICATION	cache result
WITHOUT_CLASSIFICATION	ResourceChangeImpl
WITHOUT_CLASSIFICATION	feature is instance of EAttribute
WITHOUT_CLASSIFICATION	cached already?
WITHOUT_CLASSIFICATION	FeatureChangeImpl
WITHOUT_CLASSIFICATION	FeatureChangeImpl
WITHOUT_CLASSIFICATION	Isolating the new objects
WITHOUT_CLASSIFICATION	getObjectsToDetachGen() should be changed only if required
WITHOUT_CLASSIFICATION	caches the list value.
WITHOUT_CLASSIFICATION	ChangeDescriptionImpl
WITHOUT_CLASSIFICATION	ChangeFactoryImpl
WITHOUT_CLASSIFICATION	Initialize created meta-data
WITHOUT_CLASSIFICATION	Register package validator
WITHOUT_CLASSIFICATION	Create classes and their features
WITHOUT_CLASSIFICATION	Initialize package
WITHOUT_CLASSIFICATION	Set bounds for type parameters
WITHOUT_CLASSIFICATION	Add supertypes to classes
WITHOUT_CLASSIFICATION	Initialize classes and features; add operations and parameters
WITHOUT_CLASSIFICATION	Create resource
WITHOUT_CLASSIFICATION	The switch that delegates to the <code>createXXX</code> methods. <!-- begin-user-doc --> <!-- end-user-doc --> @generated
WITHOUT_CLASSIFICATION	@deprecated
WITHOUT_CLASSIFICATION	ChangeSwitch
WITHOUT_CLASSIFICATION	ChangeAdapterFactory
WITHOUT_CLASSIFICATION	Make sure that all the old values are cached.
WITHOUT_CLASSIFICATION	case Notification.REMOVE:
WITHOUT_CLASSIFICATION	case Notification.REMOVE_MANY:
WITHOUT_CLASSIFICATION	Continue with no instanceClass.
WITHOUT_CLASSIFICATION	EGenericTypeImpl
WITHOUT_CLASSIFICATION	EParameterImpl
WITHOUT_CLASSIFICATION	Create data types
WITHOUT_CLASSIFICATION	Initialize data types
WITHOUT_CLASSIFICATION	return eContainer;
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	ETypeParameterImpl
WITHOUT_CLASSIFICATION	EStringToStringMapEntryImpl
WITHOUT_CLASSIFICATION	Don't really unset it.
WITHOUT_CLASSIFICATION	create containment one.
WITHOUT_CLASSIFICATION	getList(entry).clear();
WITHOUT_CLASSIFICATION	ETypedElementImpl
WITHOUT_CLASSIFICATION	Keep trying until all else has failed.
WITHOUT_CLASSIFICATION	Continue to try a different approach.
WITHOUT_CLASSIFICATION	Continue to try a different approach.
WITHOUT_CLASSIFICATION	Keep trying until all else false.
WITHOUT_CLASSIFICATION	EcoreFactoryImpl
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	backward compatibility with old generated overrides
WITHOUT_CLASSIFICATION	backward compatibility with old generated overrides
WITHOUT_CLASSIFICATION	Subclasses MUST override this function
WITHOUT_CLASSIFICATION	return eVirtualIndexBits[offset];
WITHOUT_CLASSIFICATION	eVirtualIndexBits[offset] = newIndexBits;
WITHOUT_CLASSIFICATION	Continue to compute the offset.
WITHOUT_CLASSIFICATION	return eVirtualValues;
WITHOUT_CLASSIFICATION	eVirtualValues = newValues;
WITHOUT_CLASSIFICATION	return minimumCapacity;
WITHOUT_CLASSIFICATION	Ignore exceptions.
WITHOUT_CLASSIFICATION	Continue and return null.
WITHOUT_CLASSIFICATION	Ensure that cached ePackage is forgotten.
WITHOUT_CLASSIFICATION	EAnnotationImpl
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Don't really unset it.
WITHOUT_CLASSIFICATION	Force this to be initialized as well.
WITHOUT_CLASSIFICATION	)
WITHOUT_CLASSIFICATION	(
WITHOUT_CLASSIFICATION	We can also optimize single valued reverse.
WITHOUT_CLASSIFICATION	all implementations of Java 1.5 should support AES
WITHOUT_CLASSIFICATION	generate the key
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Continue and try to close.
WITHOUT_CLASSIFICATION	Fill 3078 of value (byte) 33 Fill 156 of value (byte) -19 Fill 4 of value (byte) 33 Fill 90 of value (byte) -19 Fill 6 of value (byte) 33 Fill 22 of value (byte) -19 Fill 2 of value (byte) 33 Fill 6 of value (byte) -19 Fill 2 of value (byte) 33 Fill 38 of value (byte) -19 Fill 2 of value (byte) 33 Fill 6 of value (byte) -19 Fill 2 of value (byte) 33 Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 3078 of value (byte) 33 Fill 156 of value (byte) -19 Fill 4 of value (byte) 33 Fill 90 of value (byte) -19 Fill 6 of value (byte) 33 Fill 22 of value (byte) -19 Fill 2 of value (byte) 33 Fill 6 of value (byte) -19 Fill 2 of value (byte) 33 Fill 38 of value (byte) -19 Fill 2 of value (byte) 33 Fill 6 of value (byte) -19 Fill 2 of value (byte) 33 Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	...
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Javadoc copied from interface.
WITHOUT_CLASSIFICATION	Ignore exceptions.
WITHOUT_CLASSIFICATION	Ignore exceptions.
WITHOUT_CLASSIFICATION	encrypt the input
WITHOUT_CLASSIFICATION	this is the key we will use to encrypt the data
WITHOUT_CLASSIFICATION	create the IV for the password generation algorithm
WITHOUT_CLASSIFICATION	generate the IV for encryption
WITHOUT_CLASSIFICATION	turn the password into an AES key
WITHOUT_CLASSIFICATION	now create the encryption cipher
WITHOUT_CLASSIFICATION	Read the header of the encrypted file.
WITHOUT_CLASSIFICATION	Decrypt the key bytes
WITHOUT_CLASSIFICATION	Create the key from the key bytes
WITHOUT_CLASSIFICATION	If we haven't yet generated a key, just use this one
WITHOUT_CLASSIFICATION	now create the decrypt cipher
WITHOUT_CLASSIFICATION	Ignore any exceptions and assume the class isn't available.
WITHOUT_CLASSIFICATION	Ignore any exceptions and assume the class isn't available.
WITHOUT_CLASSIFICATION	No methods added.
WITHOUT_CLASSIFICATION	ECLIPSE-DEPEND-BEGIN
WITHOUT_CLASSIFICATION	ECLIPSE-DEPEND-BEGIN
WITHOUT_CLASSIFICATION	ECLIPSE-DEPEND-END
WITHOUT_CLASSIFICATION	ECLIPSE-DEPEND-END
WITHOUT_CLASSIFICATION	We can't update any properties via just a URL connection.
WITHOUT_CLASSIFICATION	Ignore the bound if the value is too big.
WITHOUT_CLASSIFICATION	Ignore the bound if the value is too big.
WITHOUT_CLASSIFICATION	Ignore features from the first super type.
WITHOUT_CLASSIFICATION	Match against every other operation but this one.
WITHOUT_CLASSIFICATION	Calls <code>validateXXX</code> for the corresponding classifier of the model. <!-- begin-user-doc --> <!-- end-user-doc --> @generated
WITHOUT_CLASSIFICATION	The CipherOutputStream shoudln't close the underlying stream
WITHOUT_CLASSIFICATION	List subList(EStructuralFeature feature, int from, int to); EList list(EStructuralFeature feature);
WITHOUT_CLASSIFICATION	Ensure that the class loader for this class will be used downstream.
WITHOUT_CLASSIFICATION	We do not want to diagnose any errors that have already been diagnosed by a super type. Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates.
WITHOUT_CLASSIFICATION	EcoreSwitch
WITHOUT_CLASSIFICATION	A document root can have multiple ID attributes because there can be multiple global element or attribute declarations of type ID and these will be the ID in the complex types that reference them, i.e., they aren't really the ID of the document root.
WITHOUT_CLASSIFICATION	For performance, skip matching all the features of the first super type.
WITHOUT_CLASSIFICATION	Don't bother complaining about things with no name, since there are constraints for that problem.
WITHOUT_CLASSIFICATION	Drop the _ separators and normalize the case.
WITHOUT_CLASSIFICATION	Fill 31 of value (byte) -19 Fill 2 of value (byte) 33 Fill 53 of value (byte) -19
WITHOUT_CLASSIFICATION	Match against every other operation but this one.
WITHOUT_CLASSIFICATION	Produce different levels of diagnostic depending whether the names are exactly the same or only matching.
WITHOUT_CLASSIFICATION	There is no match if the types are different and they don't each specify the same non-null instance class name.
WITHOUT_CLASSIFICATION	Iterate over all the operations but skip all the operations in the first super.
WITHOUT_CLASSIFICATION	We do not want to diagnose any error that have already been diagnosed by a super type.
WITHOUT_CLASSIFICATION	Maintain a list of classifiers for looking up conflicts.
WITHOUT_CLASSIFICATION	Look for duplicates among the generic super types.
WITHOUT_CLASSIFICATION	Ignore it if it isn't a class. Not being a class is diagnosed for the generic type itself.
WITHOUT_CLASSIFICATION	The string must contain inappropriate whitespace, so find the index for the first difference.
WITHOUT_CLASSIFICATION	Don't complain about the literals if they are the same as the names and the names collide.
WITHOUT_CLASSIFICATION	Can't have both a classifier and a type parameter.
WITHOUT_CLASSIFICATION	The referencing generic type must be contained to be in scope
WITHOUT_CLASSIFICATION	The type parameter must be in scope and must not be a forward reference.
WITHOUT_CLASSIFICATION	When used as a generic super type, there must be a classifier that refers to a class.
WITHOUT_CLASSIFICATION	The type arguments of a generic super type must not be a wildcard.
WITHOUT_CLASSIFICATION	Wildcards are only allowed in type arguments.
WITHOUT_CLASSIFICATION	The classifier of an attribute's generic type must be a data type.
WITHOUT_CLASSIFICATION	Can't have both an upper and lower bound.
WITHOUT_CLASSIFICATION	Can't have a classifier or a type parameter as well as bounds.
WITHOUT_CLASSIFICATION	Can only have bounds when used as a type argument.
WITHOUT_CLASSIFICATION	Can't have type arguments unless there is a classifier
WITHOUT_CLASSIFICATION	Have no arguments when they are allowed is only a warning.
WITHOUT_CLASSIFICATION	Incorrect number of type arguments.
WITHOUT_CLASSIFICATION	Check if the bound specifies a classifier...
WITHOUT_CLASSIFICATION	If the type also specifies a classifier...
WITHOUT_CLASSIFICATION	If the are the same then it is bounded properly...
WITHOUT_CLASSIFICATION	We test their relationship either via them both being classes...
WITHOUT_CLASSIFICATION	namespace context
WITHOUT_CLASSIFICATION	Determine if there is a bounding generic super type.
WITHOUT_CLASSIFICATION	Set up the substitutions of any type parameters this class has with respect to the type arguments for them.
WITHOUT_CLASSIFICATION	Test if there are type parameters that might require substitution.
WITHOUT_CLASSIFICATION	If none of the generic super types are bounded, then we've failed.
WITHOUT_CLASSIFICATION	If neither approach finds a contradiction, we must assume they are okay and then check all the arguments.
WITHOUT_CLASSIFICATION	If there is a type parameter, one of its bounds must be bounded by the bound.
WITHOUT_CLASSIFICATION	If there is a upper bound, the bound must bound it.
WITHOUT_CLASSIFICATION	Failing all those cases, there must be an lower bound that bounds it.
WITHOUT_CLASSIFICATION	If the generic type is a wildcard, it can't be bounded by another wildcard.
WITHOUT_CLASSIFICATION	If there is an lower bound, the type argument must bound it.
WITHOUT_CLASSIFICATION	If the type also specifies a classifier...
WITHOUT_CLASSIFICATION	If they are the same classifier, they are of course equal.
WITHOUT_CLASSIFICATION	Consider the instance type names they wrap to see if they are non-null and equal.
WITHOUT_CLASSIFICATION	Consider the instance type names they wrap to see if they are non-null and equal.
WITHOUT_CLASSIFICATION	I.e., the classifiers are considered equal if they wrap the same non-null type.
WITHOUT_CLASSIFICATION	I.e., the classifiers are considered equal if they wrap the same non-null type.
WITHOUT_CLASSIFICATION	If the generic type is a different wildcard, it doesn't match.
WITHOUT_CLASSIFICATION	Reverse the test.
WITHOUT_CLASSIFICATION	If they are the same instance they are equal.
WITHOUT_CLASSIFICATION	If one is null (but the other is not) then they are not equal.
WITHOUT_CLASSIFICATION	Consider the classifiers in a special way to take into account the fact they they often acts as wrappers for instance type names and that two classifiers that wrap the same instance type name should be considered equal.
WITHOUT_CLASSIFICATION	If they both aren't null...
WITHOUT_CLASSIFICATION	If one is null (but the other is not) then they can't be equal.
WITHOUT_CLASSIFICATION	The arguments, type parameters, lower bounds and upper bounds must be equal type arguments.
WITHOUT_CLASSIFICATION	Ignore leading whitespace
WITHOUT_CLASSIFICATION	Ignore trailing whitespace
WITHOUT_CLASSIFICATION	EcoreValidator
WITHOUT_CLASSIFICATION	Public
WITHOUT_CLASSIFICATION	--entryCursor;
WITHOUT_CLASSIFICATION	lastCursor = -1; prepared = 0;
WITHOUT_CLASSIFICATION	public List subList(int from, int to) { return featureMap.subList(getEStructuralFeature(), from, to); }
WITHOUT_CLASSIFICATION	Don't cache this one as it will cause leaks because to dynamic demand created document roots and demand created EClasses.
WITHOUT_CLASSIFICATION	For the extended meta data to be created.
WITHOUT_CLASSIFICATION	We can also optimize single valued reverse.
WITHOUT_CLASSIFICATION	This forces the feature ids to be assigned.
WITHOUT_CLASSIFICATION	We can use == for EObjects and EnumLiterals.
WITHOUT_CLASSIFICATION	The switch that delegates to the <code>createXXX</code> methods. <!-- begin-user-doc --> <!-- end-user-doc --> @generated
WITHOUT_CLASSIFICATION	We can use == for EObjects and EnumLiterals.
WITHOUT_CLASSIFICATION	This should be the same as the logic in ResourceImpl.getEObject(String).
WITHOUT_CLASSIFICATION	EcoreAdapterFactory
WITHOUT_CLASSIFICATION	We need to be careful that the proxy may be resolved while we are attaching this adapter. We need to avoid attaching the adapter during the resolve and also attaching it again as we walk the eContents() later. Checking here avoids having to check during addAdapter.
WITHOUT_CLASSIFICATION	public List subList(EStructuralFeature feature, int from, int to) { return null; }
WITHOUT_CLASSIFICATION	Validate now since the call we make after will skip validating.
WITHOUT_CLASSIFICATION	Index should be -1.
WITHOUT_CLASSIFICATION	Index should be -1.
WITHOUT_CLASSIFICATION	This may be called directly on an EObject for the case of a containment.
WITHOUT_CLASSIFICATION	demandDocumentRoot(ePackage);
WITHOUT_CLASSIFICATION	For demand created created packages we allow the list of classifiers to grow so this should handle those additional instances.
WITHOUT_CLASSIFICATION	No new methods.
WITHOUT_CLASSIFICATION	Undo the preparation for previous and continue.
WITHOUT_CLASSIFICATION	Undo the preparation for next and continue.
WITHOUT_CLASSIFICATION	Validate now since the call we make after will skip validating.
WITHOUT_CLASSIFICATION	Index should be -1.
WITHOUT_CLASSIFICATION	Index should be -1.
WITHOUT_CLASSIFICATION	This may be called directly on an EObject for the case of a containment.
WITHOUT_CLASSIFICATION	List theList = new java.util.ArrayList(); protected List delegateList() { return theList; }
WITHOUT_CLASSIFICATION	Suppress default constructor for noninstantiability. private EcoreUtil() { }
WITHOUT_CLASSIFICATION	Failure to resolve is ignored.
WITHOUT_CLASSIFICATION	The loop resolves the cross references by visiting them.
WITHOUT_CLASSIFICATION	We don't create an iterator stack until the root mapping itself has been returned by next once. After that the stack should be non-empty and the top iterator should yield true for hasNext.
WITHOUT_CLASSIFICATION	If we are on the special resource set iterator, and there isn't really a next object at this point...
WITHOUT_CLASSIFICATION	Skip the dummy null object and test again.
WITHOUT_CLASSIFICATION	{
WITHOUT_CLASSIFICATION	{
WITHOUT_CLASSIFICATION	If the first object is null, the second object must be null.
WITHOUT_CLASSIFICATION	We know the first object isn't null, so if the second one is, it can't be equal.
WITHOUT_CLASSIFICATION	Then eObject2 must be that previous match.
WITHOUT_CLASSIFICATION	If eObject2 has been compared already...
WITHOUT_CLASSIFICATION	Then eObject1 must be that match.
WITHOUT_CLASSIFICATION	Neither eObject1 nor eObject2 have been compared yet.
WITHOUT_CLASSIFICATION	If eObject1 and eObject2 are the same instance...
WITHOUT_CLASSIFICATION	Match them and return true.
WITHOUT_CLASSIFICATION	If they don't have the same class, they can't be equal.
WITHOUT_CLASSIFICATION	Assume from now on that they match.
WITHOUT_CLASSIFICATION	Check all the values.
WITHOUT_CLASSIFICATION	If the first value is null, the second value must be null.
WITHOUT_CLASSIFICATION	Since the first value isn't null, if the second one is, they aren't equal.
WITHOUT_CLASSIFICATION	If this is a feature map...
WITHOUT_CLASSIFICATION	The feature maps must be equal.
WITHOUT_CLASSIFICATION	The values must be Java equal.
WITHOUT_CLASSIFICATION	If they don't have the same size, the feature maps aren't equal.
WITHOUT_CLASSIFICATION	Compare entries in order.
WITHOUT_CLASSIFICATION	There is no reason they aren't equals.
WITHOUT_CLASSIFICATION	If the referenced EObjects aren't equal, the feature maps aren't equal.
WITHOUT_CLASSIFICATION	If the values aren't Java equal, the feature maps aren't equal.
WITHOUT_CLASSIFICATION	EqualityHelper
WITHOUT_CLASSIFICATION	If it's a proxy, use that.
WITHOUT_CLASSIFICATION	If it is in a resource, form the URI relative to that resource.
WITHOUT_CLASSIFICATION	Keys that will be used to record visibility for the accessors.
WITHOUT_CLASSIFICATION	Value used to suppress visibility.
WITHOUT_CLASSIFICATION	Handle the last byte at the end.
WITHOUT_CLASSIFICATION	Generate a 48 bit node identifier; This is an alternative to the IEEE 802 host address, which is not available in Java.
WITHOUT_CLASSIFICATION	Set the most significant bit of the first octet to 1 so as to distinguish it from IEEE node addresses
WITHOUT_CLASSIFICATION	The node identifier is already in network byte order, so there is no need to do any byte order reversing.
WITHOUT_CLASSIFICATION	clockseq_hi
WITHOUT_CLASSIFICATION	clockseq_low
WITHOUT_CLASSIFICATION	The system clock has been rewound so the clock sequence must be incremented to ensure that a duplicate UUID is not generated.
WITHOUT_CLASSIFICATION	Wait so that the clock can catch up and the time adjustment won't overflow.
WITHOUT_CLASSIFICATION	We just woke up.
WITHOUT_CLASSIFICATION	We just woke up.
WITHOUT_CLASSIFICATION	Place the time into the byte array in network byte order.
WITHOUT_CLASSIFICATION	time_low
WITHOUT_CLASSIFICATION	time_mid
WITHOUT_CLASSIFICATION	time_hi
WITHOUT_CLASSIFICATION	Ignore if we can't freeze.
WITHOUT_CLASSIFICATION	Javadoc copied from base class.
WITHOUT_CLASSIFICATION	Remember the static instance.
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)
WITHOUT_CLASSIFICATION	fall through
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) 33 Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	fall through...
WITHOUT_CLASSIFICATION	Deresolve all the URI against the current base URI.
WITHOUT_CLASSIFICATION	System.err.println("add = ["+newString+"]");
WITHOUT_CLASSIFICATION	If there is a temporary file...
WITHOUT_CLASSIFICATION	This is the cheapest and most common case.
WITHOUT_CLASSIFICATION	The first case is the most common case. It is slightly cheaper to call add without an index since an index will be range checked.
WITHOUT_CLASSIFICATION	This case can only happen if we are reset to a mark and we've got lots of XMLNS attributes to write.
WITHOUT_CLASSIFICATION	If we can't create one, too bad.
WITHOUT_CLASSIFICATION	SAXXMIHandler
WITHOUT_CLASSIFICATION	EMOF.isReadOnly = !Ecore.changeable
WITHOUT_CLASSIFICATION	Ecore.changeable = !EMOF.isReadOnly
WITHOUT_CLASSIFICATION	Ignore it if we've already set generic versions of these
WITHOUT_CLASSIFICATION	Ignore whatever was set before.
WITHOUT_CLASSIFICATION	external schema locations should only be processed once, i.e. in the subsequent parse there is no need to process those again.
WITHOUT_CLASSIFICATION	throws SAXException
WITHOUT_CLASSIFICATION	The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler.
WITHOUT_CLASSIFICATION	Overwrite DefaultHandler methods
WITHOUT_CLASSIFICATION	Implement LexicalHandler methods
WITHOUT_CLASSIFICATION	Implement DTDHandler methods
WITHOUT_CLASSIFICATION	Implement EntityResolver methods
WITHOUT_CLASSIFICATION	And find the one that holds this proxy.
WITHOUT_CLASSIFICATION	Try to resolve the proxy locally.
WITHOUT_CLASSIFICATION	We won't need to process this again later.
WITHOUT_CLASSIFICATION	Compute the holder of the proxy
WITHOUT_CLASSIFICATION	If the proxy holder can hold many values, it may contain a duplicate that resulted when the other end was processed as an IDREF and hence did both sides of the bidirectional relation.
WITHOUT_CLASSIFICATION	Move the resolved object to the right place, remove the proxy, and we're done.
WITHOUT_CLASSIFICATION	If the resolved object doesn't contain a reference to the proxy holder as it should.
WITHOUT_CLASSIFICATION	The proxy needs to be replaced in a way that updates both ends of the reference.
WITHOUT_CLASSIFICATION	We won't need to process this again later.
WITHOUT_CLASSIFICATION	At least set the references that we were able to resolve, if any.
WITHOUT_CLASSIFICATION	Pretend there is an xmlns="" because we really need to ensure that the null prefix isn't used to denote something other than the null namespace.
WITHOUT_CLASSIFICATION	EATM temporary for debug purposes only.
WITHOUT_CLASSIFICATION	check for simple feature
WITHOUT_CLASSIFICATION	Set up a deferred extent so the document root we create definitely will not be added to the resource.
WITHOUT_CLASSIFICATION	Remove the document root's information from the top of the stacks.
WITHOUT_CLASSIFICATION	Process the new root object if any.
WITHOUT_CLASSIFICATION	There's an EObject on the stack already.
WITHOUT_CLASSIFICATION	Excise the new root from the document root.
WITHOUT_CLASSIFICATION	handler.ignorableWhitespace(ch, start, length);
WITHOUT_CLASSIFICATION	Excise the new root from the document root.
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	The new root object is the actual new object since all sign of the document root will now have disappeared.
WITHOUT_CLASSIFICATION	Ignore a whitespace only text entry at the beginning.
WITHOUT_CLASSIFICATION	Handle namespaces
WITHOUT_CLASSIFICATION	If processSchemaLocations is specified, treat these as XML Schema locations
WITHOUT_CLASSIFICATION	If externalSchemaLocations are specified, process these ones as well
WITHOUT_CLASSIFICATION	Ensure that anything can be handled, even if it's not recognized.
WITHOUT_CLASSIFICATION	This happens when processing an element with simple content that has elements content even though it shouldn't.
WITHOUT_CLASSIFICATION	Try to get a general-content feature. Use a pattern that's not possible any other way.
WITHOUT_CLASSIFICATION	This is for the case for a local unqualified element that has been bound.
WITHOUT_CLASSIFICATION	This handles the case of a substitution group.
WITHOUT_CLASSIFICATION	This check is redundant -- see handleFeature method (EL)
WITHOUT_CLASSIFICATION	processing unknown feature with xsi:type (xmi:type)
WITHOUT_CLASSIFICATION	This only works for old globally registered things.
WITHOUT_CLASSIFICATION	Ignore it if we can't find it since we'll fail anyway.
WITHOUT_CLASSIFICATION	Continue with a different approach.
WITHOUT_CLASSIFICATION	We use null here instead of "" because an attribute without a prefix is considered to have the null target namespace...
WITHOUT_CLASSIFICATION	Create a proxy in the correct way and pop it.
WITHOUT_CLASSIFICATION	Test for a same document reference that would usually be handled as an IDREF.
WITHOUT_CLASSIFICATION	EATM Demand create metadata.
WITHOUT_CLASSIFICATION	Javadoc copied from interface
WITHOUT_CLASSIFICATION	add the key/value pairs to the output string
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ensure that anything can be handled, even if it's not recognized.
WITHOUT_CLASSIFICATION	xmlResource.getResourceSet().getResources().addAll(generatedResources);
WITHOUT_CLASSIFICATION	use the pool to retrieve the parser
WITHOUT_CLASSIFICATION	use the pool to retrieve the parser
WITHOUT_CLASSIFICATION	set features and properties
WITHOUT_CLASSIFICATION	set lexical handler
WITHOUT_CLASSIFICATION	set lexical handler
WITHOUT_CLASSIFICATION	release parser back to the pool
WITHOUT_CLASSIFICATION	release parser back to the pool
WITHOUT_CLASSIFICATION	Don't read encoding - rely on XML parser to provide one via Locator2
WITHOUT_CLASSIFICATION	record node's attributes
WITHOUT_CLASSIFICATION	Include only non-duplicate namespace declarations.
WITHOUT_CLASSIFICATION	record namespaces in scope
WITHOUT_CLASSIFICATION	traverse element node
WITHOUT_CLASSIFICATION	class AttributesProxy
WITHOUT_CLASSIFICATION	XMLLoad
WITHOUT_CLASSIFICATION	Ignore close since we don't want to let the parser close the stream when it's done.
WITHOUT_CLASSIFICATION	Ignore since we expect this to fail because of early termination and if there is some other kind of failure, then we'll simply not be able to match the content type.
WITHOUT_CLASSIFICATION	handler.skippedEntity(name);
WITHOUT_CLASSIFICATION	handler.resolveEntity(publicId, systemId);
WITHOUT_CLASSIFICATION	Skips '-'
WITHOUT_CLASSIFICATION	We need to be careful that we don't end up requiring the no namespace package just because the feature is unqualified.
WITHOUT_CLASSIFICATION	handler.notationDecl(name, publicId, systemId);
WITHOUT_CLASSIFICATION	handler.unparsedEntityDecl(name, publicId, systemId, notationName);
WITHOUT_CLASSIFICATION	SAXXMLHandler
WITHOUT_CLASSIFICATION	true if seen xmlns="" declaration
WITHOUT_CLASSIFICATION	There really must be a package.
WITHOUT_CLASSIFICATION	There really must be a package.
WITHOUT_CLASSIFICATION	We must have a qualifier for an attribute that needs qualified.
WITHOUT_CLASSIFICATION	for any content prefix to URI mapping could be in namespace context
WITHOUT_CLASSIFICATION	Once we see a lookup of an element in the null namespace, we should behave as if there has been an explicit xmlns=""
WITHOUT_CLASSIFICATION	Only if the feature kind is unspecified should we return a match. Otherwise, we might return an attribute feature when an element is required, or vice versa. This also can be controlled by XMLResource.OPTION_LAX_FEATURE_PROCESSING.
WITHOUT_CLASSIFICATION	Sort and eliminate duplicates caused by having both a regular package and a demanded package for the same nsURI.
WITHOUT_CLASSIFICATION	If we are substituting an EAttribute for an EReference...
WITHOUT_CLASSIFICATION	Create an simple any type wrapper for the attribute value and use that with the EReference.
WITHOUT_CLASSIFICATION	Make sure that the list will appear to be set to be empty.
WITHOUT_CLASSIFICATION	xmlns="" declaration Example #1: <a><q-name>q</q-name><b xmlns="abc"/></a> Example #2: <a xmlns="abc"><b xmlns=""/><c xmlns="abc2"/></a> Example #3: <a xmlns:a="abc"><b xmlns:a="abc2"/></a>
WITHOUT_CLASSIFICATION	since xmlns="" is default declaration, remove ""->empty_URI mapping
WITHOUT_CLASSIFICATION	record default ns declaration as duplicate if seen QName (#1) or seen xmlns="" (#2)
WITHOUT_CLASSIFICATION	record duplicate declaration for a given prefix (#3)
WITHOUT_CLASSIFICATION	recording a first declaration for a given prefix
WITHOUT_CLASSIFICATION	extend the array, if necessary
WITHOUT_CLASSIFICATION	push context
WITHOUT_CLASSIFICATION	resize array, if needed
WITHOUT_CLASSIFICATION	bind prefix to uri in current context
WITHOUT_CLASSIFICATION	find prefix in current context
WITHOUT_CLASSIFICATION	prefix not found
WITHOUT_CLASSIFICATION	find uri in current context
WITHOUT_CLASSIFICATION	uri not found
WITHOUT_CLASSIFICATION	getDeclaredPrefixAt(int):String
WITHOUT_CLASSIFICATION	Convert attribute values: & to &amp; < to &lt; " to &quot; \t to &#x9; \n to &#xA; \r to &#xD;
WITHOUT_CLASSIFICATION	Look for a matching element in the specified packages if there are any.
WITHOUT_CLASSIFICATION	Look for a substitution group feature in the feature's containing class' containing package.
WITHOUT_CLASSIFICATION	Look for a substitution group feature in the classifier's containing package.
WITHOUT_CLASSIFICATION	Look for a substitution group feature in the additional packages.
WITHOUT_CLASSIFICATION	Process the super types if that's been specified.
WITHOUT_CLASSIFICATION	XMIHandler
WITHOUT_CLASSIFICATION	xsi:nil xsi:type xmlns:xsi xsi:schemaLocation xsi:noNamespaceSchemaLocation
WITHOUT_CLASSIFICATION	set serialization options
WITHOUT_CLASSIFICATION	If we can't create a temp file then we have to ignore the option.
WITHOUT_CLASSIFICATION	DOM serialization
WITHOUT_CLASSIFICATION	caching turned on by the user
WITHOUT_CLASSIFICATION	no caching
WITHOUT_CLASSIFICATION	If there is no field, then we can't do this.
WITHOUT_CLASSIFICATION	Entities aren't supported for DOM.
WITHOUT_CLASSIFICATION	this is a root element
WITHOUT_CLASSIFICATION	Process XML attributes
WITHOUT_CLASSIFICATION	it's intentional to keep going
WITHOUT_CLASSIFICATION	It's intentional to keep going.
WITHOUT_CLASSIFICATION	Process XML elements
WITHOUT_CLASSIFICATION	for performance reasons saveNil and saveElement are not used
WITHOUT_CLASSIFICATION	value[outputPos];
WITHOUT_CLASSIFICATION	Every codepoint is supported!
WITHOUT_CLASSIFICATION	Produce the supplemental character as an entity
WITHOUT_CLASSIFICATION	Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:
WITHOUT_CLASSIFICATION	value[outputPos];
WITHOUT_CLASSIFICATION	Go back and add all the XMLNS stuff.
WITHOUT_CLASSIFICATION	First try to see if this package's implementation class has an eInstance.
WITHOUT_CLASSIFICATION	Check if it's an anonymous type.
WITHOUT_CLASSIFICATION	We only get here if we should do this.
WITHOUT_CLASSIFICATION	2^N 2^N-1
WITHOUT_CLASSIFICATION	Every codepoint is supported!
WITHOUT_CLASSIFICATION	Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:
WITHOUT_CLASSIFICATION	Convert element values: & to &amp; < to &lt; " to &quot; \n to line separator \r should be escaped to &xD;
WITHOUT_CLASSIFICATION	We not sure the encoding supports this code point, so we write it as a character entity reference.
WITHOUT_CLASSIFICATION	Convert: \n to line separator
WITHOUT_CLASSIFICATION	continue with default processing
WITHOUT_CLASSIFICATION	Fill 7 of value (byte) -19 Fill 3 of value (byte) 33 Fill 4 of value (byte) -19 Fill 2 of value (byte) 33 Fill 6 of value (byte) -19 Fill 4 of value (byte) 33 Fill 13 of value (byte) -19 Fill 5 of value (byte) 33 Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	write doctype
WITHOUT_CLASSIFICATION	Avoid a function call...
WITHOUT_CLASSIFICATION	create dummy documentElement
WITHOUT_CLASSIFICATION	no property
WITHOUT_CLASSIFICATION	no property
WITHOUT_CLASSIFICATION	boolean not
WITHOUT_CLASSIFICATION	ownedProperty???
WITHOUT_CLASSIFICATION	We will use an xmi:Extension element for these
WITHOUT_CLASSIFICATION	set parser features and properties
WITHOUT_CLASSIFICATION	Obtain or create and register package
WITHOUT_CLASSIFICATION	Initialize simple dependencies
WITHOUT_CLASSIFICATION	Create package meta-data objects
WITHOUT_CLASSIFICATION	Create package meta-data objects
WITHOUT_CLASSIFICATION	Initialize created meta-data
WITHOUT_CLASSIFICATION	Register package validator
WITHOUT_CLASSIFICATION	Register package validator
WITHOUT_CLASSIFICATION	Mark meta-data to indicate it can't be changed
WITHOUT_CLASSIFICATION	Create classes and their features
WITHOUT_CLASSIFICATION	Create classes and their features
WITHOUT_CLASSIFICATION	Create enums
WITHOUT_CLASSIFICATION	Initialize package
WITHOUT_CLASSIFICATION	Obtain other dependent packages
WITHOUT_CLASSIFICATION	Create type parameters
WITHOUT_CLASSIFICATION	Set bounds for type parameters
WITHOUT_CLASSIFICATION	Add supertypes to classes
WITHOUT_CLASSIFICATION	Initialize enums and add enum literals
WITHOUT_CLASSIFICATION	Create resource
WITHOUT_CLASSIFICATION	Create data types
WITHOUT_CLASSIFICATION	Initialize data types
WITHOUT_CLASSIFICATION	Ensure correct indentation for a top level attribute. elementNames.add("mark");
WITHOUT_CLASSIFICATION	xmi:id xmi:XMI xmi:type xmi:version xmlns:xmi
WITHOUT_CLASSIFICATION	no property no property no property
WITHOUT_CLASSIFICATION	no property no property
WITHOUT_CLASSIFICATION	Interpret the body of a nested ownedComment as a comment-type and assign it as the EAnnotation.source of the parent.
WITHOUT_CLASSIFICATION	EAnnotations denoting specific EMOF elements are serialized as their EMOF elements. Other EAnnotations are serialized as xmi:Extensions.
WITHOUT_CLASSIFICATION	register default options
WITHOUT_CLASSIFICATION	Create an XML processor that is aware of XML Schema specified. @param schemaURIs - a URI {@link org.eclipse.common.util.URI} which point to an XML Schema
WITHOUT_CLASSIFICATION	Assume the class isn't available.
WITHOUT_CLASSIFICATION	XMLNamespaceFactory
WITHOUT_CLASSIFICATION	DocumentRoot
WITHOUT_CLASSIFICATION	XMLNamespacePackage
WITHOUT_CLASSIFICATION	SpaceType
WITHOUT_CLASSIFICATION	http:/org/eclipse/emf/ecore/util/ExtendedMetaData
WITHOUT_CLASSIFICATION	XMLNamespacePackageImpl
WITHOUT_CLASSIFICATION	XMLNamespaceDocumentRootImpl
WITHOUT_CLASSIFICATION	XMLNamespaceFactoryImpl
WITHOUT_CLASSIFICATION	XMLNamespaceValidator
WITHOUT_CLASSIFICATION	AnyType
WITHOUT_CLASSIFICATION	SimpleAnyType
WITHOUT_CLASSIFICATION	ProcessingInstructionType
WITHOUT_CLASSIFICATION	XMLTypeFactory
WITHOUT_CLASSIFICATION	XMLTypePackage
WITHOUT_CLASSIFICATION	Initialize package
WITHOUT_CLASSIFICATION	Obtain other dependent packages
WITHOUT_CLASSIFICATION	Create type parameters
WITHOUT_CLASSIFICATION	Add supertypes to classes
WITHOUT_CLASSIFICATION	Initialize classes and features; add operations and parameters
WITHOUT_CLASSIFICATION	Create resource
WITHOUT_CLASSIFICATION	Create data types
WITHOUT_CLASSIFICATION	Initialize data types
WITHOUT_CLASSIFICATION	{
WITHOUT_CLASSIFICATION	Create annotations http:www.w3.org/XML/1998/namespace
WITHOUT_CLASSIFICATION	Don't create anything.
WITHOUT_CLASSIFICATION	XMLTypePackageImpl
WITHOUT_CLASSIFICATION	AnyTypeImpl
WITHOUT_CLASSIFICATION	ProcessingInstructionTypeImpl
WITHOUT_CLASSIFICATION	do not validate on load. Check validity using Diagnostician.
WITHOUT_CLASSIFICATION	do not validate on load. Check validity using Diagnostician.
WITHOUT_CLASSIFICATION	XMLTypeFactoryImpl
WITHOUT_CLASSIFICATION	DocumentRootImpl
WITHOUT_CLASSIFICATION	SimpleAnyTypeImpl
WITHOUT_CLASSIFICATION	System.err.println("Starts at "+index);
WITHOUT_CLASSIFICATION	System.err.println("Starts at "+index);
WITHOUT_CLASSIFICATION	================================================================
WITHOUT_CLASSIFICATION	================================================================
WITHOUT_CLASSIFICATION	Skips a white space.
WITHOUT_CLASSIFICATION	Skips characters between '#' and a line end.
WITHOUT_CLASSIFICATION	Strips an escaped white space.
WITHOUT_CLASSIFICATION	Other escaped character.
WITHOUT_CLASSIFICATION	As is.
WITHOUT_CLASSIFICATION	ret.next is null.
WITHOUT_CLASSIFICATION	{n}
WITHOUT_CLASSIFICATION	X{2,6} -> XX(X(X(XX?)?)?)?
WITHOUT_CLASSIFICATION	Token.CLOSURE
WITHOUT_CLASSIFICATION	System.err.println("DEBUG: matchEnd="+matchEnd);
WITHOUT_CLASSIFICATION	System.err.println("DEBUG: matchEnd="+matchEnd);
WITHOUT_CLASSIFICATION	The pattern has only fixed string. The engine uses Boyer-Moore.
WITHOUT_CLASSIFICATION	System.err.println("DEBUG: fixed-only: "+this.fixedString);
WITHOUT_CLASSIFICATION	System.err.println("DEBUG: fixed-only: "+this.fixedString);
WITHOUT_CLASSIFICATION	System.err.println("DEBUG: fixed-only: "+this.fixedString);
WITHOUT_CLASSIFICATION	The pattern contains a fixed string. The engine checks with Boyer-Moore whether the text contains the fixed string or not. If not, it return with false.
WITHOUT_CLASSIFICATION	The pattern contains a fixed string. The engine checks with Boyer-Moore whether the text contains the fixed string or not. If not, it return with false.
WITHOUT_CLASSIFICATION	System.err.println("Non-match in fixed-string search.");
WITHOUT_CLASSIFICATION	System.err.println("Non-match in fixed-string search.");
WITHOUT_CLASSIFICATION	System.err.println("Non-match in fixed-string search.");
WITHOUT_CLASSIFICATION	Checks whether the expression starts with ".".
WITHOUT_CLASSIFICATION	Checks whether the expression starts with ".".
WITHOUT_CLASSIFICATION	Checks whether the expression starts with ".".
WITHOUT_CLASSIFICATION	Optimization against the first character.
WITHOUT_CLASSIFICATION	Optimization against the first character.
WITHOUT_CLASSIFICATION	System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);
WITHOUT_CLASSIFICATION	System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);
WITHOUT_CLASSIFICATION	Straightforward matching.
WITHOUT_CLASSIFICATION	Straightforward matching.
WITHOUT_CLASSIFICATION	Internal use only. The @ always matches line beginnings.
WITHOUT_CLASSIFICATION	Internal use only. The @ always matches line beginnings.
WITHOUT_CLASSIFICATION	switch anchor type
WITHOUT_CLASSIFICATION	switch anchor type
WITHOUT_CLASSIFICATION	Saves current position to avoid zero-width repeats.
WITHOUT_CLASSIFICATION	Saves current position to avoid zero-width repeats.
WITHOUT_CLASSIFICATION	Optimization against the first character.
WITHOUT_CLASSIFICATION	System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);
WITHOUT_CLASSIFICATION	Straightforward matching.
WITHOUT_CLASSIFICATION	switch anchor type
WITHOUT_CLASSIFICATION	Saves current position to avoid zero-width repeats.
WITHOUT_CLASSIFICATION	"w"
WITHOUT_CLASSIFICATION	Op.CHAR
WITHOUT_CLASSIFICATION	+this.fixedString
WITHOUT_CLASSIFICATION	This pattern has a fixed string of which length is more than one.
WITHOUT_CLASSIFICATION	Cf Mn Mc
WITHOUT_CLASSIFICATION	"u"
WITHOUT_CLASSIFICATION	public ParseException(String mes) { this(mes, -1); }
WITHOUT_CLASSIFICATION	L L L L L N N N Mc
WITHOUT_CLASSIFICATION	Single character [a-zA-Z] [^a-zA-Z] ^ $ ... literal String X X? X? X?? X|Y ( and ) \1 \2 ... (?=...) (?!...) (?<=...) (?<!...) (?>...) (?ims-ims:...) (?(..)yes|no)
WITHOUT_CLASSIFICATION	Legacy word characters
WITHOUT_CLASSIFICATION	for UNION
WITHOUT_CLASSIFICATION	System.err.println("Creates UnionOp");
WITHOUT_CLASSIFICATION	ModifierOp
WITHOUT_CLASSIFICATION	for CLOSURE, QUESTION
WITHOUT_CLASSIFICATION	for UNIoN
WITHOUT_CLASSIFICATION	STRING
WITHOUT_CLASSIFICATION	RANGE, NRANGE
WITHOUT_CLASSIFICATION	case 0x0b: ret = "\\v"; break;
WITHOUT_CLASSIFICATION	for RANGE or NRANGE
WITHOUT_CLASSIFICATION	System.err.println("Token#addRange(): "+start+" "+end);
WITHOUT_CLASSIFICATION	System.err.println("Do sorting: "+this.ranges.length);
WITHOUT_CLASSIFICATION	Index of writing point Index of processing point
WITHOUT_CLASSIFICATION	System.err.println("Token#substractRanges(): Entry: "+this.ranges.length+", "+tok.ranges.length);
WITHOUT_CLASSIFICATION	Not overlapped src: o-----o sub: o-----o res: o-----o Reuse sub
WITHOUT_CLASSIFICATION	src: o--------o sub: o------------o res: empty Reuse sub
WITHOUT_CLASSIFICATION	src: o--------o sub: o----o res: o-----o Reuse src(=res)
WITHOUT_CLASSIFICATION	src: o--------o sub: o----o res: o-----o Reuse sub
WITHOUT_CLASSIFICATION	Not overlapped src: o-----o sub: o----o
WITHOUT_CLASSIFICATION	this.ranges is sorted and compacted.
WITHOUT_CLASSIFICATION	Not overlapped src1: o-----o src2: o-----o res: empty Reuse src2
WITHOUT_CLASSIFICATION	Overlapped src1: o--------o src2: o----o src2: o----o src2: o----o src2: o------------o
WITHOUT_CLASSIFICATION	src1: o--------o src2: o------------o res: o--------o Reuse src2
WITHOUT_CLASSIFICATION	src1: o--------o src2: o----o res: o--o Reuse the rest of src1
WITHOUT_CLASSIFICATION	src1: o--------o src2: o----o res: o----o Reuse the rest of src1
WITHOUT_CLASSIFICATION	Not overlapped src1: o-----o src2: o----o
WITHOUT_CLASSIFICATION	32 is the number of bits in `int'.
WITHOUT_CLASSIFICATION	s&0x1f : 0-31
WITHOUT_CLASSIFICATION	'|' '' '+' '?' '(' ')' '.' '[' '\' '^' '$' '(?:' '(?=' '(?!' '(?<=' '(?<!' '(?>' '(?[' '[:' in a character class '(?#' '(?' [\-,a-z,A-Z] '(?(' '-[' in a character class
WITHOUT_CLASSIFICATION	this.setLocale(Locale.getDefault());
WITHOUT_CLASSIFICATION	this.setLocale(locale);
WITHOUT_CLASSIFICATION	In a character class, this.chardata has one character, that is to say, a pair of surrogates is composed and stored to this.chardata.
WITHOUT_CLASSIFICATION	Through down
WITHOUT_CLASSIFICATION	Options
WITHOUT_CLASSIFICATION	conditional this.offsets points the next of '('.
WITHOUT_CLASSIFICATION	'|'
WITHOUT_CLASSIFICATION	tok = Token.createConcat(tok, this.parseFactor());
WITHOUT_CLASSIFICATION	----------------------------------------------------------------
WITHOUT_CLASSIFICATION	----------------------------------------------------------------
WITHOUT_CLASSIFICATION	')'
WITHOUT_CLASSIFICATION	')'
WITHOUT_CLASSIFICATION	')'
WITHOUT_CLASSIFICATION	X+ -> XX
WITHOUT_CLASSIFICATION	X? -> X|
WITHOUT_CLASSIFICATION	Skips ')'
WITHOUT_CLASSIFICATION	Skips ')'
WITHOUT_CLASSIFICATION	this.offset points the next of '('
WITHOUT_CLASSIFICATION	Parses a condition.
WITHOUT_CLASSIFICATION	Points '('.
WITHOUT_CLASSIFICATION	Parses yes/no-patterns.
WITHOUT_CLASSIFICATION	this.offset points the next of '?'. modifiers ::= [imsw] ('-' [imsw])? ':'
WITHOUT_CLASSIFICATION	'-' or ':'?
WITHOUT_CLASSIFICATION	':'?
WITHOUT_CLASSIFICATION	such as (?-i)
WITHOUT_CLASSIFICATION	Must be in 0x0040-0x005f
WITHOUT_CLASSIFICATION	through down
WITHOUT_CLASSIFICATION	this.offset -> next of '{'
WITHOUT_CLASSIFICATION	{min,max}
WITHOUT_CLASSIFICATION	assume {min,}
WITHOUT_CLASSIFICATION	System.err.println("CLOSURE: "+min+", "+max);
WITHOUT_CLASSIFICATION	'(?:' '(?(' (?modifiers ... )
WITHOUT_CLASSIFICATION	Skips '.'
WITHOUT_CLASSIFICATION	handle category escape
WITHOUT_CLASSIFICATION	'['
WITHOUT_CLASSIFICATION	'^'
WITHOUT_CLASSIFICATION	Literal char . XY X|Y|Z X [a-zA-Z] etc. [^a-zA-Z] etc. (X) or (?:X) ^ $ \b \B \< \> \A \Z \z ? +? strings back references (?=...) (?!...) (?<=...) (?<!...) (?>...) (?ims-ims:...) (?(...)yes|no)
WITHOUT_CLASSIFICATION	if not shorthands... Here is no '-'.
WITHOUT_CLASSIFICATION	tok.dumpRanges();
WITHOUT_CLASSIFICATION	It is not a bug.
WITHOUT_CLASSIFICATION	for CLOSURE
WITHOUT_CLASSIFICATION	for CLOSURE
WITHOUT_CLASSIFICATION	for CLOSURE
WITHOUT_CLASSIFICATION	for STRING
WITHOUT_CLASSIFICATION	for STRING
WITHOUT_CLASSIFICATION	Really?
WITHOUT_CLASSIFICATION	Really?
WITHOUT_CLASSIFICATION	infinity
WITHOUT_CLASSIFICATION	When this.child.getMaxLength() < 0, this returns minus value
WITHOUT_CLASSIFICATION	a|b|c -> FC_TERMINAL a|.|c -> FC_ANY a|b| -> FC_CONTINUE
WITHOUT_CLASSIFICATION	We can not optimize.
WITHOUT_CLASSIFICATION	We can not optimize.
WITHOUT_CLASSIFICATION	------------------------------------------------------
WITHOUT_CLASSIFICATION	blockNames in UNICODE 3.1 that supported by XML Schema REC
WITHOUT_CLASSIFICATION	0000..007F;
WITHOUT_CLASSIFICATION	0080..00FF;
WITHOUT_CLASSIFICATION	0100..017F;
WITHOUT_CLASSIFICATION	0180..024F;
WITHOUT_CLASSIFICATION	0250..02AF;
WITHOUT_CLASSIFICATION	02B0..02FF;
WITHOUT_CLASSIFICATION	0300..036F;
WITHOUT_CLASSIFICATION	0370..03FF;
WITHOUT_CLASSIFICATION	0400..04FF;
WITHOUT_CLASSIFICATION	0530..058F;
WITHOUT_CLASSIFICATION	0600..06FF;
WITHOUT_CLASSIFICATION	0700..074F;
WITHOUT_CLASSIFICATION	0780..07BF;
WITHOUT_CLASSIFICATION	0900..097F;
WITHOUT_CLASSIFICATION	0980..09FF;
WITHOUT_CLASSIFICATION	0A80..0AFF;
WITHOUT_CLASSIFICATION	0B00..0B7F;
WITHOUT_CLASSIFICATION	0B80..0BFF;
WITHOUT_CLASSIFICATION	0C00..0C7F;
WITHOUT_CLASSIFICATION	0C80..0CFF;
WITHOUT_CLASSIFICATION	0D80..0DFF;
WITHOUT_CLASSIFICATION	0E00..0E7F;
WITHOUT_CLASSIFICATION	0E80..0EFF;
WITHOUT_CLASSIFICATION	0F00..0FFF;
WITHOUT_CLASSIFICATION	1000..109F;
WITHOUT_CLASSIFICATION	1100..11FF;
WITHOUT_CLASSIFICATION	1200..137F;
WITHOUT_CLASSIFICATION	13A0..13FF;
WITHOUT_CLASSIFICATION	1400..167F;
WITHOUT_CLASSIFICATION	1680..169F;
WITHOUT_CLASSIFICATION	1780..17FF;
WITHOUT_CLASSIFICATION	1800..18AF;
WITHOUT_CLASSIFICATION	1E00..1EFF;
WITHOUT_CLASSIFICATION	1F00..1FFF;
WITHOUT_CLASSIFICATION	2070..209F;
WITHOUT_CLASSIFICATION	20A0..20CF;
WITHOUT_CLASSIFICATION	20D0..20FF;
WITHOUT_CLASSIFICATION	2100..214F;
WITHOUT_CLASSIFICATION	2150..218F;
WITHOUT_CLASSIFICATION	2200..22FF;
WITHOUT_CLASSIFICATION	2300..23FF;
WITHOUT_CLASSIFICATION	2400..243F;
WITHOUT_CLASSIFICATION	2440..245F;
WITHOUT_CLASSIFICATION	2460..24FF;
WITHOUT_CLASSIFICATION	2580..259F;
WITHOUT_CLASSIFICATION	25A0..25FF;
WITHOUT_CLASSIFICATION	2600..26FF;
WITHOUT_CLASSIFICATION	2700..27BF;
WITHOUT_CLASSIFICATION	2800..28FF;
WITHOUT_CLASSIFICATION	2E80..2EFF;
WITHOUT_CLASSIFICATION	2F00..2FDF;
WITHOUT_CLASSIFICATION	3000..303F;
WITHOUT_CLASSIFICATION	3040..309F;
WITHOUT_CLASSIFICATION	30A0..30FF;
WITHOUT_CLASSIFICATION	3100..312F;
WITHOUT_CLASSIFICATION	3130..318F;
WITHOUT_CLASSIFICATION	31A0..31BF;
WITHOUT_CLASSIFICATION	3200..32FF;
WITHOUT_CLASSIFICATION	3300..33FF;
WITHOUT_CLASSIFICATION	3400..4DB5;
WITHOUT_CLASSIFICATION	4E00..9FFF;
WITHOUT_CLASSIFICATION	A490..A4CF;
WITHOUT_CLASSIFICATION	AC00..D7A3;
WITHOUT_CLASSIFICATION	E000..F8FF;
WITHOUT_CLASSIFICATION	F900..FAFF;
WITHOUT_CLASSIFICATION	FB00..FB4F;
WITHOUT_CLASSIFICATION	FE20..FE2F;
WITHOUT_CLASSIFICATION	FE30..FE4F;
WITHOUT_CLASSIFICATION	FE50..FE6F;
WITHOUT_CLASSIFICATION	FE70..FEFE;
WITHOUT_CLASSIFICATION	FEFF..FEFF;
WITHOUT_CLASSIFICATION	10300..1032F;
WITHOUT_CLASSIFICATION	10330..1034F;
WITHOUT_CLASSIFICATION	10400..1044F;
WITHOUT_CLASSIFICATION	1D000..1D0FF;
WITHOUT_CLASSIFICATION	1D100..1D1FF;
WITHOUT_CLASSIFICATION	20000..2A6D6;
WITHOUT_CLASSIFICATION	2F800..2FA1F;
WITHOUT_CLASSIFICATION	E0000..E007F;
WITHOUT_CLASSIFICATION	missing 2 private use add manually
WITHOUT_CLASSIFICATION	84
WITHOUT_CLASSIFICATION	build table of Pi values
WITHOUT_CLASSIFICATION	build table of Pf values
WITHOUT_CLASSIFICATION	for all characters
WITHOUT_CLASSIFICATION	Unassigned
WITHOUT_CLASSIFICATION	TR#18 1.2
WITHOUT_CLASSIFICATION	Z
WITHOUT_CLASSIFICATION	Lu Ll Lo Nd
WITHOUT_CLASSIFICATION	Perl extension
WITHOUT_CLASSIFICATION	this.setLocale(locale);
WITHOUT_CLASSIFICATION	X+ -> XX
WITHOUT_CLASSIFICATION	X? -> X|
WITHOUT_CLASSIFICATION	Skips ')'
WITHOUT_CLASSIFICATION	'['
WITHOUT_CLASSIFICATION	'^'
WITHOUT_CLASSIFICATION	Skips ']'
WITHOUT_CLASSIFICATION	for STRING
WITHOUT_CLASSIFICATION	------------------------------------------------------
WITHOUT_CLASSIFICATION	\pM \PM + \pM
WITHOUT_CLASSIFICATION	Lu Ll Lo
WITHOUT_CLASSIFICATION	Lu Ll Lo Nd
WITHOUT_CLASSIFICATION	synchronized if null
WITHOUT_CLASSIFICATION	DEBUG System.err.println("isRegisterNonXS: "+name);
WITHOUT_CLASSIFICATION	[{ASSIGNED}]-[{M},{C}]
WITHOUT_CLASSIFICATION	hangul_medial and hangul_final extras
WITHOUT_CLASSIFICATION	base_char?
WITHOUT_CLASSIFICATION	case 0x0b: ret = "\\v"; break;
WITHOUT_CLASSIFICATION	This is CONCAT, and new child is CONCAT.
WITHOUT_CLASSIFICATION	Recursion
WITHOUT_CLASSIFICATION	System.err.println("Merge '"+previous+"' and '"+tok+"'.");
WITHOUT_CLASSIFICATION	Replace previous token by STRING
WITHOUT_CLASSIFICATION	Subraction
WITHOUT_CLASSIFICATION	Exit this loop
WITHOUT_CLASSIFICATION	if not shorthands...
WITHOUT_CLASSIFICATION	Here is no '-'.
WITHOUT_CLASSIFICATION	c '-' ']' -> '-' is a single-range.
WITHOUT_CLASSIFICATION	if - is at the last position of the group
WITHOUT_CLASSIFICATION	LINE FEED U+000A
WITHOUT_CLASSIFICATION	CRRIAGE RETURN U+000D
WITHOUT_CLASSIFICATION	HORIZONTAL TABULATION U+0009
WITHOUT_CLASSIFICATION	return actucal char
WITHOUT_CLASSIFICATION	\ + c backsolidus
WITHOUT_CLASSIFICATION	Found '-' Is this '-' is a from-to token?? Skips '-'
WITHOUT_CLASSIFICATION	getIANA2JavaMapping(String):String
WITHOUT_CLASSIFICATION	This implementation was changed to not introduce multi line content.
WITHOUT_CLASSIFICATION	form integral number of 6-bit groups
WITHOUT_CLASSIFICATION	encodedData[encodedIndex] = 0xa;
WITHOUT_CLASSIFICATION	remove white spaces
WITHOUT_CLASSIFICATION	should be divisible by four
WITHOUT_CLASSIFICATION	if found "no data" just return null
WITHOUT_CLASSIFICATION	if found "no data" just return null
WITHOUT_CLASSIFICATION	Check if they are PAD characters Two PAD e.g. 3c[Pad][Pad] last 4 bits should be zero
WITHOUT_CLASSIFICATION	One PAD e.g. 3cQ[Pad]
WITHOUT_CLASSIFICATION	last 2 bits should be zero
WITHOUT_CLASSIFICATION	an error like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data
WITHOUT_CLASSIFICATION	No PAD e.g 3cQl
WITHOUT_CLASSIFICATION	count characters that's not whitespace
WITHOUT_CLASSIFICATION	format validation This class encodes/decodes hexadecimal data @author Jeffrey Rodriguez
WITHOUT_CLASSIFICATION	add IANA to Java encoding mappings.
WITHOUT_CLASSIFICATION	proposed addition (see above for details):
WITHOUT_CLASSIFICATION	Add support for Cp1252 and its friends
WITHOUT_CLASSIFICATION	<clinit>()
WITHOUT_CLASSIFICATION	added since this encoding only differs w.r.t. presentation
WITHOUT_CLASSIFICATION	removeIANA2JavaMapping(String):String
WITHOUT_CLASSIFICATION	putIANA2JavaMapping(String,String)
WITHOUT_CLASSIFICATION	putJava2IANAMapping(String,String)
WITHOUT_CLASSIFICATION	getJava2IANAMapping(String):String
WITHOUT_CLASSIFICATION	Adding new aliases as proposed in http:lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html
WITHOUT_CLASSIFICATION	REVISIT: j:CNS11643 -> EUC-TW? ISO-2022-CN? ISO-2022-CN-EXT?
WITHOUT_CLASSIFICATION	add Java to IANA encoding mappings fJava2IANAMap.put("8859_1", "US-ASCII"); ?
WITHOUT_CLASSIFICATION	Public static methods
WITHOUT_CLASSIFICATION	removeJava2IANAMapping
WITHOUT_CLASSIFICATION	class EncodingMap
WITHOUT_CLASSIFICATION	RFC 2732 added '[' and ']' as reserved characters
WITHOUT_CLASSIFICATION	Add ASCII Digits and ASCII Hex Numbers
WITHOUT_CLASSIFICATION	Add ASCII Letters and ASCII Hex Numbers
WITHOUT_CLASSIFICATION	Add ASCII Letters
WITHOUT_CLASSIFICATION	Add Reserved Characters
WITHOUT_CLASSIFICATION	Add Mark Characters
WITHOUT_CLASSIFICATION	Add Scheme Characters
WITHOUT_CLASSIFICATION	Add Path Characters
WITHOUT_CLASSIFICATION	Just use null.
WITHOUT_CLASSIFICATION	just make a copy of the base if spec is empty
WITHOUT_CLASSIFICATION	search backwards starting from character before ':'.
WITHOUT_CLASSIFICATION	Neither 'scheme:' or 'scheme:#fragment' are valid URIs.
WITHOUT_CLASSIFICATION	Authority will be everything up to path, query or fragment
WITHOUT_CLASSIFICATION	Attempt to parse authority. If the section is an empty string this is a valid server based authority, so set the host to this value.
WITHOUT_CLASSIFICATION	Resolve relative URI to base URI - see RFC 2396 Section 5.2 In some cases, it might make more sense to throw an exception (when scheme is specified is the string spec and the base URI is also specified, for example), but we're just following the RFC specifications
WITHOUT_CLASSIFICATION	check for absolute path - RFC 2396 5.2 #5
WITHOUT_CLASSIFICATION	6a - get all but the last segment of the base URI path
WITHOUT_CLASSIFICATION	check for scheme - RFC 2396 5.2 #3 if we found a scheme, it means absolute URI, so we're done
WITHOUT_CLASSIFICATION	check for authority - RFC 2396 5.2 #4 if we found a host, then we've got a network path, so we're done
WITHOUT_CLASSIFICATION	if we get to this point, we need to resolve relative path RFC 2396 5.2 #6
WITHOUT_CLASSIFICATION	6b - append the relative URI path
WITHOUT_CLASSIFICATION	6c - remove all "./" where "." is a complete path segment
WITHOUT_CLASSIFICATION	6d - remove "." if path ends with "." as a complete path segment
WITHOUT_CLASSIFICATION	6f - remove ending "<segment>/.." where "<segment>" is a complete path segment
WITHOUT_CLASSIFICATION	userinfo is everything up to @
WITHOUT_CLASSIFICATION	host is everything up to last ':', or up to and including ']' if followed by ':'.
WITHOUT_CLASSIFICATION	port
WITHOUT_CLASSIFICATION	Check if the host is well formed.
WITHOUT_CLASSIFICATION	Check that port is well formed if it exists. REVISIT: There's no restriction on port value ranges, but perform the same check as in setPort to be consistent. Pass in a string to this method instead of an integer.
WITHOUT_CLASSIFICATION	Check that userinfo is well formed if it exists.
WITHOUT_CLASSIFICATION	Userinfo can contain alphanumerics, mark characters, escaped and ';',':','&','=','+','$',','
WITHOUT_CLASSIFICATION	check for valid escape sequence
WITHOUT_CLASSIFICATION	can check against path characters because the set is the same except for '/' which we've already excluded.
WITHOUT_CLASSIFICATION	path - everything up to query string or fragment
WITHOUT_CLASSIFICATION	RFC 2732 only allows '[' and ']' to appear in the opaque part.
WITHOUT_CLASSIFICATION	Scan path. abs_path = "/" path_segments rel_path = rel_segment [ abs_path ]
WITHOUT_CLASSIFICATION	Path segments cannot contain '[' or ']' since pchar production was not changed by RFC 2732.
WITHOUT_CLASSIFICATION	Scan opaque part. opaque_part = uric_no_slash uric
WITHOUT_CLASSIFICATION	query - starts with ? and up to fragment or end
WITHOUT_CLASSIFICATION	fragment - starts with #
WITHOUT_CLASSIFICATION	Server based authority.
WITHOUT_CLASSIFICATION	the second hex character if a character needs to be escaped
WITHOUT_CLASSIFICATION	Registry based authority.
WITHOUT_CLASSIFICATION	reg_name = 1( unreserved | escaped | "$" | "," | ";" | ":" | "@" | "&" | "=" | "+" )
WITHOUT_CLASSIFICATION	presence of the host (whether valid or empty) means double-slashes which means generic uri
WITHOUT_CLASSIFICATION	Check if the host is a valid IPv6reference.
WITHOUT_CLASSIFICATION	Cannot start with a '.', '-', or end with a '-'.
WITHOUT_CLASSIFICATION	rightmost domain label starting with digit indicates IP address since top level domain label can only start with an alpha see RFC 2396 Section 3.2.2
WITHOUT_CLASSIFICATION	hostname = ( domainlabel "." ) toplabel [ "." ] domainlabel = alphanum | alphanum ( alphanum | "-" ) alphanum toplabel = alpha | alpha ( alphanum | "-" ) alphanum
WITHOUT_CLASSIFICATION	RFC 2396 states that hostnames take the form described in RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According to RFC 1034, hostnames are limited to 255 characters.
WITHOUT_CLASSIFICATION	domain labels can contain alphanumerics and '-" but must start and end with an alphanumeric
WITHOUT_CLASSIFICATION	RFC 1034: Labels must be 63 characters or less.
WITHOUT_CLASSIFICATION	Check that that there are no more than three digits in this segment.
WITHOUT_CLASSIFICATION	Check that this segment is not greater than 255.
WITHOUT_CLASSIFICATION	Check if string is a potential match for IPv6reference.
WITHOUT_CLASSIFICATION	Counter for the number of 16-bit sections read in the address.
WITHOUT_CLASSIFICATION	Scan hex sequence before possible '::' or IPv4 address.
WITHOUT_CLASSIFICATION	Address must contain 128-bits of information.
WITHOUT_CLASSIFICATION	'::' represents at least one 16-bit group of zeros.
WITHOUT_CLASSIFICATION	Trailing zeros will fill out the rest of the address.
WITHOUT_CLASSIFICATION	If the second character wasn't ':', in order to be valid, the remainder of the string must match IPv4Address, and we must have read exactly 6 16-bit groups.
WITHOUT_CLASSIFICATION	3. Scan hex sequence after '::'.
WITHOUT_CLASSIFICATION	We've either reached the end of the string, the address ends in an IPv4 address, or it is invalid. scanHexSequence has already made sure that we have the right number of bits.
WITHOUT_CLASSIFICATION	IPv6 addresses are 128-bit, so there can be at most eight sections.
WITHOUT_CLASSIFICATION	This could be '::'.
WITHOUT_CLASSIFICATION	There can be at most 4 hex digits per group.
WITHOUT_CLASSIFICATION	which ASCII characters need to be escaped
WITHOUT_CLASSIFICATION	Static initialization
WITHOUT_CLASSIFICATION	we saw some non-ascii character
WITHOUT_CLASSIFICATION	for each byte
WITHOUT_CLASSIFICATION	for non-ascii character: make it positive, then escape
WITHOUT_CLASSIFICATION	should never happen
WITHOUT_CLASSIFICATION	isValidName(String):boolean
WITHOUT_CLASSIFICATION	XML Schema anyURI specific information
WITHOUT_CLASSIFICATION	To encode special characters in anyURI, by using %HH to represent special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. and non-ASCII characters (whose value >= 128).
WITHOUT_CLASSIFICATION	for each character in the anyURI
WITHOUT_CLASSIFICATION	If encoding happened, create a new string; otherwise, return the orginal one.
WITHOUT_CLASSIFICATION	Constants
WITHOUT_CLASSIFICATION	Initializing the Character Flag Array Code generated by: XMLCharGenerator.
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) 49
WITHOUT_CLASSIFICATION	Fill 6 of value (byte) 49 Fill 2 of value (byte) -71
WITHOUT_CLASSIFICATION	Fill 10 of value (byte) -71
WITHOUT_CLASSIFICATION	Fill 26 of value (byte) -3 Fill 60 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 8 of value (byte) 33 Fill 23 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 31 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 58 of value (byte) -19 Fill 2 of value (byte) 33 Fill 11 of value (byte) -19 Fill 2 of value (byte) 33 Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 53 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 20 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 44 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 7 of value (byte) -19 Fill 3 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 18 of value (byte) -19 Fill 13 of value (byte) 33 Fill 12 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 66 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 12 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 36 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 7 of value (byte) 33 Fill 38 of value (byte) -19 Fill 10 of value (byte) 33 Fill 17 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 23 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 11 of value (byte) 33 Fill 27 of value (byte) -19 Fill 5 of value (byte) 33 Fill 3 of value (byte) -19 Fill 46 of value (byte) 33 Fill 26 of value (byte) -19 Fill 5 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 10 of value (byte) -19 Fill 8 of value (byte) -87 Fill 13 of value (byte) 33 Fill 10 of value (byte) -87 Fill 6 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 71 of value (byte) -19 Fill 2 of value (byte) 33 Fill 5 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 15 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 4 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 15 of value (byte) -87 Fill 2 of value (byte) -19 Fill 2 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 53 of value (byte) -19 Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 8 of value (byte) -19 Fill 2 of value (byte) 33 Fill 2 of value (byte) -19 Fill 2 of value (byte) 33 Fill 22 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 8 of value (byte) -19 Fill 2 of value (byte) 33 Fill 2 of value (byte) -19 Fill 2 of value (byte) 33 Fill 22 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 16 of value (byte) -87 Fill 3 of value (byte) 33 Fill 4 of value (byte) -87 Fill 3 of value (byte) 33 Fill 10 of value (byte) -19 Fill 2 of value (byte) -87 Fill 2 of value (byte) 33 Fill 10 of value (byte) -87 Fill 17 of value (byte) 33 Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) 33 Fill 4 of value (byte) -19 Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 7 of value (byte) -87 Fill 2 of value (byte) 33 Fill 2 of value (byte) -87 Fill 2 of value (byte) 33 Fill 3 of value (byte) -87 Fill 9 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 4 of value (byte) 33 Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) -19 Fill 2 of value (byte) -87 Fill 2 of value (byte) 33 Fill 10 of value (byte) -87 Fill 2 of value (byte) -19 Fill 16 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) 33 Fill 6 of value (byte) -19 Fill 4 of value (byte) 33 Fill 2 of value (byte) -19 Fill 2 of value (byte) 33 Fill 22 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) -19 Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 5 of value (byte) -87 Fill 4 of value (byte) 33 Fill 2 of value (byte) -87 Fill 2 of value (byte) 33 Fill 3 of value (byte) -87 Fill 11 of value (byte) 33 Fill 4 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 7 of value (byte) 33 Fill 12 of value (byte) -87 Fill 3 of value (byte) -19 Fill 12 of value (byte) 33 Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 22 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 5 of value (byte) -19 Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 8 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) -87 Fill 18 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) -19 Fill 2 of value (byte) 33 Fill 4 of value (byte) -19 Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) -19 Fill 4 of value (byte) 33 Fill 10 of value (byte) -87 Fill 18 of value (byte) 33 Fill 2 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 6 of value (byte) -19 Fill 3 of value (byte) 33 Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 4 of value (byte) -19 Fill 3 of value (byte) 33 Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) -19 Fill 3 of value (byte) 33 Fill 2 of value (byte) -19 Fill 3 of value (byte) 33 Fill 3 of value (byte) -19 Fill 3 of value (byte) 33 Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) -19 Fill 4 of value (byte) 33 Fill 5 of value (byte) -87 Fill 3 of value (byte) 33 Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 4 of value (byte) -87 Fill 9 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 15 of value (byte) 33 Fill 9 of value (byte) -87 Fill 17 of value (byte) 33 Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 23 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 23 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 10 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 5 of value (byte) -19 Fill 4 of value (byte) 33 Fill 7 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 4 of value (byte) -87 Fill 9 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 23 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 5 of value (byte) -19 Fill 4 of value (byte) 33 Fill 7 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 4 of value (byte) -87 Fill 7 of value (byte) 33 Fill 2 of value (byte) -87 Fill 7 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) -19 Fill 4 of value (byte) 33 Fill 10 of value (byte) -87 Fill 18 of value (byte) 33 Fill 2 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 16 of value (byte) -19 Fill 4 of value (byte) 33 Fill 6 of value (byte) -87 Fill 2 of value (byte) 33 Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 8 of value (byte) 33 Fill 2 of value (byte) -19 Fill 4 of value (byte) 33 Fill 10 of value (byte) -87 Fill 145 of value (byte) 33 Fill 46 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) -19 Fill 7 of value (byte) -87 Fill 5 of value (byte) 33 Fill 6 of value (byte) -19 Fill 9 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 10 of value (byte) -87 Fill 39 of value (byte) 33 Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) 33 Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 6 of value (byte) 33 Fill 4 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) -19 Fill 6 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) 33 Fill 5 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 4 of value (byte) 33 Fill 2 of value (byte) -87 Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 33 of value (byte) -19 Fill 7 of value (byte) 33 Fill 20 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 6 of value (byte) -87 Fill 4 of value (byte) 33 Fill 6 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 21 of value (byte) -87 Fill 3 of value (byte) 33 Fill 7 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 230 of value (byte) 33 Fill 38 of value (byte) -19 Fill 10 of value (byte) 33 Fill 39 of value (byte) -19 Fill 9 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 5 of value (byte) -19 Fill 41 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 11 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) 33 Fill 2 of value (byte) -19 Fill 3 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 5 of value (byte) 33 Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) 33 Fill 2 of value (byte) -19 Fill 3 of value (byte) 33 Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 40 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 9 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) 33 Fill 2 of value (byte) -19 Fill 7 of value (byte) 33 Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 7 of value (byte) -19 Fill 40 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 4 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 8 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 68 of value (byte) 33
WITHOUT_CLASSIFICATION	Public static methods
WITHOUT_CLASSIFICATION	Fill 31 of value (byte) -19 Fill 2 of value (byte) 33 Fill 53 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 7 of value (byte) -19 Fill 3 of value (byte) 33 Fill 4 of value (byte) -19 Fill 2 of value (byte) 33 Fill 6 of value (byte) -19 Fill 4 of value (byte) 33 Fill 13 of value (byte) -19 Fill 5 of value (byte) 33 Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 7 of value (byte) -19 Fill 211 of value (byte) 33 Fill 13 of value (byte) -87 Fill 4 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) 33 Fill 2 of value (byte) -19 Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 81 of value (byte) 33 Fill 3 of value (byte) -19 Fill 3714 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 25 of value (byte) 33 Fill 9 of value (byte) -19 Fill 6 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 5 of value (byte) -87 Fill 11 of value (byte) 33 Fill 84 of value (byte) -19 Fill 4 of value (byte) 33 Fill 2 of value (byte) -87 Fill 2 of value (byte) 33 Fill 2 of value (byte) -87 Fill 2 of value (byte) 33 Fill 90 of value (byte) -19
WITHOUT_CLASSIFICATION	isValid(int):boolean
WITHOUT_CLASSIFICATION	isInvalid(int):boolean
WITHOUT_CLASSIFICATION	isContent(int):boolean
WITHOUT_CLASSIFICATION	isMarkup(int):boolean
WITHOUT_CLASSIFICATION	isSpace(int):boolean
WITHOUT_CLASSIFICATION	isNameStart(int):boolean
WITHOUT_CLASSIFICATION	isName(int):boolean
WITHOUT_CLASSIFICATION	isNCNameStart(int):boolean
WITHOUT_CLASSIFICATION	isNCName(int):boolean
WITHOUT_CLASSIFICATION	isPubid(int):boolean
WITHOUT_CLASSIFICATION	[5] Name ::= (Letter | '_' | ':') (NameChar)
WITHOUT_CLASSIFICATION	isValidName(String):boolean
WITHOUT_CLASSIFICATION	from the namespace rec [4] NCName ::= (Letter | '_') (NCNameChar)
WITHOUT_CLASSIFICATION	isValidNCName(String):boolean
WITHOUT_CLASSIFICATION	[7] Nmtoken ::= (NameChar)+
WITHOUT_CLASSIFICATION	encodings
WITHOUT_CLASSIFICATION	isValidIANAEncoding(String):boolean
WITHOUT_CLASSIFICATION	class XMLChar
WITHOUT_CLASSIFICATION	order constants
WITHOUT_CLASSIFICATION	check whether the character is in the range 0x30 ~ 0x39
WITHOUT_CLASSIFICATION	interface TypeValidator
WITHOUT_CLASSIFICATION	This implementation was changed to not introduce multi line content.
WITHOUT_CLASSIFICATION	form integral number of 6-bit groups
WITHOUT_CLASSIFICATION	encodedData[encodedIndex] = 0xa;
WITHOUT_CLASSIFICATION	remove white spaces
WITHOUT_CLASSIFICATION	should be divisible by four
WITHOUT_CLASSIFICATION	if found "no data" just return null
WITHOUT_CLASSIFICATION	One PAD e.g. 3cQ[Pad]
WITHOUT_CLASSIFICATION	last 2 bits should be zero
WITHOUT_CLASSIFICATION	an error like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data
WITHOUT_CLASSIFICATION	No PAD e.g 3cQl
WITHOUT_CLASSIFICATION	count characters that's not whitespace
WITHOUT_CLASSIFICATION	Data
WITHOUT_CLASSIFICATION	Static initialization
WITHOUT_CLASSIFICATION	Add support for Cp1252 and its friends
WITHOUT_CLASSIFICATION	added since this encoding only differs w.r.t. presentation
WITHOUT_CLASSIFICATION	Adding new aliases as proposed in http:lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html
WITHOUT_CLASSIFICATION	REVISIT: j:CNS11643 -> EUC-TW? ISO-2022-CN? ISO-2022-CN-EXT?
WITHOUT_CLASSIFICATION	add Java to IANA encoding mappings fJava2IANAMap.put("8859_1", "US-ASCII"); ?
WITHOUT_CLASSIFICATION	proposed addition (see above for details):
WITHOUT_CLASSIFICATION	<clinit>()
WITHOUT_CLASSIFICATION	Public static methods
WITHOUT_CLASSIFICATION	putIANA2JavaMapping(String,String)
WITHOUT_CLASSIFICATION	getIANA2JavaMapping(String):String
WITHOUT_CLASSIFICATION	removeIANA2JavaMapping(String):String
WITHOUT_CLASSIFICATION	RFC 2732 added '[' and ']' as reserved characters
WITHOUT_CLASSIFICATION	Add ASCII Digits and ASCII Hex Numbers
WITHOUT_CLASSIFICATION	Add ASCII Letters and ASCII Hex Numbers
WITHOUT_CLASSIFICATION	isValidName(String):boolean
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) -87 Fill 6 of value (byte) 33 Fill 40 of value (byte) -19 Fill 7379 of value (byte) 33 Fill 20902 of value (byte) -19 Fill 3162 of value (byte) 33 Fill 11172 of value (byte) -19 Fill 92 of value (byte) 33 Fill 8190 of value (byte) 33
WITHOUT_CLASSIFICATION	if the character is in the range 0x30 ~ 0x39, return its int value (0~9), otherwise, return -1
WITHOUT_CLASSIFICATION	Add Reserved Characters
WITHOUT_CLASSIFICATION	Add Scheme Characters
WITHOUT_CLASSIFICATION	Add Userinfo Characters
WITHOUT_CLASSIFICATION	Add Path Characters
WITHOUT_CLASSIFICATION	Just use null.
WITHOUT_CLASSIFICATION	search backwards starting from character before ':'.
WITHOUT_CLASSIFICATION	A standalone base is a valid URI according to spec
WITHOUT_CLASSIFICATION	Neither 'scheme:' or 'scheme:#fragment' are valid URIs.
WITHOUT_CLASSIFICATION	Authority will be everything up to path, query or fragment
WITHOUT_CLASSIFICATION	Attempt to parse authority. If the section is an empty string this is a valid server based authority, so set the host to this value.
WITHOUT_CLASSIFICATION	If we didn't find authority we need to back up. Attempt to match against abs_path next.
WITHOUT_CLASSIFICATION	Resolve relative URI to base URI - see RFC 2396 Section 5.2 In some cases, it might make more sense to throw an exception (when scheme is specified is the string spec and the base URI is also specified, for example), but we're just following the RFC specifications
WITHOUT_CLASSIFICATION	check to see if this is the current doc - RFC 2396 5.2 #2 note that this is slightly different from the RFC spec in that we don't include the check for query string being null - this handles cases where the urispec is just a query string or a fragment (e.g. "?y" or "#s") - see <http:www.ics.uci.edu/~fielding/url/test1.html> which identified this as a bug in the RFC
WITHOUT_CLASSIFICATION	check for authority - RFC 2396 5.2 #4 if we found a host, then we've got a network path, so we're done
WITHOUT_CLASSIFICATION	check for absolute path - RFC 2396 5.2 #5
WITHOUT_CLASSIFICATION	6a - get all but the last segment of the base URI path
WITHOUT_CLASSIFICATION	6b - append the relative URI path
WITHOUT_CLASSIFICATION	6c - remove all "./" where "." is a complete path segment
WITHOUT_CLASSIFICATION	6d - remove "." if path ends with "." as a complete path segment
WITHOUT_CLASSIFICATION	6e - remove all "<segment>/../" where "<segment>" is a complete path segment not equal to ".."
WITHOUT_CLASSIFICATION	6f - remove ending "<segment>/.." where "<segment>" is a complete path segment
WITHOUT_CLASSIFICATION	userinfo is everything up to @
WITHOUT_CLASSIFICATION	host is everything up to last ':', or up to and including ']' if followed by ':'.
WITHOUT_CLASSIFICATION	port
WITHOUT_CLASSIFICATION	Check if the host is well formed.
WITHOUT_CLASSIFICATION	Check that port is well formed if it exists. REVISIT: There's no restriction on port value ranges, but perform the same check as in setPort to be consistent. Pass in a string to this method instead of an integer.
WITHOUT_CLASSIFICATION	Check that userinfo is well formed if it exists.
WITHOUT_CLASSIFICATION	Userinfo can contain alphanumerics, mark characters, escaped and ';',':','&','=','+','$',','
WITHOUT_CLASSIFICATION	check for valid escape sequence
WITHOUT_CLASSIFICATION	check for valid escape sequence
WITHOUT_CLASSIFICATION	can check against path characters because the set is the same except for '/' which we've already excluded.
WITHOUT_CLASSIFICATION	path - everything up to query string or fragment
WITHOUT_CLASSIFICATION	RFC 2732 only allows '[' and ']' to appear in the opaque part.
WITHOUT_CLASSIFICATION	Scan path. abs_path = "/" path_segments rel_path = rel_segment [ abs_path ]
WITHOUT_CLASSIFICATION	Scan opaque part. opaque_part = uric_no_slash uric
WITHOUT_CLASSIFICATION	query - starts with ? and up to fragment or end
WITHOUT_CLASSIFICATION	fragment - starts with #
WITHOUT_CLASSIFICATION	Server based authority.
WITHOUT_CLASSIFICATION	Registry based authority.
WITHOUT_CLASSIFICATION	userinfo can contain alphanumerics, mark characters, escaped and ';',':','&','=','+','$',','
WITHOUT_CLASSIFICATION	reg_name = 1( unreserved | escaped | "$" | "," | ";" | ":" | "@" | "&" | "=" | "+" )
WITHOUT_CLASSIFICATION	presence of the host (whether valid or empty) means double-slashes which means generic uri
WITHOUT_CLASSIFICATION	Check if the host is a valid IPv6reference.
WITHOUT_CLASSIFICATION	Cannot start with a '.', '-', or end with a '-'.
WITHOUT_CLASSIFICATION	rightmost domain label starting with digit indicates IP address since top level domain label can only start with an alpha see RFC 2396 Section 3.2.2
WITHOUT_CLASSIFICATION	RFC 2396 states that hostnames take the form described in RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According to RFC 1034, hostnames are limited to 255 characters.
WITHOUT_CLASSIFICATION	domain labels can contain alphanumerics and '-" but must start and end with an alphanumeric
WITHOUT_CLASSIFICATION	RFC 1034: Labels must be 63 characters or less.
WITHOUT_CLASSIFICATION	Check that that there are no more than three digits in this segment.
WITHOUT_CLASSIFICATION	Check that this segment is not greater than 255.
WITHOUT_CLASSIFICATION	Check if string is a potential match for IPv6reference.
WITHOUT_CLASSIFICATION	Counter for the number of 16-bit sections read in the address.
WITHOUT_CLASSIFICATION	Scan hex sequence before possible '::' or IPv4 address.
WITHOUT_CLASSIFICATION	Address must contain 128-bits of information.
WITHOUT_CLASSIFICATION	'::' represents at least one 16-bit group of zeros.
WITHOUT_CLASSIFICATION	Trailing zeros will fill out the rest of the address.
WITHOUT_CLASSIFICATION	3. Scan hex sequence after '::'.
WITHOUT_CLASSIFICATION	IPv6 addresses are 128-bit, so there can be at most eight sections.
WITHOUT_CLASSIFICATION	This could be '::'.
WITHOUT_CLASSIFICATION	There can be at most 4 hex digits per group.
WITHOUT_CLASSIFICATION	which ASCII characters need to be escaped
WITHOUT_CLASSIFICATION	Trying to match the following productions: hexseq = hex4 ( ":" hex4) hex4 = 14HEXDIG
WITHOUT_CLASSIFICATION	initialize the above 3 arrays
WITHOUT_CLASSIFICATION	if it's not an ASCII character, break here, and use UTF-8 encoding
WITHOUT_CLASSIFICATION	we saw some non-ascii character
WITHOUT_CLASSIFICATION	get UTF-8 bytes for the remaining sub-string
WITHOUT_CLASSIFICATION	for each byte
WITHOUT_CLASSIFICATION	for non-ascii character: make it positive, then escape
WITHOUT_CLASSIFICATION	should never happen
WITHOUT_CLASSIFICATION	This might be invalid or an IPv4address. If it's potentially an IPv4address, backup to just after the last valid character that matches hexseq.
WITHOUT_CLASSIFICATION	XML Schema anyURI specific information
WITHOUT_CLASSIFICATION	To encode special characters in anyURI, by using %HH to represent special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. and non-ASCII characters (whose value >= 128).
WITHOUT_CLASSIFICATION	for each character in the anyURI
WITHOUT_CLASSIFICATION	If encoding happened, create a new string; otherwise, return the orginal one.
WITHOUT_CLASSIFICATION	Constants
WITHOUT_CLASSIFICATION	Initializing the Character Flag Array Code generated by: XMLCharGenerator.
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) 49
WITHOUT_CLASSIFICATION	Fill 6 of value (byte) 49 Fill 2 of value (byte) -71
WITHOUT_CLASSIFICATION	Fill 10 of value (byte) -71
WITHOUT_CLASSIFICATION	Fill 8 of value (byte) 33 Fill 23 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 31 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 58 of value (byte) -19 Fill 2 of value (byte) 33 Fill 11 of value (byte) -19 Fill 2 of value (byte) 33 Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 53 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 20 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 44 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 7 of value (byte) -19 Fill 3 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 18 of value (byte) -19 Fill 13 of value (byte) 33 Fill 12 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 66 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 12 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 36 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 4 of value (byte) -87 Fill 9 of value (byte) 33 Fill 53 of value (byte) -19 Fill 2 of value (byte) 33 Fill 2 of value (byte) -19 Fill 2 of value (byte) 33 Fill 2 of value (byte) -19 Fill 3 of value (byte) 33 Fill 28 of value (byte) -19 Fill 2 of value (byte) 33 Fill 8 of value (byte) -19 Fill 2 of value (byte) 33 Fill 2 of value (byte) -19 Fill 55 of value (byte) 33 Fill 38 of value (byte) -19 Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 23 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 10 of value (byte) -19 Fill 8 of value (byte) -87 Fill 13 of value (byte) 33 Fill 10 of value (byte) -87 Fill 6 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 71 of value (byte) -19 Fill 2 of value (byte) 33 Fill 5 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 15 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 4 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 15 of value (byte) -87 Fill 2 of value (byte) -19 Fill 2 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 4 of value (byte) -87 Fill 2 of value (byte) 33 Fill 10 of value (byte) -87 Fill 519 of value (byte) 33 Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 53 of value (byte) -19 Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 8 of value (byte) -19 Fill 2 of value (byte) 33 Fill 2 of value (byte) -19 Fill 2 of value (byte) 33 Fill 22 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) 33 Fill 4 of value (byte) -19 Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 5 of value (byte) -87 Fill 4 of value (byte) 33 Fill 2 of value (byte) -87 Fill 2 of value (byte) 33 Fill 3 of value (byte) -87 Fill 11 of value (byte) 33 Fill 4 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 8 of value (byte) -19 Fill 2 of value (byte) 33 Fill 2 of value (byte) -19 Fill 2 of value (byte) 33 Fill 22 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 7 of value (byte) -87 Fill 2 of value (byte) 33 Fill 2 of value (byte) -87 Fill 2 of value (byte) 33 Fill 3 of value (byte) -87 Fill 9 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 4 of value (byte) 33 Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) -19 Fill 2 of value (byte) -87 Fill 2 of value (byte) 33 Fill 10 of value (byte) -87 Fill 2 of value (byte) -19 Fill 16 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) 33 Fill 6 of value (byte) -19 Fill 4 of value (byte) 33 Fill 2 of value (byte) -19 Fill 2 of value (byte) 33 Fill 22 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) -19 Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 7 of value (byte) 33 Fill 12 of value (byte) -87 Fill 3 of value (byte) -19 Fill 12 of value (byte) 33 Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 22 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 5 of value (byte) -19 Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 8 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) -87 Fill 18 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 5 of value (byte) 33 Fill 10 of value (byte) -87 Fill 17 of value (byte) 33 Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 6 of value (byte) -87 Fill 3 of value (byte) 33 Fill 2 of value (byte) -87 Fill 2 of value (byte) 33 Fill 3 of value (byte) -87 Fill 8 of value (byte) 33 Fill 2 of value (byte) -87 Fill 4 of value (byte) 33 Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) -19 Fill 4 of value (byte) 33 Fill 10 of value (byte) -87 Fill 18 of value (byte) 33 Fill 2 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 6 of value (byte) -19 Fill 3 of value (byte) 33 Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) -19 Fill 3 of value (byte) 33 Fill 2 of value (byte) -19 Fill 3 of value (byte) 33 Fill 3 of value (byte) -19 Fill 3 of value (byte) 33 Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 4 of value (byte) -19 Fill 3 of value (byte) 33 Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) -19 Fill 4 of value (byte) 33 Fill 5 of value (byte) -87 Fill 3 of value (byte) 33 Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 4 of value (byte) -87 Fill 9 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 23 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 23 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 10 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 10 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 5 of value (byte) -19 Fill 4 of value (byte) 33 Fill 7 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 4 of value (byte) -87 Fill 7 of value (byte) 33 Fill 2 of value (byte) -87 Fill 7 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 4 of value (byte) -87 Fill 9 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 23 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) -19 Fill 4 of value (byte) 33 Fill 10 of value (byte) -87 Fill 18 of value (byte) 33 Fill 2 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 16 of value (byte) -19 Fill 4 of value (byte) 33 Fill 6 of value (byte) -87 Fill 2 of value (byte) 33 Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 8 of value (byte) 33 Fill 2 of value (byte) -19 Fill 4 of value (byte) 33 Fill 10 of value (byte) -87 Fill 145 of value (byte) 33 Fill 46 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) -19 Fill 7 of value (byte) -87 Fill 5 of value (byte) 33 Fill 6 of value (byte) -19 Fill 9 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 10 of value (byte) -87 Fill 39 of value (byte) 33 Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) 33 Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) 33 Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 6 of value (byte) 33 Fill 4 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) -19 Fill 6 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) 33 Fill 5 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 4 of value (byte) 33 Fill 2 of value (byte) -87 Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 33 of value (byte) -19 Fill 7 of value (byte) 33 Fill 20 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 6 of value (byte) -87 Fill 4 of value (byte) 33 Fill 6 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 21 of value (byte) -87 Fill 3 of value (byte) 33 Fill 7 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 5 of value (byte) -19 Fill 41 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 11 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) 33 Fill 2 of value (byte) -19 Fill 3 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 5 of value (byte) 33 Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) 33 Fill 2 of value (byte) -19 Fill 3 of value (byte) 33 Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 40 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 9 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 2 of value (byte) 33 Fill 2 of value (byte) -19 Fill 7 of value (byte) 33 Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 7 of value (byte) -19 Fill 40 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 4 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 8 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 68 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) 33 Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 7 of value (byte) -19 Fill 211 of value (byte) 33 Fill 13 of value (byte) -87 Fill 4 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) 33 Fill 2 of value (byte) -19 Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 81 of value (byte) 33 Fill 3 of value (byte) -19 Fill 3714 of value (byte) 33
WITHOUT_CLASSIFICATION	Fill 25 of value (byte) 33 Fill 9 of value (byte) -19 Fill 6 of value (byte) -87
WITHOUT_CLASSIFICATION	Fill 5 of value (byte) -87 Fill 11 of value (byte) 33 Fill 84 of value (byte) -19 Fill 4 of value (byte) 33 Fill 2 of value (byte) -87 Fill 2 of value (byte) 33 Fill 2 of value (byte) -87 Fill 2 of value (byte) 33 Fill 90 of value (byte) -19
WITHOUT_CLASSIFICATION	Fill 3 of value (byte) -87 Fill 6 of value (byte) 33 Fill 40 of value (byte) -19 Fill 7379 of value (byte) 33 Fill 20902 of value (byte) -19 Fill 3162 of value (byte) 33 Fill 11172 of value (byte) -19 Fill 92 of value (byte) 33 Fill 8190 of value (byte) 33
WITHOUT_CLASSIFICATION	isValid(int):boolean
WITHOUT_CLASSIFICATION	isInvalid(int):boolean
WITHOUT_CLASSIFICATION	isContent(int):boolean
WITHOUT_CLASSIFICATION	isMarkup(int):boolean
WITHOUT_CLASSIFICATION	isSpace(int):boolean
WITHOUT_CLASSIFICATION	isNameStart(int):boolean
WITHOUT_CLASSIFICATION	isName(int):boolean
WITHOUT_CLASSIFICATION	isNCNameStart(int):boolean
WITHOUT_CLASSIFICATION	isNCName(int):boolean
WITHOUT_CLASSIFICATION	isPubid(int):boolean
WITHOUT_CLASSIFICATION	[5] Name ::= (Letter | '_' | ':') (NameChar)
WITHOUT_CLASSIFICATION	isValidName(String):boolean
WITHOUT_CLASSIFICATION	from the namespace rec [4] NCName ::= (Letter | '_') (NCNameChar)
WITHOUT_CLASSIFICATION	isValidNCName(String):boolean
WITHOUT_CLASSIFICATION	[7] Nmtoken ::= (NameChar)+
WITHOUT_CLASSIFICATION	encodings
WITHOUT_CLASSIFICATION	Remember the static instance.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Public static methods
WITHOUT_CLASSIFICATION	isValidIANAEncoding(String):boolean
WITHOUT_CLASSIFICATION	isValidIANAEncoding(String):boolean
WITHOUT_CLASSIFICATION	order constants
WITHOUT_CLASSIFICATION	check whether the character is in the range 0x30 ~ 0x39
WITHOUT_CLASSIFICATION	if the character is in the range 0x30 ~ 0x39, return its int value (0~9), otherwise, return -1
WITHOUT_CLASSIFICATION	There are attributes to handle.
WITHOUT_CLASSIFICATION	There are attributes to handle.
WITHOUT_CLASSIFICATION	XMLTypeResourceImpl
WITHOUT_CLASSIFICATION	XMLTypeValidator
WITHOUT_CLASSIFICATION	If the feature is a bidirectional reference with a multiplicity-many reverse, a composite reverse, or a multiplicity-1 reverse that is already set (on value), then we'll switch things around and execute this command a little differently, because otherwise it's not undoable.
WITHOUT_CLASSIFICATION	We never directly set a multiplicity-many feature to a list directly. Instead, we remove the old values values, move the values that remain, and insert the new values. If all old values are removed, we'll still set it to an empty list, or unset it, as appropriate.
WITHOUT_CLASSIFICATION	If we aren't simply removing all the old values...
WITHOUT_CLASSIFICATION	If there are values to remove, append a command for them.
WITHOUT_CLASSIFICATION	Determine the values that will remain and move them into the right order, if necessary.
WITHOUT_CLASSIFICATION	end setting whole list
WITHOUT_CLASSIFICATION	For a 1-to-many association, doing the set as a remove and add from the other end will make it undoable. In particular, if there is an existing non-null value, we first need to remove it from the other end, so that it will be reinserted at the correct index on undo.
WITHOUT_CLASSIFICATION	(value == null) && (oldValue == null) A simple set/unset will suffice.
WITHOUT_CLASSIFICATION	(value == null) && (oldValue != null) Remove owner from the old value and unset if necessary.
WITHOUT_CLASSIFICATION	((value != null)
WITHOUT_CLASSIFICATION	(value != null) && (oldValue == null) Add owner to new value.
WITHOUT_CLASSIFICATION	((value != null) && (oldValue != null)) Need a compound command to remove owner from old value and add it to new value.
WITHOUT_CLASSIFICATION	For consistency, we always set 1-1 container relations from the container end.
WITHOUT_CLASSIFICATION	For a many-to-1 or 1-to-1 association, if the opposite reference on the new value is already set to something, we need a compound command that first explicitly removes that reference, so that it will be restored in the undo.
WITHOUT_CLASSIFICATION	For a many-to-1, we use SetCommand.create() to create the command to remove the opposite reference; a RemoveCommand on its opposite will actually result.
WITHOUT_CLASSIFICATION	For a 1-to-1, we can directly create a SetCommand.
WITHOUT_CLASSIFICATION	Initialize all the fields from the command parameter.
WITHOUT_CLASSIFICATION	If there is an owner.
WITHOUT_CLASSIFICATION	Get the owner's meta object.
WITHOUT_CLASSIFICATION	Is the feature an attribute of the owner...
WITHOUT_CLASSIFICATION	If must be of this type then.
WITHOUT_CLASSIFICATION	Setting at an index. Make sure the index is valid, the type is valid, and the value isn't already in a unique feature. Record the old value.
WITHOUT_CLASSIFICATION	If the attribute is set, record it's old value.
WITHOUT_CLASSIFICATION	oldValue = owner.eGet(feature);
WITHOUT_CLASSIFICATION	Make sure the container is not being put into a contained object.
WITHOUT_CLASSIFICATION	If the other end is a many, then we should remove the owner from the old value's opposite feature so that undo will put it back.
WITHOUT_CLASSIFICATION	If the other end is single, then we should unset the owner from the old value's opposite feature so that undo will put it back.
WITHOUT_CLASSIFICATION	Either set or unset the feature.
WITHOUT_CLASSIFICATION	Either set or unset the feature.
WITHOUT_CLASSIFICATION	Update the containing map, if necessary.
WITHOUT_CLASSIFICATION	Update the containing map, if necessary.
WITHOUT_CLASSIFICATION	Either set or unset the old value.
WITHOUT_CLASSIFICATION	If there is no list to add to, no collection or an empty collection from which to add, or the index is out of range...
WITHOUT_CLASSIFICATION	If it's a feature map, we'll need to validate the entry feature and enforce its multiplicity restraints.
WITHOUT_CLASSIFICATION	Keep track of all the entry features that are already in the feature map and that will be added, excluding XML text, CDATA, and comments (if we're in a mixed type).
WITHOUT_CLASSIFICATION	Check each object...
WITHOUT_CLASSIFICATION	Check type of object.
WITHOUT_CLASSIFICATION	Check that the object isn't already in a unique list.
WITHOUT_CLASSIFICATION	For feature maps, test that the entry feature is a valid type, that the entry value is an instance of it, that there is not already something in a document root, and that there is not already something in a single-valued entry feature.
WITHOUT_CLASSIFICATION	Check to see if a container is being put into a contained object.
WITHOUT_CLASSIFICATION	Simply add the collection to the list.
WITHOUT_CLASSIFICATION	Simply add the collection to the list.
WITHOUT_CLASSIFICATION	We'd like the collection of things added to be selected after this command completes.
WITHOUT_CLASSIFICATION	We'd like the collection of things added to be selected after this command completes.
WITHOUT_CLASSIFICATION	Remove the collection from the list by index.
WITHOUT_CLASSIFICATION	We'd like the owner selected after this undo completes.
WITHOUT_CLASSIFICATION	It must be an unsettable feature to be null and considered set.
WITHOUT_CLASSIFICATION	It must be an unsettable feature to be empty and considered set.
WITHOUT_CLASSIFICATION	if one is null, they'll all be null
WITHOUT_CLASSIFICATION	Possible scope for the ChangeRecorder
WITHOUT_CLASSIFICATION	Create commands to create copies of the children.
WITHOUT_CLASSIFICATION	We'll default to this.
WITHOUT_CLASSIFICATION	If there isn't something obviously wrong with the arguments...
WITHOUT_CLASSIFICATION	If the location is near the boundary, we'll start by trying to do a drop insert.
WITHOUT_CLASSIFICATION	If we could do a drop insert operation...
WITHOUT_CLASSIFICATION	Set the bounds so that we re-check when we are closer to the middle.
WITHOUT_CLASSIFICATION	We can try to do a drop on instead.
WITHOUT_CLASSIFICATION	Set the bounds so that we re-check when we get near the other end.
WITHOUT_CLASSIFICATION	We are near the middle, so we'll start by trying to do a drop on.
WITHOUT_CLASSIFICATION	If we can do a drop on operation.
WITHOUT_CLASSIFICATION	Set the range so that we re-check when we get aren't in the middle.
WITHOUT_CLASSIFICATION	We can reset and try a drop insert instead.
WITHOUT_CLASSIFICATION	We'll always be wrong for these arguments, so don't bother re-checking.
WITHOUT_CLASSIFICATION	This will be the default return value.
WITHOUT_CLASSIFICATION	The feedback is set based on which half we are in. If the command isn't executable, these values won't be used.
WITHOUT_CLASSIFICATION	If we can't determine the parent.
WITHOUT_CLASSIFICATION	Iterate over the children to find the owner.
WITHOUT_CLASSIFICATION	When we match the owner, we're done.
WITHOUT_CLASSIFICATION	Try to create a specific command based on the current desired operation.
WITHOUT_CLASSIFICATION	If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link.
WITHOUT_CLASSIFICATION	Try again.
WITHOUT_CLASSIFICATION	We've switch the operation!
WITHOUT_CLASSIFICATION	We've switch the operation!
WITHOUT_CLASSIFICATION	We don't want to move insert an object before or after itself...
WITHOUT_CLASSIFICATION	If the dragged objects share a parent...
WITHOUT_CLASSIFICATION	Just remove the objects and add them.
WITHOUT_CLASSIFICATION	We don't want to copy insert an object before or after itself...
WITHOUT_CLASSIFICATION	Copy the collection
WITHOUT_CLASSIFICATION	And add the copy.
WITHOUT_CLASSIFICATION	if optimize if collection
WITHOUT_CLASSIFICATION	We don't want to insert an object before or after itself...
WITHOUT_CLASSIFICATION	Update the containing map, if necessary.
WITHOUT_CLASSIFICATION	Update the containing map, if necessary.
WITHOUT_CLASSIFICATION	Update the containing map, if necessary.
WITHOUT_CLASSIFICATION	If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link.
WITHOUT_CLASSIFICATION	If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link.
WITHOUT_CLASSIFICATION	Add the collection
WITHOUT_CLASSIFICATION	This is the default return value.
WITHOUT_CLASSIFICATION	This is the feedback we use to indicate drop on; it will only be used if the command is executable.
WITHOUT_CLASSIFICATION	Prepare the right type of operation.
WITHOUT_CLASSIFICATION	If we can't set the collection, try setting use the single value of the collection.
WITHOUT_CLASSIFICATION	We'll assume that the copy command can execute and that adding a copy of the clipboard is the same test as adding the clipboard contents itself.
WITHOUT_CLASSIFICATION	Reset as in the constructor.
WITHOUT_CLASSIFICATION	If the operation has changed significantly...
WITHOUT_CLASSIFICATION	Clean it up.
WITHOUT_CLASSIFICATION	Set the arguments again.
WITHOUT_CLASSIFICATION	Determine if the operation is executable.
WITHOUT_CLASSIFICATION	Just return the cached result.
WITHOUT_CLASSIFICATION	Only return the operation for an executable command.
WITHOUT_CLASSIFICATION	Thread.dumpStack();
WITHOUT_CLASSIFICATION	This can't execute if there is no owner list or the owner list doesn't contain the value being replaced or there are not replacements.
WITHOUT_CLASSIFICATION	An extent allows anything to be added.
WITHOUT_CLASSIFICATION	Make sure each object conforms to the type of the feature.
WITHOUT_CLASSIFICATION	Record the position of the value in the owner list.
WITHOUT_CLASSIFICATION	Simply remove the object from the owner list.
WITHOUT_CLASSIFICATION	Insert the collection at the right place.
WITHOUT_CLASSIFICATION	We'd like the collection of replacements selected after this replace completes.
WITHOUT_CLASSIFICATION	Remove the collection of replacements.
WITHOUT_CLASSIFICATION	Add the value back in the right place.
WITHOUT_CLASSIFICATION	We'd like the replaced selected after this undo replace completes.
WITHOUT_CLASSIFICATION	Update the containing map, if necessary.
WITHOUT_CLASSIFICATION	We'll assume that the copy command can execute and that adding a copy of the clipboard is the same test as adding the clipboard contents itself.
WITHOUT_CLASSIFICATION	Thread.dumpStack();
WITHOUT_CLASSIFICATION	Create a strict compound command to do a copy and then add the result
WITHOUT_CLASSIFICATION	Create a command to copy the clipboard.
WITHOUT_CLASSIFICATION	Create a proxy that will create an add command.
WITHOUT_CLASSIFICATION	Use the original to do the add, but only if it's of the same type as the copy. This ensures that if there is conversion being done as part of the copy, as would be the case for a cross domain copy in the mapping framework, that we do actually use the converted instance.
WITHOUT_CLASSIFICATION	This will determine canExecute as efficiently as possible.
WITHOUT_CLASSIFICATION	This will actually execute the copy command in order to check if the add can execute.
WITHOUT_CLASSIFICATION	We need to check canExecute() here in case prepare() went down the "optimize" path.
WITHOUT_CLASSIFICATION	This can execute if there is an owner list and a collection and the owner list contains all the objects of the collection.
WITHOUT_CLASSIFICATION	If this owned object is one from the collection...
WITHOUT_CLASSIFICATION	Remove the object from the collection and add it to the identity list.
WITHOUT_CLASSIFICATION	Record the index.
WITHOUT_CLASSIFICATION	Record the index.
WITHOUT_CLASSIFICATION	Second pass: match by value equality.
WITHOUT_CLASSIFICATION	If this owned object is equal to one from the collection...
WITHOUT_CLASSIFICATION	Remove the object from the collection and add it to the equality list.
WITHOUT_CLASSIFICATION	Merge the lists.
WITHOUT_CLASSIFICATION	Remove objects from the owner list by index, starting from the end.
WITHOUT_CLASSIFICATION	We'd like the owner selected after this remove completes.
WITHOUT_CLASSIFICATION	If either list is empty, the result is simply the other.
WITHOUT_CLASSIFICATION	Allocate list and array for objects and indices.
WITHOUT_CLASSIFICATION	Index counters into indices1, indices2, and indices.
WITHOUT_CLASSIFICATION	Object iterators.
WITHOUT_CLASSIFICATION	Repeatedly select the lower index and corresponding object, and advance past the selected pair.
WITHOUT_CLASSIFICATION	We'd like the collection of things added to be selected after this command completes.
WITHOUT_CLASSIFICATION	Create commands to create copies of the children.
WITHOUT_CLASSIFICATION	Thread.dumpStack();
WITHOUT_CLASSIFICATION	Remove objects from the owner list by index, starting from the end.
WITHOUT_CLASSIFICATION	We'd like the owner selected after this remove completes.
WITHOUT_CLASSIFICATION	Create commands to create the copy object(s).
WITHOUT_CLASSIFICATION	Create an initialize copy command for each of the created objects.
WITHOUT_CLASSIFICATION	Record it for execution.
WITHOUT_CLASSIFICATION	This ensures that the CreateCopyCommand will be executed by StrictCompoundCommand.prepare().
WITHOUT_CLASSIFICATION	This will execute the CreateCopyCommand's and then call canExecute on the InitializeCopyCommand's.
WITHOUT_CLASSIFICATION	We'll assume that all the CreateCopyCommand's and InitializeCopyCommand's can execute.
WITHOUT_CLASSIFICATION	This will call prepare() which will partially execute the command.
WITHOUT_CLASSIFICATION	We need to check canExecute() in case optimize is true.
WITHOUT_CLASSIFICATION	Create a command to create a copy of the object.
WITHOUT_CLASSIFICATION	This handles IStructuredSelection.
WITHOUT_CLASSIFICATION	setResourceFactoryRegister(new ExtensibleContextResourceFactoryRegister()); EATM setResourceFactoryRegister(new ContextResourceFactoryRegister());
WITHOUT_CLASSIFICATION	If the owner parameter is set, we delegate to the owner's adapter
WITHOUT_CLASSIFICATION	If there is an adapter of the correct type...
WITHOUT_CLASSIFICATION	If command has no owner specified
WITHOUT_CLASSIFICATION	For RemoveCommand, we will find the owner by calling EditingDomain.getParent() on the object(s) being removed.
WITHOUT_CLASSIFICATION	If there is a column object, just convert it to a string.
WITHOUT_CLASSIFICATION	If there is an adapter of the correct type...
WITHOUT_CLASSIFICATION	If there is an adapter of the correct type...
WITHOUT_CLASSIFICATION	If there is an adapter of the correct type...
WITHOUT_CLASSIFICATION	Get the adapter from the factory.
WITHOUT_CLASSIFICATION	We will iterate over the whole collection, removing some as we go.
WITHOUT_CLASSIFICATION	Take the first object, and remove it.
WITHOUT_CLASSIFICATION	Determine the object's parent.
WITHOUT_CLASSIFICATION	Now we want to find all the other objects with this same parent. So we can collection siblings together and give the parent control over their removal.
WITHOUT_CLASSIFICATION	Get the next object and check if it has the same parent.
WITHOUT_CLASSIFICATION	Remove the object and add it as a sibling.
WITHOUT_CLASSIFICATION	We will now create a command with this implied parent
WITHOUT_CLASSIFICATION	The parent is null, which implies a top-level removal, so create a self-removing command.
WITHOUT_CLASSIFICATION	If no object is specified, but an existing sibling is, the object is its parent.
WITHOUT_CLASSIFICATION	protected Object labelProvider;
WITHOUT_CLASSIFICATION	return getDefaultValue(attribute.getEType());
WITHOUT_CLASSIFICATION	If any children were added or removed, reset the indices.
WITHOUT_CLASSIFICATION	Get the URI of the model file.
WITHOUT_CLASSIFICATION	isValidIANAEncoding(String):boolean
WITHOUT_CLASSIFICATION	Wrap any new children and add them to the map. Remove each current child from the set of old children.
WITHOUT_CLASSIFICATION	Remove and dispose any wrappers for remaining old children.
WITHOUT_CLASSIFICATION	A SetCommand needs to go through SetCommand.create() to ensure it can execute and undo.
WITHOUT_CLASSIFICATION	protected Command createSetCommand(EditingDomain domain, Object owner, Object feature, Object value) { return ((IEditingDomainItemProvider)decoratedItemProvider).createCommand (owner, domain, SetCommand.class, new CommandParameter(owner, feature, value)); } protected Command createCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper) { return ((IEditingDomainItemProvider)decoratedItemProvider).createCommand (owner, domain, CopyCommand.class, new CommandParameter(owner, null, helper)); } protected Command createCreateCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper) { return ((IEditingDomainItemProvider)decoratedItemProvider).createCommand (owner, domain, CreateCopyCommand.class, new CommandParameter(owner, null, helper)); } protected Command createInitializeCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper) { return ((IEditingDomainItemProvider)decoratedItemProvider).createCommand (owner, domain, InitializeCopyCommand.class, new CommandParameter(owner, null, helper)); } protected Command createRemoveCommand(EditingDomain domain, Object owner, Object feature, Collection collection) { return ((IEditingDomainItemProvider)decoratedItemProvider).createCommand (owner, domain, RemoveCommand.class, new CommandParameter(owner, feature, collection)); } protected Command createReplaceCommand(EditingDomain domain, Object owner, Object feature, Object value, Collection collection) { return ((IEditingDomainItemProvider)decoratedItemProvider).createCommand (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, collection)); } protected Command createAddCommand(EditingDomain domain, Object owner, Object feature, Collection collection, int index) { return ((IEditingDomainItemProvider)decoratedItemProvider).createCommand (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, collection, index)); } protected Command createMoveCommand(EditingDomain domain, Object owner, Object feature, Object value, int index) { return ((IEditingDomainItemProvider)decoratedItemProvider).createCommand (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, index)); } protected Command createDragAndDropCommand (EditingDomain domain, Object owner, float location, int operations, int operation, Collection collection) { DragAndDropCommand.Detail detail = new DragAndDropCommand.Detail(location, operations, operation); return ((IEditingDomainItemProvider)decoratedItemProvider).createCommand (owner, domain, DragAndDropCommand.class, new CommandParameter(owner, detail, collection)); }
WITHOUT_CLASSIFICATION	Get the adapter from the factory.
WITHOUT_CLASSIFICATION	Now we could check that the adapter implements interface ITableItemLabelProvider.
WITHOUT_CLASSIFICATION	Now we could check that the adapter implements interface ITableItemLabelProvider.
WITHOUT_CLASSIFICATION	And delegate the call.
WITHOUT_CLASSIFICATION	And delegate the call.
WITHOUT_CLASSIFICATION	And delegate the call.
WITHOUT_CLASSIFICATION	Otherwise, we could check that the adapter implements interface IItemLabelProvider.
WITHOUT_CLASSIFICATION	Get the adapter from the factory.
WITHOUT_CLASSIFICATION	And delegate the call.
WITHOUT_CLASSIFICATION	no-op
WITHOUT_CLASSIFICATION	And delegate the call.
WITHOUT_CLASSIFICATION	And delegate the call.
WITHOUT_CLASSIFICATION	And delegate the call.
WITHOUT_CLASSIFICATION	And delegate the call.
WITHOUT_CLASSIFICATION	Otherwise, we could check that the adapter implements interface IItemLabelProvider.
WITHOUT_CLASSIFICATION	Now we could check that the adapter implements interface ITableItemFontProvider.
WITHOUT_CLASSIFICATION	No font is a good default.
WITHOUT_CLASSIFICATION	Otherwise, we could check that the adapter implements interface IItemFontProvider.
WITHOUT_CLASSIFICATION	No color is a good default.
WITHOUT_CLASSIFICATION	No color is a good default.
WITHOUT_CLASSIFICATION	Now we could check that the adapter implements interface ITableItemColorProvider.
WITHOUT_CLASSIFICATION	Now we could check that the adapter implements interface ITableItemColorProvider.
WITHOUT_CLASSIFICATION	Otherwise, we could check that the adapter implements interface IItemColorProvider.
WITHOUT_CLASSIFICATION	Otherwise, we could check that the adapter implements interface IItemColorProvider.
WITHOUT_CLASSIFICATION	Either delegate the call or return nothing.
WITHOUT_CLASSIFICATION	Either delegate the call or return nothing.
WITHOUT_CLASSIFICATION	Either delegate the call or return nothing.
WITHOUT_CLASSIFICATION	public String getUpdateableText(Object object)
WITHOUT_CLASSIFICATION	Either delegate the call or return nothing.
WITHOUT_CLASSIFICATION	Either delegate the call or return nothing.
WITHOUT_CLASSIFICATION	When the value is changed, the property sheet page doesn't update the property sheet viewer input before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the model object. return needsEncoding(feature) ? encode((String)getEntryValue()) : getEntryValue();
WITHOUT_CLASSIFICATION	Check that the value is type compatible with the entry feature.
WITHOUT_CLASSIFICATION	When the value is changed, the property sheet page doesn't update the property sheet viewer input before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the model object. return value;
WITHOUT_CLASSIFICATION	If the last object was deleted and the selection was in the property sheet view, the obsolete wrapper will reference past the end of the list.
WITHOUT_CLASSIFICATION	Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us the children.
WITHOUT_CLASSIFICATION	Use an existing getReferenceValue() override.
WITHOUT_CLASSIFICATION	First, try an existing implementation of getChildReference(). This provides backwards compatibility if that method, now deprecated, was overridden.
WITHOUT_CLASSIFICATION	Iterate over all the child references to factor each child to the right reference.
WITHOUT_CLASSIFICATION	If this object is compatible with this reference...
WITHOUT_CLASSIFICATION	Iterate over all the set feature to factor each child to the right reference.
WITHOUT_CLASSIFICATION	Build the collection of new child descriptors.
WITHOUT_CLASSIFICATION	Add child descriptors contributed by extenders.
WITHOUT_CLASSIFICATION	If a sibling has been specified, add the best index possible to each CommandParameter.
WITHOUT_CLASSIFICATION	Find the index of a feature containing the sibling, or an equivalent value, in the collection of children features.
WITHOUT_CLASSIFICATION	For each CommandParameter with a non-null, multi-valued structural feature...
WITHOUT_CLASSIFICATION	Look for the sibling value or an equivalent in the new child's feature. If it is found, the child should immediately follow it.
WITHOUT_CLASSIFICATION	Otherwise, if a sibling feature was found, iterate through the children features to find the index of the child feature...
WITHOUT_CLASSIFICATION	If the child feature follows the sibling feature, the child should be first in its feature.
WITHOUT_CLASSIFICATION	Subclasses may override to add descriptors.
WITHOUT_CLASSIFICATION	If necessary, get a command that replaces unwrapped values by their wrappers in the result and affected objects.
WITHOUT_CLASSIFICATION	Iterator over all the child references to factor each child to the right reference.
WITHOUT_CLASSIFICATION	If it is a list type value...
WITHOUT_CLASSIFICATION	If it is a list type value...
WITHOUT_CLASSIFICATION	Is this object in this feature...
WITHOUT_CLASSIFICATION	Is this object in this feature...
WITHOUT_CLASSIFICATION	Add it to the list and remove it from the other list.
WITHOUT_CLASSIFICATION	If we have children to remove for this feature, create a command for it.
WITHOUT_CLASSIFICATION	It's just a single value
WITHOUT_CLASSIFICATION	Create a command to set this to null and remove the object from the other list.
WITHOUT_CLASSIFICATION	If all the objects are used up by the above, then we can't do the command.
WITHOUT_CLASSIFICATION	Correct the index, if necessary.
WITHOUT_CLASSIFICATION	Consume the rest of the appropriate children.
WITHOUT_CLASSIFICATION	Is this child in this feature...
WITHOUT_CLASSIFICATION	Create a command for this feature,
WITHOUT_CLASSIFICATION	If all the objects aren't used up by the above, then we can't do the command.
WITHOUT_CLASSIFICATION	Compute the relative index as best as possible.
WITHOUT_CLASSIFICATION	Create a command for this feature,
WITHOUT_CLASSIFICATION	continue to next case
WITHOUT_CLASSIFICATION	All this logic is so that we only create a list if the adapter is set to more than one target.
WITHOUT_CLASSIFICATION	Dispose the child wrappers.
WITHOUT_CLASSIFICATION	Ignore the unset notification for an isMany feature; the value is boolean in this case.
WITHOUT_CLASSIFICATION	No index specified when removing all elements.
WITHOUT_CLASSIFICATION	We need the wrapper, not the item provider, to handle a DragAndDropCommand; the move, add, remove, etc. commands that implement it will have their values unwrapped as usual.
WITHOUT_CLASSIFICATION	Unwrap collection.
WITHOUT_CLASSIFICATION	If the first wrapped value is found...
WITHOUT_CLASSIFICATION	Allocate the new collection, and populate it up to this point.
WITHOUT_CLASSIFICATION	If a new collection was allocated, continue to populate it.
WITHOUT_CLASSIFICATION	Unwrap value.
WITHOUT_CLASSIFICATION	Wrappers from the old command parameter must be considered in order for cut and paste to work.
WITHOUT_CLASSIFICATION	If the adapter factory is composeable, we'll adapt using the root.
WITHOUT_CLASSIFICATION	Build list of wrapped children from the appropriate adapters.
WITHOUT_CLASSIFICATION	Add in additional wrappers to search.
WITHOUT_CLASSIFICATION	Returns the help context id for this property.
WITHOUT_CLASSIFICATION	ResourceSet resourceSet = (ResourceSet)object; childrenFeatures.add(ResourcePackage.eINSTANCE.getResourceSet_Resources());
WITHOUT_CLASSIFICATION	Does this part provide an editing domain?
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Javadoc copied from base class.
WITHOUT_CLASSIFICATION	Obtain or create and register package
WITHOUT_CLASSIFICATION	Initialize simple dependencies
WITHOUT_CLASSIFICATION	Create package meta-data objects
WITHOUT_CLASSIFICATION	Initialize created meta-data
WITHOUT_CLASSIFICATION	Mark meta-data to indicate it can't be changed
WITHOUT_CLASSIFICATION	Create classes and their features
WITHOUT_CLASSIFICATION	Initialize package
WITHOUT_CLASSIFICATION	Obtain other dependent packages
WITHOUT_CLASSIFICATION	Create type parameters
WITHOUT_CLASSIFICATION	Set bounds for type parameters
WITHOUT_CLASSIFICATION	Add supertypes to classes
WITHOUT_CLASSIFICATION	Initialize classes and features; add operations and parameters
WITHOUT_CLASSIFICATION	Create resource
WITHOUT_CLASSIFICATION	The switch that delegates to the <code>createXXX</code> methods. <!-- begin-user-doc --> <!-- end-user-doc --> @generated
WITHOUT_CLASSIFICATION	There are attributes to handle.
WITHOUT_CLASSIFICATION	This ensure that this package itself is traversed even if the reference type is EObject...
WITHOUT_CLASSIFICATION	Look for each unwrapped object as a value of a wrapper, replacing it with the first one found.
WITHOUT_CLASSIFICATION	Is this a containment reference child?
WITHOUT_CLASSIFICATION	Is this the label feature?
WITHOUT_CLASSIFICATION	Or a feature map child?
WITHOUT_CLASSIFICATION	Don't include controlled children here, they'll show up under their container.
WITHOUT_CLASSIFICATION	Resource resource = (Resource)object; childrenFeatures.add(ResourcePackage.eINSTANCE.getResource_Contents());
WITHOUT_CLASSIFICATION	Overlay if the resource is the target for any controlled objects.
WITHOUT_CLASSIFICATION	case Resource.RESOURCE__IS_MODIFIED: case Resource.RESOURCE__IS_LOADED: case Resource.RESOURCE__IS_TRACKING_MODIFICATION: case Resource.RESOURCE__RESOURCE_SET:
WITHOUT_CLASSIFICATION	TreeNode
WITHOUT_CLASSIFICATION	TreeFactory
WITHOUT_CLASSIFICATION	TreePackage
WITHOUT_CLASSIFICATION	TreeFactoryImpl
WITHOUT_CLASSIFICATION	TreeNodeImpl
WITHOUT_CLASSIFICATION	TreePackageImpl
WITHOUT_CLASSIFICATION	super.collectNewChildDescriptors(newChildDescriptors, object);
WITHOUT_CLASSIFICATION	TreeAdapterFactory
WITHOUT_CLASSIFICATION	TreeSwitch
WITHOUT_CLASSIFICATION	This is for backwards compatibility, since the constructor may have been overridden before it was expected to set actionDelegate.
WITHOUT_CLASSIFICATION	If there is a new one...
WITHOUT_CLASSIFICATION	This guard is for extra security, but should not be necessary.
WITHOUT_CLASSIFICATION	Use up the command. Note that notification will cause a new command to be created.
WITHOUT_CLASSIFICATION	We will only deal with structured selections.
WITHOUT_CLASSIFICATION	If we aren't getting the domain from the workbench part... This happens when this action is used for a global popup action. We try to get the editing domain from one of the objects in the selection. DMS editingDomain == null) ?
WITHOUT_CLASSIFICATION	If we have a good editing domain...
WITHOUT_CLASSIFICATION	Delegate the action for this object to the editing domain.
WITHOUT_CLASSIFICATION	We can enable the action as indicated by the command, and we can set all the other values from the command.
WITHOUT_CLASSIFICATION	Nothing more to do and we don't want to do the default stuff below.
WITHOUT_CLASSIFICATION	We just can't do it.
WITHOUT_CLASSIFICATION	No point in keeping garbage.
WITHOUT_CLASSIFICATION	Show the colourless image.
WITHOUT_CLASSIFICATION	try to get editing domain from workbench part
WITHOUT_CLASSIFICATION	only handle structured selections
WITHOUT_CLASSIFICATION	convert the selection to a collection of the selected objects
WITHOUT_CLASSIFICATION	if the editing domain wasn't given by the workbench part, try to get it from the selection
WITHOUT_CLASSIFICATION	if we found an editing domain, create command
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	use up the command
WITHOUT_CLASSIFICATION	Add our standard marker.
WITHOUT_CLASSIFICATION	Add the edit menu actions.
WITHOUT_CLASSIFICATION	Add our other standard marker.
WITHOUT_CLASSIFICATION	For the control case, we need a dialog to ask for the URI and obtain the resource, then we create the command.
WITHOUT_CLASSIFICATION	Ensure that all proxies are resolved so that references into the controlled object will be saved to reference the new resource.
WITHOUT_CLASSIFICATION	grabHorizontal = true;
WITHOUT_CLASSIFICATION	We use multi even for a single line because we want to respond to the enter key.
WITHOUT_CLASSIFICATION	event is null when choiceTableViewer is double clicked
WITHOUT_CLASSIFICATION	event is null when featureTableViewer is double clicked
WITHOUT_CLASSIFICATION	In column 0, the drop-down is indented past the collapse/expand icon.
WITHOUT_CLASSIFICATION	dropDown.addListener(SWT.Paint, dropDownListener);
WITHOUT_CLASSIFICATION	This should be consistent with paintControl().
WITHOUT_CLASSIFICATION	setEditor(null, null, -1);
WITHOUT_CLASSIFICATION	Fill with background.
WITHOUT_CLASSIFICATION	Draw the icons.
WITHOUT_CLASSIFICATION	Draw the text.
WITHOUT_CLASSIFICATION	EATM Color startColor = display.getSystemColor(SWT.COLOR_LIST_SELECTION);
WITHOUT_CLASSIFICATION	Remember the requested operation.
WITHOUT_CLASSIFICATION	Remember the requested operation.
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.jface.window.Window#configureShell(org.eclipse.swt.widgets.Shell)
WITHOUT_CLASSIFICATION	Draw background of right-side button.
WITHOUT_CLASSIFICATION	Draw down arrow, offset if dropped.
WITHOUT_CLASSIFICATION	Draw ellipses, offset if down.
WITHOUT_CLASSIFICATION	Draw outline.
WITHOUT_CLASSIFICATION	Draw 3D effect on right-side button.
WITHOUT_CLASSIFICATION	Remember the viewer and listen to SWT.DragDetect to alert the start of the drag operation.
WITHOUT_CLASSIFICATION	Clear the source data. We won't need this again, since, if it was available, it's already in the command.
WITHOUT_CLASSIFICATION	A command was created if the source was available early, and the information used to create it was cached...
WITHOUT_CLASSIFICATION	Recreate the command.
WITHOUT_CLASSIFICATION	Otherwise, the source should be available now as event.data, and we can create the command.
WITHOUT_CLASSIFICATION	If the command can execute...
WITHOUT_CLASSIFICATION	Execute it.
WITHOUT_CLASSIFICATION	Otherwise, let's call the whole thing off.
WITHOUT_CLASSIFICATION	Clean up the state.
WITHOUT_CLASSIFICATION	If we can't do anything else, we'll provide the default select feedback and enable auto-scroll and auto-expand effects.
WITHOUT_CLASSIFICATION	Clear out any old information from a previous drag.
WITHOUT_CLASSIFICATION	Get the target object from the item widget and the mouse location in it.
WITHOUT_CLASSIFICATION	Determine if we can create a valid command at the current location.
WITHOUT_CLASSIFICATION	If we don't have a previous cached command...
WITHOUT_CLASSIFICATION	Remember the target; create the command and test if it is executable.
WITHOUT_CLASSIFICATION	Keep track of any changes to the command information.
WITHOUT_CLASSIFICATION	(non-Javadoc) Method declared on Dialog.
WITHOUT_CLASSIFICATION	create OK and Cancel buttons by default
WITHOUT_CLASSIFICATION	create composite
WITHOUT_CLASSIFICATION	generateColor();
WITHOUT_CLASSIFICATION	}}
WITHOUT_CLASSIFICATION	Either delegate the call or return nothing.
WITHOUT_CLASSIFICATION	Either delegate the call or return nothing.
WITHOUT_CLASSIFICATION	Either delegate the call or return nothing.
WITHOUT_CLASSIFICATION	Either delegate the call or return nothing.
WITHOUT_CLASSIFICATION	Check if the cached command can provide DND feedback/revalidation.
WITHOUT_CLASSIFICATION	If so, revalidate the command.
WITHOUT_CLASSIFICATION	If not, dispose the current command and create a new one.
WITHOUT_CLASSIFICATION	If this command can provide detailed drag and drop feedback...
WITHOUT_CLASSIFICATION	Use it for the operation and drag under effect.
WITHOUT_CLASSIFICATION	There is no executable command, so we'd better nix the whole deal.
WITHOUT_CLASSIFICATION	Check whether the current data type can be transfered locally.
WITHOUT_CLASSIFICATION	Iterate over the data types to see if there is a data type that supports a local transfer.
WITHOUT_CLASSIFICATION	If the local transfer supports this data type, switch to that data type
WITHOUT_CLASSIFICATION	Transfer the data and, if non-null, extract it.
WITHOUT_CLASSIFICATION	Transfer the data and convert the structured selection to a collection of objects.
WITHOUT_CLASSIFICATION	do this here because setting the text will set enablement on the OK button
WITHOUT_CLASSIFICATION	| GridData.GRAB_VERTICAL
WITHOUT_CLASSIFICATION	Set the error message text See https:bugs.eclipse.org/bugs/show_bug.cgi?id=66292
WITHOUT_CLASSIFICATION	If there was no old input, then we must be providing content for this part for the first time...
WITHOUT_CLASSIFICATION	If the notification is an IViewerNotification, it specifies how ViewerRefresh should behave. Otherwise fall back to NotifyChangedToViewerRefresh, which determines how to refresh the viewer directly from the model notification.
WITHOUT_CLASSIFICATION	Get the adapter from the factory.
WITHOUT_CLASSIFICATION	Now we could check that the adapter implements interface ITableItemLabelProvider.
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Now we could check that the adapter implements interface ITableItemLabelProvider.
WITHOUT_CLASSIFICATION	And delegate the call.
WITHOUT_CLASSIFICATION	And delegate the call.
WITHOUT_CLASSIFICATION	And delegate the call.
WITHOUT_CLASSIFICATION	Otherwise, we could check that the adapter implements interface IItemLabelProvider.
WITHOUT_CLASSIFICATION	Otherwise, we could check that the adapter implements interface IItemLabelProvider.
WITHOUT_CLASSIFICATION	No image is a good default.
WITHOUT_CLASSIFICATION	This implements the following order of preference: 1. full refresh and update 2. full refresh (add update if necessary) 3. refresh element with update 4. refresh element (if necessary) 5. update element
WITHOUT_CLASSIFICATION	n2.isLabelUpdate()
WITHOUT_CLASSIFICATION	Previously, we never updated the viewer on a resolve. Now we post and merge it as appropriate.
WITHOUT_CLASSIFICATION	???
WITHOUT_CLASSIFICATION	case Notification.TOUCH:
WITHOUT_CLASSIFICATION	We ignore non-changes for now.
WITHOUT_CLASSIFICATION	fireLabelProviderChanged();
WITHOUT_CLASSIFICATION	Remember the static instance.
WITHOUT_CLASSIFICATION	Remember the static instance.
WITHOUT_CLASSIFICATION	Subclasses may override
WITHOUT_CLASSIFICATION	Subclasses may override
WITHOUT_CLASSIFICATION	Empty extension to limit the effect of suppressing the deprecation warning.
WITHOUT_CLASSIFICATION	Empty extension to limit the effect of suppressing the deprecation warning.
WITHOUT_CLASSIFICATION	Ignore any exceptions and assume the class isn't available.
WITHOUT_CLASSIFICATION	Ignore any exceptions and assume the class isn't available.
WITHOUT_CLASSIFICATION	Get the adapter from the factory.
WITHOUT_CLASSIFICATION	Get the adapter from the factory.
WITHOUT_CLASSIFICATION	Get the adapter from the factory.
WITHOUT_CLASSIFICATION	And delegate the call.
WITHOUT_CLASSIFICATION	And delegate the call.
WITHOUT_CLASSIFICATION	And delegate the call.
WITHOUT_CLASSIFICATION	If there is a column object, just convert it to a string.
WITHOUT_CLASSIFICATION	No font is a good default.
WITHOUT_CLASSIFICATION	Now we could check that the adapter implements interface ITableItemFontProvider.
WITHOUT_CLASSIFICATION	Otherwise, we could check that the adapter implements interface IItemFontProvider.
WITHOUT_CLASSIFICATION	No color is a good default.
WITHOUT_CLASSIFICATION	No color is a good default.
WITHOUT_CLASSIFICATION	Now we could check that the adapter implements interface ITableItemColorProvider.
WITHOUT_CLASSIFICATION	Now we could check that the adapter implements interface ITableItemColorProvider.
WITHOUT_CLASSIFICATION	Otherwise, we could check that the adapter implements interface IItemColorProvider.
WITHOUT_CLASSIFICATION	Otherwise, we could check that the adapter implements interface IItemColorProvider.
WITHOUT_CLASSIFICATION	The class is not available.
WITHOUT_CLASSIFICATION	Nested GenAnnotations
WITHOUT_CLASSIFICATION	For debugging purposes. May be removed in the future.
WITHOUT_CLASSIFICATION	We don't need to encode here because the only platform resource URIs in the map are for projects whose names are the same as corresponding plug-in IDs, and hence never need to be encoded (see EcorePlugin.computePlatformResourceToPlatformPluginMap()).
WITHOUT_CLASSIFICATION	Create resources for all the root EPackages.
WITHOUT_CLASSIFICATION	removing the first space
WITHOUT_CLASSIFICATION	Subclasses may overwrite
WITHOUT_CLASSIFICATION	Create resources for all the referenced EPackages The referencedEPackage is a "local" instance of the realEPackage. We will add the former to a resource that has the same URI of the later.
WITHOUT_CLASSIFICATION	Initialize the GenModel with all the computed data.
WITHOUT_CLASSIFICATION	Restore all configured settings from the original.
WITHOUT_CLASSIFICATION	Handle application genmodel stub
WITHOUT_CLASSIFICATION	Determine which projects will need to be referenced.
WITHOUT_CLASSIFICATION	Create the model project.
WITHOUT_CLASSIFICATION	Add a dummy GenModel for referenced packages.
WITHOUT_CLASSIFICATION	Special case for a reference to Ecore to ensure that flag settings are respected and are set only for Ecore itself.
WITHOUT_CLASSIFICATION	Walk the project looking for .java files to analyze.
WITHOUT_CLASSIFICATION	If we have resolved to an EClass but we have an EAttribute, we can change it to be an EReference.
WITHOUT_CLASSIFICATION	Now we need to hook up opposites by finding the named feature in the type.
WITHOUT_CLASSIFICATION	Containers are transient by default unless explicitly annotated otherwise.
WITHOUT_CLASSIFICATION	Now we need to hook up keys by finding the named feature in the type.
WITHOUT_CLASSIFICATION	Clean up the temporary container annotations for holding map entry classes until they are for sure needed.
WITHOUT_CLASSIFICATION	Now we should sort.
WITHOUT_CLASSIFICATION	Find the fragment root so that we can generate to the right location (by default).
WITHOUT_CLASSIFICATION	Iterate over all projects to look at the manifests.
WITHOUT_CLASSIFICATION	Determine the required plugins.
WITHOUT_CLASSIFICATION	Iterate over all the plugin IDs to determine the dependency closure. The list grows as the plugins are visited.
WITHOUT_CLASSIFICATION	Also add each required plugin for consideration in the loop.
WITHOUT_CLASSIFICATION	If it's a platform plugin URI, include it in the map.
WITHOUT_CLASSIFICATION	Keep only the plugins that have GenModels for consideration.
WITHOUT_CLASSIFICATION	Consider each GenModel location URI for each required plugin.
WITHOUT_CLASSIFICATION	Compute the closure.
WITHOUT_CLASSIFICATION	use no encoding
WITHOUT_CLASSIFICATION	Walk the fields.
WITHOUT_CLASSIFICATION	Create the EPackage on demand.
WITHOUT_CLASSIFICATION	Check whether this has @model annotation contents. If not, it might be a package interface, for backwards compatibility.
WITHOUT_CLASSIFICATION	Get the package name and see if there's an EPackage for it.
WITHOUT_CLASSIFICATION	If it's an interface, then it will be treated as an EClass
WITHOUT_CLASSIFICATION	Create a generic super type with an EClass as the classifier for each super interface in the Java representation.
WITHOUT_CLASSIFICATION	Create a generic super type with an EClass as the classifier for each super interface in the @model representation
WITHOUT_CLASSIFICATION	Match them and accumulate the appropriate result.
WITHOUT_CLASSIFICATION	Walk the methods.
WITHOUT_CLASSIFICATION	Additional attributes and references may be defined directly on the interface in order to allow the get accessor method to have suppressed visibility.
WITHOUT_CLASSIFICATION	Otherwise it's treated as an EEnum
WITHOUT_CLASSIFICATION	Find Packages and Factories
WITHOUT_CLASSIFICATION	It's definitely a package if it was declared as such.
WITHOUT_CLASSIFICATION	It's definitely a package if expected constants eNAME, eNS_PREFIX, or eNS_URI appear.
WITHOUT_CLASSIFICATION	This will catch inherited features, or additional things we don't want to worry about.
WITHOUT_CLASSIFICATION	Check whether this has @model annotation contents.
WITHOUT_CLASSIFICATION	An operation is declared via the kind property or, for backwards compatibility, by specifying parameters (though attribute or reference kind takes precedence).
WITHOUT_CLASSIFICATION	Map to an EEnum.
WITHOUT_CLASSIFICATION	The feature name is extracted lower cased.
WITHOUT_CLASSIFICATION	The name is extracted and lower cased.
WITHOUT_CLASSIFICATION	Each token in parameters will specify a dataType for the corresponding parameter, but can be overridden by a parameter-name-prefixed dataType property.
WITHOUT_CLASSIFICATION	Each token in exceptions will specify a data type for the corresponding exception.
WITHOUT_CLASSIFICATION	If we aren't doing an operation...
WITHOUT_CLASSIFICATION	We'll create one of these.
WITHOUT_CLASSIFICATION	If any of these attributes appear, this must be a reference.
WITHOUT_CLASSIFICATION	Set the EReference attributes.
WITHOUT_CLASSIFICATION	Defer the handling of the opposite.
WITHOUT_CLASSIFICATION	Set the visibility annotations for the EstructuralFeature.
WITHOUT_CLASSIFICATION	Set the EAttribute attributes.
WITHOUT_CLASSIFICATION	Handle the type, multiplicity and other ETypedElement attributes.
WITHOUT_CLASSIFICATION	Set the EStructuralFeature attributes.
WITHOUT_CLASSIFICATION	Process the annotations.
WITHOUT_CLASSIFICATION	For lists, maps, and feature maps, the default is many-valued, which can be overridden by an upper-bound declaration.
WITHOUT_CLASSIFICATION	The type can be augmented by specifying the it explicitly in the annotation. This mostly makes sense only for many-valued typed elements, where the Java type is a list and the item type needs to be specified.
WITHOUT_CLASSIFICATION	Allow the value to be defined by an annotation or by the field's initializer
WITHOUT_CLASSIFICATION	Allow a distinct literal value to be provided, too.
WITHOUT_CLASSIFICATION	Create classes and their features
WITHOUT_CLASSIFICATION	Allow a mixed case version of the name to be provided.
WITHOUT_CLASSIFICATION	But, if name doesn't expand into field name, ignore it.
WITHOUT_CLASSIFICATION	If there is no Ecore representation or it's invalid, e.g., when - is used to omit a specification, then just use the Java representation.
WITHOUT_CLASSIFICATION	We want to resolve to this.
WITHOUT_CLASSIFICATION	Check if it is exactly the name of a type parameter that's in scope.
WITHOUT_CLASSIFICATION	Check if the name is qualified
WITHOUT_CLASSIFICATION	For arrays, consider the element type.
WITHOUT_CLASSIFICATION	Find an explicit import or the first wildcard import.
WITHOUT_CLASSIFICATION	Find the modeled package for the import and look up the name there.
WITHOUT_CLASSIFICATION	If we can't find it, try the simple name in the package...
WITHOUT_CLASSIFICATION	Find the modeled package for the name and look up the name there.
WITHOUT_CLASSIFICATION	If we still don't have one, we'll have to settle for an EDataType or EClass with an instance class name.
WITHOUT_CLASSIFICATION	Remember the static instance.
WITHOUT_CLASSIFICATION	Initialize package
WITHOUT_CLASSIFICATION	See if we already have the EDataType.
WITHOUT_CLASSIFICATION	Just to be helpful, we'll recognize a type of org.eclipse.emf.ecore.util.FeatureMap and convert it to EFeatureMapEntry. This way a dataType need not be specified. But, we won't do this if recordDemandCreateEDataType is false, so we don't change the instanceClass of a new EDataType that's implicitly being defined for FeatureMap.
WITHOUT_CLASSIFICATION	If we don't have one yet, maybe it's one of the special types...
WITHOUT_CLASSIFICATION	If we still don't have one, we'll have to settle for a demand created EDataType or EClass, so create a new EClassifier with a nice unique name.
WITHOUT_CLASSIFICATION	If the name isn't qualified, it might be a primitive or from java.lang. Otherwise, assume it's in the current package and use the nsPrefix for the qualified package name.
WITHOUT_CLASSIFICATION	Even primitives should be represented by a data type with a conventional (i.e. capitalized) name.
WITHOUT_CLASSIFICATION	Make array names legal.
WITHOUT_CLASSIFICATION	Avoid classifier name collisions.
WITHOUT_CLASSIFICATION	For the model information.
WITHOUT_CLASSIFICATION	This is package, so check the package information if this is in cat file. If it is, then load the .cat file into the tree thereby traversing it; otherwise, just traverse the tree.
WITHOUT_CLASSIFICATION	The package is in a .cat file.
WITHOUT_CLASSIFICATION	The package not in a .cat file.
WITHOUT_CLASSIFICATION	This could potentially map every created model element to its corresponding Rose node. However, for now we're only using it as needed.
WITHOUT_CLASSIFICATION	Get the parent object.
WITHOUT_CLASSIFICATION	Map to an EPackage.
WITHOUT_CLASSIFICATION	Add to package.
WITHOUT_CLASSIFICATION	Map to an EClass.
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	Map to an EDataType.
WITHOUT_CLASSIFICATION	Map to an EDataType.
WITHOUT_CLASSIFICATION	Map to an eClass.
WITHOUT_CLASSIFICATION	Map to an EOperation.
WITHOUT_CLASSIFICATION	Add to an EClass
WITHOUT_CLASSIFICATION	Map to an EParameter as input parameter for operation.
WITHOUT_CLASSIFICATION	Do this first for better error message during setEParameterProperties.
WITHOUT_CLASSIFICATION	Map to EAttribute, or EEnumLiteral.
WITHOUT_CLASSIFICATION	We will need to check the containment if we have to convert the EAttribute to an EReference later.
WITHOUT_CLASSIFICATION	Convert to an EReference.
WITHOUT_CLASSIFICATION	map to EReference when is navigable
WITHOUT_CLASSIFICATION	eReference.setNavigable(roseNode.isNavigable());
WITHOUT_CLASSIFICATION	eClass.getESuperTypes().addAll(extend); eClass.getESuperTypes().addAll(unspecified); eClass.getESuperTypes().addAll(mixin); eClass.getESuperTypes().addAll(nonClass);
WITHOUT_CLASSIFICATION	try to retrieve the fully qualified name of the specified type...
WITHOUT_CLASSIFICATION	convert to dot-separated format if necessary...
WITHOUT_CLASSIFICATION	remove garbage characters...
WITHOUT_CLASSIFICATION	qualify type name if not already qualified...
WITHOUT_CLASSIFICATION	default value
WITHOUT_CLASSIFICATION	Order first by number of features (descending) and then alphabetically (ascending)
WITHOUT_CLASSIFICATION	Temporary WAS/WSAD migration option.
WITHOUT_CLASSIFICATION	A container must be transient.
WITHOUT_CLASSIFICATION	setup attribute and parameter type
WITHOUT_CLASSIFICATION	Convert attributes of with EClass type to references.
WITHOUT_CLASSIFICATION	It was not found in the model class so check if primitive type.
WITHOUT_CLASSIFICATION	Convert reference to attribute if its type is an EDataType...
WITHOUT_CLASSIFICATION	Store the base name for relative .cat file references.
WITHOUT_CLASSIFICATION	read mdl file...
WITHOUT_CLASSIFICATION	special case, traverse cat file or mdl file
WITHOUT_CLASSIFICATION	file is a mdl file get model name
WITHOUT_CLASSIFICATION	cat(unit) file referenced by mdl file
WITHOUT_CLASSIFICATION	Process the children of the UnitTreeNode recursively.
WITHOUT_CLASSIFICATION	directoryName.length() > 0 && directoryName.charAt(0) == '$')
WITHOUT_CLASSIFICATION	map properties even when isTreeOnly == true
WITHOUT_CLASSIFICATION	top++;
WITHOUT_CLASSIFICATION	7 is the size of (object
WITHOUT_CLASSIFICATION	5 is the size of (list
WITHOUT_CLASSIFICATION	6 is the size of (value
WITHOUT_CLASSIFICATION	size should be 1
WITHOUT_CLASSIFICATION	could this happen?
WITHOUT_CLASSIFICATION	Process the children of the UnitTreeNode recursively.
WITHOUT_CLASSIFICATION	Process the contents of the extent
WITHOUT_CLASSIFICATION	Load the Rose .mdl or .cat file, and create mappings for the objects.
WITHOUT_CLASSIFICATION	This sets the parent so that the nodes can traverse to the root to find default eCore settings.
WITHOUT_CLASSIFICATION	Start second traverse to create mapping objects in memory.
WITHOUT_CLASSIFICATION	Only one open quote.
WITHOUT_CLASSIFICATION	This will not add duplicates.
WITHOUT_CLASSIFICATION	No additional features MappingStrategy
WITHOUT_CLASSIFICATION	MappingPackage
WITHOUT_CLASSIFICATION	ComplexTypeConverter
WITHOUT_CLASSIFICATION	No additional features TypeConverter
WITHOUT_CLASSIFICATION	MappingRoot
WITHOUT_CLASSIFICATION	FunctionNamePair
WITHOUT_CLASSIFICATION	MappingHelper
WITHOUT_CLASSIFICATION	MappingFactory
WITHOUT_CLASSIFICATION	FunctionPair
WITHOUT_CLASSIFICATION	mappingRoot.ePackageMapping().getMapping_Outputs() : mappingRoot.ePackageMapping().getMapping_Inputs(),
WITHOUT_CLASSIFICATION	mappingRoot.ePackageMapping().getMapping_Inputs() : mappingRoot.ePackageMapping().getMapping_Outputs(),
WITHOUT_CLASSIFICATION	This will deal with all the subcommands to modifying the root mapping tree.
WITHOUT_CLASSIFICATION	For each mapping being removed...
WITHOUT_CLASSIFICATION	Make sure the back pointers to this mapping from the mapped objects is set.
WITHOUT_CLASSIFICATION	subcommands.appendAndExecute(new RemoveCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), nestedMappings)); subcommands.appendAndExecute(new AddCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), nestedMappings));
WITHOUT_CLASSIFICATION	Since input objects are read-only, we don't need to make a copy of them for the clipboard. We can just put a pointer to the original object(s) on the clipboard.
WITHOUT_CLASSIFICATION	Do we also have some non-input objects to copy?
WITHOUT_CLASSIFICATION	Just remember it; it's encoded later during execution, which is more efficient.
WITHOUT_CLASSIFICATION	Do the encoding.
WITHOUT_CLASSIFICATION	Record the records for the executed commands on the stack.
WITHOUT_CLASSIFICATION	If there is more than one exact match, we must get an index number;
WITHOUT_CLASSIFICATION	Iterate over the whole tree to do this.
WITHOUT_CLASSIFICATION	Resource resource = EcoreUtil.getURI(refObject).; FIX:::
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()
WITHOUT_CLASSIFICATION	no-op
WITHOUT_CLASSIFICATION	no-op
WITHOUT_CLASSIFICATION	Make sure the back pointers to this mapping from the mapped objects is set.
WITHOUT_CLASSIFICATION	Iterate over the whole tree to do this.
WITHOUT_CLASSIFICATION	This is tricky and is done for each object here rather than once for the owner of the addCommnd. We want to make sure the object is really part of the conceptual tree induced by the domain.
WITHOUT_CLASSIFICATION	For each mapping being added...
WITHOUT_CLASSIFICATION	Check all the siblings to see which if any should now be nested under this new mapping. The are accumulated into a list so that they can be removed as a single command with a single notification.
WITHOUT_CLASSIFICATION	If there are siblings that need to be reparented.
WITHOUT_CLASSIFICATION	Create commands to do parentMapping.getNested().removeAll(siblingsToReparent).
WITHOUT_CLASSIFICATION	(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));
WITHOUT_CLASSIFICATION	Create commands to do mapping.getNested().addAll(siblingsToReparent).
WITHOUT_CLASSIFICATION	return false if iteration should continue.
WITHOUT_CLASSIFICATION	Now we'll do recursive MatchMapping. (We need to iterate over a copy, since we modify the underlying list in the loop.)
WITHOUT_CLASSIFICATION	(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object)));
WITHOUT_CLASSIFICATION	Get the corresponding type.
WITHOUT_CLASSIFICATION	Create the copy from this corresponding type.
WITHOUT_CLASSIFICATION	This is done to ensure that this new copy is treated as an output by the domain. The CreateMappingCommand will rely on this setting.
WITHOUT_CLASSIFICATION	Type matching never matches inputs that are already mapped
WITHOUT_CLASSIFICATION	commandList.add(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object));
WITHOUT_CLASSIFICATION	Copy the children references
WITHOUT_CLASSIFICATION	this will create the mapping as well
WITHOUT_CLASSIFICATION	Copy the name
WITHOUT_CLASSIFICATION	Copy the type
WITHOUT_CLASSIFICATION	We have done our preparation. Now ask the super to validate.
WITHOUT_CLASSIFICATION	Remove all the mappings from the root.
WITHOUT_CLASSIFICATION	removeCommand = RemoveCommand.create(domain, mappingRoot, mappingRoot.ePackageMapping().getMapping_Nested(), mappingRoot.getNested());
WITHOUT_CLASSIFICATION	This is the tricky part where we set the encoding that we'd like to have decoded as a series of commands to execute after this command has completed.
WITHOUT_CLASSIFICATION	domain.getMappingRoot().removeMapping(newMapping);
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.emf.mapping.action.AddRootBottomAction#getBottomsToAdd()
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	If eCore, return the ENamedElement name
WITHOUT_CLASSIFICATION	If there is an adapter of the correct type, return the item label
WITHOUT_CLASSIFICATION	If eCore, set the ENamedElement name
WITHOUT_CLASSIFICATION	This turns a featureless set command into an operation to create a mapping. This is invoked during drag and drop.
WITHOUT_CLASSIFICATION	If this is a RemoveCommand for a root input object, direct it to the MappingRoot.
WITHOUT_CLASSIFICATION	If the owner and the copy are of the same type, we can proceed with the command, i.e. no override. If not, we will skip this command by returning a do-nothing override.
WITHOUT_CLASSIFICATION	remove all sourceSeparator characters
WITHOUT_CLASSIFICATION	sourceSeparator == LABEL_NO_SEPARATOR
WITHOUT_CLASSIFICATION	add a targetSeparator in front of every upper case character
WITHOUT_CLASSIFICATION	type-mappings
WITHOUT_CLASSIFICATION	top-label-separator
WITHOUT_CLASSIFICATION	bottom-label-separator
WITHOUT_CLASSIFICATION	top-label-case
WITHOUT_CLASSIFICATION	bottom-label-case
WITHOUT_CLASSIFICATION	top-label-forms
WITHOUT_CLASSIFICATION	bottom-label-forms
WITHOUT_CLASSIFICATION	if for for
WITHOUT_CLASSIFICATION	The type string must be qualified by its package uri, e.g. DTD.xmi:DTDElement. The package uri is used to look up the package by calling RefRegister.getPackage(uri).
WITHOUT_CLASSIFICATION	Ecore2EcorePackage
WITHOUT_CLASSIFICATION	Ecore2EcoreMappingRoot
WITHOUT_CLASSIFICATION	Ecore2EcoreFactory
WITHOUT_CLASSIFICATION	Remember the static instance.
WITHOUT_CLASSIFICATION	Remember the static instance.
WITHOUT_CLASSIFICATION	Obtain other dependent packages
WITHOUT_CLASSIFICATION	Create type parameters
WITHOUT_CLASSIFICATION	Set bounds for type parameters
WITHOUT_CLASSIFICATION	Add supertypes to classes
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getInputEPackage()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getOutputEPackage()
WITHOUT_CLASSIFICATION	Initialize classes and features; add operations and parameters
WITHOUT_CLASSIFICATION	Create resource
WITHOUT_CLASSIFICATION	Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result. <!-- begin-user-doc --> <!-- end-user-doc --> @return the first non-null result returned by a <code>caseXXX</code> call. @generated
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result. <!-- begin-user-doc --> <!-- end-user-doc --> @return the first non-null result returned by a <code>caseXXX</code> call. @generated
WITHOUT_CLASSIFICATION	The switch that delegates to the <code>createXXX</code> methods. <!-- begin-user-doc --> <!-- end-user-doc --> @generated
WITHOUT_CLASSIFICATION	Open an editor on the new file.
WITHOUT_CLASSIFICATION	Remember the file.
WITHOUT_CLASSIFICATION	Do the work within an operation.
WITHOUT_CLASSIFICATION	Create a resource set
WITHOUT_CLASSIFICATION	Get the URI of the model file.
WITHOUT_CLASSIFICATION	Create a resource for this file.
WITHOUT_CLASSIFICATION	Add the initial model object to the contents.
WITHOUT_CLASSIFICATION	Save the contents of the resource to the file system.
WITHOUT_CLASSIFICATION	Select the new file resource in the current view.
WITHOUT_CLASSIFICATION	Determine the values to be added and add them at the right position.
WITHOUT_CLASSIFICATION	Ecore2EcorePackageImpl
WITHOUT_CLASSIFICATION	Ecore2EcoreFactoryImpl
WITHOUT_CLASSIFICATION	Ecore2EcoreMappingRootImpl
WITHOUT_CLASSIFICATION	Ecore2EcoreResourceFactoryImpl
WITHOUT_CLASSIFICATION	Ecore2EcoreResourceFactoryImpl
WITHOUT_CLASSIFICATION	Ecore2EcoreAdapterFactory
WITHOUT_CLASSIFICATION	Ecore2EcoreSwitch
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Obtain or create and register package
WITHOUT_CLASSIFICATION	Initialize simple dependencies
WITHOUT_CLASSIFICATION	Create package meta-data objects
WITHOUT_CLASSIFICATION	Initialize created meta-data
WITHOUT_CLASSIFICATION	Mark meta-data to indicate it can't be changed
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	Create classes and their features
WITHOUT_CLASSIFICATION	Initialize package
WITHOUT_CLASSIFICATION	Obtain other dependent packages
WITHOUT_CLASSIFICATION	Create type parameters
WITHOUT_CLASSIFICATION	Set bounds for type parameters
WITHOUT_CLASSIFICATION	Add supertypes to classes
WITHOUT_CLASSIFICATION	Create resource
WITHOUT_CLASSIFICATION	Remember the file.
WITHOUT_CLASSIFICATION	Do the work within an operation.
WITHOUT_CLASSIFICATION	Create a resource set
WITHOUT_CLASSIFICATION	Create a page, set the title, and the initial model file name.
WITHOUT_CLASSIFICATION	Try and get the resource selection to determine a current directory for the file dialog.
WITHOUT_CLASSIFICATION	Get the resource...
WITHOUT_CLASSIFICATION	Get the resource parent, if its a file.
WITHOUT_CLASSIFICATION	This gives us a directory...
WITHOUT_CLASSIFICATION	Set this for the container.
WITHOUT_CLASSIFICATION	Make up a unique new name here.
WITHOUT_CLASSIFICATION	For a many-to-many association, the command can only be undoable if the value or owner is last in its respective list, since the undo will include an inverse add. So, if the value is last, but the owner is not, we create an undoable compound command that removes from the opposite end and then inserts the new value.
WITHOUT_CLASSIFICATION	Ecore2XMLPackage
WITHOUT_CLASSIFICATION	Ecore2XMLFactory
WITHOUT_CLASSIFICATION	XMLInfo
WITHOUT_CLASSIFICATION	XMLMap
WITHOUT_CLASSIFICATION	missing attribute
WITHOUT_CLASSIFICATION	invalid element
WITHOUT_CLASSIFICATION	XMLMapImpl
WITHOUT_CLASSIFICATION	ENamedElementToXMLInfoMapEntryImpl
WITHOUT_CLASSIFICATION	Ecore2XMLFactoryImpl
WITHOUT_CLASSIFICATION	Ecore2XMLPackageImpl
WITHOUT_CLASSIFICATION	XMLInfoImpl
WITHOUT_CLASSIFICATION	Switch to the new selection provider.
WITHOUT_CLASSIFICATION	Fake a selection changed event to update the menus.
WITHOUT_CLASSIFICATION	Open an editor on the new file.
WITHOUT_CLASSIFICATION	Add the initial model object to the contents.
WITHOUT_CLASSIFICATION	Save the contents of the resource to the file system.
WITHOUT_CLASSIFICATION	Select the new file resource in the current view.
WITHOUT_CLASSIFICATION	Try and get the resource selection to determine a current directory for the file dialog.
WITHOUT_CLASSIFICATION	Get the resource...
WITHOUT_CLASSIFICATION	Get the resource parent, if its a file.
WITHOUT_CLASSIFICATION	This gives us a directory...
WITHOUT_CLASSIFICATION	Set this for the container.
WITHOUT_CLASSIFICATION	Force an update because Eclipse hides empty menus now.
WITHOUT_CLASSIFICATION	Remove any menu items for old selection.
WITHOUT_CLASSIFICATION	Query the new selection for appropriate new child/sibling descriptors
WITHOUT_CLASSIFICATION	Initialize all the fields from the command parameter.
WITHOUT_CLASSIFICATION	Initialize all the fields from the command parameter.
WITHOUT_CLASSIFICATION	Initialize all the fields from the command parameter.
WITHOUT_CLASSIFICATION	Initialize all the fields from the command parameter.
WITHOUT_CLASSIFICATION	Initialize all the fields from the command parameter.
WITHOUT_CLASSIFICATION	If the attribute is set, record it's old value.
WITHOUT_CLASSIFICATION	Update the containing map, if necessary.
WITHOUT_CLASSIFICATION	Update the containing map, if necessary.
WITHOUT_CLASSIFICATION	Update the containing map, if necessary.
WITHOUT_CLASSIFICATION	Update the containing map, if necessary.
WITHOUT_CLASSIFICATION	Update the containing map, if necessary.
WITHOUT_CLASSIFICATION	Update the containing map, if necessary.
WITHOUT_CLASSIFICATION	Create the copy
WITHOUT_CLASSIFICATION	EATM Leave this disabled for now.
WITHOUT_CLASSIFICATION	Javadoc copied from base class.
WITHOUT_CLASSIFICATION	Javadoc copied from base class.
WITHOUT_CLASSIFICATION	Javadoc copied from base class.
WITHOUT_CLASSIFICATION	Javadoc copied from base class.
WITHOUT_CLASSIFICATION	Javadoc copied from base class.
WITHOUT_CLASSIFICATION	Javadoc copied from base class.
WITHOUT_CLASSIFICATION	Javadoc copied from base class.
WITHOUT_CLASSIFICATION	Javadoc copied from base class.
WITHOUT_CLASSIFICATION	Remember the static instance.
WITHOUT_CLASSIFICATION	Remember the static instance.
WITHOUT_CLASSIFICATION	Remember the static instance.
WITHOUT_CLASSIFICATION	Remember the static instance.
WITHOUT_CLASSIFICATION	Remember the static instance.
WITHOUT_CLASSIFICATION	Remember the static instance.
WITHOUT_CLASSIFICATION	Set the range so that we re-check when we get into the other half.
WITHOUT_CLASSIFICATION	Subclasses may override
WITHOUT_CLASSIFICATION	Subclasses may override
WITHOUT_CLASSIFICATION	Subclasses may override
WITHOUT_CLASSIFICATION	Subclasses may override
WITHOUT_CLASSIFICATION	Subclasses may override
WITHOUT_CLASSIFICATION	Subclasses may override
WITHOUT_CLASSIFICATION	Subclasses may override
WITHOUT_CLASSIFICATION	Subclasses may override
WITHOUT_CLASSIFICATION	Subclasses may override
WITHOUT_CLASSIFICATION	Subclasses may override
WITHOUT_CLASSIFICATION	Subclasses may override
WITHOUT_CLASSIFICATION	Subclasses may override
WITHOUT_CLASSIFICATION	Subclasses may override
WITHOUT_CLASSIFICATION	Subclasses may override
WITHOUT_CLASSIFICATION	Subclasses may override
WITHOUT_CLASSIFICATION	Subclasses may override
WITHOUT_CLASSIFICATION	If the location indicates after, add one more.
WITHOUT_CLASSIFICATION	Empty extension to limit the effect of suppressing the deprecation warning.
WITHOUT_CLASSIFICATION	Empty extension to limit the effect of suppressing the deprecation warning.
WITHOUT_CLASSIFICATION	Empty extension to limit the effect of suppressing the deprecation warning.
WITHOUT_CLASSIFICATION	Try again.
WITHOUT_CLASSIFICATION	This is the name of the model.
WITHOUT_CLASSIFICATION	Create move commands for all the objects in the collection.
WITHOUT_CLASSIFICATION	Apply a redirection pattern, if specified.
WITHOUT_CLASSIFICATION	Apply a redirection pattern, if specified.
WITHOUT_CLASSIFICATION	Thread.dumpStack();
WITHOUT_CLASSIFICATION	Apply a redirection pattern, if specified.
WITHOUT_CLASSIFICATION	Simply remove the object from the owner list.
WITHOUT_CLASSIFICATION	Insert the collection at the right place.
WITHOUT_CLASSIFICATION	We'd like the collection of replacements selected after this replace completes.
WITHOUT_CLASSIFICATION	All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to missing dependencies in the stand-alone case.
WITHOUT_CLASSIFICATION	All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to missing dependencies in the stand-alone case.
WITHOUT_CLASSIFICATION	Initialization is deferred until adapters are attached to all the objects of interest and we're about to ask them to generate.
WITHOUT_CLASSIFICATION	Invoke generator adapters for each object.
WITHOUT_CLASSIFICATION	EMFEdit generation
WITHOUT_CLASSIFICATION	EMFEdit generation
WITHOUT_CLASSIFICATION	EMFEdit generation
WITHOUT_CLASSIFICATION	Iterate over the owner list twice, first matching objects from the collection by identity (==), then matching objects by value equality (.equals()). The positions of matched objects in the owner list are recorded, and the objects are stored in the same order. The lists are then merged to form a final, in-order list of objects and corresponding indices in ownerList. This is very important for undo to interpret the indices correctly. Also, this yields exactly one object removed for each object in the collection, with preference given to identity over value equality.
WITHOUT_CLASSIFICATION	callers that plan to use this name without appending a suffix should call f.safeName(f.getName()) to make sure its not a keyword this is a safe guaranteed uncapitalized form of the name the safe name and cast to EObject, if necessary.
WITHOUT_CLASSIFICATION	Add any remaining object-index pairs from either set.
WITHOUT_CLASSIFICATION	For CreateChildCommand, we will find the owner by calling EditingDomain.getParent() on the first selected object
WITHOUT_CLASSIFICATION	This guards the switch.
WITHOUT_CLASSIFICATION	A set command without a feature sets the value of this wrapper, hence replacing it with a new wrapper. So, we need a special command wrapper that selects this new wrapper as the affected object.
WITHOUT_CLASSIFICATION	Get the adapter from the factory.
WITHOUT_CLASSIFICATION	Get the adapter from the factory.
WITHOUT_CLASSIFICATION	Get the adapter from the factory.
WITHOUT_CLASSIFICATION	Get the adapter from the factory.
WITHOUT_CLASSIFICATION	Get the adapter from the factory.
WITHOUT_CLASSIFICATION	Get the adapter from the factory.
WITHOUT_CLASSIFICATION	Get the adapter from the factory.
WITHOUT_CLASSIFICATION	Get the adapter from the factory.
WITHOUT_CLASSIFICATION	Get the adapter from the factory.
WITHOUT_CLASSIFICATION	Get the adapter from the factory.
WITHOUT_CLASSIFICATION	Get the adapter from the factory.
WITHOUT_CLASSIFICATION	Get the adapter from the factory.
WITHOUT_CLASSIFICATION	Get the adapter from the factory.
WITHOUT_CLASSIFICATION	Get the adapter from the factory.
WITHOUT_CLASSIFICATION	Get the adapter from the factory.
WITHOUT_CLASSIFICATION	Get the adapter from the factory.
WITHOUT_CLASSIFICATION	Get the adapter from the factory.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$
WITHOUT_CLASSIFICATION	Get the adapter from the factory.
WITHOUT_CLASSIFICATION	And delegate the call.
WITHOUT_CLASSIFICATION	And delegate the call.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Create a page, set the title, and the initial model file name. $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Prepare for CreateChild item addition or removal. $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	And delegate the call.
WITHOUT_CLASSIFICATION	Make up a unique new name here. $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Prepare for CreateSibling item addition or removal. $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	And delegate the call.
WITHOUT_CLASSIFICATION	And delegate the call.
WITHOUT_CLASSIFICATION	And delegate the call.
WITHOUT_CLASSIFICATION	Either delegate the call or return nothing.
WITHOUT_CLASSIFICATION	Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us the children.
WITHOUT_CLASSIFICATION	These will be the children belonging to this feature.
WITHOUT_CLASSIFICATION	These will be the children belonging to this feature.
WITHOUT_CLASSIFICATION	The try/catch provides backwards compatibility with the old resource key, "_UI_CreateChild_label", and should be removed at the next release, when we can expect users to regenerate.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EClassifier)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EStructuralFeature)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.emf.ecore.util.ExtendedMetaData#getNamespace(org.eclipse.emf.ecore.EPackage)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.emf.ecore.util.ExtendedMetaData#getType(org.eclipse.emf.ecore.EPackage, java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.emf.ecore.util.ExtendedMetaData#getFeatureKind(org.eclipse.emf.ecore.EStructuralFeature)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.emf.ecore.util.BasicExtendedMetaData#isFeatureKindSpecific()
WITHOUT_CLASSIFICATION	<!-- begin-user-doc --> The <b>Adapter Factory</b> for the model. It provides an adapter <code>createXXX</code> method for each class of the model. <!-- end-user-doc --> @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage @generated
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	<!-- begin-user-doc --> The <b>Switch</b> for the model's inheritance hierarchy. It supports the call {@link #doSwitch(EObject) doSwitch(object)} to invoke the <code>caseXXX</code> method for each class of the model, starting with the actual class of the object and proceeding up the inheritance hierarchy until a non-null result is returned, which is the result of the switch. <!-- end-user-doc --> @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage @generated
WITHOUT_CLASSIFICATION	<!-- begin-user-doc --> The <b>Adapter Factory</b> for the model. It provides an adapter <code>createXXX</code> method for each class of the model. <!-- end-user-doc --> @see org.eclipse.emf.mapping.MappingPackage @generated
WITHOUT_CLASSIFICATION	<!-- begin-user-doc --> The <b>Switch</b> for the model's inheritance hierarchy. It supports the call {@link #doSwitch(EObject) doSwitch(object)} to invoke the <code>caseXXX</code> method for each class of the model, starting with the actual class of the object and proceeding up the inheritance hierarchy until a non-null result is returned, which is the result of the switch. <!-- end-user-doc --> @see org.eclipse.emf.mapping.MappingPackage @generated
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.emf.ecore.xmi.XMLResource#load(org.w3c.dom.Node, java.util.Map)
WITHOUT_CLASSIFICATION	<!-- begin-user-doc --> The <b>Switch</b> for the model's inheritance hierarchy. It supports the call {@link #doSwitch(EObject) doSwitch(object)} to invoke the <code>caseXXX</code> method for each class of the model, starting with the actual class of the object and proceeding up the inheritance hierarchy until a non-null result is returned, which is the result of the switch. <!-- end-user-doc --> @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage @generated
WITHOUT_CLASSIFICATION	<!-- begin-user-doc --> The <b>Adapter Factory</b> for the model. It provides an adapter <code>createXXX</code> method for each class of the model. <!-- end-user-doc --> @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage @generated
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#getChildren()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#getChildren()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#createCompilationUnit(java.lang.String, java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#getContext(org.eclipse.emf.codegen.merge.java.facade.JNode)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#doConvertToNode(java.lang.Object)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)
WITHOUT_CLASSIFICATION	append [] if it is variable arity parameter (@see JLS3 8.4.1, http:java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)
WITHOUT_CLASSIFICATION	append [] if it is variable arity parameter (@see JLS3 8.4.1, http:java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.ui.IWorkbenchWindowActionDelegate#init(org.eclipse.ui.IWorkbenchWindow)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.ui.IWorkbenchWindowActionDelegate#dispose()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.jface.window.Window#close()
WITHOUT_CLASSIFICATION	<!-- begin-user-doc --> The <b>Switch</b> for the model's inheritance hierarchy. It supports the call {@link #doSwitch(EObject) doSwitch(object)} to invoke the <code>caseXXX</code> method for each class of the model, starting with the actual class of the object and proceeding up the inheritance hierarchy until a non-null result is returned, which is the result of the switch. <!-- end-user-doc --> @see org.eclipse.emf.ecore.change.ChangePackage @generated
WITHOUT_CLASSIFICATION	<!-- begin-user-doc --> The <b>Adapter Factory</b> for the model. It provides an adapter <code>createXXX</code> method for each class of the model. <!-- end-user-doc --> @see org.eclipse.emf.ecore.change.ChangePackage @generated
WITHOUT_CLASSIFICATION	@see org.eclipse.emf.ecore.EObject#eIsProxy()
WITHOUT_CLASSIFICATION	@see org.eclipse.emf.ecore.InternalEObject#eSetProxyURI(org.eclipse.emf.common.util.URI)
WITHOUT_CLASSIFICATION	<!-- begin-user-doc --> The <b>Switch</b> for the model's inheritance hierarchy. It supports the call {@link #doSwitch(EObject) doSwitch(object)} to invoke the <code>caseXXX</code> method for each class of the model, starting with the actual class of the object and proceeding up the inheritance hierarchy until a non-null result is returned, which is the result of the switch. <!-- end-user-doc --> @see org.eclipse.emf.ecore.EcorePackage @generated
WITHOUT_CLASSIFICATION	<!-- begin-user-doc --> The <b>Adapter Factory</b> for the model. It provides an adapter <code>createXXX</code> method for each class of the model. <!-- end-user-doc --> @see org.eclipse.emf.ecore.EcorePackage @generated
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.emf.ecore.xmi.XMLLoad#load(org.eclipse.emf.ecore.xmi.XMLResource, org.w3c.dom.Node, java.util.Map)
WITHOUT_CLASSIFICATION	<!-- begin-user-doc --> The <b>Adapter Factory</b> for the model. It provides an adapter <code>createXXX</code> method for each class of the model. <!-- end-user-doc --> @see org.eclipse.emf.edit.tree.TreePackage @generated
WITHOUT_CLASSIFICATION	<!-- begin-user-doc --> The <b>Switch</b> for the model's inheritance hierarchy. It supports the call {@link #doSwitch(EObject) doSwitch(object)} to invoke the <code>caseXXX</code> method for each class of the model, starting with the actual class of the object and proceeding up the inheritance hierarchy until a non-null result is returned, which is the result of the switch. <!-- end-user-doc --> @see org.eclipse.emf.edit.tree.TreePackage @generated
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.jface.dialogs.Dialog#createButtonsForButtonBar(org.eclipse.swt.widgets.Composite)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.emf.mapping.MappingRoot#canCreateMapping(java.util.Collection, java.util.Collection, org.eclipse.emf.mapping.Mapping)
WITHOUT_CLASSIFICATION	<!-- begin-user-doc --> The <b>Adapter Factory</b> for the model. It provides an adapter <code>createXXX</code> method for each class of the model. <!-- end-user-doc --> @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage @generated
WITHOUT_CLASSIFICATION	<!-- begin-user-doc --> The <b>Switch</b> for the model's inheritance hierarchy. It supports the call {@link #doSwitch(EObject) doSwitch(object)} to invoke the <code>caseXXX</code> method for each class of the model, starting with the actual class of the object and proceeding up the inheritance hierarchy until a non-null result is returned, which is the result of the switch. <!-- end-user-doc --> @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage @generated
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#add(org.eclipse.emf.ecore.ENamedElement, org.eclipse.emf.ecore.xmi.XMLResource.XMLInfo)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getClassifier(java.lang.String, java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeature(org.eclipse.emf.ecore.EClass, java.lang.String, java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeatures(org.eclipse.emf.ecore.EClass)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getInfo(org.eclipse.emf.ecore.ENamedElement)
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Attribute
WITHOUT_CLASSIFICATION	If the workbench part changes...
WITHOUT_CLASSIFICATION	Discard the old editing domain.
WITHOUT_CLASSIFICATION	Convert the selection to a collection of the selected objects.
WITHOUT_CLASSIFICATION	This returns a name like employeeNumber formatted like 'Employee Number' This returns the same as getCapName unless it starts with "is" in which case the "is" is stripped This returns the name to be used in accessor method names; it's the same as getCapName, unless this is the key or value of a map entry, for which "Typed" is prepended This returns the name of the get array-based accessor method for the list feature. This returns the name of the get accessor method for the feature, i.e., either "is" or "get" is prefixed to getAccessorName
WITHOUT_CLASSIFICATION	This is for backwards compatibility, since the constructor may have been overridden before it was expected to set actionDelegate.
WITHOUT_CLASSIFICATION	this returns either "EAttribute" or "EReference"
WITHOUT_CLASSIFICATION	this guard is for extra security, but should not be necessary
WITHOUT_CLASSIFICATION	EMF.Edit generation
WITHOUT_CLASSIFICATION	We can create the RemoveCommand for an uncontrol, but we must defer creating an AddCommand to control until run(), when the user specifies a target resource.
WITHOUT_CLASSIFICATION	Remove any non-Java dependencies from being added.
WITHOUT_CLASSIFICATION	Get extra icon and bounds for first column of ExtendedTableTreeItem.
WITHOUT_CLASSIFICATION	Computes the default path for the given GenModel. This was previously the implementation of getTemplatePath().
WITHOUT_CLASSIFICATION	Clean up the command if there is one. If we need it again in drop, we'll recreate it from dragAndDropCommandInformation.
WITHOUT_CLASSIFICATION	Compute a map of resource location URIs to logical namespace URIs so that cross references will be resolved via package registry when deserialized.
WITHOUT_CLASSIFICATION	We'll need to keep track of the information we use to create the command, so that we can recreate it in drop.
WITHOUT_CLASSIFICATION	Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated.
WITHOUT_CLASSIFICATION	Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated.
WITHOUT_CLASSIFICATION	Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated.
WITHOUT_CLASSIFICATION	(non-Javadoc) Method declared on Dialog.
WITHOUT_CLASSIFICATION	Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated.
WITHOUT_CLASSIFICATION	text = new Text(composite, SWT.SINGLE | SWT.BORDER); text.setLayoutData(new GridData(GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL));
WITHOUT_CLASSIFICATION	Obtain or create and register package
WITHOUT_CLASSIFICATION	Obtain or create and register package
WITHOUT_CLASSIFICATION	Obtain or create and register package
WITHOUT_CLASSIFICATION	CellEditor.setValue() calls isCorrect() to validate the value that is about to be set. We are doing conversion between the value and a corresponding string, and we would usually like to validate the string. Because setValue() is final, we cannot do that conversion there, so we need to record what we're trying to validate and work around the problem in isCorrect().
WITHOUT_CLASSIFICATION	Initialize simple dependencies
WITHOUT_CLASSIFICATION	The referencedEPackages list is used to track the packages for which is necessary to create the stub GenModel. So if the ePackage is referenced by an existing GenPackage, it doesn't need to be added to referencedEPackages.
WITHOUT_CLASSIFICATION	Create package meta-data objects
WITHOUT_CLASSIFICATION	Create package meta-data objects
WITHOUT_CLASSIFICATION	Determine the required plugins.
WITHOUT_CLASSIFICATION	Initialize created meta-data
WITHOUT_CLASSIFICATION	Initialize created meta-data
WITHOUT_CLASSIFICATION	Initialize created meta-data
WITHOUT_CLASSIFICATION	Include each required plugin of the starting project and the exported ones of all the required projects.
WITHOUT_CLASSIFICATION	Register package validator
WITHOUT_CLASSIFICATION	Determine the inverse map from plugin IDs to their registered GenModel locations.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Mark meta-data to indicate it can't be changed
WITHOUT_CLASSIFICATION	Mark meta-data to indicate it can't be changed
WITHOUT_CLASSIFICATION	Walk the fields.
WITHOUT_CLASSIFICATION	Obtain other dependent packages
WITHOUT_CLASSIFICATION	Obtain other dependent packages
WITHOUT_CLASSIFICATION	Filter out explicit EObject from super types, except in the Ecore package itself, or if it appears in the @model superTypes.
WITHOUT_CLASSIFICATION	Create type parameters
WITHOUT_CLASSIFICATION	We will create an EAttribute, EReference, or an EOperation.
WITHOUT_CLASSIFICATION	Set bounds for type parameters
WITHOUT_CLASSIFICATION	Check whether there are parameters; the special attribute and reference rules only apply for the case of no arguments.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Initialize classes and features; add operations and parameters
WITHOUT_CLASSIFICATION	Initialize classes and features; add operations and parameters
WITHOUT_CLASSIFICATION	Initialize classes and features; add operations and parameters
WITHOUT_CLASSIFICATION	The method is not a structural feature, so it's modeled as an operation.
WITHOUT_CLASSIFICATION	Initialize classes and features; add operations and parameters $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Create annotations http:www.eclipse.org/emf/2002/Ecore
WITHOUT_CLASSIFICATION	Don't overwrite exising file
WITHOUT_CLASSIFICATION	Don't overwrite exising file
WITHOUT_CLASSIFICATION	Look through the imports of the containing compilation unit.
WITHOUT_CLASSIFICATION	Use an alternate if we can't write to this one.
WITHOUT_CLASSIFICATION	Map to EClass, EEnum or EInerface. Note that we do not map structure and primitive type class.
WITHOUT_CLASSIFICATION	purpose: using charset from 'targetFile' to encode in-memory 'newContents' object into bytes modifer: Wu Zhi Qiang date: Aug 25, 2004 action: first get the charset from 'targetFile', then use it to encode the 'newContents' object into bytes
WITHOUT_CLASSIFICATION	Map to an EClass.
WITHOUT_CLASSIFICATION	Map to an EClass.
WITHOUT_CLASSIFICATION	FB TBD different objects for ecore model!
WITHOUT_CLASSIFICATION	FB TBD different objects for ecore model!
WITHOUT_CLASSIFICATION	Map to an eClass.
WITHOUT_CLASSIFICATION	generateColor();
WITHOUT_CLASSIFICATION	This handles Rose 2003 format, e.g., Logical View::JavaException[40722F9D0294]
WITHOUT_CLASSIFICATION	Strip off the array indices if any.
WITHOUT_CLASSIFICATION	process eStructuralFeatures for association end(Role)
WITHOUT_CLASSIFICATION	If we find a match, make this generic type be for this type parameter, and then stop the whole process.
WITHOUT_CLASSIFICATION	If we find a match, make this generic type be for this type parameter, and then stop the whole process.
WITHOUT_CLASSIFICATION	...or if it's a wildcard or group feature. Also, make it FeatureMap-typed.
WITHOUT_CLASSIFICATION	We don't want keyType and valueType on a map type specification in a package interface. But, we also use qualified model information when defining a feature with suppressed get accessor on the interface, and we do want to include these properties in that case.
WITHOUT_CLASSIFICATION	starting traverse file and build unit tree and table info
WITHOUT_CLASSIFICATION	public String getImportedInstanceClassName() { return getGenModel().getImportedName("org.eclipse.emf.ecore.EEnumLiteral"); }
WITHOUT_CLASSIFICATION	Process the children of the UnitTreeNode recursively.
WITHOUT_CLASSIFICATION	If the flag will straddle two fields, bump it to the next one.
WITHOUT_CLASSIFICATION	class RoseToken
WITHOUT_CLASSIFICATION	If there is a provider base class from outside this class that has already been generated, get the create child references from it. We'll check for any type-compatible classes introduced in this package.
WITHOUT_CLASSIFICATION	This will deal with all the subcommands to modifying the root mapping tree.
WITHOUT_CLASSIFICATION	Like isStringType(), but still returns true even if multiplicity-many.
WITHOUT_CLASSIFICATION	Create a command to do parentMapping.getNested().remove(mapping). subcommands.appendAndExecute(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), mapping));
WITHOUT_CLASSIFICATION	EDate is far too often overridden to provide a different mapping, and therefor the default is somewhat obscure. So, it's best to delegate to the factory.
WITHOUT_CLASSIFICATION	Find the appropriate parent mapping, which at the very least, should be the mapping root itself.
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	If the type isn't Object, we need to cast. If it's a primitive, we need to unbox.
WITHOUT_CLASSIFICATION	(new AddCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));
WITHOUT_CLASSIFICATION	Suppress default constructor for non-instantiability.
WITHOUT_CLASSIFICATION	This is tricky and is done for each object here rather than once for the owner of the addCommnd. We want to make sure the object is really part of the conceptual tree induced by the domain.
WITHOUT_CLASSIFICATION	See java.lang.Class.getName() javadoc for explanation of array encoding.
WITHOUT_CLASSIFICATION	We'll try adding a shallow copy of the clipboard contents, instead of a full copy. Note: we can't just try adding the clipboard contents itself, because the copy may be a different type then what's on the clipboard (e.g. EJB Field -> RDB Column).
WITHOUT_CLASSIFICATION	We'll try adding a shallow copy of the clipboard contents, instead of a full copy. Note: we can't just try adding the clipboard contents itself, because the copy may be a different type then what's on the clipboard (e.g. EJB Field -> RDB Column).
WITHOUT_CLASSIFICATION	We can't blindly cache the genModel, since we need to support moving the GenPackage to another container, but the cast is expensive, so we'd like to do it no more than absolutely necessary.
WITHOUT_CLASSIFICATION	FB The following method is copied from com.ibm.etools.b2b.util.StringUtility FB because the mapping framework cannot have a dependency on b2b. What we really FB need to do is get methods like this moved to vabase so that everyone can FB use them. change all occurrences of oldPat to newPat
WITHOUT_CLASSIFICATION	Ignore this soft dependency when it's not satisfied.
WITHOUT_CLASSIFICATION	If it's the selection viewer, then we want it to select the same selection as this selection.
WITHOUT_CLASSIFICATION	Set URIs of EPackage-containing resources: output resource to desired target URI, and others to package namespace URIs (so cross-references will be resolved via package registry when deserialized).
WITHOUT_CLASSIFICATION	MappingPackageImpl
WITHOUT_CLASSIFICATION	Iterate over the mappings in the tree.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	public String getExtendedItemProviderClassName() { return getPrefixedName("ItemProviderAdapter"); }
WITHOUT_CLASSIFICATION	Check to make sure that every object in the collection has an ancestor that is contained in this mapping.
WITHOUT_CLASSIFICATION	It belongs to this package if the delegate feature is from this package, or the class is from this package and either there is no delegate feature or the delegate feature is from some used package.
WITHOUT_CLASSIFICATION	Ensure that this is a touch notification so to resource aren't marked as dirty.
WITHOUT_CLASSIFICATION	Force the project to be setup properly.
WITHOUT_CLASSIFICATION	EATM getDecoratedAdapterFactory().
WITHOUT_CLASSIFICATION	This case happens when the IDE is brought up with the editor already open
WITHOUT_CLASSIFICATION	We need to filer out duplicates in the unlikely event that we have two features with the same class-qualified name. We'll only generate one property string in that case and let the user add the second one manually, if necessary.
WITHOUT_CLASSIFICATION	MappingPackage ePackage = ((ComplexTypeConverter)msg.getNotifier()).ePackageMapping();
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	while
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Empty
WITHOUT_CLASSIFICATION	Empty
WITHOUT_CLASSIFICATION	Empty
WITHOUT_CLASSIFICATION	Empty
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	the first hex character if a character needs to be escaped
WITHOUT_CLASSIFICATION	the first hex character if a character needs to be escaped
WITHOUT_CLASSIFICATION	the second hex character if a character needs to be escaped
WITHOUT_CLASSIFICATION	initialize the above 3 arrays
WITHOUT_CLASSIFICATION	if it's not an ASCII character, break here, and use UTF-8 encoding
WITHOUT_CLASSIFICATION	get UTF-8 bytes for the remaining sub-string
WITHOUT_CLASSIFICATION	MappingPackage ePackage = ((MappingRoot)object).ePackageMapping();
WITHOUT_CLASSIFICATION	Try to select the affected objects.
WITHOUT_CLASSIFICATION	this should never happen
WITHOUT_CLASSIFICATION	no-op
WITHOUT_CLASSIFICATION	no-op
WITHOUT_CLASSIFICATION	no-op
WITHOUT_CLASSIFICATION	&& commandParameter instanceof MappingCommandParameter)
WITHOUT_CLASSIFICATION	Creates the model from the editor input
WITHOUT_CLASSIFICATION	Returning null here causes RemoveCommand.create(domain, mappedObjectItemProvider) to be delegated to MappedObjectItemProvider.createCommand() and there we return a command to remove mappedObject instead. return null;
WITHOUT_CLASSIFICATION	Only creates the other pages if there is something that can be edited
WITHOUT_CLASSIFICATION	Only creates the other pages if there is something that can be edited
WITHOUT_CLASSIFICATION	hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), substituteOldValue, substituteNewValue, msg.getPosition());
WITHOUT_CLASSIFICATION	The content outline is just a tree.
WITHOUT_CLASSIFICATION	Set up the tree viewer.
WITHOUT_CLASSIFICATION	Select the root object in the view.
WITHOUT_CLASSIFICATION	This ensures that we handle selections correctly.
WITHOUT_CLASSIFICATION	Get the first selected element.
WITHOUT_CLASSIFICATION	Do the work within an operation because this is a long running activity that modifies the workbench.
WITHOUT_CLASSIFICATION	generateMenuManager.add(new Separator("schema-actions")); generateMenuManager.add(generateSchemaAction);
WITHOUT_CLASSIFICATION	generateSchemaAction.setEnabled(generateSchemaAction.isEnabled());
WITHOUT_CLASSIFICATION	menuManager.insertBefore("additions", new Separator("schema-actions")); menuManager.insertAfter("schema-actions", generateSchemaAction);
WITHOUT_CLASSIFICATION	Check the type of the specified child object and return the proper feature to use for adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	Check the type of the specified child object and return the proper feature to use for adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	Check the type of the specified child object and return the proper feature to use for adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	Check the type of the specified child object and return the proper feature to use for adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	Check the type of the specified child object and return the proper feature to use for adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	Check the type of the specified child object and return the proper feature to use for adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	Check the type of the specified child object and return the proper feature to use for adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	Check the type of the specified child object and return the proper feature to use for adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	Check the type of the specified child object and return the proper feature to use for adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	Check the type of the specified child object and return the proper feature to use for adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	Check the type of the specified child object and return the proper feature to use for adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	Check the type of the specified child object and return the proper feature to use for adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	Check the type of the specified child object and return the proper feature to use for adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	Check the type of the specified child object and return the proper feature to use for adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	)
WITHOUT_CLASSIFICATION	)
WITHOUT_CLASSIFICATION	Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result. <!-- begin-user-doc --> <!-- end-user-doc --> @return the first non-null result returned by a <code>caseXXX</code> call. @generated
WITHOUT_CLASSIFICATION	Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result. <!-- begin-user-doc --> <!-- end-user-doc --> @return the first non-null result returned by a <code>caseXXX</code> call. @generated
WITHOUT_CLASSIFICATION	Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result. <!-- begin-user-doc --> <!-- end-user-doc --> @return the first non-null result returned by a <code>caseXXX</code> call. @generated
WITHOUT_CLASSIFICATION	Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result. <!-- begin-user-doc --> <!-- end-user-doc --> @return the first non-null result returned by a <code>caseXXX</code> call. @generated
WITHOUT_CLASSIFICATION	Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result. <!-- begin-user-doc --> <!-- end-user-doc --> @return the first non-null result returned by a <code>caseXXX</code> call. @generated
WITHOUT_CLASSIFICATION	Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result. <!-- begin-user-doc --> <!-- end-user-doc --> @return the first non-null result returned by a <code>caseXXX</code> call. @generated
WITHOUT_CLASSIFICATION	Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result. <!-- begin-user-doc --> <!-- end-user-doc --> @return the first non-null result returned by a <code>caseXXX</code> call. @generated
WITHOUT_CLASSIFICATION	Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result. <!-- begin-user-doc --> <!-- end-user-doc --> @return the first non-null result returned by a <code>caseXXX</code> call. @generated
WITHOUT_CLASSIFICATION	Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result. <!-- begin-user-doc --> <!-- end-user-doc --> @return the first non-null result returned by a <code>caseXXX</code> call. @generated
WITHOUT_CLASSIFICATION	Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result. <!-- begin-user-doc --> <!-- end-user-doc --> @return the first non-null result returned by a <code>caseXXX</code> call. @generated
WITHOUT_CLASSIFICATION	Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result. <!-- begin-user-doc --> <!-- end-user-doc --> @return the first non-null result returned by a <code>caseXXX</code> call. @generated
WITHOUT_CLASSIFICATION	Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result. <!-- begin-user-doc --> <!-- end-user-doc --> @return the first non-null result returned by a <code>caseXXX</code> call. @generated
WITHOUT_CLASSIFICATION	Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result. <!-- begin-user-doc --> <!-- end-user-doc --> @return the first non-null result returned by a <code>caseXXX</code> call. @generated
WITHOUT_CLASSIFICATION	Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result. <!-- begin-user-doc --> <!-- end-user-doc --> @return the first non-null result returned by a <code>caseXXX</code> call. @generated
WITHOUT_CLASSIFICATION	Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result. <!-- begin-user-doc --> <!-- end-user-doc --> @return the first non-null result returned by a <code>caseXXX</code> call. @generated
WITHOUT_CLASSIFICATION	Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result. <!-- begin-user-doc --> <!-- end-user-doc --> @return the first non-null result returned by a <code>caseXXX</code> call. @generated
WITHOUT_CLASSIFICATION	Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result. <!-- begin-user-doc --> <!-- end-user-doc --> @return the first non-null result returned by a <code>caseXXX</code> call. @generated
WITHOUT_CLASSIFICATION	Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result. <!-- begin-user-doc --> <!-- end-user-doc --> @return the first non-null result returned by a <code>caseXXX</code> call. @generated
WITHOUT_CLASSIFICATION	Calls <code>validateXXX</code> for the corresponding classifier of the model. <!-- begin-user-doc --> <!-- end-user-doc --> @generated
WITHOUT_CLASSIFICATION	Calls <code>validateXXX</code> for the corresponding classifier of the model. <!-- begin-user-doc --> <!-- end-user-doc --> @generated
WITHOUT_CLASSIFICATION	Trick to import java.util. without warnings
WITHOUT_CLASSIFICATION	Trick to import java.util. without warnings
WITHOUT_CLASSIFICATION	Trick to import java.util. without warnings
WITHOUT_CLASSIFICATION	Trick to import java.util. without warnings
WITHOUT_CLASSIFICATION	Trick to import java.util. without warnings
WITHOUT_CLASSIFICATION	Trick to import java.util. without warnings
WITHOUT_CLASSIFICATION	Trick to import java.util. without warnings
WITHOUT_CLASSIFICATION	Trick to import java.util. without warnings
WITHOUT_CLASSIFICATION	Trick to import java.util. without warnings
WITHOUT_CLASSIFICATION	Constructors
WITHOUT_CLASSIFICATION	Constructors
WITHOUT_CLASSIFICATION	TestCase/isSetGenFeature.override.javajetinc
WITHOUT_CLASSIFICATION	Avoid unnecessary out.write("") statements...
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	For any entry that doesn't correspond to a plugin in the running JVM, compute a URL for the classes.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Define a class loader that looks up classes using the URLs or the parent class loader, and failing those, tries to look up the class in each bundle in the running JVM.
TEST	the plot field is NOT tested
WITHOUT_CLASSIFICATION	TBLRC 01011 - bottom, right and center
WITHOUT_CLASSIFICATION	TBLRC 01100
WITHOUT_CLASSIFICATION	TBLRC 01101 - bottom, left and center
WITHOUT_CLASSIFICATION	TBLRC 01110 - bottom. left and right
WITHOUT_CLASSIFICATION	TBLRC 01111
WITHOUT_CLASSIFICATION	TBLRC 10000 - top item only
WITHOUT_CLASSIFICATION	TBLRC 10001 - top and center only
WITHOUT_CLASSIFICATION	TBLRC 10010 - right and top only
WITHOUT_CLASSIFICATION	TBLRC 10011 - top, right and center
WITHOUT_CLASSIFICATION	TBLRC 10100 - top and left only
WITHOUT_CLASSIFICATION	range
WITHOUT_CLASSIFICATION	units
WITHOUT_CLASSIFICATION	interval
WITHOUT_CLASSIFICATION	dial outline paint
WITHOUT_CLASSIFICATION	dial shape
WITHOUT_CLASSIFICATION	dial background paint
WITHOUT_CLASSIFICATION	seriesPaint
WITHOUT_CLASSIFICATION	seriesPaintList
WITHOUT_CLASSIFICATION	baseSeriesPaint
WITHOUT_CLASSIFICATION	seriesOutlinePaint
WITHOUT_CLASSIFICATION	seriesOutlinePaintList
WITHOUT_CLASSIFICATION	baseSeriesOutlinePaint
WITHOUT_CLASSIFICATION	seriesOutlineStroke
WITHOUT_CLASSIFICATION	seriesOutlineStrokeList
WITHOUT_CLASSIFICATION	add an empty series
WITHOUT_CLASSIFICATION	correct outcome
WITHOUT_CLASSIFICATION	high
WITHOUT_CLASSIFICATION	low
WITHOUT_CLASSIFICATION	close
WITHOUT_CLASSIFICATION	XYSeries s =
WITHOUT_CLASSIFICATION	there should be no change event when clearing an empty series
WITHOUT_CLASSIFICATION	clean up
WITHOUT_CLASSIFICATION	shape
WITHOUT_CLASSIFICATION	stroke
WITHOUT_CLASSIFICATION	labelFont
WITHOUT_CLASSIFICATION	labelPaint
WITHOUT_CLASSIFICATION	upperBound
WITHOUT_CLASSIFICATION	paint
WITHOUT_CLASSIFICATION	get the data point...
WITHOUT_CLASSIFICATION	get the data point...
WITHOUT_CLASSIFICATION	get the data point...
WITHOUT_CLASSIFICATION	get the data point...
WITHOUT_CLASSIFICATION	get the data point...
WITHOUT_CLASSIFICATION	get the data point...
WITHOUT_CLASSIFICATION	get the data point...
WITHOUT_CLASSIFICATION	get the data point...
WITHOUT_CLASSIFICATION	get the data point...
WITHOUT_CLASSIFICATION	get the data point...
WITHOUT_CLASSIFICATION	get the data point...
WITHOUT_CLASSIFICATION	get the data point...
WITHOUT_CLASSIFICATION	super.drawSecondaryPass(g2, plot, dataset, pass, series, item, domainAxis, dataArea, rangeAxis, crosshairState, entities);
WITHOUT_CLASSIFICATION	properties save print zoom tooltips
WITHOUT_CLASSIFICATION	properties save print zoom tooltips
WITHOUT_CLASSIFICATION	properties save print zoom tooltips
WITHOUT_CLASSIFICATION	do we need to redraw the buffer?
WITHOUT_CLASSIFICATION	get the origin of the zoom selection in the Java2D space used for drawing the chart (that is, before any scaling to fit the panel)
WITHOUT_CLASSIFICATION	suppresses compiler warning
WITHOUT_CLASSIFICATION	create the chart...
WITHOUT_CLASSIFICATION	shape visible =
WITHOUT_CLASSIFICATION	shape visible =
WITHOUT_CLASSIFICATION	shape visible =
WITHOUT_CLASSIFICATION	we clone the chart because presumably there can be some delay between putting this instance on the system clipboard and actually having the getTransferData() method called...
WITHOUT_CLASSIFICATION	for efficiency, we just use the first, last and middle items to compute a hashCode...
WITHOUT_CLASSIFICATION	create a legend, if requested...
WITHOUT_CLASSIFICATION	pass the click on to the plot... rely on the plot to post a plot change event and redraw the chart...
WITHOUT_CLASSIFICATION	don't zoom unless the mouse pointer is in the plot's data area
WITHOUT_CLASSIFICATION	draw the label
WITHOUT_CLASSIFICATION	now try to reject equality...
WITHOUT_CLASSIFICATION	no plot, no data
WITHOUT_CLASSIFICATION	no plot, no data
WITHOUT_CLASSIFICATION	if fixed auto range, then derive lower bound...
WITHOUT_CLASSIFICATION	if the axis is not visible, don't draw it...
WITHOUT_CLASSIFICATION	if the axis is not visible, don't draw it...
WITHOUT_CLASSIFICATION	if the axis is not visible, don't draw it...
WITHOUT_CLASSIFICATION	if the axis is not visible, don't draw it...
WITHOUT_CLASSIFICATION	add minor ticks (for gridlines)
WITHOUT_CLASSIFICATION	select a tick unit that is the next one bigger than the current (log) range divided by 50
WITHOUT_CLASSIFICATION	look at lower and upper bounds...
WITHOUT_CLASSIFICATION	it is unlikely that 'state' will be null, but check anyway...
WITHOUT_CLASSIFICATION	create a new space object if one wasn't supplied...
WITHOUT_CLASSIFICATION	work out the number of periods to skip for labelling
WITHOUT_CLASSIFICATION	draw the arrow...
WITHOUT_CLASSIFICATION	set flag true if negative values not allowed and the lower bound is between 0 and 10:
WITHOUT_CLASSIFICATION	parameter value is < -10 calculate log using positive value:
WITHOUT_CLASSIFICATION	calculate power using positive value; then negate
WITHOUT_CLASSIFICATION	parameter value is <= 0 use as-is
WITHOUT_CLASSIFICATION	if less than 1.0 then make it 1.0 subtract out margin and get exponential value:
WITHOUT_CLASSIFICATION	negatives not allowed and lower range bound is zero use data range bound instead
WITHOUT_CLASSIFICATION	get positive exponent create multiplier value multiply, round up, and divide for bound value:
WITHOUT_CLASSIFICATION	negatives allowed or upper bound not between 0 & 1 if flag then change to log version of highest value to make range begin at a 10^n value; else use nearest int
WITHOUT_CLASSIFICATION	get log10 version of lower bound and round to integer:
WITHOUT_CLASSIFICATION	first tick of series, or not too small a value and one of first 3 ticks, or last tick to be displayed set exact number of fractional digits to be shown (no effect if showing "1e#"-style ticks):
WITHOUT_CLASSIFICATION	did zero tick last iteration clear flag create tick label string: show tick label if "1e#"-style and it's one of the first two, if it's the first or last in the set, or if it's 1-5; beyond that show fewer as the values get larger:
WITHOUT_CLASSIFICATION	as far as I know, the Locale for the calendar only affects week number calculations, and since DateTickUnit doesn't do week arithmetic, the default locale (whatever it is) should be fine here...
WITHOUT_CLASSIFICATION	as far as I know, the Locale for the calendar only affects week number calculations, and since DateTickUnit doesn't do week arithmetic, the default locale (whatever it is) should be fine here...
WITHOUT_CLASSIFICATION	start with the current tick unit...
WITHOUT_CLASSIFICATION	all tick labels have the same width (equal to the height of the font)...
WITHOUT_CLASSIFICATION	draw the tick marks and labels...
WITHOUT_CLASSIFICATION	we call refresh ticks just to get the maximum width or height
WITHOUT_CLASSIFICATION	calculate midnight of first monday after 1/1/1900 relative to current locale
WITHOUT_CLASSIFICATION	cycle through all the segments contained in the BaseTimeline exception segment
WITHOUT_CLASSIFICATION	this is not one of our included segment, skip it
WITHOUT_CLASSIFICATION	first test for equality (contains or contained)
WITHOUT_CLASSIFICATION	key not found
WITHOUT_CLASSIFICATION	Compute number of labels
WITHOUT_CLASSIFICATION	TOP
WITHOUT_CLASSIFICATION	RIGHT
WITHOUT_CLASSIFICATION	argument checking delegated...
WITHOUT_CLASSIFICATION	gets the outline stroke width of the plot
WITHOUT_CLASSIFICATION	first arrange without constraints, and see if this fits within the required ranges...
WITHOUT_CLASSIFICATION	first arrange without constraints, and see if this fits within the required ranges...
WITHOUT_CLASSIFICATION	set a theme using the new shadow generator feature available in 1.0.14 - for backwards compatibility it is not enabled by default
WITHOUT_CLASSIFICATION	More than 150 demo applications are included with the JFreeChart Developer Guide...for more information, see: > http:www.object-refinery.com/jfreechart/guide.html
WITHOUT_CLASSIFICATION	dmo: added this panel for colorbar control. (start dmo additions)
WITHOUT_CLASSIFICATION	dmo: (end dmo additions)
WITHOUT_CLASSIFICATION	No op
WITHOUT_CLASSIFICATION	defer argument checks...
WITHOUT_CLASSIFICATION	defer argument checks...
WITHOUT_CLASSIFICATION	defer argument checks...
WITHOUT_CLASSIFICATION	defer argument checks...
WITHOUT_CLASSIFICATION	defer argument checks...
WITHOUT_CLASSIFICATION	defer argument checks...
WITHOUT_CLASSIFICATION	defer argument checks...
WITHOUT_CLASSIFICATION	defer argument checks...
WITHOUT_CLASSIFICATION	defer argument checks...
WITHOUT_CLASSIFICATION	pass on the event to the auxiliary handlers
WITHOUT_CLASSIFICATION	pass on the event to the auxiliary handlers
WITHOUT_CLASSIFICATION	does nothing unless overridden
WITHOUT_CLASSIFICATION	does nothing unless overridden
WITHOUT_CLASSIFICATION	no initial zoom rectangle exists but the handler is set as life handler unregister
WITHOUT_CLASSIFICATION	float midX = (float) (minX + (plotArea.getWidth() getRotateX())); float midY = (float) (minY + (plotArea.getHeight() getRotateY()));
WITHOUT_CLASSIFICATION	/ we have rotation
WITHOUT_CLASSIFICATION	store the plot and its weight
WITHOUT_CLASSIFICATION	store the plot and its weight
WITHOUT_CLASSIFICATION	work out the space required by the domain axis...
WITHOUT_CLASSIFICATION	work out the maximum height or width of the non-shared axes...
WITHOUT_CLASSIFICATION	calculate plotAreas of all sub-plots, maximum vertical/horizontal axis width/height
WITHOUT_CLASSIFICATION	set up info collection...
WITHOUT_CLASSIFICATION	set up info collection...
WITHOUT_CLASSIFICATION	adjust the drawing area for plot insets (if any)...
WITHOUT_CLASSIFICATION	adjust the drawing area for plot insets (if any)...
WITHOUT_CLASSIFICATION	after setting up all the subplots, the shared range axis may need reconfiguring
WITHOUT_CLASSIFICATION	adjust the plot area by the interior spacing value
WITHOUT_CLASSIFICATION	if we are drawing a perfect circle, we need to readjust the top left coordinates of the drawing area for the arcs to arrive at this effect.
WITHOUT_CLASSIFICATION	establish the coordinates of the top left corner of the drawing area
WITHOUT_CLASSIFICATION	draw the sections at the top of the pie (and set up tooltips)...
WITHOUT_CLASSIFICATION	the pie sections are arranged ANTICLOCKWISE
WITHOUT_CLASSIFICATION	starts at the back and finishes at the front (wrapping the left side)
WITHOUT_CLASSIFICATION	if the plot area is too small, just return...
WITHOUT_CLASSIFICATION	setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	turn off anti-aliasing when filling rectangles
WITHOUT_CLASSIFICATION	add an entity for the item...
WITHOUT_CLASSIFICATION	add an entity for the item...
WITHOUT_CLASSIFICATION	delegate 'info' and 'source' argument checks...
WITHOUT_CLASSIFICATION	if the source point doesn't fall within a subplot, we do the zoom on all subplots...
WITHOUT_CLASSIFICATION	if the source point doesn't fall within a subplot, we do the zoom on all subplots...
WITHOUT_CLASSIFICATION	is there an override?
WITHOUT_CLASSIFICATION	is there an override?
WITHOUT_CLASSIFICATION	nothing defined - do we autoPopulate?
WITHOUT_CLASSIFICATION	null argument check delegated...
WITHOUT_CLASSIFICATION	null argument check delegated...
WITHOUT_CLASSIFICATION	null argument check delegated...
WITHOUT_CLASSIFICATION	the explode area defines the max circle/ellipse for the exploded pie sections. it is defined by shrinking the linkArea by the linkMargin factor.
WITHOUT_CLASSIFICATION	work out the mid angle (0 - 90 and 270 - 360) = right, otherwise left
WITHOUT_CLASSIFICATION	delegate...
WITHOUT_CLASSIFICATION	delegate...
WITHOUT_CLASSIFICATION	delegate...
WITHOUT_CLASSIFICATION	delegate...
WITHOUT_CLASSIFICATION	delegate...
WITHOUT_CLASSIFICATION	no axis, no gridlines...
WITHOUT_CLASSIFICATION	can't zoom domain axis
WITHOUT_CLASSIFICATION	can't zoom domain axis
WITHOUT_CLASSIFICATION	the above should cover all the options...
WITHOUT_CLASSIFICATION	get the source coordinate - this plot has always a VERTICAL orientation
WITHOUT_CLASSIFICATION	get the source coordinate - this plot has always a VERTICAL orientation
WITHOUT_CLASSIFICATION	return the override, if there is one...
WITHOUT_CLASSIFICATION	PlotOrientation.VERTICAL
WITHOUT_CLASSIFICATION	PlotOrientation.VERTICAL
WITHOUT_CLASSIFICATION	PlotOrientation.VERTICAL
WITHOUT_CLASSIFICATION	no domain axis to zoom
WITHOUT_CLASSIFICATION	no domain axis to zoom
WITHOUT_CLASSIFICATION	the indicator bounds is calculated from the templateValue (which determines the minimum size), the maxTemplateValue (which, if specified, provides a maximum size) and the actual value
WITHOUT_CLASSIFICATION	startAngle
WITHOUT_CLASSIFICATION	startAngle
WITHOUT_CLASSIFICATION	extent
WITHOUT_CLASSIFICATION	majorTickIncrement majorTickLength majorTickPaint majorTickStroke minorTickCount minorTickLength minorTickPaint minorTickStroke tickLabelOffset tickLabelFont tickLabelsVisible tickLabelFormatter firstTickLabelsVisible
WITHOUT_CLASSIFICATION	SERIES VISIBLE IN LEGEND (not yet respected by all renderers)
WITHOUT_CLASSIFICATION	PAINT
WITHOUT_CLASSIFICATION	STROKE
WITHOUT_CLASSIFICATION	itemLabelFontList baseItemLabelFont itemLabelPaintList baseItemLabelPaint positiveItemLabelPositionList basePositiveItemLabelPosition negativeItemLabelPositionList baseNegativeItemLabelPosition itemLabelAnchorOffset createEntityList baseCreateEntities
WITHOUT_CLASSIFICATION	for value in bounds, do the lookup...
WITHOUT_CLASSIFICATION	for data in ascending order by x-value, we are (broadly) looking for the index of the highest x-value that is less than xLow
WITHOUT_CLASSIFICATION	we don't know anything about the ordering of the x-values, but we can still skip any trailing values that fall outside the range...
WITHOUT_CLASSIFICATION	leave the y values (y1, y0) untranslated as it is going to be be stacked up later by previous series values, after this it will be translated.
WITHOUT_CLASSIFICATION	get the previous point and the next point so we can calculate a "hot spot" for the area (used by the chart entity)...
WITHOUT_CLASSIFICATION	FIXME: calculate xx0
WITHOUT_CLASSIFICATION	LEFT POLYGON
WITHOUT_CLASSIFICATION	calculate the bar width
WITHOUT_CLASSIFICATION	wait till we are at the last item for the row then draw the whole stack at once
WITHOUT_CLASSIFICATION	a list to store the series index and bar region, so we can draw all the labels at the end...
WITHOUT_CLASSIFICATION	add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	do nothing if item is not visible
WITHOUT_CLASSIFICATION	current data point...
WITHOUT_CLASSIFICATION	clip left and right bounds to data area
WITHOUT_CLASSIFICATION	clip left and right bounds to data area
WITHOUT_CLASSIFICATION	PlotOrientation.HORIZONTAL
WITHOUT_CLASSIFICATION	bar is not visible
WITHOUT_CLASSIFICATION	bar is not visible
WITHOUT_CLASSIFICATION	bar is not visible
WITHOUT_CLASSIFICATION	draw the outline...
WITHOUT_CLASSIFICATION	collect entity and tool tip information...
WITHOUT_CLASSIFICATION	collect entity and tool tip information...
WITHOUT_CLASSIFICATION	collect entity and tool tip information...
WITHOUT_CLASSIFICATION	collect entity and tool tip information...
WITHOUT_CLASSIFICATION	collect entity and tool tip information...
WITHOUT_CLASSIFICATION	collect entity and tool tip information...
WITHOUT_CLASSIFICATION	calculate bar width...
WITHOUT_CLASSIFICATION	FIXME: add setBaseItemLabelGenerator(CategoryItemLabelGenerator, boolean) ?
WITHOUT_CLASSIFICATION	ITEM LABEL PAINT /
WITHOUT_CLASSIFICATION	last series, so we are ready to draw the min and max
WITHOUT_CLASSIFICATION	draw mean - SPECIAL AIMS REQUIREMENT...
WITHOUT_CLASSIFICATION	From outlier array sort out which are outliers and put these into a list If there are any farouts, set the flag on the OutlierListCollection
WITHOUT_CLASSIFICATION	avoid possible sun.dc.pr.PRException: endPath: bad path
WITHOUT_CLASSIFICATION	avoid possible sun.dc.pr.PRException: endPath: bad path
WITHOUT_CLASSIFICATION	Add the last point (x,0)
WITHOUT_CLASSIFICATION	Add the last point (x,0)
WITHOUT_CLASSIFICATION	check if initial polygon needs to be clipped
WITHOUT_CLASSIFICATION	never updated the subtrahend if it is implied to be zero
WITHOUT_CLASSIFICATION	check if line segments are colinear
WITHOUT_CLASSIFICATION	clear the point vectors
WITHOUT_CLASSIFICATION	ITEM LABELS VISIBLE
WITHOUT_CLASSIFICATION	we don't need the sign
WITHOUT_CLASSIFICATION	fillType == TO_UPPER_BOUND
WITHOUT_CLASSIFICATION	solve linear system with tridiagonal n by n matrix a using Gaussian elimination without pivoting where a(i,i-1) = sub[i] for 2<=i<=n a(i,i) = diag[i] for 1<=i<=n a(i,i+1) = sup[i] for 1<=i<=n-1 (the values sub[1], sup[n] are ignored) right hand side vector b[1:n] is overwritten with solution NOTE: 1...n is used in all arrays, 0 is unused
WITHOUT_CLASSIFICATION	this represents the situation for drawing a horizontal bar.
WITHOUT_CLASSIFICATION	draw median
WITHOUT_CLASSIFICATION	Check that the graph being served was created by the current user or that it begins with "public"
WITHOUT_CLASSIFICATION	the textAlignment and the horizontalAlignment are separate things, but it makes sense for the default textAlignment to match the title's horizontal alignment...
WITHOUT_CLASSIFICATION	we don't use the calendar or numberFormat fields, but equals(Object) is failing without them being non-null
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	adjust text bounds to match string position
WITHOUT_CLASSIFICATION	now fetch the row data - need to bear in mind that the row structure may not have an entry for the column key, but that we have already checked that the key is valid for the 2D structure
WITHOUT_CLASSIFICATION	defer null argument check
WITHOUT_CLASSIFICATION	defer null argument check
WITHOUT_CLASSIFICATION	set up the series names...
WITHOUT_CLASSIFICATION	is the category valid?
WITHOUT_CLASSIFICATION	create a temporary vector set x to some arbitary value (used below)
WITHOUT_CLASSIFICATION	look for any keys that we don't already know about...
WITHOUT_CLASSIFICATION	Iterate and find all keys below threshold percentThreshold
WITHOUT_CLASSIFICATION	handle special case of BoxAndWhiskerDataset
WITHOUT_CLASSIFICATION	standard case - plain XYDataset
WITHOUT_CLASSIFICATION	hasn't implemented RangeInfo, so we'll have to iterate...
WITHOUT_CLASSIFICATION	hasn't implemented RangeInfo, so we'll have to iterate...
WITHOUT_CLASSIFICATION	CASE 1 : Comparing to another Second object -------------------------------------------
WITHOUT_CLASSIFICATION	CASE 2 : Comparing to another TimePeriod object -----------------------------------------------
WITHOUT_CLASSIFICATION	CASE 2 : Comparing to another TimePeriod object -----------------------------------------------
WITHOUT_CLASSIFICATION	CASE 2 : Comparing to another TimePeriod object -----------------------------------------------
WITHOUT_CLASSIFICATION	CASE 2 : Comparing to another TimePeriod object -----------------------------------------------
WITHOUT_CLASSIFICATION	remove old items if necessary, but don't notify anyone, because that happens next anyway...
WITHOUT_CLASSIFICATION	get the current data item...
WITHOUT_CLASSIFICATION	get the current data item...
WITHOUT_CLASSIFICATION	The next 3 functions override the base-class implementation of the DomainInfo interface. Using saved limits (updated by each updateTime() call), improves performance.
WITHOUT_CLASSIFICATION	deregister the collection as a change listener to each series in the collection
WITHOUT_CLASSIFICATION	alternatively, sometimes the first few days of the year are considered to fall in the last week of the previous year...
WITHOUT_CLASSIFICATION	Unregister the collection as a change listener to each series in the collection.
WITHOUT_CLASSIFICATION	if the series is sorted, the negative index is a result from Collections.binarySearch() and tells us where to insert the new item...otherwise it will be just -1 and we should just append the value to the list...
WITHOUT_CLASSIFICATION	pass mouse move event if some ChartMouseListener are listening
WITHOUT_CLASSIFICATION	row keys...
WITHOUT_CLASSIFICATION	row keys...
WITHOUT_CLASSIFICATION	row keys...
WITHOUT_CLASSIFICATION	chart title domain axis label range axis label data orientation include legend tooltips? URLs?
WITHOUT_CLASSIFICATION	the SWTGraphics2D class doesn't handle GradientPaint well, so replace the gradient painter from the default theme with a standard painter...
WITHOUT_CLASSIFICATION	Dispose of any fonts we have created
WITHOUT_CLASSIFICATION	Create the new font and set it into the title label
WITHOUT_CLASSIFICATION	create the new color and set it to the SwtPaintCanvas
WITHOUT_CLASSIFICATION	row 2: outline color
WITHOUT_CLASSIFICATION	Use a SwtPaintCanvas to show the color, note that we must set the heightHint.
WITHOUT_CLASSIFICATION	backgroundPaint
WITHOUT_CLASSIFICATION	backgroundPaint
WITHOUT_CLASSIFICATION	backgroundPaint
WITHOUT_CLASSIFICATION	now create a new title and replace the existing title, several things should happen: (1) Adding the new title should trigger an immediate ChartChangeEvent; (2) Modifying the new title should trigger a ChartChangeEvent; (3) Modifying the old title should NOT trigger a ChartChangeEvent
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	create a dataset...
WITHOUT_CLASSIFICATION	create a dataset...
WITHOUT_CLASSIFICATION	create a dataset...
WITHOUT_CLASSIFICATION	create a dataset...
WITHOUT_CLASSIFICATION	create a dataset...
WITHOUT_CLASSIFICATION	create a dataset...
WITHOUT_CLASSIFICATION	create a dataset...
WITHOUT_CLASSIFICATION	create a dataset...
WITHOUT_CLASSIFICATION	create a dataset...
WITHOUT_CLASSIFICATION	labelFont
WITHOUT_CLASSIFICATION	fillPaint
WITHOUT_CLASSIFICATION	fillPaint
WITHOUT_CLASSIFICATION	fillPaint
WITHOUT_CLASSIFICATION	outlinePaint
WITHOUT_CLASSIFICATION	a null key should throw an IllegalArgumentException
WITHOUT_CLASSIFICATION	a null key should throw an IllegalArgumentException
WITHOUT_CLASSIFICATION	gridBandPaint
WITHOUT_CLASSIFICATION	private double angle;
WITHOUT_CLASSIFICATION	private double baseRadius;
WITHOUT_CLASSIFICATION	private double arrowWidth;
WITHOUT_CLASSIFICATION	private double labelOffset;
WITHOUT_CLASSIFICATION	font
WITHOUT_CLASSIFICATION	paint
WITHOUT_CLASSIFICATION	paint
WITHOUT_CLASSIFICATION	paint
WITHOUT_CLASSIFICATION	ok, exception is expected
WITHOUT_CLASSIFICATION	stroke
WITHOUT_CLASSIFICATION	BufferedImage image =
WITHOUT_CLASSIFICATION	BufferedImage image =
WITHOUT_CLASSIFICATION	BufferedImage image =
WITHOUT_CLASSIFICATION	BufferedImage image =
WITHOUT_CLASSIFICATION	BufferedImage image =
WITHOUT_CLASSIFICATION	BufferedImage image =
WITHOUT_CLASSIFICATION	BufferedImage image =
WITHOUT_CLASSIFICATION	BufferedImage image =
WITHOUT_CLASSIFICATION	BufferedImage image =
WITHOUT_CLASSIFICATION	BufferedImage image =
WITHOUT_CLASSIFICATION	BufferedImage image =
WITHOUT_CLASSIFICATION	BufferedImage image =
WITHOUT_CLASSIFICATION	BufferedImage image =
WITHOUT_CLASSIFICATION	BufferedImage image =
WITHOUT_CLASSIFICATION	BufferedImage image =
WITHOUT_CLASSIFICATION	BufferedImage image =
WITHOUT_CLASSIFICATION	BufferedImage image =
WITHOUT_CLASSIFICATION	BufferedImage image =
WITHOUT_CLASSIFICATION	dateFormatOverride
WITHOUT_CLASSIFICATION	range
WITHOUT_CLASSIFICATION	check that setting the max date to something on or before the current min date works...
WITHOUT_CLASSIFICATION	five dates to check...
WITHOUT_CLASSIFICATION	five dates to check...
WITHOUT_CLASSIFICATION	five dates to check...
WITHOUT_CLASSIFICATION	five dates to check...
WITHOUT_CLASSIFICATION	five dates to check...
WITHOUT_CLASSIFICATION	five dates to check...
WITHOUT_CLASSIFICATION	five dates to check...
WITHOUT_CLASSIFICATION	five dates to check...
WITHOUT_CLASSIFICATION	five dates to check...
WITHOUT_CLASSIFICATION	START: check d0 and d1
WITHOUT_CLASSIFICATION	START: check d0 and d1
WITHOUT_CLASSIFICATION	MIDDLE: check d1, d2 and d3
WITHOUT_CLASSIFICATION	MIDDLE: check d1, d2 and d3
WITHOUT_CLASSIFICATION	END: check d3 and d4
WITHOUT_CLASSIFICATION	END: check d3 and d4
WITHOUT_CLASSIFICATION	private boolean autoRangeStickyZero;
WITHOUT_CLASSIFICATION	now replacing the dataset should update the axis range...
WITHOUT_CLASSIFICATION	now replacing the dataset should update the axis range...
WITHOUT_CLASSIFICATION	set axis bounds to be both greater than 1
WITHOUT_CLASSIFICATION	check for bounds interval that includes 1
WITHOUT_CLASSIFICATION	check for bounds interval that includes 1
WITHOUT_CLASSIFICATION	tickLabelFont
WITHOUT_CLASSIFICATION	advance line Paint
WITHOUT_CLASSIFICATION	Add exception in included segments
WITHOUT_CLASSIFICATION	Saturday and Sundays are non business hours
WITHOUT_CLASSIFICATION	These constants control test cycles in the validateXXXX methods.
WITHOUT_CLASSIFICATION	These constants control test cycles in the validateXXXX methods.
WITHOUT_CLASSIFICATION	1-ms test timeline using 5 included and 2 excluded segments. timeline start time = 0 | v 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 .. +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. | | | | | |EE|EE| | | | | |EE|EE| | | | | | |EE|EE| <-- msTimeline +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. \_________ ________/ \_/ \/ | segment group segment size = 1 ms
WITHOUT_CLASSIFICATION	1-ms test timeline (with a baseTimeline) using 2 included and 2 excluded segments centered inside each base segment The ms2Timeline without a base would look like this: timeline start time = 1 | v 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 ... +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... |EE| | |EE|EE| | |EE|EE| | |EE|EE| | |EE|EE| | |EE| <-- ms2Timeline +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... \____ _____/ \_/ \/ | segment group segment size = 1 ms With the base timeline some originally included segments are now removed (see "xx" below): 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 ... +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... |EE| | |EE|EE|xx|xx|EE|EE| | |EE|EE|xx|xx|EE|EE| | |EE| <-- ms2Timeline +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... | | | | |EE|EE|EE|EE| | | | |EE|EE|EE|EE| | | | | <-- ms2BaseTimeline +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+...
WITHOUT_CLASSIFICATION	test monday though friday timeline
WITHOUT_CLASSIFICATION	find first Monday after 2001-01-01
WITHOUT_CLASSIFICATION	test construction process
WITHOUT_CLASSIFICATION	verify attributes set during object construction
WITHOUT_CLASSIFICATION	main include and excluded segments
WITHOUT_CLASSIFICATION	test timeline translations
WITHOUT_CLASSIFICATION	verify all timeline segments included in the baseTimeline.segment are now exceptions
WITHOUT_CLASSIFICATION	1-Jan-2000
WITHOUT_CLASSIFICATION	tick label insets...
WITHOUT_CLASSIFICATION	tick mark paint...
WITHOUT_CLASSIFICATION	negativeArrowVisible;
WITHOUT_CLASSIFICATION	axisLinePaint
WITHOUT_CLASSIFICATION	autoRange
WITHOUT_CLASSIFICATION	autoRangeMinimumSize
WITHOUT_CLASSIFICATION	private double fixedAutoRange;
WITHOUT_CLASSIFICATION	private boolean autoTickUnitSelection;
WITHOUT_CLASSIFICATION	private int autoTickIndex; protected double reservedForTickLabels; protected double reservedForAxisLabel;
WITHOUT_CLASSIFICATION	TBLRC 00001 - center item only
WITHOUT_CLASSIFICATION	TBLRC 00001 - center item only
WITHOUT_CLASSIFICATION	TBLRC 00100 - left item only
WITHOUT_CLASSIFICATION	TBLRC 10101 - top, left and center
WITHOUT_CLASSIFICATION	TBLRC 10110 - top, left and right
WITHOUT_CLASSIFICATION	TBLRC 11000 - top and bottom only
WITHOUT_CLASSIFICATION	TBLRC 11011
WITHOUT_CLASSIFICATION	TBLRC 11111 - all
WITHOUT_CLASSIFICATION	standard test
WITHOUT_CLASSIFICATION	Y format
WITHOUT_CLASSIFICATION	some setup...
WITHOUT_CLASSIFICATION	some setup...
WITHOUT_CLASSIFICATION	parent plot...
WITHOUT_CLASSIFICATION	innerSeparatorExtension
WITHOUT_CLASSIFICATION	domainAxis - no longer a separate field but test anyway...
WITHOUT_CLASSIFICATION	rangeAxis - no longer a separate field but test anyway...
WITHOUT_CLASSIFICATION	renderer - no longer a separate field but test anyway...
WITHOUT_CLASSIFICATION	domainGridlinesVisible
WITHOUT_CLASSIFICATION	domainGridlinePosition
WITHOUT_CLASSIFICATION	rangeGridlinePaint
WITHOUT_CLASSIFICATION	anchorValue
WITHOUT_CLASSIFICATION	rangeCrosshairPaint
WITHOUT_CLASSIFICATION	rangeCrosshairPaint
WITHOUT_CLASSIFICATION	range markers - no longer separate fields but test anyway...
WITHOUT_CLASSIFICATION	fixed legend items
WITHOUT_CLASSIFICATION	domainCrosshairPaint
WITHOUT_CLASSIFICATION	check for independence
WITHOUT_CLASSIFICATION	check for independence
WITHOUT_CLASSIFICATION	now check that the chart is usable...
WITHOUT_CLASSIFICATION	now check that the chart is usable...
WITHOUT_CLASSIFICATION	now make a change to the renderer and see if it triggers a plot change event...
WITHOUT_CLASSIFICATION	should get IllegalArgumentException for negative index
WITHOUT_CLASSIFICATION	if multiple axes are mapped, the first in the list should be returned...
WITHOUT_CLASSIFICATION	if multiple axes are mapped, the first in the list should be returned...
WITHOUT_CLASSIFICATION	add a second dataset
WITHOUT_CLASSIFICATION	units
WITHOUT_CLASSIFICATION	tick labels visible
WITHOUT_CLASSIFICATION	tick size
WITHOUT_CLASSIFICATION	the clone and the original share a reference to the SAME dataset
WITHOUT_CLASSIFICATION	check null argument...
WITHOUT_CLASSIFICATION	check null argument...
WITHOUT_CLASSIFICATION	check null argument...
WITHOUT_CLASSIFICATION	check null argument...
WITHOUT_CLASSIFICATION	check null argument...
WITHOUT_CLASSIFICATION	check null argument...
WITHOUT_CLASSIFICATION	check null argument...
WITHOUT_CLASSIFICATION	check null argument...
WITHOUT_CLASSIFICATION	check null argument...
WITHOUT_CLASSIFICATION	check null argument...
WITHOUT_CLASSIFICATION	check null argument...
WITHOUT_CLASSIFICATION	labelType...
WITHOUT_CLASSIFICATION	pieIndex...
WITHOUT_CLASSIFICATION	ignoreZeroValues
WITHOUT_CLASSIFICATION	sectionOutlinesVisible
WITHOUT_CLASSIFICATION	sectionOutlineStroke
WITHOUT_CLASSIFICATION	labelBackgroundPaint
WITHOUT_CLASSIFICATION	labelGenerator
WITHOUT_CLASSIFICATION	we use ValueMarker for the tests, because we need a concrete subclass...
WITHOUT_CLASSIFICATION	we use ValueMarker for the tests, because we need a concrete subclass...
WITHOUT_CLASSIFICATION	we use ValueMarker for the tests, because we need a concrete subclass...
WITHOUT_CLASSIFICATION	we use ValueMarker for the tests, because we need a concrete subclass...
WITHOUT_CLASSIFICATION	we use ValueMarker for the tests, because we need a concrete subclass...
WITHOUT_CLASSIFICATION	we use ValueMarker for the tests, because we need a concrete subclass...
WITHOUT_CLASSIFICATION	we use ValueMarker for the tests, because we need a concrete subclass...
WITHOUT_CLASSIFICATION	we use ValueMarker for the tests, because we need a concrete subclass...
WITHOUT_CLASSIFICATION	we use ValueMarker for the tests, because we need a concrete subclass...
WITHOUT_CLASSIFICATION	we use ValueMarker for the tests, because we need a concrete subclass...
WITHOUT_CLASSIFICATION	verify independence of fixed legend item collection
WITHOUT_CLASSIFICATION	stroke sequence
WITHOUT_CLASSIFICATION	stroke index
WITHOUT_CLASSIFICATION	check an inherited attribute
WITHOUT_CLASSIFICATION	check an inherited attribute
WITHOUT_CLASSIFICATION	check an inherited attribute
WITHOUT_CLASSIFICATION	check an inherited attribute
WITHOUT_CLASSIFICATION	check an inherited attribute
WITHOUT_CLASSIFICATION	check an inherited attribute
WITHOUT_CLASSIFICATION	check an inherited attribute
WITHOUT_CLASSIFICATION	check that the listener lists are independent
WITHOUT_CLASSIFICATION	check that the listener lists are independent
WITHOUT_CLASSIFICATION	check that the listener lists are independent
WITHOUT_CLASSIFICATION	check that the listener lists are independent
WITHOUT_CLASSIFICATION	check that the listener lists are independent
WITHOUT_CLASSIFICATION	minorTickCount
WITHOUT_CLASSIFICATION	try a default instance
WITHOUT_CLASSIFICATION	try a customised instance
WITHOUT_CLASSIFICATION	seriesVisibleInLegend
WITHOUT_CLASSIFICATION	upper bound and margin OK; get log10 of upper bound
WITHOUT_CLASSIFICATION	fillPaintList
WITHOUT_CLASSIFICATION	apply upper margin by increasing upper bound:
WITHOUT_CLASSIFICATION	baseStroke
WITHOUT_CLASSIFICATION	Reference: http:www.antigrain.com/research/bezier_interpolation/
WITHOUT_CLASSIFICATION	get the data point...
WITHOUT_CLASSIFICATION	initialize ChartPanel-specific tool tip delays with values the from ToolTipManager.sharedInstance()
WITHOUT_CLASSIFICATION	only draw if we have good values
WITHOUT_CLASSIFICATION	properties save print zoom tooltips
WITHOUT_CLASSIFICATION	properties save print zoom tooltips
WITHOUT_CLASSIFICATION	stop listening for changes to the existing chart
WITHOUT_CLASSIFICATION	set up popup menu...
WITHOUT_CLASSIFICATION	itemLabelsVisible
WITHOUT_CLASSIFICATION	make the background of the buffer clear and transparent
WITHOUT_CLASSIFICATION	for MacOSX we can't use the CTRL key for mouse drags, see: http:developer.apple.com/qa/qa2004/qa1362.html
WITHOUT_CLASSIFICATION	add the new chart
WITHOUT_CLASSIFICATION	work out if scaling is required...
WITHOUT_CLASSIFICATION	first determine the size of the chart rendering area...
WITHOUT_CLASSIFICATION	do we need to resize the buffer?
WITHOUT_CLASSIFICATION	are we using the chart buffer?
WITHOUT_CLASSIFICATION	clear the flag
WITHOUT_CLASSIFICATION	do we need to redraw the buffer?
WITHOUT_CLASSIFICATION	redraw the zoom rectangle (if present) - if useBuffer is false, we use XOR so we can XOR the rectangle away again without redrawing the chart
WITHOUT_CLASSIFICATION	redrawing the chart every time...
WITHOUT_CLASSIFICATION	zap the buffer onto the panel...
WITHOUT_CLASSIFICATION	does nothing - override if necessary
WITHOUT_CLASSIFICATION	many of the zoom methods need a screen location - all we have is the zoomPoint, but it might be null. Here we grab the x and y coordinates, or use defaults...
WITHOUT_CLASSIFICATION	itemLabelFontList
WITHOUT_CLASSIFICATION	restore original tooltip dealys
WITHOUT_CLASSIFICATION	can we pan this plot?
WITHOUT_CLASSIFICATION	the actual panning occurs later in the mouseDragged() method
WITHOUT_CLASSIFICATION	if the popup menu has already been triggered, then ignore dragging...
WITHOUT_CLASSIFICATION	handle panning if we have a start point
WITHOUT_CLASSIFICATION	if no initial zoom point was set, ignore dragging...
WITHOUT_CLASSIFICATION	erase the previous zoom rectangle (if any). We only need to do this is we are using XOR mode, which we do when we're not using the buffer (if there is a buffer, then at the end of this method we just trigger a repaint)
WITHOUT_CLASSIFICATION	selected rectangle shouldn't extend outside the data area...
WITHOUT_CLASSIFICATION	Draw the new zoom rectangle...
WITHOUT_CLASSIFICATION	with no buffer, we use XOR to draw the rectangle "over" the chart...
WITHOUT_CLASSIFICATION	if we've been panning, we need to reset now that the mouse is released...
WITHOUT_CLASSIFICATION	for mouseReleased event, (horizontalZoom || verticalZoom) will be true, so we can just test for either being false; otherwise both are true
WITHOUT_CLASSIFICATION	erase the zoom rectangle
WITHOUT_CLASSIFICATION	force a redraw new entity code...
WITHOUT_CLASSIFICATION	we need to guard against this.zoomPoint being null
WITHOUT_CLASSIFICATION	we need to guard against this.zoomPoint being null
WITHOUT_CLASSIFICATION	Set XOR mode to draw the zoom rectangle
WITHOUT_CLASSIFICATION	null will be returned
WITHOUT_CLASSIFICATION	get the origin of the zoom selection in the Java2D space used for drawing the chart (that is, before any scaling to fit the panel)
WITHOUT_CLASSIFICATION	get the origin of the zoom selection in the Java2D space used for drawing the chart (that is, before any scaling to fit the panel)
WITHOUT_CLASSIFICATION	use reflection to get the SVG string
WITHOUT_CLASSIFICATION	Reset to the default 'overwrite' mode
WITHOUT_CLASSIFICATION	Reset to the default 'overwrite' mode
WITHOUT_CLASSIFICATION	Reset to the default 'overwrite' mode
WITHOUT_CLASSIFICATION	null will be returned
WITHOUT_CLASSIFICATION	we suppress shadow generation, because SVG is a vector format and the shadow effect is applied via bitmap effects...
WITHOUT_CLASSIFICATION	pdfDocument class will be null so the function will return false
WITHOUT_CLASSIFICATION	null will be returned
WITHOUT_CLASSIFICATION	null will be returned
WITHOUT_CLASSIFICATION	null will be returned
WITHOUT_CLASSIFICATION	fetch listeners from local storage
WITHOUT_CLASSIFICATION	here we need to update the UI for the popup menu, if the panel has one...
WITHOUT_CLASSIFICATION	we suppress shadow generation, because PDF is a vector format and the shadow effect is applied via bitmap effects...
WITHOUT_CLASSIFICATION	register as a listener with sub-components...
WITHOUT_CLASSIFICATION	go through each zoom menu item and decide whether or not to enable it...
WITHOUT_CLASSIFICATION	suppresses compiler warning
WITHOUT_CLASSIFICATION	we create a new but empty chartMouseListeners list
WITHOUT_CLASSIFICATION	suppresses compiler warning
WITHOUT_CLASSIFICATION	=========================================================== JFreeChart : a free chart library for the Java(tm) platform =========================================================== (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. Project Info: http:www.jfree.org/jfreechart/index.html This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version. This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details. You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA. [Oracle and Java are registered trademarks of Oracle and/or its affiliates. Other names may be trademarks of their respective owners.] ----------------- ChartFactory.java ----------------- (C) Copyright 2001-2014, by Object Refinery Limited and Contributors. Original Author: David Gilbert (for Object Refinery Limited); Contributor(s): Serge V. Grachov; Joao Guilherme Del Valle; Bill Kelemen; Jon Iles; Jelai Wang; Richard Atkinson; David Browning (for Australian Institute of Marine Science); Benoit Xhenseval; Changes ------- 19-Oct-2001 : Version 1, most methods transferred from JFreeChart.java (DG); 22-Oct-2001 : Added methods to create stacked bar charts (DG); Renamed DataSource.java --> Dataset.java etc. (DG); 31-Oct-2001 : Added 3D-effect vertical bar and stacked-bar charts, contributed by Serge V. Grachov (DG); 07-Nov-2001 : Added a flag to control whether or not a legend is added to the chart (DG); 17-Nov-2001 : For pie chart, changed dataset from CategoryDataset to PieDataset (DG); 30-Nov-2001 : Removed try/catch handlers from chart creation, as the exception are now RuntimeExceptions, as suggested by Joao Guilherme Del Valle (DG); 06-Dec-2001 : Added createCombinableXXXXXCharts methods (BK); 12-Dec-2001 : Added createCandlestickChart() method (DG); 13-Dec-2001 : Updated methods for charts with new renderers (DG); 08-Jan-2002 : Added import for com.jrefinery.chart.combination.CombinedChart (DG); 31-Jan-2002 : Changed the createCombinableVerticalXYBarChart() method to use renderer (DG); 06-Feb-2002 : Added new method createWindPlot() (DG); 23-Apr-2002 : Updates to the chart and plot constructor API (DG); 21-May-2002 : Added new method createAreaChart() (JI); 06-Jun-2002 : Added new method createGanttChart() (DG); 11-Jun-2002 : Renamed createHorizontalStackedBarChart() --> createStackedHorizontalBarChart() for consistency (DG); 06-Aug-2002 : Updated Javadoc comments (DG); 21-Aug-2002 : Added createPieChart(CategoryDataset) method (DG); 02-Oct-2002 : Fixed errors reported by Checkstyle (DG); 09-Oct-2002 : Added methods including tooltips and URL flags (DG); 06-Nov-2002 : Moved renderers into a separate package (DG); 18-Nov-2002 : Changed CategoryDataset to TableDataset (DG); 21-Mar-2003 : Incorporated HorizontalCategoryAxis3D, see bug id 685501 (DG); 13-May-2003 : Merged some horizontal and vertical methods (DG); 24-May-2003 : Added support for timeline in createHighLowChart (BK); 07-Jul-2003 : Added createHistogram() method contributed by Jelai Wang (DG); 27-Jul-2003 : Added createStackedAreaXYChart() method (RA); 05-Aug-2003 : added new method createBoxAndWhiskerChart (DB); 08-Sep-2003 : Changed ValueAxis API (DG); 07-Oct-2003 : Added stepped area XY chart contributed by Matthias Rose (DG); 06-Nov-2003 : Added createWaterfallChart() method (DG); 20-Nov-2003 : Set rendering order for 3D bar charts to fix overlapping problems (DG); 25-Nov-2003 : Added createWaferMapChart() method (DG); 23-Dec-2003 : Renamed createPie3DChart() --> createPieChart3D for consistency (DG); 20-Jan-2004 : Added createPolarChart() method (DG); 28-Jan-2004 : Fixed bug (882890) with axis range in createStackedXYAreaChart() method (DG); 25-Feb-2004 : Renamed XYToolTipGenerator --> XYItemLabelGenerator (DG); 11-Mar-2004 : Updated for pie chart changes (DG); 27-Apr-2004 : Added new createPieChart() method contributed by Benoit Xhenseval (see RFE 942195) (DG); 11-May-2004 : Split StandardCategoryItemLabelGenerator --> StandardCategoryToolTipGenerator and StandardCategoryLabelGenerator (DG); 06-Jan-2005 : Removed deprecated methods (DG); 27-Jan-2005 : Added new constructor to LineAndShapeRenderer (DG); 28-Feb-2005 : Added docs to createBubbleChart() method (DG); 17-Mar-2005 : Added createRingPlot() method (DG); 21-Apr-2005 : Replaced Insets with RectangleInsets (DG); 29-Nov-2005 : Removed signal chart (DG); ------------- JFREECHART 1.0.x --------------------------------------------- 26-Jan-2006 : Corrected API docs for createScatterPlot() (DG); 23-Aug-2006 : Modified createStackedXYAreaChart() to use StackedXYAreaRenderer2, because StackedXYAreaRenderer doesn't handle negative values (DG); 27-Sep-2006 : Update createPieChart() method for deprecated code (DG); 29-Nov-2006 : Update createXYBarChart() to use a time based tool tip generator is a DateAxis is requested (DG); 17-Jan-2007 : Added createBoxAndWhiskerChart() method from patch 1603937 submitted by Darren Jung (DG); 10-Jul-2007 : Added new methods to create pie charts with locale for section label and tool tip formatting (DG); 14-Aug-2008 : Added ChartTheme facility (DG); 23-Oct-2008 : Check for legacy theme in setChartTheme() and reset default bar painters (DG); 20-Dec-2008 : In createStackedAreaChart(), set category margin to 0.0 (DG); 02-Jul-2013 : Use ParamChecks class (DG);
WITHOUT_CLASSIFICATION	get absolute value of log10 value
WITHOUT_CLASSIFICATION	suppresses compiler warning
WITHOUT_CLASSIFICATION	suppresses compiler warning
WITHOUT_CLASSIFICATION	create the renderer...
WITHOUT_CLASSIFICATION	create the plot...
WITHOUT_CLASSIFICATION	create the chart...
WITHOUT_CLASSIFICATION	forces recalculation of the axis range
WITHOUT_CLASSIFICATION	reduce the default margins
WITHOUT_CLASSIFICATION	override default
WITHOUT_CLASSIFICATION	get desired width and height from somewhere then...
WITHOUT_CLASSIFICATION	change rendering order to ensure that bar overlapping is the right way around
WITHOUT_CLASSIFICATION	change rendering order to ensure that bar overlapping is the right way around
WITHOUT_CLASSIFICATION	no need to instantiate this
WITHOUT_CLASSIFICATION	seems to be the same...
WITHOUT_CLASSIFICATION	=========================================================== JFreeChart : a free chart library for the Java(tm) platform =========================================================== (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. Project Info: http:www.jfree.org/jfreechart/index.html This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version. This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details. You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA. [Oracle and Java are registered trademarks of Oracle and/or its affiliates. Other names may be trademarks of their respective owners.] ------------------- ChartUtilities.java ------------------- (C) Copyright 2001-2013, by Object Refinery Limited and Contributors. Original Author: David Gilbert (for Object Refinery Limited); Contributor(s): Wolfgang Irler; Richard Atkinson; Xavier Poinsard; Changes ------- 11-Dec-2001 : Version 1. The JPEG method comes from Wolfgang Irler's JFreeChartServletDemo class (DG); 23-Jan-2002 : Changed saveChartAsXXX() methods to pass IOExceptions back to caller (DG); 26-Jun-2002 : Added image map methods (DG); 05-Aug-2002 : Added writeBufferedImage methods Modified writeImageMap method to support flexible image maps (RA); 26-Aug-2002 : Added saveChartAsJPEG and writeChartAsJPEG methods with info objects (RA); 05-Sep-2002 : Added writeImageMap() method to support OverLIB - http:www.bosrup.com/web/overlib (RA); 26-Sep-2002 : Fixed errors reported by Checkstyle (DG); 17-Oct-2002 : Exposed JPEG quality setting and PNG compression level as parameters (DG); 25-Oct-2002 : Fixed writeChartAsJPEG() empty method bug (DG); 13-Mar-2003 : Updated writeImageMap method as suggested by Xavier Poinsard (see Feature Request 688079) (DG); 12-Aug-2003 : Added support for custom image maps using ToolTipTagFragmentGenerator and URLTagFragmentGenerator (RA); 02-Sep-2003 : Separated PNG encoding from writing chart to an OutputStream (RA); 04-Dec-2003 : Chart draw() method modified to include anchor point (DG); 20-Feb-2004 : Edited Javadocs and added argument checking (DG); 05-Apr-2004 : Fixed problem with buffered image type (DG); 01-Aug-2004 : Modified to use EncoderUtil for all image encoding (RA); 02-Aug-2004 : Delegated image map related functionality to ImageMapUtil (RA); 13-Jan-2005 : Renamed ImageMapUtil --> ImageMapUtilities, removed method writeImageMap(PrintWriter, String, ChartRenderingInfo) which exists in ImageMapUtilities (DG); ------------- JFREECHART 1.0.x --------------------------------------------- 06-Feb-2006 : API doc update (DG); 19-Mar-2007 : Use try-finally to close output stream in saveChartAsXXX() methods (DG); 10-Jan-2008 : Fix bug 1868251 - don't create image with transparency when saving to JPEG format (DG); 02-Jul-2013 : Use ParamChecks class (DG);
WITHOUT_CLASSIFICATION	shape filled =
WITHOUT_CLASSIFICATION	shape visible =
WITHOUT_CLASSIFICATION	shape visible =
WITHOUT_CLASSIFICATION	shape visible =
WITHOUT_CLASSIFICATION	shape filled =
WITHOUT_CLASSIFICATION	shape filled =
WITHOUT_CLASSIFICATION	shape filled =
WITHOUT_CLASSIFICATION	shape filled =
WITHOUT_CLASSIFICATION	shape filled =
WITHOUT_CLASSIFICATION	shape outlined
WITHOUT_CLASSIFICATION	shape outlined =
WITHOUT_CLASSIFICATION	line visible
WITHOUT_CLASSIFICATION	line visible
WITHOUT_CLASSIFICATION	shape outlined =
WITHOUT_CLASSIFICATION	shape outlined =
WITHOUT_CLASSIFICATION	shape outlined =
WITHOUT_CLASSIFICATION	line visible =
WITHOUT_CLASSIFICATION	line visible =
WITHOUT_CLASSIFICATION	line visible =
WITHOUT_CLASSIFICATION	positiveItemLabelPosition;
WITHOUT_CLASSIFICATION	work out if scaling is required...
WITHOUT_CLASSIFICATION	shape outlined =
WITHOUT_CLASSIFICATION	line visible =
WITHOUT_CLASSIFICATION	negativeItemLabelPositionList;
WITHOUT_CLASSIFICATION	----------------- --- Constants --- -----------------
WITHOUT_CLASSIFICATION	------------------------ --- Member Variables --- ------------------------
WITHOUT_CLASSIFICATION	-------------------- --- Constructors --- --------------------
WITHOUT_CLASSIFICATION	-------------------------- --- ChartPanel Methods --- --------------------------
WITHOUT_CLASSIFICATION	---------------------- --- Public Methods --- ----------------------
WITHOUT_CLASSIFICATION	----------------------- --- Private Methods --- -----------------------
WITHOUT_CLASSIFICATION	do nothing at all
WITHOUT_CLASSIFICATION	now process the plot if there is one
WITHOUT_CLASSIFICATION	process all domain axes
WITHOUT_CLASSIFICATION	process all domain axes
WITHOUT_CLASSIFICATION	process all range axes
WITHOUT_CLASSIFICATION	process all range axes
WITHOUT_CLASSIFICATION	process all renderers
WITHOUT_CLASSIFICATION	process all renderers
WITHOUT_CLASSIFICATION	process all annotations
WITHOUT_CLASSIFICATION	BarRenderer
WITHOUT_CLASSIFICATION	BarRenderer3D
WITHOUT_CLASSIFICATION	LineRenderer3D
WITHOUT_CLASSIFICATION	StatisticalBarRenderer
WITHOUT_CLASSIFICATION	MinMaxCategoryRenderer
WITHOUT_CLASSIFICATION	handle GradientPaint as a special case
WITHOUT_CLASSIFICATION	create storage for listeners...
WITHOUT_CLASSIFICATION	add the chart title, if one has been specified...
WITHOUT_CLASSIFICATION	this fires a ChartChangeEvent
WITHOUT_CLASSIFICATION	if the flag is being set to true, there may be queued up changes...
WITHOUT_CLASSIFICATION	register as a listener with sub-components...
WITHOUT_CLASSIFICATION	seem to be the same...
WITHOUT_CLASSIFICATION	draw the label
WITHOUT_CLASSIFICATION	clear the section attributes so that the theme's DrawingSupplier will be used
WITHOUT_CLASSIFICATION	for efficiency, we just use the first, last and middle items to compute a hashCode...
WITHOUT_CLASSIFICATION	for efficiency, we just use the first, last and middle items to compute a hashCode...
WITHOUT_CLASSIFICATION	default is to notify listeners when the chart changes
WITHOUT_CLASSIFICATION	added the following hint because of http:stackoverflow.com/questions/7785082/
WITHOUT_CLASSIFICATION	record the chart area, if info is requested...
WITHOUT_CLASSIFICATION	ensure no drawing occurs outside chart area...
WITHOUT_CLASSIFICATION	draw the chart background...
WITHOUT_CLASSIFICATION	draw the title and subtitles...
WITHOUT_CLASSIFICATION	draw the plot (axes and data visualisation)
WITHOUT_CLASSIFICATION	private boolean borderVisible; private transient Stroke borderStroke; private transient Paint borderPaint;
WITHOUT_CLASSIFICATION	get a locale-specific resource bundle...
WITHOUT_CLASSIFICATION	load only when required
WITHOUT_CLASSIFICATION	use ImageIcon because it waits for the image to load...
WITHOUT_CLASSIFICATION	don't zoom unless the mouse pointer is in the plot's data area
WITHOUT_CLASSIFICATION	do not notify while zooming each axis
WITHOUT_CLASSIFICATION	this generates the change event too
WITHOUT_CLASSIFICATION	if we don't have at least 2 (x, y) coordinates, just return
WITHOUT_CLASSIFICATION	now try to reject equality
WITHOUT_CLASSIFICATION	now try to reject equality
WITHOUT_CLASSIFICATION	seem to be the same
WITHOUT_CLASSIFICATION	seem to be the same
WITHOUT_CLASSIFICATION	now try to reject equality...
WITHOUT_CLASSIFICATION	now try to reject equality...
WITHOUT_CLASSIFICATION	Rectangle2D hotspot =
WITHOUT_CLASSIFICATION	seems to be the same...
WITHOUT_CLASSIFICATION	FIXME SerialUtilities.writeImage(this.image, stream);
WITHOUT_CLASSIFICATION	FIXME this.image = SerialUtilities.readImage(stream);
WITHOUT_CLASSIFICATION	simple case
WITHOUT_CLASSIFICATION	by default the outline and background won't be visible
WITHOUT_CLASSIFICATION	now try to reject equality
WITHOUT_CLASSIFICATION	create plot ...
WITHOUT_CLASSIFICATION	add a second dataset and renderer...
WITHOUT_CLASSIFICATION	return a new chart containing the overlaid plot...
WITHOUT_CLASSIFICATION	create dataset 1...
WITHOUT_CLASSIFICATION	seem to be the same
WITHOUT_CLASSIFICATION	now try to reject equality...
WITHOUT_CLASSIFICATION	seems to be the same...
WITHOUT_CLASSIFICATION	baseNegativeItemLabelPosition;
WITHOUT_CLASSIFICATION	here we change the AffineTransform so we can draw the annotation to a larger area and scale it down into the display area afterwards, the original transform is restored
WITHOUT_CLASSIFICATION	compute transform matrix elements via sample points. Assume no rotation or shear.
WITHOUT_CLASSIFICATION	create transform & transform shape
WITHOUT_CLASSIFICATION	SerialUtilities.writeImage(this.image, stream);
WITHOUT_CLASSIFICATION	this.image = SerialUtilities.readImage(stream);
WITHOUT_CLASSIFICATION	if the axis is not visible, don't draw it...
WITHOUT_CLASSIFICATION	ensure the autorange is at least <minRange> in size...
WITHOUT_CLASSIFICATION	apply the margins - these should apply to the exponent range
WITHOUT_CLASSIFICATION	even though the axis is not visible, we need ticks for the gridlines...
WITHOUT_CLASSIFICATION	add minor ticks (for gridlines)
WITHOUT_CLASSIFICATION	select a tick unit that is the next one bigger than the current (log) range divided by 50
WITHOUT_CLASSIFICATION	while the tick labels overlap and there are more tick sizes available, choose the next bigger label
WITHOUT_CLASSIFICATION	while the tick labels overlap and there are more tick sizes available, choose the next bigger label
WITHOUT_CLASSIFICATION	what is the available space for one unit?
WITHOUT_CLASSIFICATION	what is the available space for one unit?
WITHOUT_CLASSIFICATION	there are no more candidates
WITHOUT_CLASSIFICATION	there are no more candidates
WITHOUT_CLASSIFICATION	all tick labels have the same width (equal to the height of the font)...
WITHOUT_CLASSIFICATION	look at lower and upper bounds...
WITHOUT_CLASSIFICATION	no need to create entity if we can't save it anyways...
WITHOUT_CLASSIFICATION	it is unlikely that 'state' will be null, but check anyway...
WITHOUT_CLASSIFICATION	It's up to the plot which clones up to restore the correct references
WITHOUT_CLASSIFICATION	draw the category labels and axis label
WITHOUT_CLASSIFICATION	regular number axis
WITHOUT_CLASSIFICATION	regular number axis
WITHOUT_CLASSIFICATION	displayStart > displayEnd, need to handle split
WITHOUT_CLASSIFICATION	displayStart > displayEnd, need to handle split
WITHOUT_CLASSIFICATION	create a new space object if one wasn't supplied...
WITHOUT_CLASSIFICATION	if the axis is not visible, no additional space is required...
WITHOUT_CLASSIFICATION	if the axis has a fixed dimension, return it...
WITHOUT_CLASSIFICATION	get the axis label size and update the space object...
WITHOUT_CLASSIFICATION	negative values not allowed
WITHOUT_CLASSIFICATION	no plot, no data.
WITHOUT_CLASSIFICATION	no plot, no data
WITHOUT_CLASSIFICATION	if the axis is not visible, no additional space is required...
WITHOUT_CLASSIFICATION	if the axis has a fixed dimension, return it...
WITHOUT_CLASSIFICATION	get the axis label size and update the space object...
WITHOUT_CLASSIFICATION	baseCreateEntities;
WITHOUT_CLASSIFICATION	add space for the outer tick labels, if any...
WITHOUT_CLASSIFICATION	draw minor tick marks
WITHOUT_CLASSIFICATION	work out the initial gap
WITHOUT_CLASSIFICATION	this is the last period, but it is only partially visible so check that the label will fit before displaying it...
WITHOUT_CLASSIFICATION	this is the first period, but it is only partially visible so check that the label will fit before displaying it...
WITHOUT_CLASSIFICATION	work out the trailing gap
WITHOUT_CLASSIFICATION	draw the arrow...
WITHOUT_CLASSIFICATION	need to work out the space used by the tick labels... so we can update the cursor...
WITHOUT_CLASSIFICATION	calculate the max size of the tick labels (if visible)...
WITHOUT_CLASSIFICATION	if autoRange is true, then the current range is irrelevant
WITHOUT_CLASSIFICATION	setup number formatter obj
WITHOUT_CLASSIFICATION	setup number formatter obj
WITHOUT_CLASSIFICATION	if negative then set flag and make positive
WITHOUT_CLASSIFICATION	if negative then set flag and make positive
WITHOUT_CLASSIFICATION	return value; negate if original value was negative:
WITHOUT_CLASSIFICATION	invert adjustLog10
WITHOUT_CLASSIFICATION	calculate floor using negative value:
WITHOUT_CLASSIFICATION	calculate power using positive value; then negate
WITHOUT_CLASSIFICATION	negative values are allowed
WITHOUT_CLASSIFICATION	calculate ceil using negative value:
WITHOUT_CLASSIFICATION	ensure the autorange is at least <minRange> in size...
WITHOUT_CLASSIFICATION	legendTextPaint
WITHOUT_CLASSIFICATION	setup for "1e#"-style tick labels or regular numeric tick labels, depending on flag:
WITHOUT_CLASSIFICATION	if < 10 then increase so 0 translates to 0
WITHOUT_CLASSIFICATION	negative values are allowed parameter value is > 10 The Math.log() function is based on e not 10.
WITHOUT_CLASSIFICATION	parameter value is < -10 calculate log using positive value:
WITHOUT_CLASSIFICATION	parameter value is -10 > val < 10 use as-is
WITHOUT_CLASSIFICATION	parameter value is -10 > val < 10 use as-is
WITHOUT_CLASSIFICATION	negative values not allowed parameter value is > 0 The Math.log() function is based on e not 10.
WITHOUT_CLASSIFICATION	parameter value is <= 0 use as-is
WITHOUT_CLASSIFICATION	parameter value is > 10 The Math.log() function is based on e not 10.
WITHOUT_CLASSIFICATION	parameter value is > 0 The Math.log() function is based on e not 10.
WITHOUT_CLASSIFICATION	no real data present
WITHOUT_CLASSIFICATION	get lower bound value
WITHOUT_CLASSIFICATION	actual data is present get lower bound value
WITHOUT_CLASSIFICATION	strict flag set, allow-negatives not set and values <= 0
WITHOUT_CLASSIFICATION	apply lower margin by decreasing lower bound:
WITHOUT_CLASSIFICATION	lower bound and margin OK; get log10 of lower bound
WITHOUT_CLASSIFICATION	get absolute value of log10 value
WITHOUT_CLASSIFICATION	need to account for case where upper==0.0
WITHOUT_CLASSIFICATION	setup flag based on bounds values
WITHOUT_CLASSIFICATION	get lower bound value:
WITHOUT_CLASSIFICATION	get upper bound value
WITHOUT_CLASSIFICATION	get log10 version of upper bound and round to integer:
WITHOUT_CLASSIFICATION	for each power of 10 value; create ten ticks
WITHOUT_CLASSIFICATION	for each tick to be displayed
WITHOUT_CLASSIFICATION	small log values in use; create numeric value for tick
WITHOUT_CLASSIFICATION	create tick label (force use of fmt obj):
WITHOUT_CLASSIFICATION	no tick label to be shown
WITHOUT_CLASSIFICATION	create tick label:
WITHOUT_CLASSIFICATION	get lower bound value:
WITHOUT_CLASSIFICATION	if autorange still below minimum then adjust by 1% (can be needed when minRange is very small):
WITHOUT_CLASSIFICATION	get upper bound value
WITHOUT_CLASSIFICATION	if small log values and lower bound value too small then set to a small value (don't allow <= 0):
WITHOUT_CLASSIFICATION	get log10 version of lower bound and round to integer:
WITHOUT_CLASSIFICATION	get log10 version of upper bound and round to integer:
WITHOUT_CLASSIFICATION	for each tick to be displayed
WITHOUT_CLASSIFICATION	only 1 power of 10 value, it's > 0 and its resulting tick value will be larger than lower bound of data decrement to generate more ticks
WITHOUT_CLASSIFICATION	showing "1e#"-style ticks or negative exponent generating tick value between 0 & 1; show fewer
WITHOUT_CLASSIFICATION	tick value not between 0 & 1 show tick label if it's the first or last in the set, or if it's 1-5; beyond that show fewer as the values get larger:
WITHOUT_CLASSIFICATION	not small log values in use; allow for values <= 0 if did zero tick last iter then decrement to do 1.0 tick now calculate power-of-ten value for tick:
WITHOUT_CLASSIFICATION	did not do zero tick last iteration
WITHOUT_CLASSIFICATION	tick value is 1.0 and 0.0 is within data range set tick value to zero indicate zero tick
WITHOUT_CLASSIFICATION	if past highest data value then exit method
WITHOUT_CLASSIFICATION	tick value not below lowest data value
WITHOUT_CLASSIFICATION	for each tick with a label to be displayed
WITHOUT_CLASSIFICATION	small log values in use
WITHOUT_CLASSIFICATION	first tick of group; create label text
WITHOUT_CLASSIFICATION	not "log10"-type label
WITHOUT_CLASSIFICATION	if small log values and lower bound value too small then set to a small value (don't allow <= 0):
WITHOUT_CLASSIFICATION	only 1 power of 10 value, it's > 0 and its resulting tick value will be larger than lower bound of data decrement to generate more ticks
WITHOUT_CLASSIFICATION	tick value not below lowest data value
WITHOUT_CLASSIFICATION	ITEM_LABEL_PAINT
WITHOUT_CLASSIFICATION	if flag then create "log10"-type label
WITHOUT_CLASSIFICATION	if flag then create "1e#"-type label
WITHOUT_CLASSIFICATION	not "1e#"-type label if positive exponent then make integer
WITHOUT_CLASSIFICATION	negative exponent; create fractional value set exact number of fractional digits to be shown:
WITHOUT_CLASSIFICATION	not small log values in use; allow for values <= 0 if did zero tick last iter then
WITHOUT_CLASSIFICATION	decrement to do 1.0 tick now
WITHOUT_CLASSIFICATION	first tick of group did not do zero tick last iteration
WITHOUT_CLASSIFICATION	not first or last tick on graph and value is 1.0 change value to 0.0 indicate zero tick create label for tick
WITHOUT_CLASSIFICATION	first or last tick on graph or value is 1.0 create label for tick:
WITHOUT_CLASSIFICATION	create "log10"-type label
WITHOUT_CLASSIFICATION	create "1e#"-type label
WITHOUT_CLASSIFICATION	did zero tick last iteration no label clear flag
WITHOUT_CLASSIFICATION	not first tick of group no label make sure flag cleared
WITHOUT_CLASSIFICATION	if past highest data value then exit method
WITHOUT_CLASSIFICATION	create tick object and add to list:
WITHOUT_CLASSIFICATION	using exponents or force-formatter flag is set (convert 'E' to lower-case 'e'):
WITHOUT_CLASSIFICATION	populate deprecated fields
WITHOUT_CLASSIFICATION	usually the range will be a DateRange, but if it isn't do a conversion...
WITHOUT_CLASSIFICATION	check the new minimum date relative to the current maximum date
WITHOUT_CLASSIFICATION	check the new maximum date relative to the current minimum date
WITHOUT_CLASSIFICATION	long result = calendar.getTimeInMillis(); won't work with JDK 1.3
WITHOUT_CLASSIFICATION	date formatters
WITHOUT_CLASSIFICATION	milliseconds
WITHOUT_CLASSIFICATION	look at lower and upper bounds...
WITHOUT_CLASSIFICATION	create a new space object if one wasn't supplied...
WITHOUT_CLASSIFICATION	if the axis is not visible, no additional space is required...
WITHOUT_CLASSIFICATION	seconds
WITHOUT_CLASSIFICATION	minutes
WITHOUT_CLASSIFICATION	hours
WITHOUT_CLASSIFICATION	days
WITHOUT_CLASSIFICATION	months
WITHOUT_CLASSIFICATION	years
WITHOUT_CLASSIFICATION	Timeline hasn't method getStartTime()
WITHOUT_CLASSIFICATION	start with the current tick unit...
WITHOUT_CLASSIFICATION	then extrapolate...
WITHOUT_CLASSIFICATION	start with a unit that is at least 1/10th of the axis length
WITHOUT_CLASSIFICATION	now extrapolate based on label height and unit height...
WITHOUT_CLASSIFICATION	make final selection...
WITHOUT_CLASSIFICATION	all tick labels have the same width (equal to the height of the font)...
WITHOUT_CLASSIFICATION	could add a flag to make the following correction optional...
WITHOUT_CLASSIFICATION	could add a flag to make the following correction optional...
WITHOUT_CLASSIFICATION	work out the value, label and position
WITHOUT_CLASSIFICATION	work out the value, label and position
WITHOUT_CLASSIFICATION	even though the axis is not visible, we need to refresh ticks in case the grid is being drawn...
WITHOUT_CLASSIFICATION	draw the tick marks and labels...
WITHOUT_CLASSIFICATION	draw the axis label (note that 'state' is passed in and returned)...
WITHOUT_CLASSIFICATION	when zooming to sub-millisecond ranges, it can be the case that adjEnd == adjStart...and we can't have an axis with zero length so we apply this instead:
WITHOUT_CLASSIFICATION	'dateTickUnit' is immutable : no need to clone
WITHOUT_CLASSIFICATION	'tickMarkPosition' is immutable : no need to clone
WITHOUT_CLASSIFICATION	if there is no specific font, use the general one...
WITHOUT_CLASSIFICATION	if there is no specific paint, use the general one...
WITHOUT_CLASSIFICATION	find first excluded base segment starting fromDomainValue
WITHOUT_CLASSIFICATION	draw the category labels and axis label
WITHOUT_CLASSIFICATION	get the axis label size and update the space object...
WITHOUT_CLASSIFICATION	calculate the max size of the tick labels (if visible)...
WITHOUT_CLASSIFICATION	nothing required
WITHOUT_CLASSIFICATION	sanity check for data area...
WITHOUT_CLASSIFICATION	step down in size until the current size is too small or there are no more units
WITHOUT_CLASSIFICATION	predetermined segments sizes
WITHOUT_CLASSIFICATION	other constants
WITHOUT_CLASSIFICATION	private attributes
WITHOUT_CLASSIFICATION	static block
WITHOUT_CLASSIFICATION	make a time zone with no DST for our Calendar calculations
WITHOUT_CLASSIFICATION	calculate midnight of first monday after 1/1/1900 relative to current locale
WITHOUT_CLASSIFICATION	constructors and factory methods
WITHOUT_CLASSIFICATION	operations
WITHOUT_CLASSIFICATION	verify that baseTimeline is compatible with us
WITHOUT_CLASSIFICATION	- partialTimeInException;
WITHOUT_CLASSIFICATION	- partialTimeInException;
WITHOUT_CLASSIFICATION	return toTimelineValue(dateDomainValue.getTime());
WITHOUT_CLASSIFICATION	calculate the result as if no exceptions
WITHOUT_CLASSIFICATION	adjust result for any exceptions in the result calculated
WITHOUT_CLASSIFICATION	skip all whole exception segments in the range
WITHOUT_CLASSIFICATION	skip exception or excluded segments we may fall on
WITHOUT_CLASSIFICATION	addException(exceptionDate.getTime());
WITHOUT_CLASSIFICATION	find all consecutive included segments
WITHOUT_CLASSIFICATION	add the interval as an exception
WITHOUT_CLASSIFICATION	find all consecutive included segments
WITHOUT_CLASSIFICATION	move forward exceptionSegmentCount segments skipping excluded segments
WITHOUT_CLASSIFICATION	empty
WITHOUT_CLASSIFICATION	add the interval as an exception
WITHOUT_CLASSIFICATION	this is not one of our included segment, skip it
WITHOUT_CLASSIFICATION	first check that autoPopulate==false works as expected
WITHOUT_CLASSIFICATION	cycle over all the base segments groups in the range
WITHOUT_CLASSIFICATION	cycle through all the segments contained in the base exclusion area
WITHOUT_CLASSIFICATION	go to next base segment group
WITHOUT_CLASSIFICATION	key not found
WITHOUT_CLASSIFICATION	Segment fromSegment = getSegment(from); fromSegment.inc(); Segment toSegment = getSegment(to); toSegment.dec();
WITHOUT_CLASSIFICATION	long start = Math.max( fromSegment.getSegmentStart(), this.segmentStart ); long end = Math.min(toSegment.getSegmentEnd(), this.segmentEnd);
WITHOUT_CLASSIFICATION	Compute number of labels
WITHOUT_CLASSIFICATION	Cycle when necessary
WITHOUT_CLASSIFICATION	Cycle when necessary
WITHOUT_CLASSIFICATION	If tick overlap when cycling, update last tick too
WITHOUT_CLASSIFICATION	continue and separate the labels only if necessary
WITHOUT_CLASSIFICATION	TOP
WITHOUT_CLASSIFICATION	TOP
WITHOUT_CLASSIFICATION	TOP
WITHOUT_CLASSIFICATION	BOTTOM
WITHOUT_CLASSIFICATION	BOTTOM
WITHOUT_CLASSIFICATION	BOTTOM
WITHOUT_CLASSIFICATION	LEFT
WITHOUT_CLASSIFICATION	LEFT
WITHOUT_CLASSIFICATION	LEFT
WITHOUT_CLASSIFICATION	RIGHT
WITHOUT_CLASSIFICATION	RIGHT
WITHOUT_CLASSIFICATION	no plot, no data
WITHOUT_CLASSIFICATION	no plot, no data
WITHOUT_CLASSIFICATION	if fixed auto range, then derive lower bound...
WITHOUT_CLASSIFICATION	ensure the autorange is at least <minRange> in size...
WITHOUT_CLASSIFICATION	ensure the autorange is at least <minRange> in size...
WITHOUT_CLASSIFICATION	if the axis is not visible, don't draw it...
WITHOUT_CLASSIFICATION	even though the axis is not visible, we need ticks for the gridlines...
WITHOUT_CLASSIFICATION	look at lower and upper bounds...
WITHOUT_CLASSIFICATION	draw the tick marks and labels...
WITHOUT_CLASSIFICATION	TOP
WITHOUT_CLASSIFICATION	BOTTOM
WITHOUT_CLASSIFICATION	BOTTOM
WITHOUT_CLASSIFICATION	LEFT
WITHOUT_CLASSIFICATION	LEFT
WITHOUT_CLASSIFICATION	RIGHT
WITHOUT_CLASSIFICATION	RIGHT
WITHOUT_CLASSIFICATION	first check that autoPopulate==false works as expected
WITHOUT_CLASSIFICATION	default make height of plotArea
WITHOUT_CLASSIFICATION	allow fixed thickness
WITHOUT_CLASSIFICATION	update, but dont draw tick marks (needed for stepped colors)
WITHOUT_CLASSIFICATION	suppresses compiler warnings
WITHOUT_CLASSIFICATION	setTickValues was missing from ColorPalette v. 0.96 colorPalette.setTickValues(this.axis.getTicks());
WITHOUT_CLASSIFICATION	calculate the adjusted data area taking into account the 3D effect...
WITHOUT_CLASSIFICATION	argument checking delegated...
WITHOUT_CLASSIFICATION	transparent
WITHOUT_CLASSIFICATION	gets the outline stroke width of the plot
WITHOUT_CLASSIFICATION	ensure that all the symbols are displayed
WITHOUT_CLASSIFICATION	this ensure that the grid bands will be displayed correctly.
WITHOUT_CLASSIFICATION	avoid to draw overlapping tick labels
WITHOUT_CLASSIFICATION	avoid to draw overlapping tick labels
WITHOUT_CLASSIFICATION	don't draw this tick label
WITHOUT_CLASSIFICATION	don't draw this tick label
WITHOUT_CLASSIFICATION	remember these values for next comparison
WITHOUT_CLASSIFICATION	remember these values for next comparison
WITHOUT_CLASSIFICATION	first check that autoPopulate==false works as expected
WITHOUT_CLASSIFICATION	if the axis is not visible, don't draw it...
WITHOUT_CLASSIFICATION	even though the axis is not visible, we need ticks for the gridlines...
WITHOUT_CLASSIFICATION	all tick labels have the same width (equal to the height of the font)...
WITHOUT_CLASSIFICATION	draw the category labels and axis label
WITHOUT_CLASSIFICATION	create a new space object if one wasn't supplied...
WITHOUT_CLASSIFICATION	if the axis is not visible, no additional space is required...
WITHOUT_CLASSIFICATION	start with the current tick unit...
WITHOUT_CLASSIFICATION	start with the current tick unit...
WITHOUT_CLASSIFICATION	then extrapolate...
WITHOUT_CLASSIFICATION	then extrapolate...
WITHOUT_CLASSIFICATION	check a series with no items
WITHOUT_CLASSIFICATION	must be top or bottom
WITHOUT_CLASSIFICATION	catches null also
WITHOUT_CLASSIFICATION	no action required.
WITHOUT_CLASSIFICATION	no action required.
WITHOUT_CLASSIFICATION	check if we need to collect chart entities from the container
WITHOUT_CLASSIFICATION	place in this row (truncated) anyway
WITHOUT_CLASSIFICATION	start new row
WITHOUT_CLASSIFICATION	Block b = (Block) blocks.get(i);
WITHOUT_CLASSIFICATION	can safely ignore
WITHOUT_CLASSIFICATION	find optimum height, then map to range
WITHOUT_CLASSIFICATION	find optimum height
WITHOUT_CLASSIFICATION	find optimum height
WITHOUT_CLASSIFICATION	find optimum height and map to range
WITHOUT_CLASSIFICATION	find optimum width and map to range
WITHOUT_CLASSIFICATION	check a series with no items
WITHOUT_CLASSIFICATION	check a series with no items
WITHOUT_CLASSIFICATION	since the flow layout is relatively straightforward, no information needs to be recorded here
WITHOUT_CLASSIFICATION	no action required.
WITHOUT_CLASSIFICATION	first arrange without constraints, and see if this fits within the required ranges...
WITHOUT_CLASSIFICATION	first arrange without constraints, then see if the width fits within the required range...if not, call arrangeFN() at max width
WITHOUT_CLASSIFICATION	first arrange without constraints, then see if the width fits within the required range...if not, call arrangeFN() at max width
WITHOUT_CLASSIFICATION	check if we need to collect chart entities from the container
WITHOUT_CLASSIFICATION	Block b = (Block) blocks.get(i);
WITHOUT_CLASSIFICATION	this default implementation will just fill the available border space with a single color
WITHOUT_CLASSIFICATION	backgroundImage
WITHOUT_CLASSIFICATION	fixed width
WITHOUT_CLASSIFICATION	width is OK, but height must be constrained
WITHOUT_CLASSIFICATION	height is OK, but width must be constrained
WITHOUT_CLASSIFICATION	nothing to clear
WITHOUT_CLASSIFICATION	if the area has zero height or width, we shouldn't draw anything
WITHOUT_CLASSIFICATION	since the flow layout is relatively straightforward, no information needs to be recorded here
WITHOUT_CLASSIFICATION	place in this column (truncated) anyway
WITHOUT_CLASSIFICATION	start new column
WITHOUT_CLASSIFICATION	set a theme using the new shadow generator feature available in 1.0.14 - for backwards compatibility it is not enabled by default
WITHOUT_CLASSIFICATION	x-axis label
WITHOUT_CLASSIFICATION	y-axis label
WITHOUT_CLASSIFICATION	chart title data no legend tooltips no URL generation
WITHOUT_CLASSIFICATION	check a series with one item
WITHOUT_CLASSIFICATION	More than 150 demo applications are included with the JFreeChart Developer Guide...for more information, see: > http:www.object-refinery.com/jfreechart/guide.html
WITHOUT_CLASSIFICATION	title x-axis label y-axis label data create legend? generate tooltips? generate URLs?
WITHOUT_CLASSIFICATION	set a custom background for the chart
WITHOUT_CLASSIFICATION	customise the title position and font
WITHOUT_CLASSIFICATION	use gradients and white borders for the section colours
WITHOUT_CLASSIFICATION	customise the section label appearance
WITHOUT_CLASSIFICATION	add a subtitle giving the data source
WITHOUT_CLASSIFICATION	pass to the super-class for handling
WITHOUT_CLASSIFICATION	pass to the super-class for handling
WITHOUT_CLASSIFICATION	pass to the super-class for handling
WITHOUT_CLASSIFICATION	don't need to do anything
WITHOUT_CLASSIFICATION	don't need to do anything
WITHOUT_CLASSIFICATION	Insets text field. private InsetsTextField tickLabelInsetsTextField; Label insets text field. private InsetsTextField labelInsetsTextField;
WITHOUT_CLASSIFICATION	figure out what type of axis we have and instantiate the appropriate panel
WITHOUT_CLASSIFICATION	Insets values
WITHOUT_CLASSIFICATION	axis.setTickMarkStroke(getTickMarkStroke());
WITHOUT_CLASSIFICATION	create a panel for the settings...
WITHOUT_CLASSIFICATION	dmo: added this panel for colorbar control. (start dmo additions)
WITHOUT_CLASSIFICATION	end fix by rfuller
WITHOUT_CLASSIFICATION	dmo: (end dmo additions)
WITHOUT_CLASSIFICATION	set the plot properties...
WITHOUT_CLASSIFICATION	then the axis properties...
WITHOUT_CLASSIFICATION	pass to super-class for handling
WITHOUT_CLASSIFICATION	No op
WITHOUT_CLASSIFICATION	No op
WITHOUT_CLASSIFICATION	defer argument checks...
WITHOUT_CLASSIFICATION	fix by rfuller
WITHOUT_CLASSIFICATION	populate the deprecated fields
WITHOUT_CLASSIFICATION	same as for ChartEntity!
WITHOUT_CLASSIFICATION	same as for ChartEntity!
WITHOUT_CLASSIFICATION	same as for ChartEntity!
WITHOUT_CLASSIFICATION	update the deprecated field
WITHOUT_CLASSIFICATION	update the deprecated fields
WITHOUT_CLASSIFICATION	check the deprecated fields
WITHOUT_CLASSIFICATION	try the parent plot
WITHOUT_CLASSIFICATION	do not notify while zooming each axis
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	this generates the change event too
WITHOUT_CLASSIFICATION	x-axis label
WITHOUT_CLASSIFICATION	y-axis label
WITHOUT_CLASSIFICATION	set a custom background for the chart
WITHOUT_CLASSIFICATION	customise the title position and font
WITHOUT_CLASSIFICATION	use gradients and white borders for the section colours
WITHOUT_CLASSIFICATION	customise the section label appearance
WITHOUT_CLASSIFICATION	add a subtitle giving the data source
WITHOUT_CLASSIFICATION	same as for ChartEntity!
WITHOUT_CLASSIFICATION	dmo added dmo added
WITHOUT_CLASSIFICATION	if there is a tool tip, we expect it to generate the title and alt values, so we only add an empty alt if there is no tooltip
WITHOUT_CLASSIFICATION	check a series with two items
WITHOUT_CLASSIFICATION	FIXME
WITHOUT_CLASSIFICATION	this is a paint we don't recognise
WITHOUT_CLASSIFICATION	null is handled fine here...
WITHOUT_CLASSIFICATION	we can't do anything
WITHOUT_CLASSIFICATION	force a redraw
WITHOUT_CLASSIFICATION	pass on the event to the auxiliary handlers
WITHOUT_CLASSIFICATION	pass on the event to the auxiliary handlers
WITHOUT_CLASSIFICATION	relay the event from the canvas to our registered listeners
WITHOUT_CLASSIFICATION	relay the event from the canvas to our registered listeners
WITHOUT_CLASSIFICATION	set the default stroke for all series
WITHOUT_CLASSIFICATION	this.chartPanel.isDomainZoomable()) {
WITHOUT_CLASSIFICATION	this.chartPanel.isRangeZoomable()) {
WITHOUT_CLASSIFICATION	does nothing unless overridden
WITHOUT_CLASSIFICATION	does nothing unless overridden
WITHOUT_CLASSIFICATION	does nothing unless overridden
WITHOUT_CLASSIFICATION	selected rectangle shouldn't extend outside the data area...
WITHOUT_CLASSIFICATION	for mouseReleased event, (horizontalZoom || verticalZoom) will be true, so we can just test for either being false; otherwise both are true
WITHOUT_CLASSIFICATION	chart title data no legend tooltips no URL generation
WITHOUT_CLASSIFICATION	does nothing unless overridden
WITHOUT_CLASSIFICATION	special case - if the underlying rectangle uses ints we need to create one that uses doubles
WITHOUT_CLASSIFICATION	title x-axis label y-axis label
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	check a series with four items
WITHOUT_CLASSIFICATION	the actual panning occurs later in the mouseDragged() method
WITHOUT_CLASSIFICATION	handle panning if we have a start point else unregister
WITHOUT_CLASSIFICATION	if we have been panning reset the cursor unregister in any case
WITHOUT_CLASSIFICATION	the URL text should already have been escaped by the URL generator
WITHOUT_CLASSIFICATION	no fields to test
WITHOUT_CLASSIFICATION	/ we have rotation huston, please spin me
WITHOUT_CLASSIFICATION	/ we have rotation huston, please spin me
WITHOUT_CLASSIFICATION	/ we have rotation
WITHOUT_CLASSIFICATION	/ we have rotation
WITHOUT_CLASSIFICATION	/ we have rotation
WITHOUT_CLASSIFICATION	isArrowAtTop
WITHOUT_CLASSIFICATION	int maxX = (int) (plotArea.getMaxX());
WITHOUT_CLASSIFICATION	int maxX = (int) (plotArea.getMaxX());
WITHOUT_CLASSIFICATION	int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));
WITHOUT_CLASSIFICATION	int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));
WITHOUT_CLASSIFICATION	/ we have rotation houston, please spin me
WITHOUT_CLASSIFICATION	horizontal
WITHOUT_CLASSIFICATION	store the plot and its weight
WITHOUT_CLASSIFICATION	configure the range axis...
WITHOUT_CLASSIFICATION	work out the space required by the domain axis...
WITHOUT_CLASSIFICATION	work out the maximum height or width of the non-shared axes...
WITHOUT_CLASSIFICATION	we expect the line to be vertical or horizontal vertical
WITHOUT_CLASSIFICATION	calculate plotAreas of all sub-plots, maximum vertical/horizontal axis width/height
WITHOUT_CLASSIFICATION	calculate sub-plot area
WITHOUT_CLASSIFICATION	adjust the drawing area for plot insets (if any)...
WITHOUT_CLASSIFICATION	calculate the data area...
WITHOUT_CLASSIFICATION	set the width and height of non-shared axis of all sub-plots
WITHOUT_CLASSIFICATION	draw the shared axis
WITHOUT_CLASSIFICATION	draw all the charts
WITHOUT_CLASSIFICATION	the range axis is deserialized before the subplots, so its value range is likely to be incorrect...
WITHOUT_CLASSIFICATION	default preserves previous behaviour
WITHOUT_CLASSIFICATION	adjust for insets...
WITHOUT_CLASSIFICATION	make the link area a square if the pie chart is to be circular... is circular?
WITHOUT_CLASSIFICATION	the link area defines the dog leg points for the linking lines to the labels
WITHOUT_CLASSIFICATION	the explode area defines the max circle/ellipse for the exploded pie sections. it is defined by shrinking the linkArea by the linkMargin factor.
WITHOUT_CLASSIFICATION	the pie area defines the circle/ellipse for regular pie sections. it is defined by shrinking the explodeArea by the explodeMargin factor.
WITHOUT_CLASSIFICATION	the link area defines the dog-leg point for the linking lines to the labels
WITHOUT_CLASSIFICATION	get the data source - return if null;
WITHOUT_CLASSIFICATION	if too any elements
WITHOUT_CLASSIFICATION	get a list of keys...
WITHOUT_CLASSIFICATION	do nothing by default.
WITHOUT_CLASSIFICATION	g2.clip(clipArea);
WITHOUT_CLASSIFICATION	if depth is negative don't draw anything
WITHOUT_CLASSIFICATION	draw the bottom circle
WITHOUT_CLASSIFICATION	draw the height
WITHOUT_CLASSIFICATION	cycle through once drawing only the sides at the back...
WITHOUT_CLASSIFICATION	cycle through again drawing only the sides at the front...
WITHOUT_CLASSIFICATION	add a tooltip for the section...
WITHOUT_CLASSIFICATION	@mgs: using the method's return value was missing
WITHOUT_CLASSIFICATION	for CLOCKWISE charts, the extent will be negative...
WITHOUT_CLASSIFICATION	start at front
WITHOUT_CLASSIFICATION	the segment starts at the front, and wraps all the way around the back and finishes at the front again
WITHOUT_CLASSIFICATION	starts at the front, finishes at the back (going around the left side)
WITHOUT_CLASSIFICATION	the segment starts at the back (still extending CLOCKWISE)
WITHOUT_CLASSIFICATION	whole segment stays at the back
WITHOUT_CLASSIFICATION	starts at the back, wraps around front, and finishes at back again
WITHOUT_CLASSIFICATION	starts at back, finishes at front (CLOCKWISE)
WITHOUT_CLASSIFICATION	segment starts at the front
WITHOUT_CLASSIFICATION	and finishes at the front
WITHOUT_CLASSIFICATION	segment only occupies the front
WITHOUT_CLASSIFICATION	segments wraps right around the back...
WITHOUT_CLASSIFICATION	segments starts at front and finishes at back...
WITHOUT_CLASSIFICATION	segment starts at back
WITHOUT_CLASSIFICATION	and finishes at back
WITHOUT_CLASSIFICATION	dmo zero when the parameter is not set
WITHOUT_CLASSIFICATION	if there is an existing dataset, remove the plot from the list of change listeners...
WITHOUT_CLASSIFICATION	set the new dataset, and register the chart as a change listener...
WITHOUT_CLASSIFICATION	send a dataset change event to self...
WITHOUT_CLASSIFICATION	plot is likely registered as a listener with the existing axis...
WITHOUT_CLASSIFICATION	plot is likely registered as a listener with the existing axis...
WITHOUT_CLASSIFICATION	if the plot area is too small, just return...
WITHOUT_CLASSIFICATION	record the plot area...
WITHOUT_CLASSIFICATION	additional dataArea modifications check whether modification is
WITHOUT_CLASSIFICATION	ratio represents pixels
WITHOUT_CLASSIFICATION	ratio represents axis units
WITHOUT_CLASSIFICATION	draw the plot background...
WITHOUT_CLASSIFICATION	draw vertical crosshair if required...
WITHOUT_CLASSIFICATION	draw horizontal crosshair if required...
WITHOUT_CLASSIFICATION	setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	delegate 'info' and 'source' argument checks...
WITHOUT_CLASSIFICATION	work out the space required by the domain axis...
WITHOUT_CLASSIFICATION	delegate 'info' and 'source' argument checks...
WITHOUT_CLASSIFICATION	now get the data and plot it (the visual representation will depend on the renderer that has been set)...
WITHOUT_CLASSIFICATION	get the data points
WITHOUT_CLASSIFICATION	this is a new column
WITHOUT_CLASSIFICATION	end of column
WITHOUT_CLASSIFICATION	add an entity for the item...
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	both axes
WITHOUT_CLASSIFICATION	just the horizontal axis...
WITHOUT_CLASSIFICATION	just the vertical axis...
WITHOUT_CLASSIFICATION	check a series with repeating items
WITHOUT_CLASSIFICATION	adjust for insets...
WITHOUT_CLASSIFICATION	adjust the plot area by the interior spacing value
WITHOUT_CLASSIFICATION	set the new dataset, and register the chart as a change listener...
WITHOUT_CLASSIFICATION	send a dataset change event to self...
WITHOUT_CLASSIFICATION	setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	turn off anti-aliasing when filling rectangles
WITHOUT_CLASSIFICATION	add an entity for the item...
WITHOUT_CLASSIFICATION	both axes
WITHOUT_CLASSIFICATION	just the horizontal axis...
WITHOUT_CLASSIFICATION	just the vertical axis...
WITHOUT_CLASSIFICATION	draw the background
WITHOUT_CLASSIFICATION	Object oldValue = this.toolTipGenerator;
WITHOUT_CLASSIFICATION	Object oldValue = this.urlGenerator;
WITHOUT_CLASSIFICATION	plot the data (unless the dataset is null)...
WITHOUT_CLASSIFICATION	the following relies on the fact that the intervals are immutable
WITHOUT_CLASSIFICATION	intentionally blank
WITHOUT_CLASSIFICATION	can't find any difference
WITHOUT_CLASSIFICATION	we're doing this for testing only, and make sure that we only add data in descending order by x-value
WITHOUT_CLASSIFICATION	work out the maximum height or width of the non-shared axes...
WITHOUT_CLASSIFICATION	calculate sub-plot area
WITHOUT_CLASSIFICATION	calculate sub-plot area
WITHOUT_CLASSIFICATION	set up info collection...
WITHOUT_CLASSIFICATION	adjust the drawing area for plot insets (if any)...
WITHOUT_CLASSIFICATION	calculate the data area...
WITHOUT_CLASSIFICATION	set the width and height of non-shared axis of all sub-plots
WITHOUT_CLASSIFICATION	draw the shared axis
WITHOUT_CLASSIFICATION	if there is an existing dataset, remove the plot from the list of change listeners...
WITHOUT_CLASSIFICATION	set the new dataset, and register the chart as a change listener...
WITHOUT_CLASSIFICATION	record the plot area...
WITHOUT_CLASSIFICATION	range = this.rangeAxis.getRange().getLength(); scaledRange = range percent; rangeAxis.setAnchoredRange(scaledRange);
WITHOUT_CLASSIFICATION	if the source point doesn't fall within a subplot, we do the zoom on all subplots...
WITHOUT_CLASSIFICATION	draw all the subplots
WITHOUT_CLASSIFICATION	override is only for documentation purposes
WITHOUT_CLASSIFICATION	send a dataset change event to self to trigger plot change event
WITHOUT_CLASSIFICATION	adjust the drawing area for the plot insets (if any)...
WITHOUT_CLASSIFICATION	y is minor
WITHOUT_CLASSIFICATION	y is minor
WITHOUT_CLASSIFICATION	get major dimension
WITHOUT_CLASSIFICATION	ellipse diameter is the minor dimension
WITHOUT_CLASSIFICATION	draw the wafer
WITHOUT_CLASSIFICATION	no data in the parent plot
WITHOUT_CLASSIFICATION	set up info collection...
WITHOUT_CLASSIFICATION	set the width and height of non-shared axis of all sub-plots
WITHOUT_CLASSIFICATION	draw the shared axis
WITHOUT_CLASSIFICATION	draw all the charts
WITHOUT_CLASSIFICATION	adjust for insets...
WITHOUT_CLASSIFICATION	if there is an existing dataset, remove the plot from the list of change listeners...
WITHOUT_CLASSIFICATION	set the new dataset, and register the chart as a change listener...
WITHOUT_CLASSIFICATION	send a dataset change event to self...
WITHOUT_CLASSIFICATION	delegate 'info' and 'source' argument checks...
WITHOUT_CLASSIFICATION	if the source point doesn't fall within a subplot, we do the zoom on all subplots...
WITHOUT_CLASSIFICATION	set upperLeft point x is minor
WITHOUT_CLASSIFICATION	set upperLeft point x is minor
WITHOUT_CLASSIFICATION	calculate and draw the notch horizontal orientation is considered notch right vertical orientation is considered notch down
WITHOUT_CLASSIFICATION	this.axisOffset.trim(dataArea);
WITHOUT_CLASSIFICATION	SECTION PAINT
WITHOUT_CLASSIFICATION	is there an override?
WITHOUT_CLASSIFICATION	if not, check if there is a paint defined for the specified key
WITHOUT_CLASSIFICATION	if not, check if there is a paint defined for the specified key
WITHOUT_CLASSIFICATION	nothing defined - do we autoPopulate?
WITHOUT_CLASSIFICATION	nothing defined - do we autoPopulate?
WITHOUT_CLASSIFICATION	null argument check delegated...
WITHOUT_CLASSIFICATION	null argument check delegated...
WITHOUT_CLASSIFICATION	null argument check delegated...
WITHOUT_CLASSIFICATION	SECTION OUTLINE PAINT
WITHOUT_CLASSIFICATION	SECTION OUTLINE STROKE /
WITHOUT_CLASSIFICATION	if not, check if there is a stroke defined for the specified key
WITHOUT_CLASSIFICATION	adjust the plot area for interior spacing and labels...
WITHOUT_CLASSIFICATION	make the link area a square if the pie chart is to be circular...
WITHOUT_CLASSIFICATION	work out the space required by the domain axis...
WITHOUT_CLASSIFICATION	work out the maximum height or width of the non-shared axes...
WITHOUT_CLASSIFICATION	calculate sub-plot area
WITHOUT_CLASSIFICATION	adjust the drawing area for plot insets (if any)...
WITHOUT_CLASSIFICATION	the pie area defines the circle/ellipse for regular pie sections. it is defined by shrinking the explodeArea by the explodeMargin factor.
WITHOUT_CLASSIFICATION	if there is an existing dataset, remove the plot from the list of change listeners...
WITHOUT_CLASSIFICATION	plot the data (unless the dataset is null)...
WITHOUT_CLASSIFICATION	no data in the parent plot
WITHOUT_CLASSIFICATION	update the linking line target for later add an entity for the pie section
WITHOUT_CLASSIFICATION	work out the mid angle (0 - 90 and 270 - 360) = right, otherwise left
WITHOUT_CLASSIFICATION	classify the keys according to which side the label will appear...
WITHOUT_CLASSIFICATION	calculate the max label width from the plot dimensions, because a circular pie can leave a lot more room for labels...
WITHOUT_CLASSIFICATION	draw the labels...
WITHOUT_CLASSIFICATION	draw the right labels...
WITHOUT_CLASSIFICATION	hh getInteriorGap();
WITHOUT_CLASSIFICATION	line not visible
WITHOUT_CLASSIFICATION	for a RadialGradientPaint we adjust the center and radius to match the current pie segment...
WITHOUT_CLASSIFICATION	can't find any difference...
WITHOUT_CLASSIFICATION	DEPRECATED FIELDS AND METHODS...
WITHOUT_CLASSIFICATION	no range axis no renderer
WITHOUT_CLASSIFICATION	backgroundImage
WITHOUT_CLASSIFICATION	set the width and height of non-shared axis of all sub-plots
WITHOUT_CLASSIFICATION	draw the shared axis
WITHOUT_CLASSIFICATION	if there is an existing dataset, remove the plot from the list of change listeners...
WITHOUT_CLASSIFICATION	set the new dataset, and register the chart as a change listener...
WITHOUT_CLASSIFICATION	delegate 'info' and 'source' argument checks...
WITHOUT_CLASSIFICATION	if the source point doesn't fall within a subplot, we do the zoom on all subplots...
WITHOUT_CLASSIFICATION	draw all the subplots
WITHOUT_CLASSIFICATION	send a dataset change event to self to trigger plot change event
WITHOUT_CLASSIFICATION	adjust the drawing area for the plot insets (if any)...
WITHOUT_CLASSIFICATION	delegate 'state' and 'source' argument checks...
WITHOUT_CLASSIFICATION	after setting up all the subplots, the shared domain axis may need reconfiguring
WITHOUT_CLASSIFICATION	20% 20% 20%
WITHOUT_CLASSIFICATION	create the bounds for the inner arc
WITHOUT_CLASSIFICATION	calculate inner arc in reverse direction, for later GeneralPath construction
WITHOUT_CLASSIFICATION	add an entity for the pie section
WITHOUT_CLASSIFICATION	check that there is some data to display...
WITHOUT_CLASSIFICATION	the columns variable is always >= rows
WITHOUT_CLASSIFICATION	swap rows and columns to match plotArea shape
WITHOUT_CLASSIFICATION	update the section colors to match the global colors...
WITHOUT_CLASSIFICATION	pre-fetch the colors for each key...this is because the subplots may not display every key, but we need the coloring to be consistent...
WITHOUT_CLASSIFICATION	column keys provide potential keys for individual pies
WITHOUT_CLASSIFICATION	row keys provide potential keys for individual pies
WITHOUT_CLASSIFICATION	=========================================================== JFreeChart : a free chart library for the Java(tm) platform =========================================================== (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. Project Info: http:www.jfree.org/jfreechart/index.html This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version. This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details. You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA. [Oracle and Java are registered trademarks of Oracle and/or its affiliates. Other names may be trademarks of their respective owners.] ----------------- CategoryPlot.java ----------------- (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. Original Author: David Gilbert (for Object Refinery Limited); Contributor(s): Jeremy Bowman; Arnaud Lelievre; Richard West, Advanced Micro Devices, Inc.; Ulrich Voigt - patch 2686040; Peter Kolb - patches 2603321 and 2809117; Changes ------- 21-Jun-2001 : Removed redundant JFreeChart parameter from constructors (DG); 21-Aug-2001 : Added standard header. Fixed DOS encoding problem (DG); 18-Sep-2001 : Updated header (DG); 15-Oct-2001 : Data source classes moved to com.jrefinery.data. (DG); 22-Oct-2001 : Renamed DataSource.java --> Dataset.java etc. (DG); 23-Oct-2001 : Changed intro and trail gaps on bar plots to use percentage of available space rather than a fixed number of units (DG); 12-Dec-2001 : Changed constructors to protected (DG); 13-Dec-2001 : Added tooltips (DG); 16-Jan-2002 : Increased maximum intro and trail gap percents, plus added some argument checking code. Thanks to Taoufik Romdhane for suggesting this (DG); 05-Feb-2002 : Added accessor methods for the tooltip generator, incorporated alpha-transparency for Plot and subclasses (DG); 06-Mar-2002 : Updated import statements (DG); 14-Mar-2002 : Renamed BarPlot.java --> CategoryPlot.java, and changed code to use the CategoryItemRenderer interface (DG); 22-Mar-2002 : Dropped the getCategories() method (DG); 23-Apr-2002 : Moved the dataset from the JFreeChart class to the Plot class (DG); 29-Apr-2002 : New methods to support printing values at the end of bars, contributed by Jeremy Bowman (DG); 11-May-2002 : New methods for label visibility and overlaid plot support, contributed by Jeremy Bowman (DG); 06-Jun-2002 : Removed the tooltip generator, this is now stored with the renderer. Moved constants into the CategoryPlotConstants interface. Updated Javadoc comments (DG); 10-Jun-2002 : Overridden datasetChanged() method to update the upper and lower bound on the range axis (if necessary), updated Javadocs (DG); 25-Jun-2002 : Removed redundant imports (DG); 20-Aug-2002 : Changed the constructor for Marker (DG); 28-Aug-2002 : Added listener notification to setDomainAxis() and setRangeAxis() (DG); 23-Sep-2002 : Added getLegendItems() method and fixed errors reported by Checkstyle (DG); 28-Oct-2002 : Changes to the CategoryDataset interface (DG); 05-Nov-2002 : Base dataset is now TableDataset not CategoryDataset (DG); 07-Nov-2002 : Renamed labelXXX as valueLabelXXX (DG); 18-Nov-2002 : Added grid settings for both domain and range axis (previously these were set in the axes) (DG); 19-Nov-2002 : Added axis location parameters to constructor (DG); 17-Jan-2003 : Moved to com.jrefinery.chart.plot package (DG); 14-Feb-2003 : Fixed bug in auto-range calculation for secondary axis (DG); 26-Mar-2003 : Implemented Serializable (DG); 02-May-2003 : Moved render() method up from subclasses. Added secondary range markers. Added an attribute to control the dataset rendering order. Added a drawAnnotations() method. Changed the axis location from an int to an AxisLocation (DG); 07-May-2003 : Merged HorizontalCategoryPlot and VerticalCategoryPlot into this class (DG); 02-Jun-2003 : Removed check for range axis compatibility (DG); 04-Jul-2003 : Added a domain gridline position attribute (DG); 21-Jul-2003 : Moved DrawingSupplier to Plot superclass (DG); 19-Aug-2003 : Added equals() method and implemented Cloneable (DG); 01-Sep-2003 : Fixed bug 797466 (no change event when secondary dataset changes) (DG); 02-Sep-2003 : Fixed bug 795209 (wrong dataset checked in render2 method) and 790407 (initialise method) (DG); 08-Sep-2003 : Added internationalization via use of properties resourceBundle (RFE 690236) (AL); 08-Sep-2003 : Fixed bug (wrong secondary range axis being used). Changed ValueAxis API (DG); 10-Sep-2003 : Fixed bug in setRangeAxis() method (DG); 15-Sep-2003 : Fixed two bugs in serialization, implemented PublicCloneable (DG); 23-Oct-2003 : Added event notification for changes to renderer (DG); 26-Nov-2003 : Fixed bug (849645) in clearRangeMarkers() method (DG); 03-Dec-2003 : Modified draw method to accept anchor (DG); 21-Jan-2004 : Update for renamed method in ValueAxis (DG); 10-Mar-2004 : Fixed bug in axis range calculation when secondary renderer is stacked (DG); 12-May-2004 : Added fixed legend items (DG); 19-May-2004 : Added check for null legend item from renderer (DG); 02-Jun-2004 : Updated the DatasetRenderingOrder class (DG); 05-Nov-2004 : Renamed getDatasetsMappedToRangeAxis() --> datasetsMappedToRangeAxis(), and ensured that returned list doesn't contain null datasets (DG); 12-Nov-2004 : Implemented new Zoomable interface (DG); 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds() in CategoryItemRenderer (DG); 04-May-2005 : Fixed serialization of range markers (DG); 05-May-2005 : Updated draw() method parameters (DG); 20-May-2005 : Added setDomainAxes() and setRangeAxes() methods, as per RFE 1183100 (DG); 01-Jun-2005 : Upon deserialization, register plot as a listener with its axes, dataset(s) and renderer(s) - see patch 1209475 (DG); 02-Jun-2005 : Added support for domain markers (DG); 06-Jun-2005 : Fixed equals() method for use with GradientPaint (DG); 09-Jun-2005 : Added setRenderers(), as per RFE 1183100 (DG); 16-Jun-2005 : Added getDomainAxisCount() and getRangeAxisCount() methods, to match XYPlot (see RFE 1220495) (DG); ------------- JFREECHART 1.0.x --------------------------------------------- 11-Jan-2006 : Added configureRangeAxes() to rendererChanged(), since the renderer might influence the axis range (DG); 27-Jan-2006 : Added various null argument checks (DG); 18-Aug-2006 : Added getDatasetCount() method, plus a fix for bug drawing category labels, thanks to Adriaan Joubert (1277726) (DG); 05-Sep-2006 : Added MarkerChangeEvent support (DG); 30-Oct-2006 : Added getDomainAxisIndex(), datasetsMappedToDomainAxis() and getCategoriesForAxis() methods (DG); 22-Nov-2006 : Fire PlotChangeEvent from setColumnRenderingOrder() and setRowRenderingOrder() (DG); 29-Nov-2006 : Fix for bug 1605207 (IntervalMarker exceeds bounds of data area) (DG); 26-Feb-2007 : Fix for bug 1669218 (setDomainAxisLocation() notify argument ignored) (DG); 13-Mar-2007 : Added null argument checks for setRangeCrosshairPaint() and setRangeCrosshairStroke(), fixed clipping for annotations (DG); 07-Jun-2007 : Override drawBackground() for new GradientPaint handling (DG); 10-Jul-2007 : Added getRangeAxisIndex(ValueAxis) method (DG); 24-Sep-2007 : Implemented new zoom methods (DG); 25-Oct-2007 : Added some argument checks (DG); 05-Nov-2007 : Applied patch 1823697, by Richard West, for removal of domain and range markers (DG); 14-Nov-2007 : Added missing event notifications (DG); 25-Mar-2008 : Added new methods with optional notification - see patch 1913751 (DG); 07-Apr-2008 : Fixed NPE in removeDomainMarker() and removeRangeMarker() (DG); 23-Apr-2008 : Fixed equals() and clone() methods (DG); 26-Jun-2008 : Fixed crosshair support (DG); 10-Jul-2008 : Fixed outline visibility for 3D renderers (DG); 12-Aug-2008 : Added rendererCount() method (DG); 25-Nov-2008 : Added facility to map datasets to multiples axes (DG); 15-Dec-2008 : Cleaned up grid drawing methods (DG); 18-Dec-2008 : Use ResourceBundleWrapper - see patch 1607918 by Jess Thrysoee (DG); 21-Jan-2009 : Added rangeMinorGridlinesVisible flag (DG); 18-Mar-2009 : Modified anchored zoom behaviour (DG); 19-Mar-2009 : Implemented Pannable interface - see patch 2686040 (DG); 19-Mar-2009 : Added entity support - see patch 2603321 by Peter Kolb (DG); 24-Jun-2009 : Implemented AnnotationChangeListener (see patch 2809117 by PK) (DG); 06-Jul-2009 : Fix for cloning of renderers - see bug 2817504 (DG) 10-Jul-2009 : Added optional drop shadow generator (DG); 27-Sep-2011 : Fixed annotation import (DG); 18-Oct-2011 : Fixed tooltip offset with shadow generator (DG); 20-Nov-2011 : Initialise shadow generator as null (DG); 02-Jul-2013 : Use ParamChecks (DG); 12-Sep-2013 : Check for KEY_SUPPRESS_SHADOW_GENERATION rendering hint (DG); 10-Mar-2014 : Updated Javadocs for issue #1123 (DG); 09-Apr-2014 : Remove use of ObjectList (DG);
WITHOUT_CLASSIFICATION	allocate storage for dataset, axes and renderers
WITHOUT_CLASSIFICATION	delegate...
WITHOUT_CLASSIFICATION	delegate...
WITHOUT_CLASSIFICATION	calculate the data area...
WITHOUT_CLASSIFICATION	send a dataset change event to self...
WITHOUT_CLASSIFICATION	if the plot area is too small, just return...
WITHOUT_CLASSIFICATION	record the plot area...
WITHOUT_CLASSIFICATION	adjust the drawing area for the plot insets (if any)...
WITHOUT_CLASSIFICATION	set the anchor value for the range axis...
WITHOUT_CLASSIFICATION	OK
WITHOUT_CLASSIFICATION	fake a dataset change event to update axes...
WITHOUT_CLASSIFICATION	fake a dataset change event to update axes...
WITHOUT_CLASSIFICATION	the first axis in the list is used for data <--> Java2D
WITHOUT_CLASSIFICATION	the first axis in the list is used for data <--> Java2D
WITHOUT_CLASSIFICATION	get the legend items for the datasets...
WITHOUT_CLASSIFICATION	this should never happen with the existing code, but throw an exception in case future changes make it possible...
WITHOUT_CLASSIFICATION	should be equal...
WITHOUT_CLASSIFICATION	reserve some space for the domain axis...
WITHOUT_CLASSIFICATION	reserve space for the primary domain axis...
WITHOUT_CLASSIFICATION	reserve space for any domain axes...
WITHOUT_CLASSIFICATION	reserve some space for the range axis...
WITHOUT_CLASSIFICATION	reserve space for the range axes (if any)...
WITHOUT_CLASSIFICATION	if the incoming state is null, no information will be passed back to the caller - but we create a temporary state to record the plot area, since that is used later by the axes
WITHOUT_CLASSIFICATION	if there is a renderer, it draws the background, otherwise use the default background...
WITHOUT_CLASSIFICATION	the anchor point is typically the point where the mouse last clicked - the crosshairs will be driven off this point...
WITHOUT_CLASSIFICATION	specify the anchor X and Y coordinates in Java2D space, for the cases where these are not updated during rendering (i.e. no lock on data)
WITHOUT_CLASSIFICATION	don't let anyone draw outside the data area
WITHOUT_CLASSIFICATION	draw the markers...
WITHOUT_CLASSIFICATION	now render data items...
WITHOUT_CLASSIFICATION	set up the alpha-transparency...
WITHOUT_CLASSIFICATION	if the flag is being set to true, there may be queued up changes...
WITHOUT_CLASSIFICATION	an empty dataset should return a null range
WITHOUT_CLASSIFICATION	draw the foreground markers...
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	draw the annotations (if any)...
WITHOUT_CLASSIFICATION	draw domain crosshair if required...
WITHOUT_CLASSIFICATION	draw range crosshair if required...
WITHOUT_CLASSIFICATION	draw an outline around the plot area...
WITHOUT_CLASSIFICATION	add domain axes to lists...
WITHOUT_CLASSIFICATION	add range axes to lists...
WITHOUT_CLASSIFICATION	draw the top axes
WITHOUT_CLASSIFICATION	draw the bottom axes
WITHOUT_CLASSIFICATION	draw the left axes
WITHOUT_CLASSIFICATION	draw the right axes
WITHOUT_CLASSIFICATION	draw the range grid lines, if any...
WITHOUT_CLASSIFICATION	no renderer, no gridlines...
WITHOUT_CLASSIFICATION	iterate through the datasets that map to the axis and get the union of the ranges.
WITHOUT_CLASSIFICATION	add the unique categories from this dataset
WITHOUT_CLASSIFICATION	do nothing, because the plot is not pannable along the domain axes
WITHOUT_CLASSIFICATION	can't zoom domain axis
WITHOUT_CLASSIFICATION	delegate to other method
WITHOUT_CLASSIFICATION	perform the zoom on each range axis
WITHOUT_CLASSIFICATION	get the relevant source coordinate given the plot orientation
WITHOUT_CLASSIFICATION	AxisLocation is immutable, so we can just copy the maps
WITHOUT_CLASSIFICATION	not currently serialized
WITHOUT_CLASSIFICATION	some subclasses override this method completely, so don't put anything here that must be done
WITHOUT_CLASSIFICATION	provides a 'no action' default
WITHOUT_CLASSIFICATION	an empty dataset should return a null range
WITHOUT_CLASSIFICATION	send a dataset change event to self...
WITHOUT_CLASSIFICATION	if the plot area is too small, just return...
WITHOUT_CLASSIFICATION	record the plot area...
WITHOUT_CLASSIFICATION	OK
WITHOUT_CLASSIFICATION	adjust the drawing area for the plot insets (if any)...
WITHOUT_CLASSIFICATION	delegate...
WITHOUT_CLASSIFICATION	delegate...
WITHOUT_CLASSIFICATION	try the parent plot
WITHOUT_CLASSIFICATION	fake a dataset change event to update axes...
WITHOUT_CLASSIFICATION	axisIndices can be: 1. null; 2. non-empty, containing only Integer objects that are unique.
WITHOUT_CLASSIFICATION	the first axis in the list is used for data <--> Java2D
WITHOUT_CLASSIFICATION	no renderer, no gridlines...
WITHOUT_CLASSIFICATION	iterate through the datasets that map to the axis and get the union of the ranges.
WITHOUT_CLASSIFICATION	create the dataset...
WITHOUT_CLASSIFICATION	the above should cover all the options...
WITHOUT_CLASSIFICATION	define the default locations for up to 8 axes...
WITHOUT_CLASSIFICATION	normalize angle
WITHOUT_CLASSIFICATION	draw the plot background and axes...
WITHOUT_CLASSIFICATION	now for each dataset, get the renderer and the appropriate axis and render the dataset...
WITHOUT_CLASSIFICATION	now get the data and plot it (the visual representation will depend on the m_Renderer that has been set)...
WITHOUT_CLASSIFICATION	draw the domain grid lines, if any...
WITHOUT_CLASSIFICATION	draw the radius grid lines, if any...
WITHOUT_CLASSIFICATION	the datasets are not cloned, but listeners need to be added...
WITHOUT_CLASSIFICATION	square
WITHOUT_CLASSIFICATION	circle
WITHOUT_CLASSIFICATION	up-pointing triangle
WITHOUT_CLASSIFICATION	diamond
WITHOUT_CLASSIFICATION	horizontal rectangle
WITHOUT_CLASSIFICATION	down-pointing triangle
WITHOUT_CLASSIFICATION	horizontal ellipse
WITHOUT_CLASSIFICATION	right-pointing triangle
WITHOUT_CLASSIFICATION	vertical rectangle
WITHOUT_CLASSIFICATION	left-pointing triangle
WITHOUT_CLASSIFICATION	an empty dataset should return a null range
WITHOUT_CLASSIFICATION	adjust for insets...
WITHOUT_CLASSIFICATION	adjust the plot area by the interior spacing value
WITHOUT_CLASSIFICATION	set the new dataset, and register the chart as a change listener...
WITHOUT_CLASSIFICATION	send a dataset change event to self to trigger plot change event
WITHOUT_CLASSIFICATION	return the override, if there is one...
WITHOUT_CLASSIFICATION	SERIES PAINT /
WITHOUT_CLASSIFICATION	otherwise look up the paint list
WITHOUT_CLASSIFICATION	return the override, if there is one...
WITHOUT_CLASSIFICATION	return the override, if there is one...
WITHOUT_CLASSIFICATION	SERIES OUTLINE PAINT
WITHOUT_CLASSIFICATION	otherwise look up the paint list
WITHOUT_CLASSIFICATION	otherwise look up the paint list
WITHOUT_CLASSIFICATION	an empty dataset should return a null range
WITHOUT_CLASSIFICATION	ensure we have a maximum value to use on the axes
WITHOUT_CLASSIFICATION	SERIES OUTLINE STROKE /
WITHOUT_CLASSIFICATION	Next, setup the plot area
WITHOUT_CLASSIFICATION	make the chart area a square
WITHOUT_CLASSIFICATION	draw the axis and category label
WITHOUT_CLASSIFICATION	1 = end of axis
WITHOUT_CLASSIFICATION	Now actually plot each of the series polygons..
WITHOUT_CLASSIFICATION	plot the data...
WITHOUT_CLASSIFICATION	draw the polygon series...
WITHOUT_CLASSIFICATION	Finds our starting angle from the centre for this axis
WITHOUT_CLASSIFICATION	The following angle calc will ensure there isn't a top vertical axis - this may be useful if you don't want any given criteria to 'appear' move important than the others.. + (getDirection().getFactor() (cat + 0.5) 360 / catCount);
WITHOUT_CLASSIFICATION	find the point at the appropriate distance end point along the axis/angle identified above and add it to the polygon
WITHOUT_CLASSIFICATION	put an elipse at the point being plotted..
WITHOUT_CLASSIFICATION	Plot the polygon
WITHOUT_CLASSIFICATION	set the anchor value for the horizontal axis...
WITHOUT_CLASSIFICATION	shapeFilled=
WITHOUT_CLASSIFICATION	an empty dataset should return a null range
WITHOUT_CLASSIFICATION	adjust for insets...
WITHOUT_CLASSIFICATION	send a dataset change event to self...
WITHOUT_CLASSIFICATION	plot is likely registered as a listener with the existing axis...
WITHOUT_CLASSIFICATION	if the plot area is too small, just return...
WITHOUT_CLASSIFICATION	record the plot area...
WITHOUT_CLASSIFICATION	OK
WITHOUT_CLASSIFICATION	draw the background
WITHOUT_CLASSIFICATION	plot the data (unless the dataset is null)...
WITHOUT_CLASSIFICATION	adjust the drawing area for the plot insets (if any)...
WITHOUT_CLASSIFICATION	delegate...
WITHOUT_CLASSIFICATION	delegate...
WITHOUT_CLASSIFICATION	delegate...
WITHOUT_CLASSIFICATION	fake a dataset change event to update axes...
WITHOUT_CLASSIFICATION	fake a dataset change event to update axes...
WITHOUT_CLASSIFICATION	axisIndices can be: 1. null; 2. non-empty, containing only Integer objects that are unique.
WITHOUT_CLASSIFICATION	reserve some space for the domain axis...
WITHOUT_CLASSIFICATION	reserve some space for the range axis...
WITHOUT_CLASSIFICATION	draw the plot background and axes...
WITHOUT_CLASSIFICATION	check that a null dataset returns null bounds
WITHOUT_CLASSIFICATION	Lastly, fill the web polygon if this is required
WITHOUT_CLASSIFICATION	if series are in rows, then the categories are the column keys
WITHOUT_CLASSIFICATION	if series are in columns, then the categories are the row keys
WITHOUT_CLASSIFICATION	negatives = true;
WITHOUT_CLASSIFICATION	value = Math.pow(10,value);
WITHOUT_CLASSIFICATION	izV = stepsnumSteps(int)((value/minZ)/(maxZlog-minZlog)) + 2;
WITHOUT_CLASSIFICATION	super.setSeriesPaint(series, paint);
WITHOUT_CLASSIFICATION	/ Squares
WITHOUT_CLASSIFICATION	/ Draw N, S, E, W
WITHOUT_CLASSIFICATION	no zooming possible
WITHOUT_CLASSIFICATION	clone share data sets => add the clone as listener to the dataset
WITHOUT_CLASSIFICATION	only relevant when this is a subplot
WITHOUT_CLASSIFICATION	allocate storage for datasets, axes and renderers (all optional)
WITHOUT_CLASSIFICATION	reserve space for the domain axes...
WITHOUT_CLASSIFICATION	reserve space for the range axes...
WITHOUT_CLASSIFICATION	the first axis in the list is used for data <--> Java2D
WITHOUT_CLASSIFICATION	the first axis in the list is used for data <--> Java2D
WITHOUT_CLASSIFICATION	draw domain crosshair if required...
WITHOUT_CLASSIFICATION	draw range crosshair if required...
WITHOUT_CLASSIFICATION	add domain axes to lists...
WITHOUT_CLASSIFICATION	add range axes to lists...
WITHOUT_CLASSIFICATION	draw the top axes
WITHOUT_CLASSIFICATION	draw the bottom axes
WITHOUT_CLASSIFICATION	draw the left axes
WITHOUT_CLASSIFICATION	draw the right axes
WITHOUT_CLASSIFICATION	draw the range grid lines, if any...
WITHOUT_CLASSIFICATION	no renderer, no gridlines...
WITHOUT_CLASSIFICATION	no renderer, no gridlines...
WITHOUT_CLASSIFICATION	draw the domain grid lines, if any...
WITHOUT_CLASSIFICATION	draw the markers that are associated with a specific dataset...
WITHOUT_CLASSIFICATION	now draw annotations and render data items...
WITHOUT_CLASSIFICATION	draw background annotations
WITHOUT_CLASSIFICATION	render data items...
WITHOUT_CLASSIFICATION	draw foreground annotations
WITHOUT_CLASSIFICATION	0 | 1 --+-- 2 | 3
WITHOUT_CLASSIFICATION	we can't draw quadrants without a valid x-axis
WITHOUT_CLASSIFICATION	we can't draw quadrants without a valid y-axis
WITHOUT_CLASSIFICATION	PlotOrientation.VERTICAL
WITHOUT_CLASSIFICATION	can't render anything without axes
WITHOUT_CLASSIFICATION	no default renderer available
WITHOUT_CLASSIFICATION	render series in reverse order
WITHOUT_CLASSIFICATION	render series in forward order
WITHOUT_CLASSIFICATION	use the TextTitle class because it is a concrete subclass
WITHOUT_CLASSIFICATION	set up info collection...
WITHOUT_CLASSIFICATION	adjust the drawing area for plot insets (if any)...
WITHOUT_CLASSIFICATION	try the parent plot
WITHOUT_CLASSIFICATION	try the parent plot
WITHOUT_CLASSIFICATION	iterate through the datasets that map to the axis and get the union of the ranges.
WITHOUT_CLASSIFICATION	delegate to other method
WITHOUT_CLASSIFICATION	delegate to other method
WITHOUT_CLASSIFICATION	perform the zoom on each range axis
WITHOUT_CLASSIFICATION	get the relevant source coordinate given the plot orientation
WITHOUT_CLASSIFICATION	get the relevant source coordinate given the plot orientation
WITHOUT_CLASSIFICATION	draw the plot background and axes...
WITHOUT_CLASSIFICATION	the datasets are not cloned, but listeners need to be added...
WITHOUT_CLASSIFICATION	if the event was caused by a change to series visibility, then the axis ranges might need updating...
WITHOUT_CLASSIFICATION	check that the renderer has a corresponding dataset (it doesn't matter if the dataset is null)
WITHOUT_CLASSIFICATION	check that the renderer has a corresponding dataset (it doesn't matter if the dataset is null)
WITHOUT_CLASSIFICATION	set the anchor value for the vertical axis...
WITHOUT_CLASSIFICATION	grab the plot's annotations
WITHOUT_CLASSIFICATION	is it a domain axis?
WITHOUT_CLASSIFICATION	or is it a range axis?
WITHOUT_CLASSIFICATION	if the axes use a linear scale, you can uncomment the code below and switch to the alternative transX/transY calculation inside the loop that follows - it is a little bit faster then. int xx = (int) dataArea.getMinX(); int ww = (int) dataArea.getWidth(); int yy = (int) dataArea.getMaxY(); int hh = (int) dataArea.getHeight(); double domainMin = this.domainAxis.getLowerBound(); double domainLength = this.domainAxis.getUpperBound() - domainMin; double rangeMin = this.rangeAxis.getLowerBound(); double rangeLength = this.rangeAxis.getUpperBound() - rangeMin;
WITHOUT_CLASSIFICATION	register the plot as a listener with its axes, datasets, and renderers...
WITHOUT_CLASSIFICATION	perform the zoom on each domain axis
WITHOUT_CLASSIFICATION	lineVisible
WITHOUT_CLASSIFICATION	adjust for insets...
WITHOUT_CLASSIFICATION	set the new dataset, and register the chart as a change listener...
WITHOUT_CLASSIFICATION	send a dataset change event to self...
WITHOUT_CLASSIFICATION	draw the background
WITHOUT_CLASSIFICATION	intentionally blank
WITHOUT_CLASSIFICATION	get the source coordinate - this plot has always a VERTICAL orientation
WITHOUT_CLASSIFICATION	images considered equal only if they're the SAME object TODO: is there a way to do a better test?
WITHOUT_CLASSIFICATION	int transX = (int) (xx + ww (x - domainMin) / domainLength); int transY = (int) (yy - hh (y - rangeMin) / rangeLength);
WITHOUT_CLASSIFICATION	if there is an existing dataset, remove the plot from the list of change listeners...
WITHOUT_CLASSIFICATION	plot is registered as a listener with the existing axis...
WITHOUT_CLASSIFICATION	adjust for padding...
WITHOUT_CLASSIFICATION	already calculated already calculated
WITHOUT_CLASSIFICATION	draw range indicators...
WITHOUT_CLASSIFICATION	draw start of normal range
WITHOUT_CLASSIFICATION	draw start of warning range
WITHOUT_CLASSIFICATION	draw start of critical range
WITHOUT_CLASSIFICATION	draw the axis...
WITHOUT_CLASSIFICATION	cursor = midX - COLUMN_RADIUS - AXIS_GAP;
WITHOUT_CLASSIFICATION	draw text value on screen
WITHOUT_CLASSIFICATION	draw units indicator
WITHOUT_CLASSIFICATION	draw thermometer outline
WITHOUT_CLASSIFICATION	no domain axis to zoom
WITHOUT_CLASSIFICATION	work out the anchor point
WITHOUT_CLASSIFICATION	calculate the bounds of the template value
WITHOUT_CLASSIFICATION	align this rectangle to the frameAnchor
WITHOUT_CLASSIFICATION	add the insets
WITHOUT_CLASSIFICATION	draw the border
WITHOUT_CLASSIFICATION	now find the text anchor point
WITHOUT_CLASSIFICATION	lineVisible=
WITHOUT_CLASSIFICATION	send a dataset change event to self...
WITHOUT_CLASSIFICATION	setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	return the override, if there is one...
WITHOUT_CLASSIFICATION	return the override, if there is one...
WITHOUT_CLASSIFICATION	otherwise look up the paint list
WITHOUT_CLASSIFICATION	work out the anchor point
WITHOUT_CLASSIFICATION	urlText
WITHOUT_CLASSIFICATION	first, expand the viewing area into a drawing frame
WITHOUT_CLASSIFICATION	draw the background if there is one...
WITHOUT_CLASSIFICATION	draw the pointers
WITHOUT_CLASSIFICATION	draw the cap if there is one...
WITHOUT_CLASSIFICATION	now do the minor tick marks
WITHOUT_CLASSIFICATION	lowerBound
WITHOUT_CLASSIFICATION	upperBound
WITHOUT_CLASSIFICATION	startAngle
WITHOUT_CLASSIFICATION	extent
WITHOUT_CLASSIFICATION	tickRadius
WITHOUT_CLASSIFICATION	we don't clone the listeners
WITHOUT_CLASSIFICATION	use item paint for fills by default
WITHOUT_CLASSIFICATION	draw the outline of the filled polygon
WITHOUT_CLASSIFICATION	just the lines, no filling
WITHOUT_CLASSIFICATION	draw the item shapes
WITHOUT_CLASSIFICATION	SERIES VISIBLE (not yet respected by all renderers)
WITHOUT_CLASSIFICATION	SERIES VISIBLE IN LEGEND (not yet respected by all renderers)
WITHOUT_CLASSIFICATION	PAINT
WITHOUT_CLASSIFICATION	FILL PAINT
WITHOUT_CLASSIFICATION	otherwise look up the paint table
WITHOUT_CLASSIFICATION	return the override, if there is one...
WITHOUT_CLASSIFICATION	return the override, if there is one...
WITHOUT_CLASSIFICATION	return the override, if there is one...
WITHOUT_CLASSIFICATION	return the override, if there is one...
WITHOUT_CLASSIFICATION	return the override, if there is one...
WITHOUT_CLASSIFICATION	return the override, if there is one...
WITHOUT_CLASSIFICATION	we create an event with a special flag set...the purpose of this is to communicate to the plot (the default receiver of the event) that series visibility has changed so the axis ranges might need updating...
WITHOUT_CLASSIFICATION	otherwise look up the paint table
WITHOUT_CLASSIFICATION	otherwise look up the paint table
WITHOUT_CLASSIFICATION	OUTLINE PAINT
WITHOUT_CLASSIFICATION	STROKE
WITHOUT_CLASSIFICATION	OUTLINE STROKE
WITHOUT_CLASSIFICATION	otherwise look up the stroke table
WITHOUT_CLASSIFICATION	SHAPE
WITHOUT_CLASSIFICATION	otherwise look up the shape list
WITHOUT_CLASSIFICATION	ITEM LABEL VISIBILITY...
WITHOUT_CLASSIFICATION	otherwise look up the boolean table
WITHOUT_CLASSIFICATION	this should have been defined as a boolean primitive, because allowing null values is a nuisance...but it is part of the final API now, so we'll have to support it.
WITHOUT_CLASSIFICATION	ITEM LABEL FONT
WITHOUT_CLASSIFICATION	ITEM LABEL PAINT
WITHOUT_CLASSIFICATION	POSITIVE ITEM LABEL POSITION...
WITHOUT_CLASSIFICATION	otherwise look up the position table
WITHOUT_CLASSIFICATION	NEGATIVE ITEM LABEL POSITION...
WITHOUT_CLASSIFICATION	otherwise look up the position list
WITHOUT_CLASSIFICATION	the commented out code would be better, but only if RendererChangeEvent is immutable, which it isn't. See if there is a way to fix this...
WITHOUT_CLASSIFICATION	'paint' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	'basePaint' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	'outlinePaint' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	'baseOutlinePaint' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	'stroke' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	'baseStroke' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	we create an event with a special flag set...the purpose of this is to communicate to the plot (the default receiver of the event) that series visibility has changed so the axis ranges might need updating...
WITHOUT_CLASSIFICATION	'basePaint' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	shapeList baseShape
WITHOUT_CLASSIFICATION	'outlineStroke' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	'baseOutlineStroke' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	'itemLabelsVisible' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	'itemLabelFont' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	'baseItemLabelFont' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	'itemLabelPaint' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	'baseItemLabelPaint' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	'postiveItemLabelAnchor' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	'baseItemLabelAnchor' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	'negativeItemLabelAnchor' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	'baseNegativeItemLabelAnchor' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	listeners are not restored automatically, but storage must be provided...
WITHOUT_CLASSIFICATION	=== DEPRECATED CODE ===
WITHOUT_CLASSIFICATION	The following alternative is only supported in JDK 1.4 - we support JDK 1.3.1 onwards setItemLabelsVisible(Boolean.valueOf(visible));
WITHOUT_CLASSIFICATION	System.err.print(" creating new outlier list ");
WITHOUT_CLASSIFICATION	TOOL TIP GENERATOR /
WITHOUT_CLASSIFICATION	URL GENERATOR
WITHOUT_CLASSIFICATION	handle value outside bounds...
WITHOUT_CLASSIFICATION	handle special case where value is less that item zero
WITHOUT_CLASSIFICATION	special case where the lowest x-value is >= xLow
WITHOUT_CLASSIFICATION	special case where the highest x-value is < xLow
WITHOUT_CLASSIFICATION	skip any items that don't need including...
WITHOUT_CLASSIFICATION	skip any items that don't need including...
WITHOUT_CLASSIFICATION	assign a color for each unique value
WITHOUT_CLASSIFICATION	assign a color for each unique value
WITHOUT_CLASSIFICATION	in this case, every color has a unique value
WITHOUT_CLASSIFICATION	in this case, every color has a range of values
WITHOUT_CLASSIFICATION	end class wafermaprenderer
WITHOUT_CLASSIFICATION	if there is no plot, there is no dataset to access...
WITHOUT_CLASSIFICATION	we don't know anything about the ordering of the x-values, but we can still skip any initial values that fall outside the range...
WITHOUT_CLASSIFICATION	when the x-values are descending, the upper bound is found by comparing against xLow
WITHOUT_CLASSIFICATION	more values than paints so map multiple values to the same color
WITHOUT_CLASSIFICATION	end foreach map entry end else
WITHOUT_CLASSIFICATION	get the previous point and the next point so we can calculate a "hot spot" for the area (used by the chart entity)...
WITHOUT_CLASSIFICATION	FIXME: calculate xxLeft and xxRight
WITHOUT_CLASSIFICATION	handle positive value
WITHOUT_CLASSIFICATION	LEFT POLYGON
WITHOUT_CLASSIFICATION	LEFT POLYGON
WITHOUT_CLASSIFICATION	RIGHT POLYGON
WITHOUT_CLASSIFICATION	RIGHT POLYGON
WITHOUT_CLASSIFICATION	handle negative value
WITHOUT_CLASSIFICATION	calculate the bar width
WITHOUT_CLASSIFICATION	'+' because v is negative
WITHOUT_CLASSIFICATION	handle rendering separately for the two plot orientations...
WITHOUT_CLASSIFICATION	draw the blocks
WITHOUT_CLASSIFICATION	add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	SHAPES VISIBLE
WITHOUT_CLASSIFICATION	SHAPES FILLED
WITHOUT_CLASSIFICATION	otherwise look up the paint table
WITHOUT_CLASSIFICATION	a list to store the series index and bar region, so we can draw all the labels at the end...
WITHOUT_CLASSIFICATION	draw the blocks
WITHOUT_CLASSIFICATION	add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	LINES VISIBLE
WITHOUT_CLASSIFICATION	preserves old behaviour
WITHOUT_CLASSIFICATION	contained titles
WITHOUT_CLASSIFICATION	SHAPES FILLED
WITHOUT_CLASSIFICATION	return the overall setting, if there is one...
WITHOUT_CLASSIFICATION	delegate
WITHOUT_CLASSIFICATION	do nothing if item is not visible
WITHOUT_CLASSIFICATION	do nothing if item is not visible
WITHOUT_CLASSIFICATION	do nothing if both the line and shape are not visible
WITHOUT_CLASSIFICATION	nothing is drawn for null...
WITHOUT_CLASSIFICATION	current data point...
WITHOUT_CLASSIFICATION	current data point...
WITHOUT_CLASSIFICATION	previous data point...
WITHOUT_CLASSIFICATION	draw the item label if there is one...
WITHOUT_CLASSIFICATION	submit the current data point as a crosshair candidate
WITHOUT_CLASSIFICATION	set the default item label positions
WITHOUT_CLASSIFICATION	fill background...
WITHOUT_CLASSIFICATION	highlight the background corners...
WITHOUT_CLASSIFICATION	draw background image, if there is one...
WITHOUT_CLASSIFICATION	both axes
WITHOUT_CLASSIFICATION	=== DEPRECATED CODE ===
WITHOUT_CLASSIFICATION	add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	cases 5, 6, 7 and 8
WITHOUT_CLASSIFICATION	put an outline around the data area...
WITHOUT_CLASSIFICATION	check the value we are plotting...
WITHOUT_CLASSIFICATION	the bar is not visible
WITHOUT_CLASSIFICATION	draw the bar...
WITHOUT_CLASSIFICATION	ITEM LABEL GENERATOR
WITHOUT_CLASSIFICATION	return the generator for ALL series, if there is one...
WITHOUT_CLASSIFICATION	return the generator for ALL series, if there is one...
WITHOUT_CLASSIFICATION	otherwise look up the generator table
WITHOUT_CLASSIFICATION	otherwise look up the generator table
WITHOUT_CLASSIFICATION	TOOL TIP GENERATOR
WITHOUT_CLASSIFICATION	URL GENERATOR
WITHOUT_CLASSIFICATION	clip left and right bounds to data area
WITHOUT_CLASSIFICATION	clip top and bottom bounds to data area
WITHOUT_CLASSIFICATION	now draw the outlines, if visible...
WITHOUT_CLASSIFICATION	PlotOrientation.HORIZONTAL
WITHOUT_CLASSIFICATION	check that a legend item needs to be displayed...
WITHOUT_CLASSIFICATION	defensive check
WITHOUT_CLASSIFICATION	BAR Y
WITHOUT_CLASSIFICATION	BAR X
WITHOUT_CLASSIFICATION	cases 1, 2, 3 and 4
WITHOUT_CLASSIFICATION	you can add a null list - it would have been better if this required EMPTY_LIST
WITHOUT_CLASSIFICATION	BAR Y
WITHOUT_CLASSIFICATION	BAR X
WITHOUT_CLASSIFICATION	cases 1, 2, 3 and 4
WITHOUT_CLASSIFICATION	let the superclass handle it...
WITHOUT_CLASSIFICATION	bar is not visible
WITHOUT_CLASSIFICATION	bar is not visible
WITHOUT_CLASSIFICATION	cases 5, 6, 7 and 8
WITHOUT_CLASSIFICATION	cases 5, 6, 7 and 8
WITHOUT_CLASSIFICATION	cases 9, 10, 11 and 12
WITHOUT_CLASSIFICATION	cases 9, 10, 11 and 12
WITHOUT_CLASSIFICATION	draw the outline...
WITHOUT_CLASSIFICATION	draw the outline...
WITHOUT_CLASSIFICATION	standard deviation lines
WITHOUT_CLASSIFICATION	standard deviation lines
WITHOUT_CLASSIFICATION	no new methods
WITHOUT_CLASSIFICATION	value 0
WITHOUT_CLASSIFICATION	get the clipping values...
WITHOUT_CLASSIFICATION	submit the current data point as a crosshair candidate
WITHOUT_CLASSIFICATION	submit the current data point as a crosshair candidate
WITHOUT_CLASSIFICATION	draw the bar...
WITHOUT_CLASSIFICATION	cases 1, 2, 3 and 4
WITHOUT_CLASSIFICATION	bar is not visible
WITHOUT_CLASSIFICATION	bar is not visible
WITHOUT_CLASSIFICATION	cases 5, 6, 7 and 8
WITHOUT_CLASSIFICATION	cases 9, 10, 11 and 12
WITHOUT_CLASSIFICATION	draw the outline...
WITHOUT_CLASSIFICATION	if we modify the original list, it's best if the URL generator is not affected
WITHOUT_CLASSIFICATION	value 1
WITHOUT_CLASSIFICATION	DRAW THE BARS...
WITHOUT_CLASSIFICATION	collect entity and tool tip information...
WITHOUT_CLASSIFICATION	Y0
WITHOUT_CLASSIFICATION	Y1
WITHOUT_CLASSIFICATION	nothing is drawn for null values...
WITHOUT_CLASSIFICATION	X
WITHOUT_CLASSIFICATION	Y
WITHOUT_CLASSIFICATION	subtitle 1 is the legend
WITHOUT_CLASSIFICATION	calculate the bar width
WITHOUT_CLASSIFICATION	draw the bar...
WITHOUT_CLASSIFICATION	BAR Y
WITHOUT_CLASSIFICATION	BAR X
WITHOUT_CLASSIFICATION	cases 1, 2, 3 and 4
WITHOUT_CLASSIFICATION	bar is not visible
WITHOUT_CLASSIFICATION	cases 9, 10, 11 and 12
WITHOUT_CLASSIFICATION	draw the outline...
WITHOUT_CLASSIFICATION	draw the outline...
WITHOUT_CLASSIFICATION	collect entity and tool tip information...
WITHOUT_CLASSIFICATION	collect entity and tool tip information...
WITHOUT_CLASSIFICATION	nothing is drawn for null values...
WITHOUT_CLASSIFICATION	nothing is drawn for null values...
WITHOUT_CLASSIFICATION	the clone contains a reference to a CLONE of the original object
WITHOUT_CLASSIFICATION	draw the item labels if there are any...
WITHOUT_CLASSIFICATION	calculate bar width...
WITHOUT_CLASSIFICATION	&& state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {
WITHOUT_CLASSIFICATION	no fields to compute...
WITHOUT_CLASSIFICATION	plotBackgroundPaint;
WITHOUT_CLASSIFICATION	PlotOrientation.VERTICAL
WITHOUT_CLASSIFICATION	calculate the bar width
WITHOUT_CLASSIFICATION	add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	submit the current data point as a crosshair candidate
WITHOUT_CLASSIFICATION	submit the current data point as a crosshair candidate
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	the bar is not visible
WITHOUT_CLASSIFICATION	draw the bar...
WITHOUT_CLASSIFICATION	check that a legend item needs to be displayed...
WITHOUT_CLASSIFICATION	check that a legend item needs to be displayed...
WITHOUT_CLASSIFICATION	check that a legend item needs to be displayed...
WITHOUT_CLASSIFICATION	bar is not visible
WITHOUT_CLASSIFICATION	bar is not visible
WITHOUT_CLASSIFICATION	nothing is drawn for null values...
WITHOUT_CLASSIFICATION	draw the item labels if there are any...
WITHOUT_CLASSIFICATION	calculate bar width...
WITHOUT_CLASSIFICATION	check that clone is independent of the original
WITHOUT_CLASSIFICATION	do nothing if item is not visible or null
WITHOUT_CLASSIFICATION	100 percent, so it will not apply unless changed
WITHOUT_CLASSIFICATION	work out the label anchor point...
WITHOUT_CLASSIFICATION	FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?
WITHOUT_CLASSIFICATION	add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	do nothing if item is not visible
WITHOUT_CLASSIFICATION	current data point...
WITHOUT_CLASSIFICATION	current data point...
WITHOUT_CLASSIFICATION	previous data point...
WITHOUT_CLASSIFICATION	draw the item labels if there are any...
WITHOUT_CLASSIFICATION	check key order
WITHOUT_CLASSIFICATION	in the following code, barL0 is (in Java2D coordinates) the LEFT end of the bar for a horizontal bar chart, and the TOP end of the bar for a vertical bar chart. Whether this is the BASE of the bar or not depends also on (a) whether the data value is 'negative' relative to the base value and (b) whether or not the range axis is inverted. This only matters if/when we apply the minimumBarLength attribute, because we should extend the non-base end of the bar
WITHOUT_CLASSIFICATION	switch x and y
WITHOUT_CLASSIFICATION	or: x1s + 2(x1-x1s)
WITHOUT_CLASSIFICATION	or: x0s + 2(x0-x0s)
WITHOUT_CLASSIFICATION	extend x0's flat bar
WITHOUT_CLASSIFICATION	upright bar
WITHOUT_CLASSIFICATION	x1's flat bar
WITHOUT_CLASSIFICATION	standard deviation lines
WITHOUT_CLASSIFICATION	OUTLINE PAINT /
WITHOUT_CLASSIFICATION	plotOutlinePaint;
WITHOUT_CLASSIFICATION	check key order
WITHOUT_CLASSIFICATION	check key order
WITHOUT_CLASSIFICATION	previous data point...
WITHOUT_CLASSIFICATION	draw the item label if there is one...
WITHOUT_CLASSIFICATION	BAR Y
WITHOUT_CLASSIFICATION	BAR X
WITHOUT_CLASSIFICATION	Y0
WITHOUT_CLASSIFICATION	Y1
WITHOUT_CLASSIFICATION	draw the standard deviation lines before the shapes (if they're visible) - it looks better if the shape fill colour is different to the line colour
WITHOUT_CLASSIFICATION	BAR WIDTH
WITHOUT_CLASSIFICATION	BAR HEIGHT
WITHOUT_CLASSIFICATION	there are no fields to check
WITHOUT_CLASSIFICATION	=========================================================== JFreeChart : a free chart library for the Java(tm) platform =========================================================== (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. Project Info: http:www.jfree.org/jfreechart/index.html This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version. This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details. You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA. [Oracle and Java are registered trademarks of Oracle and/or its affiliates. Other names may be trademarks of their respective owners.] ------------------------- CategoryItemRenderer.java ------------------------- (C) Copyright 2001-2011, by Object Refinery Limited and Contributors. Original Author: David Gilbert (for Object Refinery Limited); Contributor(s): Mark Watson (www.markwatson.com); Changes ------- 23-Oct-2001 : Version 1 (DG); 16-Jan-2002 : Renamed HorizontalCategoryItemRenderer.java --> CategoryItemRenderer.java (DG); 05-Feb-2002 : Changed return type of the drawCategoryItem method from void to Shape, as part of the tooltips implementation (DG) NOTE (30-May-2002) : this has subsequently been changed back to void, tooltips are now collected along with entities in ChartRenderingInfo (DG); 14-Mar-2002 : Added the initialise method, and changed all bar plots to use this renderer (DG); 23-May-2002 : Added ChartRenderingInfo to the initialise method (DG); 29-May-2002 : Added the getAxisArea(Rectangle2D) method (DG); 06-Jun-2002 : Updated Javadoc comments (DG); 26-Jun-2002 : Added range axis to the initialise method (DG); 24-Sep-2002 : Added getLegendItem() method (DG); 23-Oct-2002 : Added methods to get/setToolTipGenerator (DG); 05-Nov-2002 : Replaced references to CategoryDataset with TableDataset (DG); 06-Nov-2002 : Added the domain axis to the drawCategoryItem method. Renamed drawCategoryItem() --> drawItem() (DG); 20-Nov-2002 : Changed signature of drawItem() method to reflect use of TableDataset (DG); 26-Nov-2002 : Replaced the isStacked() method with the getRangeType() method (DG); 08-Jan-2003 : Changed getSeriesCount() --> getRowCount() and getCategoryCount() --> getColumnCount() (DG); 09-Jan-2003 : Changed name of grid-line methods (DG); 21-Jan-2003 : Merged TableDataset with CategoryDataset (DG); 10-Apr-2003 : Changed CategoryDataset to KeyedValues2DDataset in drawItem() method (DG); 29-Apr-2003 : Eliminated Renderer interface (DG); 02-Sep-2003 : Fix for bug 790407 (DG); 16-Sep-2003 : Changed ChartRenderingInfo --> PlotRenderingInfo (DG); 20-Oct-2003 : Added setOutlinePaint() method (DG); 06-Feb-2004 : Added missing methods, and moved deprecated methods (DG); 19-Feb-2004 : Added extra setXXXLabelsVisible() methods (DG); 29-Apr-2004 : Changed Integer --> int in initialise() method (DG); 18-May-2004 : Added methods for item label paint (DG); 05-Nov-2004 : Added getPassCount() method and 'pass' parameter to drawItem() method (DG); 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds (DG); 11-Jan-2005 : Removed deprecated code in preparation for 1.0.0 release (DG); 23-Feb-2005 : Now extends LegendItemSource (DG); 20-Apr-2005 : Renamed CategoryLabelGenerator --> CategoryItemLabelGenerator (DG); 20-May-2005 : Added drawDomainMarker() method (DG); ------------- JFREECHART 1.0.x --------------------------------------------- 20-Feb-2007 : Updated API docs (DG); 19-Apr-2007 : Deprecated seriesVisible and seriesVisibleInLegend flags (DG); 20-Apr-2007 : Deprecated paint, fillPaint, outlinePaint, stroke, outlineStroke, shape, itemLabelsVisible, itemLabelFont, itemLabelPaint, positiveItemLabelPosition, negativeItemLabelPosition and createEntities override fields (DG); 26-Jun-2008 : Added new method required for crosshair support - THIS CHANGES THE API as of version 1.0.11 (DG);
WITHOUT_CLASSIFICATION	PAINT /
WITHOUT_CLASSIFICATION	FIXME: add setSeriesPaint(int, Paint, boolean)?
WITHOUT_CLASSIFICATION	FIXME: add setBasePaint(int, Paint, boolean)?
WITHOUT_CLASSIFICATION	FILL PAINT /
WITHOUT_CLASSIFICATION	POSITIVE ITEM LABEL POSITION...
WITHOUT_CLASSIFICATION	NEGATIVE ITEM LABEL POSITION...
WITHOUT_CLASSIFICATION	ITEM LABEL GENERATOR
WITHOUT_CLASSIFICATION	TOOL TIP GENERATOR
WITHOUT_CLASSIFICATION	draw the outline...
WITHOUT_CLASSIFICATION	FIXME: add setSeriesPaint(int, Paint, boolean)?
WITHOUT_CLASSIFICATION	ITEM LABELS VISIBLE
WITHOUT_CLASSIFICATION	FIXME: add setBaseOutlinePaint(Paint, boolean)?
WITHOUT_CLASSIFICATION	STROKE
WITHOUT_CLASSIFICATION	FIXME: add setSeriesStroke(int, Stroke, boolean) ?
WITHOUT_CLASSIFICATION	FIXME: add setBaseStroke(Stroke, boolean) ?
WITHOUT_CLASSIFICATION	OUTLINE STROKE
WITHOUT_CLASSIFICATION	FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?
WITHOUT_CLASSIFICATION	FIXME: add setBaseOutlineStroke(Stroke, boolean) ?
WITHOUT_CLASSIFICATION	SHAPE /
WITHOUT_CLASSIFICATION	FIXME: add setSeriesShape(int, Shape, boolean) ?
WITHOUT_CLASSIFICATION	FIXME: add setBaseShape(Shape, boolean) ?
WITHOUT_CLASSIFICATION	check retrieve value by key
WITHOUT_CLASSIFICATION	FIXME: add setSeriesItemLabelGenerator(int, CategoryItemLabelGenerator, boolean)
WITHOUT_CLASSIFICATION	FIXME: add setBaseToolTipGenerator(CategoryToolTipGenerator, boolean) ?
WITHOUT_CLASSIFICATION	ITEM LABEL FONT
WITHOUT_CLASSIFICATION	FIXME: add setSeriesItemLabelFont(int, Font, boolean) ?
WITHOUT_CLASSIFICATION	FIXME: add setBaseItemLabelFont(Font, boolean) ?
WITHOUT_CLASSIFICATION	ITEM LABEL PAINT /
WITHOUT_CLASSIFICATION	FIXME: add setSeriesItemLabelPaint(int, Paint, boolean) ?
WITHOUT_CLASSIFICATION	FIXME: add setBaseItemLabelPaint(Paint, boolean) ?
WITHOUT_CLASSIFICATION	ITEM URL GENERATOR
WITHOUT_CLASSIFICATION	as a special case, if the bar colour has alpha == 0, we draw nothing.
WITHOUT_CLASSIFICATION	&& state.getBarWidth() > renderer.BAR_OUTLINE_WIDTH_THRESHOLD
WITHOUT_CLASSIFICATION	standard ResourceBundle behaviour
WITHOUT_CLASSIFICATION	check retrieve value by key
WITHOUT_CLASSIFICATION	nothing is drawn for null...
WITHOUT_CLASSIFICATION	current data point...
WITHOUT_CLASSIFICATION	previous data point...
WITHOUT_CLASSIFICATION	previous data point...
WITHOUT_CLASSIFICATION	draw the item label if there is one...
WITHOUT_CLASSIFICATION	submit the current data point as a crosshair candidate
WITHOUT_CLASSIFICATION	fill background...
WITHOUT_CLASSIFICATION	draw background image, if there is one...
WITHOUT_CLASSIFICATION	put an outline around the data area...
WITHOUT_CLASSIFICATION	draw the bar...
WITHOUT_CLASSIFICATION	collect entity and tool tip information...
WITHOUT_CLASSIFICATION	nothing is drawn for null values...
WITHOUT_CLASSIFICATION	handle a special case - if the bar colour has alpha == 0, it is invisible so we shouldn't draw any shadow
WITHOUT_CLASSIFICATION	100 percent, so it will not apply unless changed
WITHOUT_CLASSIFICATION	set the outline paint to fully transparent, then the legend shape will just have the same colour as the lines drawn by the renderer
WITHOUT_CLASSIFICATION	first check the number we are plotting...
WITHOUT_CLASSIFICATION	reset the min and max
WITHOUT_CLASSIFICATION	connect to the previous point
WITHOUT_CLASSIFICATION	create a line renderer only
WITHOUT_CLASSIFICATION	higlight the background corners...
WITHOUT_CLASSIFICATION	do nothing if item is not visible
WITHOUT_CLASSIFICATION	check that a legend item needs to be displayed...
WITHOUT_CLASSIFICATION	draw the outline...
WITHOUT_CLASSIFICATION	Y0
WITHOUT_CLASSIFICATION	Y1
WITHOUT_CLASSIFICATION	nothing is drawn for null values...
WITHOUT_CLASSIFICATION	BAR WIDTH
WITHOUT_CLASSIFICATION	BAR HEIGHT
WITHOUT_CLASSIFICATION	we'll set this to false if there is at least one non-null data item...
WITHOUT_CLASSIFICATION	set the default item label positions, which will only be used if the user requests visible item labels...
WITHOUT_CLASSIFICATION	treat the last column value as an absolute
WITHOUT_CLASSIFICATION	only needed if calculating percentages
WITHOUT_CLASSIFICATION	calculate the box width
WITHOUT_CLASSIFICATION	offset the start of the boxes if the total width used is smaller than the category width
WITHOUT_CLASSIFICATION	offset the start of the box if the box width is smaller than the category width
WITHOUT_CLASSIFICATION	draw the box...
WITHOUT_CLASSIFICATION	draw the upper shadow...
WITHOUT_CLASSIFICATION	draw the lower shadow...
WITHOUT_CLASSIFICATION	FIXME: add setBasePaint(int, Paint, boolean)?
WITHOUT_CLASSIFICATION	offset the start of the boxes if the total width used is smaller than the category width
WITHOUT_CLASSIFICATION	draw the upper shadow...
WITHOUT_CLASSIFICATION	draw the lower shadow...
WITHOUT_CLASSIFICATION	here we check that the average marker will in fact be visible before drawing it...
WITHOUT_CLASSIFICATION	draw mean - SPECIAL AIMS REQUIREMENT...
WITHOUT_CLASSIFICATION	average radius
WITHOUT_CLASSIFICATION	average radius
WITHOUT_CLASSIFICATION	check retrieve value by index
WITHOUT_CLASSIFICATION	draw median...
WITHOUT_CLASSIFICATION	draw median...
WITHOUT_CLASSIFICATION	offset the start of the box if the box width is smaller than the category width
WITHOUT_CLASSIFICATION	draw the body...
WITHOUT_CLASSIFICATION	draw yOutliers...
WITHOUT_CLASSIFICATION	draw farout indicators
WITHOUT_CLASSIFICATION	start from Y = rangeBase
WITHOUT_CLASSIFICATION	Process outliers. Each outlier is either added to the appropriate outlier list or a new outlier list is made
WITHOUT_CLASSIFICATION	disable visible items optimisation - it doesn't work for this renderer...
WITHOUT_CLASSIFICATION	Get the item count for the series, so that we can know which is the end of the series.
WITHOUT_CLASSIFICATION	avoid possible sun.dc.pr.PRException: endPath: bad path
WITHOUT_CLASSIFICATION	Create a new Area for the series
WITHOUT_CLASSIFICATION	The first point is (x, this.baseYValue)
WITHOUT_CLASSIFICATION	get the previous data point...
WITHOUT_CLASSIFICATION	not just a horizontal bar but need to perform a 'step'.
WITHOUT_CLASSIFICATION	add an entity for the item...
WITHOUT_CLASSIFICATION	collect entity and tool tip information...
WITHOUT_CLASSIFICATION	avoid possible sun.dc.pr.PRException: endPath: bad path
WITHOUT_CLASSIFICATION	retrieve an item
WITHOUT_CLASSIFICATION	Add each point to Area (x, y)
WITHOUT_CLASSIFICATION	Check if the item is the last item for the series or if it is a NULL value and number of items > 0. We can't draw an area for a single point.
WITHOUT_CLASSIFICATION	Add the last point (x,0)
WITHOUT_CLASSIFICATION	fill the polygon
WITHOUT_CLASSIFICATION	draw an outline around the Area.
WITHOUT_CLASSIFICATION	start new area when needed (see above)
WITHOUT_CLASSIFICATION	do nothing...this is just a hook for subclasses
WITHOUT_CLASSIFICATION	TODO getSeriesShape(n).getBounds().width / 2;
WITHOUT_CLASSIFICATION	TODO getSeriesShape(n).getBounds().height / 2;
WITHOUT_CLASSIFICATION	can't draw anything
WITHOUT_CLASSIFICATION	draw optional guide lines
WITHOUT_CLASSIFICATION	calculate the arrow head and draw it...
WITHOUT_CLASSIFICATION	orientation is HORIZONTAL
WITHOUT_CLASSIFICATION	labelLinkStyle;
WITHOUT_CLASSIFICATION	request width index == itemCount
WITHOUT_CLASSIFICATION	check if either series is a degenerate case (i.e. less than 2 points)
WITHOUT_CLASSIFICATION	check if series are disjoint (i.e. domain-spans do not overlap)
WITHOUT_CLASSIFICATION	polygon definitions
WITHOUT_CLASSIFICATION	state
WITHOUT_CLASSIFICATION	actual value set below
WITHOUT_CLASSIFICATION	if a subtrahend is not specified, assume it is zero
WITHOUT_CLASSIFICATION	fast-forward through leading tails
WITHOUT_CLASSIFICATION	get the x and y coordinates
WITHOUT_CLASSIFICATION	minuend needs to be fast forwarded
WITHOUT_CLASSIFICATION	subtrahend needs to be fast forwarded
WITHOUT_CLASSIFICATION	project onto subtrahend
WITHOUT_CLASSIFICATION	project onto minuend
WITHOUT_CLASSIFICATION	start of algorithm
WITHOUT_CLASSIFICATION	this won't happen :)
WITHOUT_CLASSIFICATION	deassert b_FastForward (only matters for 1st time through loop)
WITHOUT_CLASSIFICATION	check for intersect
WITHOUT_CLASSIFICATION	check if line segments are colinear
WITHOUT_CLASSIFICATION	compute common denominator
WITHOUT_CLASSIFICATION	compute common deltas
WITHOUT_CLASSIFICATION	compute numerators
WITHOUT_CLASSIFICATION	check if previously colinear
WITHOUT_CLASSIFICATION	clear colinear points and flag
WITHOUT_CLASSIFICATION	set new starting point for the polygon
WITHOUT_CLASSIFICATION	compute slope components
WITHOUT_CLASSIFICATION	test if both grahphs have a vertical rise at the same x-value
WITHOUT_CLASSIFICATION	check if the line segments intersect
WITHOUT_CLASSIFICATION	compute the point of intersection
WITHOUT_CLASSIFICATION	advance minuend and subtrahend to intesect
WITHOUT_CLASSIFICATION	add intersection point to the polygon
WITHOUT_CLASSIFICATION	add the subtrahend's points to the polygon in reverse
WITHOUT_CLASSIFICATION	create an actual polygon
WITHOUT_CLASSIFICATION	add an entity for the item...
WITHOUT_CLASSIFICATION	SERIES VISIBLE IN LEGEND (not yet respected by all renderers)
WITHOUT_CLASSIFICATION	draw the item label if there is one...
WITHOUT_CLASSIFICATION	draw an outline around the Area.
WITHOUT_CLASSIFICATION	project onto subtrahend
WITHOUT_CLASSIFICATION	project onto minuend
WITHOUT_CLASSIFICATION	add the subtrahend's points to the polygon in reverse
WITHOUT_CLASSIFICATION	create an actual polygon
WITHOUT_CLASSIFICATION	set the maxY and minY values to intersect y-value
WITHOUT_CLASSIFICATION	add interection point to new polygon
WITHOUT_CLASSIFICATION	advance the minuend if needed
WITHOUT_CLASSIFICATION	advance the subtrahend if needed
WITHOUT_CLASSIFICATION	check if the final polygon needs to be clipped
WITHOUT_CLASSIFICATION	consider last point of minuend and subtrahend for determining positivity
WITHOUT_CLASSIFICATION	add the last point of the minuned and subtrahend
WITHOUT_CLASSIFICATION	vertical orientation
WITHOUT_CLASSIFICATION	VISIBLE
WITHOUT_CLASSIFICATION	PAINT
WITHOUT_CLASSIFICATION	get the previous point and the next point so we can calculate a "hot spot" for the area (used by the chart entity)...
WITHOUT_CLASSIFICATION	FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?
WITHOUT_CLASSIFICATION	FIXME: add setBaseOutlinePaint(Paint, boolean)?
WITHOUT_CLASSIFICATION	create the polygon add the minuend's points to polygon
WITHOUT_CLASSIFICATION	Check if the item is the last item for the series. and number of items > 0. We can't draw an area for a single point.
WITHOUT_CLASSIFICATION	OUTLINE PAINT
WITHOUT_CLASSIFICATION	bad axisNumber
WITHOUT_CLASSIFICATION	a Range object cannot be equal to a different object type
WITHOUT_CLASSIFICATION	POSITIVE ITEM LABEL POSITION...
WITHOUT_CLASSIFICATION	NEGATIVE ITEM LABEL POSITION...
WITHOUT_CLASSIFICATION	TOOL TIP GENERATOR /
WITHOUT_CLASSIFICATION	URL GENERATOR
WITHOUT_CLASSIFICATION	FIXME: add setSeriesStroke(int, Stroke, boolean) ?
WITHOUT_CLASSIFICATION	FIXME: add setBaseStroke(Stroke, boolean) ?
WITHOUT_CLASSIFICATION	FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?
WITHOUT_CLASSIFICATION	FIXME: add setBaseOutlineStroke(Stroke, boolean) ?
WITHOUT_CLASSIFICATION	FIXME: add setSeriesShape(int, Shape, boolean) ?
WITHOUT_CLASSIFICATION	FIXME: add setBaseShape(Shape, boolean) ?
WITHOUT_CLASSIFICATION	allowDuplicateXValues
WITHOUT_CLASSIFICATION	STROKE /
WITHOUT_CLASSIFICATION	OUTLINE STROKE /
WITHOUT_CLASSIFICATION	SHAPE
WITHOUT_CLASSIFICATION	LEGEND ITEMS /
WITHOUT_CLASSIFICATION	LEGEND ITEM LABEL GENERATOR
WITHOUT_CLASSIFICATION	ITEM LABEL GENERATOR /
WITHOUT_CLASSIFICATION	FIXME:
WITHOUT_CLASSIFICATION	ITEM LABEL FONT /
WITHOUT_CLASSIFICATION	ANNOTATIONS
WITHOUT_CLASSIFICATION	DRAWING
WITHOUT_CLASSIFICATION	DEPRECATED METHODS
WITHOUT_CLASSIFICATION	need to handle cluster centering as a special case
WITHOUT_CLASSIFICATION	may be negative
WITHOUT_CLASSIFICATION	Legacy? Just return the original Paint. (this corresponds EXACTLY to how Paints used to be darkened)
WITHOUT_CLASSIFICATION	get the data point...
WITHOUT_CLASSIFICATION	setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	add an entity for the item...
WITHOUT_CLASSIFICATION	do nothing if item is not visible
WITHOUT_CLASSIFICATION	Create a new Area for the series
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	add a value
WITHOUT_CLASSIFICATION	first pass draws the shading
WITHOUT_CLASSIFICATION	last item in series, draw the lot... set up the alpha-transparency...
WITHOUT_CLASSIFICATION	second pass adds shapes where the items are ..
WITHOUT_CLASSIFICATION	return straight away if the item is not visible
WITHOUT_CLASSIFICATION	add an entity if this info is being collected
WITHOUT_CLASSIFICATION	Get height adjustment based on stack and translate to Java2D values
WITHOUT_CLASSIFICATION	Get series Paint and Stroke
WITHOUT_CLASSIFICATION	On first pass render the areas, line and outlines
WITHOUT_CLASSIFICATION	start from previous height (ph1)
WITHOUT_CLASSIFICATION	should not get here
WITHOUT_CLASSIFICATION	use item paint for fills by default
WITHOUT_CLASSIFICATION	=== DEPRECATED CODE ===
WITHOUT_CLASSIFICATION	LINES VISIBLE
WITHOUT_CLASSIFICATION	SHAPES VISIBLE
WITHOUT_CLASSIFICATION	SHAPES FILLED
WITHOUT_CLASSIFICATION	do nothing if item is not visible
WITHOUT_CLASSIFICATION	collect entity and tool tip information...
WITHOUT_CLASSIFICATION	Get the item count for the series, so that we can know which is the end of the series.
WITHOUT_CLASSIFICATION	get the previous data point...
WITHOUT_CLASSIFICATION	Add each point to Area (x, y)
WITHOUT_CLASSIFICATION	Add the last point (x,0)
WITHOUT_CLASSIFICATION	Add the last point (x,0)
WITHOUT_CLASSIFICATION	add another value
WITHOUT_CLASSIFICATION	in the rendering process, there is special handling for item zero, so we can't support processing of visible data items only
WITHOUT_CLASSIFICATION	The first point is (x, 0)
WITHOUT_CLASSIFICATION	Fill the polygon
WITHOUT_CLASSIFICATION	Draw an outline around the Area.
WITHOUT_CLASSIFICATION	first pass draws the background (lines, for instance)
WITHOUT_CLASSIFICATION	labelLinkPaint;
WITHOUT_CLASSIFICATION	only draw if we have good values
WITHOUT_CLASSIFICATION	setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	get the data points
WITHOUT_CLASSIFICATION	draw the item label if there is one...
WITHOUT_CLASSIFICATION	second pass adds shapes where the items are ..
WITHOUT_CLASSIFICATION	Add points from last series to complete the base of the polygon
WITHOUT_CLASSIFICATION	On second pass render shapes and collect entity and tooltip information
WITHOUT_CLASSIFICATION	update path to reflect latest point
WITHOUT_CLASSIFICATION	if this is the last item, draw the path ...
WITHOUT_CLASSIFICATION	draw path
WITHOUT_CLASSIFICATION	Collect points
WITHOUT_CLASSIFICATION	construct path
WITHOUT_CLASSIFICATION	we need at least two points to draw something
WITHOUT_CLASSIFICATION	we need at least 3 points to spline. Draw simple line for two points
WITHOUT_CLASSIFICATION	construct spline number of points Newton form coefficients x-coordinates of nodes
WITHOUT_CLASSIFICATION	note that a[0]=a[np-1]=0
WITHOUT_CLASSIFICATION	loop over intervals between nodes
WITHOUT_CLASSIFICATION	we're running on JRE 1.3.1 so this is the best we have...
WITHOUT_CLASSIFICATION	both axes
WITHOUT_CLASSIFICATION	ITEM LABEL GENERATOR
WITHOUT_CLASSIFICATION	return the generator for ALL series, if there is one...
WITHOUT_CLASSIFICATION	return the generator for ALL series, if there is one...
WITHOUT_CLASSIFICATION	otherwise look up the generator table
WITHOUT_CLASSIFICATION	otherwise look up the generator table
WITHOUT_CLASSIFICATION	TOOL TIP GENERATOR
WITHOUT_CLASSIFICATION	URL GENERATOR
WITHOUT_CLASSIFICATION	clip top and bottom bounds to data area
WITHOUT_CLASSIFICATION	clip top and bottom bounds to data area
WITHOUT_CLASSIFICATION	now draw the outlines, if visible...
WITHOUT_CLASSIFICATION	now draw the outlines, if visible...
WITHOUT_CLASSIFICATION	PlotOrientation.HORIZONTAL
WITHOUT_CLASSIFICATION	PlotOrientation.HORIZONTAL
WITHOUT_CLASSIFICATION	work out the label anchor point...
WITHOUT_CLASSIFICATION	map a key to the default group
WITHOUT_CLASSIFICATION	Add last point @ y=0 for fillPath and close path
WITHOUT_CLASSIFICATION	fill under the curve...
WITHOUT_CLASSIFICATION	then draw the line...
WITHOUT_CLASSIFICATION	reset points vector
WITHOUT_CLASSIFICATION	factorization and forward substitution
WITHOUT_CLASSIFICATION	now draw the real shape
WITHOUT_CLASSIFICATION	should never get here
WITHOUT_CLASSIFICATION	'plot' : just retain reference, not a deep copy
WITHOUT_CLASSIFICATION	just the domain axis...
WITHOUT_CLASSIFICATION	just the range axis...
WITHOUT_CLASSIFICATION	get the label position..
WITHOUT_CLASSIFICATION	do nothing if item is not visible
WITHOUT_CLASSIFICATION	draw the item label if there is one...
WITHOUT_CLASSIFICATION	collect entity and tool tip information...
WITHOUT_CLASSIFICATION	get the previous data point...
WITHOUT_CLASSIFICATION	Add each point to Area (x, y)
WITHOUT_CLASSIFICATION	vertical orientation
WITHOUT_CLASSIFICATION	in the rendering process, there is special handling for item zero, so we can't support processing of visible data items only
WITHOUT_CLASSIFICATION	this represents the situation for drawing a horizontal bar.
WITHOUT_CLASSIFICATION	this handles the need to perform a 'step'.
WITHOUT_CLASSIFICATION	calculate the step point
WITHOUT_CLASSIFICATION	this handles the need to perform a 'step'. calculate the step point
WITHOUT_CLASSIFICATION	submit this data item as a candidate for the crosshair point
WITHOUT_CLASSIFICATION	create a new area polygon for the series
WITHOUT_CLASSIFICATION	the first point is (x, 0)
WITHOUT_CLASSIFICATION	setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	otherwise look up the paint table
WITHOUT_CLASSIFICATION	SHAPES FILLED
WITHOUT_CLASSIFICATION	return the overall setting, if there is one...
WITHOUT_CLASSIFICATION	draw the outline...
WITHOUT_CLASSIFICATION	&& state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {
WITHOUT_CLASSIFICATION	no fields to compute...
WITHOUT_CLASSIFICATION	Add the last point (x,0)
WITHOUT_CLASSIFICATION	draw an outline around the Area.
WITHOUT_CLASSIFICATION	Check if the item is the last item for the series. and number of items > 0. We can't draw an area for a single point.
WITHOUT_CLASSIFICATION	a new map always has 1 group (the default group)
WITHOUT_CLASSIFICATION	we make the clip region slightly larger than the dataArea so that the clipped edges don't show lines on the chart
WITHOUT_CLASSIFICATION	no change
WITHOUT_CLASSIFICATION	here we use BooleanUtilities to remain compatible with JDKs < 1.4
WITHOUT_CLASSIFICATION	need to make sure we are adding after any duplicates
WITHOUT_CLASSIFICATION	update the max value
WITHOUT_CLASSIFICATION	only draw if we have good values
WITHOUT_CLASSIFICATION	setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	draw the item label if there is one...
WITHOUT_CLASSIFICATION	handle a special case - if the bar colour has alpha == 0, it is invisible so we shouldn't draw any shadow
WITHOUT_CLASSIFICATION	get the previous data point...
WITHOUT_CLASSIFICATION	update path to reflect latest point
WITHOUT_CLASSIFICATION	draw path
WITHOUT_CLASSIFICATION	we are starting a new series path
WITHOUT_CLASSIFICATION	only draw a line if the gap between the current and previous data point is within the threshold
WITHOUT_CLASSIFICATION	we needed to get this far even for invisible items, to ensure that seriesPath updates happened, but now there is nothing more we need to do for non-visible items...
WITHOUT_CLASSIFICATION	this method must be overridden if you want to display images
WITHOUT_CLASSIFICATION	draw the upper shadow
WITHOUT_CLASSIFICATION	draw the lower shadow
WITHOUT_CLASSIFICATION	draw the body
WITHOUT_CLASSIFICATION	add an entity for the item...
WITHOUT_CLASSIFICATION	add an entity for the item...
WITHOUT_CLASSIFICATION	draw the upper shadow
WITHOUT_CLASSIFICATION	PROTECTED METHODS These provide the opportunity to subclass the standard renderer and create custom effects.
WITHOUT_CLASSIFICATION	draw the lower shadow
WITHOUT_CLASSIFICATION	draw the body
WITHOUT_CLASSIFICATION	draw median
WITHOUT_CLASSIFICATION	draw average - SPECIAL AIMS REQUIREMENT
WITHOUT_CLASSIFICATION	draw average - SPECIAL AIMS REQUIREMENT
WITHOUT_CLASSIFICATION	here we check that the average marker will in fact be visible before drawing it...
WITHOUT_CLASSIFICATION	yOutliers can be null, but we'd prefer it to be an empty list in that case...
WITHOUT_CLASSIFICATION	From outlier array sort out which are outliers and put these into an arraylist. If there are any farouts, set the flag on the OutlierListCollection
WITHOUT_CLASSIFICATION	draw yOutliers
WITHOUT_CLASSIFICATION	draw outliers
WITHOUT_CLASSIFICATION	draw farout
WITHOUT_CLASSIFICATION	get the data point...
WITHOUT_CLASSIFICATION	get the data point...
WITHOUT_CLASSIFICATION	add an entity for the item...
WITHOUT_CLASSIFICATION	get the previous data point...
WITHOUT_CLASSIFICATION	here we check that the average marker will in fact be visible before drawing it...
WITHOUT_CLASSIFICATION	Number n =
WITHOUT_CLASSIFICATION	Process outliers. Each outlier is either added to the appropriate outlier list or a new outlier list is made
WITHOUT_CLASSIFICATION	for item labels, we have a special case because there is the possibility to draw (a) the regular item label near to just the upper y-value, or (b) the regular item label near the upper y-value PLUS an additional item label near the lower y-value.
WITHOUT_CLASSIFICATION	If null, don't draw line => then delegate to parent
WITHOUT_CLASSIFICATION	If null, don't draw line at all
WITHOUT_CLASSIFICATION	Now split the segment as needed
WITHOUT_CLASSIFICATION	If the segment must be splitted, insert a new point Strict test forces to have real segments (not 2 equal points) and avoids division by 0
WITHOUT_CLASSIFICATION	If the line is not wrapping, then parent is OK
WITHOUT_CLASSIFICATION	calculate the highest volume in the dataset...
WITHOUT_CLASSIFICATION	Number n =
WITHOUT_CLASSIFICATION	Number n =
WITHOUT_CLASSIFICATION	Number n =
WITHOUT_CLASSIFICATION	Number n =
WITHOUT_CLASSIFICATION	do nothing if item is not visible
WITHOUT_CLASSIFICATION	PlotOrientation.HORIZONTAL
WITHOUT_CLASSIFICATION	draw the outline...
WITHOUT_CLASSIFICATION	as a special case, if the bar colour has alpha == 0, we draw nothing.
WITHOUT_CLASSIFICATION	update path to reflect latest point
WITHOUT_CLASSIFICATION	if this is the last item, draw the path ...
WITHOUT_CLASSIFICATION	draw path
WITHOUT_CLASSIFICATION	transpose the dimensions, because the title is rotated
WITHOUT_CLASSIFICATION	The split may occur in either x splitted segments, if any, but not in both
WITHOUT_CLASSIFICATION	the x value is not within the axis range
WITHOUT_CLASSIFICATION	not a HighLowDataset, so just draw a line connecting this point with the previous point...
WITHOUT_CLASSIFICATION	include the interval if there is one
WITHOUT_CLASSIFICATION	include the interval if there is one
WITHOUT_CLASSIFICATION	draw the error bar for the x-interval
WITHOUT_CLASSIFICATION	draw the error bar for the y-interval
WITHOUT_CLASSIFICATION	domainGridlinePaint;
WITHOUT_CLASSIFICATION	setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	add an entity for the item...
WITHOUT_CLASSIFICATION	get the previous point and the next point so we can calculate a "hot spot" for the area (used by the chart entity)...
WITHOUT_CLASSIFICATION	do nothing if item is not visible
WITHOUT_CLASSIFICATION	no new methods
WITHOUT_CLASSIFICATION	set the default item label positions, which will only be used if the user requests visible item labels...
WITHOUT_CLASSIFICATION	handle item label drawing, now that we know all the bars have been drawn...
WITHOUT_CLASSIFICATION	if the renderer isn't assigned to a plot, then we don't have a dataset...
WITHOUT_CLASSIFICATION	initalize xValues, yValues, and zValues arrays.
WITHOUT_CLASSIFICATION	setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	add an entity for the item...
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	handle positive value
WITHOUT_CLASSIFICATION	LEFT POLYGON
WITHOUT_CLASSIFICATION	RIGHT POLYGON
WITHOUT_CLASSIFICATION	RIGHT POLYGON
WITHOUT_CLASSIFICATION	handle negative value
WITHOUT_CLASSIFICATION	clip left and right bounds to data area
WITHOUT_CLASSIFICATION	clip top and bottom bounds to data area
WITHOUT_CLASSIFICATION	work out the label anchor point...
WITHOUT_CLASSIFICATION	Get series Paint and Stroke
WITHOUT_CLASSIFICATION	Number n =
WITHOUT_CLASSIFICATION	is there an alignment adjustment to be made?
WITHOUT_CLASSIFICATION	update the crosshair point
WITHOUT_CLASSIFICATION	calculate the maximum allowed candle width from the axis...
WITHOUT_CLASSIFICATION	Absolute value, since the relative x positions are reversed for horizontal orientation
WITHOUT_CLASSIFICATION	Number n =
WITHOUT_CLASSIFICATION	pdfDocument class will be null so the function will return false
WITHOUT_CLASSIFICATION	add an entity for the item...
WITHOUT_CLASSIFICATION	draw the upper shadow
WITHOUT_CLASSIFICATION	draw the lower shadow
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	draw the body
WITHOUT_CLASSIFICATION	this won't happen :)
WITHOUT_CLASSIFICATION	--- DEPRECATED CODE ----------------------------------------------------
WITHOUT_CLASSIFICATION	create the temporary directory if it doesn't exist
WITHOUT_CLASSIFICATION	Add chart to deletion list in session
WITHOUT_CLASSIFICATION	Set HTTP headers
WITHOUT_CLASSIFICATION	Replace ".." with "" This is to prevent access to the rest of the file system
WITHOUT_CLASSIFICATION	Check the file exists
WITHOUT_CLASSIFICATION	Serve it up
WITHOUT_CLASSIFICATION	draw the block without collecting entities
WITHOUT_CLASSIFICATION	RectangleInsets is immutable => same reference in clone OK
WITHOUT_CLASSIFICATION	suppress compiler warning
WITHOUT_CLASSIFICATION	suppress compiler warning
WITHOUT_CLASSIFICATION	determine the space required for the axis
WITHOUT_CLASSIFICATION	transpose the dimensions, because the title is rotated
WITHOUT_CLASSIFICATION	basic check for independence
WITHOUT_CLASSIFICATION	don't bother with parsing
WITHOUT_CLASSIFICATION	don't bother with parsing
WITHOUT_CLASSIFICATION	no need to instantiate this class
WITHOUT_CLASSIFICATION	yAdj = -descent - leading + (float) bounds.getHeight();
WITHOUT_CLASSIFICATION	svgClass will be null so the function will return false
WITHOUT_CLASSIFICATION	basic check for independence
WITHOUT_CLASSIFICATION	basic check for independence
WITHOUT_CLASSIFICATION	basic check for independence
WITHOUT_CLASSIFICATION	argument checking delegated...
WITHOUT_CLASSIFICATION	don't bother with parsing
WITHOUT_CLASSIFICATION	standard ResourceBundle behaviour
WITHOUT_CLASSIFICATION	update (x1, y1), (x2, y2) and f1 and f2 using intersections then recheck
WITHOUT_CLASSIFICATION	first point is outside, so we update it against one of the four sides then continue
WITHOUT_CLASSIFICATION	second point is outside, so we update it against one of the four sides then continue
WITHOUT_CLASSIFICATION	the line is visible - if it wasn't, we'd have returned false from within the while loop above
WITHOUT_CLASSIFICATION	Lots can go wrong while fiddling with Images, Color Models & such! If anything at all goes awry, just return the original TexturePaint. (TexturePaint's are immutable anyway, so no harm done)
WITHOUT_CLASSIFICATION	Placeholder
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	(pix-buffer is large enough for all pixels of one row)
WITHOUT_CLASSIFICATION	RGB (+ optional Alpha which we leave unchanged)
WITHOUT_CLASSIFICATION	Red Green Blue. Now map computed colour to nearest in Palette...
WITHOUT_CLASSIFICATION	Red Green Blue
WITHOUT_CLASSIFICATION	Ignore alpha-channel ->
WITHOUT_CLASSIFICATION	<- this is the code that actually COPIES the pixels
WITHOUT_CLASSIFICATION	Buffered Images may have properties, but NEVER disclose them! Nevertheless, just in case someone implements getPropertyNames() one day...
WITHOUT_CLASSIFICATION	ALWAYS null
WITHOUT_CLASSIFICATION	all methods are static, no need to instantiate
WITHOUT_CLASSIFICATION	substitute the filtered URL list
WITHOUT_CLASSIFICATION	adjust text bounds to match string position
WITHOUT_CLASSIFICATION	horizontal pass
WITHOUT_CLASSIFICATION	substract the oldest pixel from the sum
WITHOUT_CLASSIFICATION	substract the oldest pixel from the sum
WITHOUT_CLASSIFICATION	get the lastest pixel
WITHOUT_CLASSIFICATION	get the lastest pixel
WITHOUT_CLASSIFICATION	vertical pass
WITHOUT_CLASSIFICATION	get the coordinates of the original GradientPaint
WITHOUT_CLASSIFICATION	get the coordinates of the shape that is to be filled
WITHOUT_CLASSIFICATION	reserve variables to store the coordinates of the resulting GradientPaint
WITHOUT_CLASSIFICATION	start point is upper left corner
WITHOUT_CLASSIFICATION	end point is lower right corner --> diagonal gradient
WITHOUT_CLASSIFICATION	start point is lower left right corner --> diagonal gradient
WITHOUT_CLASSIFICATION	delegate argument checking to XYDataItem...
WITHOUT_CLASSIFICATION	end point is either lower left corner --> vertical gradient or end point is upper right corner --> horizontal gradient
WITHOUT_CLASSIFICATION	can't allow duplicate values, so we need to check whether there is an item with the given x-value already
WITHOUT_CLASSIFICATION	it is too slow to look at every data item, so let's just look at the first, middle and last items...
WITHOUT_CLASSIFICATION	CASE 1 : Comparing to another ComparableObjectItem object ---------------------------------------------------------
WITHOUT_CLASSIFICATION	CASE 2 : Comparing to a general object ---------------------------------------------
WITHOUT_CLASSIFICATION	consider these to be ordered after general objects
WITHOUT_CLASSIFICATION	the row may not have an entry for this key, in which case the return value is null
WITHOUT_CLASSIFICATION	check that the column key is defined in the 2D structure
WITHOUT_CLASSIFICATION	1. check whether the row is now empty.
WITHOUT_CLASSIFICATION	1. check whether the row is now empty.
WITHOUT_CLASSIFICATION	2. check whether the column is now empty.
WITHOUT_CLASSIFICATION	2. check whether the column is now empty.
WITHOUT_CLASSIFICATION	int columnIndex = getColumnIndex(columnKey);
WITHOUT_CLASSIFICATION	for the keys, a shallow copy should be fine because keys should be immutable...
WITHOUT_CLASSIFICATION	but the row data requires a deep copy
WITHOUT_CLASSIFICATION	already know 'a' isn't null
WITHOUT_CLASSIFICATION	defer null argument check
WITHOUT_CLASSIFICATION	defer null argument check
WITHOUT_CLASSIFICATION	this will include the case where the underlying dataset is null
WITHOUT_CLASSIFICATION	this includes the case where the underlying dataset is null
WITHOUT_CLASSIFICATION	we didn't find the key
WITHOUT_CLASSIFICATION	set up the category names...
WITHOUT_CLASSIFICATION	check arguments...
WITHOUT_CLASSIFICATION	fetch the value...
WITHOUT_CLASSIFICATION	does the series exist?
WITHOUT_CLASSIFICATION	does the series exist?
WITHOUT_CLASSIFICATION	is the category valid?
WITHOUT_CLASSIFICATION	update the data...
WITHOUT_CLASSIFICATION	update the data...
WITHOUT_CLASSIFICATION	no additional methods required
WITHOUT_CLASSIFICATION	Find min, max for the x and y axes
WITHOUT_CLASSIFICATION	Determine the cell size
WITHOUT_CLASSIFICATION	Generate the grid
WITHOUT_CLASSIFICATION	Map the nongrid data into the new regular grid
WITHOUT_CLASSIFICATION	scale by the inverse of distance^power
WITHOUT_CLASSIFICATION	remove distance of the sum
WITHOUT_CLASSIFICATION	defer null argument check
WITHOUT_CLASSIFICATION	we didn't find the key
WITHOUT_CLASSIFICATION	handle the special case where the dataset has y-intervals that we want to measure
WITHOUT_CLASSIFICATION	the CategoryDataset interface expects a list of categories, but we've stored them in an array...
WITHOUT_CLASSIFICATION	the CategoryDataset interface expects a list of series, but we've stored them in an array...
WITHOUT_CLASSIFICATION	if d is real small set the inverse to a large number to avoid INF
WITHOUT_CLASSIFICATION	store data as Long
WITHOUT_CLASSIFICATION	store Number as Double
WITHOUT_CLASSIFICATION	check if starting new column
WITHOUT_CLASSIFICATION	store index where new column starts
WITHOUT_CLASSIFICATION	set x to most recent value
WITHOUT_CLASSIFICATION	create array xIndex to hold new column indices
WITHOUT_CLASSIFICATION	store y and z axes as Doubles
WITHOUT_CLASSIFICATION	calculate constant values
WITHOUT_CLASSIFICATION	look for any keys that we don't already know about...
WITHOUT_CLASSIFICATION	fetch the series, remove the change listener, then remove the series.
WITHOUT_CLASSIFICATION	remove all the series from the collection and notify listeners.
WITHOUT_CLASSIFICATION	step through all the values and add them to the hash
WITHOUT_CLASSIFICATION	no new methods required
WITHOUT_CLASSIFICATION	can't find any differences
WITHOUT_CLASSIFICATION	now try to instantiate this ;-)
WITHOUT_CLASSIFICATION	Create new dataset with keys above threshold percentThreshold
WITHOUT_CLASSIFICATION	Do not add key to dataset
WITHOUT_CLASSIFICATION	Add key to dataset
WITHOUT_CLASSIFICATION	Add other category if applicable
WITHOUT_CLASSIFICATION	now do the work...
WITHOUT_CLASSIFICATION	if the dataset implements DomainInfo, life is easier
WITHOUT_CLASSIFICATION	handle the standard case (plain CategoryDataset)
WITHOUT_CLASSIFICATION	update the min value
WITHOUT_CLASSIFICATION	handle the standard case (plain CategoryDataset)
WITHOUT_CLASSIFICATION	/ From SeriesDataset /
WITHOUT_CLASSIFICATION	/ From XYDataset /
WITHOUT_CLASSIFICATION	/ From HighLowDataset /
WITHOUT_CLASSIFICATION	/ From IntervalXYDataset /
WITHOUT_CLASSIFICATION	/ New methods from CombinationDataset /
WITHOUT_CLASSIFICATION	/ New Methods /
WITHOUT_CLASSIFICATION	/ Private /
WITHOUT_CLASSIFICATION	handle the special case where the dataset has y-intervals that we want to measure
WITHOUT_CLASSIFICATION	handle three cases by dataset type
WITHOUT_CLASSIFICATION	handle three cases by dataset type
WITHOUT_CLASSIFICATION	handle special case of IntervalXYDataset
WITHOUT_CLASSIFICATION	handle special case of IntervalXYDataset
WITHOUT_CLASSIFICATION	handle special case of IntervalXYDataset
WITHOUT_CLASSIFICATION	handle special case of OHLCDataset
WITHOUT_CLASSIFICATION	handle special case of OHLCDataset
WITHOUT_CLASSIFICATION	standard case - plain XYDataset
WITHOUT_CLASSIFICATION	standard case - plain XYDataset
WITHOUT_CLASSIFICATION	handle special case of BoxAndWhiskerXYDataset
WITHOUT_CLASSIFICATION	if the dataset implements DomainInfo, life is easy
WITHOUT_CLASSIFICATION	if the dataset implements DomainInfo, life is easy
WITHOUT_CLASSIFICATION	hasn't implemented DomainInfo, so iterate...
WITHOUT_CLASSIFICATION	hasn't implemented RangeInfo, so we'll have to iterate...
WITHOUT_CLASSIFICATION	hasn't implemented RangeInfo, so we'll have to iterate...
WITHOUT_CLASSIFICATION	work out the minimum value...
WITHOUT_CLASSIFICATION	work out the minimum value...
WITHOUT_CLASSIFICATION	work out the minimum value...
WITHOUT_CLASSIFICATION	'+', remember value is negative
WITHOUT_CLASSIFICATION	create an array holding the group indices for each series...
WITHOUT_CLASSIFICATION	minimum and maximum for each group...
WITHOUT_CLASSIFICATION	no new methods
WITHOUT_CLASSIFICATION	no new methods
WITHOUT_CLASSIFICATION	we'll set this to false if there is at least one non-null data item...
WITHOUT_CLASSIFICATION	no additional methods required
WITHOUT_CLASSIFICATION	no new methods required
WITHOUT_CLASSIFICATION	no new methods required
WITHOUT_CLASSIFICATION	/ From XYDataset /
WITHOUT_CLASSIFICATION	handle the special case where the dataset has y-intervals that we want to measure
WITHOUT_CLASSIFICATION	'+', remember value is negative
WITHOUT_CLASSIFICATION	'+', remember value is negative
WITHOUT_CLASSIFICATION	we don't know anything about the ordering of the x-values, so we iterate until we find the first crossing of x (if any) we know there are at least 2 items in the series at this point
WITHOUT_CLASSIFICATION	delegate null check on dataset
WITHOUT_CLASSIFICATION	exact match on first item
WITHOUT_CLASSIFICATION	no crossing of x
WITHOUT_CLASSIFICATION	spanning match
WITHOUT_CLASSIFICATION	exact match
WITHOUT_CLASSIFICATION	maps our series into our parent's
WITHOUT_CLASSIFICATION	prior to 1.0.14, we just fired a PropertyChange - so we need to keep doing this
WITHOUT_CLASSIFICATION	no new methods added.
WITHOUT_CLASSIFICATION	first line contains column keys
WITHOUT_CLASSIFICATION	remaining lines contain a row key and data values
WITHOUT_CLASSIFICATION	first field contains the row key
WITHOUT_CLASSIFICATION	update the max value
WITHOUT_CLASSIFICATION	remaining fields contain values
WITHOUT_CLASSIFICATION	Remove any previous old data
WITHOUT_CLASSIFICATION	first column contains the row key...
WITHOUT_CLASSIFICATION	suppress (value defaults to null)
WITHOUT_CLASSIFICATION	not a value, can't use it (defaults to null)
WITHOUT_CLASSIFICATION	/ First column is X data
WITHOUT_CLASSIFICATION	/ Get the column names and cache them.
WITHOUT_CLASSIFICATION	Might need to add, to free memory from any previous result sets
WITHOUT_CLASSIFICATION	Are we working with a time series.
WITHOUT_CLASSIFICATION	defer null argument check
WITHOUT_CLASSIFICATION	defer null argument check
WITHOUT_CLASSIFICATION	check arguments...
WITHOUT_CLASSIFICATION	/ From SeriesDataset /
WITHOUT_CLASSIFICATION	/ From IntervalXYDataset /
WITHOUT_CLASSIFICATION	/ New methods from CombinationDataset /
WITHOUT_CLASSIFICATION	/ New methods from CombinationDataset /
WITHOUT_CLASSIFICATION	if this series belongs to a dataset, the dataset might veto the change if it results in two series within the dataset having the same key
WITHOUT_CLASSIFICATION	see comments about priority of 10 in validateObject()
WITHOUT_CLASSIFICATION	first field is ignored, since column 0 is for row keys
WITHOUT_CLASSIFICATION	Get all rows. rows = new ArrayList();
WITHOUT_CLASSIFICATION	/ Determine max and min values.
WITHOUT_CLASSIFICATION	Tell the listeners a new table has arrived.
WITHOUT_CLASSIFICATION	fill the bins
WITHOUT_CLASSIFICATION	generic map for each series
WITHOUT_CLASSIFICATION	pretty sure this shouldn't ever happen
WITHOUT_CLASSIFICATION	lower bounds are the same
WITHOUT_CLASSIFICATION	overridden to make public
WITHOUT_CLASSIFICATION	update the cached range values...
WITHOUT_CLASSIFICATION	check that the new bin doesn't overlap with any existing bin
WITHOUT_CLASSIFICATION	pass values to other constructor
WITHOUT_CLASSIFICATION	update cached min and max values
WITHOUT_CLASSIFICATION	defer null argument checks
WITHOUT_CLASSIFICATION	check for zero pivot element
WITHOUT_CLASSIFICATION	treat nulls the same as NaNs
WITHOUT_CLASSIFICATION	calculate the sum and count
WITHOUT_CLASSIFICATION	intercept
WITHOUT_CLASSIFICATION	sum of x, x^2, x y, y
WITHOUT_CLASSIFICATION	holds the moving average sum
WITHOUT_CLASSIFICATION	defer null argument checks
WITHOUT_CLASSIFICATION	make sure bins[bins.length]'s upper boundary ends at maximum to avoid the rounding issue. the bins[0] lower boundary is guaranteed start from min
WITHOUT_CLASSIFICATION	iterate over all data items and update mins and maxes
WITHOUT_CLASSIFICATION	if this cell held a maximum and/or minimum value, we'll need to update the cached bounds...
WITHOUT_CLASSIFICATION	stat function for linear slope y = a + bx a = ybar - b xbar sum(x y) - (sum (x) sum(y)) / n b = ------------------------------------ sum (x^2) - (sum(x)^2 / n
WITHOUT_CLASSIFICATION	update cached range values
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	update the min value
WITHOUT_CLASSIFICATION	iterate over all data items and update mins and maxes
WITHOUT_CLASSIFICATION	CASE 2 : Comparing to another TimePeriod object -----------------------------------------------
WITHOUT_CLASSIFICATION	CASE 3 : Comparing to a non-TimePeriod object ---------------------------------------------
WITHOUT_CLASSIFICATION	consider time periods to be ordered after general objects
WITHOUT_CLASSIFICATION	consider time periods to be ordered after general objects
WITHOUT_CLASSIFICATION	we are at the last minute in the hour...
WITHOUT_CLASSIFICATION	CASE 1 : Comparing to another Minute object -------------------------------------------
WITHOUT_CLASSIFICATION	more difficult case - evaluate later...
WITHOUT_CLASSIFICATION	won't get here...
WITHOUT_CLASSIFICATION	remove old items and notify if necessary
WITHOUT_CLASSIFICATION	make the change (if it's not a duplicate time period)...
WITHOUT_CLASSIFICATION	check if this addition will exceed the maximum item count...
WITHOUT_CLASSIFICATION	check if this addition will exceed the maximum item count...
WITHOUT_CLASSIFICATION	find the serial index of the period specified by 'latest'
WITHOUT_CLASSIFICATION	it is too slow to look at every data item, so let's just look at the first, middle and last items...
WITHOUT_CLASSIFICATION	CASE 2 : Comparing to another TimePeriod object -----------------------------------------------
WITHOUT_CLASSIFICATION	CASE 2 : Comparing to another TimePeriod object -----------------------------------------------
WITHOUT_CLASSIFICATION	CASE 3 : Comparing to a non-TimePeriod object ---------------------------------------------
WITHOUT_CLASSIFICATION	consider time periods to be ordered after general objects
WITHOUT_CLASSIFICATION	consider time periods to be ordered after general objects
WITHOUT_CLASSIFICATION	more difficult case - evaluate later...
WITHOUT_CLASSIFICATION	more difficult case - evaluate later...
WITHOUT_CLASSIFICATION	since the items are ordered, we could be more clever here and avoid iterating over all the data
WITHOUT_CLASSIFICATION	remove old items if necessary, but don't notify anyone, because that happens next anyway...
WITHOUT_CLASSIFICATION	figure out if we need to iterate through all the y-values to find the revised minY / maxY
WITHOUT_CLASSIFICATION	check if there are any values earlier than specified by the history count...
WITHOUT_CLASSIFICATION	check if there are any values earlier than specified by the history count...
WITHOUT_CLASSIFICATION	start is after last data item
WITHOUT_CLASSIFICATION	update the time series appropriately
WITHOUT_CLASSIFICATION	we are at the first hour in the day...
WITHOUT_CLASSIFICATION	we are at the last hour in the day...
WITHOUT_CLASSIFICATION	CASE 1 : Comparing to another Hour object -----------------------------------------
WITHOUT_CLASSIFICATION	if the hour is 0 - 23 then create an hour
WITHOUT_CLASSIFICATION	parse the string...
WITHOUT_CLASSIFICATION	create the year...
WITHOUT_CLASSIFICATION	get the current data item...
WITHOUT_CLASSIFICATION	work out the average for the earlier values...
WITHOUT_CLASSIFICATION	work out the average for the earlier values...
WITHOUT_CLASSIFICATION	remove the point i-periodCount out of the rolling sum.
WITHOUT_CLASSIFICATION	an arbitrary safe default value
WITHOUT_CLASSIFICATION	default value;
WITHOUT_CLASSIFICATION	as a class variable, initializes == 0
WITHOUT_CLASSIFICATION	cached values used for interface DomainInfo:
WITHOUT_CLASSIFICATION	rangeGridlinePaint;
WITHOUT_CLASSIFICATION	CASE 2 : Comparing to another TimePeriod object -----------------------------------------------
WITHOUT_CLASSIFICATION	CASE 3 : Comparing to a non-TimePeriod object ---------------------------------------------
WITHOUT_CLASSIFICATION	CASE 3 : Comparing to a non-TimePeriod object ---------------------------------------------
WITHOUT_CLASSIFICATION	autoinit's to null.
WITHOUT_CLASSIFICATION	CASE 1 : Comparing to another Year object -----------------------------------------
WITHOUT_CLASSIFICATION	if the initial averaging period is to be excluded, then calculate the lowest x-value to have an average calculated...
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	if the initial averaging period is to be excluded, then calculate the index of the first data item to have an average calculated...
WITHOUT_CLASSIFICATION	Cached values used for interface RangeInfo: (note minValue pinned at 0) A single set of extrema covers the entire SeriesCollection
WITHOUT_CLASSIFICATION	/ .. etc....
WITHOUT_CLASSIFICATION	/ Expand the following for all defined TimePeriods:
WITHOUT_CLASSIFICATION	initialize the members of "seriesNames" array so they won't be null:
WITHOUT_CLASSIFICATION	{ deep copy from values[], caller can safely discard that array
WITHOUT_CLASSIFICATION	Avoid IndexOutOfBoundsException:
WITHOUT_CLASSIFICATION	But if that series array already exists, just overwrite its contents
WITHOUT_CLASSIFICATION	But if that series array already exists, just overwrite its contents synchronized(this) {
WITHOUT_CLASSIFICATION	all arrays equal length, so ignore argument:
WITHOUT_CLASSIFICATION	Methods for managing the FIFO's:
WITHOUT_CLASSIFICATION	no translation needed
WITHOUT_CLASSIFICATION	else [implicit here]
WITHOUT_CLASSIFICATION	newestAt takes value previously held by oldestAT
WITHOUT_CLASSIFICATION	if the oldest data contained a maximum Y-value, invalidate the stored Y-max and Y-range data:
WITHOUT_CLASSIFICATION	deregister the collection as a change listener to each series in the collection
WITHOUT_CLASSIFICATION	wipe the next (about to be used) set of data slots
WITHOUT_CLASSIFICATION	Update the array of TimePeriods:
WITHOUT_CLASSIFICATION	Now advance "oldestAt", wrapping at end of the array
WITHOUT_CLASSIFICATION	Update the domain limits: (time is kept in msec)
WITHOUT_CLASSIFICATION	If data can be < 0, the next 2 methods should be modified
WITHOUT_CLASSIFICATION	index to select the "series"
WITHOUT_CLASSIFICATION	"Extras" found useful when analyzing/verifying class behavior: public Number getUntranslatedXValue(int series, int item) { return super.getXValue(series, item); } public float getUntranslatedY(int series, int item) { return super.getY(series, item); }
WITHOUT_CLASSIFICATION	a Long kept updated by advanceTime()
WITHOUT_CLASSIFICATION	a Long kept updated by advanceTime()
WITHOUT_CLASSIFICATION	try a dataset with some content...
WITHOUT_CLASSIFICATION	try a null argument
WITHOUT_CLASSIFICATION	try a dataset with some content...
WITHOUT_CLASSIFICATION	try a dataset with some content...
WITHOUT_CLASSIFICATION	remove all the series from the collection and notify listeners.
WITHOUT_CLASSIFICATION	CASE 2 : Comparing to another TimePeriod object -----------------------------------------------
WITHOUT_CLASSIFICATION	CASE 3 : Comparing to a non-TimePeriod object ---------------------------------------------
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	CASE 3 : Comparing to a non-TimePeriod object ---------------------------------------------
WITHOUT_CLASSIFICATION	consider time periods to be ordered after general objects
WITHOUT_CLASSIFICATION	consider time periods to be ordered after general objects
WITHOUT_CLASSIFICATION	more difficult case - evaluate later...
WITHOUT_CLASSIFICATION	more difficult case - evaluate later...
WITHOUT_CLASSIFICATION	parse the string...
WITHOUT_CLASSIFICATION	check an empty dataset
WITHOUT_CLASSIFICATION	appendData() writes new data at the index position given by newestAt/ When adding new data dynamically, use advanceTime(), followed by this:
WITHOUT_CLASSIFICATION	check whether the "valueHistory" array member exists; if not, create them:
WITHOUT_CLASSIFICATION	getXxx() ftns can ignore the "series" argument: Don't synchronize this!! Instead, synchronize the loop that calls it.
WITHOUT_CLASSIFICATION	Don't synchronize this!! Instead, synchronize the loop that calls it.
WITHOUT_CLASSIFICATION	The next 3 functions implement the RangeInfo interface. Using saved limits (updated by each updateTime() call) significantly improves performance. WARNING: this code makes the simplifying assumption that data is never negative. Expand as needed for the general case.
WITHOUT_CLASSIFICATION	CASE 1 : Comparing to another Quarter object --------------------------------------------
WITHOUT_CLASSIFICATION	find the Q and the integer following it (remove both from the string)...
WITHOUT_CLASSIFICATION	replace any / , or - with a space
WITHOUT_CLASSIFICATION	do nothing, so null is returned
WITHOUT_CLASSIFICATION	CASE 1 : Comparing to another Day object ----------------------------------------
WITHOUT_CLASSIFICATION	check arguments...delegated fetch the series name...
WITHOUT_CLASSIFICATION	deregister the collection as a change listener to each series in the collection
WITHOUT_CLASSIFICATION	if it is not the series name, then we have no interest
WITHOUT_CLASSIFICATION	to be defensive, let's check that the source series does in fact belong to this collection
WITHOUT_CLASSIFICATION	check if the new series name already exists for another series
WITHOUT_CLASSIFICATION	we need to work out if the previous year has 52 or 53 weeks...
WITHOUT_CLASSIFICATION	check an empty dataset
WITHOUT_CLASSIFICATION	check an empty dataset
WITHOUT_CLASSIFICATION	CASE 2 : Comparing to a general object ---------------------------------------------
WITHOUT_CLASSIFICATION	remove all the series from the collection and notify listeners.
WITHOUT_CLASSIFICATION	CASE 1 : Comparing to another Second object -------------------------------------------
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	CASE 2 : Comparing to another TimePeriod object -----------------------------------------------
WITHOUT_CLASSIFICATION	CASE 3 : Comparing to a non-TimePeriod object ---------------------------------------------
WITHOUT_CLASSIFICATION	CASE 3 : Comparing to a non-TimePeriod object ---------------------------------------------
WITHOUT_CLASSIFICATION	CASE 3 : Comparing to a non-TimePeriod object ---------------------------------------------
WITHOUT_CLASSIFICATION	consider time periods to be ordered after general objects
WITHOUT_CLASSIFICATION	consider time periods to be ordered after general objects
WITHOUT_CLASSIFICATION	consider time periods to be ordered after general objects
WITHOUT_CLASSIFICATION	consider time periods to be ordered after general objects
WITHOUT_CLASSIFICATION	consider time periods to be ordered after general objects
WITHOUT_CLASSIFICATION	more difficult case - evaluate later...
WITHOUT_CLASSIFICATION	more difficult case - evaluate later...
WITHOUT_CLASSIFICATION	more difficult case - evaluate later...
WITHOUT_CLASSIFICATION	more difficult case - evaluate later...
WITHOUT_CLASSIFICATION	won't get here...
WITHOUT_CLASSIFICATION	check an empty dataset
WITHOUT_CLASSIFICATION	sometimes the last few days of the year are considered to fall in the first week of the following year. Refer to the Javadocs for GregorianCalendar.
WITHOUT_CLASSIFICATION	CASE 1 : Comparing to another Week object --------------------------------------------
WITHOUT_CLASSIFICATION	trim whitespace from either end of the string
WITHOUT_CLASSIFICATION	trim whitespace from either end of the string
WITHOUT_CLASSIFICATION	suppress
WITHOUT_CLASSIFICATION	suppress
WITHOUT_CLASSIFICATION	suppress
WITHOUT_CLASSIFICATION	CASE 1 : Comparing to another Month object --------------------------------------------
WITHOUT_CLASSIFICATION	if there is no separator, we assume the first four characters are YYYY
WITHOUT_CLASSIFICATION	now it is trickier to determine if the month or year is first
WITHOUT_CLASSIFICATION	--- DEPRECATED METHODS -------------------------------------------------
WITHOUT_CLASSIFICATION	CASE 1 : Comparing to another TimeSeriesDataItem object -------------------------------------------------------
WITHOUT_CLASSIFICATION	private Comparable key;
WITHOUT_CLASSIFICATION	this.key = null;
WITHOUT_CLASSIFICATION	no attributes to read
WITHOUT_CLASSIFICATION	axisOffset;
WITHOUT_CLASSIFICATION	check arguments...
WITHOUT_CLASSIFICATION	fetch the series, remove the change listener, then remove the series.
WITHOUT_CLASSIFICATION	remove all the series from the collection and notify listeners.
WITHOUT_CLASSIFICATION	if it is not the series name, then we have no interest
WITHOUT_CLASSIFICATION	check if the new series name already exists for another series
WITHOUT_CLASSIFICATION	Remove all the series from the collection and notify listeners.
WITHOUT_CLASSIFICATION	XYDataset only provides methods for reading a dataset...
WITHOUT_CLASSIFICATION	check arguments...delegated
WITHOUT_CLASSIFICATION	check arguments...delegated
WITHOUT_CLASSIFICATION	Remove all the series from the collection and notify listeners.
WITHOUT_CLASSIFICATION	Unregister the collection as a change listener to each series in the collection.
WITHOUT_CLASSIFICATION	check an empty dataset
WITHOUT_CLASSIFICATION	add a new series
WITHOUT_CLASSIFICATION	need to configure the intervalDelegate to match the original
WITHOUT_CLASSIFICATION	check an empty dataset
WITHOUT_CLASSIFICATION	we can't be sure of the order
WITHOUT_CLASSIFICATION	replace an existing series
WITHOUT_CLASSIFICATION	check an empty dataset
WITHOUT_CLASSIFICATION	either autoWidth is off or autoIntervalWidth was not set.
WITHOUT_CLASSIFICATION	check an empty dataset
WITHOUT_CLASSIFICATION	check an empty dataset
WITHOUT_CLASSIFICATION	check an empty dataset
WITHOUT_CLASSIFICATION	argument checking delegated...
WITHOUT_CLASSIFICATION	argument checking delegated...
WITHOUT_CLASSIFICATION	delegate argument checking to XYDataItem...
WITHOUT_CLASSIFICATION	need to make sure we are adding after any duplicates
WITHOUT_CLASSIFICATION	can't allow duplicate values, so we need to check whether there is an item with the given x-value already
WITHOUT_CLASSIFICATION	CASE 2 : Comparing to a general object ---------------------------------------------
WITHOUT_CLASSIFICATION	check arguments...
WITHOUT_CLASSIFICATION	consider time periods to be ordered after general objects
WITHOUT_CLASSIFICATION	won't get here...
WITHOUT_CLASSIFICATION	check if this addition will exceed the maximum item count...
WITHOUT_CLASSIFICATION	to be defensive, let's check that the source series does in fact belong to this collection
WITHOUT_CLASSIFICATION	Unregister the collection as a change listener to each series in the collection.
WITHOUT_CLASSIFICATION	Unregister the collection as a change listener to each series in the collection.
WITHOUT_CLASSIFICATION	Remove all the series from the collection and notify listeners.
WITHOUT_CLASSIFICATION	need to configure the intervalDelegate to match the original
WITHOUT_CLASSIFICATION	add a new series
WITHOUT_CLASSIFICATION	add a new series
WITHOUT_CLASSIFICATION	replace an existing series
WITHOUT_CLASSIFICATION	replace an existing series
WITHOUT_CLASSIFICATION	null is ignored
WITHOUT_CLASSIFICATION	everything is fine: autoWidth is on, and an autoIntervalWidth was set.
WITHOUT_CLASSIFICATION	first get the range without the interval, then expand it for the interval width
WITHOUT_CLASSIFICATION	all series have the same number of items in this dataset
WITHOUT_CLASSIFICATION	this.x is not allowed to be null...
WITHOUT_CLASSIFICATION	CASE 1 : Comparing to another TimeSeriesDataPair object -------------------------------------------------------
WITHOUT_CLASSIFICATION	In version 0.9.12, in response to several developer requests, I changed the 'data' attribute from 'private' to 'protected', so that others can make subclasses that work directly with the underlying data structure.
WITHOUT_CLASSIFICATION	figure out if we need to iterate through all the y-values
WITHOUT_CLASSIFICATION	figure out if we need to iterate through all the y-values
WITHOUT_CLASSIFICATION	if we get to here, we know that duplicate X values are not permitted
WITHOUT_CLASSIFICATION	we assum super is always initialized to all-zero matrix, so the total sum should be 0 upon initialization. However, we set it to Double.MIN_VALUE to get the same effect and yet avoid division by 0 upon initialization.
WITHOUT_CLASSIFICATION	add the series...
WITHOUT_CLASSIFICATION	try a class that isn't a listener
WITHOUT_CLASSIFICATION	set up popup menu...
WITHOUT_CLASSIFICATION	stop listening for changes to the existing chart
WITHOUT_CLASSIFICATION	add the new chart
WITHOUT_CLASSIFICATION	work out if scaling is required...
WITHOUT_CLASSIFICATION	are we using the chart buffer?
WITHOUT_CLASSIFICATION	does nothing - override if necessary
WITHOUT_CLASSIFICATION	selected rectangle shouldn't extend outside the data area...
WITHOUT_CLASSIFICATION	we need to guard against this.zoomPoint being null
WITHOUT_CLASSIFICATION	we need to guard against this.zoomPoint being null
WITHOUT_CLASSIFICATION	force a redraw
WITHOUT_CLASSIFICATION	it is too slow to look at every data item, so let's just look at the first, middle and last items...
WITHOUT_CLASSIFICATION	fetch the series, remove the change listener, then remove the series.
WITHOUT_CLASSIFICATION	Unregister the collection as a change listener to each series in the collection.
WITHOUT_CLASSIFICATION	Unregister the collection as a change listener to each series in the collection.
WITHOUT_CLASSIFICATION	check that minItem limit is observed
WITHOUT_CLASSIFICATION	assert itemIndex >= 0 && itemIndex < getItemCount();
WITHOUT_CLASSIFICATION	assert itemIndex >= 0 && itemIndex < getItemCount();
WITHOUT_CLASSIFICATION	TODO private boolean fillZoomRectangle = true;
WITHOUT_CLASSIFICATION	create the canvas and add the required listeners
WITHOUT_CLASSIFICATION	ChartEditorManager.getChartEditor(canvas.getDisplay(), this.chart);
WITHOUT_CLASSIFICATION	in the next zoomPoint.x and y replace by e.x and y for now. this helps to handle the mouse events and besides, those values are unused AFAIK.
WITHOUT_CLASSIFICATION	do nothing, override if necessary
WITHOUT_CLASSIFICATION	new entity code
WITHOUT_CLASSIFICATION	new entity code
WITHOUT_CLASSIFICATION	pass mouse down event if some ChartMouseListener are listening
WITHOUT_CLASSIFICATION	if the box has been drawn backwards, restore the auto bounds
WITHOUT_CLASSIFICATION	handle axis trace
WITHOUT_CLASSIFICATION	handle tool tips in a simple way
WITHOUT_CLASSIFICATION	handle zoom box
WITHOUT_CLASSIFICATION	skip if chart is null
WITHOUT_CLASSIFICATION	axisLabelPaint;
WITHOUT_CLASSIFICATION	get the origin of the zoom selection in the Java2D space used for drawing the chart (that is, before any scaling to fit the panel)
WITHOUT_CLASSIFICATION	go through each zoom menu item and decide whether or not to enable it...
WITHOUT_CLASSIFICATION	create the chart...
WITHOUT_CLASSIFICATION	title x-axis label y-axis label data create legend? generate tooltips? generate URLs?
WITHOUT_CLASSIFICATION	check that minItem limit is observed
WITHOUT_CLASSIFICATION	SwtGraphics2D sg2 = new SwtGraphics2D(e.gc);
WITHOUT_CLASSIFICATION	do we need to fill the buffer?
WITHOUT_CLASSIFICATION	Performs the actual drawing here ...
WITHOUT_CLASSIFICATION	anti-aliasing
WITHOUT_CLASSIFICATION	zap the buffer onto the canvas...
WITHOUT_CLASSIFICATION	or redrawing the chart every time...
WITHOUT_CLASSIFICATION	de-register the composite as a listener for the chart.
WITHOUT_CLASSIFICATION	AXIS 2
WITHOUT_CLASSIFICATION	AXIS 3
WITHOUT_CLASSIFICATION	axis3.setPositiveArrowVisible(true);
WITHOUT_CLASSIFICATION	AXIS 4
WITHOUT_CLASSIFICATION	column keys...
WITHOUT_CLASSIFICATION	create the dataset...
WITHOUT_CLASSIFICATION	NOW DO SOME OPTIONAL CUSTOMISATION OF THE CHART...
WITHOUT_CLASSIFICATION	get a reference to the plot for further customisation...
WITHOUT_CLASSIFICATION	set the range axis to display integers only...
WITHOUT_CLASSIFICATION	disable bar outlines...
WITHOUT_CLASSIFICATION	OPTIONAL CUSTOMISATION COMPLETED.
WITHOUT_CLASSIFICATION	chart title data include legend
WITHOUT_CLASSIFICATION	frame.setDisplayToolTips(false);
WITHOUT_CLASSIFICATION	row 1: antialiasing
WITHOUT_CLASSIFICATION	row 2: background paint for the chart
WITHOUT_CLASSIFICATION	row 1
WITHOUT_CLASSIFICATION	empty cell row 2
WITHOUT_CLASSIFICATION	Create the color-change dialog
WITHOUT_CLASSIFICATION	Dispose of any fonts we have created
WITHOUT_CLASSIFICATION	build second tab
WITHOUT_CLASSIFICATION	don't need to do anything
WITHOUT_CLASSIFICATION	set the plot properties...
WITHOUT_CLASSIFICATION	row 1
WITHOUT_CLASSIFICATION	Create the color-change dialog
WITHOUT_CLASSIFICATION	Create the color-change dialog
WITHOUT_CLASSIFICATION	Dispose of any fonts we have created
WITHOUT_CLASSIFICATION	check a regular value
WITHOUT_CLASSIFICATION	Create the new font and set it into the title label
WITHOUT_CLASSIFICATION	Create the new font and set it into the title label
WITHOUT_CLASSIFICATION	label.setFont(font);
WITHOUT_CLASSIFICATION	row 3
WITHOUT_CLASSIFICATION	row 3
WITHOUT_CLASSIFICATION	Use a colored text field to show the color
WITHOUT_CLASSIFICATION	tickLabelFontField.setFont(SwtUtils.toSwtFontData(getDisplay(), axis.getTickLabelFont()));
WITHOUT_CLASSIFICATION	Create the font-change dialog
WITHOUT_CLASSIFICATION	Create the font-change dialog
WITHOUT_CLASSIFICATION	tickLabelFontField.setFont(font);
WITHOUT_CLASSIFICATION	return the appropriate axis editor
WITHOUT_CLASSIFICATION	this.minimumRangeValue.addModifyListener(this); this.minimumRangeValue.addVerifyListener(this);
WITHOUT_CLASSIFICATION	this.maximumRangeValue.addModifyListener(this); this.maximumRangeValue.addVerifyListener(this);
WITHOUT_CLASSIFICATION	verify min value
WITHOUT_CLASSIFICATION	verify max value
WITHOUT_CLASSIFICATION	deal with domain axis
WITHOUT_CLASSIFICATION	deal with range axis
WITHOUT_CLASSIFICATION	deal with plot appearance
WITHOUT_CLASSIFICATION	set the axis properties
WITHOUT_CLASSIFICATION	row 1: stroke
WITHOUT_CLASSIFICATION	row 3: background paint
WITHOUT_CLASSIFICATION	row 4: orientation
WITHOUT_CLASSIFICATION	row 2
WITHOUT_CLASSIFICATION	titleField.setFont(font);
WITHOUT_CLASSIFICATION	row 4
WITHOUT_CLASSIFICATION	build first tab
WITHOUT_CLASSIFICATION	we can't do anything
WITHOUT_CLASSIFICATION	backgroundImage
WITHOUT_CLASSIFICATION	row keys...
WITHOUT_CLASSIFICATION	column keys...
WITHOUT_CLASSIFICATION	since this is only used by clearRect(), we don't update the GC yet
WITHOUT_CLASSIFICATION	build the third tab
WITHOUT_CLASSIFICATION	ok and cancel buttons
WITHOUT_CLASSIFICATION	to be consistent with other Graphics2D implementations
WITHOUT_CLASSIFICATION	padding
WITHOUT_CLASSIFICATION	apply dash style if any
WITHOUT_CLASSIFICATION	handle transparency and compositing.
WITHOUT_CLASSIFICATION	we can't use the following valueOf() method, because it won't compile with JDK1.4 this.colorsPool.get(Integer.valueOf(awtColor.getRGB()));
WITHOUT_CLASSIFICATION	set the line style to solid by default
WITHOUT_CLASSIFICATION	retrieve the swt font description in an os indept way
WITHOUT_CLASSIFICATION	Note that for consistency with the AWT implementation, it is necessary to switch temporarily the foreground and background colours
WITHOUT_CLASSIFICATION	for now we simply want to extract the chars from the iterator and call an unstyled text renderer
WITHOUT_CLASSIFICATION	create a new awt font with the appropiate data
WITHOUT_CLASSIFICATION	we dispose resources we own but user must dispose gc
WITHOUT_CLASSIFICATION	see comment above this.colorsPool.put(Integer.valueOf(awtColor.getRGB()), swtColor);
WITHOUT_CLASSIFICATION	SWT and AWT share the same style constants.
WITHOUT_CLASSIFICATION	convert the font size (in pt for awt) to height in pixels for swt
WITHOUT_CLASSIFICATION	this.myColor = new Color(getDisplay(), color.getRGB());
WITHOUT_CLASSIFICATION	renderingHints
WITHOUT_CLASSIFICATION	borderStroke
WITHOUT_CLASSIFICATION	borderVisible
WITHOUT_CLASSIFICATION	borderPaint
WITHOUT_CLASSIFICATION	title
WITHOUT_CLASSIFICATION	subtitles
WITHOUT_CLASSIFICATION	plot
WITHOUT_CLASSIFICATION	backgroundPaint
WITHOUT_CLASSIFICATION	backgroundImageAlignment
WITHOUT_CLASSIFICATION	backgroundImageAlpha
WITHOUT_CLASSIFICATION	no event is generated if the dataset is already empty
WITHOUT_CLASSIFICATION	create the chart...
WITHOUT_CLASSIFICATION	create the chart...
WITHOUT_CLASSIFICATION	try a Double.POSITIVE_INFINITY
WITHOUT_CLASSIFICATION	adding something to the returned list should NOT change the chart
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	create a dataset...
WITHOUT_CLASSIFICATION	create a dataset...
WITHOUT_CLASSIFICATION	create a dataset...
WITHOUT_CLASSIFICATION	create a dataset...
WITHOUT_CLASSIFICATION	create a dataset...
WITHOUT_CLASSIFICATION	create a dataset...
WITHOUT_CLASSIFICATION	fillPaintTransformer
WITHOUT_CLASSIFICATION	outlinePaint
WITHOUT_CLASSIFICATION	labelFont
WITHOUT_CLASSIFICATION	chart title
WITHOUT_CLASSIFICATION	labelPaint
WITHOUT_CLASSIFICATION	linePaint
WITHOUT_CLASSIFICATION	fillPaint
WITHOUT_CLASSIFICATION	chart title
WITHOUT_CLASSIFICATION	the clone references the same dataset as the original
WITHOUT_CLASSIFICATION	chart title
WITHOUT_CLASSIFICATION	chart title
WITHOUT_CLASSIFICATION	chart title
WITHOUT_CLASSIFICATION	data include legend tooltips urls
WITHOUT_CLASSIFICATION	include legend
WITHOUT_CLASSIFICATION	a null key should throw an IllegalArgumentException
WITHOUT_CLASSIFICATION	a null key should throw an IllegalArgumentException
WITHOUT_CLASSIFICATION	include legend
WITHOUT_CLASSIFICATION	include legend
WITHOUT_CLASSIFICATION	include legend
WITHOUT_CLASSIFICATION	include legend
WITHOUT_CLASSIFICATION	include legend
WITHOUT_CLASSIFICATION	data
WITHOUT_CLASSIFICATION	data
WITHOUT_CLASSIFICATION	data
WITHOUT_CLASSIFICATION	data
WITHOUT_CLASSIFICATION	BufferedImage img =
WITHOUT_CLASSIFICATION	try a listener type that isn't registered
WITHOUT_CLASSIFICATION	name
WITHOUT_CLASSIFICATION	extraLargeFont
WITHOUT_CLASSIFICATION	largeFont
WITHOUT_CLASSIFICATION	regularFont;
WITHOUT_CLASSIFICATION	titlePaint;
WITHOUT_CLASSIFICATION	subtitlePaint;
WITHOUT_CLASSIFICATION	chartBackgroundPaint;
WITHOUT_CLASSIFICATION	legendBackgroundPaint;
WITHOUT_CLASSIFICATION	legendItemPaint;
WITHOUT_CLASSIFICATION	drawingSupplier;
WITHOUT_CLASSIFICATION	value 1
WITHOUT_CLASSIFICATION	create a dataset...
WITHOUT_CLASSIFICATION	test independence
WITHOUT_CLASSIFICATION	tickLabelPaint;
WITHOUT_CLASSIFICATION	itemLabelPaint;
WITHOUT_CLASSIFICATION	shadowVisible;
WITHOUT_CLASSIFICATION	shadowPaint;
WITHOUT_CLASSIFICATION	barPainter;
WITHOUT_CLASSIFICATION	xyBarPainter;
WITHOUT_CLASSIFICATION	thermometerPaint;
WITHOUT_CLASSIFICATION	wallPaint;
WITHOUT_CLASSIFICATION	errorIndicatorPaint;
WITHOUT_CLASSIFICATION	gridBandAlternatePaint
WITHOUT_CLASSIFICATION	private double angle;
WITHOUT_CLASSIFICATION	private double tipRadius;
WITHOUT_CLASSIFICATION	private double tipRadius;
WITHOUT_CLASSIFICATION	private double baseRadius;
WITHOUT_CLASSIFICATION	private double arrowLength;
WITHOUT_CLASSIFICATION	private double arrowLength;
WITHOUT_CLASSIFICATION	private double arrowWidth;
WITHOUT_CLASSIFICATION	private Stroke arrowStroke;
WITHOUT_CLASSIFICATION	private Stroke arrowStroke;
WITHOUT_CLASSIFICATION	private Paint arrowPaint;
WITHOUT_CLASSIFICATION	private Paint arrowPaint;
WITHOUT_CLASSIFICATION	private double labelOffset;
WITHOUT_CLASSIFICATION	text
WITHOUT_CLASSIFICATION	text
WITHOUT_CLASSIFICATION	x
WITHOUT_CLASSIFICATION	y
WITHOUT_CLASSIFICATION	font
WITHOUT_CLASSIFICATION	paint
WITHOUT_CLASSIFICATION	paint
WITHOUT_CLASSIFICATION	rotation anchor
WITHOUT_CLASSIFICATION	rotation angle
WITHOUT_CLASSIFICATION	text anchor
WITHOUT_CLASSIFICATION	textAnchor
WITHOUT_CLASSIFICATION	rotationAnchor
WITHOUT_CLASSIFICATION	rotationAngle
WITHOUT_CLASSIFICATION	category 1
WITHOUT_CLASSIFICATION	category 2
WITHOUT_CLASSIFICATION	value 2
WITHOUT_CLASSIFICATION	stroke
WITHOUT_CLASSIFICATION	BufferedImage image =
WITHOUT_CLASSIFICATION	outlinePaint
WITHOUT_CLASSIFICATION	stroke
WITHOUT_CLASSIFICATION	BufferedImage image =
WITHOUT_CLASSIFICATION	category
WITHOUT_CLASSIFICATION	categoryAnchor
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	x0
WITHOUT_CLASSIFICATION	tickUnit
WITHOUT_CLASSIFICATION	tickMarkPosition
WITHOUT_CLASSIFICATION	timeline
WITHOUT_CLASSIFICATION	range
WITHOUT_CLASSIFICATION	check that setting the min date to something on or after the current min date works...
WITHOUT_CLASSIFICATION	five dates to check...
WITHOUT_CLASSIFICATION	START: check d0 and d1
WITHOUT_CLASSIFICATION	START: check d0 and d1
WITHOUT_CLASSIFICATION	START: check d0 and d1
WITHOUT_CLASSIFICATION	START: check d0 and d1
WITHOUT_CLASSIFICATION	START: check d0 and d1
WITHOUT_CLASSIFICATION	START: check d0 and d1
WITHOUT_CLASSIFICATION	START: check d0 and d1
WITHOUT_CLASSIFICATION	START: check d0 and d1
WITHOUT_CLASSIFICATION	MIDDLE: check d1, d2 and d3
WITHOUT_CLASSIFICATION	MIDDLE: check d1, d2 and d3
WITHOUT_CLASSIFICATION	MIDDLE: check d1, d2 and d3
WITHOUT_CLASSIFICATION	MIDDLE: check d1, d2 and d3
WITHOUT_CLASSIFICATION	MIDDLE: check d1, d2 and d3
WITHOUT_CLASSIFICATION	MIDDLE: check d1, d2 and d3
WITHOUT_CLASSIFICATION	MIDDLE: check d1, d2 and d3
WITHOUT_CLASSIFICATION	MIDDLE: check d1, d2 and d3
WITHOUT_CLASSIFICATION	END: check d3 and d4
WITHOUT_CLASSIFICATION	END: check d3 and d4
WITHOUT_CLASSIFICATION	END: check d3 and d4
WITHOUT_CLASSIFICATION	END: check d3 and d4
WITHOUT_CLASSIFICATION	END: check d3 and d4
WITHOUT_CLASSIFICATION	END: check d3 and d4
WITHOUT_CLASSIFICATION	END: check d3 and d4
WITHOUT_CLASSIFICATION	END: check d3 and d4
WITHOUT_CLASSIFICATION	START: check d0
WITHOUT_CLASSIFICATION	START: check d0
WITHOUT_CLASSIFICATION	END: check d0
WITHOUT_CLASSIFICATION	MIDDLE: check d0
WITHOUT_CLASSIFICATION	MIDDLE: check d0
WITHOUT_CLASSIFICATION	END: check d0
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	test independence
WITHOUT_CLASSIFICATION	now repeat for a vertical axis
WITHOUT_CLASSIFICATION	set start and end date
WITHOUT_CLASSIFICATION	if the bug is still present, this leads to an endless loop
WITHOUT_CLASSIFICATION	private boolean autoRangeIncludesZero;
WITHOUT_CLASSIFICATION	private NumberTickUnit tickUnit;
WITHOUT_CLASSIFICATION	private NumberFormat numberFormatOverride;
WITHOUT_CLASSIFICATION	now replacing the dataset should update the axis range...
WITHOUT_CLASSIFICATION	axis.setRangeType(RangeType.POSITIVE); axis.setLowerBound(-5.0); assertEquals(0.0, axis.getLowerBound(), EPSILON);
WITHOUT_CLASSIFICATION	check that changing a tick label font in a1 doesn't change a2
WITHOUT_CLASSIFICATION	check that changing a tick label paint in a1 doesn't change a2
WITHOUT_CLASSIFICATION	check that changing a category label tooltip in a1 doesn't change a2
WITHOUT_CLASSIFICATION	set axis bounds to be both greater than 1
WITHOUT_CLASSIFICATION	check for bounds interval that includes 1
WITHOUT_CLASSIFICATION	check for bounds interval that includes 1
WITHOUT_CLASSIFICATION	check for both bounds smaller than 1
WITHOUT_CLASSIFICATION	check for both bounds smaller than 1
WITHOUT_CLASSIFICATION	lowerMargin
WITHOUT_CLASSIFICATION	upperMargin
WITHOUT_CLASSIFICATION	categoryMargin
WITHOUT_CLASSIFICATION	maxCategoryLabelWidthRatio
WITHOUT_CLASSIFICATION	categoryLabelPositionOffset
WITHOUT_CLASSIFICATION	categoryLabelPositions
WITHOUT_CLASSIFICATION	check that changing a tick label font in a1 doesn't change a2
WITHOUT_CLASSIFICATION	check that changing a tick label paint in a1 doesn't change a2
WITHOUT_CLASSIFICATION	check that changing a category label tooltip in a1 doesn't change a2
WITHOUT_CLASSIFICATION	4-ms test base timeline for ms2Timeline using 1 included and 1 excluded segments timeline start time = 0 | v 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 ... +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... | | | | |EE|EE|EE|EE| | | | |EE|EE|EE|EE| | | | | <-- ms2BaseTimeline +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... \__________ _________/ \____ _____/ \/ \/ segment group segment size = 4 ms
WITHOUT_CLASSIFICATION	categoryLabelToolTips
WITHOUT_CLASSIFICATION	categoryLabelURLs
WITHOUT_CLASSIFICATION	tickLabelPaint
WITHOUT_CLASSIFICATION	tickLabelPaint2
WITHOUT_CLASSIFICATION	period
WITHOUT_CLASSIFICATION	offset
WITHOUT_CLASSIFICATION	advance line Stroke
WITHOUT_CLASSIFICATION	advance line Visible
WITHOUT_CLASSIFICATION	cycle bound mapping
WITHOUT_CLASSIFICATION	Create a segmented time line (segment size : 15 minutes)
WITHOUT_CLASSIFICATION	Set start time
WITHOUT_CLASSIFICATION	PUT exclusions in test
WITHOUT_CLASSIFICATION	These constants control test cycles in the validateXXXX methods.
WITHOUT_CLASSIFICATION	test 9am-4pm Monday through Friday timeline
WITHOUT_CLASSIFICATION	calculate 9am on the first Monday after 2001-01-01
WITHOUT_CLASSIFICATION	verify attributes set during object construction
WITHOUT_CLASSIFICATION	verify attributes set during object construction
WITHOUT_CLASSIFICATION	test one-segment and adjacent segments
WITHOUT_CLASSIFICATION	get two consecutive segments for various tests
WITHOUT_CLASSIFICATION	verify segments are consecutive and correct
WITHOUT_CLASSIFICATION	verify various indices inside a segment are the same segment
WITHOUT_CLASSIFICATION	try next segment
WITHOUT_CLASSIFICATION	test inc methods
WITHOUT_CLASSIFICATION	test inc() method
WITHOUT_CLASSIFICATION	logically consecutive segments non-physically consecutive (with non-contained time in between)
WITHOUT_CLASSIFICATION	physically consecutive
WITHOUT_CLASSIFICATION	test inc(n) method
WITHOUT_CLASSIFICATION	go to another segment to continue test
WITHOUT_CLASSIFICATION	clear any exceptions in this timeline
WITHOUT_CLASSIFICATION	test some included and excluded segments
WITHOUT_CLASSIFICATION	should be an included segment
WITHOUT_CLASSIFICATION	should be an excluded segment
WITHOUT_CLASSIFICATION	fill in the exceptions
WITHOUT_CLASSIFICATION	verify list of exceptions
WITHOUT_CLASSIFICATION	include current exception and last one
WITHOUT_CLASSIFICATION	exclude current exception and last one
WITHOUT_CLASSIFICATION	make sure there are no exceptions
WITHOUT_CLASSIFICATION	add our exceptions and store locally in ArrayList of Longs
WITHOUT_CLASSIFICATION	only add an exception if it is currently an included segment
WITHOUT_CLASSIFICATION	make array of exceptions
WITHOUT_CLASSIFICATION	add the base timeline exclusions as timeline's esceptions
WITHOUT_CLASSIFICATION	validate base timeline exclusions added as timeline's esceptions
WITHOUT_CLASSIFICATION	start time...
WITHOUT_CLASSIFICATION	1-Jan-2000
WITHOUT_CLASSIFICATION	long v = stl.toTimelineValue(946684800020L);
WITHOUT_CLASSIFICATION	tick labels visible flag...
WITHOUT_CLASSIFICATION	lowerMargin
WITHOUT_CLASSIFICATION	upperMargin
WITHOUT_CLASSIFICATION	the reverse transformed value will be in the start of the next non-excluded and non-exception segment
WITHOUT_CLASSIFICATION	test serialization
WITHOUT_CLASSIFICATION	verify all timeline segments included in the baseTimeline.segment are now exceptions
WITHOUT_CLASSIFICATION	utility methods
WITHOUT_CLASSIFICATION	subcategories
WITHOUT_CLASSIFICATION	subLabelFont
WITHOUT_CLASSIFICATION	subLabelPaint
WITHOUT_CLASSIFICATION	some checks that the clone is independent of the original
WITHOUT_CLASSIFICATION	visible flag...
WITHOUT_CLASSIFICATION	label...
WITHOUT_CLASSIFICATION	label font...
WITHOUT_CLASSIFICATION	label paint...
WITHOUT_CLASSIFICATION	attributed label...
WITHOUT_CLASSIFICATION	label insets...
WITHOUT_CLASSIFICATION	label angle...
WITHOUT_CLASSIFICATION	label location...
WITHOUT_CLASSIFICATION	axis line visible...
WITHOUT_CLASSIFICATION	axis line stroke...
WITHOUT_CLASSIFICATION	axis line paint...
WITHOUT_CLASSIFICATION	tick label font...
WITHOUT_CLASSIFICATION	tick label paint...
WITHOUT_CLASSIFICATION	tick marks visible flag...
WITHOUT_CLASSIFICATION	tick mark inside length...
WITHOUT_CLASSIFICATION	tick mark outside length...
WITHOUT_CLASSIFICATION	tick mark stroke...
WITHOUT_CLASSIFICATION	fixed dimension...
WITHOUT_CLASSIFICATION	axis line visible flag...
WITHOUT_CLASSIFICATION	positiveArrowVisible;
WITHOUT_CLASSIFICATION	private Shape upArrow;
WITHOUT_CLASSIFICATION	private Shape downArrow;
WITHOUT_CLASSIFICATION	private Shape leftArrow;
WITHOUT_CLASSIFICATION	private Shape rightArrow;
WITHOUT_CLASSIFICATION	axisLineStroke
WITHOUT_CLASSIFICATION	inverted
WITHOUT_CLASSIFICATION	private TickUnits standardTickUnits;
WITHOUT_CLASSIFICATION	verticalTickLabels
WITHOUT_CLASSIFICATION	time zone
WITHOUT_CLASSIFICATION	locale
WITHOUT_CLASSIFICATION	chars
WITHOUT_CLASSIFICATION	showYear[]
WITHOUT_CLASSIFICATION	yearFormatter
WITHOUT_CLASSIFICATION	NONE / NONE
WITHOUT_CLASSIFICATION	NONE / RANGE
WITHOUT_CLASSIFICATION	NONE / FIXED
WITHOUT_CLASSIFICATION	RANGE / NONE
WITHOUT_CLASSIFICATION	paint
WITHOUT_CLASSIFICATION	RANGE / RANGE
WITHOUT_CLASSIFICATION	RANGE / FIXED
WITHOUT_CLASSIFICATION	FIXED / NONE
WITHOUT_CLASSIFICATION	FIXED / RANGE
WITHOUT_CLASSIFICATION	FIXED / FIXED
WITHOUT_CLASSIFICATION	TBLRC 00010 - right item only
WITHOUT_CLASSIFICATION	TBLRC 00010 - right item only
WITHOUT_CLASSIFICATION	TBLRC 00011 - right and center items
WITHOUT_CLASSIFICATION	TBLRC 00011 - right and center items
WITHOUT_CLASSIFICATION	try case where right item is shorter than center item
WITHOUT_CLASSIFICATION	TBLRC 00100 - left item only
WITHOUT_CLASSIFICATION	TBLRC 00101 - left and center items
WITHOUT_CLASSIFICATION	TBLRC 00101 - left and center items
WITHOUT_CLASSIFICATION	try case where left item is shorter than center item
WITHOUT_CLASSIFICATION	TBLRC 00110 - left and right items
WITHOUT_CLASSIFICATION	TBLRC 00111 - left, right and center items
WITHOUT_CLASSIFICATION	TBLRC 01000 - bottom item only
WITHOUT_CLASSIFICATION	TBLRC 01001 - bottom and center only
WITHOUT_CLASSIFICATION	TBLRC 01010 - bottom and right only
WITHOUT_CLASSIFICATION	TBLRC 10110 - top, left and right
WITHOUT_CLASSIFICATION	TBLRC 10111
WITHOUT_CLASSIFICATION	TBLRC 11000 - top and bottom only
WITHOUT_CLASSIFICATION	TBLRC 11001
WITHOUT_CLASSIFICATION	TBLRC 11010 - top, bottom and right
WITHOUT_CLASSIFICATION	TBLRC 11100
WITHOUT_CLASSIFICATION	TBLRC 11101
WITHOUT_CLASSIFICATION	TBLRC 11110
WITHOUT_CLASSIFICATION	TBLRC 11111 - all
WITHOUT_CLASSIFICATION	create dataset 1...
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	TBLRC 00110 - left and right items
WITHOUT_CLASSIFICATION	TBLRC 00111 - left, right and center items
WITHOUT_CLASSIFICATION	TBLRC 01000 - bottom item only
WITHOUT_CLASSIFICATION	TBLRC 01001 - bottom and center only
WITHOUT_CLASSIFICATION	TBLRC 01010 - bottom and right only
WITHOUT_CLASSIFICATION	TBLRC 01011 - bottom, right and center
WITHOUT_CLASSIFICATION	TBLRC 01100
WITHOUT_CLASSIFICATION	TBLRC 01101 - bottom, left and center
WITHOUT_CLASSIFICATION	TBLRC 01110 - bottom. left and right
WITHOUT_CLASSIFICATION	TBLRC 01111
WITHOUT_CLASSIFICATION	TBLRC 10000 - top item only
WITHOUT_CLASSIFICATION	TBLRC 10001 - top and center only
WITHOUT_CLASSIFICATION	TBLRC 10010 - right and top only
WITHOUT_CLASSIFICATION	TBLRC 10011 - top, right and center
WITHOUT_CLASSIFICATION	TBLRC 10100 - top and left only
WITHOUT_CLASSIFICATION	TBLRC 10101 - top, left and center
WITHOUT_CLASSIFICATION	TBLRC 10111
WITHOUT_CLASSIFICATION	standard test
WITHOUT_CLASSIFICATION	tooltip format
WITHOUT_CLASSIFICATION	tooltip format
WITHOUT_CLASSIFICATION	date format
WITHOUT_CLASSIFICATION	Y format
WITHOUT_CLASSIFICATION	some setup...
WITHOUT_CLASSIFICATION	some setup...
WITHOUT_CLASSIFICATION	another test...
WITHOUT_CLASSIFICATION	try a null value
WITHOUT_CLASSIFICATION	format string...
WITHOUT_CLASSIFICATION	x number format
WITHOUT_CLASSIFICATION	y number format
WITHOUT_CLASSIFICATION	z number format
WITHOUT_CLASSIFICATION	x date format
WITHOUT_CLASSIFICATION	y date format
WITHOUT_CLASSIFICATION	z date format
WITHOUT_CLASSIFICATION	remove plot2, but plot1 is removed instead
WITHOUT_CLASSIFICATION	create subplot 1...
WITHOUT_CLASSIFICATION	create subplot 2...
WITHOUT_CLASSIFICATION	add the subplots...
WITHOUT_CLASSIFICATION	separatorsVisible
WITHOUT_CLASSIFICATION	separatorStroke
WITHOUT_CLASSIFICATION	separatorPaint
WITHOUT_CLASSIFICATION	outerSeparatorExtension
WITHOUT_CLASSIFICATION	sectionDepth
WITHOUT_CLASSIFICATION	orientation...
WITHOUT_CLASSIFICATION	axisOffset...
WITHOUT_CLASSIFICATION	domainAxes...
WITHOUT_CLASSIFICATION	TBLRC 00000 - no items
WITHOUT_CLASSIFICATION	TBLRC 11001
WITHOUT_CLASSIFICATION	TBLRC 11010 - top, bottom and right
WITHOUT_CLASSIFICATION	TBLRC 11011
WITHOUT_CLASSIFICATION	TBLRC 11100
WITHOUT_CLASSIFICATION	TBLRC 11101
WITHOUT_CLASSIFICATION	TBLRC 11110
WITHOUT_CLASSIFICATION	check handling when the dataset is a regular XYDataset, not an XYZDataset...
WITHOUT_CLASSIFICATION	domainAxisLocation - no longer a separate field but test anyway...
WITHOUT_CLASSIFICATION	domainAxisLocations...
WITHOUT_CLASSIFICATION	draw shared domain axis...
WITHOUT_CLASSIFICATION	rangeAxes...
WITHOUT_CLASSIFICATION	rangeAxisLocation - no longer a separate field but test anyway...
WITHOUT_CLASSIFICATION	rangeAxisLocations...
WITHOUT_CLASSIFICATION	datasetToDomainAxisMap...
WITHOUT_CLASSIFICATION	datasetToRangeAxisMap...
WITHOUT_CLASSIFICATION	renderers...
WITHOUT_CLASSIFICATION	rendering order...
WITHOUT_CLASSIFICATION	columnRenderingOrder...
WITHOUT_CLASSIFICATION	rowRenderingOrder...
WITHOUT_CLASSIFICATION	domainGridlinesVisible
WITHOUT_CLASSIFICATION	domainGridlineStroke
WITHOUT_CLASSIFICATION	domainGridlinePaint
WITHOUT_CLASSIFICATION	rangeGridlinesVisible
WITHOUT_CLASSIFICATION	rangeGridlineStroke
WITHOUT_CLASSIFICATION	rangeGridlinePaint
WITHOUT_CLASSIFICATION	rangeCrosshairVisible
WITHOUT_CLASSIFICATION	rangeCrosshairValue
WITHOUT_CLASSIFICATION	rangeCrosshairStroke
WITHOUT_CLASSIFICATION	rangeCrosshairLockedOnData
WITHOUT_CLASSIFICATION	foreground domain markers
WITHOUT_CLASSIFICATION	background domain markers
WITHOUT_CLASSIFICATION	foreground range markers...
WITHOUT_CLASSIFICATION	background range markers...
WITHOUT_CLASSIFICATION	annotations
WITHOUT_CLASSIFICATION	weight
WITHOUT_CLASSIFICATION	fixed domain axis space...
WITHOUT_CLASSIFICATION	fixed range axis space...
WITHOUT_CLASSIFICATION	crosshairDatasetIndex
WITHOUT_CLASSIFICATION	domainCrosshairColumnKey
WITHOUT_CLASSIFICATION	domainCrosshairRowKey
WITHOUT_CLASSIFICATION	domainCrosshairVisible
WITHOUT_CLASSIFICATION	domainCrosshairStroke
WITHOUT_CLASSIFICATION	shadowGenerator
WITHOUT_CLASSIFICATION	check for independence
WITHOUT_CLASSIFICATION	we didn't get an exception so all is good
WITHOUT_CLASSIFICATION	should get IllegalArgumentException for negative index
WITHOUT_CLASSIFICATION	should get IllegalArgumentException for negative index
WITHOUT_CLASSIFICATION	we should be able to give a dataset an arbitrary index
WITHOUT_CLASSIFICATION	labelFont
WITHOUT_CLASSIFICATION	labelPaint
WITHOUT_CLASSIFICATION	dial outline paint
WITHOUT_CLASSIFICATION	if multiple axes are mapped, the first in the list should be returned...
WITHOUT_CLASSIFICATION	we should be able to give a renderer an arbitrary index
WITHOUT_CLASSIFICATION	add a second dataset
WITHOUT_CLASSIFICATION	add a second dataset
WITHOUT_CLASSIFICATION	add a second dataset
WITHOUT_CLASSIFICATION	by default, the renderer with index 0 is used
WITHOUT_CLASSIFICATION	add a second renderer with the same index as dataset2, now it will be used
WITHOUT_CLASSIFICATION	now map the dataset to the second xAxis
WITHOUT_CLASSIFICATION	now map the dataset to the second xAxis
WITHOUT_CLASSIFICATION	add a second dataset, plotted against a second x axis
WITHOUT_CLASSIFICATION	add a second dataset, plotted against a second axis
WITHOUT_CLASSIFICATION	needle paint
WITHOUT_CLASSIFICATION	value font
WITHOUT_CLASSIFICATION	value paint
WITHOUT_CLASSIFICATION	tick label font
WITHOUT_CLASSIFICATION	tick label paint
WITHOUT_CLASSIFICATION	tick label format
WITHOUT_CLASSIFICATION	tick paint
WITHOUT_CLASSIFICATION	draw border
WITHOUT_CLASSIFICATION	meter angle
WITHOUT_CLASSIFICATION	key
WITHOUT_CLASSIFICATION	paint
WITHOUT_CLASSIFICATION	stroke
WITHOUT_CLASSIFICATION	outlinePaint
WITHOUT_CLASSIFICATION	outlineStroke
WITHOUT_CLASSIFICATION	alpha
WITHOUT_CLASSIFICATION	check null argument...
WITHOUT_CLASSIFICATION	drawBorder
WITHOUT_CLASSIFICATION	rosePaint
WITHOUT_CLASSIFICATION	roseCenterPaint
WITHOUT_CLASSIFICATION	roseHighlightPaint
WITHOUT_CLASSIFICATION	interiorGap...
WITHOUT_CLASSIFICATION	circular
WITHOUT_CLASSIFICATION	direction
WITHOUT_CLASSIFICATION	ignoreNullValues
WITHOUT_CLASSIFICATION	sectionPaint
WITHOUT_CLASSIFICATION	sectionPaintMap
WITHOUT_CLASSIFICATION	baseSectionPaint
WITHOUT_CLASSIFICATION	sectionOutlinePaint
WITHOUT_CLASSIFICATION	sectionOutlinePaintList
WITHOUT_CLASSIFICATION	baseSectionOutlinePaint
WITHOUT_CLASSIFICATION	sectionOutlineStrokeList
WITHOUT_CLASSIFICATION	baseSectionOutlineStroke
WITHOUT_CLASSIFICATION	shadowPaint
WITHOUT_CLASSIFICATION	shadowXOffset
WITHOUT_CLASSIFICATION	shadowYOffset
WITHOUT_CLASSIFICATION	labelOutlinePaint
WITHOUT_CLASSIFICATION	labelOutlineStroke
WITHOUT_CLASSIFICATION	labelShadowPaint
WITHOUT_CLASSIFICATION	explodePercentages
WITHOUT_CLASSIFICATION	backgroundImage
WITHOUT_CLASSIFICATION	startAngle
WITHOUT_CLASSIFICATION	backgroundImageAlignment
WITHOUT_CLASSIFICATION	backgroundImageAlpha
WITHOUT_CLASSIFICATION	outlinePaint
WITHOUT_CLASSIFICATION	shadowGenerator
WITHOUT_CLASSIFICATION	direction
WITHOUT_CLASSIFICATION	labelLinkPaint
WITHOUT_CLASSIFICATION	maximumLabelWidth
WITHOUT_CLASSIFICATION	links visible
WITHOUT_CLASSIFICATION	labelGap
WITHOUT_CLASSIFICATION	toolTipGenerator
WITHOUT_CLASSIFICATION	linkMargin
WITHOUT_CLASSIFICATION	legendItemShape
WITHOUT_CLASSIFICATION	labelLinkStroke
WITHOUT_CLASSIFICATION	minimumArcAngleToDraw
WITHOUT_CLASSIFICATION	urlGenerator
WITHOUT_CLASSIFICATION	legendLabelGenerator
WITHOUT_CLASSIFICATION	legendItemShape
WITHOUT_CLASSIFICATION	legendLabelToolTipGenerator
WITHOUT_CLASSIFICATION	legendLabelURLGenerator
WITHOUT_CLASSIFICATION	autoPopulateSectionPaint
WITHOUT_CLASSIFICATION	autoPopulateSectionOutlinePaint
WITHOUT_CLASSIFICATION	we use ValueMarker for the tests, because we need a concrete subclass...
WITHOUT_CLASSIFICATION	autoPopulateSectionOutlineStroke
WITHOUT_CLASSIFICATION	check that the URL generator has been cloned
WITHOUT_CLASSIFICATION	check that the URL generator has been cloned
WITHOUT_CLASSIFICATION	change the shape and make sure it only affects p1
WITHOUT_CLASSIFICATION	change the generator and make sure it only affects p1
WITHOUT_CLASSIFICATION	change the generator and make sure it only affects p1
WITHOUT_CLASSIFICATION	check that null items are ignored if requested
WITHOUT_CLASSIFICATION	check that zero items are ignored if requested
WITHOUT_CLASSIFICATION	check that negative items are always ignored
WITHOUT_CLASSIFICATION	noDataMessage
WITHOUT_CLASSIFICATION	noDataMessageFont
WITHOUT_CLASSIFICATION	noDataMessagePaint
WITHOUT_CLASSIFICATION	outlineVisible
WITHOUT_CLASSIFICATION	outlineStroke
WITHOUT_CLASSIFICATION	foregroundAlpha
WITHOUT_CLASSIFICATION	backgroundAlpha
WITHOUT_CLASSIFICATION	drawingSupplier
WITHOUT_CLASSIFICATION	try a null collection
WITHOUT_CLASSIFICATION	dataExtractOrder
WITHOUT_CLASSIFICATION	headPercent
WITHOUT_CLASSIFICATION	interiorGap
WITHOUT_CLASSIFICATION	maxValue
WITHOUT_CLASSIFICATION	secondary renderers
WITHOUT_CLASSIFICATION	row keys...
WITHOUT_CLASSIFICATION	row keys...
WITHOUT_CLASSIFICATION	column keys...
WITHOUT_CLASSIFICATION	padding
WITHOUT_CLASSIFICATION	column keys...
WITHOUT_CLASSIFICATION	column keys...
WITHOUT_CLASSIFICATION	column keys...
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	labelFont
WITHOUT_CLASSIFICATION	labelPaint
WITHOUT_CLASSIFICATION	BufferedImage image =
WITHOUT_CLASSIFICATION	axisLinePaint
WITHOUT_CLASSIFICATION	axisLineStroke
WITHOUT_CLASSIFICATION	remove plot2, but plot1 is removed instead
WITHOUT_CLASSIFICATION	orientation...
WITHOUT_CLASSIFICATION	axisOffset...
WITHOUT_CLASSIFICATION	labelGenerator
WITHOUT_CLASSIFICATION	toolTipGenerator
WITHOUT_CLASSIFICATION	urlGenerator
WITHOUT_CLASSIFICATION	change a series paint
WITHOUT_CLASSIFICATION	baseSeriesOutlineStroke
WITHOUT_CLASSIFICATION	valueFont
WITHOUT_CLASSIFICATION	webFilled
WITHOUT_CLASSIFICATION	change a series outline paint
WITHOUT_CLASSIFICATION	axisLabelGap
WITHOUT_CLASSIFICATION	thermometerPaint
WITHOUT_CLASSIFICATION	change the legendItemShape
WITHOUT_CLASSIFICATION	secondary DomainAxisLocations...
WITHOUT_CLASSIFICATION	change a series outline stroke
WITHOUT_CLASSIFICATION	valueLocation
WITHOUT_CLASSIFICATION	thermometerStroke
WITHOUT_CLASSIFICATION	valuePaint
WITHOUT_CLASSIFICATION	axisLocation
WITHOUT_CLASSIFICATION	showValueLines
WITHOUT_CLASSIFICATION	domainAxisLocation...
WITHOUT_CLASSIFICATION	valueFormat
WITHOUT_CLASSIFICATION	this doesn't work
WITHOUT_CLASSIFICATION	mercuryPaint
WITHOUT_CLASSIFICATION	rangeAxisLocation...
WITHOUT_CLASSIFICATION	domainAxis...
WITHOUT_CLASSIFICATION	secondary DomainAxes...
WITHOUT_CLASSIFICATION	secondary RangeAxisLocations...
WITHOUT_CLASSIFICATION	rangeAxis...
WITHOUT_CLASSIFICATION	renderer
WITHOUT_CLASSIFICATION	secondary RangeAxes...
WITHOUT_CLASSIFICATION	secondaryDatasetRangeAxisMap...
WITHOUT_CLASSIFICATION	secondary DatasetDomainAxisMap...
WITHOUT_CLASSIFICATION	try a collection with a single number plus a null
WITHOUT_CLASSIFICATION	create dataset 1...
WITHOUT_CLASSIFICATION	create dataset 1...
WITHOUT_CLASSIFICATION	lowerBound
WITHOUT_CLASSIFICATION	remove plot2, but plot1 is removed instead
WITHOUT_CLASSIFICATION	create subplot 1...
WITHOUT_CLASSIFICATION	create subplot 2...
WITHOUT_CLASSIFICATION	parent plot...
WITHOUT_CLASSIFICATION	add the subplots...
WITHOUT_CLASSIFICATION	domainGridlineStroke
WITHOUT_CLASSIFICATION	domainGridlinePaint
WITHOUT_CLASSIFICATION	rangeGridlinesVisible
WITHOUT_CLASSIFICATION	rangeGridlineStroke
WITHOUT_CLASSIFICATION	rangeCrosshairVisible
WITHOUT_CLASSIFICATION	rangeCrosshairValue
WITHOUT_CLASSIFICATION	rangeCrosshairStroke
WITHOUT_CLASSIFICATION	rangeCrosshairLockedOnData
WITHOUT_CLASSIFICATION	weight
WITHOUT_CLASSIFICATION	fixed legend items
WITHOUT_CLASSIFICATION	shadowGenerator
WITHOUT_CLASSIFICATION	should get IllegalArgumentException for negative index
WITHOUT_CLASSIFICATION	we should be able to give a dataset an arbitrary index
WITHOUT_CLASSIFICATION	we should be able to give a renderer an arbitrary index
WITHOUT_CLASSIFICATION	add a second dataset
WITHOUT_CLASSIFICATION	add a second dataset
WITHOUT_CLASSIFICATION	by default, the renderer with index 0 is used
WITHOUT_CLASSIFICATION	now map the dataset to the second xAxis
WITHOUT_CLASSIFICATION	now map the dataset to the second xAxis
WITHOUT_CLASSIFICATION	add a second dataset, plotted against a second x axis
WITHOUT_CLASSIFICATION	add a second dataset, plotted against a second axis
WITHOUT_CLASSIFICATION	rangeZeroBaselineVisible
WITHOUT_CLASSIFICATION	rangeZeroBaselineStroke
WITHOUT_CLASSIFICATION	rangeZeroBaselinePaint
WITHOUT_CLASSIFICATION	range markers
WITHOUT_CLASSIFICATION	secondary range markers
WITHOUT_CLASSIFICATION	quadrant origin
WITHOUT_CLASSIFICATION	quadrant paint
WITHOUT_CLASSIFICATION	verify that the plot is listening to the cloned renderer
WITHOUT_CLASSIFICATION	no renderer 1
WITHOUT_CLASSIFICATION	actually removes a1
WITHOUT_CLASSIFICATION	set up some objects...
WITHOUT_CLASSIFICATION	paint sequence
WITHOUT_CLASSIFICATION	outline paint sequence
WITHOUT_CLASSIFICATION	outline stroke sequence
WITHOUT_CLASSIFICATION	shape sequence
WITHOUT_CLASSIFICATION	paint index
WITHOUT_CLASSIFICATION	outline paint index
WITHOUT_CLASSIFICATION	outline stroke index
WITHOUT_CLASSIFICATION	shape index
WITHOUT_CLASSIFICATION	create dataset 2...
WITHOUT_CLASSIFICATION	lowerBound
WITHOUT_CLASSIFICATION	upperBound
WITHOUT_CLASSIFICATION	startAngle
WITHOUT_CLASSIFICATION	extent
WITHOUT_CLASSIFICATION	tickRadius
WITHOUT_CLASSIFICATION	backgroundPaint
WITHOUT_CLASSIFICATION	outlinePaint
WITHOUT_CLASSIFICATION	font
WITHOUT_CLASSIFICATION	paint
WITHOUT_CLASSIFICATION	textAnchor
WITHOUT_CLASSIFICATION	stroke
WITHOUT_CLASSIFICATION	now make a change to the renderer and see if it triggers a plot change event...
WITHOUT_CLASSIFICATION	if multiple axes are mapped, the first in the list should be returned...
WITHOUT_CLASSIFICATION	add a second renderer with the same index as dataset2, now it will be used
WITHOUT_CLASSIFICATION	outlineStroke
WITHOUT_CLASSIFICATION	check the case where there is a secondary dataset that doesn't have a renderer (i.e. falls back to renderer 0)
WITHOUT_CLASSIFICATION	now remove a3, but since a3.equals(a1), this will in fact remove a1...
WITHOUT_CLASSIFICATION	check an inherited attribute
WITHOUT_CLASSIFICATION	check that the listener lists are independent
WITHOUT_CLASSIFICATION	check that the listener lists are independent
WITHOUT_CLASSIFICATION	check that the listener lists are independent
WITHOUT_CLASSIFICATION	check that the listener lists are independent
WITHOUT_CLASSIFICATION	visible
WITHOUT_CLASSIFICATION	radius
WITHOUT_CLASSIFICATION	test a default instance
WITHOUT_CLASSIFICATION	test a default instance
WITHOUT_CLASSIFICATION	test a default instance
WITHOUT_CLASSIFICATION	test a default instance
WITHOUT_CLASSIFICATION	test a default instance
WITHOUT_CLASSIFICATION	test a default instance
WITHOUT_CLASSIFICATION	radius
WITHOUT_CLASSIFICATION	radius
WITHOUT_CLASSIFICATION	foregroundPaint
WITHOUT_CLASSIFICATION	background paint
WITHOUT_CLASSIFICATION	foreground paint
WITHOUT_CLASSIFICATION	inner radius
WITHOUT_CLASSIFICATION	outer radius
WITHOUT_CLASSIFICATION	dataset index
WITHOUT_CLASSIFICATION	dataset index
WITHOUT_CLASSIFICATION	angle
WITHOUT_CLASSIFICATION	frameAnchor
WITHOUT_CLASSIFICATION	templateValue
WITHOUT_CLASSIFICATION	valueAnchor
WITHOUT_CLASSIFICATION	fill paint
WITHOUT_CLASSIFICATION	outline paint
WITHOUT_CLASSIFICATION	outline stroke
WITHOUT_CLASSIFICATION	test a customised instance
WITHOUT_CLASSIFICATION	test a custom instance
WITHOUT_CLASSIFICATION	background
WITHOUT_CLASSIFICATION	dial cap
WITHOUT_CLASSIFICATION	frame
WITHOUT_CLASSIFICATION	view
WITHOUT_CLASSIFICATION	layer
WITHOUT_CLASSIFICATION	outlinePaint
WITHOUT_CLASSIFICATION	font
WITHOUT_CLASSIFICATION	paint
WITHOUT_CLASSIFICATION	stroke
WITHOUT_CLASSIFICATION	shape
WITHOUT_CLASSIFICATION	tickLabelFont
WITHOUT_CLASSIFICATION	tickLabelPaint
WITHOUT_CLASSIFICATION	outlineStroke
WITHOUT_CLASSIFICATION	check an inherited attribute
WITHOUT_CLASSIFICATION	check that the listener lists are independent
WITHOUT_CLASSIFICATION	check that the listener lists are independent
WITHOUT_CLASSIFICATION	test a default instance
WITHOUT_CLASSIFICATION	test a default instance
WITHOUT_CLASSIFICATION	test a default instance
WITHOUT_CLASSIFICATION	radius
WITHOUT_CLASSIFICATION	angle
WITHOUT_CLASSIFICATION	test a customised instance
WITHOUT_CLASSIFICATION	test a customised instance
WITHOUT_CLASSIFICATION	test a custom instance
WITHOUT_CLASSIFICATION	majorTickIncrement
WITHOUT_CLASSIFICATION	majorTickLength
WITHOUT_CLASSIFICATION	majorTickPaint
WITHOUT_CLASSIFICATION	majorTickStroke
WITHOUT_CLASSIFICATION	minorTickLength
WITHOUT_CLASSIFICATION	tickLabelOffset
WITHOUT_CLASSIFICATION	try a default instance
WITHOUT_CLASSIFICATION	try a customised instance
WITHOUT_CLASSIFICATION	label
WITHOUT_CLASSIFICATION	gradient paint transformer
WITHOUT_CLASSIFICATION	test default instance
WITHOUT_CLASSIFICATION	have to use a concrete subclass...
WITHOUT_CLASSIFICATION	seriesVisible
WITHOUT_CLASSIFICATION	seriesVisibleList
WITHOUT_CLASSIFICATION	baseSeriesVisible
WITHOUT_CLASSIFICATION	seriesVisibleInLegendList
WITHOUT_CLASSIFICATION	baseSeriesVisibleInLegend
WITHOUT_CLASSIFICATION	paintList
WITHOUT_CLASSIFICATION	basePaint
WITHOUT_CLASSIFICATION	baseFillPaint
WITHOUT_CLASSIFICATION	outlinePaintList
WITHOUT_CLASSIFICATION	baseOutlinePaint
WITHOUT_CLASSIFICATION	strokeList
WITHOUT_CLASSIFICATION	outlineStrokeList
WITHOUT_CLASSIFICATION	baseOutlineStroke
WITHOUT_CLASSIFICATION	shapeList
WITHOUT_CLASSIFICATION	baseShape
WITHOUT_CLASSIFICATION	itemLabelsVisibleList
WITHOUT_CLASSIFICATION	baseItemLabelsVisible
WITHOUT_CLASSIFICATION	itemLabelFont
WITHOUT_CLASSIFICATION	baseItemLabelFont
WITHOUT_CLASSIFICATION	itemLabelPaint
WITHOUT_CLASSIFICATION	itemLabelPaintList
WITHOUT_CLASSIFICATION	baseItemLabelPaint
WITHOUT_CLASSIFICATION	positiveItemLabelPositionList;
WITHOUT_CLASSIFICATION	basePositiveItemLabelPosition;
WITHOUT_CLASSIFICATION	negativeItemLabelPosition;
WITHOUT_CLASSIFICATION	OUTLINE STROKE
WITHOUT_CLASSIFICATION	SHAPE
WITHOUT_CLASSIFICATION	BufferedImage image =
WITHOUT_CLASSIFICATION	baseOutlinePaint
WITHOUT_CLASSIFICATION	itemLabelAnchorOffset
WITHOUT_CLASSIFICATION	createEntities;
WITHOUT_CLASSIFICATION	createEntitiesList;
WITHOUT_CLASSIFICATION	legendShape
WITHOUT_CLASSIFICATION	baseLegendShape
WITHOUT_CLASSIFICATION	legendTextFont
WITHOUT_CLASSIFICATION	baseLegendTextFont
WITHOUT_CLASSIFICATION	OUTLINE PAINT
WITHOUT_CLASSIFICATION	ITEM_LABELS_VISIBLE
WITHOUT_CLASSIFICATION	ITEM_LABEL_FONT
WITHOUT_CLASSIFICATION	POSITIVE ITEM LABEL POSITION
WITHOUT_CLASSIFICATION	NEGATIVE ITEM LABEL ANCHOR
WITHOUT_CLASSIFICATION	failed
WITHOUT_CLASSIFICATION	now check autoPopulate==true
WITHOUT_CLASSIFICATION	now check autoPopulate==true
WITHOUT_CLASSIFICATION	now check autoPopulate==true
WITHOUT_CLASSIFICATION	CategoryPlot plot =
WITHOUT_CLASSIFICATION	CategoryPlot plot =
WITHOUT_CLASSIFICATION	CategoryPlot plot =
WITHOUT_CLASSIFICATION	check a series with no items
WITHOUT_CLASSIFICATION	check a series with no items
WITHOUT_CLASSIFICATION	check a series with one item
WITHOUT_CLASSIFICATION	check a series with one item
WITHOUT_CLASSIFICATION	check a series with one item
WITHOUT_CLASSIFICATION	check a series with one item
WITHOUT_CLASSIFICATION	check a series with two items
WITHOUT_CLASSIFICATION	check a series with two items
WITHOUT_CLASSIFICATION	check a series with two items
WITHOUT_CLASSIFICATION	check a series with two items
WITHOUT_CLASSIFICATION	check a series with three items
WITHOUT_CLASSIFICATION	check a series with three items
WITHOUT_CLASSIFICATION	check a series with three items
WITHOUT_CLASSIFICATION	check a series with three items
WITHOUT_CLASSIFICATION	check a series with three items
WITHOUT_CLASSIFICATION	check a series with four items
WITHOUT_CLASSIFICATION	check a series with four items
WITHOUT_CLASSIFICATION	check a series with four items
WITHOUT_CLASSIFICATION	check a series with four items
WITHOUT_CLASSIFICATION	check a series with repeating items
WITHOUT_CLASSIFICATION	check a series with repeating items
WITHOUT_CLASSIFICATION	BufferedImage image =
WITHOUT_CLASSIFICATION	check a series with no items
WITHOUT_CLASSIFICATION	check a series with one item
WITHOUT_CLASSIFICATION	check a series with two items
WITHOUT_CLASSIFICATION	check a series with three items
WITHOUT_CLASSIFICATION	check a series with four items
WITHOUT_CLASSIFICATION	check a series with repeating items
WITHOUT_CLASSIFICATION	we're doing this for testing only, and make sure that we only add data in ascending order by x-value
WITHOUT_CLASSIFICATION	we're doing this for testing only, and make sure that we only add data in descending order by x-value
WITHOUT_CLASSIFICATION	try with gradient paint
WITHOUT_CLASSIFICATION	should be equal...
WITHOUT_CLASSIFICATION	should be equal...
WITHOUT_CLASSIFICATION	and independent...
WITHOUT_CLASSIFICATION	and independent...
WITHOUT_CLASSIFICATION	and independent...
WITHOUT_CLASSIFICATION	an empty dataset should return a null range
WITHOUT_CLASSIFICATION	an empty dataset should return a null range
WITHOUT_CLASSIFICATION	JFreeChart chart =
WITHOUT_CLASSIFICATION	JFreeChart chart =
WITHOUT_CLASSIFICATION	the renderer should not be equal to a BarRenderer
WITHOUT_CLASSIFICATION	firstBarPaint;
WITHOUT_CLASSIFICATION	lastBarPaint;
WITHOUT_CLASSIFICATION	positiveBarPaint;
WITHOUT_CLASSIFICATION	private Paint negativeBarPaint;
WITHOUT_CLASSIFICATION	quick check for independence
WITHOUT_CLASSIFICATION	BufferedImage image =
WITHOUT_CLASSIFICATION	shadowXOffset
WITHOUT_CLASSIFICATION	shadowYOffset
WITHOUT_CLASSIFICATION	toolTipGenerator
WITHOUT_CLASSIFICATION	urlGenerator
WITHOUT_CLASSIFICATION	should be equal...
WITHOUT_CLASSIFICATION	and independent...
WITHOUT_CLASSIFICATION	an empty dataset should return a null range
WITHOUT_CLASSIFICATION	an empty dataset should return a null range
WITHOUT_CLASSIFICATION	an empty dataset should return a null range
WITHOUT_CLASSIFICATION	an empty dataset should return a null range
WITHOUT_CLASSIFICATION	JFreeChart chart =
WITHOUT_CLASSIFICATION	JFreeChart chart =
WITHOUT_CLASSIFICATION	JFreeChart chart =
WITHOUT_CLASSIFICATION	JFreeChart chart =
WITHOUT_CLASSIFICATION	JFreeChart chart =
WITHOUT_CLASSIFICATION	JFreeChart chart =
WITHOUT_CLASSIFICATION	check that the series visible flag is observed
WITHOUT_CLASSIFICATION	map
WITHOUT_CLASSIFICATION	toolTipGeneratorList
WITHOUT_CLASSIFICATION	baseToolTipGenerator
WITHOUT_CLASSIFICATION	itemLabelGenerator
WITHOUT_CLASSIFICATION	itemLabelGeneratorList
WITHOUT_CLASSIFICATION	baseItemLabelGenerator
WITHOUT_CLASSIFICATION	urlGeneratorList
WITHOUT_CLASSIFICATION	baseItemURLGenerator
WITHOUT_CLASSIFICATION	legendItemLabelGenerator
WITHOUT_CLASSIFICATION	legendItemToolTipGenerator
WITHOUT_CLASSIFICATION	legendItemURLGenerator
WITHOUT_CLASSIFICATION	check that the generator has been cloned
WITHOUT_CLASSIFICATION	check that the generator has been cloned
WITHOUT_CLASSIFICATION	check that the generator has been cloned
WITHOUT_CLASSIFICATION	base value
WITHOUT_CLASSIFICATION	itemMargin
WITHOUT_CLASSIFICATION	drawBarOutline
WITHOUT_CLASSIFICATION	maximumBarWidth
WITHOUT_CLASSIFICATION	minimumBarLength
WITHOUT_CLASSIFICATION	gradientPaintTransformer
WITHOUT_CLASSIFICATION	positiveItemLabelPositionFallback
WITHOUT_CLASSIFICATION	negativeItemLabelPositionFallback
WITHOUT_CLASSIFICATION	barPainter
WITHOUT_CLASSIFICATION	shadowsVisible
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	BufferedImage image =
WITHOUT_CLASSIFICATION	BufferedImage image =
WITHOUT_CLASSIFICATION	BufferedImage image =
WITHOUT_CLASSIFICATION	shadowXOffset
WITHOUT_CLASSIFICATION	shadowYOffset
WITHOUT_CLASSIFICATION	an empty dataset should return a null range
WITHOUT_CLASSIFICATION	JFreeChart chart =
WITHOUT_CLASSIFICATION	JFreeChart chart =
WITHOUT_CLASSIFICATION	JFreeChart chart =
WITHOUT_CLASSIFICATION	JFreeChart chart =
WITHOUT_CLASSIFICATION	JFreeChart chart =
WITHOUT_CLASSIFICATION	JFreeChart chart =
WITHOUT_CLASSIFICATION	check that the series visible flag is observed
WITHOUT_CLASSIFICATION	barPainter
WITHOUT_CLASSIFICATION	shadowsVisible
WITHOUT_CLASSIFICATION	try null argument
WITHOUT_CLASSIFICATION	default instances
WITHOUT_CLASSIFICATION	default instances
WITHOUT_CLASSIFICATION	check that super class fields are being looked at...
WITHOUT_CLASSIFICATION	setUseYInterval
WITHOUT_CLASSIFICATION	setBase()
WITHOUT_CLASSIFICATION	try empty dataset
WITHOUT_CLASSIFICATION	setGradientPaintTransformer()
WITHOUT_CLASSIFICATION	setDrawBarOutline()
WITHOUT_CLASSIFICATION	setMargin()
WITHOUT_CLASSIFICATION	legendBar
WITHOUT_CLASSIFICATION	positiveItemLabelFallbackPosition
WITHOUT_CLASSIFICATION	negativeItemLabelFallbackPosition
WITHOUT_CLASSIFICATION	check a list containing a non-Number object
WITHOUT_CLASSIFICATION	try something from the base class
WITHOUT_CLASSIFICATION	positive paint
WITHOUT_CLASSIFICATION	negative paint
WITHOUT_CLASSIFICATION	shapesVisible
WITHOUT_CLASSIFICATION	legendLine
WITHOUT_CLASSIFICATION	roundXCoordinates
WITHOUT_CLASSIFICATION	drawOpenTicks
WITHOUT_CLASSIFICATION	drawCloseTicks
WITHOUT_CLASSIFICATION	openTickPaint
WITHOUT_CLASSIFICATION	closeTickPaint
WITHOUT_CLASSIFICATION	tickLength
WITHOUT_CLASSIFICATION	try an empty dataset - should return a null range
WITHOUT_CLASSIFICATION	try a null dataset - should return a null range
WITHOUT_CLASSIFICATION	drawXError
WITHOUT_CLASSIFICATION	drawYError
WITHOUT_CLASSIFICATION	capLength
WITHOUT_CLASSIFICATION	errorPaint
WITHOUT_CLASSIFICATION	errorStroke
WITHOUT_CLASSIFICATION	check boxPaint null also
WITHOUT_CLASSIFICATION	upPaint
WITHOUT_CLASSIFICATION	downPaint
WITHOUT_CLASSIFICATION	drawVolume
WITHOUT_CLASSIFICATION	candleWidth
WITHOUT_CLASSIFICATION	maxCandleWidthInMilliseconds
WITHOUT_CLASSIFICATION	autoWidthMethod
WITHOUT_CLASSIFICATION	autoWidthFactor
WITHOUT_CLASSIFICATION	backgroundPaint
WITHOUT_CLASSIFICATION	padding
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	fillPaintTransformer
WITHOUT_CLASSIFICATION	fillPaint
WITHOUT_CLASSIFICATION	outlinePaint
WITHOUT_CLASSIFICATION	linePaint
WITHOUT_CLASSIFICATION	paint
WITHOUT_CLASSIFICATION	BufferedImage image =
WITHOUT_CLASSIFICATION	BufferedImage image =
WITHOUT_CLASSIFICATION	BufferedImage image =
WITHOUT_CLASSIFICATION	shape
WITHOUT_CLASSIFICATION	outlineStroke
WITHOUT_CLASSIFICATION	axisLocation
WITHOUT_CLASSIFICATION	JFreeChart chart =
WITHOUT_CLASSIFICATION	JFreeChart chart =
WITHOUT_CLASSIFICATION	JFreeChart chart =
WITHOUT_CLASSIFICATION	check that the generator has been cloned
WITHOUT_CLASSIFICATION	check that the generator has been cloned
WITHOUT_CLASSIFICATION	check that the generator has been cloned
WITHOUT_CLASSIFICATION	default instances
WITHOUT_CLASSIFICATION	default instances
WITHOUT_CLASSIFICATION	default instances
WITHOUT_CLASSIFICATION	try an empty dataset - should return a null range
WITHOUT_CLASSIFICATION	try a null dataset - should return a null range
WITHOUT_CLASSIFICATION	locale shouldn't matter here
WITHOUT_CLASSIFICATION	autoWidthGap
WITHOUT_CLASSIFICATION	check that a null dataset returns null bounds
WITHOUT_CLASSIFICATION	check that a null dataset returns null bounds
WITHOUT_CLASSIFICATION	check the bounds of a simple dataset
WITHOUT_CLASSIFICATION	test findDomainBounds as well
WITHOUT_CLASSIFICATION	blockHeight
WITHOUT_CLASSIFICATION	blockWidth
WITHOUT_CLASSIFICATION	paintScale
WITHOUT_CLASSIFICATION	paintScale
WITHOUT_CLASSIFICATION	the following fields are inherited from the AbstractXYItemRenderer
WITHOUT_CLASSIFICATION	axis
WITHOUT_CLASSIFICATION	axisOffset
WITHOUT_CLASSIFICATION	stripWidth
WITHOUT_CLASSIFICATION	stripOutlineVisible
WITHOUT_CLASSIFICATION	stripOutlinePaint
WITHOUT_CLASSIFICATION	stripOutlineStroke
WITHOUT_CLASSIFICATION	shapeVisible
WITHOUT_CLASSIFICATION	shapeFilled
WITHOUT_CLASSIFICATION	shapeOutlineVisible
WITHOUT_CLASSIFICATION	shapeAnchor
WITHOUT_CLASSIFICATION	shapeLocation
WITHOUT_CLASSIFICATION	line
WITHOUT_CLASSIFICATION	lineStroke
WITHOUT_CLASSIFICATION	maximumLinesToDisplay
WITHOUT_CLASSIFICATION	toolTipText
WITHOUT_CLASSIFICATION	expandToFitSpace
WITHOUT_CLASSIFICATION	margin
WITHOUT_CLASSIFICATION	border
WITHOUT_CLASSIFICATION	is the clone independent
WITHOUT_CLASSIFICATION	case 1 - object is mutable but not PublicCloneable
WITHOUT_CLASSIFICATION	simple case
WITHOUT_CLASSIFICATION	try a null value
WITHOUT_CLASSIFICATION	try null argument
WITHOUT_CLASSIFICATION	you can add a null list - it would have been better if this required EMPTY_LIST
WITHOUT_CLASSIFICATION	case 1 - object is mutable but not PublicCloneable
WITHOUT_CLASSIFICATION	if we modify the original list, it's best if the URL generator is not affected
WITHOUT_CLASSIFICATION	try null calendar
WITHOUT_CLASSIFICATION	the clone contains a reference to the original object
WITHOUT_CLASSIFICATION	the clone contains a reference to the original object
WITHOUT_CLASSIFICATION	CASE 2 - object is mutable AND PublicCloneable
WITHOUT_CLASSIFICATION	CASE 2 - object is mutable AND PublicCloneable
WITHOUT_CLASSIFICATION	the clone contains a reference to a CLONE of the original object
WITHOUT_CLASSIFICATION	check that clone is independent of the original
WITHOUT_CLASSIFICATION	check sorted rows
WITHOUT_CLASSIFICATION	check for unknown column
WITHOUT_CLASSIFICATION	try null key
WITHOUT_CLASSIFICATION	try null key
WITHOUT_CLASSIFICATION	v =
WITHOUT_CLASSIFICATION	confirm that the clone is independent of the original
WITHOUT_CLASSIFICATION	check null argument 1
WITHOUT_CLASSIFICATION	ComparableObjectItem item1 =
WITHOUT_CLASSIFICATION	check key order
WITHOUT_CLASSIFICATION	check retrieve value by index
WITHOUT_CLASSIFICATION	retrieve an item
WITHOUT_CLASSIFICATION	request with a negative index
WITHOUT_CLASSIFICATION	request with a negative index
WITHOUT_CLASSIFICATION	request width index == itemCount
WITHOUT_CLASSIFICATION	check null argument
WITHOUT_CLASSIFICATION	replace an existing value
WITHOUT_CLASSIFICATION	try a null key - should throw an exception
WITHOUT_CLASSIFICATION	try unknown key
WITHOUT_CLASSIFICATION	try negative key index
WITHOUT_CLASSIFICATION	try key index == itemCount
WITHOUT_CLASSIFICATION	Range r2 =
WITHOUT_CLASSIFICATION	Expand by 0% does not change the range
WITHOUT_CLASSIFICATION	Lower > upper: mid point is used
WITHOUT_CLASSIFICATION	Shifting with a delta of 0 does not change the range
WITHOUT_CLASSIFICATION	Scaling with a factor of 1 does not change the range
WITHOUT_CLASSIFICATION	s1 =
WITHOUT_CLASSIFICATION	key
WITHOUT_CLASSIFICATION	autoSort
WITHOUT_CLASSIFICATION	add a value
WITHOUT_CLASSIFICATION	add another value
WITHOUT_CLASSIFICATION	remove an item
WITHOUT_CLASSIFICATION	map a key to a new group
WITHOUT_CLASSIFICATION	clear a mapping
WITHOUT_CLASSIFICATION	check handling of null key
WITHOUT_CLASSIFICATION	a new map always has 1 group (the default group)
WITHOUT_CLASSIFICATION	now overwrite group "G2"...
WITHOUT_CLASSIFICATION	if there is an explicit mapping to the default group, it is counted
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	confirm that the clone is independent of the original
WITHOUT_CLASSIFICATION	check key order
WITHOUT_CLASSIFICATION	check key order
WITHOUT_CLASSIFICATION	check retrieve value by key
WITHOUT_CLASSIFICATION	check retrieve value by key
WITHOUT_CLASSIFICATION	check retrieve value by key
WITHOUT_CLASSIFICATION	check retrieve value by key
WITHOUT_CLASSIFICATION	check retrieve value by index
WITHOUT_CLASSIFICATION	check retrieve value by index
WITHOUT_CLASSIFICATION	check retrieve value by index
WITHOUT_CLASSIFICATION	check retrieve value by index
WITHOUT_CLASSIFICATION	now overwrite group "G2"...
WITHOUT_CLASSIFICATION	if the default group is not mapped to, it should still count towards the group count...
WITHOUT_CLASSIFICATION	now when the default group is mapped to, it shouldn't increase the group count...
WITHOUT_CLASSIFICATION	try null calendar
WITHOUT_CLASSIFICATION	the default group is always at index 0
WITHOUT_CLASSIFICATION	a non-existent group should return -1
WITHOUT_CLASSIFICATION	indices are assigned in the order that groups are originally mapped
WITHOUT_CLASSIFICATION	a key that hasn't been mapped should return the default group
WITHOUT_CLASSIFICATION	a null argument should throw an exception
WITHOUT_CLASSIFICATION	a small check for independence
WITHOUT_CLASSIFICATION	check invalid indices
WITHOUT_CLASSIFICATION	check invalid indices
WITHOUT_CLASSIFICATION	confirm overwriting an existing value
WITHOUT_CLASSIFICATION	try null keys
WITHOUT_CLASSIFICATION	try negative row index
WITHOUT_CLASSIFICATION	try row index too high
WITHOUT_CLASSIFICATION	try negative column index
WITHOUT_CLASSIFICATION	try column index too high
WITHOUT_CLASSIFICATION	try unknown row key
WITHOUT_CLASSIFICATION	try null row key
WITHOUT_CLASSIFICATION	try unknown column key
WITHOUT_CLASSIFICATION	try null column key
WITHOUT_CLASSIFICATION	Comparable k =
WITHOUT_CLASSIFICATION	Comparable k =
WITHOUT_CLASSIFICATION	try null
WITHOUT_CLASSIFICATION	it's OK to use an index equal to the size of the list
WITHOUT_CLASSIFICATION	try replacing an existing value
WITHOUT_CLASSIFICATION	basic check for independence
WITHOUT_CLASSIFICATION	basic check for independence
WITHOUT_CLASSIFICATION	try a null source
WITHOUT_CLASSIFICATION	check negative index throws exception
WITHOUT_CLASSIFICATION	check negative index throws exception
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	check index == getItemCount() throws exception
WITHOUT_CLASSIFICATION	test null source
WITHOUT_CLASSIFICATION	try null calendar
WITHOUT_CLASSIFICATION	an empty dataset should return a null range
WITHOUT_CLASSIFICATION	Number n =
WITHOUT_CLASSIFICATION	Number n =
WITHOUT_CLASSIFICATION	try null
WITHOUT_CLASSIFICATION	basic check for independence
WITHOUT_CLASSIFICATION	basic check for independence
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	check index == getItemCount() throws exception
WITHOUT_CLASSIFICATION	test null source
WITHOUT_CLASSIFICATION	another item
WITHOUT_CLASSIFICATION	Number n =
WITHOUT_CLASSIFICATION	increment a null value
WITHOUT_CLASSIFICATION	increment an unknown row
WITHOUT_CLASSIFICATION	increment an unknown column
WITHOUT_CLASSIFICATION	a row of all null values is still counted...
WITHOUT_CLASSIFICATION	a column of all null values is still counted...
WITHOUT_CLASSIFICATION	try a dataset with some content...
WITHOUT_CLASSIFICATION	check that the clone doesn't share the same underlying arrays.
WITHOUT_CLASSIFICATION	check that the clone doesn't share the same underlying arrays.
WITHOUT_CLASSIFICATION	check that two empty datasets are equal
WITHOUT_CLASSIFICATION	check an empty dataset
WITHOUT_CLASSIFICATION	check an empty dataset
WITHOUT_CLASSIFICATION	make sure that modifying the returned array doesn't change the function
WITHOUT_CLASSIFICATION	note that we don't define taskB1
WITHOUT_CLASSIFICATION	define subtasks
WITHOUT_CLASSIFICATION	Number start =
WITHOUT_CLASSIFICATION	test collection 3, which doesn't define all tasks in all series
WITHOUT_CLASSIFICATION	test collection 3, which doesn't define all tasks in all series
WITHOUT_CLASSIFICATION	test collection 3, which doesn't define all tasks in all series
WITHOUT_CLASSIFICATION	int count =
WITHOUT_CLASSIFICATION	Number end =
WITHOUT_CLASSIFICATION	try a single item
WITHOUT_CLASSIFICATION	simple check for independence
WITHOUT_CLASSIFICATION	what if we don't want the interval?
WITHOUT_CLASSIFICATION	an item in series 2
WITHOUT_CLASSIFICATION	another empty series
WITHOUT_CLASSIFICATION	a dataset with a single value
WITHOUT_CLASSIFICATION	try null calendar
WITHOUT_CLASSIFICATION	a dataset with a single value
WITHOUT_CLASSIFICATION	null is ignored
WITHOUT_CLASSIFICATION	a Double.NaN should be ignored
WITHOUT_CLASSIFICATION	try null calendar
WITHOUT_CLASSIFICATION	try null calendar
WITHOUT_CLASSIFICATION	try null calendar
WITHOUT_CLASSIFICATION	try null calendar
WITHOUT_CLASSIFICATION	try null calendar
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	try null argument
WITHOUT_CLASSIFICATION	try null argument
WITHOUT_CLASSIFICATION	check that clone is independent of the original
WITHOUT_CLASSIFICATION	Number n =
WITHOUT_CLASSIFICATION	try a dataset with some content...
WITHOUT_CLASSIFICATION	check that the clone doesn't share the same underlying arrays.
WITHOUT_CLASSIFICATION	simple check for independence
WITHOUT_CLASSIFICATION	simple check for independence
WITHOUT_CLASSIFICATION	try a single item
WITHOUT_CLASSIFICATION	another item
WITHOUT_CLASSIFICATION	another empty series
WITHOUT_CLASSIFICATION	an item in series 2
WITHOUT_CLASSIFICATION	Double.NaN DOESN'T mess things up
WITHOUT_CLASSIFICATION	got it!
WITHOUT_CLASSIFICATION	check that empty dataset is handled OK
WITHOUT_CLASSIFICATION	and that simple aggregation works
WITHOUT_CLASSIFICATION	an empty dataset should return a null max
WITHOUT_CLASSIFICATION	an empty dataset should return a null max
WITHOUT_CLASSIFICATION	null dataset throws IllegalArgumentException
WITHOUT_CLASSIFICATION	null list throws IllegalArgumentException
WITHOUT_CLASSIFICATION	null range throws IllegalArgumentException
WITHOUT_CLASSIFICATION	empty dataset returns null
WITHOUT_CLASSIFICATION	add an empty series
WITHOUT_CLASSIFICATION	check a null value
WITHOUT_CLASSIFICATION	check a NaN
WITHOUT_CLASSIFICATION	check another regular value
WITHOUT_CLASSIFICATION	add a second series
WITHOUT_CLASSIFICATION	add a value to the second series
WITHOUT_CLASSIFICATION	add a value that isn't in the xRange
WITHOUT_CLASSIFICATION	try some nulls
WITHOUT_CLASSIFICATION	an empty dataset should return null for bounds
WITHOUT_CLASSIFICATION	try a dataset with a single value
WITHOUT_CLASSIFICATION	try a dataset with two values
WITHOUT_CLASSIFICATION	try a Double.NaN
WITHOUT_CLASSIFICATION	try a Double.NEGATIVE_INFINITY
WITHOUT_CLASSIFICATION	overwrite the value
WITHOUT_CLASSIFICATION	test independence
WITHOUT_CLASSIFICATION	now overwrite this item with another
WITHOUT_CLASSIFICATION	try null list
WITHOUT_CLASSIFICATION	try a list containing a single value
WITHOUT_CLASSIFICATION	try null array
WITHOUT_CLASSIFICATION	try an array containing no items
WITHOUT_CLASSIFICATION	try an array containing a single Number
WITHOUT_CLASSIFICATION	try an array containing a single Number and a null
WITHOUT_CLASSIFICATION	try an array containing a single Number and a NaN
WITHOUT_CLASSIFICATION	try a null argument
WITHOUT_CLASSIFICATION	OK
WITHOUT_CLASSIFICATION	try null argument
WITHOUT_CLASSIFICATION	test independence
WITHOUT_CLASSIFICATION	try an empty collection
WITHOUT_CLASSIFICATION	try a collection with a single number
WITHOUT_CLASSIFICATION	try a collection with a single number plus a NaN
WITHOUT_CLASSIFICATION	try a collection with several numbers
WITHOUT_CLASSIFICATION	a Collection containing a NaN will return Double.NaN for the result
WITHOUT_CLASSIFICATION	check null list
WITHOUT_CLASSIFICATION	check empty list
WITHOUT_CLASSIFICATION	check list containing null
WITHOUT_CLASSIFICATION	try zero length array
WITHOUT_CLASSIFICATION	try single value
WITHOUT_CLASSIFICATION	locale shouldn't matter here
WITHOUT_CLASSIFICATION	try null calendar
WITHOUT_CLASSIFICATION	try null calendar
WITHOUT_CLASSIFICATION	try deleting a time period that doesn't exist...
WITHOUT_CLASSIFICATION	try deleting null
WITHOUT_CLASSIFICATION	copy a range before the start of the series data...
WITHOUT_CLASSIFICATION	copy a range that includes only the first item in the series...
WITHOUT_CLASSIFICATION	copy a range that begins before and ends in the middle of the series...
WITHOUT_CLASSIFICATION	copy just the first item...
WITHOUT_CLASSIFICATION	copy the first two items...
WITHOUT_CLASSIFICATION	copy the middle three items...
WITHOUT_CLASSIFICATION	copy the last two items...
WITHOUT_CLASSIFICATION	copy the last item...
WITHOUT_CLASSIFICATION	check negative first argument
WITHOUT_CLASSIFICATION	TimeSeries result =
WITHOUT_CLASSIFICATION	TimeSeries result =
WITHOUT_CLASSIFICATION	check second argument less than first argument
WITHOUT_CLASSIFICATION	changing the overwritten record shouldn't affect the series
WITHOUT_CLASSIFICATION	changing the item that was added should not change the series
WITHOUT_CLASSIFICATION	can't get anything yet...just an exception
WITHOUT_CLASSIFICATION	TimeSeriesDataItem item =
WITHOUT_CLASSIFICATION	item =
WITHOUT_CLASSIFICATION	TimeSeriesDataItem item =
WITHOUT_CLASSIFICATION	test empty series
WITHOUT_CLASSIFICATION	test series with one item
WITHOUT_CLASSIFICATION	test series with two items
WITHOUT_CLASSIFICATION	milliseconds somewhere in 2006
WITHOUT_CLASSIFICATION	test a series with 1 item
WITHOUT_CLASSIFICATION	test a series with two items
WITHOUT_CLASSIFICATION	this line triggers the defect
WITHOUT_CLASSIFICATION	check that removing by index also works
WITHOUT_CLASSIFICATION	null items are ignored
WITHOUT_CLASSIFICATION	if there are only null items, we get a NaNRange
WITHOUT_CLASSIFICATION	locale should not matter here
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	try null calendar
WITHOUT_CLASSIFICATION	try null calendar
WITHOUT_CLASSIFICATION	try null calendar
WITHOUT_CLASSIFICATION	locale should not matter here
WITHOUT_CLASSIFICATION	locale should not matter here
WITHOUT_CLASSIFICATION	test 3...
WITHOUT_CLASSIFICATION	test 1...
WITHOUT_CLASSIFICATION	test 1...
WITHOUT_CLASSIFICATION	domain description - null
WITHOUT_CLASSIFICATION	test 2...
WITHOUT_CLASSIFICATION	a null item should throw an IllegalArgumentException
WITHOUT_CLASSIFICATION	Quarter q =
WITHOUT_CLASSIFICATION	Quarter q =
WITHOUT_CLASSIFICATION	range description
WITHOUT_CLASSIFICATION	domain description
WITHOUT_CLASSIFICATION	check dataset with one time period
WITHOUT_CLASSIFICATION	check empty dataset
WITHOUT_CLASSIFICATION	range description - null
WITHOUT_CLASSIFICATION	check dataset with one time period
WITHOUT_CLASSIFICATION	check empty dataset
WITHOUT_CLASSIFICATION	add a fourth time period
WITHOUT_CLASSIFICATION	add a third time period
WITHOUT_CLASSIFICATION	check dataset with two time periods
WITHOUT_CLASSIFICATION	check dataset with two time periods
WITHOUT_CLASSIFICATION	first day of week is Sunday
WITHOUT_CLASSIFICATION	first day of week is monday
WITHOUT_CLASSIFICATION	try null zone
WITHOUT_CLASSIFICATION	add series to collection 1, should be not equal
WITHOUT_CLASSIFICATION	newly created collections should be equal
WITHOUT_CLASSIFICATION	now add the same series to collection 2 to make them equal again...
WITHOUT_CLASSIFICATION	now remove series 2 from collection 2
WITHOUT_CLASSIFICATION	now remove series 2 from collection 1 to make them equal again
WITHOUT_CLASSIFICATION	for a series with no data, we expect {-1, -1}...
WITHOUT_CLASSIFICATION	now test with a single value in the series...
WITHOUT_CLASSIFICATION	now add a second value to the series...
WITHOUT_CLASSIFICATION	now add a third value to the series...
WITHOUT_CLASSIFICATION	TimeSeries s =
WITHOUT_CLASSIFICATION	correct outcome
WITHOUT_CLASSIFICATION	wrong outcome
WITHOUT_CLASSIFICATION	store the current time zone
WITHOUT_CLASSIFICATION	restore the default time zone
WITHOUT_CLASSIFICATION	when the dataset contains no series, we expect the range to be null
WITHOUT_CLASSIFICATION	tests with values
WITHOUT_CLASSIFICATION	adding a second series
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	x
WITHOUT_CLASSIFICATION	y
WITHOUT_CLASSIFICATION	period
WITHOUT_CLASSIFICATION	autoSort
WITHOUT_CLASSIFICATION	autoSort
WITHOUT_CLASSIFICATION	add a value
WITHOUT_CLASSIFICATION	add a value
WITHOUT_CLASSIFICATION	add another value
WITHOUT_CLASSIFICATION	add another value
WITHOUT_CLASSIFICATION	try a dataset with some content...
WITHOUT_CLASSIFICATION	try a dataset with some content...
WITHOUT_CLASSIFICATION	add an empty series
WITHOUT_CLASSIFICATION	locale shouldn't matter here
WITHOUT_CLASSIFICATION	try null calendar
WITHOUT_CLASSIFICATION	try null calendar
WITHOUT_CLASSIFICATION	locale should not matter here
WITHOUT_CLASSIFICATION	locale should not matter here
WITHOUT_CLASSIFICATION	test 1...
WITHOUT_CLASSIFICATION	test 1...
WITHOUT_CLASSIFICATION	test 1...
WITHOUT_CLASSIFICATION	test 2...
WITHOUT_CLASSIFICATION	test 2...
WITHOUT_CLASSIFICATION	test 2...
WITHOUT_CLASSIFICATION	test 3...
WITHOUT_CLASSIFICATION	test 3...
WITHOUT_CLASSIFICATION	correct outcome
WITHOUT_CLASSIFICATION	wrong outcome
WITHOUT_CLASSIFICATION	now test that the clone is independent of the original
WITHOUT_CLASSIFICATION	Make sure there's nothing left
WITHOUT_CLASSIFICATION	seriesKey
WITHOUT_CLASSIFICATION	seriesKey
WITHOUT_CLASSIFICATION	the moving average series has 7 items, the first three days (11, 12, 13 August are skipped)
WITHOUT_CLASSIFICATION	add a series
WITHOUT_CLASSIFICATION	seriesKey
WITHOUT_CLASSIFICATION	XYSeries s =
WITHOUT_CLASSIFICATION	remove a value
WITHOUT_CLASSIFICATION	remove a value
WITHOUT_CLASSIFICATION	remove a value
WITHOUT_CLASSIFICATION	and check the first series too...
WITHOUT_CLASSIFICATION	now add another series
WITHOUT_CLASSIFICATION	Comparable k =
WITHOUT_CLASSIFICATION	yLow
WITHOUT_CLASSIFICATION	allowDuplicateValues
WITHOUT_CLASSIFICATION	allowDuplicateValues
WITHOUT_CLASSIFICATION	check for series key out of bounds
WITHOUT_CLASSIFICATION	yHigh
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	x
WITHOUT_CLASSIFICATION	y
WITHOUT_CLASSIFICATION	default instances
WITHOUT_CLASSIFICATION	default instances
WITHOUT_CLASSIFICATION	autoSort
WITHOUT_CLASSIFICATION	add a value
WITHOUT_CLASSIFICATION	add another value
WITHOUT_CLASSIFICATION	try a dataset with some content...
WITHOUT_CLASSIFICATION	try a dataset with some content...
WITHOUT_CLASSIFICATION	try a dataset with some content...
WITHOUT_CLASSIFICATION	check that the clone doesn't share the same underlying arrays.
WITHOUT_CLASSIFICATION	check that the clone doesn't share the same underlying arrays.
WITHOUT_CLASSIFICATION	add an empty series
WITHOUT_CLASSIFICATION	try null calendar
WITHOUT_CLASSIFICATION	try null calendar
WITHOUT_CLASSIFICATION	try null calendar
WITHOUT_CLASSIFICATION	try null calendar
WITHOUT_CLASSIFICATION	wrong outcome
WITHOUT_CLASSIFICATION	wrong outcome
WITHOUT_CLASSIFICATION	tests with values
WITHOUT_CLASSIFICATION	seriesKey
WITHOUT_CLASSIFICATION	remove a value
WITHOUT_CLASSIFICATION	add a series
WITHOUT_CLASSIFICATION	XYSeries s =
WITHOUT_CLASSIFICATION	XYSeries s =
WITHOUT_CLASSIFICATION	and check the first series too...
WITHOUT_CLASSIFICATION	allowDuplicateValues
WITHOUT_CLASSIFICATION	check for series key out of bounds
WITHOUT_CLASSIFICATION	Comparable k =
WITHOUT_CLASSIFICATION	Comparable k =
WITHOUT_CLASSIFICATION	Comparable k =
WITHOUT_CLASSIFICATION	check that adding a series will overwrite the old series
WITHOUT_CLASSIFICATION	check that adding a series will overwrite the old series
WITHOUT_CLASSIFICATION	check that adding a series will overwrite the old series
WITHOUT_CLASSIFICATION	check null key
WITHOUT_CLASSIFICATION	check null key
WITHOUT_CLASSIFICATION	check null key
WITHOUT_CLASSIFICATION	try an index out of bounds
WITHOUT_CLASSIFICATION	now add some more data
WITHOUT_CLASSIFICATION	xLow
WITHOUT_CLASSIFICATION	xHigh
WITHOUT_CLASSIFICATION	first check that a valid renaming works
WITHOUT_CLASSIFICATION	next, check that setting a duplicate key fails
WITHOUT_CLASSIFICATION	create an array of items in reverse order
WITHOUT_CLASSIFICATION	got the required exception
WITHOUT_CLASSIFICATION	set a theme using the new shadow generator feature available in 1.0.14 - for backwards compatibility it is not enabled by default
WITHOUT_CLASSIFICATION	call parent method setup flag based on bounds values
WITHOUT_CLASSIFICATION	if flag then change to log version of lowest value to make range begin at a 10^n value:
WITHOUT_CLASSIFICATION	if less than 1.0 then make it 1.0 add in margin and get exponential value:
WITHOUT_CLASSIFICATION	negatives not allowed and upper bound between 0 & 1 round up to nearest significant digit for bound: get negative exponent:
WITHOUT_CLASSIFICATION	not first tick to be displayed no tick label
WITHOUT_CLASSIFICATION	check independence
WITHOUT_CLASSIFICATION	x
WITHOUT_CLASSIFICATION	y
WITHOUT_CLASSIFICATION	default instances
WITHOUT_CLASSIFICATION	TBLRC 00000 - no items
WITHOUT_CLASSIFICATION	try a few checks to ensure that the clone is independent of the original
WITHOUT_CLASSIFICATION	autoSort
WITHOUT_CLASSIFICATION	add a value
WITHOUT_CLASSIFICATION	add another value
WITHOUT_CLASSIFICATION	add an empty series
WITHOUT_CLASSIFICATION	now we should be allowed to change s1's key to anything but "S2"
WITHOUT_CLASSIFICATION	after s1 is removed from the collection, we should be able to set the key to anything we want...
WITHOUT_CLASSIFICATION	check that removing by index also works
WITHOUT_CLASSIFICATION	correct outcome
WITHOUT_CLASSIFICATION	wrong outcome
WITHOUT_CLASSIFICATION	remove a value
WITHOUT_CLASSIFICATION	add a series
WITHOUT_CLASSIFICATION	XYSeries s =
WITHOUT_CLASSIFICATION	yLow
WITHOUT_CLASSIFICATION	yHigh
WITHOUT_CLASSIFICATION	xLow
WITHOUT_CLASSIFICATION	xHigh
WITHOUT_CLASSIFICATION	when the dataset contains no series, we expect the value range to be null
WITHOUT_CLASSIFICATION	when the dataset contains one or more series, but those series contain no items, we expect the value range to be null
WITHOUT_CLASSIFICATION	the series name should not change because "C" is already the key for the other series in the collection
WITHOUT_CLASSIFICATION	Test that there are 6 X points and some specific values
WITHOUT_CLASSIFICATION	after adding a point to a series, check that there are now 7 items in each series
WITHOUT_CLASSIFICATION	Remove series 1
WITHOUT_CLASSIFICATION	Test that there are still 7 X points
WITHOUT_CLASSIFICATION	Remove series 2 and add new series
WITHOUT_CLASSIFICATION	Test that there are now 4 X points
WITHOUT_CLASSIFICATION	WITH AUTOPRUNING
WITHOUT_CLASSIFICATION	should be 2 items
WITHOUT_CLASSIFICATION	should be 2 items
WITHOUT_CLASSIFICATION	still 2
WITHOUT_CLASSIFICATION	still 2
WITHOUT_CLASSIFICATION	1 value pruned.
WITHOUT_CLASSIFICATION	WITHOUT AUTOPRUNING
WITHOUT_CLASSIFICATION	still 2.
WITHOUT_CLASSIFICATION	More than 150 demo applications are included with the JFreeChart Developer Guide...for more information, see: > http:www.object-refinery.com/jfreechart/guide.html
WITHOUT_CLASSIFICATION	here we do a check to see if the user is installing the "Legacy" theme, and reset the bar painters in that case...
WITHOUT_CLASSIFICATION	since the flow layout is relatively straightforward, no information needs to be recorded here
WITHOUT_CLASSIFICATION	nothing is drawn if the row index is not included in the list with the indices of the visible rows...
WITHOUT_CLASSIFICATION	calculate the bar width - this calculation differs from the BarRenderer calculation because the bars are layered on top of one another, so there is effectively only one bar per category for the purpose of the bar width calculation
WITHOUT_CLASSIFICATION	the link area defines the dog leg points for the linking lines to the labels
WITHOUT_CLASSIFICATION	if the current stroke is not a BasicStroke then it is handled as a special case
WITHOUT_CLASSIFICATION	after setting up all the subplots, the shared range axis may need reconfiguring
WITHOUT_CLASSIFICATION	if there is an existing dataset, remove the plot from the list of change listeners...
WITHOUT_CLASSIFICATION	the segment is entirely at the front of the chart
WITHOUT_CLASSIFICATION	starts at back and wraps right around to the back again
WITHOUT_CLASSIFICATION	if the source point doesn't fall within a subplot, we do the zoom on all subplots...
WITHOUT_CLASSIFICATION	double range = this.domainAxis.getRange().getLength(); double scaledRange = range percent; domainAxis.setAnchoredRange(scaledRange);
WITHOUT_CLASSIFICATION	the anchor point is typically the point where the mouse last clicked - the crosshairs will be driven off this point...
WITHOUT_CLASSIFICATION	axisIndices can be: 1. null; 2. non-empty, containing only Integer objects that are unique.
WITHOUT_CLASSIFICATION	if this cell held a maximum and/or minimum value, we'll need to update the cached bounds...
WITHOUT_CLASSIFICATION	if the 'notify' flag has been switched to false, we don't notify the listeners
WITHOUT_CLASSIFICATION	private Plot parent <-- don't clone the parent plot, but take care childs in combined plots instead
WITHOUT_CLASSIFICATION	For the case were the first tick is greater than minZ
WITHOUT_CLASSIFICATION	add an entity for the item, but only if it falls within the data area...
WITHOUT_CLASSIFICATION	we create an event with a special flag set...the purpose of this is to communicate to the plot (the default receiver of the event) that series visibility has changed so the axis ranges might need updating...
WITHOUT_CLASSIFICATION	when the x-values are sorted in descending order, the lower bound is found by calculating relative to the xHigh value
WITHOUT_CLASSIFICATION	nothing is drawn if the row index is not included in the list with the indices of the visible rows...
WITHOUT_CLASSIFICATION	try null calendar
WITHOUT_CLASSIFICATION	try null calendar
WITHOUT_CLASSIFICATION	try null calendar
WITHOUT_CLASSIFICATION	try null calendar
WITHOUT_CLASSIFICATION	nothing is drawn if the row index is not included in the list with the indices of the visible rows...
WITHOUT_CLASSIFICATION	/ From HighLowDataset /
WITHOUT_CLASSIFICATION	handle a special case - if the bar colour has alpha == 0, it is invisible so we shouldn't draw any shadow
WITHOUT_CLASSIFICATION	handle a special case - if the bar colour has alpha == 0, it is invisible so we shouldn't draw any shadow
WITHOUT_CLASSIFICATION	if the dataset is not a StatisticalCategoryDataset then just revert to the superclass (LineAndShapeRenderer) behaviour...
WITHOUT_CLASSIFICATION	FIXME: add setSeriesToolTipGenerator(int, CategoryToolTipGenerator, boolean) ?
WITHOUT_CLASSIFICATION	average radius outlier radius
WITHOUT_CLASSIFICATION	false preserves the old behaviour prior to introducing this flag
WITHOUT_CLASSIFICATION	These are deliberately not bounded to minimums/maxCandleWidth to retain old behaviour.
WITHOUT_CLASSIFICATION	the noCodeBaseClassLoader is configured by a call to the removeCodeBase() method, typically in the init() method of an applet...
WITHOUT_CLASSIFICATION	the noCodeBaseClassLoader is configured by a call to the removeCodeBase() method, typically in the init() method of an applet...
WITHOUT_CLASSIFICATION	deregister the collection as a change listener to each series in the collection.
WITHOUT_CLASSIFICATION	handle the special case where the dataset has y-intervals that we want to measure
WITHOUT_CLASSIFICATION	CASE 3 : Comparing to a non-TimePeriod object ---------------------------------------------
WITHOUT_CLASSIFICATION	CASE 1 : Comparing to another Second object -------------------------------------------
WITHOUT_CLASSIFICATION	try null calendar
WITHOUT_CLASSIFICATION	end period is not in original series this is first item AFTER end period so this is last item BEFORE end
WITHOUT_CLASSIFICATION	the first initialization must precede creation of the ValueSet array: establishes length of each array
WITHOUT_CLASSIFICATION	try null calendar
WITHOUT_CLASSIFICATION	try null calendar
WITHOUT_CLASSIFICATION	here we check that the average marker will in fact be visible before drawing it...
WITHOUT_CLASSIFICATION	draw outliers outlier radius
WITHOUT_CLASSIFICATION	NULL value -> insert point on base line instead of 'step point'
WITHOUT_CLASSIFICATION	coordinate pairs current minuend point next minuend point current subtrahend point next subtrahend point
WITHOUT_CLASSIFICATION	the intersect is at the next point for both the minuend and subtrahend
WITHOUT_CLASSIFICATION	create the polygon add the minuend's points to polygon
WITHOUT_CLASSIFICATION	the following code handles the line for the y-values...it's all done by code in the super class
WITHOUT_CLASSIFICATION	Check if the item is the last item for the series and number of items > 0. We can't draw an area for a single point.
WITHOUT_CLASSIFICATION	use item paint for outlines by default, not outline paint
WITHOUT_CLASSIFICATION	add an entity for the item, but only if it falls within the data area...
WITHOUT_CLASSIFICATION	the bounds should be calculated using just the items within the current range of the x-axis...if there is one
WITHOUT_CLASSIFICATION	We organise the data with the following assumption: 1) the data are sorted by x then y 2) that the data will be represented by a rectangle formed by using x[i+1], x, y[j+1], and y. 3) we march along the y-axis at the same value of x until a new value x is found at which point we will flag the index where x[i+1]<>x[i]
WITHOUT_CLASSIFICATION	try null calendar
WITHOUT_CLASSIFICATION	try null calendar
WITHOUT_CLASSIFICATION	try null calendar
WITHOUT_CLASSIFICATION	try null calendar
WITHOUT_CLASSIFICATION	create the new color and set it to the SwtPaintCanvas
WITHOUT_CLASSIFICATION	try null calendar
WITHOUT_CLASSIFICATION	we're doing this for testing only, and make sure that we only add data in ascending order by x-value
WITHOUT_CLASSIFICATION	try null calendar
WITHOUT_CLASSIFICATION	try null calendar
WITHOUT_CLASSIFICATION	try null calendar
WITHOUT_CLASSIFICATION	have to use a subclass of AbstractRenderer
WITHOUT_CLASSIFICATION	include legend tooltips urls
WITHOUT_CLASSIFICATION	setup our test timelines Legend for comments below: <spaces> = Segments included in the final timeline EE = Excluded segments via timeline rules xx = Exception segments inherited from base timeline exclusions
WITHOUT_CLASSIFICATION	test exception segments
WITHOUT_CLASSIFICATION	we use ValueMarker for the tests, because we need a concrete subclass...
WITHOUT_CLASSIFICATION	now check that all datasets, renderers and axes are being listened too...
WITHOUT_CLASSIFICATION	now check that all datasets, renderers and axes are being listened too...
WITHOUT_CLASSIFICATION	after clearing, reverts to default group
WITHOUT_CLASSIFICATION	regular equality for the datasets doesn't check the fields, just the data values...so let's check some more things...
WITHOUT_CLASSIFICATION	these methods should throw an IndexOutOfBoundsException since the column is too high...
WITHOUT_CLASSIFICATION	this replaces the entry with the current minimum value, but the new minimum value is now in a different item
WITHOUT_CLASSIFICATION	the dataset should prevent the addition of a series with the same name as an existing series in the dataset
WITHOUT_CLASSIFICATION	item =
WITHOUT_CLASSIFICATION	test empty series
WITHOUT_CLASSIFICATION	now we should be allowed to change s1's key to anything but "S2"
WITHOUT_CLASSIFICATION	after s1 is removed from the collection, we should be able to set the key to anything we want...
WITHOUT_CLASSIFICATION	locale should not matter here
WITHOUT_CLASSIFICATION	correct outcome
WITHOUT_CLASSIFICATION	correct outcome
WITHOUT_CLASSIFICATION	wrong outcome
WITHOUT_CLASSIFICATION	when the dataset contains one or more series, but those series contain no items, we still expect the range to be null
WITHOUT_CLASSIFICATION	tests with values
WITHOUT_CLASSIFICATION	tests with values
WITHOUT_CLASSIFICATION	seriesKey
WITHOUT_CLASSIFICATION	open
WITHOUT_CLASSIFICATION	add a series
WITHOUT_CLASSIFICATION	allowDuplicateValues
WITHOUT_CLASSIFICATION	check for series key out of bounds
WITHOUT_CLASSIFICATION	check for series key out of bounds
WITHOUT_CLASSIFICATION	Comparable k =
WITHOUT_CLASSIFICATION	Comparable k =
WITHOUT_CLASSIFICATION	Comparable k =
WITHOUT_CLASSIFICATION	Comparable k =
WITHOUT_CLASSIFICATION	when the dataset contains no series, we expect the value range to be null
WITHOUT_CLASSIFICATION	when the dataset contains no series, we expect the value range to be null
WITHOUT_CLASSIFICATION	when the dataset contains one or more series, but those series contain no items, we expect the value range to be null
WITHOUT_CLASSIFICATION	when the dataset contains one or more series, but those series contain no items, we expect the value range to be null
WITHOUT_CLASSIFICATION	complicate things a little...
WITHOUT_CLASSIFICATION	seem to be the same...
WITHOUT_CLASSIFICATION	what is our alignment?
WITHOUT_CLASSIFICATION	what is our alignment?
WITHOUT_CLASSIFICATION	seem to be the same...
WITHOUT_CLASSIFICATION	slope
WITHOUT_CLASSIFICATION	complicate things a little...
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.swt.events.FocusListener#focusGained( org.eclipse.swt.events.FocusEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.eclipse.swt.events.FocusListener#focusLost( org.eclipse.swt.events.FocusEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.jfree.chart.axis.LogarithmicAxis#switchedLog10(double)
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	find out where to place the label...
WITHOUT_CLASSIFICATION	find out where to place the label...
WITHOUT_CLASSIFICATION	Anwender hat abgebrochen.
WITHOUT_CLASSIFICATION	insets
WITHOUT_CLASSIFICATION	insets
WITHOUT_CLASSIFICATION	...but this does!
WITHOUT_CLASSIFICATION	insets
WITHOUT_CLASSIFICATION	check defaults
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	OK
TEST	Need better test for Windows
WITHOUT_CLASSIFICATION	private MainFrame _mainFrame;
WITHOUT_CLASSIFICATION	Setup the applications Look and Feel.
WITHOUT_CLASSIFICATION	i18n[Application.error.closeFileViewers=Unable to close all file viewers]
WITHOUT_CLASSIFICATION	Save options selected for DataType-specific properties
WITHOUT_CLASSIFICATION	return _mainFrame;
WITHOUT_CLASSIFICATION	_mainFrame = new MainFrame(this);
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	i18n[Application.splash.showmainwindow=Showing main window...]
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	i18n[oracle.sqlText=SQL Text]
WITHOUT_CLASSIFICATION	i18n[Application.error.loadsqlhistory=Unable to load SQL history from persistant storage.]
WITHOUT_CLASSIFICATION	History file not found for user - first time user ran pgm.
WITHOUT_CLASSIFICATION	i18n[Application.error.savesqlhistory=Unable to write SQL queries to persistant storage.]
WITHOUT_CLASSIFICATION	Get the history into an array.
WITHOUT_CLASSIFICATION	Cell Import/Export file not found for user - first time user ran pgm.
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	i18n[Application.error.writecellselections=Unable to write Cell Import/Export options to persistant storage.]
WITHOUT_CLASSIFICATION	Cell Import/Export file not found for user - first time user ran pgm.
WITHOUT_CLASSIFICATION	Cell Import/Export file not found for user - first time user ran pgm.
WITHOUT_CLASSIFICATION	nothing needed here??
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	nothing needed here??
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	i18n[Application.error.savedatatypeprops=Unable to write DataType properties to persistant storage.]
WITHOUT_CLASSIFICATION	Don't prevent the user from overriding the laf is they choose to use Swing's default laf prop
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	i18n[Application.info.setjdbcdebuglog=Attempting to set JDBC debug log to output stream]
WITHOUT_CLASSIFICATION	If logging has changed.
WITHOUT_CLASSIFICATION	Close any previous logging.
WITHOUT_CLASSIFICATION	Generic SQL
WITHOUT_CLASSIFICATION	set up array to return for public access to cmd line args
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	ISession[] getActiveSessions();
WITHOUT_CLASSIFICATION	add(new DropSelectedTablesAction(_app));
WITHOUT_CLASSIFICATION	i18n[LogPanel.titleInfo=Last log entry (Entry type: Info)]
WITHOUT_CLASSIFICATION	i18n[LogPanel.titleWarn=Last log entry (Entry type: Warning)]
WITHOUT_CLASSIFICATION	i18n[LogPanel.logMsg=Logged by {0} at {1}:\n\n {2}]
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	i18n[LogPanel.titleUnknown=Last log entry (Entry type: Unknown)]
WITHOUT_CLASSIFICATION	i18n[MemoryPanel.memSize={0} of {1} MB];
WITHOUT_CLASSIFICATION	paintNumWaitingGC(g);
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	i18n[oracle.rows=Rows]
WITHOUT_CLASSIFICATION	i18n[oracle.bufferGets=Buffer Gets]
WITHOUT_CLASSIFICATION	i18n[oracle.diskReadsPerRow=Disk Reads per Row]
WITHOUT_CLASSIFICATION	private final AliasWindowFactory _aliasWinFactory;
WITHOUT_CLASSIFICATION	Oracle SQL
WITHOUT_CLASSIFICATION	private int _lastSessionIdx = 1;
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	i18n[WindowManager.registerSessionSheet=Registering {0} in WindowManager]
WITHOUT_CLASSIFICATION	Store ptr to newly open window in list of windows per session.
WITHOUT_CLASSIFICATION	Set the cell Width to the width of the header
WITHOUT_CLASSIFICATION	left
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	bottom
WITHOUT_CLASSIFICATION	Regression for HARMONY-2146
WITHOUT_CLASSIFICATION	i18n[WindowManager.error.bringtofront=Error bringing internal frame to the front]
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	end else
WITHOUT_CLASSIFICATION	mockDatabaseMetaData
WITHOUT_CLASSIFICATION	IAliasesList al = getAliasesListInternalFrame().getAliasesList();
WITHOUT_CLASSIFICATION	_driversListWindow.nowVisible(true);
WITHOUT_CLASSIFICATION	regression test for HARMONY-1497
WITHOUT_CLASSIFICATION	i18n[WindowManager.errorselectingwindow=Error selecting window]
WITHOUT_CLASSIFICATION	_driversListWindow.nowVisible(false);
WITHOUT_CLASSIFICATION	Add an item to the Windows menu for this window and store the menu item back in the internal frame.
WITHOUT_CLASSIFICATION	Enable/Disable actions that require open session frames.
WITHOUT_CLASSIFICATION	Only remove the frame if the entire session is not closing
WITHOUT_CLASSIFICATION	Remove menu item from Windows menu that relates to this internal frame.
WITHOUT_CLASSIFICATION	Enable/Disable actions that require open session frames.
WITHOUT_CLASSIFICATION	Add the message handler to the session
WITHOUT_CLASSIFICATION	Allocate the current session to the actions.
WITHOUT_CLASSIFICATION	Make sure that the session menu is enabled.
WITHOUT_CLASSIFICATION	Clear session info from all actions.
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	GUIUtils.setJButtonSizesTheSame(new JButton[] {_okBtn, _closeBtn, new JButton(i18n.CANCEL)});
WITHOUT_CLASSIFICATION	i18n
WITHOUT_CLASSIFICATION	builder.addGridded(new JButton("Alter")); builder.addRelatedGap();
WITHOUT_CLASSIFICATION	setPreferredSize(new Dimension(400, 400));
WITHOUT_CLASSIFICATION	Copys the gathered values into the lookup table.
WITHOUT_CLASSIFICATION	TABLE
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Causes NPE in JDK 1.3.1 _contentsTxt.setText("");
WITHOUT_CLASSIFICATION	Lazily create the event.
WITHOUT_CLASSIFICATION	Lazily create the event.
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.help=Help]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.squirrel=SQuirreL]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.changelogs=Change Logs]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.error.loadwelcomefile=Error retrieving Help file URL for {0}]
WITHOUT_CLASSIFICATION	Add SQuirreL Licence to the Licence node.
WITHOUT_CLASSIFICATION	Strip local part of URL.
WITHOUT_CLASSIFICATION	Renderer for tree.
WITHOUT_CLASSIFICATION	&& node != _tree.getLastSelectedPathComponent())
WITHOUT_CLASSIFICATION	Add SQuirreL help to the Help node.
WITHOUT_CLASSIFICATION	First put the Welcome to SQuirreL node.
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.squirrel=SQuirreL]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.error.loadchangelogfile=Error retrieving Change Log file URL for {0}]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.squirrel=SQuirreL]
WITHOUT_CLASSIFICATION	Add SQuirreL Change Log to the Licence node.
WITHOUT_CLASSIFICATION	generate contents file.
WITHOUT_CLASSIFICATION	Add plugin help, licence and change log documents to the tree.
WITHOUT_CLASSIFICATION	Licence document.
WITHOUT_CLASSIFICATION	Help document.
WITHOUT_CLASSIFICATION	FAQ.
WITHOUT_CLASSIFICATION	Change log.
WITHOUT_CLASSIFICATION	final String docTitle = (String)_docTitles.get(i);
WITHOUT_CLASSIFICATION	Using a thread for this gets rid of most of the "white flash".
WITHOUT_CLASSIFICATION	Stop refresh if it is running.
WITHOUT_CLASSIFICATION	i18n[ViewLogsSheet.error.processinglogfile=Error occured processing log file]
WITHOUT_CLASSIFICATION	i18n[ViewLogsSheet.info.nulllogfile=Null log file name]
WITHOUT_CLASSIFICATION	Position to the start of the last line in log.
WITHOUT_CLASSIFICATION	i18n[ViewLogsSheet.error.setcaret=Error positioning caret in log text component]
WITHOUT_CLASSIFICATION	_logContentsTxt.setEditable(false);
WITHOUT_CLASSIFICATION	, true, true, true, true);
WITHOUT_CLASSIFICATION	throws IOException
WITHOUT_CLASSIFICATION	viewer.addInternalFrameListener(_lis);
WITHOUT_CLASSIFICATION	private final class MyInternalFrameListener extends InternalFrameAdapter
WITHOUT_CLASSIFICATION	removeViewer((HtmlViewerSheet)evt.getInternalFrame());
WITHOUT_CLASSIFICATION	super.internalFrameClosed(evt);
WITHOUT_CLASSIFICATION	Empty method.
WITHOUT_CLASSIFICATION	Settings Gap Sizes
WITHOUT_CLASSIFICATION	Filling Columns
WITHOUT_CLASSIFICATION	Appending Labels with optional components ------------------------------
WITHOUT_CLASSIFICATION	Appending internationalized labels with optional components ------------
WITHOUT_CLASSIFICATION	Adding Titles ----------------------------------------------------------
WITHOUT_CLASSIFICATION	Appending Separators ---------------------------------------------------
WITHOUT_CLASSIFICATION	Instance Creation
WITHOUT_CLASSIFICATION	Overriding Superclass Behavior
WITHOUT_CLASSIFICATION	Adding Rows
WITHOUT_CLASSIFICATION	Adding Labels and Separators
WITHOUT_CLASSIFICATION	Helper Code
WITHOUT_CLASSIFICATION	setRenderer(new CellRenderer());
WITHOUT_CLASSIFICATION	private SQLDriverPropertyCollection _props = new SQLDriverPropertyCollection();
WITHOUT_CLASSIFICATION	loadDriverProperties();
WITHOUT_CLASSIFICATION	i18n[ColumnListDialog.dropPrimaryKeyTitle=Drop Primary Key]
WITHOUT_CLASSIFICATION	Columns
WITHOUT_CLASSIFICATION	_useDriverPropsChk.setSelected(_alias.getUseDriverProperties()); _driverPropsBtn.setEnabled(_useDriverPropsChk.isSelected()); This is mainly for long URLs that cannot be fully displayed in the label.
WITHOUT_CLASSIFICATION	abort first..
WITHOUT_CLASSIFICATION	Set focus to password control if default user name has been setup.
WITHOUT_CLASSIFICATION	Rows
WITHOUT_CLASSIFICATION	i18n[ColumnListDialog.modifyTitle=Select Column To Modify]
WITHOUT_CLASSIFICATION	Table name
WITHOUT_CLASSIFICATION	Column list
WITHOUT_CLASSIFICATION	User cannot be allowed to drop all columns from a table
WITHOUT_CLASSIFICATION	Removed for reformatting
WITHOUT_CLASSIFICATION	Means load all Schemas from database.
WITHOUT_CLASSIFICATION	current Schema says don't load
WITHOUT_CLASSIFICATION	Removed for duplicate line
WITHOUT_CLASSIFICATION	private SQLDriverPropertyCollection _sqlDriverProps;
WITHOUT_CLASSIFICATION	Removed for comment
WITHOUT_CLASSIFICATION	i18n[AliasInternalFrame.illegalValue=Illegal value of {0} passed for Maintenance type]
WITHOUT_CLASSIFICATION	_useDriverPropsChk.setSelected(_sqlAlias.getUseDriverProperties());
WITHOUT_CLASSIFICATION	This is a tool window.
WITHOUT_CLASSIFICATION	Title label at top.
WITHOUT_CLASSIFICATION	Separated by a line.
WITHOUT_CLASSIFICATION	Separated by a line.
WITHOUT_CLASSIFICATION	Next the buttons.
WITHOUT_CLASSIFICATION	make it grow when added
WITHOUT_CLASSIFICATION	i18n[AliasInternalFrame.error.sessioncreation=Test Button has created a session, this is a programming error]
WITHOUT_CLASSIFICATION	Empty.
WITHOUT_CLASSIFICATION	i18n[AliasWindowFactory.error.copyAlias=Error occured copying the alias]
WITHOUT_CLASSIFICATION	i18n[AliasWindowFactory.schemaPropsCopiedWarning=Warning: Your target Alias contains database specific Schema properties copied from the source Alias.\n Schema loading of the target Alias may be errorneous. Please check your target Alias's Schema properties.]
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	Add listener to listen for items added/removed from list.
WITHOUT_CLASSIFICATION	select the one just added.
WITHOUT_CLASSIFICATION	Only a single selection can be made at a time.
WITHOUT_CLASSIFICATION	More than one selection is allowed - check to see if we should change the selection
WITHOUT_CLASSIFICATION	_driversList = new DriversList(app);
WITHOUT_CLASSIFICATION	_tb.add(actions.get(ShowLoadedDriversOnlyAction.class));
WITHOUT_CLASSIFICATION	To change body of overridden methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	_tree.expandPath(new TreePath(newFolder.getPath()));
WITHOUT_CLASSIFICATION	Not required.
WITHOUT_CLASSIFICATION	first time user has run pgm.
WITHOUT_CLASSIFICATION	If this happens then this is a programming error as we said in the above call to ingore these errors.
WITHOUT_CLASSIFICATION	i18n[DriverInternalFrame.error.illegalvalue=Illegal value of {0} passed for Maintenance type]
WITHOUT_CLASSIFICATION	This is a tool window.
WITHOUT_CLASSIFICATION	Title label at top.
WITHOUT_CLASSIFICATION	first time user has run pgm.
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	Separated by a line.
WITHOUT_CLASSIFICATION	Separated by a line.
WITHOUT_CLASSIFICATION	Reset the background to the colour that the current Look and Feel uses for internal frames.
WITHOUT_CLASSIFICATION	_javaClassPathList.addListSelectionListener(new JavaClassPathListBoxListener());
WITHOUT_CLASSIFICATION	Scrollbars are "shown always" to stop sheet resizing when they are shown/hidden.
WITHOUT_CLASSIFICATION	This can take a long time for big jars - so it is not done on the EDT.
WITHOUT_CLASSIFICATION	Removed for uncomment
WITHOUT_CLASSIFICATION	i18n[DriverWindowFactory.error.copyingdriver=Error occured copying the driver]
WITHOUT_CLASSIFICATION	Empty block.
WITHOUT_CLASSIFICATION	If the user wants to select for Right mouse clicks then change the selection before popup appears
WITHOUT_CLASSIFICATION	This is a tool window.
WITHOUT_CLASSIFICATION	Pane to add window content to.
WITHOUT_CLASSIFICATION	Put toolbar at top of window.
WITHOUT_CLASSIFICATION	The main list for window.
WITHOUT_CLASSIFICATION	List in the centre of the window.
WITHOUT_CLASSIFICATION	Add mouse listener for displaying popup menu.
WITHOUT_CLASSIFICATION	Removed for cut SQL
WITHOUT_CLASSIFICATION	Removed for copy SQL
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.columnNameLabel=Column Name: ]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.tableNameLabel=Table Name: ]
WITHOUT_CLASSIFICATION	Table name
WITHOUT_CLASSIFICATION	These are not used
WITHOUT_CLASSIFICATION	Column name
WITHOUT_CLASSIFICATION	Dialect list
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.columnCommentLabel={0} does not support column comments]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.columnNameTootTip={0} does not support altering column name]
WITHOUT_CLASSIFICATION	Length
WITHOUT_CLASSIFICATION	Type list
WITHOUT_CLASSIFICATION	Scale
WITHOUT_CLASSIFICATION	Precision
WITHOUT_CLASSIFICATION	Default value
WITHOUT_CLASSIFICATION	Nullable
WITHOUT_CLASSIFICATION	Comment
WITHOUT_CLASSIFICATION	i18n[ColorPropertiesController.hint=Set session colors for this Alias]
WITHOUT_CLASSIFICATION	i18n[ColorPropertiesController.title=Color Properties]
WITHOUT_CLASSIFICATION	Don't need tooltips any more.
WITHOUT_CLASSIFICATION	Register so that we can display different tooltips depending which entry in list mouse is over.
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesController.tableHeader.tables=Tables]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesController.tableHeader.views=Views]
WITHOUT_CLASSIFICATION	I18n[oracle.dbOutputTitle=Oracle DB output for: {0}]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesController.cacheToDelNotExists=Cache file for Alias "{0}" does not exist. No file was deleted]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesController.hint=Schemas (loading and caching)]
WITHOUT_CLASSIFICATION	i18n[AliasPropertiesInternalFrame.ok=OK]
WITHOUT_CLASSIFICATION	i18n[ColorPropertiesPanel.backgroundColorLabel=Background Color]
WITHOUT_CLASSIFICATION	i18n[AliasPropertiesInternalFrame.close=Close]
WITHOUT_CLASSIFICATION	Toolbar
WITHOUT_CLASSIFICATION	Object Tree
WITHOUT_CLASSIFICATION	Status Bar
WITHOUT_CLASSIFICATION	i18n[ColorPropertiesPanel.syncComponentBackgroundColorChkLabel=Use toolbar background color for all components]
WITHOUT_CLASSIFICATION	i18n[ColorPropertiesPanel.toolbarBackgroundColorBtnLabel=Choose Toolbar Color]
WITHOUT_CLASSIFICATION	Instructions
WITHOUT_CLASSIFICATION	Toolbar Color Checkbox
WITHOUT_CLASSIFICATION	Object Tree Color checkbox
WITHOUT_CLASSIFICATION	Object Tree Color checkbox
WITHOUT_CLASSIFICATION	Set object tree color button
WITHOUT_CLASSIFICATION	Set object tree color button
WITHOUT_CLASSIFICATION	Set toolbar color button
WITHOUT_CLASSIFICATION	Set object tree color panel
WITHOUT_CLASSIFICATION	Set object tree color panel
WITHOUT_CLASSIFICATION	Set toolbar color panel
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesPanel.loadAndCacheAll=Load all and cache all Schemas]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesPanel.CacheSchemaIndependentMetaData=Cache Schema independent meta data (Catalogs, Keywords, Data types, Global functions)]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesPanel.printCacheFileLocation=Print cache file path to message panel]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesPanel.deleteCache=Delete cache file]
WITHOUT_CLASSIFICATION	i18n
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesPanel.schemaTableUpdateApply=Apply]
WITHOUT_CLASSIFICATION	Turn off auto refresh when we are shutting down.
WITHOUT_CLASSIFICATION	I18n[DriverPropertiesController.loadingDriverFailed=Loading JDBC driver "{0}" failed.\nCan not load driver properties tab.]
WITHOUT_CLASSIFICATION	I18n[DriverPropertiesController.gettingDriverPropetiesFailed=Loading the properties from the JDBC driver failed.\nCan not load driver properties tab.]
WITHOUT_CLASSIFICATION	i18n[DriverPropertiesController.Hint=DriverProperties]
WITHOUT_CLASSIFICATION	i18n[DriverPropertiesController.title=DriverProperties]
WITHOUT_CLASSIFICATION	i18n[SchemaTableCboItem.schemaID.loadAndCache=Load and cache]
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	Removed for close Session
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	Size non-tool child window.
WITHOUT_CLASSIFICATION	tab button
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	implements ActionListener
WITHOUT_CLASSIFICATION	Make the button looks the same for all Laf's
WITHOUT_CLASSIFICATION	Make it transparent
WITHOUT_CLASSIFICATION	No need to be focusable
WITHOUT_CLASSIFICATION	Making nice rollover effect we use the same listener for all buttons
WITHOUT_CLASSIFICATION	Close the proper tab by clicking the button addActionListener(this);
WITHOUT_CLASSIFICATION	we don't want to update UI for this button
WITHOUT_CLASSIFICATION	paint the cross
WITHOUT_CLASSIFICATION	shift the image for pressed buttons
WITHOUT_CLASSIFICATION	Without this the split moves when the window is resized.
WITHOUT_CLASSIFICATION	Create spinner for update period
WITHOUT_CLASSIFICATION	i18n[oracle.Seconds2=(seconds)]
WITHOUT_CLASSIFICATION	i18n[FileEditorDropTargetListener.oneFileDropMessage=Only one file may be dropped onto the editor at a time.]
WITHOUT_CLASSIFICATION	Make sure a deselect is followed by a select when a new selected Tab exists.
WITHOUT_CLASSIFICATION	This event does not always hit the righr editor !? That's why we can't use _sqlEntryPanelIdentifier
WITHOUT_CLASSIFICATION	Check to see if the string is a file uri.
WITHOUT_CLASSIFICATION	Not a uri - assume it is a string filename.
WITHOUT_CLASSIFICATION	the line is a comment (as per the RFC 2483)
WITHOUT_CLASSIFICATION	malformed URI
WITHOUT_CLASSIFICATION	the URI is not a valid 'file:' URI
WITHOUT_CLASSIFICATION	light blue colors
WITHOUT_CLASSIFICATION	58, 110, 165); 189, 220, 251); 153, 179, 205);
WITHOUT_CLASSIFICATION	i18n[AllBluesBoldMetalTheme.name=All Blues - Bold]
WITHOUT_CLASSIFICATION	JASON: Messages height should be stored with this.
WITHOUT_CLASSIFICATION	BaseMDIParentFrame
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	...
WITHOUT_CLASSIFICATION	Initial load of prefs.
WITHOUT_CLASSIFICATION	i18n[MainFrame.saveSize=Save size]
WITHOUT_CLASSIFICATION	i18n[MainFrame.restoreSize=Restore saved size]
WITHOUT_CLASSIFICATION	Position window to where it was when last closed. If this is not on the screen, move it back on to the screen.
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	Under JDK1.4 an empty JComboBox has an almost zero width.
WITHOUT_CLASSIFICATION	_app.getDataCache().addAliasesListener(new MyAliasesListener(this));
WITHOUT_CLASSIFICATION	Under JDK1.4 an empty JComboBox has an almost zero width.
WITHOUT_CLASSIFICATION	Dont enable the session drop down if it is empty
WITHOUT_CLASSIFICATION	Needes to be done via event queque because adding the session to the drop down happens via the event queue too.
WITHOUT_CLASSIFICATION	private final JMenu _editMenu;
WITHOUT_CLASSIFICATION	SquirrelAction descriptions already contain the accelerator
WITHOUT_CLASSIFICATION	super.setVisible(value);
WITHOUT_CLASSIFICATION	_msgSplit.setDividerLocation(0.9d); _msgSplit.setResizeWeight(1.0);
WITHOUT_CLASSIFICATION	actions.get(ExecuteSqlAction.class).setEnabled(false);
WITHOUT_CLASSIFICATION	send a tree expansion event to the object tree
WITHOUT_CLASSIFICATION	i18n
WITHOUT_CLASSIFICATION	i18n
WITHOUT_CLASSIFICATION	Refresh the currently selected tab.
WITHOUT_CLASSIFICATION	To change body of overridden methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	Needed to make the panel set the divider location from preferences
WITHOUT_CLASSIFICATION	Required on Linux.
WITHOUT_CLASSIFICATION	i18n[CreateDriverAction.error.loadDefaultDrivers]
WITHOUT_CLASSIFICATION	i18n[CreateDriverAction.error.loadDefaultDrivers]
WITHOUT_CLASSIFICATION	Size to set child windows to.
WITHOUT_CLASSIFICATION	i18n[DumpApplicationAction.titleSuccess=Dump successful]
WITHOUT_CLASSIFICATION	i18n[DeleteAliasAction.error.selectingwindow=Error selecting window]
WITHOUT_CLASSIFICATION	Determine size of grid to tile into. e.g 3X3 for 9 cells.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Empty.
WITHOUT_CLASSIFICATION	i18n[ConnectToAliasCommand.error.closeconnection=Error occured closing Connection]
WITHOUT_CLASSIFICATION	After this it can't be stopped anymore!
WITHOUT_CLASSIFICATION	i18n[DeleteDriverAction.error.selectingwindow=Error selecting window]
WITHOUT_CLASSIFICATION	i18n[DumpApplicationCommand.title.status=Application Status Bean]
WITHOUT_CLASSIFICATION	prompt the user to add a website url for this driver
WITHOUT_CLASSIFICATION	i18n[DumpApplicationCommand.title.drivers=Drivers]
WITHOUT_CLASSIFICATION	i18n[DumpApplicationCommand.error.dumpingdrivers=Error dumping drivers]
WITHOUT_CLASSIFICATION	i18n[DumpApplicationCommand.error.dumpingaliases=Error dumping aliases]
WITHOUT_CLASSIFICATION	i18n[DumpApplicationCommand.title.aliases=Aliases]
WITHOUT_CLASSIFICATION	Dump drivers
WITHOUT_CLASSIFICATION	Dump System Properties.
WITHOUT_CLASSIFICATION	Dump aliases.
WITHOUT_CLASSIFICATION	i18n[DumpApplicationCommand.title.sessiondump=Session Dump: {0}]
WITHOUT_CLASSIFICATION	i18n[DumpApplicationCommand.error.sessiondump=Error dumping sessions]
WITHOUT_CLASSIFICATION	Dump sessions.
WITHOUT_CLASSIFICATION	i18n[DumpApplicationCommand.error.combiningtempfiles=Error combining temp files into dump file]
WITHOUT_CLASSIFICATION	i18n[DumpApplicationCommand.error.deletetempfile=Couldn't delete temporary DumpSession file]
WITHOUT_CLASSIFICATION	Nil out the timer so that it can be gc'd
WITHOUT_CLASSIFICATION	Get 10 lines at a time.
WITHOUT_CLASSIFICATION	i18n[OracleExceptionFormatter.positionLabel=Position: ]
WITHOUT_CLASSIFICATION	ISessionListener interface methods
WITHOUT_CLASSIFICATION	Don't try to find it if we have already created it.
WITHOUT_CLASSIFICATION	Since we depend upon the Connection class associated with the ISession, we need to keep a reference to the ISession we are associated with. However, this session could be closed, at which time we want to give up our reference so that it can be garbage collected.
WITHOUT_CLASSIFICATION	no rows selected.
WITHOUT_CLASSIFICATION	Label containing the location of the plugins at top of dialog.
WITHOUT_CLASSIFICATION	IMainPanelTab[] getMainTabbedPanePanels(ISession session);
WITHOUT_CLASSIFICATION	Table of loaded plugins in centre of dialog.
WITHOUT_CLASSIFICATION	column 1 is internal name
WITHOUT_CLASSIFICATION	column 3 is loaded status
WITHOUT_CLASSIFICATION	Empty body, purely to shorten the interface name for convienience.
WITHOUT_CLASSIFICATION	Renames the source column.
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	Empty method.
WITHOUT_CLASSIFICATION	throws PluginException
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	Folder to store user settings.
WITHOUT_CLASSIFICATION	Adds the new column (type: integer).
WITHOUT_CLASSIFICATION	See if plugin has any jars in lib dir.
WITHOUT_CLASSIFICATION	throws PluginException;
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.useCustomQTLabel=Use Custom Query Tokenizer]
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.removeMultiLineCommentLabelTipText=]
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.lineCommentLabel=Start of line comment]
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.procedureSeparatorLabel=Procedure/Function Separator]
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.borderLabel={0} Script Settings]
WITHOUT_CLASSIFICATION	Column 0 Row 0
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	Increases component width by 40 pixels
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	JASON: What are its valid values?
WITHOUT_CLASSIFICATION	property file not found for user - first time user ran pgm.
WITHOUT_CLASSIFICATION	This is a tool window.
WITHOUT_CLASSIFICATION	Add panels for core Squirrel functionality.
WITHOUT_CLASSIFICATION	Go thru all loaded plugins asking for panels.
WITHOUT_CLASSIFICATION	Add all panels to the tabbed pane.
WITHOUT_CLASSIFICATION	i18n[GeneralPreferencesPanel.squirrelHomePath=Home directory: -home {0}]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesTab.hint=Software Update Settings]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesTab.title=Update]
WITHOUT_CLASSIFICATION	This is a tool window.
WITHOUT_CLASSIFICATION	Add panels for core Squirrel functionality.
WITHOUT_CLASSIFICATION	Go thru all loaded plugins asking for panels.
WITHOUT_CLASSIFICATION	Add all panels to the tabbed pane.
WITHOUT_CLASSIFICATION	i18n[DataTypePreferencesPanel.propsPanel.hint=Set options for specific Data Types]
WITHOUT_CLASSIFICATION	i18n[DataTypePreferencesPanel.propsPanel.title=Data Type Controls]
WITHOUT_CLASSIFICATION	We need this method to satisfy one of the Interfaces we implement, but since we have moved all operations to the DataType sub-panels which initialize their own data during creation, there is nothing for us to do here
WITHOUT_CLASSIFICATION	i18n[SQLPreferencesPanel.largeScriptStmtCount=Large Script Statement Count: ]
WITHOUT_CLASSIFICATION	JScrollPane sp = new JScrollPane(createDataTypesPanel()); sp.setPreferredSize(new Dimension(600, 450)); add(sp, gbc);
WITHOUT_CLASSIFICATION	add each of the panels created by the DataType objects for editing their own properties
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.channel=Channel:]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.updateSiteBorderLabel=Update Site]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.path=Path:]
WITHOUT_CLASSIFICATION	Test Connection Button Panel (Both the button and the status label
WITHOUT_CLASSIFICATION	Site type
WITHOUT_CLASSIFICATION	Update server name
WITHOUT_CLASSIFICATION	Separator
WITHOUT_CLASSIFICATION	Update server port
WITHOUT_CLASSIFICATION	Path to release.xml
WITHOUT_CLASSIFICATION	Local update directory
WITHOUT_CLASSIFICATION	Channnel combo-box
WITHOUT_CLASSIFICATION	URL text field
WITHOUT_CLASSIFICATION	separators need preferred size in GridBagLayout
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	String EDIT = "edit";
WITHOUT_CLASSIFICATION	Activate another session since the current active session has closed.
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Get an array since we dont want trouble with the sessionsList when we remove the sessions from it.
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	i18n[FileManager.confirm.filereplace={0} \nalready exists. Do you want to replace it?]
WITHOUT_CLASSIFICATION	invokeLater to make the call synchronto the event queue
WITHOUT_CLASSIFICATION	Do not do new HashMap() here.
WITHOUT_CLASSIFICATION	public SQLExecutionInfo(int idx) { this(idx, ""); }
WITHOUT_CLASSIFICATION	i18n[FileManager.error.cannotwritefile=File {0} \ncannot be written to.]
WITHOUT_CLASSIFICATION	i18n
WITHOUT_CLASSIFICATION	i18n[FileManager.savedfile=Saved to {0}]
WITHOUT_CLASSIFICATION	i18n[CancelStatementThread.cancelFailed=Failed to cancel statement. Perhaps the driver/RDDBMS does not support cancelling statements. See logs for further details ({0})]
WITHOUT_CLASSIFICATION	i18n[CancelStatementThread.cancelSucceeded=The database has been asked to cancel the statment.]
WITHOUT_CLASSIFICATION	i18n[MessagePanel.clearLabel=Clear]
WITHOUT_CLASSIFICATION	Add mouse listener for displaying popup menu.
WITHOUT_CLASSIFICATION	/ Warning
WITHOUT_CLASSIFICATION	a light yellow
WITHOUT_CLASSIFICATION	StyleConstants.setBackground(_saSetError, Color.red);
WITHOUT_CLASSIFICATION	StyleConstants.setBackground(saSetErrorHistory, Color.pink);
WITHOUT_CLASSIFICATION	Start loading table/column info about the current database.
WITHOUT_CLASSIFICATION	This is set here as SessionPanel.dispose() will attempt to close the session.
WITHOUT_CLASSIFICATION	This is a reasonable default and makes initialization code run well
WITHOUT_CLASSIFICATION	If there is no sqlPanelAPI (e.g. the Object tree find editor) we assume no parser is necessary and thus provide a dummy impl.
WITHOUT_CLASSIFICATION	At this point we know that we have a 1.4 or higher java runtime
WITHOUT_CLASSIFICATION	i18n[Session.driverComplianceTitle=JRE/JDBC Version Mismatch]
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISession#confirmCloseWithUnsavedEdits()
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.tablenotfound=Cannot edit table because table cannot be found\nor table name is not unique in DB.]
WITHOUT_CLASSIFICATION	re-calculate fullTablename the next time it's requested.
WITHOUT_CLASSIFICATION	_session.getProperties().forceTableContentsOutputClassNameChange();
WITHOUT_CLASSIFICATION	forced edit mode ended because user changed the Session Properties
WITHOUT_CLASSIFICATION	start with illegal number of rows matching query
WITHOUT_CLASSIFICATION	if we could not identify which table to edit, tell user
WITHOUT_CLASSIFICATION	start with illegal number of rows matching query
WITHOUT_CLASSIFICATION	i18n[oracle.sequenceDetails=Details]
WITHOUT_CLASSIFICATION	Drops the original column.
WITHOUT_CLASSIFICATION	Adds a foreign key constraint to the source table for the new column.
WITHOUT_CLASSIFICATION	get WHERE clause using original value
WITHOUT_CLASSIFICATION	if the user has said to not use this column, then skip it
WITHOUT_CLASSIFICATION	everything seems to have worked ok
WITHOUT_CLASSIFICATION	The edited column is in the resultset twice (example: SELECT MyName, FROM MyTable). We won't add the this col to the where clause.
WITHOUT_CLASSIFICATION	convert user representation of null into an actual null
WITHOUT_CLASSIFICATION	do different things depending on data type
WITHOUT_CLASSIFICATION	insert the "WHERE" at the front if there is anything in the clause
WITHOUT_CLASSIFICATION	get the SQL session
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.rowmatched=\n Row {0} matched {1} rows in DB]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.rownotmatch=\n Row {0} did not match any row in DB]
WITHOUT_CLASSIFICATION	get WHERE clause for the selected row the -1 says to just use the contents of the values without any substitutions
WITHOUT_CLASSIFICATION	count how many rows this WHERE matches
WITHOUT_CLASSIFICATION	do the delete and add the number of rows deleted to the count
WITHOUT_CLASSIFICATION	i18n[oracle.displaysSequenceDetails=Display sequence details]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.tabledbmismatch=There may be a mismatch between the table and the DB:\n{0}\nDo you wish to proceed with the deletes anyway?]
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.info.deletecancelled=Delete canceled at user request.]
WITHOUT_CLASSIFICATION	do the delete and add the number of rows deleted to the count
WITHOUT_CLASSIFICATION	try to delete
WITHOUT_CLASSIFICATION	Cache
WITHOUT_CLASSIFICATION	Cycled
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	we return something valid even if there is a DB error
WITHOUT_CLASSIFICATION	if we could not identify which table to edit, just return
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	find the entry in colDefs matching this column
WITHOUT_CLASSIFICATION	DB cols are in same order as colDefs
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.retrievingdefaultvalues=Error retrieving default column values]
WITHOUT_CLASSIFICATION	if we could not identify which table to edit, tell user
WITHOUT_CLASSIFICATION	assuming that the columns in table match colDefs, bump the index to point to the next colDef entry
WITHOUT_CLASSIFICATION	start the string for use in the prepared statment
WITHOUT_CLASSIFICATION	add a variable position for each of the columns
WITHOUT_CLASSIFICATION	replace the last "," with ")"
WITHOUT_CLASSIFICATION	i18n[oracle.displaySessionStatistics=Display database session statistics]
WITHOUT_CLASSIFICATION	have the DataType object fill in the appropriate kind of value into the appropriate variable position in the prepared stmt
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.unknownerrorupdate=Unknown problem during update.\nNo count of inserted rows was returned.\nDatabase may be corrupted!]
WITHOUT_CLASSIFICATION	insert succeeded
WITHOUT_CLASSIFICATION	This might be because an table alias is used maybe with an AS before it.
WITHOUT_CLASSIFICATION	i18n[ObjectTreeSearch.error.objectnotfound=Could not locate the database object ''{0}'' in Object tree]
WITHOUT_CLASSIFICATION	(ALLOWS_EDITING_FALSE == ret)
WITHOUT_CLASSIFICATION	no support for undo
WITHOUT_CLASSIFICATION	JASON: Removed as part of patch void addSessionListener(ISessionListener lis);
WITHOUT_CLASSIFICATION	Process each individual query.
WITHOUT_CLASSIFICATION	Some driver don't correctly support setMaxRows. In these cases use setMaxRows only if this is a SELECT.
WITHOUT_CLASSIFICATION	Display any warnings generated by the SQL execution.
WITHOUT_CLASSIFICATION	User has cancelled the query execution.
WITHOUT_CLASSIFICATION	... now we have reached an output that is not a result. We now have to aks for this outputs update count.
WITHOUT_CLASSIFICATION	filter the list of all DB objects looking for things with the given name
WITHOUT_CLASSIFICATION	ok, that didn't work - let's see if the table looks fully qualified. if so, we'll split the name from the schema/catalog and try that.
WITHOUT_CLASSIFICATION	Ok, maybe catalog was really a schema instead.
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.event.UndoableEditListener#undoableEditHappened(javax.swing.event.UndoableEditEvent)
WITHOUT_CLASSIFICATION	i18n[SQLPanelAPI.untitledLabel=Untitled]
WITHOUT_CLASSIFICATION	Can't work with ISessionAction because if a result window is on top the session in a ISessionAction is null.
WITHOUT_CLASSIFICATION	Dump meta data.
WITHOUT_CLASSIFICATION	Dump driver information.
WITHOUT_CLASSIFICATION	Dump session properties.
WITHOUT_CLASSIFICATION	Dump general connection info.
WITHOUT_CLASSIFICATION	Dump alias information.
WITHOUT_CLASSIFICATION	Dump data types.
WITHOUT_CLASSIFICATION	Dump schemas.
WITHOUT_CLASSIFICATION	Dump catalogs.
WITHOUT_CLASSIFICATION	Dump general connection info.
WITHOUT_CLASSIFICATION	@see ActionListener#actionPerformed(ActionEvent)
WITHOUT_CLASSIFICATION	@see IClientSessionAction#setSession(ISession)
WITHOUT_CLASSIFICATION	i18n[DeleteTablesCommand.loadingPrefix=Analyzing table:]
WITHOUT_CLASSIFICATION	Get all the selected object names and place in a comma separated list.
WITHOUT_CLASSIFICATION	Remove trailing ", ".
WITHOUT_CLASSIFICATION	Ensure that the proper type of Object is selected in the Object Tree.
WITHOUT_CLASSIFICATION	Can't delete records in snapshots (Oracle materialized views)
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Only Oracle supports materialized views directly.
WITHOUT_CLASSIFICATION	execute command
WITHOUT_CLASSIFICATION	i18n[DumpSessionAction.success=Session successfuly dumped to: {0}]
WITHOUT_CLASSIFICATION	The Math.min is for the Caret at the end of the text
WITHOUT_CLASSIFICATION	@see ActionListener#actionPerformed(ActionEvent)
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	Ensure that the proper type of Object is selected in the Object Tree before allowing the SQL Filter to be activated.
WITHOUT_CLASSIFICATION	Empty body
WITHOUT_CLASSIFICATION	Empty Bbody
WITHOUT_CLASSIFICATION	Empty Body
WITHOUT_CLASSIFICATION	Empty Body
WITHOUT_CLASSIFICATION	private JTabbedPane _tabbedResultsPanel;
WITHOUT_CLASSIFICATION	private Map _allTabs = new HashMap();
WITHOUT_CLASSIFICATION	private List _availableTabs = new ArrayList();
WITHOUT_CLASSIFICATION	private ArrayList _usedTabs = new ArrayList();
WITHOUT_CLASSIFICATION	_listeners.remove(ISQLExecutionListener.class, lis);
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	_tabbedResultsPanel = UIFactory.getInstance().createTabbedPane();
WITHOUT_CLASSIFICATION	i18n[SQLPanel.limitrowscheckbox.hint=Limit rows: ]
WITHOUT_CLASSIFICATION	Set focus to the SQL entry panel.
WITHOUT_CLASSIFICATION	i18n[PleaseWaitDialog.queryExecuting=Query is executing]
WITHOUT_CLASSIFICATION	Columns
WITHOUT_CLASSIFICATION	Rows
WITHOUT_CLASSIFICATION	Prepare to have a lot of DocumentEvent.EventType.CHANGE
WITHOUT_CLASSIFICATION	Display the result set.
WITHOUT_CLASSIFICATION	Display the result set metadata.
WITHOUT_CLASSIFICATION	Why null??
WITHOUT_CLASSIFICATION	1.5 "@ident" annotation NOI18N
WITHOUT_CLASSIFICATION	i18n[ResultTab.executedLabel=Executed:]
WITHOUT_CLASSIFICATION	And the query info.
WITHOUT_CLASSIFICATION	final Resources rsrc = _session.getApplication().getResources();
WITHOUT_CLASSIFICATION	i18n[ResultTab.elapsedTimeLabel=Elapsed Time (seconds):]
WITHOUT_CLASSIFICATION	Empty method.
WITHOUT_CLASSIFICATION	Empty method.
WITHOUT_CLASSIFICATION	Needs to be done in both cases because if the window goes back to the default layer it goes back behind all other windows too.
WITHOUT_CLASSIFICATION	The SQLHistoryComboBoxModel has a static member that prevents garbage collection. Therefore we need to remove the model.
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Sticky is turned off. Just remove sticky and return.
WITHOUT_CLASSIFICATION	remove old sticky tab
WITHOUT_CLASSIFICATION	Check for whitespace
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Check for digit
WITHOUT_CLASSIFICATION	white space
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	!!! return SQLTokenContext.INCOMPLETE_STRING_LITERAL;
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	Either resultTabToReplace or _stickyTab must be not null here
WITHOUT_CLASSIFICATION	transparent
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.close=Close]
WITHOUT_CLASSIFICATION	Just add the tab
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.closeAll=Close all]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.toggleSticky=Toggle sticky]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.execStatus=Executing SQL...]
WITHOUT_CLASSIFICATION	Track the time in aggregate for the script.
WITHOUT_CLASSIFICATION	!!! return SQLTokenContext.INCOMPLETE_CHAR_LITERAL;
WITHOUT_CLASSIFICATION	break;
WITHOUT_CLASSIFICATION	Options
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.rowsUpdated={0} Row(s) Inserted]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.rowsDeleted={0} Row(s) Deleted]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.rowsUpdated={0} Row(s) Updated]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.outputStatus=Building output...]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.cancelButtonLabel=Cancel]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.currentSQLLabel={0} of {1} - {2}]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.statusLabel=Status:]
WITHOUT_CLASSIFICATION	i18n[SQLTab.title=SQL]
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	corresponding to COLUMNS
WITHOUT_CLASSIFICATION	Make sure no duplicates are kept in history.
WITHOUT_CLASSIFICATION	Standard expanders.
WITHOUT_CLASSIFICATION	must be done in the GUI thread
WITHOUT_CLASSIFICATION	Register tabs to display in the details panel for database nodes.
WITHOUT_CLASSIFICATION	Register tabs to display in the details panel for schema nodes.
WITHOUT_CLASSIFICATION	Register tabs to display in the details panel for UDT nodes.
WITHOUT_CLASSIFICATION	Register tabs to display in the details panel for table nodes.
WITHOUT_CLASSIFICATION	setupTabbedPane((ObjectTreeTabbedPane)it.next());
WITHOUT_CLASSIFICATION	private final ISession _session;
WITHOUT_CLASSIFICATION	_session = session;
WITHOUT_CLASSIFICATION	Add actions to the popup menu.
WITHOUT_CLASSIFICATION	Options for global popup menu.
WITHOUT_CLASSIFICATION	Empty.
WITHOUT_CLASSIFICATION	Empty.
WITHOUT_CLASSIFICATION	Empty.
WITHOUT_CLASSIFICATION	Register so that we can display different tooltips depending which entry in list mouse is over.
WITHOUT_CLASSIFICATION	Don't need tooltips any more.
WITHOUT_CLASSIFICATION	No need to this in background when SchemaInfo is not reloaded.
WITHOUT_CLASSIFICATION	We only show row counts for tables and views. Other objects won't be affected by changing row counts.
WITHOUT_CLASSIFICATION	If node hasn't already been expanded.
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	See if all selected nodes are of the same type.
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Lazily create the event.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	Lazily create the event.
WITHOUT_CLASSIFICATION	Menues that are also shown in the main window Session menu might be in this popup. If we don't remove them, the Session won't be Garbage Collected.
WITHOUT_CLASSIFICATION	Get the node to be expanded.
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	else
WITHOUT_CLASSIFICATION	Add table types to list.
WITHOUT_CLASSIFICATION	Add stored proc parent node.
WITHOUT_CLASSIFICATION	Add UDT parent node.
WITHOUT_CLASSIFICATION	i18n[oracle.columns=Columns]
WITHOUT_CLASSIFICATION	i18n[DatabaseObjectInfoTab.title=Info]
WITHOUT_CLASSIFICATION	i18n[DatabaseObjectInfoTab.hint=Basic information]
WITHOUT_CLASSIFICATION	i18n[BaseSourceTab.title=Source]
WITHOUT_CLASSIFICATION	default is no reference
WITHOUT_CLASSIFICATION	we need the try/catch just to keep the compiler happy
WITHOUT_CLASSIFICATION	private ISession _session;
WITHOUT_CLASSIFICATION	LineNumber height (abends when I use MAX_VALUE)
WITHOUT_CLASSIFICATION	Set right/left margin
WITHOUT_CLASSIFICATION	Variables for this LineNumber component
WITHOUT_CLASSIFICATION	i18n[KeywordsTab.title=Keywords]
WITHOUT_CLASSIFICATION	Update sizes when number of digits in the line number changes
WITHOUT_CLASSIFICATION	Paint the background
WITHOUT_CLASSIFICATION	Determine the number of lines to draw in the foreground.
WITHOUT_CLASSIFICATION	i18n[StringFunctionsTab.title=String Functions]
WITHOUT_CLASSIFICATION	'' outside comment
WITHOUT_CLASSIFICATION	i18n[StringFunctionsTab.hint=Show all the string functions available in DBMS]
WITHOUT_CLASSIFICATION	i18n[DataTypesTab.title=Data Types]
WITHOUT_CLASSIFICATION	i18n[SchemasTab.hint=Show all the schemas]
WITHOUT_CLASSIFICATION	i18n[ProcedureColumnsTab.hint=Show columns for the selected procedure]
WITHOUT_CLASSIFICATION	i18n[ProcedureColumnsTab.title=Columns]
WITHOUT_CLASSIFICATION	break;
WITHOUT_CLASSIFICATION	i18n[IndexesTab.title=Indexes]
WITHOUT_CLASSIFICATION	Frontbase describes it's tables as "BASE TABLE".
WITHOUT_CLASSIFICATION	i18n[RowCountTab.title=Row Count]
WITHOUT_CLASSIFICATION	Provide the actual integer value, as well as it's meaning
WITHOUT_CLASSIFICATION	i18n[ContentsTab.title=Content]
WITHOUT_CLASSIFICATION	i18n[RowCountTab.hint=Number of rows in the selected table]
WITHOUT_CLASSIFICATION	break;
WITHOUT_CLASSIFICATION	break;
WITHOUT_CLASSIFICATION	needed to prevent an infinite loop
WITHOUT_CLASSIFICATION	props.forceTableContentsOutputClassNameChange();
WITHOUT_CLASSIFICATION	break;
WITHOUT_CLASSIFICATION	We assume here that if the pseudoColumn was used in the query, then it was likely to have caused the SQLException. If not, (length == 0), then retrying the query won't help - just throw the exception.
WITHOUT_CLASSIFICATION	break;
WITHOUT_CLASSIFICATION	get the nullability information and pass it into the ResultSet Unfortunately, not all DBMSs provide the column number in object 17 as stated in the SQL documentation, so we have to guess that the result set is in column order
WITHOUT_CLASSIFICATION	Restore the paths
WITHOUT_CLASSIFICATION	Only do this if the object tree (and hence this contents tab) is visible.
WITHOUT_CLASSIFICATION	Save off selections so that selection/focus can be restored later.
WITHOUT_CLASSIFICATION	i18n[VersionColumnsTab.title=Versions]
WITHOUT_CLASSIFICATION	i18n[VersionColumnsTab.hint=Show columns that are automatically updated when the row is updated]
WITHOUT_CLASSIFICATION	i18n[PrimaryKeyTab.title=Primary Key]
WITHOUT_CLASSIFICATION	i18n[PrimaryKeyTab.hint=Show primary key for the selected table]
WITHOUT_CLASSIFICATION	i18n[RowIDTab.title=Row IDs]
WITHOUT_CLASSIFICATION	i18n[TablePriviligesTab.hint=Show access rights for the selected table]
WITHOUT_CLASSIFICATION	token kind token position in the source text (starting at 0) token column (starting at 0) token line (starting at 1) exact string value token string value (uppercase if ignoreCase)
WITHOUT_CLASSIFICATION	set of characters to be ignored by the scanner
WITHOUT_CLASSIFICATION	error messages
WITHOUT_CLASSIFICATION	input scanner last recognized token lookahead token
WITHOUT_CLASSIFICATION	or a white space must be in front of the keyword.
WITHOUT_CLASSIFICATION	-1 because column starts with 1 put pos with 0
WITHOUT_CLASSIFICATION	Either are at teh beginning ...
WITHOUT_CLASSIFICATION	On Errors we restart the parser behind the error
WITHOUT_CLASSIFICATION	wait for pending chars to be processed post new characters
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	tell the UI that this _workingBuffer is through
WITHOUT_CLASSIFICATION	i18n[parserthread.undefinedTable=undefined table]
WITHOUT_CLASSIFICATION	number of errors detected
WITHOUT_CLASSIFICATION	i18n[ErrorStream.error.syntax=Syntax error {0}]
WITHOUT_CLASSIFICATION	i18n[ErrorStream.notexpected=not expected]
WITHOUT_CLASSIFICATION	i18n[ErrorStream.unexpectedsymbol=this symbol not expected in]
WITHOUT_CLASSIFICATION	i18n[ErrorStream.invalid=invalid]
WITHOUT_CLASSIFICATION	i18n[ErrorStream.error.semantic=Semantic error {0}]
WITHOUT_CLASSIFICATION	i18n[ErrorStream.noerrors=No errors detected]
WITHOUT_CLASSIFICATION	i18n[ErrorStream.multipleerrors={0} errors detected]
WITHOUT_CLASSIFICATION	FA_xxx
WITHOUT_CLASSIFICATION	schema should be identical to the statement. Ignore
WITHOUT_CLASSIFICATION	check if this completion request is outside the original definition point
WITHOUT_CLASSIFICATION	try as an alias
WITHOUT_CLASSIFICATION	could also be a table name
WITHOUT_CLASSIFICATION	see if its a one-table statement
WITHOUT_CLASSIFICATION	now match the columns
WITHOUT_CLASSIFICATION	no need to return if completion is identical
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	try to save the selection. do not dispose of this panel if there is a problem
WITHOUT_CLASSIFICATION	i18n[editWherColsSheet.ok=OK]
WITHOUT_CLASSIFICATION	This is a tool window.
WITHOUT_CLASSIFICATION	leave a blank line just to make it look a bit nicer
WITHOUT_CLASSIFICATION	leave a blank line just to make it look a bit nicer
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.editableTable=Editable Table]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.tableContents=Table Contents:]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.dataTYpe2='General Preferences' window under the 'Data Type Controls' tab.]
WITHOUT_CLASSIFICATION	i18n[editWherColsSheet.output=Output]
WITHOUT_CLASSIFICATION	i18n[generalPropertiesPanel.bottom=Bottom]
WITHOUT_CLASSIFICATION	i18n[editWhereColsPanel.limitColsInCell=Limit Columns in Cell Edit]
WITHOUT_CLASSIFICATION	i18n[editWhereColsPanel.limitColsInCellHint=Limit columns used in WHERE clause when editing table]
WITHOUT_CLASSIFICATION	save the input for use later
WITHOUT_CLASSIFICATION	look up the table in the EditWhereCols list
WITHOUT_CLASSIFICATION	i18n[editWhereColsPanel.cannotRemoveAllCols=You cannot remove all of the fields from the 'use columns' list.]
WITHOUT_CLASSIFICATION	create all of the gui objects now
WITHOUT_CLASSIFICATION	if all cols are in the "to use" side, delete from EditWhereCols
WITHOUT_CLASSIFICATION	some cols are not to be used
WITHOUT_CLASSIFICATION	do not let user remove everything from the list
WITHOUT_CLASSIFICATION	i18n[editWhereColsPanel.useColumns=Use Columns]
WITHOUT_CLASSIFICATION	create the HashMap of names to use and put it in EditWhereCols
WITHOUT_CLASSIFICATION	get the values from the "not use" list and convert to sorted set
WITHOUT_CLASSIFICATION	get the values from the "use" list
WITHOUT_CLASSIFICATION	create an empty set for the "use" list
WITHOUT_CLASSIFICATION	get the values from the "use" list and convert to sorted set
WITHOUT_CLASSIFICATION	get the values from the "not use" list
WITHOUT_CLASSIFICATION	create an empty set for the "not use" list
WITHOUT_CLASSIFICATION	for each element in the "not use" set, if selected then add to "use", otherwise add to new "not use" set
WITHOUT_CLASSIFICATION	i18n[sessionPropertiesPanel.catalogPrefix=Limit Catalog Objects using these comma-delimited prefixes:]
WITHOUT_CLASSIFICATION	i18n[sessionPropertiesPanel.limitRowsContents=Contents - Limit rows]
WITHOUT_CLASSIFICATION	Add node for each object.
WITHOUT_CLASSIFICATION	i18n[sessionPropertiesPanel.showRowCount=Show Row Count for Tables (can slow application)]
WITHOUT_CLASSIFICATION	i18n[sessionPropertiesPanel.objectTree=Object Tree]
WITHOUT_CLASSIFICATION	i18n[generalPropertiesPanel.rows=rows]
WITHOUT_CLASSIFICATION	i18n[sessionObjectTreePropetiesPanel.filters=Filters]
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	i18n[sessionPropertiesSheet.sessionProperties=- Session Properties]
WITHOUT_CLASSIFICATION	To change body of overridden methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	This is a tool window.
WITHOUT_CLASSIFICATION	Property panels for SQuirreL.
WITHOUT_CLASSIFICATION	i18n[sessionPropertiesSheet.close=Close]
WITHOUT_CLASSIFICATION	i18n[sessionPropertiesSheet.ok=OK]
WITHOUT_CLASSIFICATION	Go thru all plugins attached to this session asking for panels.
WITHOUT_CLASSIFICATION	Add all panels to the tabbed panel.
WITHOUT_CLASSIFICATION	first convert internal data into the string array
WITHOUT_CLASSIFICATION	get each table's info
WITHOUT_CLASSIFICATION	put this into the data array
WITHOUT_CLASSIFICATION	make sure we are starting clean
WITHOUT_CLASSIFICATION	convert each string into key+HashMap and fill it into the data
WITHOUT_CLASSIFICATION	we are at the last one in the list
WITHOUT_CLASSIFICATION	i18n[SchemaInfo.loadingFunctions=Loading functions]
WITHOUT_CLASSIFICATION	i18n[SchemaInfo.loadingSchemas=Loading schemas]
WITHOUT_CLASSIFICATION	By default null == types we return only cached types
WITHOUT_CLASSIFICATION	put the map into the tables db with the table name as the key
WITHOUT_CLASSIFICATION	Extra keywords that this DBMS supports.
WITHOUT_CLASSIFICATION	The SessionManager is global to SQuirreL. If we don't remove the listeners the Session won't get Garbeage Collected.
WITHOUT_CLASSIFICATION	load tables with catalog = doi.getCatalog() and schema = doi.getSchema()
WITHOUT_CLASSIFICATION	load views with catalog = doi.getCatalog() and schema = doi.getSchema()
WITHOUT_CLASSIFICATION	load procedures with catalog = null
WITHOUT_CLASSIFICATION	load procedures with schema = null
WITHOUT_CLASSIFICATION	it's error to have '8' and '9' in octal number
WITHOUT_CLASSIFICATION	'8' and '9' already handled
WITHOUT_CLASSIFICATION	/ Schema dependent data. Are changed only in this class
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	null == schemaLoadInfos[0].schemaName is the case when there are no _schemas specified schemaLoadInfos.length will then be 1.
WITHOUT_CLASSIFICATION	only single dot
WITHOUT_CLASSIFICATION	Now, create an array large enough to hold the original and the new
WITHOUT_CLASSIFICATION	Append the new tables to the new array, starting at the end of the original
WITHOUT_CLASSIFICATION	Sort it and store in a new CopyOnWriteArrayList
WITHOUT_CLASSIFICATION	CopyOnWriteArrayList has snapshot iterators that don't support iterator.remove()
WITHOUT_CLASSIFICATION	Unfortunately, conversion to uppercase does not work properly for the Georgian alphabet, which has strange rules about case conversion. So we need to make one last check before exiting.
WITHOUT_CLASSIFICATION	Current Alias Schema properties dont want cache. so we don't cache.
WITHOUT_CLASSIFICATION	reload complete SchemaInfo
WITHOUT_CLASSIFICATION	DB2 stores all names in upper case. PostgreSQL stores table names in lower case. That's why we may not find table as it was written in the create statement. So we try out the upper and lower case names too.
WITHOUT_CLASSIFICATION	i18n[oracle.displayColumns=Display index column information]
WITHOUT_CLASSIFICATION	stay in line-comment state
WITHOUT_CLASSIFICATION	i18n[SessionStartupTimeHintDlg.dontShowAgain=Don't show this message again]
WITHOUT_CLASSIFICATION	stay in block-comment state
WITHOUT_CLASSIFICATION	i18n[WhereClausePanel.columnLabel=Columns]
WITHOUT_CLASSIFICATION	i18n[SessionStartupTimeHintDlg.close=Close]
WITHOUT_CLASSIFICATION	i18n[SessionStartupTimeHintDlg.showAliasProps=Open Alias Schema Properties]
WITHOUT_CLASSIFICATION	hold the state
WITHOUT_CLASSIFICATION	i18n[WhereClausePanel.valueLabel=Value]
WITHOUT_CLASSIFICATION	i18n[WhereClausePanel.whereClauseLabel=Where Clause]
WITHOUT_CLASSIFICATION	i18n[WhereClausePanel.hint=Where clause for the selected table]
WITHOUT_CLASSIFICATION	hold the state
WITHOUT_CLASSIFICATION	Put the 'AND' or the 'OR' in front of the clause if there are already values in the text area.
WITHOUT_CLASSIFICATION	i18n[oracle.triggerDetails=Details]
WITHOUT_CLASSIFICATION	If the column is a text column, and there aren't single quotes around the value, put them there.
WITHOUT_CLASSIFICATION	i18n[oracle.displayTriggerDetails=Display trigger details]
WITHOUT_CLASSIFICATION	First parse the SQL string
WITHOUT_CLASSIFICATION	[i18n[OrderByClausePanel.columnsLabel=Columns]
WITHOUT_CLASSIFICATION	[i18n[OrderByClausePanel.hint=Order by clause for the selected table]
WITHOUT_CLASSIFICATION	Users.
WITHOUT_CLASSIFICATION	These must not be internationalized since SQL tokens must be in English No I18N No I18N
WITHOUT_CLASSIFICATION	1. Find the local release.xml file
WITHOUT_CLASSIFICATION	i18n[SQLFilterSheet.error.columnList=Unable to get list of columns {0}]
WITHOUT_CLASSIFICATION	i18n[DownloadStatusEventHandler.downloadingUpdatesMsg=Downloading Files]
WITHOUT_CLASSIFICATION	This is a tool window.
WITHOUT_CLASSIFICATION	boolean isUpToDate() throws Exception;
WITHOUT_CLASSIFICATION	To change body of created methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	Channel that provides stable release updates
WITHOUT_CLASSIFICATION	Check once a day Check once a week check every time the app launches
WITHOUT_CLASSIFICATION	Channel that provides snapshot release updates - more frequent and less stable
WITHOUT_CLASSIFICATION	When all updates are retrieved, tell the user that the updates will be installed upon the next startup.
WITHOUT_CLASSIFICATION	i18n[UpdateControllerImpl.changesRecordedMsg=Requested changes will be made when SQuirreL is restarted]
WITHOUT_CLASSIFICATION	2. Load the local release.xml file as a ChannelXmlBean.
WITHOUT_CLASSIFICATION	2. Load the local release.xml file as a ChannelXmlBean.
WITHOUT_CLASSIFICATION	3. Determine the channel that the user wants (stable or snapshot)
WITHOUT_CLASSIFICATION	4. Get the release.xml file as a ChannelXmlBean from the server or filesystem.
WITHOUT_CLASSIFICATION	5. Is it the same as the local copy, which was placed either by the installer or the last update?
WITHOUT_CLASSIFICATION	build data
WITHOUT_CLASSIFICATION	build ui
WITHOUT_CLASSIFICATION	Persists the change list to the update directory.
WITHOUT_CLASSIFICATION	Kick off a thread to go and fetch the files one-by-one and register callback class - DownloadStatusEventHandler
WITHOUT_CLASSIFICATION	1. Wait for user to click ok/close
WITHOUT_CLASSIFICATION	2. Display global preferences
WITHOUT_CLASSIFICATION	Helper methods
WITHOUT_CLASSIFICATION	2. When the user clicks ok, then display update dialog again.
WITHOUT_CLASSIFICATION	Check to see if to is a directory and convert toFile to be the name of the file in that directory.
WITHOUT_CLASSIFICATION	Helper Methods
WITHOUT_CLASSIFICATION	If the update dir, is actually a file, log an error.
WITHOUT_CLASSIFICATION	If the downloads dir doesn't already exist, just create it.
WITHOUT_CLASSIFICATION	1. Find the local release.xml file. Bail with exception if we cannot find it.
WITHOUT_CLASSIFICATION	5. Is it the same as the local copy, which was placed either by the installer or the last update?
WITHOUT_CLASSIFICATION	-1 is stored if the checksum operation failed. This will ensure that comparison with any other file's checksum will be different - even if they happen to be the same file.
WITHOUT_CLASSIFICATION	3. & 3a. Get the release.xml file as a ChannelXmlBean from the server or filesystem.
WITHOUT_CLASSIFICATION	Record now as the last time we checked for updates.
WITHOUT_CLASSIFICATION	3a. For server, Determine the channel that the user has (stable or snapshot)
WITHOUT_CLASSIFICATION	Since this timer must be started when SQuirreL is launched, wait a couple of minutes for SQuirreL to get done initializing the UI.
WITHOUT_CLASSIFICATION	Since the user only wants to be notified of updates at startup, return here, thereby freeing up the thread.
WITHOUT_CLASSIFICATION	Since this thread is not a UI thread, it is ok to run the task synchronously.
WITHOUT_CLASSIFICATION	no update done to underlying data
WITHOUT_CLASSIFICATION	All currently installed artifacts will be marked with INSTALL action.
WITHOUT_CLASSIFICATION	Copy the app module jar to core downloads directory
WITHOUT_CLASSIFICATION	get the type of artifact
WITHOUT_CLASSIFICATION	Remove the core items since they are the most recent, and the user is not allowed to remove them
WITHOUT_CLASSIFICATION	is it installed?
WITHOUT_CLASSIFICATION	core artifacts are not displayed
WITHOUT_CLASSIFICATION	ArtifactName Type Installed? Install/Update/Remove
WITHOUT_CLASSIFICATION	Label panel containing the versions for the update at top of dialog.
WITHOUT_CLASSIFICATION	Install directories
WITHOUT_CLASSIFICATION	GUI Widgets
WITHOUT_CLASSIFICATION	Helper methods
WITHOUT_CLASSIFICATION	Helper methods
WITHOUT_CLASSIFICATION	Spring-injected dependencies
WITHOUT_CLASSIFICATION	Download directories
WITHOUT_CLASSIFICATION	Backup directories
WITHOUT_CLASSIFICATION	Skip files that are not installed - new files
WITHOUT_CLASSIFICATION	artifact name for plugins is <plugin internal name>.zip
WITHOUT_CLASSIFICATION	translations are most likely to be found in core lib dir.
WITHOUT_CLASSIFICATION	Need to remove the existing jar in the plugins directory and all of the files beneath the plugin-named directory.
WITHOUT_CLASSIFICATION	Skip the artifact if it is identical to the one that is already installed
WITHOUT_CLASSIFICATION	We have a core or translation file that is not already installed - add it
WITHOUT_CLASSIFICATION	Handle squirrel-sql.jar and documentation archive carefully - they live at the top
WITHOUT_CLASSIFICATION	strange that release xml file wasn't found; but not a problem at this point - just log it.
WITHOUT_CLASSIFICATION	This file is a zip; it needs to be extracted into the install directory. All zips are packaged in such a way that the extraction beneath install directory is all that is required.
WITHOUT_CLASSIFICATION	--------------------------- Spring=injected dependencies --------------------------------------------
WITHOUT_CLASSIFICATION	Spring-injected
WITHOUT_CLASSIFICATION	Spring-injected
WITHOUT_CLASSIFICATION	----------------------------------- Public API ------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------- Helper methods ------------------------------------------------
WITHOUT_CLASSIFICATION	f is a module
WITHOUT_CLASSIFICATION	Time to wait between checks that the event dispatch thread isn't hung.
WITHOUT_CLASSIFICATION	Maximum time we won't warn about.
WITHOUT_CLASSIFICATION	When we started dispatching the current event, in milliseconds.
WITHOUT_CLASSIFICATION	Have we already dumped a stack trace for the current event dispatch?
WITHOUT_CLASSIFICATION	The event dispatch thread, for the purpose of getting stack traces.
WITHOUT_CLASSIFICATION	Don't keep reporting the same hang every 100 ms.
WITHOUT_CLASSIFICATION	i18n[PreLaunchHelperImpl.restoreFailedMessage=Restore from backup failed. Re-installation may be required.
WITHOUT_CLASSIFICATION	Used as the value of startedLastEventDispatchAt when we're not in the middle of event dispatch.
WITHOUT_CLASSIFICATION	Synchronize on the outer class, because that's where all the state lives.
WITHOUT_CLASSIFICATION	We know that it's not interesting to show any code above where we get involved in event dispatch, so we stop printing the stack trace when we get as far back as our code.
WITHOUT_CLASSIFICATION	I don't know of any API for getting the event dispatch thread, but we can assume that it's the current thread if we're in the middle of dispatching an AWT event...
WITHOUT_CLASSIFICATION	get size of document width in pixels height in pixels height of printer page width of printer page
WITHOUT_CLASSIFICATION	make sure not print empty pages
WITHOUT_CLASSIFICATION	shift Graphic to line up with beginning of print-imageable region
WITHOUT_CLASSIFICATION	shift Graphic to line up with beginning of next page to print
WITHOUT_CLASSIFICATION	scale the page so the width fits...
WITHOUT_CLASSIFICATION	for faster printing, turn off double buffering
WITHOUT_CLASSIFICATION	repaint the page for printing
WITHOUT_CLASSIFICATION	first time through this method in program, so go cleanup old log files
WITHOUT_CLASSIFICATION	public File getDebugLogFile() { return new File(_userSettingsDir + File.separator + "squirrel-sql-debug.log"); }
WITHOUT_CLASSIFICATION	the number of files to keep is arbitrarilly set here
WITHOUT_CLASSIFICATION	define filter to select only names using the fileBase
WITHOUT_CLASSIFICATION	get the directory
WITHOUT_CLASSIFICATION	create filename filter and attach to directory
WITHOUT_CLASSIFICATION	get list of files using that base name
WITHOUT_CLASSIFICATION	not too many old files
WITHOUT_CLASSIFICATION	we do not expect a lot of files in this directory, so just do things linearly
WITHOUT_CLASSIFICATION	sort the list
WITHOUT_CLASSIFICATION	delete the old file
WITHOUT_CLASSIFICATION	a.put("Built-By", "manningr"); argMap.get(BUILT_BY_KEY)
WITHOUT_CLASSIFICATION	Inserts are not properly separated. We give up.
WITHOUT_CLASSIFICATION	i18n[editextras.reformatFailed=Reformat failed, normalized Strings differ]
WITHOUT_CLASSIFICATION	If our separator is the regular expression special char '|', then quote it before formatting.
WITHOUT_CLASSIFICATION	No special treatment
WITHOUT_CLASSIFICATION	No special treatment
WITHOUT_CLASSIFICATION	Not successful
WITHOUT_CLASSIFICATION	Not successful
WITHOUT_CLASSIFICATION	Split the first two matching toplevel brakets here
WITHOUT_CLASSIFICATION	/ Now check length of Strings in splitPieces1 again
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	the next top level ket is the counterpart to bra
WITHOUT_CLASSIFICATION	No flaten. We would turn statement parts to comment
WITHOUT_CLASSIFICATION	light yellow
WITHOUT_CLASSIFICATION	without this the completion panel's size will be weird
WITHOUT_CLASSIFICATION	Needs to be done later because when reInitList is called, the text componetes model is not yet up to date. E.g. the last character is missing.
WITHOUT_CLASSIFICATION	needed to resize completion panle appropriately see initializationof _curCompletionPanelSize
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	Update the bounds of the popup
WITHOUT_CLASSIFICATION	Convert to layered pane's coordinates
WITHOUT_CLASSIFICATION	can't fit -> hide
WITHOUT_CLASSIFICATION	valid bounds
WITHOUT_CLASSIFICATION	not in scroll pane
WITHOUT_CLASSIFICATION	i18n[DatabaseMetaData.nullableTypeNullableUnknown=unknown]
WITHOUT_CLASSIFICATION	i18n[DatabaseMetaData.searchableTypePredBasic=supports all except 'WHERE...LIKE']
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	SEARCHABLE column of result set.
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	resolve Largest and Preferred placements if possible
WITHOUT_CLASSIFICATION	Compute available height above the cursor
WITHOUT_CLASSIFICATION	more space below
WITHOUT_CLASSIFICATION	more space above
WITHOUT_CLASSIFICATION	popup does not fit with the orig placement
WITHOUT_CLASSIFICATION	do one or two passes
WITHOUT_CLASSIFICATION	Temporary events need to be included in case a modla dialog opens.
WITHOUT_CLASSIFICATION	place popup according to caret position and Placement
WITHOUT_CLASSIFICATION	private boolean _showHeadings;
WITHOUT_CLASSIFICATION	Note: Temporary events need to be included in case a modla dialog opens.
WITHOUT_CLASSIFICATION	Some drivers will give null.
WITHOUT_CLASSIFICATION	NULLABLE column of result set.
WITHOUT_CLASSIFICATION	private ColumnDisplayDefinition[] _hdgs = new ColumnDisplayDefinition[0];
WITHOUT_CLASSIFICATION	get the ConentPane into a variable for convenience
WITHOUT_CLASSIFICATION	ignore - unused.
WITHOUT_CLASSIFICATION	the table containing the user's input
WITHOUT_CLASSIFICATION	object that called us and that we want to return data to when done
WITHOUT_CLASSIFICATION	save data passed in to us
WITHOUT_CLASSIFICATION	set layout
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	user said to insert, so collect all the data from the JTable and send it to the DataSetViewer for insertion into DB and on-screen tables
WITHOUT_CLASSIFICATION	DATA_TYPE column of result set. int data = _rs.getInt(idx);
WITHOUT_CLASSIFICATION	If all columns in a table have empty strings as the headings then the row height of the label row is zero. We dont want this.
WITHOUT_CLASSIFICATION	create the JTable for input and put in the top of window
WITHOUT_CLASSIFICATION	add row headers to help user understand what the second row is
WITHOUT_CLASSIFICATION	create the buttons for input done and cancel
WITHOUT_CLASSIFICATION	this frame should really go away when done
WITHOUT_CLASSIFICATION	display the frame
WITHOUT_CLASSIFICATION	do not recognize this button request
WITHOUT_CLASSIFICATION	first make sure that user's last input has been included (It is too easy for user to enter data and forget to click on another field to force it to be set.)
WITHOUT_CLASSIFICATION	put the data into the DB and the on-screen JTable. If there was a failure, do not make this form go away since the user may be able to fix the problem by changing the data.
WITHOUT_CLASSIFICATION	the insert worked, so make this input form go away
WITHOUT_CLASSIFICATION	create column model
WITHOUT_CLASSIFICATION	set up cell editors on first row
WITHOUT_CLASSIFICATION	the second row contains a multi-line description, so make that row high enough to display it
WITHOUT_CLASSIFICATION	add mouse listener for Popup
WITHOUT_CLASSIFICATION	for now, ignore popup request RowDataJTable.this.displayPopupMenu(evt);
WITHOUT_CLASSIFICATION	for now, ignore popup request RowDataJTable.this.displayPopupMenu(evt);
WITHOUT_CLASSIFICATION	figure out which column the user clicked on so we can pass in the right column description
WITHOUT_CLASSIFICATION	only the first row (containing data) is editable
WITHOUT_CLASSIFICATION	for entries past the first one, use the default renderer
WITHOUT_CLASSIFICATION	i18n[rowInputDataFrame.conversionErr=Conversion Error]
WITHOUT_CLASSIFICATION	colDefs[i].getSqlTypeName() + "\n" + ((colDefs[i].isNullable()) ? "nullable" : "not nullable") + "\n" + "precision="+ colDefs[i].getPrecision() + "\n" + "scale=" + colDefs[i].getScale();
WITHOUT_CLASSIFICATION	data is an object - assume already validated
WITHOUT_CLASSIFICATION	data is a String, so we need to convert to real object
WITHOUT_CLASSIFICATION	display error message and do not update the table
WITHOUT_CLASSIFICATION	data converted ok, so update the table
WITHOUT_CLASSIFICATION	set up the list of column names and the data for the rows
WITHOUT_CLASSIFICATION	set column heading set data in first row
WITHOUT_CLASSIFICATION	put a description of the field in the following rows
WITHOUT_CLASSIFICATION	put the data and header names into the model
WITHOUT_CLASSIFICATION	The text area displaying the object contents
WITHOUT_CLASSIFICATION	the scroll pane that holds the text area
WITHOUT_CLASSIFICATION	Description needed to handle conversion of data to/from Object
WITHOUT_CLASSIFICATION	name of file to do export/import/process on
WITHOUT_CLASSIFICATION	command to use when processing data with an external program
WITHOUT_CLASSIFICATION	save the original value for re-use by CLOB/BLOB types in conversion
WITHOUT_CLASSIFICATION	Binary data viewing option: which radix to use This object is only non-null when the data is binary data
WITHOUT_CLASSIFICATION	Binary data viewing option: view ascii as char rather than as numeric value
WITHOUT_CLASSIFICATION	user asked to see binary data in a different format default to hex
WITHOUT_CLASSIFICATION	return the expected format for this data default to hex
WITHOUT_CLASSIFICATION	tell user it is editable
WITHOUT_CLASSIFICATION	add a panel containing binary data editing options, if needed
WITHOUT_CLASSIFICATION	this is a binary field, so allow for multiple viewing options
WITHOUT_CLASSIFICATION	Instances.
WITHOUT_CLASSIFICATION	Sessions.
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.withCommand=With command:]
WITHOUT_CLASSIFICATION	GET OSX_FILE FOR EXPORT & EXTERNAL PROCESSING
WITHOUT_CLASSIFICATION	Symbol used by user in Command field to indicate "Put the file name here" when the command is executed.
WITHOUT_CLASSIFICATION	import and external processing can only be done if panel is editable
WITHOUT_CLASSIFICATION	use default sequential layout
WITHOUT_CLASSIFICATION	load filename and command with previously entered info if not the default
WITHOUT_CLASSIFICATION	add some space
WITHOUT_CLASSIFICATION	add external processing command field and button
WITHOUT_CLASSIFICATION	add controls for file handling, but only if DataType can do File operations
WITHOUT_CLASSIFICATION	do not do import
WITHOUT_CLASSIFICATION	yes it can, so add controls
WITHOUT_CLASSIFICATION	add combo box for command to execute
WITHOUT_CLASSIFICATION	load the info into the text fields
WITHOUT_CLASSIFICATION	no entry selected
WITHOUT_CLASSIFICATION	do not do import
WITHOUT_CLASSIFICATION	make this the same size as the fileNameField
WITHOUT_CLASSIFICATION	File object for doing IO
WITHOUT_CLASSIFICATION	reset width to normal
WITHOUT_CLASSIFICATION	add note to user about including file name in command
WITHOUT_CLASSIFICATION	user has entered some non-default info, so save it
WITHOUT_CLASSIFICATION	get name of file, which must exist
WITHOUT_CLASSIFICATION	IMPORT OBJECT FROM OSX_FILE
WITHOUT_CLASSIFICATION	not allowed - must have existing file for import
WITHOUT_CLASSIFICATION	guard against something really stupid
WITHOUT_CLASSIFICATION	not something we can read
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.noExportFile=No file name given for export.\nPlease enter a file name or use Browse before clicking Export.]
WITHOUT_CLASSIFICATION	If file name default and cmd is null or empty, make sure this entry is not being held in CellImportExportInfoSaver
WITHOUT_CLASSIFICATION	save the user options - we know that it is not the default because we do not allow importing from "temp file"
WITHOUT_CLASSIFICATION	user has not entered anything or has reset to defaults, so make sure there is no entry for this column in the saved info
WITHOUT_CLASSIFICATION	get the real name for use later
WITHOUT_CLASSIFICATION	Now that we have the file, do the import. Note: the sequence of operations is divided into two sections at this point. The preceeding code ensures that we have a readable file, and the code in the following method call does the import. The reason for splitting at this point is that the Execute operation needs to do an import, and it will already have the file to do the import from (which is the same as the file it exported into).
WITHOUT_CLASSIFICATION	file name verification operations are the same for both export and execute, so do that work here for both. If file name is null or empty, do not proceed
WITHOUT_CLASSIFICATION	create the file to open
WITHOUT_CLASSIFICATION	user must have supplied a file name.
WITHOUT_CLASSIFICATION	user wants us to create a temp file
WITHOUT_CLASSIFICATION	see if file exists
WITHOUT_CLASSIFICATION	user does not want to overwrite the file
WITHOUT_CLASSIFICATION	file does not already exist, so try to create it
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.cannotOpenFile=Cannot open file {0}.\nError was:{1}]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.exportedToFile=Data Successfully exported to file {0}]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.exportSuccess=Export Success]
WITHOUT_CLASSIFICATION	We have done everything we can prior to this point to ensure that the the file is accessible, but it is still possible that an existing file was removed at a bad moment. Also, the compiler insists that we put this in a try statement
WITHOUT_CLASSIFICATION	file exists, is normal and is writable, so see if user wants to overwrite contents of file
WITHOUT_CLASSIFICATION	user is ok with overwriting file We do not need to do anything special to overwrite (as opposed to appending) since the OutputString starts at the beginning of the file by default.
WITHOUT_CLASSIFICATION	we could tell user here that export was canceled, but I don't think its necessary, and that avoids forcing user to do yet another annoying mouse click.
WITHOUT_CLASSIFICATION	if we get here, then everything worked correctly, so tell user that data was put into file. This is different from the Import strategy because the user may not know the name of the file that was used if they selected the automatic temp file operation, or they may not know what directory the file was actually put into, so this tells them the full file path.
WITHOUT_CLASSIFICATION	This may be called either when the table is editable or when it is read-only. When it is read-only, there is no command to be saved, but when it is editable, there may be a command.
WITHOUT_CLASSIFICATION	if user did anything other than default, then save their options
WITHOUT_CLASSIFICATION	EXPORT OBJECT TO OSX_FILE
WITHOUT_CLASSIFICATION	EXPORT OBJECT TO OSX_FILE, EXECUTE PROGRAM ON IT, IMPORT IT BACK
WITHOUT_CLASSIFICATION	export data to file
WITHOUT_CLASSIFICATION	replace any instance of flag in command with file name
WITHOUT_CLASSIFICATION	cannot execute a null command
WITHOUT_CLASSIFICATION	wait for command to complete
WITHOUT_CLASSIFICATION	bad export - do not proceed with command The exportData() method has already put up a message to the user saying the export failed.
WITHOUT_CLASSIFICATION	import the data back from the same file
WITHOUT_CLASSIFICATION	check for possibly bad return from child
WITHOUT_CLASSIFICATION	The DataObject returns a string to put into the popup which can later be converted to the appropriate object type.
WITHOUT_CLASSIFICATION	command returned non-standard value. ask user before proceeding.
WITHOUT_CLASSIFICATION	end of combined export and execute operations
WITHOUT_CLASSIFICATION	If the file was a temp file, delete it now. We assume that Export-only operations want to leave the file in place, but Execute operations just want a temp space to work with and do not want it lying around afterwards.
WITHOUT_CLASSIFICATION	it is handy to have the cannonical path name to show user in error messages. Since getting that name might involve an IOException, we need to put it inside a try statement. However, since the file does exist there is no good reason for getting an IOException at this point, but if we get one there is something seriously wrong and we want to abort. Therefore it make sense to get that name here and save it for later use.
WITHOUT_CLASSIFICATION	create the imput stream (so that DataType objects don't have to)
WITHOUT_CLASSIFICATION	hand file input stream to DataType object for import Also, handle File IO errors here so that DataType objects do not have to.
WITHOUT_CLASSIFICATION	return the expected format for this data
WITHOUT_CLASSIFICATION	since the above did not throw an exception, we now have a good new data object, so change the text area to reflect that new object.
WITHOUT_CLASSIFICATION	cleanup resources used
WITHOUT_CLASSIFICATION	i18n[popupEditableIoPanel.reformatXml=Reformat XML]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.errorWritingFile=There was an error while writing file {0}.\nThe error was:\n{1}]
WITHOUT_CLASSIFICATION	return the expected format for this data
WITHOUT_CLASSIFICATION	If the user has selected a non-cannonical Binary format, we need to convert the text appropriately
WITHOUT_CLASSIFICATION	we need to convert to a different format default to hex
WITHOUT_CLASSIFICATION	I cannot think of any reason for doing anything at all here
WITHOUT_CLASSIFICATION	hand file output stream to DataType object for export Also, handle File IO errors here so that DataType objects do not have to.
WITHOUT_CLASSIFICATION	Hand the current text to the DataType object. DataType object is responsible for validating that the text makes sense for this type of object and converting it to the proper form for output. All errors are handled as IOExceptions
WITHOUT_CLASSIFICATION	handle null
WITHOUT_CLASSIFICATION	if the data is not binary, then there is no need for conversion. if the data is Hex with ASCII not shown as chars, then no conversion needed.
WITHOUT_CLASSIFICATION	no need for conversion
WITHOUT_CLASSIFICATION	the following can cause and exception if the text is not formatted correctly
WITHOUT_CLASSIFICATION	The field is binary and not in the format expected by the DataType default to hex
WITHOUT_CLASSIFICATION	better safe than sorry!
WITHOUT_CLASSIFICATION	make sure there is an instance
WITHOUT_CLASSIFICATION	in case superclass modifies them.
WITHOUT_CLASSIFICATION	i18n[mapdataset.value=Value]
WITHOUT_CLASSIFICATION	i18n[xmlReformatter.xmlWarning2=XML Warning]
WITHOUT_CLASSIFICATION	DataTypes may limit the initial data read from the DB, e.g. to minimize the time needed for the initial load of the table. To edit the contents of a cell, we require that the entire contents of the data element be present in the cell before editing. Therefore we ask the DataType if we need to re-read the data contents without limiting it, and do that read if needed. If there is a problem during the read (e.g. we cannot identify exactly one row in the DB matching the current row in the table), then the cell is not editable. The reverse is not true - if we succeed in reading the data, there may still be other reasons why we cannot edit it, so we need to check for it being editable after the read
WITHOUT_CLASSIFICATION	The following pointer is needed to allow the "Make Editable button to tell the application to set up an editable display panel
WITHOUT_CLASSIFICATION	The list of rows may be empty, in which case we just return.
WITHOUT_CLASSIFICATION	save the pointer needed to enable editing of data on-demand
WITHOUT_CLASSIFICATION	there was a problem with the read It would be nice to report this to the user, but if we try we get in trouble in some cases where the data is continually re-read after the dialog goes away (because the cell is being re-painted). cell is not editable
WITHOUT_CLASSIFICATION	GWG XML format check code
WITHOUT_CLASSIFICATION	if no columns defined, return a generic class to avoid anything throwing an exception.
WITHOUT_CLASSIFICATION	sort the indexes into ascending order (because that is the only function easilly available from the Arrays class)
WITHOUT_CLASSIFICATION	We want to delete rows from the end of the table towards the beginning of the table. If we delete from the front to the back, that throws off the indexes of the rows after each delete and we would have to compensate for that. Example: if we want to delete rows 2 and 4 and do it in that order, then after deleteing row 2 the row that used to be row 4 is now actually row 3, so we would have to subtract 1 from the index to get the row to delete. On the other hand, if we delete row 4 first, then the indexes of all rows prior to that one have not been affected, so we can then delete row 2 without any complications.
WITHOUT_CLASSIFICATION	delete the row from the table
WITHOUT_CLASSIFICATION	The indexes are in ascending order, but we want to delete in descending order (see previous comment), so run through the list backwards.
WITHOUT_CLASSIFICATION	the parse did not find XML, or it was mal-formed
WITHOUT_CLASSIFICATION	do a simple check to see if the string might contain XML or not
WITHOUT_CLASSIFICATION	the parse did not find XML, or it was mal-formed
WITHOUT_CLASSIFICATION	no tags, so cannot be XML
WITHOUT_CLASSIFICATION	the parse did not find XML, or it was mal-formed
WITHOUT_CLASSIFICATION	GWG format check code follows...
WITHOUT_CLASSIFICATION	GWG XML format check code
WITHOUT_CLASSIFICATION	see if there was a problem during parsing
WITHOUT_CLASSIFICATION	End GWG format check code
WITHOUT_CLASSIFICATION	Assume that all start tags are "<...>" or include a space after the tag name (e.g. as in "<SOMETAG args>" and all end tags are "</...>". Remove the syntactic markers, then remove any spaces, and convert to upper case for comparison
WITHOUT_CLASSIFICATION	check for "malformed" XML, or text that happens to contain a "<" with no corresponding ">"
WITHOUT_CLASSIFICATION	Done before actually reading the data from the ResultSet. If done after reading the data from the ResultSet Oracle throws a NullPointerException when processing ResultSetMetaData methods for the ResultSet returned for DatabasemetaData.getExportedKeys.
WITHOUT_CLASSIFICATION	Read the entire row, since some drivers complain if columns are read out of sequence
WITHOUT_CLASSIFICATION	SS: now select/reorder columns
WITHOUT_CLASSIFICATION	Don't log an error message here. It is possible that the user interrupted the query because it was taking too long. Just throw the exception, and let the caller decide whether or not the exception should be logged.
WITHOUT_CLASSIFICATION	SS: Modified to auto-compute column widths if <computeWidths> is true
WITHOUT_CLASSIFICATION	SS: update dynamic column widths
WITHOUT_CLASSIFICATION	Empty block
WITHOUT_CLASSIFICATION	Oracle throws this ex on BLOB data types
WITHOUT_CLASSIFICATION	HSQLDB 1.7.1 throws error.
WITHOUT_CLASSIFICATION	Matt Dahlman: this causes problems with the JDBC driver delivered with Teradata V2R05.00.00.11
WITHOUT_CLASSIFICATION	The JTable used for displaying all DB ResultSet info.
WITHOUT_CLASSIFICATION	we want to allow editing of read-only tables on-demand, but it would be confusing to include the "Make Editable" option when we are already in edit mode, so only allow that option when the background model is updateable AND we are not already editing
WITHOUT_CLASSIFICATION	just in case table is editable, call creator to set up cell editors
WITHOUT_CLASSIFICATION	override the JTable method so that whenever something asks for the cellEditor, we save a reference to that cell editor. Our ASSUMPTION is that the cell editor is only requested when it is about to be activated.
WITHOUT_CLASSIFICATION	handle special case of delete with <null> contents
WITHOUT_CLASSIFICATION	ignore the user input
WITHOUT_CLASSIFICATION	data is an object - assume already validated
WITHOUT_CLASSIFICATION	generally for KEY_TYPED this means add the typed char to the end of the text, but there are some things (e.g. control chars) that are ignored, so let the normal processing do its thing
WITHOUT_CLASSIFICATION	now check to see if the original contents were <null> and we have actually added the input char to the end of it
WITHOUT_CLASSIFICATION	check that we did not just add a char to a <null>
WITHOUT_CLASSIFICATION	replace the null with just the char
WITHOUT_CLASSIFICATION	figure out which column the user clicked on so we can pass in the right column description
WITHOUT_CLASSIFICATION	data is a String, so we need to convert to real object
WITHOUT_CLASSIFICATION	display error message and do not update the table
WITHOUT_CLASSIFICATION	data converted ok, so update the table
WITHOUT_CLASSIFICATION	just in case table is editable, call creator to set up cell editors
WITHOUT_CLASSIFICATION	_colDefs = hdgs;
WITHOUT_CLASSIFICATION	Column not in model
WITHOUT_CLASSIFICATION	call the DataType object for this column and have it check the current value
WITHOUT_CLASSIFICATION	call the underlying model to get the whole data, if possible
WITHOUT_CLASSIFICATION	underlaying data cannot be changed
WITHOUT_CLASSIFICATION	cannot delete rows in read-only table
WITHOUT_CLASSIFICATION	cannot insert row into read-only table
WITHOUT_CLASSIFICATION	default is 12 point, so define font relative to that
WITHOUT_CLASSIFICATION	reset each time we start a new print
WITHOUT_CLASSIFICATION	double headerWidth = tableHeader.getWidth() scale;
WITHOUT_CLASSIFICATION	while
WITHOUT_CLASSIFICATION	if are more columns left, part page
WITHOUT_CLASSIFICATION	Begin code related to printing
WITHOUT_CLASSIFICATION	variables used in printing
WITHOUT_CLASSIFICATION	at least 1 more row left
WITHOUT_CLASSIFICATION	page number message (in smaller type)
WITHOUT_CLASSIFICATION	draw the header on every page
WITHOUT_CLASSIFICATION	cut table image and draw on the page
WITHOUT_CLASSIFICATION	double pageBottom = pageTop + clipHeight + headerHeight;
WITHOUT_CLASSIFICATION	End of code related to printing
WITHOUT_CLASSIFICATION	since user is now using popup, stop editing using the in-cell editor, if any
WITHOUT_CLASSIFICATION	Fixes ClassCastException, see below.
WITHOUT_CLASSIFICATION	((IMainFrame) comp).addInternalFrame(taif, false); taif.setLayer(JLayeredPane.POPUP_LAYER);
WITHOUT_CLASSIFICATION	getRoot() doesn't appear to return the deepest Window, but the first one. If you have a dialog owned by a window you get the dialog, not the window.
WITHOUT_CLASSIFICATION	fudge for larger inset windows
WITHOUT_CLASSIFICATION	Determine the position to place the new internal frame. Ensure that the right end of the internal frame doesn't exend past the right end the parent frame.Use a fudge factor as the dim.width doesn't appear to get the final width of the internal frame (e.g. where pt.x + dim.width == parentBounds.width, the new internal frame still extends past the right end of the parent frame).
WITHOUT_CLASSIFICATION	inner class for the data display pane
WITHOUT_CLASSIFICATION	data is editable in popup
WITHOUT_CLASSIFICATION	Since data is editable, we need to add control panel to manage user requests for DB update, file IO, etc.
WITHOUT_CLASSIFICATION	data is not editable in popup
WITHOUT_CLASSIFICATION	create update/cancel controls using default layout
WITHOUT_CLASSIFICATION	try to convert the text in the popup into a valid instance of type of data object being held in the table cell
WITHOUT_CLASSIFICATION	handle an error in conversion of text to object
WITHOUT_CLASSIFICATION	no problem in conversion - proceed with update ((DataSetViewerTablePanel.MyJTable)_table).setConvertedValueAt( newValue, _row, _col);
WITHOUT_CLASSIFICATION	add buttons to button panel
WITHOUT_CLASSIFICATION	add button panel to main panel
WITHOUT_CLASSIFICATION	Save various information which is needed to do Update & Cancel.
WITHOUT_CLASSIFICATION	The following is only useable for a root type of InternalFrame. If the root type is Dialog or Frame, then other code must be used.
WITHOUT_CLASSIFICATION	we need to table column model to be able to add CellEditors to the individual columns
WITHOUT_CLASSIFICATION	i18n[dataSetViewerEditableTablePanel.warning=Warning]
WITHOUT_CLASSIFICATION	check to see if new data is same as old data, in which case we do not update the underlying data. This is NOT an optimization (though it does speed things up). We need to do this to avoid an error when we check for rows being changed in the DB. If the new value and old value are the same, when we look to see if any rows already exist with the new value, it will find the existing row and claim that the update will make one row identical to the changed row (i.e. that there will be two identical rows in the DB) which is not true. So we avoid the problem by not updating the DB if the data has not been changed. This can happen if user changes the cell contents, then changes them back before exiting the cell.
WITHOUT_CLASSIFICATION	Menu for right-mouse-click when in cell editors
WITHOUT_CLASSIFICATION	use factory to get the appropriate editor
WITHOUT_CLASSIFICATION	cannot edit something that we do not know anything about
WITHOUT_CLASSIFICATION	if there is no updateable model, then we cannot update anything (should never happen - just being safe here)
WITHOUT_CLASSIFICATION	Cannot edit the rowID column, if present
WITHOUT_CLASSIFICATION	add right-click menu to cell editor
WITHOUT_CLASSIFICATION	no underlying data, so cannot be changed
WITHOUT_CLASSIFICATION	We have to look for the modelindex because of the Row Number column
WITHOUT_CLASSIFICATION	ask the DataType object if the two values are the same
WITHOUT_CLASSIFICATION	At this point the user input has been validated and both the new and old values are objects of the appropriate data type. Either or both of newValue and oldValue may be null.
WITHOUT_CLASSIFICATION	first look to see if they are identical objects, e.g. both null
WITHOUT_CLASSIFICATION	the caller does not need to know that nothing happened
WITHOUT_CLASSIFICATION	the caller does not need to know that nothing happened
WITHOUT_CLASSIFICATION	no update done to underlying data
WITHOUT_CLASSIFICATION	if we reach this point, the value has been changed, so fall through to next section
WITHOUT_CLASSIFICATION	if either of the values is null and the other is not, then the data has changed and we fall-through to the change process. Otherwise, check the object contents.
WITHOUT_CLASSIFICATION	no update done to underlying data
WITHOUT_CLASSIFICATION	call the function in the app code that checks for unexpected conditions in the current DB
WITHOUT_CLASSIFICATION	call the function in the app code that saves the data in the persistant storage (e.g. a database). The success or failure of that function (as indicated by the absance or presence of a result errpor/warning message) determines the result of this call. (Since the table is supposed to be editable, we should have an IDataSetUpdateableTableModel object set in our super class.)
WITHOUT_CLASSIFICATION	No problems, so indicate a successful update of the underlying data. In case we are editing an SQL result that contains the edited colum more than once, we need to tell the caller to update all columns. Otherwise generation of where clauses for further editing will fail.
WITHOUT_CLASSIFICATION	The list of rows may be empty, in which case we tell user they should select something first
WITHOUT_CLASSIFICATION	Non-empty set of rows to delete. Make sure user wants to delete
WITHOUT_CLASSIFICATION	Determine the position to place the new internal frame. Ensure that the right end of the internal frame doesn't exend past the right end the parent frame.Use a fudge factor as the dim.width doesn't appear to get the final width of the internal frame (e.g. where pt.x + dim.width == parentBounds.width, the new internal frame still extends past the right end of the parent frame).
WITHOUT_CLASSIFICATION	cancel any current cell editing operations
WITHOUT_CLASSIFICATION	tell creator to delete from DB
WITHOUT_CLASSIFICATION	tell user that there was a problem
WITHOUT_CLASSIFICATION	Setting the starting position is ugly. I just picked a point.
WITHOUT_CLASSIFICATION	get the default values from the DB for the table columns
WITHOUT_CLASSIFICATION	based on defaults from DB, get the default object instance for each column
WITHOUT_CLASSIFICATION	((IMainFrame)comp).addInternalFrame(rdif, false); rdif.setLayer(JLayeredPane.POPUP_LAYER);
WITHOUT_CLASSIFICATION	there was a problem inserting into the DB
WITHOUT_CLASSIFICATION	non-null return tells caller there was a problem
WITHOUT_CLASSIFICATION	add the data to the existing tables
WITHOUT_CLASSIFICATION	Do not try to be fancy and insert the data where the user is looking, just stuff it into the actual model and re-paint the table when the 'table changed' event is fired.
WITHOUT_CLASSIFICATION	everything is ok
WITHOUT_CLASSIFICATION	Setters and Getters for each field.
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	_leftData.add(row[0]); _rightData.add(row[1]);
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	user wants field to be true
WITHOUT_CLASSIFICATION	user wants field to be false
WITHOUT_CLASSIFICATION	1646886: If we've already seen the parameter, don't create another instance as this will force the user to enter the same value twice. Add the previous instance to itemsInSql though so that the parameters value gets propagated to the right spot(s) in the SQL statement.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	let user enter T, t, Y, y, or 1 for true, and F, f, N, n, or 0 for false
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check, so remove them This only applies to Popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	handle cases of null The only legal input in this case is a delete
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	when field is not null delete means set to null, so do it
WITHOUT_CLASSIFICATION	field is not nullable or input was not a delete we have already handled all legal input, so just tell user this is being ignored
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	The SQL Results page puts text into the table cells rather than objects of the appropriate type, so we need to convert befor proceeding
WITHOUT_CLASSIFICATION	use the default settings for the conversion
WITHOUT_CLASSIFICATION	first convert internal data into the string array
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check, so remove them This only applies to Popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	?? There does not seem to be any standard way to represent ?? binary data in a WHERE clause... tell caller we cannot use this in Where clause
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	Convert bytes to Bytes
WITHOUT_CLASSIFICATION	return the text converted from the file
WITHOUT_CLASSIFICATION	Convert Bytes to bytes
WITHOUT_CLASSIFICATION	The NumberFormat object to use for all locale-dependent formatting.
WITHOUT_CLASSIFICATION	handle null
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	get each DataType's info
WITHOUT_CLASSIFICATION	convert each string into Classname, prop, & value and fill it into the data
WITHOUT_CLASSIFICATION	put the property into the hashmap
WITHOUT_CLASSIFICATION	get the hashmap for this type, or create it if this is a new property
WITHOUT_CLASSIFICATION	Conversion Constants
WITHOUT_CLASSIFICATION	number of chars used to represent byte the base radix
WITHOUT_CLASSIFICATION	Convert each byte and put into string buffer
WITHOUT_CLASSIFICATION	if user wants to see ASCII chars as characters, see if this is one that should be displayed that way
WITHOUT_CLASSIFICATION	convert signed to unsigned
WITHOUT_CLASSIFICATION	fall through to default
WITHOUT_CLASSIFICATION	some formats (e.g. hex & octal) extend a negative number to multiple places (e.g. FC becomes FFFC), so chop off extra stuff in front
WITHOUT_CLASSIFICATION	front pad with zeros and add to output
WITHOUT_CLASSIFICATION	always add spaces at end for consistancy
WITHOUT_CLASSIFICATION	get the text to be converted
WITHOUT_CLASSIFICATION	handle ASCII chars Irrespective of the radix, the second byte will always be a space when the data is displayed as a single ASCII character.
WITHOUT_CLASSIFICATION	convert the char into its numeric value
WITHOUT_CLASSIFICATION	default to hex if unknown base passed in
WITHOUT_CLASSIFICATION	the whole column definition
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	return (String)_renderer.renderObject(value);
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	several number formats use '.' as decimal separator, others use ','
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	since we cannot do exact matches on floating point numbers, we cannot use this field in the WHERE clause.
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	convert number conversion issue into IO issue for consistancy
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	whether number is signed or unsigned
WITHOUT_CLASSIFICATION	the number of decimal digits allowed in the number
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check, so remove them This only applies to Popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	convert number conversion issue into IO issue for consistancy
WITHOUT_CLASSIFICATION	look for illegal chars
WITHOUT_CLASSIFICATION	cannot use '-' when unsigned
WITHOUT_CLASSIFICATION	check for max size reached (only works when DB provides non-zero scale info
WITHOUT_CLASSIFICATION	max size reached
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	Properties settable by the user
WITHOUT_CLASSIFICATION	flag for whether we have already loaded the properties or not
WITHOUT_CLASSIFICATION	set to the default
WITHOUT_CLASSIFICATION	set to default
WITHOUT_CLASSIFICATION	no existing blob to re-use
WITHOUT_CLASSIFICATION	for convenience, cast the existing object
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	BLOBs are different from normal data types in that what is actually read from the DB is a descriptor pointing to the data rather than the data itself. During the initial load of the table, the values read from the descriptor may have been limited, but the descriptor itself has been completely read, Therefore we do not need to re-read the datum from the Database because we know that we have the entire descriptor. If the contents of the BLOB have been limited during the initial table load, that will be discovered when we check if the cell is editable and the full data will be read at that time using this descriptor.
WITHOUT_CLASSIFICATION	if the original object is not null, then it contains a Blob object that we need to re-use, since that is the DBs reference to the blob data area. Otherwise, we set the original Blob to null, and the write method needs to know to set the field to null.
WITHOUT_CLASSIFICATION	create new object to hold the different value, but use the same internal BLOB pointer as the original
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	Make sure the entire BLOB data is read in. Return true if it has been read successfully, and false if not.
WITHOUT_CLASSIFICATION	can use an empty blob for editing
WITHOUT_CLASSIFICATION	the whole blob has been previously read in
WITHOUT_CLASSIFICATION	data was not fully read in before, so try to do that now
WITHOUT_CLASSIFICATION	read succeeded, so reset the BlobDescriptor to match
WITHOUT_CLASSIFICATION	we successfully read the whole thing
WITHOUT_CLASSIFICATION	end of constructor for inner class
WITHOUT_CLASSIFICATION	i18n[dataTypeBlob.blobType=BLOB (SQL type 2004)]
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	Convert bytes to Bytes
WITHOUT_CLASSIFICATION	return the text converted from the file
WITHOUT_CLASSIFICATION	Convert Bytes to bytes
WITHOUT_CLASSIFICATION	?? What to do with this error? ?? error message = "Could not read the complete data. Error was: "+ex.getMessage());
WITHOUT_CLASSIFICATION	We always get the BLOB, even when we are not reading the contents. Since the BLOB is just a pointer to the BLOB data rather than the data itself, this operation should not take much time (as opposed to getting all of the data in the blob).
WITHOUT_CLASSIFICATION	BLOB exists, so try to read the data from it based on the user's directions
WITHOUT_CLASSIFICATION	User said to read at least some of the data from the blob
WITHOUT_CLASSIFICATION	determine whether we read all there was in the blob or not
WITHOUT_CLASSIFICATION	user said not to read any of the data from the blob
WITHOUT_CLASSIFICATION	BLOB cannot be used in WHERE clause
WITHOUT_CLASSIFICATION	for convenience cast the object to BlobDescriptor
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	Property change control panel
WITHOUT_CLASSIFICATION	if this panel is called before any instances of the class have been created, we need to load the properties from the DTProperties.
WITHOUT_CLASSIFICATION	GUI components - need to be here because they need to be accessible from the event handlers to alter each other's state.
WITHOUT_CLASSIFICATION	check box for whether to read contents during table load or not
WITHOUT_CLASSIFICATION	Combo box for read-all/read-part of blob
WITHOUT_CLASSIFICATION	Combo box for read-all/read-part of blob
WITHOUT_CLASSIFICATION	text field for how many bytes of Blob to read
WITHOUT_CLASSIFICATION	set up the controls
WITHOUT_CLASSIFICATION	checkbox for read/not-read on table load
WITHOUT_CLASSIFICATION	handle cross-connection between fields
WITHOUT_CLASSIFICATION	Create the panel and add the GUI items to it
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check, so remove them This only applies to Popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	whether number is signed or unsigned
WITHOUT_CLASSIFICATION	the number of decimal digits allowed in the number
WITHOUT_CLASSIFICATION	look for illegal chars
WITHOUT_CLASSIFICATION	cannot use '-' when unsigned
WITHOUT_CLASSIFICATION	check for max size reached (only works when DB provides non-zero scale info
WITHOUT_CLASSIFICATION	max size reached
WITHOUT_CLASSIFICATION	get the values from the controls and set them in the static properties
WITHOUT_CLASSIFICATION	end of inner class
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	convert number conversion issue into IO issue for consistancy
WITHOUT_CLASSIFICATION	Properties settable by the user
WITHOUT_CLASSIFICATION	flag for whether we have already loaded the properties or not
WITHOUT_CLASSIFICATION	get parameters previously set by user, or set default values set to the default
WITHOUT_CLASSIFICATION	set to the default
WITHOUT_CLASSIFICATION	set to the default
WITHOUT_CLASSIFICATION	set to default
WITHOUT_CLASSIFICATION	for convenience, cast the value object to its type
WITHOUT_CLASSIFICATION	all the data from the clob has been read. make sure there are no newlines in it
WITHOUT_CLASSIFICATION	since we do not have all of the data from the clob, we cannot allow editing
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	for convenience, cast the existing object
WITHOUT_CLASSIFICATION	no existing clob to re-use
WITHOUT_CLASSIFICATION	create new object to hold the different value, but use the same internal CLOB pointer as the original
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, but NOT the same one used in the Text and in-cell operations. The in-cell version may replace newline chars with "\n" while this version does not. In other respects it is the same as the in-cell version because both use the _renderer object to do the rendering.
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	we successfully read the whole thing
WITHOUT_CLASSIFICATION	Make sure the entire CLOB data is read in. Return true if it has been read successfully, and false if not.
WITHOUT_CLASSIFICATION	can use an empty clob for editing
WITHOUT_CLASSIFICATION	the whole clob has been previously read in
WITHOUT_CLASSIFICATION	read succeeded, so reset the ClobDescriptor to match
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	?? What to do with this error? ?? error message = "Could not read the complete data. Error was: "+ex.getMessage());
WITHOUT_CLASSIFICATION	We always get the CLOB, even when we are not reading the contents. Since the CLOB is just a pointer to the CLOB data rather than the data itself, this operation should not take much time (as opposed to getting all of the data in the clob).
WITHOUT_CLASSIFICATION	CLOB exists, so try to read the data from it based on the user's directions
WITHOUT_CLASSIFICATION	User said to read at least some of the data from the clob
WITHOUT_CLASSIFICATION	determine whether we read all there was in the clob or not
WITHOUT_CLASSIFICATION	user said not to read any of the data from the clob
WITHOUT_CLASSIFICATION	CLOB cannot be used in WHERE clause
WITHOUT_CLASSIFICATION	for convenience cast the object to ClobDescriptor
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	convert number conversion issue into IO issue for consistancy
WITHOUT_CLASSIFICATION	GUI components - need to be here because they need to be accessible from the event handlers to alter each other's state.
WITHOUT_CLASSIFICATION	Property change control panel
WITHOUT_CLASSIFICATION	check box for whether to read contents during table load or not i18n[dataTypeBigDecimal.readContentsOnFirstLoad=Read contents when table is first loaded;]
WITHOUT_CLASSIFICATION	i18n[dataTypeClob.typeClob=CLOB (SQL type 2005)]
WITHOUT_CLASSIFICATION	if this panel is called before any instances of the class have been created, we need to load the properties from the DTProperties.
WITHOUT_CLASSIFICATION	Combo box for read-all/read-part of blob
WITHOUT_CLASSIFICATION	Combo box for read-all/read-part of blob
WITHOUT_CLASSIFICATION	text field for how many bytes of Blob to read
WITHOUT_CLASSIFICATION	set up the controls
WITHOUT_CLASSIFICATION	checkbox for read/not-read on table load
WITHOUT_CLASSIFICATION	handle cross-connection between fields
WITHOUT_CLASSIFICATION	end of constructor for inner class
WITHOUT_CLASSIFICATION	get the values from the controls and set them in the static properties
WITHOUT_CLASSIFICATION	end of inner class
WITHOUT_CLASSIFICATION	check box for whether to show newlines as "\n" for in-cell display
WITHOUT_CLASSIFICATION	checkbox for displaying newlines as \n in-cell
WITHOUT_CLASSIFICATION	field for size of text to read
WITHOUT_CLASSIFICATION	Create the panel and add the GUI items to it
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	convert number conversion issue into IO issue for consistancy
WITHOUT_CLASSIFICATION	Special case: the input is exactly the output
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	flag for whether we have already loaded the properties or not
WITHOUT_CLASSIFICATION	Properties set-able by the user
WITHOUT_CLASSIFICATION	which locale-dependent format to use; short, medium, long, or full
WITHOUT_CLASSIFICATION	Whether to force user to enter dates in exact format or use heuristics to guess it
WITHOUT_CLASSIFICATION	The DateFormat object to use for all locale-dependent formatting. This is reset each time the user changes the previous settings.
WITHOUT_CLASSIFICATION	values for how to use timestamps in WHERE clauses
WITHOUT_CLASSIFICATION	Define whether or not to use Timestamp in internally generated WHERE clauses, and if so what format to use.
WITHOUT_CLASSIFICATION	get parameters previously set by user, or set default values set to use the Java default
WITHOUT_CLASSIFICATION	use the Java default date-to-string
WITHOUT_CLASSIFICATION	use a date formatter
WITHOUT_CLASSIFICATION	use the DateFormat to parse
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check, so remove them This only applies to Popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	get which locale-dependent format to use set to use the Java default
WITHOUT_CLASSIFICATION	use lenient input or force user to enter exact format set to allow less stringent input
WITHOUT_CLASSIFICATION	how to use Timestamp in WHERE clauses default to SQL standard
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	convert number conversion issue into IO issue for consistancy
WITHOUT_CLASSIFICATION	whether number is signed or unsigned
WITHOUT_CLASSIFICATION	Property change control panel
WITHOUT_CLASSIFICATION	WARNING: this depends on entries in ButtonGroup being in the same order as the values for whereClauseUsage
WITHOUT_CLASSIFICATION	i18n[dateTypeTimestamp.generateWhereClause=For internally generated WHERE clauses:]
WITHOUT_CLASSIFICATION	Combo box for read-all/read-part of blob
WITHOUT_CLASSIFICATION	Combo box for read-all/read-part of blob
WITHOUT_CLASSIFICATION	set up the controls
WITHOUT_CLASSIFICATION	handle cross-connection between fields
WITHOUT_CLASSIFICATION	end of constructor for inner class
WITHOUT_CLASSIFICATION	get the values from the controls and set them in the static properties
WITHOUT_CLASSIFICATION	end of inner class
WITHOUT_CLASSIFICATION	GUI components - need to be here because they need to be accessible from the event handlers to alter each other's state.
WITHOUT_CLASSIFICATION	If you add this method to one of the standard DataTypes in the fw/datasetviewer/cellcomponent directory, you must also add the name of that DataType class to the list in CellComponentFactory, method getControlPanels, variable named initialClassNameList. If the class is being registered with the factory using registerDataType, then you should not include the class name in the list (it will be found automatically), but if the DataType is part of the case statement in the factory method getDataTypeObject, then it does need to be explicitly listed in the getControlPanels method also.
WITHOUT_CLASSIFICATION	IMPORTANT: put the buttons into the array in same order as their associated values defined for whereClauseUsage.
WITHOUT_CLASSIFICATION	Class that displays the various formats available for dates
WITHOUT_CLASSIFICATION	where clause usage group
WITHOUT_CLASSIFICATION	check box for whether to use Java Default or a Locale-dependent format
WITHOUT_CLASSIFICATION	checkbox for Java default/non-default format
WITHOUT_CLASSIFICATION	Objects needed to handle radio buttons
WITHOUT_CLASSIFICATION	lenient is set next
WITHOUT_CLASSIFICATION	Create the panel and add the GUI items to it
WITHOUT_CLASSIFICATION	lenient checkbox
WITHOUT_CLASSIFICATION	add label for the radio button group
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	the number of decimal digits allowed in the number
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check, so remove them This only applies to Popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	look for illegal chars
WITHOUT_CLASSIFICATION	cannot use '-' when unsigned
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	check for max size reached (only works when DB provides non-zero scale info
WITHOUT_CLASSIFICATION	max size reached
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	convert number conversion issue into IO issue for consistancy
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	whether number is signed or unsigned
WITHOUT_CLASSIFICATION	the number of decimal digits allowed in the number
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	If there are parameters in the SQL string, then we need to prompt for some answers.
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	look for illegal chars
WITHOUT_CLASSIFICATION	cannot use '-' when unsigned
WITHOUT_CLASSIFICATION	check for max size reached (only works when DB provides non-zero scale info
WITHOUT_CLASSIFICATION	max size reached
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	convert number conversion issue into IO issue for consistancy
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	flag for whether we have already loaded the properties or not
WITHOUT_CLASSIFICATION	flag for whether to use the default Java format (true) or the Locale-dependent format (false)
WITHOUT_CLASSIFICATION	which locale-dependent format to use; short, medium, long, or full
WITHOUT_CLASSIFICATION	Whether to force user to enter dates in exact format or use heuristics to guess it
WITHOUT_CLASSIFICATION	The DateFormat object to use for all locale-dependent formatting. This is reset each time the user changes the previous settings.
WITHOUT_CLASSIFICATION	If the cell is editable, we really must have a valid DataType object, so the 'else' clause should never be used. It is just there as defensive programming.
WITHOUT_CLASSIFICATION	Properties settable by the user
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	get parameters previously set by user, or set default values set to use the Java default
WITHOUT_CLASSIFICATION	get which locale-dependent format to use set to use the Java default
WITHOUT_CLASSIFICATION	use lenient input or force user to enter exact format set to allow less stringent input
WITHOUT_CLASSIFICATION	use the Java default date-to-string
WITHOUT_CLASSIFICATION	use a date formatter
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	use the DateFormat to parse
WITHOUT_CLASSIFICATION	allow the user to enter just the hour or just hour and minute and assume the un-entered values are 0
WITHOUT_CLASSIFICATION	user just entered the hour, so append min & sec
WITHOUT_CLASSIFICATION	user entered hour an min. See if they also entered secs
WITHOUT_CLASSIFICATION	user did not enter seconds
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check, so remove them This only applies to Popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	i18n[dataTypeTime.typeTime=Time (SQL type 92)]
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	the whole column definition
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	convert number conversion issue into IO issue for consistancy
WITHOUT_CLASSIFICATION	if this panel is called before any instances of the class have been created, we need to load the properties from the DTProperties.
WITHOUT_CLASSIFICATION	Combo box for read-all/read-part of blob
WITHOUT_CLASSIFICATION	Combo box for read-all/read-part of blob
WITHOUT_CLASSIFICATION	set up the controls
WITHOUT_CLASSIFICATION	handle cross-connection between fields
WITHOUT_CLASSIFICATION	end of constructor for inner class
WITHOUT_CLASSIFICATION	get the values from the controls and set them in the static properties
WITHOUT_CLASSIFICATION	end of inner class
WITHOUT_CLASSIFICATION	Property change control panel
WITHOUT_CLASSIFICATION	If you add this method to one of the standard DataTypes in the fw/datasetviewer/cellcomponent directory, you must also add the name of that DataType class to the list in CellComponentFactory, method getControlPanels, variable named initialClassNameList. If the class is being registered with the factory using registerDataType, then you should not include the class name in the list (it will be found automatically), but if the DataType is part of the case statement in the factory method getDataTypeObject, then it does need to be explicitly listed in the getControlPanels method also.
WITHOUT_CLASSIFICATION	Class that displays the various formats available for dates
WITHOUT_CLASSIFICATION	GUI components - need to be here because they need to be accessible from the event handlers to alter each other's state.
WITHOUT_CLASSIFICATION	check box for whether to use Java Default or a Locale-dependent format
WITHOUT_CLASSIFICATION	checkbox for Java default/non-default format
WITHOUT_CLASSIFICATION	lenient checkbox
WITHOUT_CLASSIFICATION	Create the panel and add the GUI items to it
WITHOUT_CLASSIFICATION	lenient is set next
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	The NumberFormat object to use for all locale-dependent formatting.
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	return (String)_renderer.renderObject(value);
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	several number formats use '.' as decimal separator, others use ','
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	since we cannot do exact matches on floating point numbers, we cannot use this field in the WHERE clause.
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	convert number conversion issue into IO issue for consistancy
WITHOUT_CLASSIFICATION	Properties settable by the user
WITHOUT_CLASSIFICATION	flag for whether we have already loaded the properties or not
WITHOUT_CLASSIFICATION	get parameters previously set by user, or set default values set to the default
WITHOUT_CLASSIFICATION	return ((String)obj1).equals(obj2);
WITHOUT_CLASSIFICATION	First we have the cell-related and Text-table operations.
WITHOUT_CLASSIFICATION	Now define the Popup-related operations.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in the Text and in-cell operations.
WITHOUT_CLASSIFICATION	The following is used by both in-cell and Popup operations.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea. Since neither cell nor popup are allowed to edit, just ignore anything seen here.
WITHOUT_CLASSIFICATION	special handling of operations while editing Strings
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	the whole column definition
WITHOUT_CLASSIFICATION	The NumberFormat object to use for all locale-dependent formatting.
WITHOUT_CLASSIFICATION	return (String)_renderer.renderObject(value);
WITHOUT_CLASSIFICATION	if this panel is called before any instances of the class have been created, we need to load the properties from the DTProperties.
WITHOUT_CLASSIFICATION	check box for whether to read contents during table load or not
WITHOUT_CLASSIFICATION	set up the controls
WITHOUT_CLASSIFICATION	checkbox for read/not-read on table load
WITHOUT_CLASSIFICATION	end of constructor for inner class
WITHOUT_CLASSIFICATION	get the values from the controls and set them in the static properties
WITHOUT_CLASSIFICATION	end of inner class
WITHOUT_CLASSIFICATION	Property change control panel
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value cannot create default value for unknown data type
WITHOUT_CLASSIFICATION	Create the panel and add the GUI items to it
WITHOUT_CLASSIFICATION	The total number of decimal digits allowed in the number
WITHOUT_CLASSIFICATION	the number of decimal digits allowed to the right of the decimal point in the number
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check, so remove them This only applies to Popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	several number formats use '.' as decimal separator, others use ','
WITHOUT_CLASSIFICATION	convert number conversion issue into IO issue for consistancy
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	Some DBs give a negative number when they do not have a value for the scale. Assume that if the _scale is 0 or positive that the DB really means for that to be the scale, but if it is negative then we do not check.
WITHOUT_CLASSIFICATION	check the total number of digits in the number. Since the string version of the number is therepresentation of the digits in that number and including possibly a plus or minus and a decimal, start by counting the number of digits in the string.
WITHOUT_CLASSIFICATION	now remove the non-digit chars, if any
WITHOUT_CLASSIFICATION	Some drivers (e.g. Oracle) give precision as 0 in some cases. When precision is 0, we cannot check the length, so do not try.
WITHOUT_CLASSIFICATION	user entered '+' or '-' at a bad place
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid value of this data type
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	Properties settable by the user
WITHOUT_CLASSIFICATION	flag for whether we have already loaded the properties or not
WITHOUT_CLASSIFICATION	get parameters previously set by user, or set default values set to the default
WITHOUT_CLASSIFICATION	First we have the cell-related and Text-table operations.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in the Text and in-cell operations.
WITHOUT_CLASSIFICATION	The following is used by both in-cell and Popup operations.
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	Property change control panel
WITHOUT_CLASSIFICATION	special handling of operations while editing Strings
WITHOUT_CLASSIFICATION	if this panel is called before any instances of the class have been created, we need to load the properties from the DTProperties.
WITHOUT_CLASSIFICATION	check box for whether to read contents during table load or not
WITHOUT_CLASSIFICATION	set up the controls
WITHOUT_CLASSIFICATION	checkbox for read/not-read on table load
WITHOUT_CLASSIFICATION	end of constructor for inner class
WITHOUT_CLASSIFICATION	get the values from the controls and set them in the static properties
WITHOUT_CLASSIFICATION	end of inner class
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value cannot create default value for unknown data type
WITHOUT_CLASSIFICATION	Create the panel and add the GUI items to it
WITHOUT_CLASSIFICATION	GUI components - need to be here because they need to be accessible from the event handlers to alter each other's state.
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	the other obj is null, so see if this non-null obj contains a null value, which is equivilent. Assume that if we have read some of the data and we still have _data == null, then the value in the DB is actually null.
WITHOUT_CLASSIFICATION	the other obj has not read the data yet.
WITHOUT_CLASSIFICATION	the other obj has not read the data yet.
WITHOUT_CLASSIFICATION	the other object has real data
WITHOUT_CLASSIFICATION	this one does not, so they are not equal
WITHOUT_CLASSIFICATION	both have actual data, so compare the strings Note that if one has read all of the data and the other has read only part of the data that we will say that they are NOT equal.
WITHOUT_CLASSIFICATION	Convert the data into an ascii representation using the standard convention
WITHOUT_CLASSIFICATION	we have the whole contents of the BLOB tell user the data is truncated
WITHOUT_CLASSIFICATION	Getters and Setters
WITHOUT_CLASSIFICATION	Restore the contents to the original value.
WITHOUT_CLASSIFICATION	Set the contents of the component without resetting the original value.
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	check for max size reached (only works when DB provides non-zero scale info
WITHOUT_CLASSIFICATION	max size reached
WITHOUT_CLASSIFICATION	special handling of operations while editing Strings
WITHOUT_CLASSIFICATION	the other object has real data
WITHOUT_CLASSIFICATION	this one does not, so they are not equal
WITHOUT_CLASSIFICATION	we have the whole contents of the CLOB
WITHOUT_CLASSIFICATION	tell user the data is truncated
WITHOUT_CLASSIFICATION	Getters and Setters
WITHOUT_CLASSIFICATION	Note: tabs and newlines are allowed in string fields, even though they are unusual.
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	Properties settable by the user
WITHOUT_CLASSIFICATION	flag for whether we have already loaded the properties or not
WITHOUT_CLASSIFICATION	get parameters previously set by user, or set default values set to the default
WITHOUT_CLASSIFICATION	set to the default
WITHOUT_CLASSIFICATION	set to default
WITHOUT_CLASSIFICATION	set to default
WITHOUT_CLASSIFICATION	set to default
WITHOUT_CLASSIFICATION	for strings, a "blank" field is allowed, so only switch to null when there is nothing left in the field and user does delete
WITHOUT_CLASSIFICATION	the number of characters allowed in this field
WITHOUT_CLASSIFICATION	First we have the cell-related and Text-table operations.
WITHOUT_CLASSIFICATION	prevent editing if text contains newlines
WITHOUT_CLASSIFICATION	if we are not limiting anything, return false
WITHOUT_CLASSIFICATION	if the value is null, then it was read ok
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	The following is used by both in-cell and Popup operations.
WITHOUT_CLASSIFICATION	special handling of operations while editing Strings
WITHOUT_CLASSIFICATION	if the data is longer than the limit, then we have previously re-read the contents and we do not need to re-read it again
WITHOUT_CLASSIFICATION	if we are limiting all columns, then we need to re-read because we do not know if we have all the data or not
WITHOUT_CLASSIFICATION	check for the case where we are limiting some columns but not limiting this particular column
WITHOUT_CLASSIFICATION	column is limited and length == limit, so need to re-read column is not limited, so we have the whole thing
WITHOUT_CLASSIFICATION	Now define the Popup-related operations.
WITHOUT_CLASSIFICATION	The only thing that would prevent us from editing a string in the popup is if that string has been truncated when read from the DB. Thus, being able to edit the string is the same as not needing to re-read the data.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog.
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	check for max size reached (only works when DB provides non-zero scale info
WITHOUT_CLASSIFICATION	max size reached
WITHOUT_CLASSIFICATION	Note: tabs and newlines are allowed in string fields, even though they are unusual.
WITHOUT_CLASSIFICATION	for strings, a "blank" field is allowed, so only switch to null when there is nothing left in the field and user does delete
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	data is longer than the limit, so we need to do more checking
WITHOUT_CLASSIFICATION	this column is limited, so truncate the data
WITHOUT_CLASSIFICATION	this column cannot be used in a WHERE clause
WITHOUT_CLASSIFICATION	We cannot use this data in the WHERE clause if it has been truncated. Since being truncated is the same as needing to re-read, only use this in the WHERE clause if we do not need to re-read
WITHOUT_CLASSIFICATION	value is truncated, so do not use in WHERE clause
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	data must fit into the column's max size
WITHOUT_CLASSIFICATION	for string, just send the text to the output file
WITHOUT_CLASSIFICATION	i18n[dataTypeString.allowLongVarchar=Allow LONGVARCHAR type to be used in WHERE clause]
WITHOUT_CLASSIFICATION	i18n[dataTypeString.newlines=Show newlines as \\n within cells]
WITHOUT_CLASSIFICATION	i18n[dataTypeString.limitSize=Limit size of strings read during initial table load to max of:]
WITHOUT_CLASSIFICATION	Property change control panel
WITHOUT_CLASSIFICATION	If you add this method to one of the standard DataTypes in the fw/datasetviewer/cellcomponent directory, you must also add the name of that DataType class to the list in CellComponentFactory, method getControlPanels, variable named initialClassNameList. If the class is being registered with the factory using registerDataType, then you should not include the class name in the list (it will be found automatically), but if the DataType is part of the case statement in the factory method getDataTypeObject, then it does need to be explicitly listed in the getControlPanels method also.
WITHOUT_CLASSIFICATION	GUI components - need to be here because they need to be accessible from the event handlers to alter each other's state.
WITHOUT_CLASSIFICATION	set up the controls
WITHOUT_CLASSIFICATION	check box for whether to show newlines as "\n" for in-cell display
WITHOUT_CLASSIFICATION	check box for whether to show newlines as "\n" for in-cell display
WITHOUT_CLASSIFICATION	check box for whether to use LONGVARCHAR in WHERE clause (Oracle does not allow that type in WHERE clause)
WITHOUT_CLASSIFICATION	check box for whether to do any limiting of the data read during initial table load
WITHOUT_CLASSIFICATION	check box for whether to show newlines as "\n" for in-cell display
WITHOUT_CLASSIFICATION	check box for whether to show newlines as "\n" for in-cell display
WITHOUT_CLASSIFICATION	i18n[dataTypeString.typeChar=CHAR, VARCHAR, LONGVARCHAR (SQL types 1, 12, -1)]
WITHOUT_CLASSIFICATION	handle cross-connection between fields
WITHOUT_CLASSIFICATION	get the values from the controls and set them in the static properties
WITHOUT_CLASSIFICATION	checkbox for displaying newlines as \n in-cell
WITHOUT_CLASSIFICATION	checkbox for using LONG in WHERE clause
WITHOUT_CLASSIFICATION	checkbox for limit/no-limit on data read during initial table load
WITHOUT_CLASSIFICATION	fill in the current limit length
WITHOUT_CLASSIFICATION	fill in list of column names to check against
WITHOUT_CLASSIFICATION	Create the panel and add the GUI items to it
WITHOUT_CLASSIFICATION	end while
WITHOUT_CLASSIFICATION	end of inner class
WITHOUT_CLASSIFICATION	Handle list of column names
WITHOUT_CLASSIFICATION	remove old name list from map
WITHOUT_CLASSIFICATION	extract column names from text area
WITHOUT_CLASSIFICATION	find the next name in the text
WITHOUT_CLASSIFICATION	cleanup and standardize the name, and add it to the map
WITHOUT_CLASSIFICATION	skip blank lines
WITHOUT_CLASSIFICATION	add name to comma-separated string for saving in properties
WITHOUT_CLASSIFICATION	end ok
WITHOUT_CLASSIFICATION	flag for whether we have already loaded the properties or not
WITHOUT_CLASSIFICATION	if this panel is called before any instances of the class have been created, we need to load the properties from the DTProperties.
WITHOUT_CLASSIFICATION	get the values from the controls and set them in the static properties
WITHOUT_CLASSIFICATION	end of inner class
WITHOUT_CLASSIFICATION	flag for whether to use the default Java format (true) or the Locale-dependent format (false)
WITHOUT_CLASSIFICATION	get parameters previously set by user, or set default values set to use the Java default
WITHOUT_CLASSIFICATION	map of existing DataType objects for each column. The key is the ColumnDisplayDefinition object, and the value is the DataTypeObject for that column's data type.
WITHOUT_CLASSIFICATION	map of DBMS-specific registered data handlers. The key is a string of the form: <SQL type as a string>:<SQL type name> and the value is a factory that can create instances of DBMS-specific DataTypeComponets.
WITHOUT_CLASSIFICATION	The current JTable that we are working with. This is used only to see when the user moves to a different JTable so we know when to clear the HashMap of DataTypeObjects.
WITHOUT_CLASSIFICATION	logging mechanism for errors
WITHOUT_CLASSIFICATION	Operations for Text and in-cell work
WITHOUT_CLASSIFICATION	default behavior: toString
WITHOUT_CLASSIFICATION	Use a CYAN background to indicate that the cell is editable in the popup
WITHOUT_CLASSIFICATION	since the previous entry might have changed the color, we need to reset the color back to default value for table cells, taking into account whether the cell is selected or not.
WITHOUT_CLASSIFICATION	default behavior if no DataType object is to use the DefaultColumnRenderer with no modification.
WITHOUT_CLASSIFICATION	there was no data type object, so this data type is unknown to squirrel and thus cannot be edited.
WITHOUT_CLASSIFICATION	default - if we do not know the data type, then we cannot re-read it
WITHOUT_CLASSIFICATION	we have an appropriate data type object
WITHOUT_CLASSIFICATION	there was no data type object, so this data type is unknown to squirrel and thus cannot be edited.
WITHOUT_CLASSIFICATION	we have an appropriate data type object
WITHOUT_CLASSIFICATION	we have an appropriate data type object
WITHOUT_CLASSIFICATION	Default Operation
WITHOUT_CLASSIFICATION	no object, so do not assume binary editing will work
WITHOUT_CLASSIFICATION	Operations for Popup work.
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	we have an appropriate data type object
WITHOUT_CLASSIFICATION	Default Operation
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	we have an appropriate data type object
WITHOUT_CLASSIFICATION	if no object for this data type, then cannot use value in where clause
WITHOUT_CLASSIFICATION	there was no data type object, so this data type is unknown to squirrel and thus cannot be edited.
WITHOUT_CLASSIFICATION	if no DataType object, then there is nothing to handle File IO, so cannot do it
WITHOUT_CLASSIFICATION	if no DataType object, then there is nothing to handle File IO, so cannot do it
WITHOUT_CLASSIFICATION	if no DataType object, then there is nothing to handle File IO, so cannot do it
WITHOUT_CLASSIFICATION	let DataType object speak for itself
WITHOUT_CLASSIFICATION	let DataType object speak for itself
WITHOUT_CLASSIFICATION	let DataType object speak for itself
WITHOUT_CLASSIFICATION	Get control panels to let user adjust properties on DataType classes.
WITHOUT_CLASSIFICATION	This is the list of names of classes that: - support standard SQL type codes and thus do not need to be registered - provide the getControlPanel method to allow manipulation of properties These classes should all be named net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.DataTypeXXXX because they are part of the standard delivery of the product, and thus should be local to this directory.
WITHOUT_CLASSIFICATION	make a single list of all class names that we need to check. Start with the names of known, standard classes that provide Control Panels
WITHOUT_CLASSIFICATION	Now go through the list in the given order to get the panels
WITHOUT_CLASSIFICATION	Internal method used for both cell and popup work.
WITHOUT_CLASSIFICATION	keep a hash table of the column objects so we can reuse them.
WITHOUT_CLASSIFICATION	new table - clear hash map
WITHOUT_CLASSIFICATION	See if we have a custom data-type registered.
WITHOUT_CLASSIFICATION	should never happen
WITHOUT_CLASSIFICATION	remember this DataType object so we can reuse it
WITHOUT_CLASSIFICATION	Use the standard SQL type code to get the right handler for this data type.
WITHOUT_CLASSIFICATION	Some databases store a time component in DATE columns (Oracle) The user can set a preference for DATEs that allows them to be read as TIMESTAMP columns instead. This doesn't appear to have ill effects for databases that are standards compliant (such as MySQL or PostgreSQL). If the user prefers it, use the TIMESTAMP data type instead of DATE.
WITHOUT_CLASSIFICATION	set up for integers
WITHOUT_CLASSIFICATION	set up for string types
WITHOUT_CLASSIFICATION	-8 is ROWID in Oracle. It's a string, but it's auto-assigned
WITHOUT_CLASSIFICATION	set up for Binary types
WITHOUT_CLASSIFICATION	Add begin
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	Oracle jdbc driver doesn't properly identify this column in ResultSetMetaData as read-only. For now, just use isAutoIncrement flag to simulate this setting.
WITHOUT_CLASSIFICATION	Add end
WITHOUT_CLASSIFICATION	data type is unknown to us. It may be an unusual type like "JAVA OBJECT" or "ARRAY", or it may be a DBMS-specific type
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	Properties settable by the user
WITHOUT_CLASSIFICATION	flag for whether we have already loaded the properties or not
WITHOUT_CLASSIFICATION	flag for whether to use the default Java format (true) or the Locale-dependent format (false)
WITHOUT_CLASSIFICATION	which locale-dependent format to use; short, medium, long, or full
WITHOUT_CLASSIFICATION	Whether to force user to enter dates in exact format or use heuristics to guess it
WITHOUT_CLASSIFICATION	Whether or not to read date type columns with rs.getTimestamp()
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	get parameters previously set by user, or set default values set to use the Java default
WITHOUT_CLASSIFICATION	get which locale-dependent format to use set to use the Java default
WITHOUT_CLASSIFICATION	use lenient input or force user to enter exact format set to allow less stringent input
WITHOUT_CLASSIFICATION	use the Java default date-to-string
WITHOUT_CLASSIFICATION	use a date formatter
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	use the DateFormat to parse
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check, so remove them This only applies to Popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	if value contains "-" it probably has a date component
WITHOUT_CLASSIFICATION	treat it like a timestamp
WITHOUT_CLASSIFICATION	treat it like a time - no date component
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	convert number conversion issue into IO issue for consistancy
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	Property change control panel
WITHOUT_CLASSIFICATION	if this panel is called before any instances of the class have been created, we need to load the properties from the DTProperties.
WITHOUT_CLASSIFICATION	Class that displays the various formats available for dates
WITHOUT_CLASSIFICATION	Oracle stores time information in java.sql.Types.Date columns This tells Oracle that we are only talking about the date part.
WITHOUT_CLASSIFICATION	i18n[dataTypeDate.typeDate=Date (SQL type 91)]
WITHOUT_CLASSIFICATION	checkbox for whether to interpret input leniently or not i18n[dataTypeDate.allowInexact=allow inexact format on input]
WITHOUT_CLASSIFICATION	GUI components - need to be here because they need to be accessible from the event handlers to alter each other's state.
WITHOUT_CLASSIFICATION	Combo box for read-all/read-part of blob
WITHOUT_CLASSIFICATION	Combo box for read-all/read-part of blob
WITHOUT_CLASSIFICATION	set up the controls
WITHOUT_CLASSIFICATION	handle cross-connection between fields
WITHOUT_CLASSIFICATION	end of constructor for inner class
WITHOUT_CLASSIFICATION	get the values from the controls and set them in the static properties
WITHOUT_CLASSIFICATION	check box for whether to use Java Default or a Locale-dependent format
WITHOUT_CLASSIFICATION	checkbox for Java default/non-default format
WITHOUT_CLASSIFICATION	lenient checkbox
WITHOUT_CLASSIFICATION	readdDateAsTimestamp checkbox
WITHOUT_CLASSIFICATION	Create the panel and add the GUI items to it
WITHOUT_CLASSIFICATION	whether or not to read date type columns with rs.getTimestamp() i18n[dataTypeDate.readDateAsTimestamp=Interpret DATE columns as TIMESTAMP]
WITHOUT_CLASSIFICATION	end of inner class
WITHOUT_CLASSIFICATION	lenient is set next
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	Properties settable by the user
WITHOUT_CLASSIFICATION	flag for whether we have already loaded the properties or not
WITHOUT_CLASSIFICATION	The original value set in this cell by the table
WITHOUT_CLASSIFICATION	Used by editing operations to set textField value without changing the original text saved in the class
WITHOUT_CLASSIFICATION	Used by editing operations to reset the field to its original value.
WITHOUT_CLASSIFICATION	Cell related methods come next.
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	get parameters previously set by user, or set default values set to the default
WITHOUT_CLASSIFICATION	i18n[dataTypeUnknown.readContentsOnLoad=Read contents when table is first loaded and display as string]
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	if this panel is called before any instances of the class have been created, we need to load the properties from the DTProperties.
WITHOUT_CLASSIFICATION	GUI components - need to be here because they need to be accessible from the event handlers to alter each other's state.
WITHOUT_CLASSIFICATION	check box for whether to read contents during table load or not
WITHOUT_CLASSIFICATION	Property change control panel
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value cannot create default value for unknown data type
WITHOUT_CLASSIFICATION	set up the controls
WITHOUT_CLASSIFICATION	checkbox for read/not-read on table load
WITHOUT_CLASSIFICATION	end of constructor for inner class
WITHOUT_CLASSIFICATION	get the values from the controls and set them in the static properties
WITHOUT_CLASSIFICATION	end of inner class
WITHOUT_CLASSIFICATION	The original value set in this cell by the table
WITHOUT_CLASSIFICATION	When the table initiates editing and sets this field, remember the value as the original value of the field
WITHOUT_CLASSIFICATION	Used by editing operations to set textField value without changing the original text saved in the class
WITHOUT_CLASSIFICATION	Used by editing operations to reset the field to its original value.
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	Anticipate the same issue for BLOBS as for BINARY and LONGVARBINARY. registerColumnType(Types.BLOB, 2147000000, "bit varying($l)");
WITHOUT_CLASSIFICATION	Don't use bit(1) for boolean as Frontbase then reports it as BINARY type instead of BIT.
WITHOUT_CLASSIFICATION	Anticipate the same issue for VARBINARY as for BINARY and LONGVARBINARY. registerColumnType(Types.VARBINARY, 2147000000, "bit varying($l)");
WITHOUT_CLASSIFICATION	Frontbase requires CASCADE or RESTRICT keywords.
WITHOUT_CLASSIFICATION	"DROP INDEX $indexName$";
WITHOUT_CLASSIFICATION	public String getDropIndexSQL(String tableName, String indexName, boolean cascade, DatabaseObjectQualifier qualifier, SqlGenerationPreferences prefs) { return null; }
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	DB2 spec says max=2147483647, but the driver throws an exception
WITHOUT_CLASSIFICATION	DB2 spec says max=2147483647, but the driver throws an exception
WITHOUT_CLASSIFICATION	DB2 spec says max=2147483647, but the driver throws an exception
WITHOUT_CLASSIFICATION	Derby is real close to DB2. Only difference I've found so far is 48 instead of 53 for float length llimit.
WITHOUT_CLASSIFICATION	convert each column that will be a member key to non-null - this doesn't hurt if they are already null.
WITHOUT_CLASSIFICATION	Derby requires that columns be not-null before applying a unique constraint
WITHOUT_CLASSIFICATION	select v.VIEWDEFINITION from sys.SYSVIEWS v, sys.SYSTABLES t, sys.SYSSCHEMAS s where v.TABLEID = t.TABLEID and s.SCHEMAID = t.SCHEMAID and UPPER(t.TABLENAME) = 'VIEWNAME'and UPPER(s.SCHEMANAME) = 'SCHEMANAME'
WITHOUT_CLASSIFICATION	driver returns 8 for "long byte", yet it can store 2GB of data.
WITHOUT_CLASSIFICATION	"CREATE $unique$ $storageOption$ INDEX $indexName$ " + "ON $tableName$ ( $columnName; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	There is a reason that we don't want to use DatabaseObjectType.SESSION here. The "session" nodes that this expander is creating should not be confused with the SQuirreL session. These session nodes are Oracle sessions that an administrator has the privileges to see. So we must not use DatabaseObjectType.SESSION, or else these nodes get expanded with the database DefaultdatabasExpander.
WITHOUT_CLASSIFICATION	String ST_CREATE_INDEX_STYLE_TWO = "CREATE $unique$ $storageOption$ INDEX $indexName$ " + "ON $tableName$ ( $columnName; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	<create_sequence_statement> ::= CREATE SEQUENCE [<schema_name>.]<sequence_name> [INCREMENT BY <integer>] [START WITH <integer>] [MAXVALUE <integer> | NOMAXVALUE] [MINVALUE <integer> | NOMINVALUE] [CYCLE | NOCYCLE] [CACHE <unsigned_integer> | NOCACHE] [ORDER | NOORDER]
WITHOUT_CLASSIFICATION	"CREATE SEQUENCE $sequenceName$ $startWith$ $increment$ $minimum$ $maximum$ $cache$ $cycle$";
WITHOUT_CLASSIFICATION	<create_view_statement> ::= CREATE [OR REPLACE] VIEW <table_name> [(<alias_name>,...)] AS <query_expression> [WITH CHECK OPTION]
WITHOUT_CLASSIFICATION	"CREATE VIEW $viewName$ " + "AS $selectStatement$ $withCheckOption$";
WITHOUT_CLASSIFICATION	"DROP SEQUENCE $sequenceName$ $cascade$";
WITHOUT_CLASSIFICATION	"DROP VIEW $viewName$";
WITHOUT_CLASSIFICATION	"RENAME TABLE $oldObjectName$ TO $newObjectName$";
WITHOUT_CLASSIFICATION	"RENAME VIEW $oldObjectName$ TO $newObjectName$";
WITHOUT_CLASSIFICATION	alter column clauses
WITHOUT_CLASSIFICATION	alter name clauses
WITHOUT_CLASSIFICATION	alter default clauses
WITHOUT_CLASSIFICATION	Additional Index Creation
WITHOUT_CLASSIFICATION	alter type clauses
WITHOUT_CLASSIFICATION	drop column clauses
WITHOUT_CLASSIFICATION	cascade constraint clauses
WITHOUT_CLASSIFICATION	sequence clauses
WITHOUT_CLASSIFICATION	view clauses
WITHOUT_CLASSIFICATION	Clauses
WITHOUT_CLASSIFICATION	i18n[DialectUtils.columnDropUnsupported={0} doesn''t support dropping a column]
WITHOUT_CLASSIFICATION	ALTER TABLE tableName ADD CONSTRAINT constraintName UNIQUE (column1, column2);
WITHOUT_CLASSIFICATION	deletes the last ", "
WITHOUT_CLASSIFICATION	DROP INDEX indexName [ CASCADE ];
WITHOUT_CLASSIFICATION	DROP INDEX indexName [ CASCADE ] [ ON <tableName> ];
WITHOUT_CLASSIFICATION	deletes the last ", "
WITHOUT_CLASSIFICATION	DROP SEQUENCE sequenceName CASCADE;
WITHOUT_CLASSIFICATION	DROP VIEW viewName CASCADE;
WITHOUT_CLASSIFICATION	CREATE UNIQUE INDEX indexName ON tableName USING btree (column1, column2) TABLESPACE WHERE constraints;
WITHOUT_CLASSIFICATION	ALTER TABLE oldTableName RENAME TO newTableName;
WITHOUT_CLASSIFICATION	ALTER VIEW oldTableName RENAME TO newTableName; RENAME oldTableName TO newTableName;
WITHOUT_CLASSIFICATION	Since dialect doesn't support altering sequences, drop then re-create.
WITHOUT_CLASSIFICATION	ALTER SEQUENCE sequenceName INCREMENT BY increment MINVALUE minimum MAXVALUE maxvalue RESTART WITH restart CACHE cache CYCLE;
WITHOUT_CLASSIFICATION	INSERT INTO tableName (column1, column2) query;
WITHOUT_CLASSIFICATION	String templateStr = null;
WITHOUT_CLASSIFICATION	desc_t1
WITHOUT_CLASSIFICATION	i18n[oracle.displayDetails=Display index details]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.btnOk=OK]
WITHOUT_CLASSIFICATION	i18n[DialectUtils.error.getprimarykey=Unable to get primary key info for table {0}]
WITHOUT_CLASSIFICATION	Group all columns by index
WITHOUT_CLASSIFICATION	Serveral DBs automatically create an index for primary key fields and return this index in getIndexInfo(). We remove this index from the script because it would break the script with an index already exists error.
WITHOUT_CLASSIFICATION	Append nothing - standard says this is equivalent to NO ACTION and some DBs (e.g. Oracle don't accept ... NO ACTION)
WITHOUT_CLASSIFICATION	i18n[CreateTableScriptCommand.error.getprimarykey=Unable to get primary key info for table {0}]
WITHOUT_CLASSIFICATION	override common behavior to use drop column style two
WITHOUT_CLASSIFICATION	No go through the parse SQL and build the final SQL replacing parameters with values is goes.
WITHOUT_CLASSIFICATION	Strip quotes from the column name
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ ALTER COLUMN $columnName$ IDENTITY";
WITHOUT_CLASSIFICATION	Add package node to contain standalone procedures.
WITHOUT_CLASSIFICATION	Add packages.
WITHOUT_CLASSIFICATION	i18n[oracle.explainPlan=Explain Plan]
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ " + "ADD $constraint$ $constraintName$ UNIQUE $index$ $indexName$ $indexType$ ( $indexColumnName$ )";
WITHOUT_CLASSIFICATION	"ALTER SEQUENCE $sequenceName$ " + "$restartWith$ $startValue$ " + "$incrementBy$ $incrementValue$ ";
WITHOUT_CLASSIFICATION	Operation column increased
WITHOUT_CLASSIFICATION	Options column increased
WITHOUT_CLASSIFICATION	Expand all of the rows in the tree if the root is non null.
WITHOUT_CLASSIFICATION	Clear any previous plan
WITHOUT_CLASSIFICATION	CREATE SEQUENCE [IF NOT EXISTS] newSequenceName [START WITH long] [INCREMENT BY long] [CACHE long]
WITHOUT_CLASSIFICATION	CREATE [FORCE] VIEW [IF NOT EXISTS] newViewName [(columnName [,..])] AS select "CREATE VIEW $viewName$ " + "AS $selectStatement$ $with$ $checkOptionType$ $checkOption$";
WITHOUT_CLASSIFICATION	i18n[oracle.userDetails=Details]
WITHOUT_CLASSIFICATION	i18n[oracle.displayUserDetails=Display User details]
WITHOUT_CLASSIFICATION	"DROP INDEX $indexName$";
WITHOUT_CLASSIFICATION	"DROP SEQUENCE $sequenceName$ $cascade$";
WITHOUT_CLASSIFICATION	"DROP VIEW $viewName$";
WITHOUT_CLASSIFICATION	ALTER TABLE $tableName$ DROP CONSTRAINT $constraintName$
WITHOUT_CLASSIFICATION	"ALTER TABLE $oldObjectName$ RENAME TO $newObjectName$";
WITHOUT_CLASSIFICATION	"select view_definition " + "from information_schema.views " + "where table_schema = ? " + "and table_name = ? ";
WITHOUT_CLASSIFICATION	"CREATE $unique$ $storageOption$ INDEX $indexName$ " + "ON $tableName$ ( $columnName; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	MySQL disallows quoted column identifiers.
WITHOUT_CLASSIFICATION	Always use "to" column name since name changes happen first
WITHOUT_CLASSIFICATION	ALTER TABLE <tableName> MODIFY <columnName> MEDIUMINT NOT NULL AUTO_INCREMENT PRIMARY KEY
WITHOUT_CLASSIFICATION	SQLExecuterTask task = new SQLExecuterTask(_session, sql, new DefaultSQLExecuterHandler(_session)); jmh to run async_session.getApplication().getThreadPool().addTask(task); jmhtask.run(); Set the ? to the statement identifier
WITHOUT_CLASSIFICATION	i18n[oracle.noSql=No SQL selected for execution.]
WITHOUT_CLASSIFICATION	only check once per session
WITHOUT_CLASSIFICATION	if doesnt exist prompt to create it.
WITHOUT_CLASSIFICATION	From MySQL 5.0 manual:
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.createPlanTableMsg=The Oracle Plan Table '{0}' doesnt exist in the current schema. Do you want to create it?]
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.createPlanTableTitle=Create Plan Table]
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.planTableUnavailable=Explain plans will be unavailable for this session]
WITHOUT_CLASSIFICATION	MySQL disallows quoted column identifiers.
WITHOUT_CLASSIFICATION	MySQL disallows quoted column identifiers.
WITHOUT_CLASSIFICATION	Tell the user that they won't be able to show the explain plan
WITHOUT_CLASSIFICATION	MySQL disallows quoted column identifiers when dropping a column.
WITHOUT_CLASSIFICATION	MySQL disallows quoted column identifiers when adding a primary key.
WITHOUT_CLASSIFICATION	MySQL disallows quoted constraint names
WITHOUT_CLASSIFICATION	MySQL disallows quoted constraint names
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	PostgreSQL 8.0 reports length as -1 sometimes. Why??
WITHOUT_CLASSIFICATION	ALTER TABLE oldTableName RENAME TO newTableName;
WITHOUT_CLASSIFICATION	Can be done as follows in PostgresINSERT INTO mytable(id,name) SELECT 1, 'pizza' UNION SELECT 2, 'donuts' UNION SELECT 3, 'milk';
WITHOUT_CLASSIFICATION	sql.append(DialectUtils.shapeQualifiableIdentifier(newTableName, qualifier, prefs, this));
WITHOUT_CLASSIFICATION	rename view has that same syntax as that of tables.
WITHOUT_CLASSIFICATION	DROP INDEX indexName CASCADE;
WITHOUT_CLASSIFICATION	SELECT last_value, max_value, min_value, cache_value, increment_by, is_cycled FROM sequenceName;
WITHOUT_CLASSIFICATION	ALTER TABLE tableName ALTER COLUMN columnName SET DEFAULT nextval('tableName_columnName_seq'); ALTER SEQUENCE tableName_columnName_seq OWNED BY tableName.columnName;
WITHOUT_CLASSIFICATION	In PostgreSQL we need to add a sequence to support auto-increment (name: tablename_colname_seq)
WITHOUT_CLASSIFICATION	registerColumnType(Types.CLOB, 31982, "varchar($l)");
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ RENAME COLUMN $oldColumnName$ to $newColumnName$";
WITHOUT_CLASSIFICATION	Oracle won't allow in-place conversion between CLOB and VARCHAR
WITHOUT_CLASSIFICATION	add <columnName>_2 null as CLOB
WITHOUT_CLASSIFICATION	update table set <columnName>_2 = <columnName>
WITHOUT_CLASSIFICATION	drop <columnName>
WITHOUT_CLASSIFICATION	rename <columnName>_2 to <columnName>
WITHOUT_CLASSIFICATION	Cannot use a sequence for the default value of a column. However, we could always reference the ssequence in a trigger:
WITHOUT_CLASSIFICATION	:new.id := seq_name@nextval;
WITHOUT_CLASSIFICATION	throw new UnsupportedOperationException("Oracle doesn't support using sequences for column defaults");
WITHOUT_CLASSIFICATION	create add sequence sql
WITHOUT_CLASSIFICATION	create trigger sql for column that is to be auto-incremented
WITHOUT_CLASSIFICATION	In Oracle, no action is implied when the ON DELETE clause is omitted
WITHOUT_CLASSIFICATION	In Oracle, matchFull modifier is not supported
WITHOUT_CLASSIFICATION	Oracle doesn't allow unique bitmap indexes.
WITHOUT_CLASSIFICATION	Sybase Adaptive Server Enterprise
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.choosePlanTableMsg=Choose a PLAN_TABLE to store the result in]
WITHOUT_CLASSIFICATION	MySQL 4.x and below MySQL 5.x and above
WITHOUT_CLASSIFICATION	registerColumnType(Types.LONGVARCHAR, 31982, "varchar($l)");
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ ALTER COLUMN $columnName$ SET $nullable$";
WITHOUT_CLASSIFICATION	add a default value "ALTER TABLE $tableName$ " + "ALTER $columnName$ SET DEFAULT $defaultValue$";
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ RENAME COLUMN $oldColumnName$ to $newColumnName$";
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.choosePlanTableTitle=Available PLAN_TABLEs]
WITHOUT_CLASSIFICATION	alter table FKTESTCHILDTABLE add CONSTRAINT foo_const UNIQUE (MYID)
WITHOUT_CLASSIFICATION	This is what the spec says: CREATE SEQUENCE [schema_name.]sequence_name [INCREMENT BY value], [START WITH value], [MAXVALUE value | NOMAXVALUE], [MINVALUE value | NOMINVALUE], [CYLCE | NOCYLCE]
WITHOUT_CLASSIFICATION	Currently, OpenEdge only supports the PUB schema for sequences.
WITHOUT_CLASSIFICATION	Names of the columns.
WITHOUT_CLASSIFICATION	CREATE VIEW name [(view_col [, view_col …])] AS <select> [WITH CHECK OPTION];
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	"CREATE VIEW $viewName$ " + "AS $selectStatement$ $withCheckOption$";
WITHOUT_CLASSIFICATION	"DROP SEQUENCE $sequenceName$ $cascade$";
WITHOUT_CLASSIFICATION	"ALTER TABLE $oldObjectName$ RENAME TO $newObjectName$";
WITHOUT_CLASSIFICATION	Currently, OpenEdge only supports the PUB schema for sequences.
WITHOUT_CLASSIFICATION	SELECT 'CREATE VIEW FOOVIEW AS ' || VIEWTEXT FROM SYSPROGRESS.SYSVIEWS where VIEWNAME = 'FOOVIEW' and OWNER = 'MANNINGR'
WITHOUT_CLASSIFICATION	Oddly enough, progress will let you add pks to existing tables, but not drop them.
WITHOUT_CLASSIFICATION	The registrations below are made in support for new types introduced in Java6
WITHOUT_CLASSIFICATION	Replace "-8" with Types.ROWID when Java6 is the minimum supported version
WITHOUT_CLASSIFICATION	Replace "-9" with Types.NVARCHAR when Java6 is the minimum supported version
WITHOUT_CLASSIFICATION	Replace "-15" with Types.NCHAR when Java6 is the minimum supported version
WITHOUT_CLASSIFICATION	Replace "-16" with Types.LONGNVARCHAR when Java6 is the minimum supported version
WITHOUT_CLASSIFICATION	Replace "2009" with Types.SQLXML when Java6 is the minimum supported version
WITHOUT_CLASSIFICATION	Replace "2011" with Types.NCLOB when Java6 is the minimum supported version
WITHOUT_CLASSIFICATION	registerColumnType(Types.BOOLEAN, "bit");
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.enumeration=#]
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ ALTER COLUMN $columnName$ IDENTITY";
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ ALTER COLUMN $columnName$ SET $nullable$";
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ " + "ADD CONSTRAINT $constraintName$ UNIQUE ($columnName; separator=\",\"$)";
WITHOUT_CLASSIFICATION	"ALTER TABLE $childTableName$ " + "ADD $constraint$ $constraintName$ FOREIGN KEY ( $childColumn; separator=\",\"$ ) " + "REFERENCES $parentTableName$ ( $parentColumn; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	ALTER TABLE <tablename> ADD [CONSTRAINT <constraintname>] PRIMARY KEY (<column list>);
WITHOUT_CLASSIFICATION	Pre-requisites are that column needs to be primary key and it must be integer type. alter table IDENTITYTEST2 alter column myid identity
WITHOUT_CLASSIFICATION	"CREATE $unique$ $storageOption$ INDEX $indexName$ " + "ON $tableName$ ( $columnName; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ " + "ADD CONSTRAINT $constraintName$ UNIQUE ($columnName; separator=\",\"$)";
WITHOUT_CLASSIFICATION	ALTER TABLE <tablename> ADD [CONSTRAINT <constraintname>] UNIQUE (<column list>);
WITHOUT_CLASSIFICATION	ALTER SEQUENCE <sequencename> RESTART WITH <value>;
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.operation=Operation]
WITHOUT_CLASSIFICATION	CREATE [UNIQUE] INDEX <index> ON <table> (<column> [DESC] [, ...]) [DESC];
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.options=Options]
WITHOUT_CLASSIFICATION	"DROP INDEX $indexName$";
WITHOUT_CLASSIFICATION	"DROP SEQUENCE $sequenceName$ $cascade$";
WITHOUT_CLASSIFICATION	"DROP VIEW $viewName$";
WITHOUT_CLASSIFICATION	ALTER TABLE $tableName$ DROP CONSTRAINT $constraintName$
WITHOUT_CLASSIFICATION	CREATE VIEW <viewname>[(<viewcolumn>,..) AS SELECT ... FROM ... [WHERE Expression] [ORDER BY orderExpression [, ...]] [LIMIT <limit> [OFFSET <offset>]];
WITHOUT_CLASSIFICATION	"CREATE VIEW $viewName$ " + "AS $selectStatement$ $with$ $checkOptionType$ $checkOption$";
WITHOUT_CLASSIFICATION	DROP INDEX index [IF EXISTS];
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.mode=Mode]
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.cost=Cost]
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.objectName=Object Name]
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.cardinality=Cardinality]
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.bytes=Bytes]
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	Types of the columns.
WITHOUT_CLASSIFICATION	"DROP INDEX $indexName$";
WITHOUT_CLASSIFICATION	TreeNode Interface
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	Axion doesn't allow column alterations of the nullable attribute. Fortunately, it doesn't require this to add a primary key.
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	Keys that can be embedded in templates for replacement later.
WITHOUT_CLASSIFICATION	check option not supported
WITHOUT_CLASSIFICATION	"CREATE VIEW $viewName$ " + "AS $selectStatement$ $with$ $checkOptionType$ $checkOption$";
WITHOUT_CLASSIFICATION	Template bodies
WITHOUT_CLASSIFICATION	SQL Reference Guide says 32k, but I get: The specified row size exceeded the maximum allowable row width., SQL State: 50002, Error Code: 2045 when I go above 8000.
WITHOUT_CLASSIFICATION	I tried 8000 for the max length of VARCHAR and ingres gives an exception (cannot assign a value of type long varchar to a varchar field). So I limit this field to 4000 for now - the Ingres product documentation indicated that 32k was acceptable. I've tested 4k and it seems to work fine.
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	"ALTER TABLE $childTableName$ " + "ADD $constraint$ $constraintName$ FOREIGN KEY ( $childColumn; separator=\",\"$ ) " + "REFERENCES $parentTableName$ ( $parentColumn; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	"CREATE $unique$ $storageOption$ INDEX $indexName$ " + "ON $tableName$ ( $columnName; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	alter table foo add constraint foocon UNIQUE (myid)
WITHOUT_CLASSIFICATION	alter table <table> add constraint <constraint>
WITHOUT_CLASSIFICATION	"CREATE VIEW $viewName$ " + "AS $selectStatement$ $with$ $checkOptionType$ $checkOption$";
WITHOUT_CLASSIFICATION	"CREATE SEQUENCE $sequenceName$ $startWith$ $increment$ $minimum$ $maximum$ $cache$ $cycle$";
WITHOUT_CLASSIFICATION	"ALTER SEQUENCE $sequenceName$ $startWith$ $increment$ $minimum$ $maximum$ $cache$ $cycle$";
WITHOUT_CLASSIFICATION	[EXEC SQL] CREATE VIEW view_name [(column_name {, column_name})] AS select_stmt [WITH CHECK OPTION]
WITHOUT_CLASSIFICATION	"DROP VIEW $viewName$";
WITHOUT_CLASSIFICATION	SELECT TEXT_SEGMENT FROM IIVIEWS WHERE TABLE_NAME = <VIEWNAME> AND TABLE_OWNER = <SCHEMANAME>
WITHOUT_CLASSIFICATION	"DROP SEQUENCE $sequenceName$ $cascade$";
WITHOUT_CLASSIFICATION	The TreeTableNode interface.
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	ALTER TABLE test3 ALTER COLUMN nullvc varchar(30)
WITHOUT_CLASSIFICATION	alter table FKTESTCHILDTABLE add CONSTRAINT foo_const UNIQUE (MYID)
WITHOUT_CLASSIFICATION	CREATE VIEW name [(view_col [, view_col …])] AS <select> [WITH CHECK OPTION];
WITHOUT_CLASSIFICATION	"select 'CREATE VIEW ' || VIEWNAME || ' AS ' || VIEWDEFINITION " + "from POINTBASE.SYSVIEWS v, POINTBASE.SYSSCHEMATA s " + "where v.SCHEMAID = s.SCHEMAID " + "and v.VIEWNAME = 'TESTVIEW' " + "and s.SCHEMANAME = 'DBCOPY' ";
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	"ALTER TABLE $oldObjectName$ RENAME TO $newObjectName$";
WITHOUT_CLASSIFICATION	SQL-Server doesn't support a cascade clause.
WITHOUT_CLASSIFICATION	Can be done as follows in MS SQLServer INSERT INTO mytable(id,name) SELECT 1, 'pizza' UNION SELECT 2, 'donuts' UNION SELECT 3, 'milk';
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	alter table FKTESTCHILDTABLE add CONSTRAINT foo_const UNIQUE (MYID)
WITHOUT_CLASSIFICATION	<drop_index_statement> ::= DROP INDEX <index_name> [ON <table_name>]
WITHOUT_CLASSIFICATION	"DROP SEQUENCE $sequenceName$ $cascade$";
WITHOUT_CLASSIFICATION	The problem with this is data is LONGVARBINARY and there are no McKoi SQL functions to convert it to a character string which is executing the SQL produced by this method is supposed to return. return "SELECT data FROM SYS_INFO.sUSRView where name = '" + viewName + "'";
WITHOUT_CLASSIFICATION	private static final DB2400Dialect db2400Dialect = new DB2400Dialect();
WITHOUT_CLASSIFICATION	dbNameDialectMap.put("DB2/390", db2390Dialect); dbNameDialectMap.put("DB2/400", db2400Dialect);
WITHOUT_CLASSIFICATION	DB2 spec says max=2147483647, but the driver throws an exception
WITHOUT_CLASSIFICATION	DB2 spec says max=2147483647, but the driver throws an exception
WITHOUT_CLASSIFICATION	DB2 spec says max=2147483647, but the driver throws an exception
WITHOUT_CLASSIFICATION	User doesn't wish for us to try to auto-detect the dest db.
WITHOUT_CLASSIFICATION	The driver throws an exception for varchar with length > 3924
WITHOUT_CLASSIFICATION	DB2 spec says max=2147483647, but the driver throws an exception
WITHOUT_CLASSIFICATION	The registrations below are made in support for new types introduced in Java6
WITHOUT_CLASSIFICATION	Replace "-8" with Types.ROWID when Java6 is the minimum supported version
WITHOUT_CLASSIFICATION	Replace "-9" with Types.NVARCHAR when Java6 is the minimum supported version
WITHOUT_CLASSIFICATION	Replace "-15" with Types.NCHAR when Java6 is the minimum supported version
WITHOUT_CLASSIFICATION	Replace "-16" with Types.LONGNVARCHAR when Java6 is the minimum supported version
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	Replace "2009" with Types.SQLXML when Java6 is the minimum supported version
WITHOUT_CLASSIFICATION	Replace "2011" with Types.NCLOB when Java6 is the minimum supported version
WITHOUT_CLASSIFICATION	alter table <tablename> drop column <columnName>
WITHOUT_CLASSIFICATION	DB2 needs to reorg table after changing nullabolity
WITHOUT_CLASSIFICATION	SELECT SEQSCHEMA,SEQNAME,DEFINER,DEFINERTYPE,OWNER,OWNERTYPE,SEQID,SEQTYPE,INCREMENT,START,MAXVALUE,MINVALUE, NEXTCACHEFIRSTVALUE,CYCLE,CACHE,ORDER,DATATYPEID,SOURCETYPEID,CREATE_TIME,ALTER_TIME,PRECISION,ORIGIN, REMARKS FROM SYSCAT.SEQUENCES WHERE SEQNAME = ? and SEQSCHEMA = <schema>
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	DB2 doesn't support cascade, set default, or set null for FK constraint update action
WITHOUT_CLASSIFICATION	DB2 doesn't support set default for FK constraint delete action
WITHOUT_CLASSIFICATION	DB2 requires that columns be not-null before applying a unique constraint
WITHOUT_CLASSIFICATION	RENAME TABLE <tablename> TO <newtablename>;
WITHOUT_CLASSIFICATION	SELECT 'CREATE VIEW <newViewName> AS ' || SUBSTR(TEXT , LOCATE('as', TEXT)+2, LENGTH(TEXT)) FROM SYSCAT.VIEWS WHERE VIEWSCHEMA = '<schema>' AND VIEWNAME = '<oldViewName>';
WITHOUT_CLASSIFICATION	This is another way to do this. Modifying the column type to serial is much easier. Thanks to Doug Lawry for setting me straight!!
WITHOUT_CLASSIFICATION	CREATE SEQUENCE testAutoIncrementTable_myid_seq INCREMENT BY 1 MINVALUE 1 NOMAXVALUE START WITH 1 NOCYCLE; CREATE FUNCTION nextAutoVal () RETURNING INTEGER; RETURN testAutoIncrementTable_myid_seq.NEXTVAL; END FUNCTION; I finally did get a trigger to work, but I had to use a function: CREATE TRIGGER myid_trigger INSERT ON testAutoIncrementTable FOR EACH ROW (execute function nextAutoVal() into myid);
WITHOUT_CLASSIFICATION	must not qualify column name
WITHOUT_CLASSIFICATION	Unfortunately we cannot simply call getColumnTypeAlterSQL since "serial" type is 4 (which is the same as java.sql.Types.Integer, so we would get back an integer column, not a serial column). So we piece it together ourselves: ALTER TABLE dbcopydest:"informix".serialtest MODIFY myid integer
WITHOUT_CLASSIFICATION	We only want the index sql which is the second statement in the array. Informix requires the constraint stuck onto the end of the statement.
WITHOUT_CLASSIFICATION	Informix doesn't allow quoting column names.
WITHOUT_CLASSIFICATION	deletes the last ", "
WITHOUT_CLASSIFICATION	deletes the last ", " deletes the last ", "
WITHOUT_CLASSIFICATION	must not quote column names
WITHOUT_CLASSIFICATION	ALTER TABLE <tableName> ADD CONSTRAINT UNIQUE (<columnList>) CONSTRAINT <constraintName>
WITHOUT_CLASSIFICATION	alter table test drop constraint u_test
WITHOUT_CLASSIFICATION	deletes the last ", "
WITHOUT_CLASSIFICATION	SELECT 'unknown' as last_value, T1.max_val AS max_value, T1.min_val AS min_value, T1.cache AS cache_size, T1.inc_val AS increment_by, case T1.cycle as is_cycled FROM informix.syssequences AS T1, informix.systables AS T2 WHERE T2.tabid = T1.tabid and T2.owner = '<schema>' and T2.tabname = '<sequenceName>'
WITHOUT_CLASSIFICATION	must not qualify the new table name
WITHOUT_CLASSIFICATION	SELECT viewtext FROM informix.systables AS T1, informix.sysviews AS T2 WHERE tabname = 'a_view' AND T2.tabid = T1.tabid
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	alter table FKTESTCHILDTABLE add CONSTRAINT foo_const UNIQUE (MYID)
WITHOUT_CLASSIFICATION	"DROP INDEX $indexName$";
WITHOUT_CLASSIFICATION	ALTER TABLE $tableName$ DROP CONSTRAINT $constraintName$
WITHOUT_CLASSIFICATION	CREATE VIEW name [(view_col [, view_col …])] AS <select> [WITH CHECK OPTION];
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ " + "ADD CONSTRAINT $constraintName$ UNIQUE ($columnName; separator=\",\"$)";
WITHOUT_CLASSIFICATION	autoinc_gen_<column>
WITHOUT_CLASSIFICATION	"CREATE $unique$ $storageOption$ INDEX $indexName$ " + "ON $tableName$ ( $columnName; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	SET GENERATOR name TO int;
WITHOUT_CLASSIFICATION	CREATE [UNIQUE] [ASC[ENDING] | DESC[ENDING]] INDEX index ON table (col [, col …]);
WITHOUT_CLASSIFICATION	"DROP VIEW $viewName$";
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	What follows comes from the SQuirreL firebird dialect extension.
WITHOUT_CLASSIFICATION	i18n[SQLCatalogsComboBox.noneLabel=None]
WITHOUT_CLASSIFICATION	Sort the rows by the property name.
WITHOUT_CLASSIFICATION	look for places to break the string
WITHOUT_CLASSIFICATION	Get the largest width and height
WITHOUT_CLASSIFICATION	private int _lastX;
WITHOUT_CLASSIFICATION	parentRect = new Rectangle(Toolkit.getDefaultToolkit().getScreenSize());
WITHOUT_CLASSIFICATION	i18n ? What is this used for?
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	The following pointer is needed to allow the "Make Editable button to tell the application to set up an editable display panel
WITHOUT_CLASSIFICATION	save the pointer needed to enable editing of data on-demand
WITHOUT_CLASSIFICATION	save the pointer needed to enable editing of data on-demand
WITHOUT_CLASSIFICATION	Object obj = action.getValue(BaseAction.IBaseActionPropertyNames.ROLLOVER_ICON);
WITHOUT_CLASSIFICATION	pointer to the viewer This is needed for insert and delete operations
WITHOUT_CLASSIFICATION	save the pointer needed for insert and delete operations
WITHOUT_CLASSIFICATION	add the menu items to the menu
WITHOUT_CLASSIFICATION	add entries for insert and delete rows only if table is updateable and already editable (ie. allowEditing is false)
WITHOUT_CLASSIFICATION	Cut and Paste need to be worked on, so for now do not include them Also, the copy operations do not seem to work right - we may need special versions for the cellEditor menu. add(_cut); add(_copy); add(_copyHtml); add(_paste); addSeparator();
WITHOUT_CLASSIFICATION	i18n[TablePopupMenu.export=Export CSV / MS Excel ...]
WITHOUT_CLASSIFICATION	SS: Display complete column header as tooltip if the column isn't wide enough to display it
WITHOUT_CLASSIFICATION	Tell the DataSetViewer to delete the rows Note: rows are indexes in the SORTABLE model, not the ACTUAL model
WITHOUT_CLASSIFICATION	int modelCol = getTable().convertColumnIndexToModel(col);
WITHOUT_CLASSIFICATION	getTable().doLayout();
WITHOUT_CLASSIFICATION	getTable().doLayout();
WITHOUT_CLASSIFICATION	Added by Patch 2856103 for Apple/Mac
WITHOUT_CLASSIFICATION	Added by Patch 2856103 for Apple/Mac
WITHOUT_CLASSIFICATION	Rendering the column that the mouse has been pressed in.
WITHOUT_CLASSIFICATION	If this is the column that the table is currently is currently sorted by then display the sort icon.
WITHOUT_CLASSIFICATION	This is not the column that the mouse has been pressed in.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Point pt = JFCUtilities.computePopupLocation(evt, evt.getComponent(), this);
WITHOUT_CLASSIFICATION	The message area is on the right of the statusbar and takes up all available space.
WITHOUT_CLASSIFICATION	Any other components are on the right.
WITHOUT_CLASSIFICATION	void reload();
WITHOUT_CLASSIFICATION	Dimension dim = sp.getPreferredSize(); dim.width = PREFERRED_WIDTH; sp.setPreferredSize(new Dimension(sp.getPreferredSize().width, 200));
WITHOUT_CLASSIFICATION	Dimension dim = getPreferredSize(); dim.width = PREFERRED_WIDTH; setPreferredSize(dim); setRows(3);
WITHOUT_CLASSIFICATION	first attempt to add data to underlying table model
WITHOUT_CLASSIFICATION	Comparable c1 = (Comparable)data1; return c1.compareTo(data2) _iAscending;
WITHOUT_CLASSIFICATION	i18n[TableExportCsvController.noFile=You must provide a export file name.]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvController.replaceFile=The export file already exisits. Would you like to replace it?]
WITHOUT_CLASSIFICATION	Menues that are also shown in the main window Session menu might be in this popup. If we don't remove them, the Session won't be Garbage Collected.
WITHOUT_CLASSIFICATION	This was originaly done every time. and the count of instantiated objects was amazing
WITHOUT_CLASSIFICATION	We look forward
WITHOUT_CLASSIFICATION	top
WITHOUT_CLASSIFICATION	right
WITHOUT_CLASSIFICATION	Can't happen
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.formatXLS=Export MS Excel (XLS) file]
WITHOUT_CLASSIFICATION	tell the underlying data model to make itself editable, which includes telling the GUI to rebuild itself
WITHOUT_CLASSIFICATION	show all tooltips for ten seconds before hiding
WITHOUT_CLASSIFICATION	Row 1
WITHOUT_CLASSIFICATION	abort the export
WITHOUT_CLASSIFICATION	Row 2
WITHOUT_CLASSIFICATION	abort the export
WITHOUT_CLASSIFICATION	Row 3
WITHOUT_CLASSIFICATION	private static final StringManager s_stringMgr = StringManagerFactory.getStringManager(TableCopyCommand.class);
WITHOUT_CLASSIFICATION	All sheets and cells added. Now write out the workbook
WITHOUT_CLASSIFICATION	_table.requestFocus();
WITHOUT_CLASSIFICATION	Only for restoring from XML etc.
WITHOUT_CLASSIFICATION	tell the underlying data model to stop forcing edit mode and return to the mode specified in the session parameters, which includes telling the GUI to rebuild itself
WITHOUT_CLASSIFICATION	Only for restoring from XML etc.
WITHOUT_CLASSIFICATION	register as a listener for mouse events
WITHOUT_CLASSIFICATION	We look backwards
WITHOUT_CLASSIFICATION	We look backwards
WITHOUT_CLASSIFICATION	view
WITHOUT_CLASSIFICATION	i18n[TableExportCsvCommand.writeFileSuccess=Export to file "{0}" is complete.]
WITHOUT_CLASSIFICATION	String sql = "A'''' sss ; GO ;; GO'"; String sql = "A\n--x\n--y\n\nB"; String sql = "GO GO";
WITHOUT_CLASSIFICATION	/ Handling of comments
WITHOUT_CLASSIFICATION	skip ahead so the cursor is now immediately after the begin comment string
WITHOUT_CLASSIFICATION	This is responsible that comments are not in curQuery
WITHOUT_CLASSIFICATION	Add end
WITHOUT_CLASSIFICATION	Some drivers for DB2 don't return SYSFUN as a schema name. A number of system stored procs are kept in this schema.
WITHOUT_CLASSIFICATION	PostgreSQL (at least 7.3.2) returns false for supportsStoredProcedures() even though it does support them.
WITHOUT_CLASSIFICATION	Use a set rather than a list as some combinations of MS SQL and the JDBC/ODBC return multiple copies of each table type.
WITHOUT_CLASSIFICATION	Treating indexes as tables interferes with the operation of the PostgreSQL plugin
WITHOUT_CLASSIFICATION	Treating sequences as tables interferes with the operation of the PostgreSQL plugin
WITHOUT_CLASSIFICATION	There are many of these "tables", that PostgreSQL throws SQLExceptions for whenever a table-like operation is attempted.
WITHOUT_CLASSIFICATION	Informix: when no database is given in the connect url, then no table types are returned. The catalog can be changed which will select a database, but by that time it is too late.
WITHOUT_CLASSIFICATION	create a mapping of names if we have supertable info, since we need to find the ITableInfo again for re-ordering.
WITHOUT_CLASSIFICATION	store all plain table info we have.
WITHOUT_CLASSIFICATION	re-order nodes if the tables are stored hierachically
WITHOUT_CLASSIFICATION	remove from toplevel.
WITHOUT_CLASSIFICATION	MM-MYSQL driver doesnt support null for column name.
WITHOUT_CLASSIFICATION	See if there is a plugin-registered DataTypeComponent that can handle this column.
WITHOUT_CLASSIFICATION	Oracle's 'TIMESTAMP WITH TIME ZONE' == -101 Oracle's 'TIMESTAMP WITH LOCAL TIME ZONE' == -102
WITHOUT_CLASSIFICATION	i18n[MetaDataDecoratorDataSet.noJarFiles=No files specified in 'Extra ClassPath' tab for driver]
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	Since we are reading Meta-data about the DB, we should never see a BLOB. If we do, the contents are not interpretable by Squirrel, so just tell the user that it is a BLOB and that it has data.
WITHOUT_CLASSIFICATION	Since we are reading Meta-data about the DB, we should never see a CLOB. However, if we do we assume that it is printable text and that the user wants to see it, so read in the entire thing.
WITHOUT_CLASSIFICATION	Add begin
WITHOUT_CLASSIFICATION	Add end
WITHOUT_CLASSIFICATION	?? }
WITHOUT_CLASSIFICATION	final String columnClassName = _rsmd.getColumnClassName(idx);
WITHOUT_CLASSIFICATION	binary types
WITHOUT_CLASSIFICATION	1i8n[MetaDataDecoratorDataSet.classNameLabel=JDBC Driver CLASSNAME]
WITHOUT_CLASSIFICATION	1i8n[MetaDataDecoratorDataSet.classPathLabel=JDBC Driver CLASSPATH]
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	private final static ILogger s_log = LoggerController.createLogger(ResultSetColumnReader.class);
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	check for Informix - it has very "special" qualified names
WITHOUT_CLASSIFICATION	Progress claims to support catalogs in data manip - but it actually doesn't honor that claim.
WITHOUT_CLASSIFICATION	In case the connection won't be able to tell its Auto Commit state, this is the best default we have.
WITHOUT_CLASSIFICATION	DatabaseObjectType.DATABASE_TYPE_DBO=Database Type
WITHOUT_CLASSIFICATION	DatabaseObjectType.INDEX_TYPE_DBO=Index Type
WITHOUT_CLASSIFICATION	DatabaseObjectType.PROC_TYPE_DBO=Stored Procedure Type
WITHOUT_CLASSIFICATION	DatabaseObjectType.SEQUENCE_TYPE_DBO=Sequence Type
WITHOUT_CLASSIFICATION	DatabaseObjectType.TABLE_TYPE_DBO=Table Type
WITHOUT_CLASSIFICATION	DatabaseObjectType.TRIGGER_TYPE_DBO=Trigger Type
WITHOUT_CLASSIFICATION	DatabaseObjectType.UDT_TYPE_DBO=UDT Type
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	tables that have at least one parent table
WITHOUT_CLASSIFICATION	tables that have at least one child table
WITHOUT_CLASSIFICATION	tables that have at least one child table and have a least one parent table
WITHOUT_CLASSIFICATION	Avoid the hit next time
WITHOUT_CLASSIFICATION	Avoid the hit next time
WITHOUT_CLASSIFICATION	Close the ResultSet
WITHOUT_CLASSIFICATION	Close the ResultSet's Statement if it is non-null. This frees open cursors.
WITHOUT_CLASSIFICATION	t1 depends on t2
WITHOUT_CLASSIFICATION	t2 depends on t1
WITHOUT_CLASSIFICATION	build up datastructure. final cache.
WITHOUT_CLASSIFICATION	i18n
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	classes.add(((CacheEntry)it.next())._objClass);
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Empty.
WITHOUT_CLASSIFICATION	Empty.
WITHOUT_CLASSIFICATION	Empty.
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	Lazily create the event.
WITHOUT_CLASSIFICATION	return get().getProperty("mrj.version") != null;
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	i18n[TaskThreadPool.errorDuringTaskExecMsg=Error ocured during task execution:]
WITHOUT_CLASSIFICATION	item.setIcon(null);
WITHOUT_CLASSIFICATION	Some actions dont have accelerators
WITHOUT_CLASSIFICATION	This slash stuff is a ...
WITHOUT_CLASSIFICATION	-- Constructors --
WITHOUT_CLASSIFICATION	-- Path-component accessors --
WITHOUT_CLASSIFICATION	-- Attribute accessors --
WITHOUT_CLASSIFICATION	-- File operations --
WITHOUT_CLASSIFICATION	-- Filesystem interface --
WITHOUT_CLASSIFICATION	-- Basic infrastructure --
WITHOUT_CLASSIFICATION	Count of available or free threads.
WITHOUT_CLASSIFICATION	Should there me a Max Number of threads?
WITHOUT_CLASSIFICATION	Empty
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	assume Unix or Linux
WITHOUT_CLASSIFICATION	private boolean _bStopExecution = false;
WITHOUT_CLASSIFICATION	_bStopExecution = false;
WITHOUT_CLASSIFICATION	these arrays are parallel.
WITHOUT_CLASSIFICATION	line should look like : This is a line with an <span>embedded key</span> in it.
WITHOUT_CLASSIFICATION	No exceptions during logging
WITHOUT_CLASSIFICATION	No exceptions during logging
WITHOUT_CLASSIFICATION	Folder to store user settings.
WITHOUT_CLASSIFICATION	No exceptions during logging
WITHOUT_CLASSIFICATION	No exceptions during logging
WITHOUT_CLASSIFICATION	No exceptions during logging
WITHOUT_CLASSIFICATION	Ctor. @parammsg Message describing the error.
WITHOUT_CLASSIFICATION	Ctor. Wraps this exception around another. @paramwrapee The exception that this one is wrapped around.
WITHOUT_CLASSIFICATION	convert data from StringWrappers to Strings
WITHOUT_CLASSIFICATION	Es mach nichts, wenn es die PID nicht g�be. Sie wird dann einfach oben nicht zugeordnet.
WITHOUT_CLASSIFICATION	If we are blocked by a member of a deadlock chain but do not belong to the deadlock chain ourselves this prevents a forever loop.
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	Die 200 braucht nur SQL Server 7.0, SQL Server 2000 nicht mehr sagt SAN
WITHOUT_CLASSIFICATION	Dataholder res = conn.runClassMethod("%Library.CMUtilities", "getExecutionPlan", argv, Database.RET_OBJECT);
WITHOUT_CLASSIFICATION	newIndentDepth == indentDepth
WITHOUT_CLASSIFICATION	jdbc:Cache:cachensw-and:1972/SHDTest
WITHOUT_CLASSIFICATION	Load plugin preferences.
WITHOUT_CLASSIFICATION	plugin supports only Session main window
WITHOUT_CLASSIFICATION	plugin supports only Session main window
WITHOUT_CLASSIFICATION	user.home/.squirrel-sql/plugins/dbcopy
WITHOUT_CLASSIFICATION	i18n[codecompletion.useSyntaxPlugin=Code completion will work better if you use the Syntax plugin. Get it from squirrelsql.org, it's free!]
WITHOUT_CLASSIFICATION	I have seen the reference to the outer class being null when this method is called. I have seen it only with the runtime jars and on Linux. I could not reproduce in my IDE.
WITHOUT_CLASSIFICATION	figure out which column the user clicked on so we can pass in the right column description
WITHOUT_CLASSIFICATION	Folder within plugins folder that belongs to this plugin.
WITHOUT_CLASSIFICATION	coll.add(new ScriptProcedureAction(app, _resources, this, _userSettingsFolder)); coll.add(new RefreshRepositoryAction(app, _resources, this, _userSettingsFolder));
WITHOUT_CLASSIFICATION	These objects do not depend on catalogs or schemas. It is enough if we load them once.
WITHOUT_CLASSIFICATION	For example Postgres returns table names as datatypes. In those cases this prevents to have the table names twice.
WITHOUT_CLASSIFICATION	CompletionInfos are still loading
WITHOUT_CLASSIFICATION	CompletionInfos are still loading
WITHOUT_CLASSIFICATION	1 < buf.size()
WITHOUT_CLASSIFICATION	Might also be a catalog or a schema name
WITHOUT_CLASSIFICATION	First check aliases
WITHOUT_CLASSIFICATION	See if this is the same statement
WITHOUT_CLASSIFICATION	Makes sure that the last name is always in top of the list.
WITHOUT_CLASSIFICATION	Code Completion has been done within Code Completion. and relaunch completion popup.
WITHOUT_CLASSIFICATION	new TestCompletionFunction(),
WITHOUT_CLASSIFICATION	remove the function name
WITHOUT_CLASSIFICATION	Needed for example on PostgreSQL
WITHOUT_CLASSIFICATION	i18n[codeCompletion.spWithParams=stored procedure with parameter info: {call mySP(<IN INTEGER tid>)}]
WITHOUT_CLASSIFICATION	i18n[codeCompletion.globalFunctCompltion=If there is no matching prefix configuration functions should complete like:]
WITHOUT_CLASSIFICATION	i18n[codecompletion.prefs.table.udfWithoutParams=UDF without params]
WITHOUT_CLASSIFICATION	Just a Test
WITHOUT_CLASSIFICATION	i18n[codeCompletion.prefixConfig.deleteSelRows=Delete selected rows]
WITHOUT_CLASSIFICATION	i18n[codeCompletion.prefixConfig.newRow=Add new row]
WITHOUT_CLASSIFICATION	this holds all the values for switches that the user is allowed to set
WITHOUT_CLASSIFICATION	this will be our working buffer to hold data chunks read in from the data file
WITHOUT_CLASSIFICATION	these are all more or less global loop variables to keep from needing to pass them all into various methods during parsing
WITHOUT_CLASSIFICATION	use clone here to prevent the outside code from setting values on the array directly, which would throw off the index lookup based on header name
WITHOUT_CLASSIFICATION	use headersHolder.Length here in case headers is null
WITHOUT_CLASSIFICATION	need to return a clone, and can't use clone because values.Length might be greater than columnsCount
WITHOUT_CLASSIFICATION	check to see if we've already found the end of data
WITHOUT_CLASSIFICATION	loop over the data stream until the end of data is found or the end of the record is found
WITHOUT_CLASSIFICATION	grab the current letter as a char
WITHOUT_CLASSIFICATION	grab the current letter as a char
WITHOUT_CLASSIFICATION	this will be a text qualified column, so we need to set startedWithQualifier to make it enter the seperate branch to handle text qualified columns
WITHOUT_CLASSIFICATION	read qualified
WITHOUT_CLASSIFICATION	can only happen for ESCAPE_MODE_BACKSLASH
WITHOUT_CLASSIFICATION	make sure to clear the flag for next run of the loop
WITHOUT_CLASSIFICATION	keep track of the last letter because we need it for several key decisions
WITHOUT_CLASSIFICATION	end else
WITHOUT_CLASSIFICATION	this will skip blank lines
WITHOUT_CLASSIFICATION	keep track of the last letter because we need it for several key decisions
WITHOUT_CLASSIFICATION	end else
WITHOUT_CLASSIFICATION	we encountered a column with no data, so just send the end column
WITHOUT_CLASSIFICATION	do nothing, this will trim leading whitespace for both text qualified columns and non
WITHOUT_CLASSIFICATION	since the letter wasn't a special letter, this will be the first letter of our current column
WITHOUT_CLASSIFICATION	check to see if we hit the end of the file without processing the current record
WITHOUT_CLASSIFICATION	for hasMoreData to ever be false, all data would have had to have been copied to the raw buffer
WITHOUT_CLASSIFICATION	if no more data could be found, set flag stating that the end of the data was found
WITHOUT_CLASSIFICATION	copy the header data from the column array to the header string array
WITHOUT_CLASSIFICATION	if there are duplicate header names, we will save the last one
WITHOUT_CLASSIFICATION	check to see if we have read the header record yet
WITHOUT_CLASSIFICATION	return the processed header data for this column
WITHOUT_CLASSIFICATION	must be called before setting startedColumn = false
WITHOUT_CLASSIFICATION	check to see if our current holder array for column chunks is still big enough to handle another column chunk
WITHOUT_CLASSIFICATION	holder array needs to grow to be able to hold another column
WITHOUT_CLASSIFICATION	Create column list
WITHOUT_CLASSIFICATION	keep track of the last letter because we need it for several key decisions
WITHOUT_CLASSIFICATION	end else
WITHOUT_CLASSIFICATION	clear public column values for current line
WITHOUT_CLASSIFICATION	just eat the exception
WITHOUT_CLASSIFICATION	/ <summary> / The position of the cursor in the buffer when the / current column was started or the last time data / was moved out to the column buffer. / </summary>
WITHOUT_CLASSIFICATION	ASCII/ANSI escape
WITHOUT_CLASSIFICATION	having these as publicly accessible members will prevent the overhead of the method call that exists on properties
WITHOUT_CLASSIFICATION	these are static instead of final so they can be changed in unit test isn't visible outside this class and is only accessed once during CsvReader construction
WITHOUT_CLASSIFICATION	i18n[ImportTableDataCommand.settingsDialogTitle=Import file settings]
WITHOUT_CLASSIFICATION	i18n[ImportDataIntoTableExecutor.wrongFormat=Imported column has not the required format.\nLine is: {0}, column is: {1}]
WITHOUT_CLASSIFICATION	1968807: Unsigned INT problem with IMPORT FILE functionality If we are working with a signed integer, then it should be ok to store in a Java integer which is always signed. However, if we are working with an unsigned integer type, Java doesn't have this so use a long instead.
WITHOUT_CLASSIFICATION	try it as a long in case the database driver didn't correctly identify an unsigned field
WITHOUT_CLASSIFICATION	Show a warning dialog and let the user confirm it.
WITHOUT_CLASSIFICATION	i18n[ImportTableDataCommand.ioErrorOccured=An error occured while reading import file data.]
WITHOUT_CLASSIFICATION	Columns
WITHOUT_CLASSIFICATION	Not needed
WITHOUT_CLASSIFICATION	i18n[ImportFileDialog.suggestColumns=Suggest columns (find matching columns)]
WITHOUT_CLASSIFICATION	i18n[ImportFileDialog.headersIncluded=Headers in first line]
WITHOUT_CLASSIFICATION	i18n[ImportFileDialog.dataPreview=Data preview]
WITHOUT_CLASSIFICATION	Columns
WITHOUT_CLASSIFICATION	Rows
WITHOUT_CLASSIFICATION	If the user chooses neither Fixed value nor Auto-Increment, then clear the "Fixed value" field if it has a value.
WITHOUT_CLASSIFICATION	If the user picks auto-increment, auto-fill the "Fixed value" column with 0 for the start value if it is currently empty.
WITHOUT_CLASSIFICATION	i18n[ImportFileDialog.column=Column]
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	i18n[ProgressBarDialog.error.getdialog=getDialog: unable to invokeAndWait for dialog]
WITHOUT_CLASSIFICATION	i18n[ImportFileDialog.fixedValue=Fixed value]
WITHOUT_CLASSIFICATION	i18n[ImportFileDialog.importFileColumn=Import file column]
WITHOUT_CLASSIFICATION	i18n[ProgressBarDialog.insertingRecordsLabel=Copying records]
WITHOUT_CLASSIFICATION	i18n[SpecialColumnMapping.AUTO_INCREMENT=Auto increment]
WITHOUT_CLASSIFICATION	Columns
WITHOUT_CLASSIFICATION	Rows
WITHOUT_CLASSIFICATION	Ignore that
WITHOUT_CLASSIFICATION	Rows
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	Folder to store user settings.
WITHOUT_CLASSIFICATION	Expanders - trigger and index expanders are added inside the table expander
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	register custom DataTypeComponent factory for DB2 XML
WITHOUT_CLASSIFICATION	Install DB2JCCExceptionFormatter iff we're using the JCC driver
WITHOUT_CLASSIFICATION	tableExpander.setTableIndexExtractor(extractor);
WITHOUT_CLASSIFICATION	As the JCC driver code is obfuscated, we do not check the full class name, but resort to checking a prefix and suffix instead. In my version, the full class name is "com.ibm.db2.jcc.c.SqlException"
WITHOUT_CLASSIFICATION	Prefix for the JCC SqlException class name
WITHOUT_CLASSIFICATION	Class name for the JCC SqlException class
WITHOUT_CLASSIFICATION	Names of the various methods we need to invoke
WITHOUT_CLASSIFICATION	DB2Sqlca sqlca = ((DB2Diagnosable) t).getSqlca();
WITHOUT_CLASSIFICATION	String msg = sqlca.getMessage();
WITHOUT_CLASSIFICATION	int sqlCode = sqlca.getSqlCode();
WITHOUT_CLASSIFICATION	int sqlstate = sqlca.getSqlState();
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.hint=Display sequence details]
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	we may have more than one statement in sql at this point
WITHOUT_CLASSIFICATION	MQTs only ever have one sql statement
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.hint=Display trigger details]
WITHOUT_CLASSIFICATION	At the moment, no default value
WITHOUT_CLASSIFICATION	Yes to all
WITHOUT_CLASSIFICATION	Cancel
WITHOUT_CLASSIFICATION	i18n[oracle.owner=Owner]
WITHOUT_CLASSIFICATION	No decimal digits strongly suggests an INTEGER of some type. Since it's not real easy to tell what kind of int (int2, int4, int8) just make it an int8 (i.e. BIGINT)
WITHOUT_CLASSIFICATION	Numbers and such.
WITHOUT_CLASSIFICATION	i18n[oracle.objectName=Object Name]
WITHOUT_CLASSIFICATION	i18n[oracle.objectType=Object Type]
WITHOUT_CLASSIFICATION	As a last resort, get the length of the longest value in the specified column.
WITHOUT_CLASSIFICATION	Yes || Yes to all
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	No need to check column name validity when source and dest are of the same type of database.
WITHOUT_CLASSIFICATION	Don't fool around with manual commit later.
WITHOUT_CLASSIFICATION	Loop through source records...
WITHOUT_CLASSIFICATION	MySQL driver gets unhappy when we use the same PreparedStatement to bind null and non-null LOB variables without clearing the parameters first.
WITHOUT_CLASSIFICATION	I18n[oracle.invalidTitle=Oracle invalid objects for: {0}]
WITHOUT_CLASSIFICATION	Only resize once.
WITHOUT_CLASSIFICATION	If source column is type 1111 (OTHER), try to use the column type name to find a type that isn't 1111.
WITHOUT_CLASSIFICATION	If source column is type 1111 (OTHER), try to use the column type name to find a type that isn't 1111.
WITHOUT_CLASSIFICATION	ICommand Interface implementation
WITHOUT_CLASSIFICATION	Can't paste from a session that is no longer around.
WITHOUT_CLASSIFICATION	md = new MemoryDiagnostics();
WITHOUT_CLASSIFICATION	Copy action object tree types
WITHOUT_CLASSIFICATION	Paste action object tree types
WITHOUT_CLASSIFICATION	MySQL shows databases as "CATALOGS" not "SCHEMAS"
WITHOUT_CLASSIFICATION	Nothing to do for an SQL internal frame
WITHOUT_CLASSIFICATION	When the user pastes on a TABLE label which is located under a schema/catalog, build the schema DatabaseObjectInfo.
WITHOUT_CLASSIFICATION	i18n[PasteTableAction.error.destdbobj=The destination database doesn't support copying tables into '{0}' objects.\n Please select a schema to paste into.]
WITHOUT_CLASSIFICATION	ISession sourceSession = sessionInfoProv.getCopySourceSession(); ISession destSession = sessionInfoProv.getCopyDestSession();
WITHOUT_CLASSIFICATION	Column 0 Row 0
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	calculate the average time / item
WITHOUT_CLASSIFICATION	TODO: check to be sure that the source and destination schemas are different. Abort if they are the same and inform the user.
WITHOUT_CLASSIFICATION	Only concerned about order when more than one table.
WITHOUT_CLASSIFICATION	Column 0 Row 1
WITHOUT_CLASSIFICATION	How many items left
WITHOUT_CLASSIFICATION	Span across two columns c.ipadx = 40;
WITHOUT_CLASSIFICATION	Increases component width by 40 pixels
WITHOUT_CLASSIFICATION	Increases component width by 40 pixels
WITHOUT_CLASSIFICATION	Increases component width by 40 pixels
WITHOUT_CLASSIFICATION	Increases component width by 40 pixels
WITHOUT_CLASSIFICATION	Increases component width by 20 pixels
WITHOUT_CLASSIFICATION	selectFetchSizeLabel.setHorizontalAlignment(JLabel.LEFT);
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	Folder to store user settings.
WITHOUT_CLASSIFICATION	Probably shutting down.
WITHOUT_CLASSIFICATION	i18n[DBUtil.info.executeupdate=executeupdate: Running SQL:\n '{0}']
WITHOUT_CLASSIFICATION	TimesTen allows a maximum fetch size of 128.
WITHOUT_CLASSIFICATION	Allow the user to set "0" for the fetch size to indicate that this should not be called. JDBC-ODBC bridge driver fails to execute SQL once you have set the fetch size to any value.
WITHOUT_CLASSIFICATION	i18n[DBUtil.error.tablenotfound=Couldn't locate table '{0}' in schema '(1)']
WITHOUT_CLASSIFICATION	Only close the statement if SQLException - otherwise it has to remain open until the ResultSet is read through by the caller.
WITHOUT_CLASSIFICATION	Do Nothing - this can happen when the table doesn't exist
WITHOUT_CLASSIFICATION	Currently, as of milestone 3, Axion doesn't support "schemas" like other databases. So, set the schema to emtpy string if we detect an Axion session.
WITHOUT_CLASSIFICATION	MySQL uses catalogs and not schemas
WITHOUT_CLASSIFICATION	trim the table name in case of HADB
WITHOUT_CLASSIFICATION	Fallback to the old method, going directly to the database instead of using SchemaInfo, since SchemaInfo didn't have it.
WITHOUT_CLASSIFICATION	user.home/.squirrel-sql/plugins/dbcopy/scripts
WITHOUT_CLASSIFICATION	Fix the case according to what the database tells us.
WITHOUT_CLASSIFICATION	SQL FLOAT requires support for 15 digits of mantissa.
WITHOUT_CLASSIFICATION	COLUMN_NAME
WITHOUT_CLASSIFICATION	i18n[DBUtil.error.unknowntype=Unknown Java SQL column type: '{0}']
WITHOUT_CLASSIFICATION	if we failed to bind the blob in a file, try memory.
WITHOUT_CLASSIFICATION	i18n[DBUtil.info.bindcloblength=bindClobVarInFile: writing '{0}' bytes.]
WITHOUT_CLASSIFICATION	i18n[DBUtil.info.bindclobfile=bindClobVarInFile: Opening temp file '{0}']
WITHOUT_CLASSIFICATION	i18n[DBUtil.info.bindblobfile=bindBlobVarInFile: Opening temp file '{0}']
WITHOUT_CLASSIFICATION	i18n[DBUtil.info.bindblobmem=bindBlobVarInMemory: binding '{0}' bytes]
WITHOUT_CLASSIFICATION	i18n[DBUtil.error.bindblobfailure=bindBlobVar: failed to bind blob using filesystem - attempting to bind blob using memory]
WITHOUT_CLASSIFICATION	if we failed to bind the blob in a file, try memory.
WITHOUT_CLASSIFICATION	set the ps to read from the file we just created.
WITHOUT_CLASSIFICATION	get ascii stream from rs
WITHOUT_CLASSIFICATION	read rs input stream write to file output stream
WITHOUT_CLASSIFICATION	Open file output stream
WITHOUT_CLASSIFICATION	Open file output stream
WITHOUT_CLASSIFICATION	read rs input stream write to file output stream
WITHOUT_CLASSIFICATION	set the ps to read from the file we just created.
WITHOUT_CLASSIFICATION	get binary stream from rs
WITHOUT_CLASSIFICATION	If the user wants the primary key copied and the source session isn't Axion (Axion throws SQLException for getPrimaryKeys())
WITHOUT_CLASSIFICATION	user.home/.squirrel-sql/plugins
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	ignore any SQLExceptions. This would only if we could not get column info from the SQL database meta data.
WITHOUT_CLASSIFICATION	replace the next question mark with nextVal
WITHOUT_CLASSIFICATION	Ignored
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	ResultSet rs = con.getMetaData().getTables("dbcopysrc", null, "BIGINT_TYPE_TABLE", new String[]{ "TABLE" });
WITHOUT_CLASSIFICATION	listener.setShowSqlStatements(true);
WITHOUT_CLASSIFICATION	result = false;
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getGlobalPreferencePanels()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getHelpFileName()
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getWebSite()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#initialize()
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getDescriptiveName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getAuthor()
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	diffSourceSession = null;setPasteMenuEnabled(false);PreferencesManager.unload();
WITHOUT_CLASSIFICATION	DBCopyGlobalPreferencesTab tab = new DBCopyGlobalPreferencesTab();return new IGlobalPreferencesPanel[] { tab };
WITHOUT_CLASSIFICATION	Uses menu.dbdiff. in dbdiff.properties
WITHOUT_CLASSIFICATION	Interface SessionInfoProvider implementation
WITHOUT_CLASSIFICATION	Column is in table 1, but not table 2
WITHOUT_CLASSIFICATION	i18n[DiffExecutor.noDiffsMessage=No differences were detected]
WITHOUT_CLASSIFICATION	table exists in source db but not dest
WITHOUT_CLASSIFICATION	table doesn't exist in source db
WITHOUT_CLASSIFICATION	Assume objs[0] is a schema/catalog
WITHOUT_CLASSIFICATION	Nothing to do for an SQL internal frame
WITHOUT_CLASSIFICATION	ICommand Interface implementation
WITHOUT_CLASSIFICATION	The header for the scrollable part which presents column differences
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	corner.validate();
WITHOUT_CLASSIFICATION	jScrollPane1.setRowHeaderView(_rowHeader);
WITHOUT_CLASSIFICATION	_tableHeader.adoptAllColWidths(true); _tableHeader.initColWidths();
WITHOUT_CLASSIFICATION	corner.createDefaultColumnsFromModel();
WITHOUT_CLASSIFICATION	jScrollPane1.setCorner(JScrollPane.UPPER_LEFT_CORNER, corner);
WITHOUT_CLASSIFICATION	result.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
WITHOUT_CLASSIFICATION	throw new IllegalStateException("Wrong constructor");
WITHOUT_CLASSIFICATION	Do Nothing - this can happen when the table doesn't exist
WITHOUT_CLASSIFICATION	MySQL uses catalogs and not schemas
WITHOUT_CLASSIFICATION	Currently, as of milestone 3, Axion doesn't support "schemas" like other databases. So, set the schema to emtpy string if we detect an Axion session.
WITHOUT_CLASSIFICATION	Don't change the case of the identifier if database allows mixed case.
WITHOUT_CLASSIFICATION	Fix the case according to what the database tells us.
WITHOUT_CLASSIFICATION	Register custom DataTypeComponent factory for Derby CLOB type
WITHOUT_CLASSIFICATION	_treeAPI.addDetailTab(DatabaseObjectType.SEQUENCE, new DatabaseObjectInfoTab()); _treeAPI.addDetailTab(DatabaseObjectType.SEQUENCE, new SequenceDetailsTab());
WITHOUT_CLASSIFICATION	Expanders - trigger and index expanders are added inside the table expander _treeAPI.addExpander(DatabaseObjectType.SCHEMA, new SchemaExpander());
WITHOUT_CLASSIFICATION	the code bellow is only for Embedded Derby Driver
WITHOUT_CLASSIFICATION	Getting java.sql.Driver to run shutdown command
WITHOUT_CLASSIFICATION	Re-registering driver is necessary for Embedded Derby
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	for convenience, cast the value object to its type
WITHOUT_CLASSIFICATION	we have the whole contents of the CLOB
WITHOUT_CLASSIFICATION	Getters and Setters
WITHOUT_CLASSIFICATION	if both objs are null, then they matched in the previous test, so at this point we know that at least one of them (or both) is not null. However, one of them may still be null, and we cannot call equals() on the null object, so make sure that the one we call it on is not null. The equals() method handles the other one being null, if it is.
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	for convenience, cast the existing object
WITHOUT_CLASSIFICATION	no existing clob to re-use
WITHOUT_CLASSIFICATION	if the original object is not null, then it contains a Clob object that we need to re-use, since that is the DBs reference to the clob data area. Otherwise, we set the original Clob to null, and the write method needs to know to set the field to null.
WITHOUT_CLASSIFICATION	create new object to hold the different value, but use the same internal CLOB pointer as the original
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	convert number conversion issue into IO issue for consistancy
WITHOUT_CLASSIFICATION	CLOB cannot be used in WHERE clause
WITHOUT_CLASSIFICATION	for convenience cast the object to ClobDescriptor
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	i18n[editextras.date=Date]
WITHOUT_CLASSIFICATION	new RemoveQuotesCommand(_session.getSQLPanelAPI(_plugin)).execute();
WITHOUT_CLASSIFICATION	Load resources.
WITHOUT_CLASSIFICATION	To make the shortcut visible in the popup
WITHOUT_CLASSIFICATION	Some people put new line characters in their SQL to have nice debug output. Remove these new line characters too.
WITHOUT_CLASSIFICATION	new ConvertToStringBufferCommand(_session.getSQLPanelAPI(_plugin)).execute();
WITHOUT_CLASSIFICATION	/ IBM DB 2 specific code to read procedure definitions.
WITHOUT_CLASSIFICATION	new InQuotesCommand(_session.getSQLPanelAPI(_plugin)).execute();
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	Plugin knows only how to script Views and Stored Procedures on DB2. So if it's not a DB2 Session we tell SQuirreL the Plugin should not be used.
WITHOUT_CLASSIFICATION	Folder to store user settings.
WITHOUT_CLASSIFICATION	Add context menu items to the object tree's view and procedure nodes.
WITHOUT_CLASSIFICATION	i18n[exportconfig.fileWillBeCreated={0} not found - will be created]
WITHOUT_CLASSIFICATION	Load plugin preferences.
WITHOUT_CLASSIFICATION	i18n[exportconfig.fileExistsReplace={0}\nalready exists. Do you want to replace it?]
WITHOUT_CLASSIFICATION	i18n[exportconfig.databaseDrivers=Database Drivers]
WITHOUT_CLASSIFICATION	i18n[exportconfig.databaseAliases=Database Aliases]
WITHOUT_CLASSIFICATION	i18n[exportconfig.applicationSettings=Application Settings]
WITHOUT_CLASSIFICATION	i18n[exportconfig.errorReslovingFileName=Error resolving file name]
WITHOUT_CLASSIFICATION	i18n[favs.nameMustNotBeBlank=Name cannot be blank.]
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	first time user has run pgm.
WITHOUT_CLASSIFICATION	Add mouse listener for displaying popup menu.
WITHOUT_CLASSIFICATION	private String getFileName(File dir, String name) { return getFileName(new File(dir, name)); }
WITHOUT_CLASSIFICATION	chooser.setDialogTitle("Select???");
WITHOUT_CLASSIFICATION	setModel(_model);
WITHOUT_CLASSIFICATION	addTreeExpansionListener(new MyExpansionListener());
WITHOUT_CLASSIFICATION	Register so that we can display different tooltips depending which entry in tree mouse is over.
WITHOUT_CLASSIFICATION	, IHasName
WITHOUT_CLASSIFICATION	= new QueryTree();
WITHOUT_CLASSIFICATION	_mainSplitPane.add(getDesktopPane(), JSplitPane.RIGHT);
WITHOUT_CLASSIFICATION	setBounds(new Rectangle(600, 400));
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	i18n[favs.newFolder=New Folder] ?? i18n
WITHOUT_CLASSIFICATION	Supports Session main window only
WITHOUT_CLASSIFICATION	Expanders.
WITHOUT_CLASSIFICATION	i18n[firebird.showTrigger=Show trigger source]
WITHOUT_CLASSIFICATION	i18n[firebird.showProcedureSource=Show procedure source]
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	i18n[firebird.seqDetails=Display sequence details]
WITHOUT_CLASSIFICATION	i18n[firebird.genDetails=Details]
WITHOUT_CLASSIFICATION	Execute the SQL command in the SQL tab and then display the SQL tab.
WITHOUT_CLASSIFICATION	private static ILogger s_log = LoggerController.createLogger(DatabaseExpander.class);
WITHOUT_CLASSIFICATION	i18n[firebird.details=Details]
WITHOUT_CLASSIFICATION	i18n[firebird.trigDetails=Details]
WITHOUT_CLASSIFICATION	i18n[firebird.trigDetails=Details]
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	Logger for this class
WITHOUT_CLASSIFICATION	private utility constructor
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	sheet types
WITHOUT_CLASSIFICATION	result of checking for jaybird driver with major version >= 2
WITHOUT_CLASSIFICATION	Logger for this class
WITHOUT_CLASSIFICATION	plugin supports Session main window only
WITHOUT_CLASSIFICATION	plugin supports Session main window only
WITHOUT_CLASSIFICATION	line separator for easy using ;-)
WITHOUT_CLASSIFICATION	jdbc:firebirdsql:[host[:port]/
WITHOUT_CLASSIFICATION	FileFilter
WITHOUT_CLASSIFICATION	getter/setter
WITHOUT_CLASSIFICATION	data objects
WITHOUT_CLASSIFICATION	-- edit
WITHOUT_CLASSIFICATION	tree
WITHOUT_CLASSIFICATION	select
WITHOUT_CLASSIFICATION	Labels
WITHOUT_CLASSIFICATION	layout ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	jradiobuttonRoles.setSelected(true);
WITHOUT_CLASSIFICATION	btnSetPermissions.setEnabled(false);
WITHOUT_CLASSIFICATION	private void appendPrivelegeToBuffer(StringBuffer pBuffer, String psPrivilege)
WITHOUT_CLASSIFICATION	data ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	false);
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	get grant target
WITHOUT_CLASSIFICATION	Tables and Views
WITHOUT_CLASSIFICATION	Procedures
WITHOUT_CLASSIFICATION	Roles
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	super.isCellEditable(row, column);
WITHOUT_CLASSIFICATION	" WITH ADMIN OPTION"
WITHOUT_CLASSIFICATION	super.isCellEditable(row, column);
WITHOUT_CLASSIFICATION	########################################################################
WITHOUT_CLASSIFICATION	setting color
WITHOUT_CLASSIFICATION	root
WITHOUT_CLASSIFICATION	set default colors
WITHOUT_CLASSIFICATION	set default colors
WITHOUT_CLASSIFICATION	root
WITHOUT_CLASSIFICATION	childs
WITHOUT_CLASSIFICATION	groups
WITHOUT_CLASSIFICATION	groups
WITHOUT_CLASSIFICATION	childs
WITHOUT_CLASSIFICATION	-- backup
WITHOUT_CLASSIFICATION	setting color
WITHOUT_CLASSIFICATION	session preferences
WITHOUT_CLASSIFICATION	setting value
WITHOUT_CLASSIFICATION	setting value
WITHOUT_CLASSIFICATION	Labels
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	-- restore
WITHOUT_CLASSIFICATION	errors
WITHOUT_CLASSIFICATION	info
WITHOUT_CLASSIFICATION	"ignore bad checksums" "ignore transaction in Limbo"
WITHOUT_CLASSIFICATION	"backup file"
WITHOUT_CLASSIFICATION	"server" "port" "database file"
WITHOUT_CLASSIFICATION	"deactivate indexes during restore" "restore without creating shadows" "do not reserve space for record versions" "restores one table at a time" "do not restore database validity conditions" "replace database from backup file" "override old page size" "new page size" "restore"
WITHOUT_CLASSIFICATION	JScrollPane jscrollpane1 = new JScrollPane();
WITHOUT_CLASSIFICATION	global preferences
WITHOUT_CLASSIFICATION	preferences from the last session
WITHOUT_CLASSIFICATION	load properties and fill missing entries with the global preferences
WITHOUT_CLASSIFICATION	######################################################################## ########## events ######################################################################## ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	i18n[graph.invalidWidth=Invalid width]
WITHOUT_CLASSIFICATION	session preferences
WITHOUT_CLASSIFICATION	visible (gui) ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	read map with users
WITHOUT_CLASSIFICATION	Errors
WITHOUT_CLASSIFICATION	i18n[oracle.sequenceDetails=Details]
WITHOUT_CLASSIFICATION	Labels
WITHOUT_CLASSIFICATION	preferences from the last session
WITHOUT_CLASSIFICATION	load properties and fill missing entries with the global preferences
WITHOUT_CLASSIFICATION	Messages
WITHOUT_CLASSIFICATION	set dialog
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	Labels
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	visible (gui) ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	display mode
WITHOUT_CLASSIFICATION	table data objects
WITHOUT_CLASSIFICATION	Tooltips and questions
WITHOUT_CLASSIFICATION	Questions
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getTitle()
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	session preferences
WITHOUT_CLASSIFICATION	display mode
WITHOUT_CLASSIFICATION	controlling ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	user checks ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	global references
WITHOUT_CLASSIFICATION	Labels
WITHOUT_CLASSIFICATION	preferences from the last session
WITHOUT_CLASSIFICATION	table data objects
WITHOUT_CLASSIFICATION	Tooltips and questions
WITHOUT_CLASSIFICATION	Questions
WITHOUT_CLASSIFICATION	usermanager of jaybird
WITHOUT_CLASSIFICATION	handle of connected server
WITHOUT_CLASSIFICATION	init user list
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	######################################################################## ########## events ######################################################################## ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	controlling ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	user checks ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	Logger for this class private final static ILogger log = LoggerController.createLogger(PreferencesPanel.class);
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#applyChanges()
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	Labels
WITHOUT_CLASSIFICATION	Internationalized strings for this class.
WITHOUT_CLASSIFICATION	gui
WITHOUT_CLASSIFICATION	private JLabel lblTitle = new JLabel();
WITHOUT_CLASSIFICATION	----------------------------------------------------
WITHOUT_CLASSIFICATION	Logger for this class
WITHOUT_CLASSIFICATION	Labels
WITHOUT_CLASSIFICATION	Name of the preferences files
WITHOUT_CLASSIFICATION	Folder to store the user settings in
WITHOUT_CLASSIFICATION	Bean for the global preferences
WITHOUT_CLASSIFICATION	the plugin
WITHOUT_CLASSIFICATION	case SESSION_BEAN_GRANT_AND_REVOKE: return FirebirdManagerGrantPreferenceBean.class.getClassLoader();
WITHOUT_CLASSIFICATION	We try to cascade
WITHOUT_CLASSIFICATION	i18n[graph.zoom=Zoom]
WITHOUT_CLASSIFICATION	Printing
WITHOUT_CLASSIFICATION	If we reach here we could not calculate a place to add the new table frame. Now it will automatically be added at (0,0).
WITHOUT_CLASSIFICATION	printBtnPrefSize.width -=10;
WITHOUT_CLASSIFICATION	No paper edges. We print the Graph as it is to a single image.
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	/ Printing
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	btnCopyToClipPrefSize.width -=10;
WITHOUT_CLASSIFICATION	public int getPixelWidth() { int pixelByCm = (int) (Toolkit.getDefaultToolkit().getScreenResolution() CM_BY_INCH + 0.5); return (int)(_format.getWidth() pixelByCm + 0.5); } public int getPixelHeight() { int pixelByCm = (int) (Toolkit.getDefaultToolkit().getScreenResolution() CM_BY_INCH + 0.5); return (int)(_format.getHeight() pixelByCm + 0.5); }
WITHOUT_CLASSIFICATION	i18n[graph.dina5=Din A 5]
WITHOUT_CLASSIFICATION	i18n[graph.inch=inch]
WITHOUT_CLASSIFICATION	Transferable
WITHOUT_CLASSIFICATION	Center text vertically.
WITHOUT_CLASSIFICATION	double zoom = _desktopController.getZoomer().getZoom();
WITHOUT_CLASSIFICATION	defines the opening angle of the arrow (not rad or so but something fancy)
WITHOUT_CLASSIFICATION	Serialized attributes
WITHOUT_CLASSIFICATION	defines the size of the arrow
WITHOUT_CLASSIFICATION	g.fillOval((int)(zoomfp.x + 0.5) - rad, (int)(zoomfp.y+0.5) - rad, 2 rad, 2 rad);
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	i18n[graph.btnCreateNewGraph=Create new graph]
WITHOUT_CLASSIFICATION	i18n[graph.orderyName=order by name]
WITHOUT_CLASSIFICATION	i18n[graph.save=Save]
WITHOUT_CLASSIFICATION	hit is on folding point
WITHOUT_CLASSIFICATION	hit is on folding point
WITHOUT_CLASSIFICATION	_constraintGraph.moveLastHitFoldingPointTo(point);
WITHOUT_CLASSIFICATION	Table was deleted from DB
WITHOUT_CLASSIFICATION	The old view is preserved to eventually preserve folding points
WITHOUT_CLASSIFICATION	+ 6;
WITHOUT_CLASSIFICATION	getSelectedController() == null means: Create a new Graph
WITHOUT_CLASSIFICATION	Clear
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	PKTABLE_NAME PKCOLUMN_NAME FKCOLUMN_NAME FK_NAME
WITHOUT_CLASSIFICATION	i18n[PostgresPlugin.showIndexSource=Show index source]
WITHOUT_CLASSIFICATION	Sequence tabs
WITHOUT_CLASSIFICATION	i18n[PostgresPlugin.showProcedureSource=Show procedure source]
WITHOUT_CLASSIFICATION	View Tab
WITHOUT_CLASSIFICATION	Trigger tabs
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[hibernate.hqlToSqlLong=HQL to SQL]
WITHOUT_CLASSIFICATION	If this isn't instanceof org.hibernate.type.CollectionType a NoSuchMethodException will be thrown
WITHOUT_CLASSIFICATION	UIFactory.getInstance().createTabbedPane();
WITHOUT_CLASSIFICATION	If this is not a hibernate error we write a log entry
WITHOUT_CLASSIFICATION	i18n[BookmarksAccessor.bookmarksPluginNeeded=Running bookmarks is only available with the Bookmarks Plugin.\nGet the plugin from www.squirrelsql.org. It's free.]
WITHOUT_CLASSIFICATION	i18n[HQLPanelController.hqlToSqlSuccess=Generated {0} SQL(s) in {1} milliseconds.]
WITHOUT_CLASSIFICATION	private static final String PERF_KEY_HQL_TAB_DIVIDER_LOCATION = "Squirrel.hibernateplugin.hqlTabDivLoc";
WITHOUT_CLASSIFICATION	i18n[HibernateTabPanel.configuration=Configuration]
WITHOUT_CLASSIFICATION	Code Completion has been done within Code Completion. Now just replace what all candidates have in common.
WITHOUT_CLASSIFICATION	Will be called asynchronously to the event dispatch thread
WITHOUT_CLASSIFICATION	-- EJBQL tokens --
WITHOUT_CLASSIFICATION	One synchron call for first completion
WITHOUT_CLASSIFICATION	Handle table source
WITHOUT_CLASSIFICATION	i18n[HibernateConfigController.noProviderMsg=Missing SessionFactoryImplProvider .\nChanges cannot be applied.]
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	We need this buffer because this method may be called asynchronously to the event dispatch thread What could happen is, that _currentAliasInfos ist changed.
WITHOUT_CLASSIFICATION	We assume that classes and attributes won't be in the same completion list. Classes will be completed fully qualified when the user works with fully qualified class names ...
WITHOUT_CLASSIFICATION	misc functions - based on oracle dialect
WITHOUT_CLASSIFICATION	standard sql92 functions
WITHOUT_CLASSIFICATION	time functions mapped to ansi extract
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.removeConfig=Remove]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.toObtainSessionFact=To obtain a Hibernate SessionFactoryImpl instance SQuirreL should:]
WITHOUT_CLASSIFICATION	Example for this code: Completion should from Kv k inner join fetch k.positionen as posses where posses.artNr = 'sdfsdf'
WITHOUT_CLASSIFICATION	i18n[HibernatePrefsTab.hint=Hibernate configurations]
WITHOUT_CLASSIFICATION	i18n[HibernatePrefsTab.title=Hibernate]
WITHOUT_CLASSIFICATION	i18n[MappedObjectPanel.QualifiedNames=Show qualified names]
WITHOUT_CLASSIFICATION	String catalog, String schema, String simpleName, String tableType, String remarks,
WITHOUT_CLASSIFICATION	private static final String PERF_KEY_OBJ_TAB_DIV_LOC = "Squirrel.hibernateplugin.objTabDivLocAsInt";
WITHOUT_CLASSIFICATION	i18n[OraclePluginPreferencesPanel.sessionTimezoneTT=Set the session timezone to view 'WITH LOCAL TIMEZONE' data types]
WITHOUT_CLASSIFICATION	i18n[MappingRoot.toString=Mapping]
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	dist
WITHOUT_CLASSIFICATION	i18n[MappingRoot.user=JDBC User (Hibernate)]
WITHOUT_CLASSIFICATION	i18n[HibernateAttribuiteDataSet.attrName=Attribute name]
WITHOUT_CLASSIFICATION	i18n[HibernateAttribuiteDataSet.identifier=Identifier]
WITHOUT_CLASSIFICATION	i18n[I18n.openIOnEditor=Open in Editor]
WITHOUT_CLASSIFICATION	i18n[i18n.noFilesOpened=No file found.\nSee message panel for details.]
WITHOUT_CLASSIFICATION	i18n[i18n.noNativeToAsciiOutDir=Cannot convert files without a native2Ascii output dir.]
WITHOUT_CLASSIFICATION	i18n[I18n.WorkDirIsNotADirectory=Working directory {0} is not a directory]
WITHOUT_CLASSIFICATION	i18n[I18n.noWorkdirSpecified=No working directory specified.]
WITHOUT_CLASSIFICATION	i18n[i18n.bundle=Bundle]
WITHOUT_CLASSIFICATION	i18n[i18n.missingTarnslation=Missing translations]
WITHOUT_CLASSIFICATION	i18n[I18n.SourceDir=Source directory]
WITHOUT_CLASSIFICATION	i18n[I18n.TranslationsGenerationCount=Generated {0} templates to {1}]
WITHOUT_CLASSIFICATION	i18n[i18n.ParsingFinish=Parsing finished]
WITHOUT_CLASSIFICATION	i18n[I18n.info=Info]
WITHOUT_CLASSIFICATION	i18n[I18n.developers=Developers]
WITHOUT_CLASSIFICATION	i18n[I18n.translators=Translators]
WITHOUT_CLASSIFICATION	i18n[mssql.allObjects=All objects]
WITHOUT_CLASSIFICATION	No i18n, developers should write English props.
WITHOUT_CLASSIFICATION	print the i18n comment
WITHOUT_CLASSIFICATION	i18n[i18n.parseSuccess=Added {0} new and {1} replaced properties to {2}]
WITHOUT_CLASSIFICATION	No i18n, developers should write English props.
WITHOUT_CLASSIFICATION	i18n[I18n.SourceDirDoesNotExist=Source directory {0} does not exist.]
WITHOUT_CLASSIFICATION	i18n[I18n.NoSourceDir=Please choose a source directory.]
WITHOUT_CLASSIFICATION	i18n[I18n.SourceDirIsNotADirectory=Source directory {0} is not a directory.]
WITHOUT_CLASSIFICATION	Rob: Removed replacement via RegExp because it needed several RegExp escapes in val.
WITHOUT_CLASSIFICATION	i18n[i18n.wroteFixedFile=Wrote file {0}]
WITHOUT_CLASSIFICATION	No end bracket, params might follow
WITHOUT_CLASSIFICATION	We see that the replacement was already done before so we can count this as replaced
WITHOUT_CLASSIFICATION	These files contain images etc. We try to filter out these props.
WITHOUT_CLASSIFICATION	i18n[InformixPlugin.showViewSource=Show view source]
WITHOUT_CLASSIFICATION	i18n[InformixPlugin.showProcedureSource=Show procedure source]
WITHOUT_CLASSIFICATION	Postgres pg_proc table doesn't appear to have schema. I couldn't locate another table to join with to get this info either.
WITHOUT_CLASSIFICATION	i18n[mssql.allTables=All tables]
WITHOUT_CLASSIFICATION	Expanders - trigger and index expanders are added inside the table expander
WITHOUT_CLASSIFICATION	i18n[OraclePluginPreferencesPanel.showErrorOffsetLabel=Show Syntax Error Offset in SQL Editor]
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.hint=Display sequence details]
WITHOUT_CLASSIFICATION	ISessionListener interface methods
WITHOUT_CLASSIFICATION	Since we depend upon the Informix-specific IfmxConnection class, we need to keep a reference to the ISession we are associated with. However, this session could be closed, at which time we want to give up our reference so that it can be garbage collected.
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.hint=Display sequence details]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.hint=Display trigger details]
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.hint=Display index details]
WITHOUT_CLASSIFICATION	First time through, skip the double spacing
WITHOUT_CLASSIFICATION	Folder within plugins folder that belongs to this plugin.
WITHOUT_CLASSIFICATION	i18n[mssql.allRules=All rules]
WITHOUT_CLASSIFICATION	Name of directory to store extra LAFs in for the user.
WITHOUT_CLASSIFICATION	Folder that stores themepacks for this LAF.
WITHOUT_CLASSIFICATION	i18n[laf.jarZip=JAR/Zip files]
WITHOUT_CLASSIFICATION	i18n[laf.skinThemPack=Theme Pack:]
WITHOUT_CLASSIFICATION	i18n[laf.skinThemePackDir=Theme Pack Directory:]
WITHOUT_CLASSIFICATION	Load resources.
WITHOUT_CLASSIFICATION	Folder to store user settings.
WITHOUT_CLASSIFICATION	Load plugin preferences.
WITHOUT_CLASSIFICATION	Folder that stores Look and Feel jars.
WITHOUT_CLASSIFICATION	Folder to contain extra LAFs supplied by the user.
WITHOUT_CLASSIFICATION	Create empty required files in user settings directory.
WITHOUT_CLASSIFICATION	property file not found for user - first time user ran pgm.
WITHOUT_CLASSIFICATION	property file not found for user - first time user ran pgm.
WITHOUT_CLASSIFICATION	Setup preferences to make jGoodies LAF look better. UIManager.put(Options.USE_SYSTEM_FONTS_APP_KEY, Boolean.TRUE); UIManager.put(Options.USE_NARROW_BUTTONS_KEY, Boolean.TRUE);
WITHOUT_CLASSIFICATION	Create the Look and Feel register.
WITHOUT_CLASSIFICATION	Listen for GUI components being created.
WITHOUT_CLASSIFICATION	Update font used for status bars.
WITHOUT_CLASSIFICATION	Ensure that this is a Plastic Theme.
WITHOUT_CLASSIFICATION	Editable Text
WITHOUT_CLASSIFICATION	Menus
WITHOUT_CLASSIFICATION	Static text
WITHOUT_CLASSIFICATION	Save the current UI defaults.
WITHOUT_CLASSIFICATION	Get Look and Feel class object.
WITHOUT_CLASSIFICATION	i18n[laf.staticText=Static Text]
WITHOUT_CLASSIFICATION	i18n[laf.statusBars=Status Bars]
WITHOUT_CLASSIFICATION	i18n[laf.other=Other]
WITHOUT_CLASSIFICATION	i18n[laf.statusFontEanbled=Enabled]
WITHOUT_CLASSIFICATION	i18n[laf.staticFontEanbled=Enabled]
WITHOUT_CLASSIFICATION	i18n[laf.otherFontEanbled=Enabled]
WITHOUT_CLASSIFICATION	i18n[laf.tabFonts=Fonts]
WITHOUT_CLASSIFICATION	i18n[laf.tabTitle=Fonts]
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	Map of JAR file URLs containing LAFs keyed by the LAF class name.
WITHOUT_CLASSIFICATION	Get the new Look and Feel object.
WITHOUT_CLASSIFICATION	Initialize all the LAF controllers.
WITHOUT_CLASSIFICATION	If a different LAF to the current one has been requested then change to the requested LAF.
WITHOUT_CLASSIFICATION	Retrieve URLs of all the Look and Feel jars and store in lafUrls.
WITHOUT_CLASSIFICATION	Set Look and Feel.
WITHOUT_CLASSIFICATION	forever
WITHOUT_CLASSIFICATION	Directory containing the standard LAF jar files.
WITHOUT_CLASSIFICATION	Create a ClassLoader for all the LAF jars. Install all Look and Feels into the UIManager.
WITHOUT_CLASSIFICATION	forever
WITHOUT_CLASSIFICATION	Load info about the standard LAFs that come with this plugin.
WITHOUT_CLASSIFICATION	We have read in all properties.
WITHOUT_CLASSIFICATION	private LAFPreferences _prefs;
WITHOUT_CLASSIFICATION	Load info about any extra LAFs supplied by the user.
WITHOUT_CLASSIFICATION	private LAFPreferences _prefs;
WITHOUT_CLASSIFICATION	SkyBluer
WITHOUT_CLASSIFICATION	_prefs = plugin.getLAFPreferences();
WITHOUT_CLASSIFICATION	private IApplication _app;
WITHOUT_CLASSIFICATION	_lafRegister.updateAllFrames();
WITHOUT_CLASSIFICATION	_app = app;
WITHOUT_CLASSIFICATION	i18n[laf.lookAndFeel=Look and Feel:]
WITHOUT_CLASSIFICATION	i18n[laf.jars=L & F jars:]
WITHOUT_CLASSIFICATION	_prefs = plugin.getLAFPreferences();
WITHOUT_CLASSIFICATION	_app = app;
WITHOUT_CLASSIFICATION	Force the LAF to be set even if Tonic is the current one. This allows changes to take affect.
WITHOUT_CLASSIFICATION	i18n[laf.themePack=Theme Pack:]
WITHOUT_CLASSIFICATION	Folder that stores themepacks for this LAF.
WITHOUT_CLASSIFICATION	i18n[laf.themePacLoc=Theme Pack Directory:]
WITHOUT_CLASSIFICATION	Put all available "Look and Feel" objects into collections keyed by LAF name and by the class name.
WITHOUT_CLASSIFICATION	Add the names of all LAF objects to control. By doing thru the Map these will be sorted.
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	i18n[SybaseASEPlugin.title=SybaseASE]
WITHOUT_CLASSIFICATION	i18n[mmsql.catalogErr=The DBNAME of the session's URL is set to '{0}', but the session's current catalog is set to '{1}'.\n\nSQL Server doesn't support this in most cases. This is a current issue.]
WITHOUT_CLASSIFICATION	i18n[SybaseASEPlugin.hint=Preferences for SybaseASE]
WITHOUT_CLASSIFICATION	fApplication.addApplicationListener(applicationAdapter); fApplication.addPreferencesMenuItem(); fApplication.setEnabledPreferencesMenu(true);
WITHOUT_CLASSIFICATION	fine, don't add any data files. throw new WrappedSQLException(ex);
WITHOUT_CLASSIFICATION	fine, don't show any indexes. throw new WrappedSQLException(ex);
WITHOUT_CLASSIFICATION	because of the cross-catalog problem, let's not invoke this if the current catalog isn't equal to the catalog specified in the URL.
WITHOUT_CLASSIFICATION	there's a DBNAME specified, so make sure it matches the current catalog.
WITHOUT_CLASSIFICATION	i18n[mmsql.sqlScripts=SQL Scripts]
WITHOUT_CLASSIFICATION	TABLE NAME COLUMN NAME COLUMN SIZE COLUMN SIZE
WITHOUT_CLASSIFICATION	this is a UDF, not a stored procedure.
WITHOUT_CLASSIFICATION	since .execute() returned true, the first result is a ResultSet.
WITHOUT_CLASSIFICATION	Get the names of all the selected tables in a comma separated list,
WITHOUT_CLASSIFICATION	NOTE: a procedure may also be a UDF!
WITHOUT_CLASSIFICATION	the constructor above sets this from resources, but we'll override it with the name of the database file and its size.
WITHOUT_CLASSIFICATION	i18n[mssql.toScript=Objects to script:]
WITHOUT_CLASSIFICATION	i18n[mssql.foematting=Formatting]
WITHOUT_CLASSIFICATION	the constructor above sets this from resources, but we'll override it with the name of the index.
WITHOUT_CLASSIFICATION	by default, it is not running.
WITHOUT_CLASSIFICATION	create the timer, but DO NOT start it.
WITHOUT_CLASSIFICATION	don't bother changing the delay, but stop it if it's running.
WITHOUT_CLASSIFICATION	change the delay, and start it if it was stopped.
WITHOUT_CLASSIFICATION	i18n[mssql.remove_Mnemonic=R]
WITHOUT_CLASSIFICATION	i18n[mssql.objectsToBeScripted=Objects to be scripted]
WITHOUT_CLASSIFICATION	i18n[mssql.allUserDef=All user-defined data types]
WITHOUT_CLASSIFICATION	add the tables.
WITHOUT_CLASSIFICATION	Component glue = Box.createGlue(); c.gridx = 1; c.gridy = 10; gridBag.setConstraints(glue, c); panel.add(glue);
WITHOUT_CLASSIFICATION	don't increment i if you're removing something; otherwise, you'd skip the next item.
WITHOUT_CLASSIFICATION	we must iterate through this in descending order to avoid removing, say, item #2, making item #4 into item #3, inadvertently removing item #5.
WITHOUT_CLASSIFICATION	add the procedures.
WITHOUT_CLASSIFICATION	add the views.
WITHOUT_CLASSIFICATION	i18n[mssql.generateDrop=Generate the DROP <object> command for each object]
WITHOUT_CLASSIFICATION	i18n[mssql.generateDependend=Generate scripts for all dependent objects]
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	add the UDTs.
WITHOUT_CLASSIFICATION	IProcedureInfo[] procs = metaData.getProcedures(catalog,null,null);
WITHOUT_CLASSIFICATION	i18n[mssql.scriptTemplate=Script template]
WITHOUT_CLASSIFICATION	i18n[mssql.only70compatible=Only script 7.0 compatible features]
WITHOUT_CLASSIFICATION	--- SECURITY PANEL ----------------------------------------------
WITHOUT_CLASSIFICATION	i18n[mssql.scriptLogins=Script SQL Server logins (Windows and SQL Server logins)]
WITHOUT_CLASSIFICATION	i18n[mssql.scriptingOptions=Table Scripting Options]
WITHOUT_CLASSIFICATION	-----------------------------------------------------------------
WITHOUT_CLASSIFICATION	--- TABLE SCRIPTING PANEL ----------------------------------------------
WITHOUT_CLASSIFICATION	i18n[mssql.scriptIndexses=Script indexes]
WITHOUT_CLASSIFICATION	i18n[mssql.scriptFullText=Script full-text indexes]
WITHOUT_CLASSIFICATION	-----------------------------------------------------------------
WITHOUT_CLASSIFICATION	i18n[mssql.fileFormat=File Format]
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	Folder to store user settings.
WITHOUT_CLASSIFICATION	-----------------------------------------------------------------
WITHOUT_CLASSIFICATION	--- TABLE SCRIPTING PANEL ----------------------------------------------
WITHOUT_CLASSIFICATION	the columns in the referenced table
WITHOUT_CLASSIFICATION	keep scanning until we're either EOL or find a different filegroup.
WITHOUT_CLASSIFICATION	this works because all the IDatabaseObjectInfo objects come from the same source, so their references are equal.
WITHOUT_CLASSIFICATION	not so simple -- we want to keep the filegroups together.
WITHOUT_CLASSIFICATION	if we're still in this function, just add it at the end.
WITHOUT_CLASSIFICATION	j is the index of the first file in the next filegroup.
WITHOUT_CLASSIFICATION	chop off "DEFAULT on column ";
WITHOUT_CLASSIFICATION	chop off "CHECK on column ";
WITHOUT_CLASSIFICATION	NOTE: there are two rows. NOTE: MssqlConstraint holds the columns in the table participating in the key. NOTE: ForeignKeyConstraint holds the columns in the referenced table IN THE SAME ORDER.
WITHOUT_CLASSIFICATION	constraintKeys looks like this --> `REFERENCES pubs.dbo.foo (fooid, quuxid)' chop off "REFERENCES "
WITHOUT_CLASSIFICATION	now tableAndColumns[0] contains the table name and tableAndColumns[1] contains the bracketed list of columns.
WITHOUT_CLASSIFICATION	probably just no results -- return it empty.
WITHOUT_CLASSIFICATION	if it's PRIMARY, just write it without the FILEGROUP prefix.
WITHOUT_CLASSIFICATION	no indexes, i guess.
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	`clustered, unique, primary key located on PRIMARY'
WITHOUT_CLASSIFICATION	no triggers, i guess.
WITHOUT_CLASSIFICATION	no permissions, i guess.
WITHOUT_CLASSIFICATION	Owner Object Grantee Grantor ProtectType Action Column ------ ---------------------- ------------------ ------- ----------- ------ ------------------ dbo billing_bak public dbo Grant Delete .dbo billing_bak public dbo Grant Insert .dbo billing_bak public dbo Grant Select (All+New)dbo billing_bak public dbo Grant Update (All+New)dbo billing_bak usbilling dbo Deny Insert .
WITHOUT_CLASSIFICATION	i18n[mysql.createTableBtn=Create table]
WITHOUT_CLASSIFICATION	since .execute() returned true, the first result is a ResultSet.
WITHOUT_CLASSIFICATION	Name Owner Type Created_datetime --------------------------------------------------------- billing dbo user table 2004-03-08 10:41:05.030
WITHOUT_CLASSIFICATION	Column_name Type Computed Length Prec Scale Nullable TrimTrailingBlanks FixedLenNullInSource Collation ------------------------------------------------------------------------------------------------------------------------------------------------------- Location char no 2 yes no yes Latin1_General_CI_AS TotalBilledAmnt money no 8 19 4 yes (n/a) (n/a) NULL
WITHOUT_CLASSIFICATION	length
WITHOUT_CLASSIFICATION	collation
WITHOUT_CLASSIFICATION	there can be only one default in truth, but the model allows more than one.
WITHOUT_CLASSIFICATION	there can be only one PK in truth, but the model allows more than one.
WITHOUT_CLASSIFICATION	i18n[MysqlPlugin.showViewSource=Show view source]
WITHOUT_CLASSIFICATION	i18n[MysqlPlugin.title=MySQL]
WITHOUT_CLASSIFICATION	Tabs to add to the database node.
WITHOUT_CLASSIFICATION	add users to the role.
WITHOUT_CLASSIFICATION	stored procedures and functions have that dangling ;version thing.
WITHOUT_CLASSIFICATION	one column for the object name, another column for the object's owner.
WITHOUT_CLASSIFICATION	public boolean isCellEditable(int rowIndex, int columnIndex) { return (columnIndex == 0); }
WITHOUT_CLASSIFICATION	coll.add(new CreateTableAction(app, _resources, this));
WITHOUT_CLASSIFICATION	Show users in the object tee.
WITHOUT_CLASSIFICATION	Tabs to add to the catalog nodes.
WITHOUT_CLASSIFICATION	Tabs to add to the table nodes.
WITHOUT_CLASSIFICATION	Tabs to add to the user nodes.
WITHOUT_CLASSIFICATION	Options in popup menu.
WITHOUT_CLASSIFICATION	Tab to add to view nodes.
WITHOUT_CLASSIFICATION	Show triggers for tables
WITHOUT_CLASSIFICATION	_resources.addToMenu(coll.get(CreateTableAction.class), mysqlMenu);
WITHOUT_CLASSIFICATION	_resources.addToMenu(coll.get(DropDatabaseAction.class), mysqlMenu);
WITHOUT_CLASSIFICATION	tabs for triggers
WITHOUT_CLASSIFICATION	i18n[mysql.copyOk=Ok]
WITHOUT_CLASSIFICATION	i18n[mysql.sureDropping=Are you sure?]
WITHOUT_CLASSIFICATION	Execute the SQL command in the SQL tab and then display the SQL tab.
WITHOUT_CLASSIFICATION	private Object[] fields;
WITHOUT_CLASSIFICATION	private JCheckBox[] chFields;
WITHOUT_CLASSIFICATION	DefaultListModel listModel = (DefaultListModel) listFields.getModel();
WITHOUT_CLASSIFICATION	chFields = new JCheckBox[colNames.length];
WITHOUT_CLASSIFICATION	private final static ILogger s_log = LoggerController.createLogger(CopyTableCommand.class);
WITHOUT_CLASSIFICATION	Set the boolean value when the user selects b/w structure and data
WITHOUT_CLASSIFICATION	Set the list disabled if allfields of table are to be copied
WITHOUT_CLASSIFICATION	i18n[mysql.createTableComm=Create Table...]
WITHOUT_CLASSIFICATION	i18n[mysql.createAdd=Add]
WITHOUT_CLASSIFICATION	i18n[mysql.lengtSet=Length/Set]
WITHOUT_CLASSIFICATION	private DBUtils dbUtils;
WITHOUT_CLASSIFICATION	i18n[mysql.msgTableCreated=Table {0} created]
WITHOUT_CLASSIFICATION	i18n[mysql.btCancel=Cancel]
WITHOUT_CLASSIFICATION	Set the attributes for the fields in the class FieldDetails
WITHOUT_CLASSIFICATION	Display the field attributes when selected in the list
WITHOUT_CLASSIFICATION	Reset the checkbox selected index false when fieldname gains focus
WITHOUT_CLASSIFICATION	Remove the Fields added to the list
WITHOUT_CLASSIFICATION	Logger for this class. private final static ILogger s_log = LoggerController.createLogger(AlterTableCommand.class);
WITHOUT_CLASSIFICATION	initComponents();
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	Action performed for the cancel button private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) { _dlog.setVisible(false); _dlog.dispose(); }
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	private void closeDialog(java.awt.event.WindowEvent evt) { _dlog.setVisible(false); _dlog.dispose(); }
WITHOUT_CLASSIFICATION	i18n[sessionscript.Save=Save]
WITHOUT_CLASSIFICATION	Execute the SQL command in the SQL tab and then display the SQL tab.
WITHOUT_CLASSIFICATION	Get the names of all the selected tables in a comma separated list,
WITHOUT_CLASSIFICATION	Remove trailing ","
WITHOUT_CLASSIFICATION	private static ILogger s_log = LoggerController.createLogger(SessionExpander.class);
WITHOUT_CLASSIFICATION	Users.
WITHOUT_CLASSIFICATION	private final static ILogger s_log = LoggerController.createLogger(AlterTableDialog.class);
WITHOUT_CLASSIFICATION	i18n[mysql.alterDlgAlter=Alter]
WITHOUT_CLASSIFICATION	i18n[mysql.alterDlgClose=Close]
WITHOUT_CLASSIFICATION	private final static ILogger s_log = LoggerController.createLogger(AlterColumnsPanelBuilder.class);
WITHOUT_CLASSIFICATION	selectedIndex = cbFieldName.getSelectedIndex(); DefaultComboBoxModel comboModel = (DefaultComboBoxModel) cbFieldName.getModel(); FieldDetails fd = (FieldDetails) comboModel.getElementAt(selectedIndex); cbFieldName.setSelectedItem(fd.getFieldName()); cbFieldType.setSelectedItem(fd.getFieldType()); tfFieldDefault.setText(fd.getDefault()); chAutoIncrement.setSelected(fd.IsAutoIncrement()); chNotNull.setSelected(fd.IsNotNull());
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	i18n[mysql.displayStatus=(MySQL) Display database status]
WITHOUT_CLASSIFICATION	i18n[mysql.status=MySQL Status]
WITHOUT_CLASSIFICATION	private final static ILogger s_log = LoggerController.createLogger(DatabaseStatusTab.class);
WITHOUT_CLASSIFICATION	i18n[mysql.displayOpenTables=(MySQL) Display open tables]
WITHOUT_CLASSIFICATION	private final static ILogger s_log = LoggerController.createLogger(ProcessesTab.class);
WITHOUT_CLASSIFICATION	private final static ILogger s_log = LoggerController.createLogger(OpenTablesTab.class);
WITHOUT_CLASSIFICATION	i18n[mysql.variables=MySQL Variables]
WITHOUT_CLASSIFICATION	private final static ILogger s_log = LoggerController.createLogger(ShowMasterLogsTab.class);
WITHOUT_CLASSIFICATION	i18n[MysqlTriggerDetailsTab.hint=Display trigger details]
WITHOUT_CLASSIFICATION	MySQL allows statement separators in procedure blocks. The process of tokenizing above renders these procedure blocks as separate statements, which are not valid to be executed separately. Here, we re-assemble any create procedure/function/trigger statements that we find using the beginning procedure block pattern and the procedure separator.
WITHOUT_CLASSIFICATION	Stray sep - or we failed to find pattern
WITHOUT_CLASSIFICATION	To get the TableInfo for the selected object in the tree
WITHOUT_CLASSIFICATION	Get all the data types available
WITHOUT_CLASSIFICATION	We got to the end of the script without finding a proc separator. Just add it as if we had.
WITHOUT_CLASSIFICATION	DELIMITER sets the separator that tells us when a procedure. This is MySQL-specific
WITHOUT_CLASSIFICATION	i18n[OracleAliasPrefsPanel.All=Allow all Schemas]
WITHOUT_CLASSIFICATION	i18n[OraclePlugin.title=Oracle]
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	Expanders.
WITHOUT_CLASSIFICATION	This fixes the issue where the tree is getting constructed prior to the Oracle plugin expanders being registered.(USERS, SESSIONS, INSTANCES nodes have no children until the tree is refreshed). Even though this is a hack, it doesn't seem to negatively impact performance even when loading all schemas.
WITHOUT_CLASSIFICATION	Register custom DataTypeComponent factory for Oracles XMLType
WITHOUT_CLASSIFICATION	Not all Oracle's, just 10g and above.
WITHOUT_CLASSIFICATION	i18n[oracle.displayOptions=Display database options]
WITHOUT_CLASSIFICATION	i18n[oracle.secons3=(seconds)]
WITHOUT_CLASSIFICATION	Create checkbox for enabling auto refresh i18n[oracle.enableAutoRefresh=Enable auto refresh]
WITHOUT_CLASSIFICATION	i18n[oracle.options=Options]
WITHOUT_CLASSIFICATION	i18n
WITHOUT_CLASSIFICATION	i18n[oracle.refreshSecons=(seconds)]
WITHOUT_CLASSIFICATION	i18n
WITHOUT_CLASSIFICATION	I18n[oracle.infoTitle=Oracle Session info for: {0}]
WITHOUT_CLASSIFICATION	I18n[oracle.sgaTitle=Oracle SGA trace for: {0}]
WITHOUT_CLASSIFICATION	Needs to be done in both cases because if the window goes back to the default layer it goes back behind all other windows too.
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	Nil out the timer so that it can be gc'd
WITHOUT_CLASSIFICATION	Create spinner for update period
WITHOUT_CLASSIFICATION	Create spinner for update period
WITHOUT_CLASSIFICATION	Only resize once.
WITHOUT_CLASSIFICATION	JMH Remove the current sql text. Create a tabbed pane for session details (including sql text)
WITHOUT_CLASSIFICATION	i18n[oracle.displaySessionDetails=Display session details]
WITHOUT_CLASSIFICATION	If we don't invokeLater here no Short-Cut-Key is sent to the internal frame seen under java version "1.4.1_01" and Linux
WITHOUT_CLASSIFICATION	At the moment, no default value
WITHOUT_CLASSIFICATION	Stray sep - or we failed to find pattern
WITHOUT_CLASSIFICATION	Oracle allows statement separators in PL/SQL blocks. The process of tokenizing above renders these procedure blocks as separate statements, which is invalid for Oracle. Since "/" is the way in SQL-Plus to denote the end of a procedure or function, we re-assemble any create procedure/function/trigger statements that we find. This should be done before expanding file includes. Otherwise, any create sql found in files will already be joined, causing this to find create SQL without matching "/". The process of expanding 'file includes' already joins the sql fragments that it finds.
WITHOUT_CLASSIFICATION	JMH: For additional performance we could utilise the fixed_table_sequence column from the session, to investigate which rows need to be updated on a refresh See V$SESSION doco for more info.
WITHOUT_CLASSIFICATION	This seems to work for both Oracle 9i and 10g
WITHOUT_CLASSIFICATION	Since it is likely to have "/" on it's own line, and it is key to letting us know that proceeding statements form a multi-statement procedure or function, it deserves it's own place in the _queries arraylist. If it is followed by other procedure or function creation blocks, we may fail to detect that, so this just goes through the list and breaks apart statements on newline so that this cannot happen.
WITHOUT_CLASSIFICATION	Below is equivalent to the following: stringValueResult = xmlType.getStringVal();
WITHOUT_CLASSIFICATION	For Oracle 10g we could say something like : "where XMLSERIALIZE(CONTENT " + _colDef.getLabel() +") like '<value>'" This doesn't appear to work on Oracle 9i at the moment, so we will avoid using this column in any where clause if the value is non-null, which is what the superclass implementation does. TODO: Find a way to do this for both versions or split this behavior so that it works on 10g and is disabled on 9i.
WITHOUT_CLASSIFICATION	Below is equivalent to the following: stringValueResult = xmlType.getStringVal();
WITHOUT_CLASSIFICATION	Below is equivalent to the following: xmlType = XMLType.createXML(o);
WITHOUT_CLASSIFICATION	Throws an exception claiming that 2007 isn't a valid type - go figure. pstmt.setNull(position, _colDef.getSqlType());
WITHOUT_CLASSIFICATION	now bind the string..
WITHOUT_CLASSIFICATION	Both of these throw an exception claiming that it got a clob and expected a number (inconsistent data types): pstmt.setClob(position, null); pstmt.setNull(position, java.sql.Types.CLOB);
WITHOUT_CLASSIFICATION	At the moment, no default value
WITHOUT_CLASSIFICATION	At the moment, no default value
WITHOUT_CLASSIFICATION	View Tab
WITHOUT_CLASSIFICATION	Index tab
WITHOUT_CLASSIFICATION	Trigger tabs
WITHOUT_CLASSIFICATION	Sequence tabs
WITHOUT_CLASSIFICATION	ANALYZE Checkbox
WITHOUT_CLASSIFICATION	Plugin supports only the main session window
WITHOUT_CLASSIFICATION	extractors
WITHOUT_CLASSIFICATION	Object Tree Expanders Schema Expanders - sequence
WITHOUT_CLASSIFICATION	super.sqlExecutionWarning(warn);
WITHOUT_CLASSIFICATION	Table Expanders - trigger and index expander
WITHOUT_CLASSIFICATION	Detail Tabs Procedure tab
WITHOUT_CLASSIFICATION	ANALYZE Checkbox
WITHOUT_CLASSIFICATION	Lock tab
WITHOUT_CLASSIFICATION	Popup Menus
WITHOUT_CLASSIFICATION	s_log.info("Not all selected objects where tables.");
WITHOUT_CLASSIFICATION	Catalog
WITHOUT_CLASSIFICATION	Catalog
WITHOUT_CLASSIFICATION	This causes locks own by other pids to be excluded from the result. + " pgl.pid = pg_stat_get_backend_pid(svrid) AND "
WITHOUT_CLASSIFICATION	Schema
WITHOUT_CLASSIFICATION	table list
WITHOUT_CLASSIFICATION	We don't know if this type can be used in where clauses so always exclude it.
WITHOUT_CLASSIFICATION	Options: FULL Checkbox
WITHOUT_CLASSIFICATION	Options: FULL Checkbox
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner Special case: the input is exactly the output
WITHOUT_CLASSIFICATION	fail("Not yet implemented");
WITHOUT_CLASSIFICATION	Stored Procedures can have comments embedded in them, so don't line-wrap them.
WITHOUT_CLASSIFICATION	TABLE TYPE DBO
WITHOUT_CLASSIFICATION	INDEX
WITHOUT_CLASSIFICATION	VIEW TYPE DBO (doesn't exist yet)
WITHOUT_CLASSIFICATION	VIEW
WITHOUT_CLASSIFICATION	SEQUENCE TYPE DBO
WITHOUT_CLASSIFICATION	SEQUENCE
WITHOUT_CLASSIFICATION	It is important to process the name change first - so that we can use the new name instead of the old in subsequent alterations
WITHOUT_CLASSIFICATION	implemented in all originally supported dialects
WITHOUT_CLASSIFICATION	skip comments
WITHOUT_CLASSIFICATION	create new columns in table
WITHOUT_CLASSIFICATION	update <destinationTable> s set destColumn = ( select f.desc_t1 from <fromTable> f where f.myid = s.myid)
WITHOUT_CLASSIFICATION	ArrayList<String> result = new ArrayList<String>();
WITHOUT_CLASSIFICATION	deletes the ", "
WITHOUT_CLASSIFICATION	deletes the ", "
WITHOUT_CLASSIFICATION	Selects the values from the merge table
WITHOUT_CLASSIFICATION	Selects the values for the where part
WITHOUT_CLASSIFICATION	maybe with Inner join better performance
WITHOUT_CLASSIFICATION	Selects the values from the existing table
WITHOUT_CLASSIFICATION	merge columns in a new column
WITHOUT_CLASSIFICATION	merge columns in an existing column
WITHOUT_CLASSIFICATION	add column if neeeded
WITHOUT_CLASSIFICATION	getColumnAddSQL
WITHOUT_CLASSIFICATION	Don't show indexes dialog if only one index exists to be modified
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Only Oracle supports materialized views directly.
WITHOUT_CLASSIFICATION	implemented in all originally supported dialects
WITHOUT_CLASSIFICATION	implemented in all originally supported dialects
WITHOUT_CLASSIFICATION	implemented in all originally supported dialects
WITHOUT_CLASSIFICATION	implemented in all originally supported dialects
WITHOUT_CLASSIFICATION	getColumnAddSQL
WITHOUT_CLASSIFICATION	Show the user a dialog with a list of columns and ask them to select one or more columns to drop
WITHOUT_CLASSIFICATION	Don't show foreignKeys dialog if only one index exists to be modified
WITHOUT_CLASSIFICATION	If the table has only one column, it cannot be dropped
WITHOUT_CLASSIFICATION	Set a default primary key name based on the name of the table
WITHOUT_CLASSIFICATION	Adds a foreign key constraint to the source table.
WITHOUT_CLASSIFICATION	only gives the SQL without the Cascade/Restrict Constraint
WITHOUT_CLASSIFICATION	Here we use index inside of column names so that we don't have to alias the columns in the dialect. Different dialects call these sequence information columns by different names. Just make sure to preserve the order in the dialect. last_value max_value min_value cache_value increment_by is_cycled
WITHOUT_CLASSIFICATION	Show the user a dialog with a list of columns and ask them to select
WITHOUT_CLASSIFICATION	Show the user a dialog with a list of columns and ask them to select
WITHOUT_CLASSIFICATION	If there is only one column in the table,
WITHOUT_CLASSIFICATION	Copys the distinct values from the source column into the lookup table.
WITHOUT_CLASSIFICATION	Creates the lookup table with it's columns (depenting on the mode).
WITHOUT_CLASSIFICATION	getAddForeignKeyConstraintSQL
WITHOUT_CLASSIFICATION	getInsertIntoSQL
WITHOUT_CLASSIFICATION	getColumnNameAlterSQL
WITHOUT_CLASSIFICATION	getUpdateSQL
WITHOUT_CLASSIFICATION	getColumnNullableAlterSQL
WITHOUT_CLASSIFICATION	getColumnDropSQL
WITHOUT_CLASSIFICATION	Add column name to the list
WITHOUT_CLASSIFICATION	No point to ordering less than 2 tables
WITHOUT_CLASSIFICATION	Create the analysis dialog using the EDT, and wait for it to finish.
WITHOUT_CLASSIFICATION	Columns
WITHOUT_CLASSIFICATION	Catalog
WITHOUT_CLASSIFICATION	Schema
WITHOUT_CLASSIFICATION	Column
WITHOUT_CLASSIFICATION	A Map for quick lookup later - we want to pass TableColumnInfos to the dialect, not merely column names.
WITHOUT_CLASSIFICATION	new Name of the table
WITHOUT_CLASSIFICATION	There are more dependancies then just FKs (like views, etc.), therefore cascadeConstraints is used as a parameter for the TableDropSQL.
WITHOUT_CLASSIFICATION	local constraint
WITHOUT_CLASSIFICATION	Now, get the drop order (same as delete) and update the dialog status while doing so.
WITHOUT_CLASSIFICATION	view list
WITHOUT_CLASSIFICATION	Foreign Key
WITHOUT_CLASSIFICATION	Table
WITHOUT_CLASSIFICATION	Table
WITHOUT_CLASSIFICATION	if the check gets till here we have all the need information
WITHOUT_CLASSIFICATION	if the check gets till here we have all the need information
WITHOUT_CLASSIFICATION	Mode
WITHOUT_CLASSIFICATION	Drop Conflicts
WITHOUT_CLASSIFICATION	"fki_" is default startname
WITHOUT_CLASSIFICATION	add to the button group
WITHOUT_CLASSIFICATION	adding all Colums together
WITHOUT_CLASSIFICATION	add to the button group
WITHOUT_CLASSIFICATION	pre-selection
WITHOUT_CLASSIFICATION	pre-selection
WITHOUT_CLASSIFICATION	add to jpanel pane
WITHOUT_CLASSIFICATION	add to the panel - Update
WITHOUT_CLASSIFICATION	add to the panel - Update
WITHOUT_CLASSIFICATION	_columnTab = new MergeColumnDialog.ColumnsTab();
WITHOUT_CLASSIFICATION	private ColumnsTab _columnTab;
WITHOUT_CLASSIFICATION	Increment
WITHOUT_CLASSIFICATION	Name
WITHOUT_CLASSIFICATION	Maximum
WITHOUT_CLASSIFICATION	Last Value
WITHOUT_CLASSIFICATION	Start
WITHOUT_CLASSIFICATION	Minimum
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	Table name
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	Folder to store user settings.
WITHOUT_CLASSIFICATION	Column 0 Row 0
WITHOUT_CLASSIFICATION	Catalog
WITHOUT_CLASSIFICATION	Catalog
WITHOUT_CLASSIFICATION	Schema
WITHOUT_CLASSIFICATION	Schema
WITHOUT_CLASSIFICATION	Schema
WITHOUT_CLASSIFICATION	view list
WITHOUT_CLASSIFICATION	Table
WITHOUT_CLASSIFICATION	Column
WITHOUT_CLASSIFICATION	if the check gets till here we have all the need information
WITHOUT_CLASSIFICATION	if the check gets till here we have all the need information
WITHOUT_CLASSIFICATION	if the check gets till here we have all the need information
WITHOUT_CLASSIFICATION	local constraint
WITHOUT_CLASSIFICATION	adding all Colums together
WITHOUT_CLASSIFICATION	labels should stay put, while user-input fields are allowed to grow as the user desires.
WITHOUT_CLASSIFICATION	Catalog
WITHOUT_CLASSIFICATION	table list
WITHOUT_CLASSIFICATION	just plain data
WITHOUT_CLASSIFICATION	Cascade Constraints Checkbox
WITHOUT_CLASSIFICATION	Cascade Constraints Checkbox
WITHOUT_CLASSIFICATION	adding all Colums together
WITHOUT_CLASSIFICATION	some data
WITHOUT_CLASSIFICATION	some data
WITHOUT_CLASSIFICATION	All rules passed, so activate the button
WITHOUT_CLASSIFICATION	adding all Colums together
WITHOUT_CLASSIFICATION	if the check gets till here we have all the needed information
WITHOUT_CLASSIFICATION	all tables except the merge into table
WITHOUT_CLASSIFICATION	all local and columns for the other tables..
WITHOUT_CLASSIFICATION	Column list
WITHOUT_CLASSIFICATION	Errors
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.noDeleteSelection=Please select the bookmark to delete]
WITHOUT_CLASSIFICATION	i18n[sessionscript.startupScripts=Startup Scripts]
WITHOUT_CLASSIFICATION	first time user has run pgm.
WITHOUT_CLASSIFICATION	Folder to store user settings.
WITHOUT_CLASSIFICATION	Folder within plugins folder that belongs to this plugin.
WITHOUT_CLASSIFICATION	Logger for this class
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible Logger for this class
WITHOUT_CLASSIFICATION	sheet types
WITHOUT_CLASSIFICATION	Add context menu items to the object tree's session node. as popup menu
WITHOUT_CLASSIFICATION	plugin supports Session main window only
WITHOUT_CLASSIFICATION	plugin supports Session main window only
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible ------------------------------------------------------------------------ Logger for this class
WITHOUT_CLASSIFICATION	line separator for easy using ;-)
WITHOUT_CLASSIFICATION	Labels
WITHOUT_CLASSIFICATION	######################################################################## ########## events ######################################################################## ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	visible (gui) ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	Questions
WITHOUT_CLASSIFICATION	controlling ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	This should never happen as we check above for the duplicate.
WITHOUT_CLASSIFICATION	IApplication application = getApplication(); application.addToMenu(IMenuIDs.PLUGINS_MENU, getSmarttoolsMenu(getApplication(), null, false));
WITHOUT_CLASSIFICATION	private final int TABLE_COL_DATATYPE = 3; not used
WITHOUT_CLASSIFICATION	tblResult.setAutoCreateRowSorter(true);
WITHOUT_CLASSIFICATION	Global misc
WITHOUT_CLASSIFICATION	Global errors
WITHOUT_CLASSIFICATION	Misc
WITHOUT_CLASSIFICATION	Entries
WITHOUT_CLASSIFICATION	Tooltips
WITHOUT_CLASSIFICATION	Info
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------ Thread SEARCHING ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	ThreadSearching
WITHOUT_CLASSIFICATION	init progressbar
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.noEditSelection=Please select the bookmark to edit]
WITHOUT_CLASSIFICATION	i18n.LBL_TITLE_USED_TABLES);
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible ------------------------------------------------------------------------ Logger for this class
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible ------------------------------------------------------------------------ Logger for this class
WITHOUT_CLASSIFICATION	Labels
WITHOUT_CLASSIFICATION	Labels
WITHOUT_CLASSIFICATION	Labels
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	######################################################################## ########## events ######################################################################## ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	visible (gui) ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	visible (gui) ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	Tooltips and questions
WITHOUT_CLASSIFICATION	Tooltips and questions
WITHOUT_CLASSIFICATION	Questions
WITHOUT_CLASSIFICATION	Questions
WITHOUT_CLASSIFICATION	Questions
WITHOUT_CLASSIFICATION	controlling ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	user checks ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	Global misc
WITHOUT_CLASSIFICATION	Global misc
WITHOUT_CLASSIFICATION	Tooltips
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------ Table classes ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	Infos
WITHOUT_CLASSIFICATION	Infos
WITHOUT_CLASSIFICATION	Infos
WITHOUT_CLASSIFICATION	create a new bookmark manager
WITHOUT_CLASSIFICATION	rebuild the bookmark menu.
WITHOUT_CLASSIFICATION	this gets called before initialize()
WITHOUT_CLASSIFICATION	i18n[sqlparam.inputParameterValues=Please input the parameter values]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.prefOk=OK]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.squirrelMarksInPopup=Show SQuirreL bookmarks in ctrl+j popup]
WITHOUT_CLASSIFICATION	i18n[sqlparam.valueFor=Value for {0}]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.script=Script:]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.noAdd=No text to be added.]
WITHOUT_CLASSIFICATION	Columns
WITHOUT_CLASSIFICATION	Rows
WITHOUT_CLASSIFICATION	Load plugin preferences.
WITHOUT_CLASSIFICATION	Load plugin preferences.
WITHOUT_CLASSIFICATION	######################################################################## ########## events ######################################################################## ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	visible (gui) ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	controlling ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	user checks ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	this gets called before initialize()
WITHOUT_CLASSIFICATION	Load resources such as menu items, etc...
WITHOUT_CLASSIFICATION	Load resources such as menu items, etc...
WITHOUT_CLASSIFICATION	log.info("SQL executed: " + sql);
WITHOUT_CLASSIFICATION	private static final String PREFS_FILE_NAME = "sqlparamprefs.xml";
WITHOUT_CLASSIFICATION	Nothing to do if object tree is opened.
WITHOUT_CLASSIFICATION	log.info("SQL starting to execute: " + sql);
WITHOUT_CLASSIFICATION	Flag indicates changing in textarea
WITHOUT_CLASSIFICATION	Keylistener to indicate changing of text
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	Folder to store user settings.
WITHOUT_CLASSIFICATION	Column 0 Row 0
WITHOUT_CLASSIFICATION	Here we do the Replacement
WITHOUT_CLASSIFICATION	old version before multible sesssion windows return session.getSQLPanelAPI(plugin);
WITHOUT_CLASSIFICATION	old version return session.getObjectTreeAPI(sqlScriptPlugin);
WITHOUT_CLASSIFICATION	Move over leading whitespaces
WITHOUT_CLASSIFICATION	Some databases cannot order by LONG/LOB columns.
WITHOUT_CLASSIFICATION	IObjectTreeAPI api = _session.getObjectTreeAPI(_plugin);
WITHOUT_CLASSIFICATION	Just a helper to make the fromResultSet ? ... below look nicer.
WITHOUT_CLASSIFICATION	PostgreSQL uses literal values true/false instead of 1/0.
WITHOUT_CLASSIFICATION	Version This is optional. If you don't want to give out this info, please enter "N/A"
WITHOUT_CLASSIFICATION	PostgreSQL uses literal values true/false instead of 1/0.
WITHOUT_CLASSIFICATION	Types.CHAR, Types.VARCHAR, Types.LONGVARCHAR, Types.BINARY, Types.VARBINARY Types.LONGVARBINARY Types.NULL Types.JAVA_OBJECT Types.DISTINCT Types.ARRAY Types.BLOB Types.CLOB Types.REF Types.DATALINK
WITHOUT_CLASSIFICATION	delete last ','
WITHOUT_CLASSIFICATION	close it.
WITHOUT_CLASSIFICATION	As in java.sql.Types
WITHOUT_CLASSIFICATION	This method makes the web service call If you want to you can create a web service proxy from the WSDL file, 9 times out of 10, that's what you really want to do.
WITHOUT_CLASSIFICATION	Set the target server and name space
WITHOUT_CLASSIFICATION	Set the target server and name space
WITHOUT_CLASSIFICATION	Add the parameter names and types Use the session Id you got from the openSession call here
WITHOUT_CLASSIFICATION	Use the session key you got from the openSession call here
WITHOUT_CLASSIFICATION	The SQL statement to be validated against the standard
WITHOUT_CLASSIFICATION	The format of the result. This must be "text" or "html". Hopefully some type of XML format will be available as well
WITHOUT_CLASSIFICATION	QName l_qn = new QName( "http:sqlvalidator.mimer.com/v1", "ValidatorResult" );
WITHOUT_CLASSIFICATION	Set the return type
WITHOUT_CLASSIFICATION	Set the return type
WITHOUT_CLASSIFICATION	Supply the user name. If you use anonymous you will be logged in and the pw will be ignored
WITHOUT_CLASSIFICATION	The pw. If user name is anonymous this can be anything. But it has to be supplied anyway.
WITHOUT_CLASSIFICATION	And the version of the calling program. This is optional. If you don't want to give out this info, please enter "N/A"
WITHOUT_CLASSIFICATION	The target DBMS, could be Mimer SQL Engine, Oracle, ... This is optional. If you don't want to give out this info, please enter "N/A"
WITHOUT_CLASSIFICATION	fail("Not yet implemented");
WITHOUT_CLASSIFICATION	QName l_qn = new QName( "http:sqlvalidator.mimer.com/v1", "SessionData" );
WITHOUT_CLASSIFICATION	Create self and
WITHOUT_CLASSIFICATION	make a few calls
WITHOUT_CLASSIFICATION	The pw. If user name is anonymous this can be anything. But it has to be supplied anyway.
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	Folder to store user settings.
WITHOUT_CLASSIFICATION	Load plugin preferences.
WITHOUT_CLASSIFICATION	Set the target server and name space
WITHOUT_CLASSIFICATION	Set the target server and name space
WITHOUT_CLASSIFICATION	Use the session key you got from the openSession call here
WITHOUT_CLASSIFICATION	The SQL statement to be validated against the standard
WITHOUT_CLASSIFICATION	The format of the result. This must be "text" or "html". Hopefully some type of XML format will be available as well
WITHOUT_CLASSIFICATION	Set the return type
WITHOUT_CLASSIFICATION	The connection Technology used, could be ODBC, JDBC, ADO This is optional. If you don't want to give out this info, please enter "N/A"
WITHOUT_CLASSIFICATION	The version of the target DBMS This is optional. If you don't want to give out this info, please enter "N/A"
WITHOUT_CLASSIFICATION	For testing on the local machine URL l_url = new URL("http:localhost:8081/services");
WITHOUT_CLASSIFICATION	Parameters for call.
WITHOUT_CLASSIFICATION	Version This is optional. If you don't want to give out this info, please enter "N/A"
WITHOUT_CLASSIFICATION	For testing on the live server URL l_url = new URL("http:sqlvalidator.mimer.com/beta2/services");
WITHOUT_CLASSIFICATION	Set this to 1 if your application is interactive where the user enters queries and then runs them Set it to 2 if it is non interactive, such as for instance a JDBC Bridge driver that intercepts SQL
WITHOUT_CLASSIFICATION	Execute validator and return results.
WITHOUT_CLASSIFICATION	Set the url for subsequent calls This is to allow for load balancing to a server on the other side of the world
WITHOUT_CLASSIFICATION	Close existing session.
WITHOUT_CLASSIFICATION	Current version of the validator webservice cannot handle anything greater than 30.
WITHOUT_CLASSIFICATION	Connect.
WITHOUT_CLASSIFICATION	Add menu.
WITHOUT_CLASSIFICATION	Supply the user name. If you use anonymous you will be logged in and the pw will be ignored
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	Add context menu items to the object tree's view and procedure nodes.
WITHOUT_CLASSIFICATION	Set the return type
WITHOUT_CLASSIFICATION	The name of the calling client program. This is optional. If you don't want to give out this info, please enter "N/A"
WITHOUT_CLASSIFICATION	And the version of the calling program. This is optional. If you don't want to give out this info, please enter "N/A"
WITHOUT_CLASSIFICATION	The target DBMS, could be Mimer SQL Engine, Oracle, ... This is optional. If you don't want to give out this info, please enter "N/A"
WITHOUT_CLASSIFICATION	The version of the target DBMS This is optional. If you don't want to give out this info, please enter "N/A"
WITHOUT_CLASSIFICATION	The connection Technology used, could be ODBC, JDBC, ADO This is optional. If you don't want to give out this info, please enter "N/A"
WITHOUT_CLASSIFICATION	Set this to 1 if your application is interactive where the user enters queries and then runs them Set it to 2 if it is non interactive, such as for instance a JDBC Bridge driver that intercepts SQL
WITHOUT_CLASSIFICATION	Add a new formatter for Sybase-Errors/Warnings
WITHOUT_CLASSIFICATION	Open the session.
WITHOUT_CLASSIFICATION	Open connection to the webservice.
WITHOUT_CLASSIFICATION	1 = interactive, 0 = batch
WITHOUT_CLASSIFICATION	/ SybaseASE specific code to read procedure definitions.
WITHOUT_CLASSIFICATION	plugin supports Session main window only
WITHOUT_CLASSIFICATION	otApi.addDetailTab(DatabaseObjectType.INDEX, new IndexDetailsTab());
WITHOUT_CLASSIFICATION	plugin supports Session main window only
WITHOUT_CLASSIFICATION	/ Sybase ASE specific code to read view definitions.
WITHOUT_CLASSIFICATION	private boolean _blockCaretEnabled = false;
WITHOUT_CLASSIFICATION	trigger source "SELECT text " + "FROM dbo.sysobjects " + "inner join syscomments on syscomments.id = sysobjects.id " + "where loginame = ? " + "and name = ? " + "and type = 'TR' ";
WITHOUT_CLASSIFICATION	Only reformat SQLWarning:
WITHOUT_CLASSIFICATION	private boolean _showEndOfLineMarkers = false;
WITHOUT_CLASSIFICATION	private boolean _blinkCaret = true;
WITHOUT_CLASSIFICATION	private boolean _bracketHighlighting = true;
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	String CURRENT_LINE_HIGHLIGHTING = "currentLineHighlighting"; String CURRENT_LINE_HIGHLIGHT_COLOR = "currentLineHighlightColor";
WITHOUT_CLASSIFICATION	final TextAreaDefaults dfts = TextAreaDefaults.getDefaults(); _columnStyle = dfts.styles[Token.COLUMN]; _commentStyle = dfts.styles[Token.COMMENT1]; _keyword1Style = dfts.styles[Token.KEYWORD]; _keyword2Style = dfts.styles[Token.DATA_TYPE]; _keyword3Style = dfts.styles[Token.FUNCTION]; _labelStyle = dfts.styles[Token.LABEL]; _literalStyle = dfts.styles[Token.LITERAL1]; _operatorStyle = dfts.styles[Token.OPERATOR]; _otherStyle = dfts.styles[Token.NULL]; _tableStyle = dfts.styles[Token.TABLE];
WITHOUT_CLASSIFICATION	String EOL_MARKERS = "eolMarkers"; String EOL_MARKER_COLOR = "eolMarkerColor";
WITHOUT_CLASSIFICATION	String LINE_NUMBER_COLOR = "lineNumberColor"; String SELECTION_COLOR = "selectionColor"; String SHOW_LINE_NBRS = "showLineNumbers";
WITHOUT_CLASSIFICATION	Note: SessionInternalFrame and SQLinternalFrame should never provide a ToolsPopupAccessor. Their Tools Popup ist configured in the SyntaxPlugin class with standard Actions from ActionCollection.
WITHOUT_CLASSIFICATION	private boolean _currentLineHighlighting = true;
WITHOUT_CLASSIFICATION	i8n[syntax.abrevNewLineNote=Use \n in corrections for line break. Note: Bookmarks are more powerful than abreviations.]
WITHOUT_CLASSIFICATION	private boolean _showLineNumbers = false;
WITHOUT_CLASSIFICATION	private int _caretRGB = Color.red.getRGB(); private int _selectionRGB = 0xccccff; private int _lineHighlightRGB = Color.lightGray.getRGB(); private int _eolMarkerRGB = 0x009999; private int _bracketHighlightRGB = Color.black.getRGB(); private int _lineNumberRGB = Color.black.getRGB();
WITHOUT_CLASSIFICATION	Create the actual panel that will be displayed in dialog.
WITHOUT_CLASSIFICATION	Navy.
WITHOUT_CLASSIFICATION	Folder to store user settings.
WITHOUT_CLASSIFICATION	property file not found for user - first time user ran pgm.
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	Load plugin preferences.
WITHOUT_CLASSIFICATION	One may ask why we don't register the key strokes permanently. When we did so with two internal frames open, the key stroke event sometimes went to the wrong frame. This doesn't happen if we procede like we do. The question is, why?
WITHOUT_CLASSIFICATION	Install the factory for creating SQL entry text controls.
WITHOUT_CLASSIFICATION	_sqlEntryFactoryProxy = new OsterSQLEntryAreaFactory(this, originalFactory);
WITHOUT_CLASSIFICATION	Not the Textcontrol itself changed but some other of the Syntax Preferences, for example a color. So we tell the current control to update the preferences.
WITHOUT_CLASSIFICATION	We don't support switching the entry control during a sessionbecause serveral things, that are attached to the entry controlfrom outside this plugin would need to reinitialze too.For example code completion and edit extras.synchronized (_session){ISQLEntryPanelFactory factory = _plugin.getSQLEntryAreaFactory();ISQLEntryPanel pnl = factory.createSQLEntryPanel(_session);_session.getSQLPanelAPI(_plugin).installSQLEntryPanel(pnl);}
WITHOUT_CLASSIFICATION	_knownTables is just a cache to prevent creating a new String each time
WITHOUT_CLASSIFICATION	no new here, method is called very often.
WITHOUT_CLASSIFICATION	Suppress warnings for issues that are present in this old release of NetBeans editor libraries we are using.
WITHOUT_CLASSIFICATION	Update java colorings
WITHOUT_CLASSIFICATION	List of the additional colorings
WITHOUT_CLASSIFICATION	ExtCaret highlighting options
WITHOUT_CLASSIFICATION	ExtCaret highlighting colorings
WITHOUT_CLASSIFICATION	Formatting settings
WITHOUT_CLASSIFICATION	new MultiKeyBinding(KeyStroke.getKeyStroke(KeyEvent.VK_OPEN_BRACKET, MENU_MASK), ExtKit.matchBraceAction), new MultiKeyBinding(KeyStroke.getKeyStroke(KeyEvent.VK_OPEN_BRACKET, MENU_MASK | InputEvent.SHIFT_MASK), ExtKit.selectionMatchBraceAction), new MultiKeyBinding(KeyStroke.getKeyStroke(KeyEvent.VK_F10, InputEvent.SHIFT_MASK), ExtKit.showPopupMenuAction),
WITHOUT_CLASSIFICATION	new MultiKeyBinding( KeyStroke.getKeyStroke(KeyEvent.VK_D, InputEvent.CTRL_MASK), SQLKit.duplicateLineAction),
WITHOUT_CLASSIFICATION	DialogSupport.setDialogFactory(new NbDialogSupport());
WITHOUT_CLASSIFICATION	Once and again the Netbeans editor calls createSyntax() after sessionEnding() was called. Then sess is null and the code below would break.
WITHOUT_CLASSIFICATION	The ctrl enter short cut in the Netbeans editor is set in org.netbeans.editor.ext.BaseKit to the org.netbeans.editor.ext.BaseKit.SplitLineAction. Since the ctrl enter shorcut is a basic SQuirreL short cut and is defined via the main menu action we must remove this binding here.
WITHOUT_CLASSIFICATION	Removed for the SQLBookmark Plugin
WITHOUT_CLASSIFICATION	Removed for the tools popup
WITHOUT_CLASSIFICATION	Reasons for this code mailed to Rob by Gerd on 9/20/2008. the Problem are methods like BaseSQLEntryPanel.getBoundsOfSQLToBeExecuted() BaseSQLEntryPanel.moveCaretToPreviousSQLBegin() They rely on the line break being a single char. Also I suppose some of our code generation (scripting) functions do the same. At least I'm pretty sure if \r\n would be preserved they could produce a mixture of \n and \r\n.
WITHOUT_CLASSIFICATION	I thought this prevented GC. It doesn't But if two Sessions are open and one is closed the one left open looses key bindings. For example the Arrow navigation keys. getKeymap().removeBindings();
WITHOUT_CLASSIFICATION	The SQLSettingsInitializer added above holds a reference to the SyntaxPreferences of the current Session which itself holds a reference to the Session. We remove the SQLSettingsInitializer to give the Session the chance to get Garbage Collected.
WITHOUT_CLASSIFICATION	Internal states inside white space inside line comment inside block comment ... inside string constant inside string constant after backslash inside char constant inside char constant after backslash inside identifier slash char after '=' after '>' after '>>' after '>>>' after '<' after '<<' after '+' after '-' after '' after '' after '|' after '%' after '&' after '^' after '!' after '0' integer number octal number double number double number hex number after '.'
WITHOUT_CLASSIFICATION	With an hanging SessionListener a Session nvere gets Garbage Collected.
WITHOUT_CLASSIFICATION	Example: ALTER TABLE kvpos ADD CONSTRAINT kv_kvpos FOREIGN KEY (kvid) kv(kvid) -------------------------------------------------------------^ ("References" expected) kv will not be marked with the condition above, because errInf.endPos <= absolutePosition + len is never true.
WITHOUT_CLASSIFICATION	public static final String duplicateLineAction = "duplicate-line-action";
WITHOUT_CLASSIFICATION	At this stage there's no more text in the scanned buffer, but this buffer is not the last so the scan will continue on another buffer. The scanner tries to minimize the amount of characters that will be prescanned in the next buffer by returning the token where possible.
WITHOUT_CLASSIFICATION	protected Action[] createActions() { Action[] javaActions = new Action[] { new NetbeansDuplicateLineAction(), }; return TextAction.augmentList(super.createActions(), javaActions); }
WITHOUT_CLASSIFICATION	/ This formula can be found in the API Doc for methode relocate() of class org.netbeans.editor.Syntax. See the description of the last parameter 'stopPosition'. relocate() is always called before the parseTocken() method of this class.
WITHOUT_CLASSIFICATION	nothing found
WITHOUT_CLASSIFICATION	GridLayout makes equal cells
WITHOUT_CLASSIFICATION	ISession[] activeSessions = _plugin.getApplication().getSessionManager().getActiveSessions();
WITHOUT_CLASSIFICATION	Data type keyword numeric-ids
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	create the dialog with given content
WITHOUT_CLASSIFICATION	redirect the Esc key to Cancel button
WITHOUT_CLASSIFICATION	Add the buttons to it
WITHOUT_CLASSIFICATION	this didn't work final int pos = getCaretPosition(); final Document doc = _textArea.getStyledDocument(); final Element docElem = doc.getDefaultRootElement(); final Element lineElem = docElem.getElement(getCaretLineNumber()); return lineElem.getElementIndex(pos);
WITHOUT_CLASSIFICATION	add listener to buttons
WITHOUT_CLASSIFICATION	listen on windowClosing and redirect it to Cancel button
WITHOUT_CLASSIFICATION	register the default button, if available
WITHOUT_CLASSIFICATION	Void type keyword numeric-id
WITHOUT_CLASSIFICATION	register the cancel button helpers, if available
WITHOUT_CLASSIFICATION	See SQLSettingsInitializer to find out how fonts are handled in the Netbeans editor. _textArea.setFont(font);
WITHOUT_CLASSIFICATION	Token category-ids
WITHOUT_CLASSIFICATION	Other keywords numeric-ids
WITHOUT_CLASSIFICATION	Numeric-ids for token-ids
WITHOUT_CLASSIFICATION	Operator numeric-ids = < > << >> >>> + - / & | ^ % ! ~ == <= >= <<= >>= >>>= += -= = /= &= |= ^= %= != . , : ; ? ( ) [ ] { } ++ -- && ||
WITHOUT_CLASSIFICATION	Incomplete tokens
WITHOUT_CLASSIFICATION	JDK1.5 vararg's "..."
WITHOUT_CLASSIFICATION	Token-categories
WITHOUT_CLASSIFICATION	Token-ids
WITHOUT_CLASSIFICATION	Operators
WITHOUT_CLASSIFICATION	Data types
WITHOUT_CLASSIFICATION	Void type
WITHOUT_CLASSIFICATION	Rest of the keywords
WITHOUT_CLASSIFICATION	JDK1.5 vararg's "..."
WITHOUT_CLASSIFICATION	Incomplete and error token-ids
WITHOUT_CLASSIFICATION	Context instance declaration
WITHOUT_CLASSIFICATION	case SQLTokenContext.ANNOTATION_ID: JDK 1.5 annotations return new Coloring(null, new Color(0, 111, 0), null);
WITHOUT_CLASSIFICATION	printing set
WITHOUT_CLASSIFICATION	print fore color will be gray
WITHOUT_CLASSIFICATION	We do abrevs ourselfs in the DocumentListener in NetbeansSQLEntryPanel. We don't use the Netbeans implementation mainly because it is case sensitive. If we come across a performance problem one day we can still try to use this.
WITHOUT_CLASSIFICATION	Hashtable autoCorrects = plugin.getAutoCorrectProviderImpl().getAutoCorrects(); javaAbbrevMap.putAll(autoCorrects);
WITHOUT_CLASSIFICATION	Start the thread that does the coloring
WITHOUT_CLASSIFICATION	Set up the hash table that contains the styles.
WITHOUT_CLASSIFICATION	create the new document.
WITHOUT_CLASSIFICATION	Put the initial text into the text pane and set it's initial coloring style.
WITHOUT_CLASSIFICATION	This stops the text control from line wrapping.
WITHOUT_CLASSIFICATION	Color.maroon
WITHOUT_CLASSIFICATION	Color.maroon
WITHOUT_CLASSIFICATION	if we just finish, we can't go to sleep until we ensure there is nothing else for us to do. use try again to keep track of this.
WITHOUT_CLASSIFICATION	forever
WITHOUT_CLASSIFICATION	Only if the text did really changed (null != re.change) Intervals must be adjusted. If the text did not change there is nothing to adjust.
WITHOUT_CLASSIFICATION	we are playing some games with the lexer for efficiency. we could just create a new lexer each time here, but instead, we will just reset it so that it thinks it is starting at the beginning of the document but reporting a funny start colorStartPos. Reseting the lexer causes the close() method on the reader to be called but because the close() method has no effect on the DocumentReader, we can do this.
WITHOUT_CLASSIFICATION	After the lexer has been set up, scroll the reader so that it is in the correct spot as well.
WITHOUT_CLASSIFICATION	this is the actual command that colors the stuff. Color stuff with the description of the style matched to the hash table that has been set up ahead of time.
WITHOUT_CLASSIFICATION	record the colorStartPos of the last bit of text that we colored
WITHOUT_CLASSIFICATION	The Interval is involved even if pos lied one point before or after the interval. This way for example we get -- Select ... out of comment coloring when the first "-" is removed.
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	The Ostermiller SQLLexer crashes with an ArrayIndexOutOfBoundsException if the char is greater then 255. So we prevent the char from being greater. This is surely not a proper Unicode treatment but it doesn't seem to do no harm and it keeps the SQLLexer working.
WITHOUT_CLASSIFICATION	we will highlight tokens until we reach a good stopping place. the first obvious stopping place is the end of the document. the lexer will return null at the end of the document and wee need to stop there.
WITHOUT_CLASSIFICATION	IObjectTreeAPI api = m_session.getObjectTreeAPI(m_plugin);
WITHOUT_CLASSIFICATION	since we did something, we should check that there is nothing else to do before going back to sleep.
WITHOUT_CLASSIFICATION	TODO: columns, tables
WITHOUT_CLASSIFICATION	Though in API-Doc they say setCharacterAttributes() is thread save we received observed java.lang.Errors from Swing as well as dead locks. That's why we do changes synchron now.
WITHOUT_CLASSIFICATION	IObjectTreeAPI api = m_session.getObjectTreeAPI(m_plugin);
WITHOUT_CLASSIFICATION	synchronized (doclock) {
WITHOUT_CLASSIFICATION	synchronized (doclock) {
WITHOUT_CLASSIFICATION	TODO:setFont(style.createStyledFont(getFont()));
WITHOUT_CLASSIFICATION	m_session.getSQLPanelAPI(m_plugin).addToSQLEntryAreaMenu(actSql);
WITHOUT_CLASSIFICATION	_session.getSQLPanelAPI(_plugin)
WITHOUT_CLASSIFICATION	IObjectTreeAPI api = session.getObjectTreeAPI(this);
WITHOUT_CLASSIFICATION	targetType == TARGET_TYPE_SQL
WITHOUT_CLASSIFICATION	Dialog is shown only when it is written to.
WITHOUT_CLASSIFICATION	String sql = m_session.getSQLPanelAPI(m_plugin).getSQLScriptToBeExecuted();
WITHOUT_CLASSIFICATION	ScriptEnvironment env = new ScriptEnvironment(m_session.getSQLPanelAPI(m_plugin), ownerFrame);
WITHOUT_CLASSIFICATION	String catalog, String schema, String simpleName, String tableType, String remarks,
WITHOUT_CLASSIFICATION	/ Setting the model initializes columns. We want to initialize the columns ourselves below.
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	TABLENAME
WITHOUT_CLASSIFICATION	create the threads
WITHOUT_CLASSIFICATION	start the threads
WITHOUT_CLASSIFICATION	join with the threads
WITHOUT_CLASSIFICATION	The following gives java.sql.SQLException: Conversion to character stream failed
WITHOUT_CLASSIFICATION	"Other" types are treated as Strings internally in SQuirreL.
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	String catalog, String schema, String simpleName
WITHOUT_CLASSIFICATION	utilUnderTest = ;
WITHOUT_CLASSIFICATION	utilUnderTest = null;
WITHOUT_CLASSIFICATION	String path = "/downloads/";
WITHOUT_CLASSIFICATION	UpdateUtil util = new UpdateUtilImpl();
WITHOUT_CLASSIFICATION	String path = "/release/snapshot/";
WITHOUT_CLASSIFICATION	two columns to represent a Primary key in the pktest table
WITHOUT_CLASSIFICATION	this is the constraint that is dropped in drop constraint test
WITHOUT_CLASSIFICATION	this is the column on which the constraint to be dropped is defined
WITHOUT_CLASSIFICATION	Mocks for generic dialect test
WITHOUT_CLASSIFICATION	private DatabaseMetaData mockGenericDialectDBMetaData = mockHelper.createMock(DatabaseMetaData.class);
WITHOUT_CLASSIFICATION	For some reason, Frontbase doesn't find tables that have been previously created.
WITHOUT_CLASSIFICATION	quiet
WITHOUT_CLASSIFICATION	views will depend on tables, so drop them first
WITHOUT_CLASSIFICATION	Now sequences should go.
WITHOUT_CLASSIFICATION	alterations fail for some reason unless you do this...
WITHOUT_CLASSIFICATION	MySQL spatial index requires a not null column
WITHOUT_CLASSIFICATION	DB2 requires primary keys to also be declared "not null"
WITHOUT_CLASSIFICATION	DB2 cannot alter a column's null attribute directly (only through constraints). Not only that, but it's apparently not a valid thing to do to create a primary key using a column that has been made "not null" via a check constraint. Therefore, the only columns that qualify to be made PKs are those that were declared not null at the time of table creation.
WITHOUT_CLASSIFICATION	Test whether or not the dialect correctly converts nullable columns to not-null before applying the primary key - if necessary
WITHOUT_CLASSIFICATION	Don't care if it's not there
WITHOUT_CLASSIFICATION	This is what we expect
WITHOUT_CLASSIFICATION	convert nullint into a varchar(100)
WITHOUT_CLASSIFICATION	This is what we expect.
WITHOUT_CLASSIFICATION	Couldn't locate the table - just try to fake it.
WITHOUT_CLASSIFICATION	This is expected
WITHOUT_CLASSIFICATION	This is expected
WITHOUT_CLASSIFICATION	This is expected
WITHOUT_CLASSIFICATION	This is expected
WITHOUT_CLASSIFICATION	Now that we have run the view definition query, and retrieved the SQL that is the body of the view (that is, it's query part minus the "CREATE VIEW AS" prefix), we can drop the view.
WITHOUT_CLASSIFICATION	create a table with a default value to use as the model
WITHOUT_CLASSIFICATION	Test the create statement
WITHOUT_CLASSIFICATION	Build the sql statement(s) to create the table
WITHOUT_CLASSIFICATION	System.err.println("("+extractor.getClass().getSimpleName()+"):The SQL generated by " + referenceDialect.getDisplayName() + " works !!!");
WITHOUT_CLASSIFICATION	drop the table so that we can test our create statement
WITHOUT_CLASSIFICATION	create a test view that we will get view def for then drop and re-create
WITHOUT_CLASSIFICATION	Postgres has some special indexes that only work on certain columns. Skip tests for those
WITHOUT_CLASSIFICATION	viewDefSql is the SQL that can be used to query the data dictionary for the body of a view. This should exclude the "CREATE VIEW <viewname> AS" prefix and just return the query.
WITHOUT_CLASSIFICATION	create a unique index on myuniquechar
WITHOUT_CLASSIFICATION	now drop the first
WITHOUT_CLASSIFICATION	create a non-unique index on mychar
WITHOUT_CLASSIFICATION	now drop the second.
WITHOUT_CLASSIFICATION	create it.
WITHOUT_CLASSIFICATION	create it.
WITHOUT_CLASSIFICATION	Axion cannot handle ts escape sequence - so skip this test for now.
WITHOUT_CLASSIFICATION	Progress throws an exception if you try to drop the first index that was created
WITHOUT_CLASSIFICATION	Verify insert worked only if the dialect supports sub-second timestamp values
WITHOUT_CLASSIFICATION	Unused methods - this is not a real dialog, just a fake.
WITHOUT_CLASSIFICATION	Utility methods
WITHOUT_CLASSIFICATION	MS SQLServer yields "Conversion failed when converting datetime from character string" for {ts '2008-02-21 21:26:23.966123'}
WITHOUT_CLASSIFICATION	System.err.println("Attempt to use dialect sql from " + referenceDialect.getDisplayName() + " failed: " + e2.getMessage());
WITHOUT_CLASSIFICATION	catalog schema tableName columnName dataType typeName columnSize decimalDigits radix isNullAllowed remarks defaultValue octet length ordinal position isNullable
WITHOUT_CLASSIFICATION	tableName, columns, pkColumns, prefs, qualifier
WITHOUT_CLASSIFICATION	mocks
WITHOUT_CLASSIFICATION	Helpers
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#initialize()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getExternalService()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getGlobalPreferencePanels()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getHelpFileName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getLicenceFileName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getNewSessionPropertiesPanels()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getPluginAppSettingsFolder()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getPluginUserSettingsFolder()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getWebSite()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#unload()
WITHOUT_CLASSIFICATION	System.err.println("MockApplication.getMainFrame: stub not yet implemented");
WITHOUT_CLASSIFICATION	MockConnection2 mockCon = getMockConnection();
WITHOUT_CLASSIFICATION	sessionPanel = new SessionPanel(this);
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getPluginUserSettingsFolder()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#nullsAreSortedHigh()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getWebSite()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#load(net.sourceforge.squirrel_sql.client.IApplication)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#unload()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getInternalName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getDescriptiveName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getAuthor()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getVersion()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISession#getSchemaInfo()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISession#getMetaData()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo#getCatalogName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo#getDatabaseObjectType()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo#getQualifiedName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo#getSchemaName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo#getSimpleName()
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	Need to adjust param which is 1-based(JDBC) to a 0-based number for array access
WITHOUT_CLASSIFICATION	fail("Not yet implemented");
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	mockSession
WITHOUT_CLASSIFICATION	mockSession
WITHOUT_CLASSIFICATION	mockPreferences
WITHOUT_CLASSIFICATION	mockSessionProperties
WITHOUT_CLASSIFICATION	mockFontInfo
WITHOUT_CLASSIFICATION	mockApplication
WITHOUT_CLASSIFICATION	mockSquirrelResources
WITHOUT_CLASSIFICATION	Null tests
WITHOUT_CLASSIFICATION	Other tests
WITHOUT_CLASSIFICATION	Mock objects
WITHOUT_CLASSIFICATION	Simulate the user changing the session properties
WITHOUT_CLASSIFICATION	QueryTokenizer tests
WITHOUT_CLASSIFICATION	This should be a default tokenizer which uses ";" as statement sep
WITHOUT_CLASSIFICATION	This should override the default tokenizer
WITHOUT_CLASSIFICATION	Check to ensure that the tokenizer received is not the default one that should have been overridden.
WITHOUT_CLASSIFICATION	Simulate the user switching the statement separator for the session
WITHOUT_CLASSIFICATION	Test to ensure that we allow sessions that are ending to be GC'd.
WITHOUT_CLASSIFICATION	Mock Objects
WITHOUT_CLASSIFICATION	We don't stub return because we want to verify that the object filter was actually used.
WITHOUT_CLASSIFICATION	Should at least bind the tablename to a bind var in the SQL
WITHOUT_CLASSIFICATION	common mocks
WITHOUT_CLASSIFICATION	Test Data
WITHOUT_CLASSIFICATION	mockSessionManager
WITHOUT_CLASSIFICATION	mockSQLConnection
WITHOUT_CLASSIFICATION	mockSQLMetaData
WITHOUT_CLASSIFICATION	mockSchemaInfo
WITHOUT_CLASSIFICATION	mockThreadPool
WITHOUT_CLASSIFICATION	mockConnection
WITHOUT_CLASSIFICATION	mockSQLDriver
WITHOUT_CLASSIFICATION	mockDatabaseObjectInfo
WITHOUT_CLASSIFICATION	Helper methods
WITHOUT_CLASSIFICATION	Data
WITHOUT_CLASSIFICATION	Test to see that table(100) matches table(0). It should since only the row count is different.
WITHOUT_CLASSIFICATION	Test to see if we can fool matchKeyPrefix into assuming that there will be '(' on the end of the path since row count is enabled. Yet we'll send in a string that doesn't have this characteristic.
WITHOUT_CLASSIFICATION	Pick a tableInfo to remove and replace
WITHOUT_CLASSIFICATION	remove table with name table10
WITHOUT_CLASSIFICATION	Add it back
WITHOUT_CLASSIFICATION	Mock objects
WITHOUT_CLASSIFICATION	setup expectations
WITHOUT_CLASSIFICATION	setup expectations
WITHOUT_CLASSIFICATION	Mock Objects
WITHOUT_CLASSIFICATION	create mocks to be injected
WITHOUT_CLASSIFICATION	inject mocks
WITHOUT_CLASSIFICATION	common expectations
WITHOUT_CLASSIFICATION	downloads directory
WITHOUT_CLASSIFICATION	downloads/plugin directory
WITHOUT_CLASSIFICATION	squirrel installed lib dir
WITHOUT_CLASSIFICATION	downloads/core directory
WITHOUT_CLASSIFICATION	setup source mock file
WITHOUT_CLASSIFICATION	setup dest mock file
WITHOUT_CLASSIFICATION	Cannot mock URLs, they are final and so they cannot be subclassed.
WITHOUT_CLASSIFICATION	Class to test
WITHOUT_CLASSIFICATION	Common mock objects
WITHOUT_CLASSIFICATION	Common mock objects
WITHOUT_CLASSIFICATION	This is acceptable
WITHOUT_CLASSIFICATION	This is acceptable
WITHOUT_CLASSIFICATION	ArtifactXmlBean
WITHOUT_CLASSIFICATION	Data
WITHOUT_CLASSIFICATION	For the serialization test in superclass - cannot use mockHelper because the replay needs to be done here.
WITHOUT_CLASSIFICATION	original object another object that has the same values as the original another object with different values
WITHOUT_CLASSIFICATION	a subclass of Foo with the same values as the original
WITHOUT_CLASSIFICATION	different only by type - same name
WITHOUT_CLASSIFICATION	Test Constants
WITHOUT_CLASSIFICATION	expect getFile for updated files that will be removed
WITHOUT_CLASSIFICATION	expect getFile for updated files that were downloaded
WITHOUT_CLASSIFICATION	expected fileOperationInfos for files that will be installed
WITHOUT_CLASSIFICATION	expectations that are specific to this test
WITHOUT_CLASSIFICATION	Failure Tests
WITHOUT_CLASSIFICATION	Helper Methods
WITHOUT_CLASSIFICATION	Check reference equality to be sure that it isn't the exact same object.
WITHOUT_CLASSIFICATION	private TableColumnsDataSet iut = null;
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	Helper methods
WITHOUT_CLASSIFICATION	Helper methods
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	Helpers
WITHOUT_CLASSIFICATION	Data
WITHOUT_CLASSIFICATION	Mock Objects
WITHOUT_CLASSIFICATION	a subclass of Foo with the same values as the original
WITHOUT_CLASSIFICATION	"Unknown" types are treated as Strings internally in SQuirreL.
WITHOUT_CLASSIFICATION	not necessarily the case - I'm just curious if we have any components that need to be re-read
WITHOUT_CLASSIFICATION	1757076 (DATE column seen as TIMESTAMP, update in editable mode fails) We should always return false for this, when the user hasn't specified
WITHOUT_CLASSIFICATION	Cannot pass byte array to Class.forName
WITHOUT_CLASSIFICATION	Not a real database, but no driver should match this.
WITHOUT_CLASSIFICATION	Some dialects support adding columns, but the logic has not been added yet to the dialect. If that is the case the message is "Not yet implemented" - fail for all other messages.
WITHOUT_CLASSIFICATION	Tests
WITHOUT_CLASSIFICATION	Here the max line length == original line size - so it doesn't get trimmed of white space.
WITHOUT_CLASSIFICATION	Data
WITHOUT_CLASSIFICATION	The first time that schemas are asked for, return just one
WITHOUT_CLASSIFICATION	The second time that schemas are asked for, return two
WITHOUT_CLASSIFICATION	Check to be sure we get only one schema
WITHOUT_CLASSIFICATION	Check to be sure we get only one schema
WITHOUT_CLASSIFICATION	Now, check to be sure we get both schemas.
WITHOUT_CLASSIFICATION	The first time that catalogs are asked for, return just one
WITHOUT_CLASSIFICATION	The second time that catalogs are asked for, return two
WITHOUT_CLASSIFICATION	Now, check to be sure we get both catalogs.
WITHOUT_CLASSIFICATION	Build the table types returned by PostgreSQL
WITHOUT_CLASSIFICATION	scope
WITHOUT_CLASSIFICATION	typeName
WITHOUT_CLASSIFICATION	int precision
WITHOUT_CLASSIFICATION	short scale
WITHOUT_CLASSIFICATION	short pseudocolumn
WITHOUT_CLASSIFICATION	Setup values.length columns
WITHOUT_CLASSIFICATION	Setup one row
WITHOUT_CLASSIFICATION	Setup one column in multiple rows
WITHOUT_CLASSIFICATION	Mocks
WITHOUT_CLASSIFICATION	Test case for 1742033 (Skipping quoting escape in table dropping)
WITHOUT_CLASSIFICATION	original object
WITHOUT_CLASSIFICATION	another object that has the same values as the original
WITHOUT_CLASSIFICATION	another object with different values
WITHOUT_CLASSIFICATION	Don't forget to set this to the number of statements in result
WITHOUT_CLASSIFICATION	Class under test
WITHOUT_CLASSIFICATION	Making sure that the directory does not exist.
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	column name sqlType
WITHOUT_CLASSIFICATION	Sybase 12.5 doesn't support quotation marks for identifiers, yet reports " as the identifier quote string - go figure!
WITHOUT_CLASSIFICATION	Sybase 15 fully supports quotation marks for identifiers, and reports " as the identifier quote string - yeah, they got it right!
WITHOUT_CLASSIFICATION	Since catalog, schema and table are all identifiers, they all need to be quoted.
WITHOUT_CLASSIFICATION	construct mock objects
WITHOUT_CLASSIFICATION	local expectations
WITHOUT_CLASSIFICATION	execute test
WITHOUT_CLASSIFICATION	execute test
WITHOUT_CLASSIFICATION	execute test
WITHOUT_CLASSIFICATION	Constructor Tests
WITHOUT_CLASSIFICATION	Method Tests
WITHOUT_CLASSIFICATION	fail ??
WITHOUT_CLASSIFICATION	fail ??
WITHOUT_CLASSIFICATION	HELPERS
WITHOUT_CLASSIFICATION	construct the name of executable file
WITHOUT_CLASSIFICATION	add classpath string
WITHOUT_CLASSIFICATION	parse hy.test.vmargs if was given
WITHOUT_CLASSIFICATION	add custom args given as parameter
WITHOUT_CLASSIFICATION	execute java process
WITHOUT_CLASSIFICATION	wait for errThread to start
WITHOUT_CLASSIFICATION	" a read "
WITHOUT_CLASSIFICATION	This should just produce an error message.
WITHOUT_CLASSIFICATION	Delete all old temporary files
WITHOUT_CLASSIFICATION	Regression test for HARMONY-382
WITHOUT_CLASSIFICATION	Regression test for HARMONY-21
WITHOUT_CLASSIFICATION	Test data used in a few places below
WITHOUT_CLASSIFICATION	Check filename is preserved correctly
WITHOUT_CLASSIFICATION	Check null argument is handled
WITHOUT_CLASSIFICATION	Expected.
WITHOUT_CLASSIFICATION	Regression for HARMONY-46
WITHOUT_CLASSIFICATION	a valid File URI
WITHOUT_CLASSIFICATION	canRead only returns if the file exists so cannot be fully tested.
WITHOUT_CLASSIFICATION	canWrite only returns if the file exists so cannot be fully tested.
WITHOUT_CLASSIFICATION	Test for trying to create a file in a directory that does not exist.
WITHOUT_CLASSIFICATION	Try to create a file in a directory that does not exist
WITHOUT_CLASSIFICATION	Try to create a file in a directory that does not exist
WITHOUT_CLASSIFICATION	Test for creating a file that already exists.
WITHOUT_CLASSIFICATION	Test create an illegal file
WITHOUT_CLASSIFICATION	expected;
WITHOUT_CLASSIFICATION	expected;
WITHOUT_CLASSIFICATION	Error protection against using a suffix without a "."?
WITHOUT_CLASSIFICATION	Test to see if correct suffix was used to create the tempfile.
WITHOUT_CLASSIFICATION	Testing two files, one with suffix ".tmp" and one with null
WITHOUT_CLASSIFICATION	Tests for creating a tempfile with a filename shorter than 3 characters.
WITHOUT_CLASSIFICATION	Test to make sure that the tempfile was saved in the correct location and with the correct prefix/suffix.
WITHOUT_CLASSIFICATION	Test for creating a tempfile in a directory that does not exist.
WITHOUT_CLASSIFICATION	Set dir to a non-existent directory inside the temporary directory
WITHOUT_CLASSIFICATION	If the directory exists, add one to the directory number (making it a new directory name.)
WITHOUT_CLASSIFICATION	create the file
WITHOUT_CLASSIFICATION	Test for when long directory/file names in Windows
WITHOUT_CLASSIFICATION	If the "short file name" doesn't exist, then assume that the 8.3 file name compatibility is disabled.
WITHOUT_CLASSIFICATION	Should work for Unix/Windows.
WITHOUT_CLASSIFICATION	Finding a non-existent directory for tests 3 and 4 This is necessary because getCanonicalPath is case sensitive and could cause a failure in the test if the directory exists but with different case letters (e.g "Temp" and "temp")
WITHOUT_CLASSIFICATION	Test for long file names on Windows
WITHOUT_CLASSIFICATION	Regression for HARMONY-444
WITHOUT_CLASSIFICATION	Regression for HARMONY-829
WITHOUT_CLASSIFICATION	Regression for HARMONY-3869
WITHOUT_CLASSIFICATION	Regression for HARMONY-53
WITHOUT_CLASSIFICATION	One or the other should be absolute on Windows or CE
WITHOUT_CLASSIFICATION	On Unix hidden files are marked with a "." at the beginning of the file name.
WITHOUT_CLASSIFICATION	For windows, the file is being set hidden by the attrib command.
WITHOUT_CLASSIFICATION	Finding a non-existent directory to create.
WITHOUT_CLASSIFICATION	Finding a non-existent directory to create.
WITHOUT_CLASSIFICATION	Test for attempting to call listFiles on a non-existent directory.
WITHOUT_CLASSIFICATION	Test to make sure that listFiles can read hidden files.
WITHOUT_CLASSIFICATION	Creating a filter that catches directories.
WITHOUT_CLASSIFICATION	testBitColType(sourceName, destName);
WITHOUT_CLASSIFICATION	Old test left behind "garbage files" so this time it creates a directory that is guaranteed not to already exist (and deletes it afterward.)
WITHOUT_CLASSIFICATION	Finding a non-existent directory to create.
WITHOUT_CLASSIFICATION	Checking to make sure the correct files were are listed in the array.
WITHOUT_CLASSIFICATION	Checking to make sure the correct files were are listed in the array.
WITHOUT_CLASSIFICATION	Test to make sure that only the 3 files that were created are listed.
WITHOUT_CLASSIFICATION	Checking to make sure the correct files were are listed in the array.
WITHOUT_CLASSIFICATION	If the directory exists, add one to the directory number (making it a new directory name.)
WITHOUT_CLASSIFICATION	If the directory exists, add one to the directory number (making it a new directory name.)
WITHOUT_CLASSIFICATION	Creating a filter that catches files.
WITHOUT_CLASSIFICATION	Test to see if the correct number of directories are returned.
WITHOUT_CLASSIFICATION	Test to see if the directory was saved with the correct name.
WITHOUT_CLASSIFICATION	Test to see if the correct number of files are returned.
WITHOUT_CLASSIFICATION	Creating a filter that catches ".tst" files.
WITHOUT_CLASSIFICATION	Creating a filter that catches ".tmp" files.
WITHOUT_CLASSIFICATION	If the suffix is ".tmp" then send it to the array
WITHOUT_CLASSIFICATION	Tests to see if the correct number of files were returned.
WITHOUT_CLASSIFICATION	24 chars
WITHOUT_CLASSIFICATION	Test make a long path
WITHOUT_CLASSIFICATION	Test make many paths
WITHOUT_CLASSIFICATION	Regression test for HARMONY-3656
WITHOUT_CLASSIFICATION	in case it already exists
WITHOUT_CLASSIFICATION	in case it already exists
WITHOUT_CLASSIFICATION	Subtracting 100 000 milliseconds from the orgTime of File f1
WITHOUT_CLASSIFICATION	Subtracting 10 000 000 milliseconds from the orgTime of File f1
WITHOUT_CLASSIFICATION	Adding 100 000 milliseconds to the orgTime of File f1
WITHOUT_CLASSIFICATION	Adding 10 000 000 milliseconds from the orgTime of File f1
WITHOUT_CLASSIFICATION	Trying to set time to an exact number
WITHOUT_CLASSIFICATION	Trying to set time to a large exact number
WITHOUT_CLASSIFICATION	Trying to set time to a negative number
WITHOUT_CLASSIFICATION	Attempt to write to a file that is setReadOnly.
WITHOUT_CLASSIFICATION	Write to a file.
WITHOUT_CLASSIFICATION	Similarly, trying to delete a read-only directory should succeed
WITHOUT_CLASSIFICATION	Need a directory that exists
WITHOUT_CLASSIFICATION	Test for toURI when the file is a directory.
WITHOUT_CLASSIFICATION	Test for toURI with a file name with illegal chars.
WITHOUT_CLASSIFICATION	Test for toURL when the file is a directory.
WITHOUT_CLASSIFICATION	Test for toURL with a file.
WITHOUT_CLASSIFICATION	Regression test for HARMONY-4493
WITHOUT_CLASSIFICATION	No invalid columns in this TableModel implementation
WITHOUT_CLASSIFICATION	Don't care to see tons of debug from ColTypeMapper
WITHOUT_CLASSIFICATION	Helper methods
WITHOUT_CLASSIFICATION	Mock objects
WITHOUT_CLASSIFICATION	Mock Objects
WITHOUT_CLASSIFICATION	Assert is flawed because canWrite does not work. assertTrue("File f1 Is Set To ReadOnly." , f1.canWrite());
WITHOUT_CLASSIFICATION	Assert is flawed because canWrite does not work. assertTrue("File f1 Is Not Set To ReadOnly." , !f1.canWrite());
WITHOUT_CLASSIFICATION	Assert is flawed because canWrite does not work. assertTrue("File f2 Is Set To ReadOnly." , f2.canWrite());
WITHOUT_CLASSIFICATION	Assert is flawed because canWrite does not work. assertTrue("File f2 Is Not Set To ReadOnly." , !f2.canWrite());
WITHOUT_CLASSIFICATION	Attempt to write to a file that has previously been written to. and is now set to read only.
WITHOUT_CLASSIFICATION	Regression test for HARMONY-3207 current directory
WITHOUT_CLASSIFICATION	Regression test for HARMONY-3207 current directory
WITHOUT_CLASSIFICATION	testBooleanColType(sourceName, destName); testCharColType(sourceName, destName);
WITHOUT_CLASSIFICATION	testDecimalColType(sourceName, destName); testDoubleColType(sourceName, destName); testFloatColType(sourceName, destName);
WITHOUT_CLASSIFICATION	This is for brute force detection of columns whose column size is 0
WITHOUT_CLASSIFICATION	This is for brute force detection of BLOB/CLOB lengths if necessary
WITHOUT_CLASSIFICATION	This is for brute force detection of BLOB/CLOB lengths if necessary
WITHOUT_CLASSIFICATION	Test for NPE in DBUtil.getForeignKeySQL when the TableInfo returns null for getImportedKeys
WITHOUT_CLASSIFICATION	case shouldn't be changed in this test because the context is the source database.
WITHOUT_CLASSIFICATION	Instance under test
WITHOUT_CLASSIFICATION	init class under test
WITHOUT_CLASSIFICATION	init mocks
WITHOUT_CLASSIFICATION	setColumns Error conditions
WITHOUT_CLASSIFICATION	Sunny day
WITHOUT_CLASSIFICATION	Create a test bean to clone
WITHOUT_CLASSIFICATION	Create a test bean to clone
WITHOUT_CLASSIFICATION	Clone the test bean and change every bean property
WITHOUT_CLASSIFICATION	Clone the test bean and change every bean property
WITHOUT_CLASSIFICATION	verify that changing the clone didn't affect the original
WITHOUT_CLASSIFICATION	verify that changing the clone didn't affect the original
WITHOUT_CLASSIFICATION	Call class under test
WITHOUT_CLASSIFICATION	Common mocks
WITHOUT_CLASSIFICATION	we cannot mock DTProperties because it is designed to be accessed statically. :( Simulate missing property.
WITHOUT_CLASSIFICATION	Accessible query
WITHOUT_CLASSIFICATION	SGA query
WITHOUT_CLASSIFICATION	expect(session.getMessageHandler()).andReturn(messageHandler).anyTimes();
WITHOUT_CLASSIFICATION	an interface
WITHOUT_CLASSIFICATION	a class
WITHOUT_CLASSIFICATION	i18n[Application.error.loadcellselections=Unable to load Cell Import/Export selections from persistant storage.]
WITHOUT_CLASSIFICATION	_mainFrame.setVisible(true); _mainFrame.toFront(); Required on Linux
WITHOUT_CLASSIFICATION	i18n[Application.error.loaddatatypeprops=Unable to load DataType Properties selections from persistant storage.]
WITHOUT_CLASSIFICATION	If we don't invokeLater here no Short-Cut-Key is sent to the internal frame seen under java version "1.4.1_01" and Linux
WITHOUT_CLASSIFICATION	set the singleton instance of the Saver class to be the instance just created by the XMLBeanReader
WITHOUT_CLASSIFICATION	For all windows (other than the first one opened) for a session add a number on the end of the title to differentiate them in menus etc.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	final Map map = getAllEditWhereColsSheets(tree); return (EditWhereColsSheet)map.get(objectInfo.getQualifiedName());
WITHOUT_CLASSIFICATION	Has to be done directly on the main frame because of racing condition at start up. _aliasesListWindow.nowVisible(true);
WITHOUT_CLASSIFICATION	Has to be done directly on the main frame because of racing condition at start up. _aliasesListWindow.nowVisible(false);
WITHOUT_CLASSIFICATION	If the active window isn't for the currently selected session then select the main window for the session.
WITHOUT_CLASSIFICATION	We are in the closing event of the Session main window. We don't want to send this event again therefore we pass withEvents = false.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	add(_okBtn); add(_closeBtn);
WITHOUT_CLASSIFICATION	Ok button at bottom of dialog. JPanel btnsPnl = new JPanel(); JButton okBtn = new JButton("OK");
WITHOUT_CLASSIFICATION	Get list of all plugin developers names. Allow for multiple developers for a plugin in the form "John Smith, James Brown".
WITHOUT_CLASSIFICATION	_thread = new Thread(new MemoryTimer()); _thread.start();
WITHOUT_CLASSIFICATION	typeName columnSize decimalDigits radix isNullAllowable
WITHOUT_CLASSIFICATION	defaultValue octetLength ordinalPosition isNullable
WITHOUT_CLASSIFICATION	EasyMock Class extension helpers. Since classextension and interface EasyMock methods cannot be used on the same mocks, this provides convenience to not have to specify the package name for classextension mocks.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	parent.addInternalFrame(viewer, true, null); GUIUtils.centerWithinDesktop(viewer);
WITHOUT_CLASSIFICATION	Done after the set of the selected item above so that we control when the initial build is done. We want to make sure that under all versions of the JDK that the window is shown before the (possibly lengthy) refresh starts.
WITHOUT_CLASSIFICATION	private static final class CellRenderer extends BasicComboBoxRenderer { public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) { setText(((TableColumnInfo)value).getColumnName()); return this; } }
WITHOUT_CLASSIFICATION	I18n[DriverPropertiesController.invalidUrl=According to the driver "{0}", the url "{1}" is invalid.]
WITHOUT_CLASSIFICATION	If no columns are selected, and we're not dropping the PK, then there is nothing to do.
WITHOUT_CLASSIFICATION	alias.setUseDriverProperties(_useDriverPropsChk.isSelected()); alias.setDriverProperties(_sqlDriverProps);
WITHOUT_CLASSIFICATION	If Auto Logon is true in ConnectToAliasCommand user name/password of the Alias definiton may have changed. Here we transfere this information back into the controls.
WITHOUT_CLASSIFICATION	If this happens then this is a programming error as we said in the above call to ingore these errors.
WITHOUT_CLASSIFICATION	Scrollbars are "shown always" to stop sheet resizing when they are shown/hidden.
WITHOUT_CLASSIFICATION	Use valueof when min supported JDK is 1.4 return Boolean.valueOf(_props[row].required);
WITHOUT_CLASSIFICATION	return Boolean.class; Don't show checkbox for output only field.
WITHOUT_CLASSIFICATION	JInternalFrame[] frames = GUIUtils.getOpenNonToolWindows(getDesktopPane().getAllFrames()); _app.getActionCollection().internalFrameOpenedOrClosed(frames.length);
WITHOUT_CLASSIFICATION	_inWidgetSetVisible was introduced to allow moveToFront to be called from within setVisible. See EditWhereColsSheet or SQLFilterSheet
WITHOUT_CLASSIFICATION	Is done in dispose itself because listeners must be fired even in DO_NOTHING_ON_CLOSE mode tabHandle.fireClosed(e); /
WITHOUT_CLASSIFICATION	we can have more than one file in the string so tokenize on whitespace. Let the user know if we find multiple tokens that they cannot place drop than one file at a time
WITHOUT_CLASSIFICATION	private AliasesListInternalFrame _aliasesListWindow; private DriversListInternalFrame _driversListWindow;
WITHOUT_CLASSIFICATION	Under JDK1.4 the first item in a JComboBox is no longer automatically selected.
WITHOUT_CLASSIFICATION	Under JDK1.4 the first item in a JComboBox is no longer automatically selected.
WITHOUT_CLASSIFICATION	Done this late so that plugins have time to register expanders with the object tree prior to it being built. getSession().getObjectTreeAPI(_app.getDummyAppPlugin()).refreshTree();
WITHOUT_CLASSIFICATION	Done this late so that plugins have time to register expanders with the object tree prior to it being built.
WITHOUT_CLASSIFICATION	This seems to be necessary to get background colours correct. Without it labels added to the content pane have a dark background while those added to a JPanel in the content pane have a light background under the java look and feel. Similar effects occur for other look and feels.
WITHOUT_CLASSIFICATION	If the user checked Auto Logon but gave wrong username/password in the Alias definition. He will be asked to enter username/password again in an extra dialog. Here for convenience we transfer these data back into the Alias. Note: Don't do this when Auto Logon is false.
WITHOUT_CLASSIFICATION	if blocked that means that it doesn't help anymore Or an error dialog is shown or the connection is made and the SessionFrame is being constructed/shown.
WITHOUT_CLASSIFICATION	/ Message
WITHOUT_CLASSIFICATION	We need this in order to allow the user to see this plugin - which isn't loaded - in the plugin summary dialog, so that they can enable it.
WITHOUT_CLASSIFICATION	if the old preference file exists and is newer than the newUserPreference file, then use it for reading preferences
WITHOUT_CLASSIFICATION	private JLabel _executionLogFileNameLbl = new OutputLabel(" "); Must have at least 1 blank otherwise width gets set to zero. private JLabel _logConfigFileNameLbl = new OutputLabel(" "); Must have at least 1 blank otherwise width gets set to zero.
WITHOUT_CLASSIFICATION	We need this method to satisfy one of the Interfaces we implement, but since we have moved all operations to the DataType sub-panels which initialize their own data during creation, there is nothing for us to do here
WITHOUT_CLASSIFICATION	We need this method to satisfy one of the Interfaces we implement, but since we have moved all operations to the DataType sub-panels which initialize their own data during creation, there is nothing for us to do here
WITHOUT_CLASSIFICATION	Get an array since we dont want trouble with the sessionsList when we remove the sessions from it.
WITHOUT_CLASSIFICATION	give the ResultSetReader some time to realize that the user requested cancel and stop fetching results. This allows us to stop the query processing gracefully.
WITHOUT_CLASSIFICATION	public SQLExecutionInfo() { this(1, ""); }
WITHOUT_CLASSIFICATION	/ Error Attention: Do not use background colors here. Color blind people cannot read black writing on red background.
WITHOUT_CLASSIFICATION	/ Checks if the former message should be highlighted in a 'history' color.
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	Since 1.4 implements interfaces that became available in JDBC 3.0, let's warn the user if the driver doesn't support DatabaseMetaData methods that were added in JDBC 2.1 and JDBC 3.0 specifications.
WITHOUT_CLASSIFICATION	No tokenizer has been set by any installed plugin. Go ahead and give the default tokenizer. It is important to not cache this object so that session property changes to the current session are reflected in this default tokenizer.
WITHOUT_CLASSIFICATION	public SQLFilterClauses getSQLFilterClauses() { return _sqlFilterClauses; }
WITHOUT_CLASSIFICATION	if the user selected Editable Table in the Session Properties, then the display will be an editable table; otherwise the display is read-only
WITHOUT_CLASSIFICATION	It is possible for a table to contain only columns of types that we cannot process or do selects on, so check for that. Since this check is on the structure of the table rather than the contents, we only need to do it once (ie: it is not needed in getWarningOnProjectedUpdate)
WITHOUT_CLASSIFICATION	There should not be more than one row in the DB that matches the table, and if there is we cannot determine which one to read, so check that there are no more
WITHOUT_CLASSIFICATION	We don't care if these throw an SQLException. Just squelch them and report to the user what the outcome of the previous statements were.
WITHOUT_CLASSIFICATION	no problems found, so do not return a warning message. nothing for user to worry about
WITHOUT_CLASSIFICATION	no problems found, so do not return a warning message. nothing for user to worry about
WITHOUT_CLASSIFICATION	get WHERE clause The -1 says to ignore the last arg and use the contents of the values array for the column that we care about. However, since the data in that column has been limited, when getWhereClause calls that DataType with that value, the DataType will see that the data has been limited and therefore cannnot be used in the WHERE clause. In some cases it may be possible for the DataType to use the partial data, such as "matches <data>", but that may not be standard accross all Databases and thus may be risky.
WITHOUT_CLASSIFICATION	have the DataType object fill in the appropriate kind of value into the first (and only) variable position in the prepared stmt
WITHOUT_CLASSIFICATION	It would be nice to tell the user what happened, but if we try to put up a dialog box at this point, we run into trouble in some cases where the field continually tries to re-read after the dialog closes (because it is being re-painted).
WITHOUT_CLASSIFICATION	When we get to the last statement, if the script is large, show the user the total execution time.
WITHOUT_CLASSIFICATION	There used to be a frame.pack() here but it resized the frame to be very wide if text output was used.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	get WHERE clause for the selected row the -1 says to just use the contents of the values without any substitutions
WITHOUT_CLASSIFICATION	For tables that have a lot of columns, the user may have limited the set of columns to use in the where clause, so see if there is a table of col names
WITHOUT_CLASSIFICATION	the user has restricted the set of columns to use. If this name is NOT in the list, then skip it; otherwise we fall through and use the column in the WHERE clause
WITHOUT_CLASSIFICATION	for the column that is being changed, use the value passed in by the caller (which may be either the current value or the new replacement value)
WITHOUT_CLASSIFICATION	string used as error indicator and description of problems seen when checking for 0 or mulitple matches in DB
WITHOUT_CLASSIFICATION	for each row in table, count how many rows match where clause if not exactly one, generate message describing situation
WITHOUT_CLASSIFICATION	if the rows do not match 1-for-1 to DB, ask user if they really want to do delete
WITHOUT_CLASSIFICATION	read the DB MetaData info and fill in the value, if any Note that the ResultSet info and the colDefs should be in the same order, but we cannot guarantee that.
WITHOUT_CLASSIFICATION	if value was null, we do not need to do anything else with this column. Also assume that a value of "" is equivilent to null
WITHOUT_CLASSIFICATION	Add the list of column names we will be inserting into - be sure to skip the rowId column and any auto increment columns.
WITHOUT_CLASSIFICATION	JASON: SQLFilterClauses getSQLFilterClauses();
WITHOUT_CLASSIFICATION	Loop while we either have a ResultSet to process or rows have been updated/inserted/deleted.
WITHOUT_CLASSIFICATION	This method is called from a thread. In case listeners update Swing controls we invoke later here.
WITHOUT_CLASSIFICATION	This can happen if an impl of ISQLExecutionListener returns null from the statementExecuting API method, to indicate that the SQL shouldn't be executed.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	Can't work with ISessionAction because if a result window is on top the session in a ISessionAction is null.
WITHOUT_CLASSIFICATION	Implementataion of IDataSetUpdateableTableModel: Delegation to _dataSetUpdateableTableModel
WITHOUT_CLASSIFICATION	final JScrollPane sp = new JScrollPane(); sp.setBorder(BorderFactory.createEmptyBorder()); sp.setViewportView(_tree); sp.setPreferredSize(new Dimension(200, 200));
WITHOUT_CLASSIFICATION	There is no good way using JDBC metadata to tell if the table is a materialized view. So, we need to query the data dictionary to find that out. Get all table names whose comment indicates that they are a materialized view.
WITHOUT_CLASSIFICATION	Option to select default catalog only applies to sessions that support catalogs.
WITHOUT_CLASSIFICATION	If the user wants to select for Right mouse clicks then change the selection before popup appears
WITHOUT_CLASSIFICATION	Go through each child of the parent and see if it was previously expanded. If it was recursively call this method in order to expand the child.
WITHOUT_CLASSIFICATION	Add together the standard expanders for this node type and any individual expanders that there are for the node and process them.
WITHOUT_CLASSIFICATION	If a driver says it supports schemas/catalogs but doesn't provide schema/catalog nodes, try to get other nodes.
WITHOUT_CLASSIFICATION	If a driver says it supports schemas but doesn't provide schema nodes, try to get other nodes.
WITHOUT_CLASSIFICATION	any errors here result in an un-editable table, which should be no problem
WITHOUT_CLASSIFICATION	Dont need to close the ResultSet as DatabaseTypesDataSet will do so when its finished with it.
WITHOUT_CLASSIFICATION	Some DBMS's (EG Think SQL) throw an exception on a call to getBestRowIdentifier.
WITHOUT_CLASSIFICATION	create data structure containing contents of rows to be deleted We cannot use the getRow() method because that uses MyJTable whereas the indexes that we have are indexes in the SortableTableModel.
WITHOUT_CLASSIFICATION	for example: case 0: s = "invalid character"; break; perhaps insert application specific error messages here
WITHOUT_CLASSIFICATION	pseudocolumn query failed, so reset it. Otherwise, we'll mistake the last column for a pseudocolumn and make it uneditable
WITHOUT_CLASSIFICATION	to allow the fw to save and reload user options related to specific columns, we construct a unique name for the table so the column can be associcated with only that table. Some drivers do not provide the catalog or schema info, so those parts of the name will end up as null. That's ok since this string is never viewed by the user and is just used to distinguish this table from other tables in the DB. We also include the URL used to connect to the DB so that the same table/DB on different machines is treated differently.
WITHOUT_CLASSIFICATION	data, random accessible current token current input character (original) current input character (for token) last input character position of current character line number of current character start position of current line
WITHOUT_CLASSIFICATION	/ We are through with parsing. Now we store the outcome in _lastRun... and tell the listeners.
WITHOUT_CLASSIFICATION	If this session doesn't share SQL history with other sessions then disable the controls that relate to SQL History.
WITHOUT_CLASSIFICATION	belong together
WITHOUT_CLASSIFICATION	use just the columns listed in the table, and set the not-used cols to the ones that are not mentioned in the table
WITHOUT_CLASSIFICATION	for each element in the "use" set, if selected then add to "not use", otherwise add to new "use" set
WITHOUT_CLASSIFICATION	detect whether or not the object tree needs refreshing by comparing old value to new and see if they changed.
WITHOUT_CLASSIFICATION	It causes a lot of pain in serveral places to cope with nulls or emptys here.
WITHOUT_CLASSIFICATION	create a hashmap containing the column names. by convention, the value and key is the same for each column name
WITHOUT_CLASSIFICATION	int progress = loadSchemas(1); load tables with catalog = null
WITHOUT_CLASSIFICATION	int progress = loadCatalogs(1); load tables with schema = null
WITHOUT_CLASSIFICATION	If called here it is called far to often and restoring selection in the Object tree doesn't work. fireSchemaInfoUpdate();
WITHOUT_CLASSIFICATION	Reload all matching table types
WITHOUT_CLASSIFICATION	Reload all matching procedure types
WITHOUT_CLASSIFICATION	call the function in the app code that checks for unexpected conditions in the DB as it will be after doing the update
WITHOUT_CLASSIFICATION	Unfortunately, conversion to uppercase does not work properly for the Georgian alphabet, which has strange rules about case conversion. So we need to make one last check before exiting.
WITHOUT_CLASSIFICATION	If characters don't match but case may be ignored, try converting both characters to uppercase. If the results match, then the comparison scan should continue.
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	DB2 stores all names in upper case. PostgreSQL stores all names in lower case. That's why we may not find proc as it was written in the create statement. So we try out the upper and lower case names too.
WITHOUT_CLASSIFICATION	The following strings are SQL tokens and should therefore not be internationalized No I18N No I18N No I18N No I18N No I18N No I18N
WITHOUT_CLASSIFICATION	If the operator is 'IN' and there are no parenthesis around the value, put them there.
WITHOUT_CLASSIFICATION	this method is called from the super class's constructor therfore _titleLbl is null for that call.
WITHOUT_CLASSIFICATION	if the release version doesn't change, we won't be pulling down core artifacts. So, we just need to make sure that all core files have been copied from their installed locations into the corresponding directory in download, which is in the CLASSPATH of the updater. This covers the case where the update is being run for the first time after install, and no new version is available, but the user wants to install/remove plugins and/or translations.
WITHOUT_CLASSIFICATION	since the base name file exists, we need to skip it and bump up the endIndex
WITHOUT_CLASSIFICATION	tell scrollpane to use table size with the height adjusted to leave room for the scrollbar at the bottom if needed
WITHOUT_CLASSIFICATION	text put in file name field to indicate that we should create a temp file for export
WITHOUT_CLASSIFICATION	should not happen since the file that was selected was just being shown in the Chooser dialog, but just to be safe...
WITHOUT_CLASSIFICATION	an error here may mean that the file cannot be reached or has moved or some such. In any case, the file cannot be used for export.
WITHOUT_CLASSIFICATION	at this point we have an actual file that we can output to, so create the output stream (so that data type objects do not have to).
WITHOUT_CLASSIFICATION	If the table+column already has a data object in the map, then remove it.
WITHOUT_CLASSIFICATION	notify table that rows have changed The deleted rows may not be contiguous in the actual data model because the gui may be showing a version of the data sorted in some other order, so we cannot use fireRowsDeleted.
WITHOUT_CLASSIFICATION	ColumnDisplayDefinition[] colDefs = createColumnDefinitions(md, columnIndices, computeWidths); _dataSetDefinition = new DataSetDefinition(colDefs);
WITHOUT_CLASSIFICATION	If this was done when the header was clicked it prevents MS Excel like adopition of column sizes by double click. See class ButtonTableHeader.
WITHOUT_CLASSIFICATION	/ Override the functions that need to be changed to tell the table mechanisms how to do editing.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check, so remove them This only applies to Popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	we should never get here because the areEqual function is only called when we are trying to update the database, so we know that we have a DataType object for this column (or we would have been stopped from editing by the isEditableXXX methods), but we need a return here to keep the compiler happy.
WITHOUT_CLASSIFICATION	get parameters previously set by user, or set default values set to the default
WITHOUT_CLASSIFICATION	if the original object is not null, then it contains a Clob object that we need to re-use, since that is the DBs reference to the clob data area. Otherwise, we set the original Clob to null, and the write method needs to know to set the field to null.
WITHOUT_CLASSIFICATION	If all of the data has been read, then the blob can be edited in the Popup, otherwise it cannot
WITHOUT_CLASSIFICATION	if this panel is called before any instances of the class have been created, we need to load the properties from the DTProperties.
WITHOUT_CLASSIFICATION	flag for whether to use the default Java format (true) or the Locale-dependent format (false)
WITHOUT_CLASSIFICATION	If all of the data has been read, then the clob can be edited in the Popup, otherwise it cannot
WITHOUT_CLASSIFICATION	place to save reference to DataType object needed for calling the appropriate renderer on the object value
WITHOUT_CLASSIFICATION	if text cannot be edited in the cell but can be edited in the popup, show that by changing the text colors.
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	if this panel is called before any instances of the class have been created, we need to load the properties from the DTProperties.
WITHOUT_CLASSIFICATION	we have read data, so that is not the same state odd-ball case: assume if neither has read data that they are equal
WITHOUT_CLASSIFICATION	we have read data, so that is not the same state odd-ball case: assume if neither has read data that they are equal
WITHOUT_CLASSIFICATION	the list of specific column names is in comma-separated format with a comma in front of the first entry as well empty the map of old values
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner Special case: the input is exactly the output
WITHOUT_CLASSIFICATION	if this column is being limited, then truncate the data if needed (start with a quick check for the data being shorter than the limit, in which case we don't need to worry about it).
WITHOUT_CLASSIFICATION	When changing the backgroud color, it helps to set the inner component's border to zero. Otherwise, the border can obscure the text and make it hard to see. This is especially seen when using the kunstoff l&f.
WITHOUT_CLASSIFICATION	default behavior if no appropriate data type found is to create a simple JTextArea with no special handling. In Theory, this cannot happen because if there is no data type object for this column's data type, then isEditableInPopup returns false, so we should not get here. If there IS a data type object, and isEditableInPopup returns true, then we would have executed the return statement above. Assume that the value can be represented as a string.
WITHOUT_CLASSIFICATION	we have not already created a DataType object for this column so do that now and save it
WITHOUT_CLASSIFICATION	HADB reports "10" for column size of BLOB/CLOB 2GB (2^32)
WITHOUT_CLASSIFICATION	CREATE TABLE tableName ( column1 int, column2 varchar(20) NOT NULL DEFAULT 'Hello World' CONSTRAINT tableName_pkey PRIMARY KEY(column1,column2) );
WITHOUT_CLASSIFICATION	"CREATE $unique$ $storageOption$ INDEX $indexName$ " + "ON $tableName$ ( $columnName; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	<drop_index_statement> ::= DROP INDEX <index_name> [ON <table_name>]
WITHOUT_CLASSIFICATION	ALTER TABLE localTableName ADD CONSTRAINT constraintName FOREIGN KEY (localColumn1, localColumn2) REFERENCES referencedTableName (referencedColumn1, referencedColumn2) MATCH FULL ON UPDATE RESTRICT ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;
WITHOUT_CLASSIFICATION	deletes the last ", " deletes the last ", "
WITHOUT_CLASSIFICATION	ALTER TABLE tableName DROP CONSTRAINT constraintName
WITHOUT_CLASSIFICATION	CREATE VIEW viewName AS definition;
WITHOUT_CLASSIFICATION	myid myid StringTemplate st = new StringTemplate(templateStr);
WITHOUT_CLASSIFICATION	FOREIGN KEY (columnName [,...]) REFERENCES [refTableName] [(refColumnName[,...])] [ON DELETE {CASCADE | RESTRICT | NO ACTION | SET DEFAULT | SET NULL}] [ON UPDATE {CASCADE | SET DEFAULT | SET NULL}]
WITHOUT_CLASSIFICATION	"ALTER TABLE $childTableName$ " + "ADD $constraint$ $constraintName$ FOREIGN KEY ( $childColumn; separator=\",\"$ ) " + "REFERENCES $parentTableName$ ( $parentColumn; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	"CREATE $unique$ $storageOption$ INDEX $indexName$ " + "ON $tableName$ ( $columnName; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	CREATE {[UNIQUE [HASH]] INDEX [[IF NOT EXISTS] newIndexName] | PRIMARY KEY [HASH]} ON (columnName [,...])
WITHOUT_CLASSIFICATION	"CREATE SEQUENCE $sequenceName$ START WITH $startValue$ " + "INCREMENT BY $incrementValue$ $cache$ $cacheValue$";
WITHOUT_CLASSIFICATION	"SELECT CURRENT_VALUE, 'NONE', 'NONE', CACHE, INCREMENT, 0 " + "FROM INFORMATION_SCHEMA.SEQUENCES " + "WHERE SEQUENCE_SCHEMA = ? " + "AND SEQUENCE_NAME = ? ";
WITHOUT_CLASSIFICATION	"CREATE $unique$ $storageOption$ INDEX $indexName$ " + "ON $tableName$ ( $columnName; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	ALTER TABLE <tablename> ADD [CONSTRAINT <constraintname>] FOREIGN KEY (<column list>) REFERENCES <exptablename> (<column list>) [ON {DELETE | UPDATE} {CASCADE | SET DEFAULT | SET NULL}];
WITHOUT_CLASSIFICATION	Ingres requires that columns that are to become not null must have a default value.
WITHOUT_CLASSIFICATION	CREATE SEQUENCE <sequencename> [AS {INTEGER | BIGINT}] [START WITH <startvalue>] [INCREMENT BY <incrementvalue>];
WITHOUT_CLASSIFICATION	"CREATE SEQUENCE $sequenceName$ $startWith$ " + "$increment$ $minimum$ $maximum$ $cache$ $cycle$";
WITHOUT_CLASSIFICATION	convert all columns in key to not null - this doesn't hurt if they are already null.
WITHOUT_CLASSIFICATION	I tried the following for values under 8000 but I get Encountered unexpected exception - line 1, You cannot assign a value of type 'long byte' to a column of type 'byte varying'. Explicitly convert the value to the required type. registerColumnType(Types.VARBINARY, 8000, "byte varying($l)");
WITHOUT_CLASSIFICATION	float(54) produces an exception: invalid column format 'float' on column 'float_column'., SQL State: 42000, Error Code: 2014
WITHOUT_CLASSIFICATION	Alter table <table> add constraint <constraint> foreign key(<column>) references <table>(<column>) on delete set null
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ " + "ADD CONSTRAINT $constraintName$ UNIQUE ($columnName; separator=\",\"$)";
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ " + "ADD CONSTRAINT $constraintName$ UNIQUE ($columnName; separator=\",\"$)";
WITHOUT_CLASSIFICATION	int featureId = DialectUtils.COLUMN_TYPE_ALTER_TYPE; String msg = DialectUtils.getUnsupportedMessage(this, featureId); throw new UnsupportedOperationException(msg);
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ " + "ALTER $columnName$ SET DATA TYPE $dataType$";
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ " + "ADD CONSTRAINT $constraintName$ UNIQUE ($columnName; separator=\",\"$)";
WITHOUT_CLASSIFICATION	CREATE [UNIQUE|FULLTEXT|SPATIAL] INDEX index_name [index_type] ON tbl_name (index_col_name,...) index_col_name: col_name [(length)] [ASC | DESC] index_type: USING {BTREE | HASH} Note; indexType is unused at the moment because the index dialog doesn't accept this. See below.
WITHOUT_CLASSIFICATION	PostgreSQL follows the standard for SQL BIT. It's a string of BITs. So bit(10) is a string of 10 bits. JDBC treats SQL BIT as if it were only a single BIT. It specifies that BIT is equivalent to BOOLEAN. It claims that the PreparedStatement set method that should be used with BIT is setBoolean and getBoolean. This is not compliant with the standard. So SQL BIT type support is broken in Java, there is nothing we can do about that. Best thing to do for now, is try to convert the BIT type to a boolean like the JDBC spec says and hope for the best. Hope that the source database isn't using the BIT column as a sequence of multiple BITs.
WITHOUT_CLASSIFICATION	Set ON UPDATE action to NO ACTION as Oracle doesn't currently support this. NO ACTION causes the update clause to be omitted.
WITHOUT_CLASSIFICATION	SELECT last_number, max_value, min_value, cache_size, increment_by, cycle_flag FROM USER_SEQUENCES WHERE sequence_name = ?;
WITHOUT_CLASSIFICATION	alter table TEST ALTER MYCHAR SET DEFAULT 'FOO' alter table TEST ALTER MYCHAR DROP DEFAULT
WITHOUT_CLASSIFICATION	drop the existing default value. "ALTER TABLE $tableName$ " + "ALTER $columnName$ DROP DEFAULT";
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ " + "ADD CONSTRAINT $constraintName$ UNIQUE ($columnName; separator=\",\"$)";
WITHOUT_CLASSIFICATION	"CREATE SEQUENCE $sequenceName$ " + "$increment$ $startWith$ $minimum$ $maximum$ $cache$ $cycle$";
WITHOUT_CLASSIFICATION	"CREATE SEQUENCE $sequenceName$ " + "$increment$ $minimum$ $maximum$ $startWith$ $cache$ $cycle$";
WITHOUT_CLASSIFICATION	GenericDialect must be last, since it will claim that it supports any product/version. That is also why there is no isGenericDialect - it would always return true if there was one, making it useless.
WITHOUT_CLASSIFICATION	double and float have no scale - that is DECIMAL_DIGITS is null. Assume that is because it's variable - "floating" point.
WITHOUT_CLASSIFICATION	ALTER TABLE <TABLENAME> ADD CONSTRAINT NULL_FIELD CHECK (<FIELD> IS NOT NULL)
WITHOUT_CLASSIFICATION	Sort the rows by the property name. Collections.sort(_data, new DataSorter());
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	"ALTER TABLE $childTableName$ " + "ADD $constraint$ $constraintName$ FOREIGN KEY ( $childColumn; separator=\",\"$ ) " + "REFERENCES $parentTableName$ ( $parentColumn; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	Firebird doesn't natively support altering a columns nullable property. Will have to simulate in a future release.
WITHOUT_CLASSIFICATION	CREATE GENERATOR EMPNO_GEN; COMMIT; SET TERM !! ; CREATE TRIGGER CREATE_EMPNO FOR EMPLOYEES BEFORE INSERT POSITION 0 AS BEGIN NEW.EMPNO = GEN_ID(EMPNO_GEN, 1); END
WITHOUT_CLASSIFICATION	Dimension dim = getPreferredSize(); dim.width = PREFERRED_WIDTH; setPreferredSize(dim); setRows(3);
WITHOUT_CLASSIFICATION	If the "None" place-holder is in the list in the first position, remove it. It is not possible to select the "None" place-holder upon startup, because it is already selected in the list if it is present.
WITHOUT_CLASSIFICATION	InstantDB (at least version 3.13) only returns "TABLES" for getTableTypes(). If you try to use this in a call to DatabaseMetaData.getTables() no tables will be found. For the moment hard code the types for InstantDB.
WITHOUT_CLASSIFICATION	Some drivers for both MS SQL and Sybase don't return guest as a schema name.
WITHOUT_CLASSIFICATION	The mode_decode routine may or may not be there. We don't care if it is not there, but log an info if we failed to drop it for some other reason.
WITHOUT_CLASSIFICATION	TABLE_CAT TABLE_SCHEM TABLE_NAME COLUMN_NAME DATA_TYPE TYPE_NAME COLUMN_SIZE DECIMAL_DIGITS NUM_PREC_RADIX NULLABLE REMARKS COLUMN_DEF CHAR_OCTET_LENGTH ORDINAL_POSITION IS_NULLABLE
WITHOUT_CLASSIFICATION	Don't bother the user with details about where the result fetch failed if they cancelled the query.
WITHOUT_CLASSIFICATION	/ We use Vectors because a MessageHandler might be called from different threads.
WITHOUT_CLASSIFICATION	If truncate was attempted and not supported, then try delete. If on the other hand delete was attempted, just throw the SQLException that resulted from the delete.
WITHOUT_CLASSIFICATION	all the data from the clob has been read. make sure there are no newlines in it
WITHOUT_CLASSIFICATION	the other obj is null, so see if this non-null obj contains a null value, which is equivilent. Assume that if we have read some of the data and we still have _data == null, then the value in the DB is actually null.
WITHOUT_CLASSIFICATION	Uh-oh! We shouldn't have more than one plugin registering a custom exception handler for a given session. The first one wins and all others get an error message.
WITHOUT_CLASSIFICATION	pid 25493, lock examples: 5 [" /db1/shd_data_4_3/"]User.ygwaBvbPosKorrD(1) 25493 1D, 25499 X E 5 [" /db1/shd_data_4_3/"]User.ygwaBvbPosKorrD(1) 25493 1D, 25499,25506 X,X E,E 5 [" /db1/shd_data_4_3/"]User.ygwaBvbPosKorrD(1) 25493 1D, 25499,25506,25508 X,X,X E,E,E oder 6 [" d:\db\shd_data_lov\"]User.WLagerartikelD(76) 5544 1D, 7 [" d:\db\shd_data_lov\"]User.WLagerartikelD(77) 5544 1D, 3804 S E 8 [" d:\db\shd_data_lov\"]User.WVorgangD(24) 5544 1D, oder fuer kein Lock: 3 [" f:\db\shd_data\"]User.ygwaTestD(989) 3792 1D, 4 [" f:\db\shd_data\"]User.ygwaTestD(990) 3792 1D, 5 [" f:\db\shd_data\"]User.ygwaTestD(991) 3792 1D, 6 [" f:\db\shd_data\"]User.ygwaTestD(992) 3792 1D, 7 [" f:\db\shd_data\"]User.ygwaTestD(993) 3792 1D, 8 [" f:\db\shd_data\"]User.ygwaTestD(994) 3792 1D, 9 [" f:\db\shd_data\"]User.ygwaTestD(995) 3792 1D,
WITHOUT_CLASSIFICATION	/ The colums of the last completed table/view that match the tableNamePat will be returned on top of the collection
WITHOUT_CLASSIFICATION	If source column is type 1111 (OTHER), try to use the column type name to find a type that isn't 1111.
WITHOUT_CLASSIFICATION	JDBC spec says that BIT refers to a boolean column - i.e. a single binary digit with value either "0" or "1". Also the same spec encourages use of getBoolean/setBoolean. However, the SQL-92 standard clearly states that the BIT type is a bit string with length >= 0. So for SQL-92 compliant databases (like PostgreSQL) the JDBC spec's support for BIT is at best broken and unusable. Still, we do what the JDBC spec suggests as that is all that we can do.
WITHOUT_CLASSIFICATION	Only close the statement if SQLException - otherwise it has to remain open until the ResultSet is read through by the caller.
WITHOUT_CLASSIFICATION	We still have to bind a value, or else the PS will throw an exception.
WITHOUT_CLASSIFICATION	String sourceSchema = null; MySQL uses catalogs instead of schemas
WITHOUT_CLASSIFICATION	Column is in table 2, but not table 1 - how else would we get here??
WITHOUT_CLASSIFICATION	view name schema name
WITHOUT_CLASSIFICATION	new line to the begining so that sb.append( will be removed new line to the end so that a semi colon at the end will be removed.
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	Span across two columns c.ipadx = 40;
WITHOUT_CLASSIFICATION	Rows "12dlu, 6dlu, 12dlu, 6dlu, 80dlu:grow, 6dlu, 12dlu, 6dlu, 80dlu:grow, 6dlu, pref"
WITHOUT_CLASSIFICATION	Expanders - trigger and index expanders are added inside the table expander
WITHOUT_CLASSIFICATION	Oracle can only store DECIMAL type numbers. Since regular non-decimal numbers appear as "decimal", Oracle's decimal numbers can be rather large compared to other databases (precision up to 38). Other databases can only handle this large precision in BIGINT fields, not decimal, so try to figure out if Oracle is really storing a BIGINT and claiming it is a DECIMAL. If so, convert the type to BIGINT before going any further.
WITHOUT_CLASSIFICATION	For char or date types this is the maximum number of characters, for numeric or decimal types this is precision.
WITHOUT_CLASSIFICATION	This doesn't appear to work for PROGRESS RDBMS result[i] = DBUtil.getTableCount(con, ti.getSimpleName());
WITHOUT_CLASSIFICATION	TODO: tell the user that the selected destination schema is the same as the source schema. monitor.showMessageDialog(...)
WITHOUT_CLASSIFICATION	######################################################################## ########## events ######################################################################## ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	alter table ti.getSimpleName() add foreign key (fkTableCol) references pkTableName(pkTableCol);
WITHOUT_CLASSIFICATION	final ApplicationFiles appFiles = new ApplicationFiles(); _exportPrefsText.setText(getFileName(here, appFiles.getUserPreferencesFile().getName())); _exportDriversText.setText(getFileName(here, appFiles.getDatabaseDriversFile().getName())); _exportAliasesText.setText(getFileName(here, appFiles.getDatabaseAliasesFile().getName()));
WITHOUT_CLASSIFICATION	Add context menu items to the object tree's session node. as popup menu
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible ------------------------------------------------------------------------ Logger for this class
WITHOUT_CLASSIFICATION	misc ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	######################################################################## ########## events ######################################################################## ------------------------------------------------------------------------ ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	"server" "port" "database file" "backup file"
WITHOUT_CLASSIFICATION	######################################################################## ########## events ######################################################################## ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	visible (gui) ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	dbStatus -> `Status=ONLINE, Updateability=READ_WRITE, UserAccess=MULTI_USER, Recovery=SIMPLE, Version=539, Collation=SQL_Latin1_General_CP1_CI_AS, SQLSortOrder=52, IsTornPageDetectionEnabled, IsAutoCreateStatistic'
WITHOUT_CLASSIFICATION	For reasons that i cannot exmplain, this is out by two, probably due to the border or insets around a cell??
WITHOUT_CLASSIFICATION	If we don't invokeLater here no Short-Cut-Key is sent to the internal frame seen under java version "1.4.1_01" and Linux
WITHOUT_CLASSIFICATION	Expanders - trigger and index expanders are added inside the table expander
WITHOUT_CLASSIFICATION	Tricky alias and chaining completion examples au to auftr in from Kv auftr where au au to auftr in from Kv.positionen.kv auftr where au positionen. to fields of Kv aggregate positionen in from Kv auftr where auftr.positionen. positionen. to fields of Kv aggregate positionen in from Kv where positionen.
WITHOUT_CLASSIFICATION	... while attributes used in qualified expressions will not be completed qualified. That means for pack.Foo. the completion popup will be placed behind the last dot.
WITHOUT_CLASSIFICATION	double space since this is a new version of the stored procedure (overloading name with different parameters)
WITHOUT_CLASSIFICATION	Force the LAF to be set even if Skin is the current one. This allows a change in theme to take affect.
WITHOUT_CLASSIFICATION	_treeAPI.addToPopup(DatabaseObjectType.SESSION, coll.get(CreateTableAction.class)); _treeAPI.addToPopup(DatabaseObjectType.CATALOG, coll.get(CreateTableAction.class));
WITHOUT_CLASSIFICATION	private final static ILogger s_log = LoggerController.createLogger(CreateMysqlTableScriptCommand.class);
WITHOUT_CLASSIFICATION	public ColumnsComboBox(SQLConnection conn, ITableInfo ti) throws SQLException { super(conn.getSQLMetaData().getColumnInfo(ti)); setRenderer(new CellRenderer()); } This renderer uses the unqualified column name as the text to display in the combo. private static final class CellRenderer extends BasicComboBoxRenderer { CellRenderer() { super(); setOpaque(true); } public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) { setText(((TableColumnInfo)value).getColumnName()); return this; } }
WITHOUT_CLASSIFICATION	In an effort to avoid non JDBC standard out parameter types ie oracle specific ones, the dbms_output.get_line is used rather than the dbms_output.getlines. The disadvantage is there are more trips to the server to return multiple lines.
WITHOUT_CLASSIFICATION	If we don't invokeLater here no Short-Cut-Key is sent to the internal frame seen under java version "1.4.1_01" and Linux
WITHOUT_CLASSIFICATION	Folder within plugins folder that belongs to this plugin.
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible ------------------------------------------------------------------------ Logger for this class
WITHOUT_CLASSIFICATION	Add the parameter names and types Use the session Id you got from the openSession call here
WITHOUT_CLASSIFICATION	Action performed for the Update button private void buttonUpdateActionPerformed(java.awt.event.ActionEvent evt) { String query = getQuery(); dbUtils.execute(query); _dlog.setVisible(false); _dlog.dispose(); JOptionPane.showMessageDialog(null, "Field updated"); }
WITHOUT_CLASSIFICATION	private static final ILogger s_log = LoggerController.createLogger(UserParentExpander.class);
WITHOUT_CLASSIFICATION	The TreeModel interface
WITHOUT_CLASSIFICATION	Sets constraints like NOT NULL for the new column, depending on the constraints for the old column.
WITHOUT_CLASSIFICATION	Dec 31 23:59:59 EST 2107 is overflow on FAT file systems, and the call fails
WITHOUT_CLASSIFICATION	The name of the calling client program. This is optional. If you don't want to give out this info, please enter "N/A"
WITHOUT_CLASSIFICATION	String BLINK_CARET = "blinkCaret"; String BLOCK_CARET_ENABLED = "blockCaretEnabled"; String BRACKET_HIGHLIGHTING = "bracketHighlighting"; String BRACKET_HIGHLIGHT_COLOR = "bracketHighlightColor"; String CARET_COLOR = "caretColor";
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	JDK1.5 "@ident" annotation "@keyword" gets returned as two tokens "@" and "keyword"
WITHOUT_CLASSIFICATION	JDK1.5 "@ident" annotation "@keyword" gets returned as two tokens "@" and "keyword"
WITHOUT_CLASSIFICATION	Old test left behind "garbage files" so this time it creates a directory that is guaranteed not to already exist (and deletes it afterward.)
WITHOUT_CLASSIFICATION	/ There are a lot of goodies in the ExtSettingsInitializer that might be interesting in th future. Unfortunately some conflicts with some of Squirrels shortcuts are in ExtSettingsInitializer Settings.removeInitializer(ExtSettingsInitializer.NAME); Settings.addInitializer(new ExtSettingsInitializer(), Settings.CORE_LEVEL); /
WITHOUT_CLASSIFICATION	These should be different since we are providing two different statement separators in SessionProperties
WITHOUT_CLASSIFICATION	We don't add a listener to a button twice because the FindDialogSupport class will call this method with the same button instances whenever the replace dialog is opened. If we add the listener again and again replace will be done as often as the dialog is opened. This is especially nasty if the text to replace is part of the replacement text.
WITHOUT_CLASSIFICATION	MySQL requires MyISAM storage engine for spatial and fulltext indexes. Don't test them for now. See the TODO in the MySQLDialect for getCreateIndexSQL.
WITHOUT_CLASSIFICATION	These two columns will be the only ones in the pktest table. They will start out being nullable, and we will test that the dialect correctly converts them to non-null then applies the PK constraint to them. This test shall not be run against any database dialect that claims not to support changing the nullability of a column.
WITHOUT_CLASSIFICATION	Firebird gives weird exception: unsuccessful metadata update object FKTESTPARENTTABLE is in use; squelch it and continue.
WITHOUT_CLASSIFICATION	This test disabled for now until we figure out a better way to do concurrent modifications to the schemaInfoCache. @Test
WITHOUT_CLASSIFICATION	These tell the Dialect test runner where tables that is creates can be found.
WITHOUT_CLASSIFICATION	catalog schema tableName columnName dataType; 1 == CHAR typeName columnSize decimalDigits radix isNullAllowed defaultValue isNullable
WITHOUT_CLASSIFICATION	private ResultSet mockResultSet = null; private static int[] columnIndices = new int[] { 4, 6, 18, 9, 7, 13, 12, 5, 8, 10, 11, 14, 15, 16, 17 };
WITHOUT_CLASSIFICATION	If the directory exists, add one to the directory number (making it a new directory name.)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ProgressCallBack#currentlyLoading(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getAuthor()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getDescriptiveName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getInternalName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getVersion()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getAuthor()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getDescriptiveName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getInternalName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getVersion()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#applyChanges()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getPanelComponent()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getTitle()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getHint()
WITHOUT_CLASSIFICATION	@see ISQLEntryPanel#hasOwnUndoableManager()
WITHOUT_CLASSIFICATION	@see ISQLEntryPanel#getCaretLineNumber()
WITHOUT_CLASSIFICATION	@see ISQLEntryPanel#addCaretListener(CaretListener)
WITHOUT_CLASSIFICATION	@see ISQLEntryPanel#removeCaretListener(CaretListener)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISQLEntryPanel#setUndoManager(javax.swing.undo.UndoManager)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISQLPanelAPI#fileAppend()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISQLPanelAPI#fileClose()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISQLPanelAPI#fileNew()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISQLPanelAPI#fileSaveAs()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISQLPanelAPI#fileOpen()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISQLPanelAPI#filePrint()
WITHOUT_CLASSIFICATION	@see ActionListener#actionPerformed(ActionEvent)
WITHOUT_CLASSIFICATION	@see MouseMotionListener#mouseDragged(MouseEvent)
WITHOUT_CLASSIFICATION	@see BaseDataSetViewerDestination#allRowsAdded()
WITHOUT_CLASSIFICATION	@see IDataSetViewer#getRowCount()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.datasetviewer.IDataSet#get(int)
WITHOUT_CLASSIFICATION	@see BaseDataSetViewerDestination#addRow(Object[])
WITHOUT_CLASSIFICATION	@see BaseDataSetViewerDestination#getRow(row)
WITHOUT_CLASSIFICATION	@see BaseDataSetViewerDestination#allRowsAdded()
WITHOUT_CLASSIFICATION	@see IDataSetViewer#getRowCount()
WITHOUT_CLASSIFICATION	@see IDataSetViewer#getRowCount()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.dialects.HibernateDialect#supportsSchemasInTableDefinition()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.dialects.HibernateDialect#getLengthFunction()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.dialects.HibernateDialect#getMaxFunction()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.dialects.HibernateDialect#getMaxPrecision(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.dialects.HibernateDialect#getMaxScale(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.dialects.HibernateDialect#getPrecisionDigits(int, int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.dialects.HibernateDialect#getColumnLength(int, int)
WITHOUT_CLASSIFICATION	@see MouseListener#mousePressed(MouseEvent)
WITHOUT_CLASSIFICATION	@see MouseListener#mouseReleased(MouseEvent)
WITHOUT_CLASSIFICATION	@see MouseMotionListener#mouseMoved(MouseEvent)
WITHOUT_CLASSIFICATION	@see TableCellRenderer#getTableCellRendererComponent(JTable, Object, boolean, boolean, int, int)
WITHOUT_CLASSIFICATION	@see TableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	@see TableModel#getColumnClass(int)
WITHOUT_CLASSIFICATION	@see Comparator#compare(Object, Object)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.datatransfer.Transferable#getTransferDataFlavors()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.datatransfer.Transferable#isDataFlavorSupported(java.awt.datatransfer.DataFlavor)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.datatransfer.Transferable#getTransferData(java.awt.datatransfer.DataFlavor)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.IQueryTokenizer#getSQLStatementSeparator()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getUserName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getDatabaseProductName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getDatabaseProductVersion()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getDriverName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getJDBCVersion()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getCascadeClause()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#supportsSchemas()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#supportsSchemasInDataManipulation()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#supportsSchemasInTableDefinitions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#supportsStoredProcedures()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#supportsSavepoints()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#supportsResultSetType(int)
WITHOUT_CLASSIFICATION	Not cached. (non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getCatalogs()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getURL()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getCatalogTerm()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getSchemaTerm()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getProcedureTerm()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getCatalogSeparator()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#supportsCatalogs()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#supportsCatalogsInTableDefinitions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#supportsCatalogsInDataManipulation()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#supportsCatalogsInProcedureCalls()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getJDBCMetaData()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getMetaDataSet()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getTypeInfo() @deprecated Replaced by getDataTypes
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getTypesDataSet()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getDataTypes()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getProcedures(java.lang.String, java.lang.String, java.lang.String, net.sourceforge.squirrel_sql.fw.sql.ProgressCallBack)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getTableTypes()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getTables(java.lang.String, java.lang.String, java.lang.String, java.lang.String[], net.sourceforge.squirrel_sql.fw.sql.ProgressCallBack)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getUDTs(java.lang.String, java.lang.String, java.lang.String, int[])
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getNumericFunctions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getStringFunctions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getSystemFunctions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getTimeDateFunctions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getSQLKeywords()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getImportedKeysInfo(net.sourceforge.squirrel_sql.fw.sql.ITableInfo)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getPrimaryKeys(net.sourceforge.squirrel_sql.fw.sql.ITableInfo) @deprecated use getPrimaryKey instead
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getPrimaryKey(net.sourceforge.squirrel_sql.fw.sql.ITableInfo)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getPrimaryKey(java.lang.String, java.lang.String, java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getProcedureColumns(net.sourceforge.squirrel_sql.fw.sql.IProcedureInfo) @deprecated use getProcedureColumnsDataSet instead
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getTablePrivileges(net.sourceforge.squirrel_sql.fw.sql.ITableInfo) @deprecated use getTablePrivilegesDataSet instead
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getVersionColumns(net.sourceforge.squirrel_sql.fw.sql.ITableInfo) @deprecated use getVersionColumnsDataSet instead
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getColumnInfo(java.lang.String, java.lang.String, java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getColumnInfo(net.sourceforge.squirrel_sql.fw.sql.ITableInfo)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDriver#getWebSiteUrl()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDriver#setWebSiteUrl(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.MetaDataDataSet#get(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.MetaDataDataSet#next(net.sourceforge.squirrel_sql.fw.util.IMessageHandler)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ITableInfo#getExportedKeys()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ITableInfo#getImportedKeys()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.preferences.IGlobalPreferencesPanel#initialize(net.sourceforge.squirrel_sql.client.IApplication)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.preferences.IGlobalPreferencesPanel#uninitialize(net.sourceforge.squirrel_sql.client.IApplication)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#applyChanges()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getHint()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getPanelComponent()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getTitle()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.TableModel#getColumnCount()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.TableModel#getRowCount()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.TableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.AbstractTableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.AbstractTableModel#setValueAt(java.lang.Object, int, int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.AbstractTableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#open()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#close()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#getPreview(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#getRows()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#next()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#reset()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#getInt(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#getDate(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#getConfigurationPanel()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#open()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#close()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#getPreview(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#reset()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#getRows()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#next()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#getInt(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#getDate(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#getConfigurationPanel()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#copyStarted(net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#statementExecuted(net.sourceforge.squirrel_sql.plugins.dbcopy.event.StatementEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#copyFinished(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#copyStarted()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#tableCopyStarted(net.sourceforge.squirrel_sql.plugins.dbcopy.event.TableEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#recordCopied(net.sourceforge.squirrel_sql.plugins.dbcopy.event.RecordEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#statementExecuted(net.sourceforge.squirrel_sql.plugins.dbcopy.event.StatementEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#tableCopyFinished(net.sourceforge.squirrel_sql.plugins.dbcopy.event.TableEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#copyFinished(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#handleError(net.sourceforge.squirrel_sql.plugins.dbcopy.event.ErrorEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.CopyPreference#deleteTableData(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#analyzingTable(net.sourceforge.squirrel_sql.plugins.dbcopy.event.TableEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#tableAnalysisStarted(net.sourceforge.squirrel_sql.plugins.dbcopy.event.AnalysisEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#analyzingTable(net.sourceforge.squirrel_sql.plugins.dbcopy.event.TableEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#tableAnalysisStarted(net.sourceforge.squirrel_sql.plugins.dbcopy.event.AnalysisEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#copyStarted(net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#tableCopyStarted(net.sourceforge.squirrel_sql.plugins.dbcopy.event.TableEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#tableCopyFinished(net.sourceforge.squirrel_sql.plugins.dbcopy.event.TableEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#recordCopied(net.sourceforge.squirrel_sql.plugins.dbcopy.event.RecordEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#statementExecuted(net.sourceforge.squirrel_sql.plugins.dbcopy.event.StatementEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#copyFinished(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#handleError(net.sourceforge.squirrel_sql.plugins.dbcopy.event.ErrorEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#applyChanges()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getPanelComponent()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getTitle()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getHint()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider#getDestSelectedDatabaseObject()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider#setDestSelectedDatabaseObject(net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getExternalService()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getLicenceFileName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getNewSessionPropertiesPanels()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getPluginAppSettingsFolder()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getPluginUserSettingsFolder()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#load(net.sourceforge.squirrel_sql.client.IApplication)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#unload()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getInternalName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getVersion()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.ISessionPlugin#sessionStarted(net.sourceforge.squirrel_sql.client.session.ISession)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getInternalName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getDescriptiveName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getAuthor()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.DefaultPlugin#getContributors()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getVersion()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider#getCopySourceSession()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider#setCopySourceSession(net.sourceforge.squirrel_sql.client.session.ISession)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider#getSelectedDatabaseObjects()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider#getCopyDestSession()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider#setDestCopySession(net.sourceforge.squirrel_sql.client.session.ISession)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider#getDestSelectedDatabaseObject()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.util.Comparator#compare(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.DefaultTableModel#getColumnCount()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.DefaultTableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.DefaultTableModel#getRowCount()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.DefaultTableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.DefaultTableModel#getColumnCount()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.DefaultTableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.DefaultTableModel#getRowCount()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.DefaultTableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.DefaultTableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getAuthor()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getDescriptiveName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getInternalName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getVersion()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getHint()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getPanelComponent()
WITHOUT_CLASSIFICATION	IDataTypeComponent interface methods @see net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.IDataTypeComponent#canDoFileIO()
WITHOUT_CLASSIFICATION	IDataTypeComponent interface methods @see net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.IDataTypeComponent#canDoFileIO()
WITHOUT_CLASSIFICATION	IDataTypeComponent interface methods @see net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.IDataTypeComponent#canDoFileIO()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#applyChanges()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getPanelComponent()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getTitle()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getHint()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getAuthor()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getDescriptiveName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getInternalName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getVersion()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.smarttools.gui.ISmarttoolFrame#setFocusToFirstEmptyInputField()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.preferences.IGlobalPreferencesPanel#initialize(net.sourceforge.squirrel_sql.client.IApplication)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.preferences.IGlobalPreferencesPanel#uninitialize(net.sourceforge.squirrel_sql.client.IApplication)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#applyChanges()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getHint()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getPanelComponent() Return the panel that will contain the prefernces ui. @return Panel containing preferences.
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getTitle()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.event.ISQLExecutionListener#statementExecuted(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.event.ISQLExecutionListener#statementExecuting(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#applyChanges()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getPanelComponent()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getTitle()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getHint()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISQLEntryPanel#setUndoManager(javax.swing.undo.UndoManager)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISQLEntryPanel#setUndoManager(javax.swing.undo.UndoManager)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getExternalService()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getGlobalPreferencePanels()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getHelpFileName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getLicenceFileName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getNewSessionPropertiesPanels()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getPluginAppSettingsFolder()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getPluginUserSettingsFolder()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getWebSite()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#load(net.sourceforge.squirrel_sql.client.IApplication)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#unload()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getInternalName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getDescriptiveName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getAuthor()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getVersion()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#load(net.sourceforge.squirrel_sql.client.IApplication)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getInternalName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getDescriptiveName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getAuthor()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getVersion()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getExternalService()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getGlobalPreferencePanels()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getHelpFileName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getLicenceFileName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getNewSessionPropertiesPanels()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getPluginAppSettingsFolder()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.lang.Comparable#compareTo(java.lang.Object)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData#getExportedKeysInfo(net.sourceforge.squirrel_sql.fw.sql.ITableInfo)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData#getImportedKeysInfo(net.sourceforge.squirrel_sql.fw.sql.ITableInfo)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ITableInfo#getExportedKeys()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ITableInfo#getImportedKeys()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ITableInfo#setExportedKeys(net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo[])
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ITableInfo#setImportedKeys(net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo[])
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.util.IMessageHandler#showWarningMessage(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSchemasInDataManipulation()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsCatalogsInDataManipulation()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#getTableTypes()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#getDatabaseProductName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#getDatabaseProductName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#allProceduresAreCallable()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#allTablesAreSelectable()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#deletesAreDetected(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#doesMaxRowSizeIncludeBlobs()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#insertsAreDetected(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#isCatalogAtStart()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#isReadOnly()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#locatorsUpdateCopy()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#nullPlusNonNullIsNull()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#nullsAreSortedAtEnd()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#nullsAreSortedAtStart()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#nullsAreSortedLow()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#othersDeletesAreVisible(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#othersInsertsAreVisible(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#othersUpdatesAreVisible(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#ownDeletesAreVisible(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#ownInsertsAreVisible(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#ownUpdatesAreVisible(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#setupDriverName(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#storesLowerCaseIdentifiers()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#storesLowerCaseQuotedIdentifiers()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#storesMixedCaseIdentifiers()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#storesMixedCaseQuotedIdentifiers()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#storesUpperCaseIdentifiers()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#storesUpperCaseQuotedIdentifiers()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsAlterTableWithAddColumn()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsAlterTableWithDropColumn()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsANSI92EntryLevelSQL()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsANSI92FullSQL()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsANSI92IntermediateSQL()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsBatchUpdates()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsCatalogsInIndexDefinitions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsCatalogsInPrivilegeDefinitions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsCatalogsInProcedureCalls()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsCatalogsInTableDefinitions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsColumnAliasing()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsConvert()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsConvert(int, int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsCoreSQLGrammar()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsCorrelatedSubqueries()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsDataDefinitionAndDataManipulationTransactions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsDataManipulationTransactionsOnly()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsDifferentTableCorrelationNames()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsExpressionsInOrderBy()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsExtendedSQLGrammar()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsFullOuterJoins()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsGetGeneratedKeys()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsGroupBy()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsGroupByBeyondSelect()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsGroupByUnrelated()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsIntegrityEnhancementFacility()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsLikeEscapeClause()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsLimitedOuterJoins()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsMinimumSQLGrammar()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsMixedCaseIdentifiers()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsMixedCaseQuotedIdentifiers()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsMultipleOpenResults()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsMultipleResultSets()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsMultipleTransactions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsNamedParameters()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsNonNullableColumns()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsOpenCursorsAcrossCommit()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsOpenCursorsAcrossRollback()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsOpenStatementsAcrossCommit()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsOpenStatementsAcrossRollback()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsOrderByUnrelated()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsOuterJoins()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsPositionedDelete()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsPositionedUpdate()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsResultSetConcurrency(int, int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsResultSetHoldability(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsResultSetType(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSavepoints()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSchemasInIndexDefinitions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSchemasInPrivilegeDefinitions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSchemasInProcedureCalls()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSchemasInTableDefinitions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSelectForUpdate()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsStatementPooling()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsStoredProcedures()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSubqueriesInComparisons()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSubqueriesInExists()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSubqueriesInIns()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSubqueriesInQuantifieds()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsTableCorrelationNames()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsTransactionIsolationLevel(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsTransactions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsUnion()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsUnionAll()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#updatesAreDetected(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#usesLocalFilePerTable()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#usesLocalFiles()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.lang.Comparable#compareTo(java.lang.Object)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.mainpanel.BaseMainPanelTab#refreshComponent()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.mainpanel.IMainPanelTab#getComponent()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.mainpanel.IMainPanelTab#getHint()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.mainpanel.IMainPanelTab#getTitle()
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	??
WITHOUT_CLASSIFICATION	Nothing to do.
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Errors
WITHOUT_CLASSIFICATION	Errors
WITHOUT_CLASSIFICATION	Errors
WITHOUT_CLASSIFICATION	Errors
WITHOUT_CLASSIFICATION	Errors
WITHOUT_CLASSIFICATION	Ignored
WITHOUT_CLASSIFICATION	else
WITHOUT_CLASSIFICATION	??
WITHOUT_CLASSIFICATION	Save Application level SQL history.
WITHOUT_CLASSIFICATION	Save options selected for Cell Import Export operations
WITHOUT_CLASSIFICATION	Save options selected for Edit Where Columns
WITHOUT_CLASSIFICATION	AliasMaintSheetFactory.initialize(this); DriverMaintSheetFactory.initialize(this);
WITHOUT_CLASSIFICATION	AliasMaintSheetFactory.initialize(this); DriverMaintSheetFactory.initialize(this);
WITHOUT_CLASSIFICATION	i18n[SQLHistoryDlg.filterCboStartsWith=starts with]
WITHOUT_CLASSIFICATION	i18n[sqlval.info=This plugin uses version 1.0 of the SQL Validator Web Service developed by MimerSQL http:sqlvalidator.mimer.com. The SQL Statement is stored anonymously to be used by the ISO SQL Standards committee.]
WITHOUT_CLASSIFICATION	i18n[dataTypeOther.sqlOtherType=SQL Other (SQL type 1111)]
WITHOUT_CLASSIFICATION	i18n[editextras.month=Month]
WITHOUT_CLASSIFICATION	i18n[AboutBoxDialog.error.creditsfile=Error reading credits file]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.errorReadingFile=There was an error while reading file {0}.\nThe error was:\n{1}]
WITHOUT_CLASSIFICATION	i18n[CreateTableScriptCommand.jdbcOdbcMessage=JDBC-ODBC Bridge doesn't provide all of the necessary metadata. The script may be incomplete.]
WITHOUT_CLASSIFICATION	i18n[UpdateSummaryDialog.close=Close]
WITHOUT_CLASSIFICATION	i18n[userscript.dlgTabScriptsExecute=Execute]
WITHOUT_CLASSIFICATION	i18n[DB2Plugin.showViewSource=Show view source]
WITHOUT_CLASSIFICATION	i18n[DownloadStatusEventHandler.updateDownloadFailedTitle=Update Download Failed]
WITHOUT_CLASSIFICATION	Create checkbox for enabling auto refresh i18n[oracle.dboutputEnableAutoRefer=Enable auto refresh]
WITHOUT_CLASSIFICATION	i18n[DataCache.msg.driverRegisteredSucessfully=Driver class {0} sucessfully registered for driver definition: {1}]
WITHOUT_CLASSIFICATION	i18n[dataSetViewereditableTablePanel.error2=Error]
WITHOUT_CLASSIFICATION	i18n[AbstractRefactoringDialog.executeButtonLabel=Execute]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.exportError6=Export Error]
WITHOUT_CLASSIFICATION	i18n[dataTypeBigDecimal.precisionEceeded=Precision Exceeded: Number of digits in number ({0})\nis greater than allowed in column ({1})]
WITHOUT_CLASSIFICATION	i18n[editextras.second=Second]
WITHOUT_CLASSIFICATION	i18n[mssql.windows=Windows text (ANSI)]
WITHOUT_CLASSIFICATION	i18n[DB2Plugin.showUdfSource=Show UDF source]
WITHOUT_CLASSIFICATION	i18n[Application.splash.loadsqlhistory=Loading SQL history...]
WITHOUT_CLASSIFICATION	i18n[AbstractRefactoringDialog.tableNameLabel=Table Name: ]
WITHOUT_CLASSIFICATION	i18n[DerbyDialect.typeMessage=Derby doesn't allow the column type to be altered]
WITHOUT_CLASSIFICATION	i18n[exportconfig.xmlErrorWritingTo=XML Error writing to\n{0}]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.exportError2=Export Error]
WITHOUT_CLASSIFICATION	i18n[DropTableDialog.catalogLabel=Catalog:]
WITHOUT_CLASSIFICATION	i18n[oracle.parseCalla=Parse Calls]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.unknownerror=Unknown error during check on DB. Update is probably not safe.\nDo you wish to proceed?]
WITHOUT_CLASSIFICATION	i18n[graph.scriptPlugNeeded=Scripting is only available with the SQL Scripts Plugin.\nGet the plugin from www.squirrelsql.org. It's free.]
WITHOUT_CLASSIFICATION	i18n[ColumnListDialog.tableNameLabel=Table Name: ]
WITHOUT_CLASSIFICATION	i18n[editextras.year=Year]
WITHOUT_CLASSIFICATION	i18n[Application.splash.loaddatatypeprops=Loading Data Type Properties...]
WITHOUT_CLASSIFICATION	i18n[oracle.triggerDetails=Details]
WITHOUT_CLASSIFICATION	i18n[graph.showZoomPaper=Show/Zoom paper edges]
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[dataTypeUnknown.unknownTypes=Unknown DataTypes (non-standard SQL type codes)]
WITHOUT_CLASSIFICATION	i18n[mssql.cancel=Cancel]
WITHOUT_CLASSIFICATION	i18n[PasteTableAction.error.multischemapaste=The paste operation may only be applied to one schema at a time]
WITHOUT_CLASSIFICATION	i18n[graph.showddl=show DDL]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesPanel.hint=Here you may pecify which Schemas to be loaded and displayed in a Session's Object tree. Code completion and Syntax highlighting will work only for loaded schemas. If Schemas take a long time to load you may cache them on your hard disk. Then loading will take long only when you open a Session for the first time. You can always refesh the cache either by using the Session's 'Refresh all' toolbar button or by using the 'Refresh Item' right mouse menu on an Object tree node.]
WITHOUT_CLASSIFICATION	i18n[HibernateTabController.noConfigSelected=Please select a Hibernate configuration to connect to.\nHibernate configurations can be defined in the global preferences window.\nWould you like to open the window now?]
WITHOUT_CLASSIFICATION	i18n[UpdateSummaryTable.allTranslationsLabel=All translations]
WITHOUT_CLASSIFICATION	i18n[sqlval.logon=SQL Validation Logon]
WITHOUT_CLASSIFICATION	i18n[SQLHistoryDlg.filterCboEndsWith=ends with]
WITHOUT_CLASSIFICATION	i18n[CreateTableOfCurrentSQLCommand.noQuery=No query found to create the script from.]
WITHOUT_CLASSIFICATION	i18n[sqlscript.dropIfExists=Drop table if exists]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.updateproblem=There was a problem reported during the update. The DB message was:\n{0}\nThis may or may not be serious depending on the above message.\nThe data was probably not changed in the database.\nYou may need to refresh the table to get an accurate view of the current data.]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.selectImportDataFile=You must select an existing file to import data from.]
WITHOUT_CLASSIFICATION	i18n[sqlscript.tableScriptOk=OK]
WITHOUT_CLASSIFICATION	i18n[dataTypeBigDecimal.newlinesAsbackslashN=Show newlines as \\n within cells]
WITHOUT_CLASSIFICATION	Create checkbox for enabling auto refresh i18n[oracle.auotRefresh2=Enable auto refresh]
WITHOUT_CLASSIFICATION	i18n[AboutBoxDialog.creditspanelcreatetime=CreditsPanel created in ]
WITHOUT_CLASSIFICATION	i18n[graph.cm=cm]
WITHOUT_CLASSIFICATION	i18n[UpdateSummaryTable.allPluginsLabel=All plugins]
WITHOUT_CLASSIFICATION	checkbox for whether to interpret input leniently or not i18n[dateTypeTimestamp.allowInexact=allow inexact format on input]
WITHOUT_CLASSIFICATION	i18n[sqlscript.configYourMultiTableScriptConstr=Include constraints to tables not in selection]
WITHOUT_CLASSIFICATION	i18n[SQLTab.hint=Execute SQL statements]
WITHOUT_CLASSIFICATION	i18n[DownloadStatusEventHandler.changesRecordedTitle=Changes Recorded]
WITHOUT_CLASSIFICATION	i18n[rowDataInputFrame.colDescription=\nColumn\nDescription\n]
WITHOUT_CLASSIFICATION	i18n[syntax.cols=Columns]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.connectionFailureDialogMsg=Unable to download release.xml from the specified location]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.closeAllButThis=Close all but this]
WITHOUT_CLASSIFICATION	i18n[graph.printGraph=Print graph]
WITHOUT_CLASSIFICATION	i18n[mysql.enterDbName=Enter database name]
WITHOUT_CLASSIFICATION	i18n[userscript.dlgTabScriptsEdit=Edit...]
WITHOUT_CLASSIFICATION	i18n[xmlReformatter.xmlWarning5=XML Warning]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.importError2=Import Error]
WITHOUT_CLASSIFICATION	i18n[BaseListInternalFrame.error.execdoubleclick=Error occured executing doubleclick event]
WITHOUT_CLASSIFICATION	i18n[UdfDetailsTab.hint=Display UDF details]
WITHOUT_CLASSIFICATION	i18n[ColorPropertiesPanel.statusBarBackgroundColorChooserDialogTitle=Select Background Color for Status Bar]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.error.loadfaqfile=Error retrieving FAQ from URL = {0}]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.metaData=Meta Data:]
WITHOUT_CLASSIFICATION	i18n[CSVSettingsPanel.useTab=Tab seperated]
WITHOUT_CLASSIFICATION	i18n[AboutBoxDialog.aboutpanelcreatetime=AboutPanel created in ]
WITHOUT_CLASSIFICATION	i18n[ColumnListDialog.columnNameLabel=Column: ]
WITHOUT_CLASSIFICATION	i18n[CSVSettingsPanel.inputFileEncoding=Input file encoding]
WITHOUT_CLASSIFICATION	i18n[graph.delGraph=Do you really wish to delete this graph?]
WITHOUT_CLASSIFICATION	i18n[sqlval.dbmsVersion=DBMS Version:]
WITHOUT_CLASSIFICATION	some kind of problem - tell user i18n[DataSetUpdateableTableModelImpl.error.preparingdelete=While preparing for delete, saw exception:\n{0}]
WITHOUT_CLASSIFICATION	i18n[ImportDataIntoTableExecutor.ioException=An error occured while reading the input file.]
WITHOUT_CLASSIFICATION	i18n[dataTypeDate.medium=Medium ({0})]
WITHOUT_CLASSIFICATION	i18n[graph.btnOk=OK]
WITHOUT_CLASSIFICATION	i18n[DualProgressBarDialog.cancelButtonLabel=Cancel]
WITHOUT_CLASSIFICATION	i18n[Session.driverComplianceTitle=JRE/JDBC Version Mismatch]
WITHOUT_CLASSIFICATION	i18n[DownloadStatusEventHandler.fileLabel=File]
WITHOUT_CLASSIFICATION	i18n[dateTypeTimestamp.jdbcEscape=Use JDBC standard escape format ]
WITHOUT_CLASSIFICATION	i18n[syntax.background=Select background color]
WITHOUT_CLASSIFICATION	i18n[ColorPropertiesPanel.toolbarBackgroundColorChooserDialogTitle=Select Background Color for Toolbar]
WITHOUT_CLASSIFICATION	i18n[RefactoringPreferencesPanel.quoteToolTip=Identifiers appear in quotes]
WITHOUT_CLASSIFICATION	i18n[sqlscript.successCreate=Successfully created table {0}]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvController.noCommand=You must provide a command string or uncheck "Execute command".]
WITHOUT_CLASSIFICATION	i18n[graph.removeGraph=Remove graph]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.staleupdaterow=This row in the Database has been changed since you refreshed the data.\nNo rows will be updated by this operation.\nDo you wish to proceed?]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.importWarning=Import Warning]
WITHOUT_CLASSIFICATION	i18n[graph.dina4=Din A 4]
WITHOUT_CLASSIFICATION	i18n
WITHOUT_CLASSIFICATION	i18n[SQLFilterSheet.okButtonLabel=OK]
WITHOUT_CLASSIFICATION	i18n[graph.width=Width]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.showButtonLabel=Show SQL]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.addColumnTitle=Add Column]
WITHOUT_CLASSIFICATION	i18n[SyntaxPlugin.duplicateline=duplicateline]
WITHOUT_CLASSIFICATION	i18n[userscript.executing=Executing Script...]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.faq=FAQ]
WITHOUT_CLASSIFICATION	i18n[EditExtrasAccessor.editextrasPluginNeeded=Quoting is only available with the Edit Extras Plugin.\nGet the plugin from www.squirrelsql.org. It's free.]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.hint=Display trigger details]
WITHOUT_CLASSIFICATION	i18n[DBUtil.error.firebirdcommit=Firebird requires commit table create before inserting records. Please adjust your preferences.]
WITHOUT_CLASSIFICATION	i18n[userscript.selClasspathToDel=Please select the classpath entry to delete]
WITHOUT_CLASSIFICATION	i18n[editWhereColsPanel.usePKLabel=Use PK]
WITHOUT_CLASSIFICATION	i18n[graph.selGraphToAdd=Select the graph to add the selected tables to]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesController.cacheFilePath=Cache file path for Alias "{0}": {1}]
WITHOUT_CLASSIFICATION	i18n[dataTypeTimestamp.medium=Medium ({0})]
WITHOUT_CLASSIFICATION	i18n[SQLHistoryDlg.close=Close]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.showToolbar=Show toolbar]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvCommand.missingClobDataMsg=Found Clob placeholder ({0}) amongst data to be exported. Continue exporting cell data?]
WITHOUT_CLASSIFICATION	i18n[DualProgressBarDialog.copyingTablesLabel=Copying table]
WITHOUT_CLASSIFICATION	i18n[graph.dbOrder=db order]
WITHOUT_CLASSIFICATION	i18n[graph.invalidHeight=Invalid height]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.classPathRemove=Remove selected entries]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.unknownerror=Unknown error during check on DB. Update is probably not safe.\nDo you wish to proceed?]
WITHOUT_CLASSIFICATION	i18n[AboutBoxDialog.error.creditsfileurl=Couldn't retrieve Credits File URL]
WITHOUT_CLASSIFICATION	i18n[editextras.errorQuoteSql=Error processing Quote SQL command: {0}]
WITHOUT_CLASSIFICATION	i18n[mssql.fileOptions=File Options]
WITHOUT_CLASSIFICATION	i18n[userscript.dlgTabScriptsRemove2=Remove]
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.hint=Display sequence details]
WITHOUT_CLASSIFICATION	i18n[MemoryPanel.runGC=Run garbage collection]
WITHOUT_CLASSIFICATION	i18n[SplashScreen.error.updatingprogressbar=Error occured updating progress bar]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.exceptionduringcheck=Exception seen during check on DB. Exception was:\n{0}\nUpdate is probably not safe to do.\nDo you wish to proceed?]
WITHOUT_CLASSIFICATION	i18n[codeCompletion.PrefsTabTitle=Code Completion]
WITHOUT_CLASSIFICATION	i18n[DataImportGlobalPreferencesTab.hint=Preferences for data import]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.autoCheckFrequency=How often to check for updates:]
WITHOUT_CLASSIFICATION	i18n[AbstractRefactoringDialog.tableNameLabel=Table Name: ]
WITHOUT_CLASSIFICATION	i18n[Application.splash.loadcellselections=Loading Cell Import/Export selections...]
WITHOUT_CLASSIFICATION	i18n[Application.info.jdbcwriter=Attempting to set JDBC debug log to writer]
WITHOUT_CLASSIFICATION	i18n[DropTableDialog.tableLabel=Table(s):]
WITHOUT_CLASSIFICATION	i18n[FactoryProviderDialog.desc=Please enter the fully qualified class name of a SessionFactorImpl provider class. The compiled class file must be in one of your additional classpath entries.]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.error.loadpluginhelp=Error generating Help entry for plugin {0}]
WITHOUT_CLASSIFICATION	i18n[mssql.ok=OK]
WITHOUT_CLASSIFICATION	label for type combo - used to enable/disable text associated with the combo i18n[dataTypeBigDecimal.read2=Read]
WITHOUT_CLASSIFICATION	i18n[hashtabledataset.key=Key]
WITHOUT_CLASSIFICATION	i18n[codecompletion.function.mustEndWith=function must end with ',']
WITHOUT_CLASSIFICATION	i18n[CopyDriverAction.error.selectingwindow=Error selecting window]
WITHOUT_CLASSIFICATION	i18n[SchemaInfo.loadingCatalogs=Loading catalogs]
WITHOUT_CLASSIFICATION	i18n[SQLScriptPreferencesPanel.updateActionLabel=Action to take on update:]
WITHOUT_CLASSIFICATION	i18n[graph.scriptdd=script DDL]
WITHOUT_CLASSIFICATION	i18n[mysql.copyCancel=Cancel]
WITHOUT_CLASSIFICATION	i18n[syntax.autoCorrApply=Apply]
WITHOUT_CLASSIFICATION	i18n[PostgreSqlXmlTypeDataTypeComponent.cellErrorMsg=<Error: see log file>]
WITHOUT_CLASSIFICATION	i18n[ActionCollection.createActionError=Error occured creating Action: {0}]
WITHOUT_CLASSIFICATION	i18n[graph.newName=Please enter a new name]
WITHOUT_CLASSIFICATION	i18n[ResultTab.cannotedit=This SQL can not be edited.]
WITHOUT_CLASSIFICATION	i18n[dataSetViewerTablePanel.conversionError=Conversion Error]
WITHOUT_CLASSIFICATION	i18n[dataTypeTime.full=Full ({0})]
WITHOUT_CLASSIFICATION	i18n[SQLScriptPreferencesPanel.updateRefActionToolTip=Append ON UPDATE ...]
WITHOUT_CLASSIFICATION	i18n[syntax.tables=Tables]
WITHOUT_CLASSIFICATION	i18n[sqlval.clientLogon=Client:]
WITHOUT_CLASSIFICATION	i18n[i18n.failedToParse=Failed to parse {0}\n{1}]
WITHOUT_CLASSIFICATION	i18n[HtmlViewerPanel.error.displayurl=Error displaying URL]
WITHOUT_CLASSIFICATION	i18n[DerbyDialect.varcharMessage=Derby only allows varchar columns to be altered]
WITHOUT_CLASSIFICATION	i18n
WITHOUT_CLASSIFICATION	Add import control i18n[popupeditableIoPanel.import44=Import]
WITHOUT_CLASSIFICATION	i18n[syntax.literals=Literals]
WITHOUT_CLASSIFICATION	here we've hit the second line of a multi-line i18n stanza Just skip it, we're not that sophisticated.
WITHOUT_CLASSIFICATION	i18n[TableExportCsvCommand.failedToWriteFile=Failed to write file\n{0}\nError message\n{1}\nSee last log entry for details.]
WITHOUT_CLASSIFICATION	i18n[codecompletion.function.needsTwoArgs=function needs at least two arguments]
WITHOUT_CLASSIFICATION	i18n[ViewSourceTab.display=Show view source]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.commentLabel=Comment: ]
WITHOUT_CLASSIFICATION	i18n[sqlval.noSql=No SQL specified]
WITHOUT_CLASSIFICATION	i18n[graph.mnuDelete=delete]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.defaultValueLabel=Default Value: ]
WITHOUT_CLASSIFICATION	i18n[FactoryProviderDialog.cancel=Cancel]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvController.commandChooserButton=Choose]
WITHOUT_CLASSIFICATION	i18n[SupportedRefactoringsTab.hint=Show refactorings that are supported by the plugin]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.editButtonLabel=Edit SQL]
WITHOUT_CLASSIFICATION	i18n[ResultTab.metadataTabTitle=MetaData]
WITHOUT_CLASSIFICATION	i18n[codeCompletion.PrefsTabTitleHint=Configure Code Completion]
WITHOUT_CLASSIFICATION	label for the date format combo, used to enable/disable text i18n[dataTypeDate.orlocaleIndependent= or locale-dependent format:]
WITHOUT_CLASSIFICATION	i18n[OraclePluginPreferencesPanel.readClobsFullyCheckBoxTT=Read all CLOB data when the Contents tab is displayed]
WITHOUT_CLASSIFICATION	i18n[UpdateSummaryDialog.currentVersionPrefix=Current Version:]
WITHOUT_CLASSIFICATION	i18n[laf.lafPerformanceWarning=Also note: Some Look and Feels may cause performance problems. If you think your selected Look and Feel slows down SQuirreL switch to a Metal or Plastic Look and Feel.]
WITHOUT_CLASSIFICATION	i18n[i18n.notGeneratedInWorkDir=File {0} has not been generated. Cannot continue.]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigController.ReallyRemoveConfig=Are you sure you want to delete configuration "{0}".]
WITHOUT_CLASSIFICATION	i18n[HibernateSQLPanel.alwaysFormat=Always format]
WITHOUT_CLASSIFICATION	i18n[oracle.execution=Executions]
WITHOUT_CLASSIFICATION	i18n[MysqlPlugin.showProcedureSource=Show procedure source]
WITHOUT_CLASSIFICATION	i18n[userscript.codeTemplate=Script code template]
WITHOUT_CLASSIFICATION	i18n[MappingRoot.driverName=JDBC driver name (Hibernate)]
WITHOUT_CLASSIFICATION	i18n[DerbyPlugin.prefsTitle=Derby]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.sqlResults=SQL Results:]
WITHOUT_CLASSIFICATION	i18n[AbstractRefactoringDialog.showButtonLabel=Show SQL]
WITHOUT_CLASSIFICATION	i18n[DumpSessionAction.warning=<HTML><BODY><B>Warning:</B> Plain<BR>text passwords<BR>may be saved<BR>in this file.</BODY></HTML>]
WITHOUT_CLASSIFICATION	i18n[UpdateManagerDialog.settingsLabel=Settings]
WITHOUT_CLASSIFICATION	i18n[SQLFilterAction.singleObjectMessage=You must have a single table or view selected to activate the SQL Filter]
WITHOUT_CLASSIFICATION	i18n[mysql.droppingDBs=Dropping database(s)]
WITHOUT_CLASSIFICATION	i18n[LogPanel.logInfoLabel=Logs: Errors {0}, Warnings {1}, Infos {2}]
WITHOUT_CLASSIFICATION	i18n[graph.format=Format ...]
WITHOUT_CLASSIFICATION	i18n[userscript.dlgTabScripts=Scripts]
WITHOUT_CLASSIFICATION	i18n[syntax.bold=Bold]
WITHOUT_CLASSIFICATION	i18n[ArtifactStatus.coreLabel=core]
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.hint=Display index details]
WITHOUT_CLASSIFICATION	i18n[OraclePluginPreferencesPanel.sessionTimezoneLabel=Initialize Session Timezone]
WITHOUT_CLASSIFICATION	i18n[exportconfig.errorResolvingFile=Error resolving file name]
WITHOUT_CLASSIFICATION	Copy i18n files to i18n downloads directory
WITHOUT_CLASSIFICATION	i18n[userscript.scriptProps=Script properties]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.title=Results]
WITHOUT_CLASSIFICATION	i18n[DBUtil.error.bindclobfailure=bindBlobVar: failed to bind blob using filesystem - attempting to bind blob using memory]
WITHOUT_CLASSIFICATION	i18n[SQLHistoryItemWrapper.lastUsed=Last used]
WITHOUT_CLASSIFICATION	i18n[SQLHistoryItemWrapper.sql=SQL]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.toObtainSessionFactPersUnit=persitence-unit name:]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.hint=Display trigger details]
WITHOUT_CLASSIFICATION	i18n[SybaseASEPlugin.triggerHint=Show trigger source]
WITHOUT_CLASSIFICATION	i18n[exportconfig.errorCreatingFile=Error occured reading from preferences file: {0}]
WITHOUT_CLASSIFICATION	i18n[ThreadCheckingRepaintManager.workinwrongthread=GUI work done in wrong thread]
WITHOUT_CLASSIFICATION	i18n[TimeDateFunctionsTab.title=Time/Date Functions]
WITHOUT_CLASSIFICATION	i18n[SQLScriptPreferencesPanel.deleteRefActionCheckboxLabel=Add delete referential action to the FK definition]
WITHOUT_CLASSIFICATION	i18n[UpdateSummaryTable.yes=yes]
WITHOUT_CLASSIFICATION	i18n[SupportedRefactoringsTab.title=Supported Refactorings]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.Cancel=Cancel]
WITHOUT_CLASSIFICATION	i18n[exportconfig.errorSavingDrivers=Error saving drivers]
WITHOUT_CLASSIFICATION	i18n[MemoryPanel.sessionInfo.toString3=Session: ID={0}, Alias={1}: created at {2}, closed at {3}, finalized at {4}]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.editFactoryProvider=Edit]
WITHOUT_CLASSIFICATION	i18n[SyntaxPlugin.comment=comment]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvCommand.failedToExecuteCommand=Failed to execute\n{0}\nError message\n{1}\nSee last log entry for details.]
WITHOUT_CLASSIFICATION	i18n[DatabaseMetaData.searchableTypePredNone=no support]
WITHOUT_CLASSIFICATION	i18n[ImportDataIntoTableExecutor.importingDataInto=Importing data into {0}]
WITHOUT_CLASSIFICATION	i18n[RefactoringPreferencesPanel.borderTitle=Refactoring Preferences]
WITHOUT_CLASSIFICATION	i18n[OracleAliasPrefsPanel.ApplyNow=Apply now]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.multimatchingrows=Muliple rows in DB match current row in table - cannot re-read data.]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesController.tableHeader.schema=Schema]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvController.fileChooserTitel=Choose export file]
WITHOUT_CLASSIFICATION	i18n[graph.saveGraphImagesToFile=Copy graph to clipboard]
WITHOUT_CLASSIFICATION	i18n[sqlval.logonClose=Close]
WITHOUT_CLASSIFICATION	i18n[userscript.execOnTargets=Execute script on selected targets]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.columnSeparator=Column Separator:]
WITHOUT_CLASSIFICATION	i18n[DownloadStatusEventHandler.updateDownloadFailedMsg=Please consult the log for details]
WITHOUT_CLASSIFICATION	i18n[ColorPropertiesPanel.objectTreeBackgroundColorChooserDialogTitle=Select Background Color for Object Tree]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.canceleRequested=Query execution cancel requested by user.]
WITHOUT_CLASSIFICATION	i18n[mapdataset.unsupported=<Unsupported>]
WITHOUT_CLASSIFICATION	i18n[CSVSettingsPanel.seperatorCharToolTip=Specify the character that is used to seperate the columns in this file (e.g. ',' or ';')]
WITHOUT_CLASSIFICATION	i18n[CSVSettingsPanel.useChar=Seperated by character:]
WITHOUT_CLASSIFICATION	i18n[syntax.prefUsePlain=Use plain editor]
WITHOUT_CLASSIFICATION	i18n[Application.error.loadcolsinfo=Unable to load Edit 'Where' Columns selections.]
WITHOUT_CLASSIFICATION	i18n[graph.showQualifiedTableNames=Show qualified table names]
WITHOUT_CLASSIFICATION	i18n[userscript.scriptClass=Script class]
WITHOUT_CLASSIFICATION	i18n[sqlscript.scriptWritten=Script was written to the SQL editor of the main session window.]
WITHOUT_CLASSIFICATION	tell user that there was a problem i18n[baseDataSetViewerDestination.error=Error]
WITHOUT_CLASSIFICATION	i18n[graph.refreshTable=Refresh table]
WITHOUT_CLASSIFICATION	i18n[oracle.displaySnstanceDetails=Display instance details]
WITHOUT_CLASSIFICATION	i18n[ActionCollection.actionNotFound=Action {0} not found in ActionCollection.]
WITHOUT_CLASSIFICATION	i18n[SQLFilterSheet.closeButtonLabel=Close]
WITHOUT_CLASSIFICATION	i18n[userscript.execOutput=Script execution output]
WITHOUT_CLASSIFICATION	Copy core files minus any i18n jars to core downloads directory
WITHOUT_CLASSIFICATION	i18n[ArtifactStatus.pluginLabel=plugin]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.desc=Description:]
WITHOUT_CLASSIFICATION	i18n[ValidatorGlobalPreferencesTab.hint=Preferences for SQL validation]
WITHOUT_CLASSIFICATION	i18n[SpecialColumnMapping.FIXED_VALUE=Fixed value]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.info.norowsupdated=No rows updated.]
WITHOUT_CLASSIFICATION	i18n[userscript.confirmRemove=Do you want to remove script {0} from the list?]
WITHOUT_CLASSIFICATION	i18n[i18n.executingCommand=Executing command: {0}]
WITHOUT_CLASSIFICATION	i18n[mmsql.textFiles=Text Files]
WITHOUT_CLASSIFICATION	i18n[editextras.errorProcessingFormat=Error processing Format SQL command: {0}]
WITHOUT_CLASSIFICATION	i18n[mssql.monitor=Monitor]
WITHOUT_CLASSIFICATION	i18n[PostgreSqlXmlTypeDataTypeComponent.cellErrorMsg=<Error: see log file>]
WITHOUT_CLASSIFICATION	i18n[ModifyDriverAction.error.selectingwindow=Error selecting window]
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[sqlval.user=User:]
WITHOUT_CLASSIFICATION	i18n[hashtabledataset.value=Value]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.error.displaydocument=Error displaying document]
WITHOUT_CLASSIFICATION	i18n[UpdateManagerDialog.channelLabel=Channel:]
WITHOUT_CLASSIFICATION	i18n[mysql.copyTable=Copy Table...]
WITHOUT_CLASSIFICATION	i18n[LockDetailsTab.hint=Display Locks]
WITHOUT_CLASSIFICATION	i18n[syntax.osterWarning=You are using the Oster editor. Please consider using the Netbeans editor. See menu File --> New Session Properties --> Syntax]
WITHOUT_CLASSIFICATION	i18n[ResultTab.infoTabTitle=Info]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.general=General]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.nonStickyPanel=Cannot make a cancel panel sticky]
WITHOUT_CLASSIFICATION	i18n[CancelStatementThread.cancelSucceededLate=Canceling statement succeeded now. But took longer than one second.]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.sqlExecTabs=SQL Execution Tabs:]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.fileError=File Name Error]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigController.NoConfigToRemove=No configuration selected to remove.]
WITHOUT_CLASSIFICATION	i18n[syntax.errAbrev=error / abreviation]
WITHOUT_CLASSIFICATION	i18n[userscript.showInStandardMenues1=Show in standard menues]
WITHOUT_CLASSIFICATION	i18n[i18n.noEditorCommand=Can not open files withou an editor command.]
WITHOUT_CLASSIFICATION	i18n[DumpApplicationCommand.header=SQuirreL SQL Client Application Dump {0}]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.exportError5=Export Error]
WITHOUT_CLASSIFICATION	i18n[SQLScriptPreferencesPanel.qualifyCheckboxLabel=Qualify table names in scripts with schema]
WITHOUT_CLASSIFICATION	i18n[dateTypeTimestamp.defaultFormat=Use default format ]
WITHOUT_CLASSIFICATION	i18n[RefactoringPreferencesTab.title=Refactoring]
WITHOUT_CLASSIFICATION	i18n[syntax.prefSyntax=Syntax]
WITHOUT_CLASSIFICATION	i18n[SQLHistoryDlg.filterCboRegEx=regular exp]
WITHOUT_CLASSIFICATION	i18n[ObjectTreeTab.title=Objects]
WITHOUT_CLASSIFICATION	i18n[DualProgressBarDialog.copyingRecordsLabel=Copying records]
WITHOUT_CLASSIFICATION	i18n[ArtifactStatus.translationLabel=translation]
WITHOUT_CLASSIFICATION	i18n[DBUtil.error.maptype=Couldn't map type for table='{0}' column='{1}']
WITHOUT_CLASSIFICATION	i18n[mysql.btRemove=Remove]
WITHOUT_CLASSIFICATION	i18n[AboutBoxDialog.error.systemprops=Error occured displaying System Properties]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.hint=Display trigger details]
WITHOUT_CLASSIFICATION	i18n[SyntaxPlugin.tolowercase=tolowercase]
WITHOUT_CLASSIFICATION	_treeAPI.addDetailTab(DatabaseObjectType.PROCEDURE, new ProcedureSourceTab(i18n.SHOW_PROCEDURE_SOURCE));
WITHOUT_CLASSIFICATION	i18n[MemoryPanel.sessionInfo.toString2=Session: ID={0}, Alias={1}: created at {2}]
WITHOUT_CLASSIFICATION	i18n[DefaultDatabaseExpander.error.retrieveuserroles=Unable to retrieve user roles]
WITHOUT_CLASSIFICATION	i18n[CreateDriverAction.error.selectingwindow=Error selecting window]
WITHOUT_CLASSIFICATION	i18n[rowDataInputFrame.data=Data]
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.removeMultiLineCommentLabel=Remove multi-line comments (...) from SQL before executing
WITHOUT_CLASSIFICATION	i18n[TableExportCsvController.commandChooserTitel=Choose command executable]
WITHOUT_CLASSIFICATION	i18n[graph.noSel=No selection]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.pageloaded=Page loaded.]
WITHOUT_CLASSIFICATION	i18n[oracle.sorts=Sorts]
WITHOUT_CLASSIFICATION	i18n[SessionStartupTimeHintDlg.title=Session startup time hint]
WITHOUT_CLASSIFICATION	i18n[i18n.executingCommandFailed=Execution failed with error: {0}]
WITHOUT_CLASSIFICATION	i18n[oracle.displayDetails=Display index details]
WITHOUT_CLASSIFICATION	i18n[SQLHistoryDlg.applyFilter=Apply]
WITHOUT_CLASSIFICATION	i18n[FactoryProviderDialog.title=Name of SessionFactorImpl provider]
WITHOUT_CLASSIFICATION	label for type combo - used to enable/disable text associated with the combo i18n[dataTypeBlob.read=Read]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.withHeaders=Include column headers]
WITHOUT_CLASSIFICATION	i18n[mssql.currentActivity=Current Activity]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.exportError=Export Error]
WITHOUT_CLASSIFICATION	i18n[ProgressCallBackDialog.initialLoadingPrefix=Loading...]
WITHOUT_CLASSIFICATION	i18n[userscript.scriptAdminErr=Err Msg]
WITHOUT_CLASSIFICATION	i18n[ActionCollection.createActionInfo=Attempting to load action class - {0}]
WITHOUT_CLASSIFICATION	i18n[xmlRefomatter.xmlWarning=XML Warning]
WITHOUT_CLASSIFICATION	i18n[SchemaInfo.loadingKeywords=Loading keywords]
WITHOUT_CLASSIFICATION	i18n[mssql.general=General]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.nullableLabel=Nullable: ]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.cannotCreateTempFile=Cannot create temp file..\nError was:\n{0}]
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.procedureSeparatorToolTip=Multiple statements within a procedure or function can be terminated with this.]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesController.cacheFilePathNotExists=Cache file for Alias "{0}" does not exist. If it existed the path would be: {1}]
WITHOUT_CLASSIFICATION	i18n[UpdateSummaryTable.installOptionsLabel=Install Options]
WITHOUT_CLASSIFICATION	add button to execute external command i18n[popupeditableIoPanel.execute34=Execute]
WITHOUT_CLASSIFICATION	i18n[DialectUtils.dropPrimaryKeyUnsupported={0} doesn''t support dropping primary keys]
WITHOUT_CLASSIFICATION	i18n[mssql.objectsOn=Objects on {0}:]
WITHOUT_CLASSIFICATION	i18n[UpdateSummaryDialog.title=Update Summary]
WITHOUT_CLASSIFICATION	i18n[hibernate.HibernateTabPanel.openConfigs=Open Hibernate configurations]
WITHOUT_CLASSIFICATION	i18n[oracle.sessionDetails=Details]
WITHOUT_CLASSIFICATION	i18n[graphToFile.ImageFileSpec=JPG image format]
WITHOUT_CLASSIFICATION	i18n[SyntaxPlugin.replace=replace]
WITHOUT_CLASSIFICATION	i18n[CopyTablesCommand.progressDialogTitle=Analyzing FKs in Tables to Copy]
WITHOUT_CLASSIFICATION	i18n[DataImportGlobalPreferencesTab.title=Data import]
WITHOUT_CLASSIFICATION	i18n[codecompletion.prefs.table.spWithoutParams=SP without params]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.hint=Display trigger details]
WITHOUT_CLASSIFICATION	i18n[HQLEntryPanelManager.unquoteHQL=Unquote HQL]
WITHOUT_CLASSIFICATION	i18n[syntax.selColor=Select Color]
WITHOUT_CLASSIFICATION	i18n[EditWhereColsAction.singleObjectMessage=You must have a single table selected to limit the colums used in the Edit WHERE clause]
WITHOUT_CLASSIFICATION	i18n[sqlval.logonOk=OK]
WITHOUT_CLASSIFICATION	i18n[UpdateControllerImpl.updateCheckTitle=Update Check]
WITHOUT_CLASSIFICATION	i18n[codecompletion.prefs.table.col.prefix=Prefix]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.info.updateidenticalrows=This operation will update {0} identical rows.\nDo you wish to proceed?]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.fileDoesNotExist=File {0} does not exist,\nor is not a readable, normal file.\nPlease enter a valid file name or use Browse to select a file.]
WITHOUT_CLASSIFICATION	i18n[syntax.prefUseNetbeans=Use Netbeans editor (recommended)]
WITHOUT_CLASSIFICATION	i18n[userscript.showInStandardMenues=Show in standard menues]
WITHOUT_CLASSIFICATION	i18n[HQLEntryPanelManager.quoteHQLsb=Quote HQL as StingBuffer]
WITHOUT_CLASSIFICATION	i18n[MappingRoot.url=JDBC Url (Hibernate)]
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[syntax.dataTypes=Data Types]
WITHOUT_CLASSIFICATION	i18n[UpdateManagerDialog.title=Update Manager]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigController.classpathEntryDesc=Jars, Zips or directories]
WITHOUT_CLASSIFICATION	i18n[syntax.replaceNetbeansOnly=Replace is only available when the Netbeans editor is used.\nSee menu File --> New Session Properties --> Tab Syntax]
WITHOUT_CLASSIFICATION	i18n[Session.driverCompliance=The driver being used for alias ''{0}'' is not JDBC 2.1 compliant.\nYou should consider getting a more recent version of this driver]
WITHOUT_CLASSIFICATION	i18n[CSVSettingsPanel.dateFormat=Date format]
WITHOUT_CLASSIFICATION	i18n[InformixExceptionFormatter.positionLabel=Position: ]
WITHOUT_CLASSIFICATION	i18n[cellDataPopup.valueofColumn=Value of column {0}]
WITHOUT_CLASSIFICATION	i18n[sqlscript.enterNameOfTable=Enter name of table:]
WITHOUT_CLASSIFICATION	i18n[syntax.resWords=Reserved Words]
WITHOUT_CLASSIFICATION	i18n[sqlscript.configYourMultiTableScriptIxAfterEach=Constraints and indexes after each table]
WITHOUT_CLASSIFICATION	i18n[syntax.removeRows=remove selected rows]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.editBookmark=Edit bookmark]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.urlLabel=Url:]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.btnTextEdit=Edit]
WITHOUT_CLASSIFICATION	i18n[SchemaTableCboItem.schemaID.loadButDontCache=Load but don't cache]
WITHOUT_CLASSIFICATION	i18n[mysql.copyToNewTable=Copy to new Table:]
WITHOUT_CLASSIFICATION	i18n[oracle.bufferPerExec=Buffer Gets per Exec]
WITHOUT_CLASSIFICATION	i18n[SchemaTableUpdateWhatItem.procedures=Procedures]
WITHOUT_CLASSIFICATION	i18n[rowDataInputFrame.cancel=Cancel]
WITHOUT_CLASSIFICATION	i18n[syntax.functions=Functions]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.modifyButtonLabel=Modify Column]
WITHOUT_CLASSIFICATION	i18n[SQLScriptPreferencesTab.title=SQL Scripts]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.localPathLabel=Local Path:]
WITHOUT_CLASSIFICATION	i18n[PleaseWaitDialog.cancel=Cancel]
WITHOUT_CLASSIFICATION	i18n[userscript.propsDlgCancel=Cancel]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesController.tableHeader.procedures=Procedures]
WITHOUT_CLASSIFICATION	i18n[DumpSessionAction.error=Error occured dumping session: {0}]
WITHOUT_CLASSIFICATION	i18n[graph.showConstr=Show constraint names]
WITHOUT_CLASSIFICATION	i18n[UpdateManagerDialog.repositoryTabLabel=Repository]
WITHOUT_CLASSIFICATION	i18n[mssql.options=Options]
WITHOUT_CLASSIFICATION	i18n[oracle.diskReads=Disk Reads]
WITHOUT_CLASSIFICATION	i18n[userscript.scriptCompletedErr=Script completed with errors]
WITHOUT_CLASSIFICATION	i18n[ObjectTreeTab.hint=Show database objects]
WITHOUT_CLASSIFICATION	i18n[DialectUtils.addPrimaryKeyUnsupported={0} doesn''t support adding primary keys]
WITHOUT_CLASSIFICATION	i18n[UdfDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[generalPropertiesPanel.left=Left]
WITHOUT_CLASSIFICATION	i18n[syntax.osterExplain=Note: The preferable editor is the Netbeans editor. The Netbeans editor\n - is less memory consuming,\n - its highlightning is more exact,\n - can handle many lines well.\n The Oster editor is still there because it can handle very long lines better than the Netbeans editor. This is due to a known bug in the Netbeans editor (Issue #41241). As soon as this bug is fixed the Oster editor will be removed.]
WITHOUT_CLASSIFICATION	i18n[ColumnDiffDialog.sessionLabelPrefix=Session]
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[MemoryPanel.sessionInfo.toString1=Session: ID={0}, Alias={1}: created at {2}, closed at {3}]
WITHOUT_CLASSIFICATION	i18n[graph.addChildTables=Add child tables]
WITHOUT_CLASSIFICATION	i18n[userscript.dlgTabScriptsRemove=Remove]
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.planTableUnavailableTitle= PLAN_TABLE not found]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.toObtainSessionFactConfiguration=Call "new org.hibernate.cfg.Configuration().configure().buildSessionFactory();"]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.prefName=Name:]
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.hint=Display sequence details]
WITHOUT_CLASSIFICATION	i18n[sqlscript.dlgCreatTableOfSql=Create table of SQL]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[RefactoringPreferencesPanel.prefsToolTip=Table names appear in scripts as SCHEMA.TABLE]
WITHOUT_CLASSIFICATION	i18n[mysql.tabStatus=MySQL Table Status]
WITHOUT_CLASSIFICATION	i18n[oracle.diplayScriptDetails=Display script details]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[mysql.logs=MySQL Logs]
WITHOUT_CLASSIFICATION	i18n[SchemaInfo.loadingTables=Loading tables]
WITHOUT_CLASSIFICATION	i18n[SQLHistoryController.mnuAppendSelectionToEditor=Append selected statements to SQL editor]
WITHOUT_CLASSIFICATION	i18n[userscript.classNotFoundIn=Class {0} found in\n{1}]
WITHOUT_CLASSIFICATION	i18n[DialectUtils.columnDefaultUnsupported={0} doesn''t support altering a column''s default value]
WITHOUT_CLASSIFICATION	i18n[CSVFileImporter.invalidDateFormat=Invalid date format given]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.statementSeparatorLabel=Statement Separator]
WITHOUT_CLASSIFICATION	i18n[SchemaInfo.loadingStoredProcedures=Loading stored procedures]
WITHOUT_CLASSIFICATION	i18n[ThreadCheckingRepaintManager.workinwrongthread=GUI work done in wrong thread]
WITHOUT_CLASSIFICATION	i18n[ImportFileDialog.tableColumn=Table column]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.hint=Display trigger details]
WITHOUT_CLASSIFICATION	i18n[SQLHistoryItemWrapper.index=Index]
WITHOUT_CLASSIFICATION	File handling controls i18n[popupeditableIoPanel.useFile=Use File: ]
WITHOUT_CLASSIFICATION	i18n[DB2Plugin.showTriggerSource=Show trigger source]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.cannotFindFile=Cannot find file {0}\nCheck file name and re-try export.]
WITHOUT_CLASSIFICATION	i18n[dataSetViewerEditableTablePanel.deleteRosQuestion=Do you wish to delete {0} rows from this table?]
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.hint=Display index details]
WITHOUT_CLASSIFICATION	i18n[xmlReformatter.seeOtherErrs={0}\nDo you wish to see other errors?"]
WITHOUT_CLASSIFICATION	i18n[FactoryProviderDialog.example=Save example code for a SessionFactorImpl provider class to ...]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.newFactoryClasspathBorder=Additional classpath entries to create a SessionFactoryImpl]
WITHOUT_CLASSIFICATION	i18n[oracle.displayTriggerColumns=Display trigger column information]
WITHOUT_CLASSIFICATION	i18n[PostgresPlugin.showIndexSource=Show index source]
WITHOUT_CLASSIFICATION	i18n[HtmlViewerPanel.error.processhyperlink=Error processing hyperlink]
WITHOUT_CLASSIFICATION	i18n[SchemaTableUpdateWhatItem.views=Views]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.executeError2=Execute Error]
WITHOUT_CLASSIFICATION	i18n[HibernateSQLPanel.code=SQL code]
WITHOUT_CLASSIFICATION	i18n[UpdateControllerImpl.exceptionMsg=Exception was: ]
WITHOUT_CLASSIFICATION	i18n[DropTableDialog.title=Drop Table(s)]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigController.noCfgNameMsg=Not a valid configuration name\nChanges cannot be applied.]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesPanel.specifySchemas=Specify Schema loading and caching]
WITHOUT_CLASSIFICATION	i18n[codecompletion.listTruncated=Completion list truncated. Narrow by typing to get missing entries.]
WITHOUT_CLASSIFICATION	i18n[sqlval.anonymous=Anonymous]
WITHOUT_CLASSIFICATION	i18n[javaBeanDataSet.value=Value]
WITHOUT_CLASSIFICATION	i18n[DerbyPlugin.showProcedureSource=Show procedure source]
WITHOUT_CLASSIFICATION	i18n[graph.graphSaved=Graph "{0}" saved to "{1}"]
WITHOUT_CLASSIFICATION	i18n[sqlval.descriptivename=SQL Validator plugin]
WITHOUT_CLASSIFICATION	i18n[SplashScreen.error.updatingprogressbar=Error occured updating progress bar]
WITHOUT_CLASSIFICATION	i18n[ColumnListDialog.executeButtonLabel=Execute]
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.lineCommentToolTip=Sequence of characters at the beginning of a line to indicate that whole line is a comment]
WITHOUT_CLASSIFICATION	i18n[mysql.shoeVariables=(MySQL) Show Variables]
WITHOUT_CLASSIFICATION	i18n[userscript.codeTemplateSave=Save]
WITHOUT_CLASSIFICATION	i18n[MappingRoot.connectionErr=Error getting SQL connection data from Hibernate:]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.rereadingdb=There was a problem reported while re-reading the DB. The DB message was:\n{0}]
WITHOUT_CLASSIFICATION	i18n[resultSetMentaDataSet.propName=Property Name]
WITHOUT_CLASSIFICATION	i18n[ScriptWriter.error.nouserhome=The System property <user.home> is null. Cannot determine where to write DBCopy SQL scripts. Disabling writing SQL scripts for DBCopy operations.]
WITHOUT_CLASSIFICATION	i18n[graph.addParentTables=Add parent tables]
WITHOUT_CLASSIFICATION	i18n[syntax.findNetbeansOnly=Find is only available when the Netbeans editor is used.\nSee menu File --> New Session Properties --> Tab Syntax]
WITHOUT_CLASSIFICATION	i18n[userscript.selScriptToExec=Please select the script to execute]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.weeklyLabel=Weekly]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.classPathAdd=Add classpath entry]
WITHOUT_CLASSIFICATION	i18n[UpdateManagerDialog.hostLabel=Host:]
WITHOUT_CLASSIFICATION	i18n[sqlval.technology=Technology:]
WITHOUT_CLASSIFICATION	i18n[ColumnListDialog.editSQLButtonLabel=Edit SQL]
WITHOUT_CLASSIFICATION	i18n[editextras.time=Time]
WITHOUT_CLASSIFICATION	i18n[PostgresPlugin.showProcedureSource=Show procedure source]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigController.noPersistenceUnitName=Missing Persitence-Unit name .\nChanges cannot be applied.]
WITHOUT_CLASSIFICATION	i18n[SplashScreen.info.loadingfile=Loading file - ]
WITHOUT_CLASSIFICATION	i18n[CopyProgressMonitor.analyzingTableMessage=Analyzing table ]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.atStartupLabel=At Startup]
WITHOUT_CLASSIFICATION	i18n[laf.lf=L & F]
WITHOUT_CLASSIFICATION	i18n[mssql.scriptPrimary=Script PRIMARY keys, FOREIGN keys, defaults, and check constraints]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.createFileError=Failed to create file {0}.\nChange file name or select a differnt file for export.]
WITHOUT_CLASSIFICATION	i18n[PleaseWaitDialog.pleaseWait=Please wait while the query is executed]
WITHOUT_CLASSIFICATION	i18n[mssql.delay={0}s delay]
WITHOUT_CLASSIFICATION	i18n[mapdataset.key=Key]
WITHOUT_CLASSIFICATION	i18n[userscript.applicableTo=Scripts applicable to objects of type {0}]
WITHOUT_CLASSIFICATION	i18n[syntax.whiteSpace=White Space]
WITHOUT_CLASSIFICATION	i18n[NumericFunctionsTab.hint=Show all the numeric functions available in DBMS]
WITHOUT_CLASSIFICATION	i18n[DerbyPlugin.showViewSource=Show view source]
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.hint=Display index details]
WITHOUT_CLASSIFICATION	i18n[syntax.textLimitLineVisible=Show text limit line]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.exportError3=Export Error]
WITHOUT_CLASSIFICATION	i18n[mssql.performace=Performance Counters]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.toObtainSessionFactJPA=Call "javax.persistence.Persistence.createEntityManagerFactory("<persitence-unit name>");"]
WITHOUT_CLASSIFICATION	i18n[AbstractRefactoringDialog.cancelButtonLabel=Cancel]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.error.loadpluginsettings=Error retrieving app settings folder for plugin {0}]
WITHOUT_CLASSIFICATION	i18n[TableExportCSVDlg.exportTitleNew=CSV / MS Excel export]
WITHOUT_CLASSIFICATION	i18n[MysqlPlugin.hint=Preferences for MySQL]
WITHOUT_CLASSIFICATION	i18n[OracleAliasPrefsPanel.AccessibleButSys=Allow accessible Schemas excluding SYS]
WITHOUT_CLASSIFICATION	i18n[mysql.fieldProps=Field Properties:]
WITHOUT_CLASSIFICATION	i18n[MetaDataTab.hint=Show database metadata]
WITHOUT_CLASSIFICATION	i18n[PreLaunchHelperImpl.installFailedMessage=Unexpected error while attempting to install updates]
WITHOUT_CLASSIFICATION	i18n[dataTypeJavaObject.readContentsWhenLoaded=Read contents when table is first loaded and display as string]
WITHOUT_CLASSIFICATION	i18n[ExcelSettingsPanel.xlsSettings=Excel import settings]
WITHOUT_CLASSIFICATION	i18n[ColorPropertiesPanel.statusBarBackgroundColorBtnLabel=Choose Status Bar Color]
WITHOUT_CLASSIFICATION	i18n[CatalogsTab.hint=Show all the catalogs]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.sqlResultTabs=SQL Results Tabs:]
WITHOUT_CLASSIFICATION	i18n[sqlval.infoBorder=Info]
WITHOUT_CLASSIFICATION	i18n[ProgressBarDialog.cancelButtonLabel=Cancel]
WITHOUT_CLASSIFICATION	i18n[sqlscript.configMultiTableScript=Configuration of multi table scripts]
WITHOUT_CLASSIFICATION	i18n[FormatterSourceTab.noSourceAvailable=No object source code is available]
WITHOUT_CLASSIFICATION	i18n[UpdateManagerDialog.closeLabel=Close]
WITHOUT_CLASSIFICATION	i18n[InstallDefaultDriversAction.error.selectingwindow=Error selecting window]
WITHOUT_CLASSIFICATION	i18n[DriverPropertiesPanel.useDriverProperties=Use driver properties]
WITHOUT_CLASSIFICATION	i18n[ViewSourceTab.display=Show view source]
WITHOUT_CLASSIFICATION	i18n[sessionPropertiesPanel.loadSchemasCatalogs=Load Schemas/Catalogs into object tree]
WITHOUT_CLASSIFICATION	i18n[SQLFilterSheet.clearButtonLabel=Clear {0}]
WITHOUT_CLASSIFICATION	i18n[graph.chkIsLandscape=Landscape]
WITHOUT_CLASSIFICATION	i18n[oracle.dboutputStayOnTop=Stay on top]
WITHOUT_CLASSIFICATION	i18n[sqlval.disconnected=Disconnected from the SQL Validation web service]
WITHOUT_CLASSIFICATION	i18n[UpdateSummaryTable.no=no]
WITHOUT_CLASSIFICATION	i18n[ColorPropertiesPanel.objectTreeBackgroundColorButtonLabel=Choose Object Tree Color]
WITHOUT_CLASSIFICATION	i18n[UpdateControllerImpl.releaseFileDownloadFailedMsg=Release file couldn't be downloaded. Please check your settings.]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.nosqlselected=No SQL selected for execution.]
WITHOUT_CLASSIFICATION	i18n[OraclePlugin.hint=Preferences for Oracle]
WITHOUT_CLASSIFICATION	i18n[ColumnListDialog.showSQLButtonLabel=Show SQL]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.exportError4=Export Error]
WITHOUT_CLASSIFICATION	i18n[OracleAliasPrefsPanel.AccessibleAndSys=Allow accessible Schemas and SYS]
WITHOUT_CLASSIFICATION	i18n[RemoveColumnCommand.singleColumnMessage=The table's only column cannot be removed - a table must have a least one column.]
WITHOUT_CLASSIFICATION	i18n[DBUtil.error.nocolumns=Table '{0}' in schema '{1}' has no columns to copy]
WITHOUT_CLASSIFICATION	i18n[i18n.noNativeToAsciiCommand=Cannot convert files without a native2Ascii command.]
WITHOUT_CLASSIFICATION	i18n[AboutBoxDialog.info.endmemtimer=Ending memory timer (AboutBox)]
WITHOUT_CLASSIFICATION	i18n[editWhereColsSheet.unableToEdit=Unable to get list of columns, {0}]
WITHOUT_CLASSIFICATION	i18n[oracle.displaySnapshotDetails=Display materialized view details]
WITHOUT_CLASSIFICATION	i18n[editextras.errorRemoveQuotes=Error processing Remove Quotes SQL command: {0}]
WITHOUT_CLASSIFICATION	i18n[HibernateAttribuiteDataSet.dbTableName=Database table name]
WITHOUT_CLASSIFICATION	i18n[sqlval.dbms=DBMS]
WITHOUT_CLASSIFICATION	i18n[ColumnListDialog.dropErrorMessage=Can't drop all columns - a table must have at least one column
WITHOUT_CLASSIFICATION	add button for Brows i18n[popupeditableIoPanel.browse=Browse]
WITHOUT_CLASSIFICATION	i18n[SQLScriptPreferencesTab.hint=Settings for the SQL Script plugin]
WITHOUT_CLASSIFICATION	i18n[SQLHistoryDlg.SQLPref=SQL]
WITHOUT_CLASSIFICATION	i18n[exportconfig.errorSavingAlials=Error saving aliases]
WITHOUT_CLASSIFICATION	i18n[sqlscript.scriptOnly=Generate script only]
WITHOUT_CLASSIFICATION	i18n[DataCache.msg.driverClassNotFound=Could not find class {0} in neither the Java class path nor the Extra class path of the {1} driver definition:\n{2}]
WITHOUT_CLASSIFICATION	i18n[OracleAliasPrefsPanel.header=Configure Oracle Schema loading properties]
WITHOUT_CLASSIFICATION	i18n[syntax.errors=Errors]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.appearance=Appearance]
WITHOUT_CLASSIFICATION	i18n[LogPanel.logInfoLabel=Logs: Errors {0}, Warnings {1}, Infos {2}]
WITHOUT_CLASSIFICATION	i18n[graph.addTableRefBy=add table referenced by {0}]
WITHOUT_CLASSIFICATION	i18n[ColorPropertiesPanel.instructions=These settings control the background colors...]
WITHOUT_CLASSIFICATION	i18n[DumpApplicationCommand.error.dumpingstatus=Error dumping Application Status bean]
WITHOUT_CLASSIFICATION	i18n[dateTypeTimestamp.stringVersion=Use String version of Timestamp ]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.enterSql=Please enter a bookmark sql]
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[OraclePrefsPanelController.hint=Oracle Plugin preferences]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.prefClose=Close]
WITHOUT_CLASSIFICATION	i18n[DialectUtils.columnNullUnsupported={0} doesn''t support altering a column's nullable attribute]
WITHOUT_CLASSIFICATION	i18n[editextras.minute=Minute]
WITHOUT_CLASSIFICATION	i18n[DropTableDialog.schemaLabel=Schema:]
WITHOUT_CLASSIFICATION	i18n[sqlscript.storeSqlInTableFailed=An error occured during storing SQL result in table {0}. See messages for details.\nI will create the copy script. You may correct errors and run it again.]
WITHOUT_CLASSIFICATION	i18n[codeCompletion.prefsExplain=When completing functions SQuirreL doesn't know if a function is a stored procedure or a user defined function. To make code completion of these two kinds of functions convenient SQuirreL offers to configure which way completion should work.]
WITHOUT_CLASSIFICATION	i18n[codeCompletion.spWithoutParams=stored procedure without parameter info: {call mySP()}]
WITHOUT_CLASSIFICATION	i18n[mssql.genereateCreate=Generate the CREATE <object> command for each object]
WITHOUT_CLASSIFICATION	i18n[CatalogsTab.title=Catalogs]
WITHOUT_CLASSIFICATION	i18n[mssql.allUDFs=All user-defined functions]
WITHOUT_CLASSIFICATION	i18n[PreLaunchHelperImpl.installUpdatesTitle=Updates Available]
WITHOUT_CLASSIFICATION	i18n[editextras.hour=Hour]
WITHOUT_CLASSIFICATION	i18n[syntax.identifiers=Identifiers]
WITHOUT_CLASSIFICATION	i18n[UpdateSummaryDialog.installedVersionPrefix=Installed Version:]
WITHOUT_CLASSIFICATION	i18n[ErrorStream.expected=expected]
WITHOUT_CLASSIFICATION	i18n[WhereClausePanel.addLabel=Add]
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[Application.splash.loadeditselections=Loading Edit 'Where' Columns selections...]
WITHOUT_CLASSIFICATION	i18n[CopyExecutor.tablecolmismatch=Column count for table {0} in source database is {1}, but column count for table {2} in destination database is {3}
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.autoBorderLabel=Automatic Updates]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.confirmupdateallrows=The table has no columns that can be SELECTed on.\nAll rows will be updated.\nDo you wish to proceed?]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.cannotAccessFile=Cannot access file name {0}\nAborting export.]
WITHOUT_CLASSIFICATION	i18n[SQLScriptPreferencesPanel.deleteRefActionToolTip=Append ON DELETE ...]
WITHOUT_CLASSIFICATION	some kind of problem - tell user i18n[DataSetUpdateableTableModelImpl.error.deleteFailed=One of the delete operations failed with exception:\n{0}\nDatabase is in an unknown state and may be corrupted.]
WITHOUT_CLASSIFICATION	i18n[editWhereColsSheet.limitSizeOfWhereClause=Limit the size of the WHERE clause used behind the scenes when editing cell contents.]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.FactoryProvider=SessionFactoryImpl provider]
WITHOUT_CLASSIFICATION	i18n[PreLaunchHelperImpl.restoreFromBackupMessage=Restore SQuirreL to previous version before last update?]
WITHOUT_CLASSIFICATION	i18n[dataSetViewerTablePanel.makeEditable=Make Editable]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.btnTextEdit=Edit]
WITHOUT_CLASSIFICATION	i18n[exportconfig.fileExistsButReadOnly={0}\nexists and you cannot write to it.\nPlease use a different name.]
WITHOUT_CLASSIFICATION	i18n[Application.error.savecolsinfo=Unable to write Edit Where Cols options to persistant storage.]
WITHOUT_CLASSIFICATION	i18n[cellDataPopUp.conversionError=Conversion Error]
WITHOUT_CLASSIFICATION	i18n[graph.renameGraph=Rename graph]
WITHOUT_CLASSIFICATION	i18n[PostgresPlugin.showViewSource=Show view source]
WITHOUT_CLASSIFICATION	i18n[codecompletion.prefs.table.col.config=Configuration]
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.hint=Display index details]
WITHOUT_CLASSIFICATION	i18n[DataTypesTab.hint=Show all the data types available in DBMS]
WITHOUT_CLASSIFICATION	i18n[TablePriviligesTab.title=Privileges]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.charset=Charset:]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.error.loadpluginlicence=Error generating Licence entry for plugin {0}]
WITHOUT_CLASSIFICATION	i18n[SQLFilterSheet.contentsMsg=You must have the Contents Tab selected to activate the SQL Filter]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.notANormalFile=File is not a normal file.\n Cannot do export to a directory or system file.]
WITHOUT_CLASSIFICATION	i18n[GeneralPreferencesPanel.paths=SQuirreL paths]
WITHOUT_CLASSIFICATION	i18n[oracle.details=Details]
WITHOUT_CLASSIFICATION	i18n[SybaseASEPlugin.title=SybaseASE]
WITHOUT_CLASSIFICATION	i18n[mssql.monitorAsOf=Monitor (as of {0,date,full})]
WITHOUT_CLASSIFICATION	i18n[graph.landscape=landscape]
WITHOUT_CLASSIFICATION	i18n[laf.broderLaf=Look and Feel]
WITHOUT_CLASSIFICATION	i18n[DBUtil.info.executequery=executeQuery: Running SQL:\n '{0}']
WITHOUT_CLASSIFICATION	i18n[ResultTab.limitMessage=Limited to <font color='red'> {0} </font> rows]
WITHOUT_CLASSIFICATION	i18n[dataSetViewerEditableTablePanel.error=Error]
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.transferOptionsBorderLabel=Transfer Options]
WITHOUT_CLASSIFICATION	i18n[syntax.font=Select font color]
WITHOUT_CLASSIFICATION	i18n[syntax.prefSyntaxHint=Syntax Highlighting]
WITHOUT_CLASSIFICATION	i18n[favs.deletelFolder=Are you sure to want to delete the folder \"{0}\" and all of its contents?]
WITHOUT_CLASSIFICATION	i18n[syntax.switchingNotSupported=Switching the editor of a runninig session is not supported.\nYou may switch the entry area in the New Session Properties dialog]
WITHOUT_CLASSIFICATION	i18n[laf.otmFiles=OTM files]
WITHOUT_CLASSIFICATION	i18n[HibernateSQLPanel.appendSql=Append]
WITHOUT_CLASSIFICATION	i18n[ColumnPriviligesTab.title=Column Privileges]
WITHOUT_CLASSIFICATION	i18n[ToolsPopupController.toolspopupmsg=Please try out the Tools popup by hitting ctrl+t in the SQL Editor. Do it three times to stop this message.]
WITHOUT_CLASSIFICATION	i18n[graph.orderPksConstr=order PKs/constraints on top]
WITHOUT_CLASSIFICATION	i18n[resultFrame.stayOnTop=Stay on top]
WITHOUT_CLASSIFICATION	i18n[PreLaunchHelperImpl.backupFailedMessage=Backup of existing files failed. Installation cannot proceed]
WITHOUT_CLASSIFICATION	i18n[codecompletion.prefs.table.udfWithParams=UDF with params]
WITHOUT_CLASSIFICATION	i18n[DatabaseMetaData.searchableTypeSearchable=supports all WHERE]
WITHOUT_CLASSIFICATION	i18n[ImportDataIntoTableExecutor.success={0,choice,0#No records|1#One record|1<{0} records} successfully inserted.]
WITHOUT_CLASSIFICATION	i18n[graph.btnCancel=Cancel]
WITHOUT_CLASSIFICATION	i18n[syntax.configAutoCorr=Configure auto correct /abreviation]
WITHOUT_CLASSIFICATION	i18n[SystemFunctionsTab.title=System Functions]
WITHOUT_CLASSIFICATION	i18n[mssql.scriptUsers=Script database users and database roles]
WITHOUT_CLASSIFICATION	i18n[mysql.defaultValue=Default Value]
WITHOUT_CLASSIFICATION	i18n[AbstractRefactoringDialog.showButtonLabel=Show SQL]
WITHOUT_CLASSIFICATION	i18n[MappingRoot.cfgName=Configuration]
WITHOUT_CLASSIFICATION	i18n[DeleteTablesCommand.progressDialogTitle=Analyzing tables to delete]
WITHOUT_CLASSIFICATION	i18n[SchemaTableUpdateWhatItem.allObjects=All Objects]
WITHOUT_CLASSIFICATION	i18n[mssql.scriptingOptionsDlg=Scripting options allow you to specify how an object will be scripted.]
WITHOUT_CLASSIFICATION	i18n[sqlval.anonymous2=Anonymous]
WITHOUT_CLASSIFICATION	i18n[ViewLogsSheet.error.clearlogcontents=Error clearing the log contents]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.notWriteable=File is not writeable.\nChange file permissions or select a differnt file for export.]
WITHOUT_CLASSIFICATION	checkbox for whether to interpret input leniently or not i18n[dataTypeTime.inexact=allow inexact format on input]
WITHOUT_CLASSIFICATION	i18n[userscript.propsDlgOk=OK]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesController.cacheDeleteFailed=Could not delete {0}]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.exportCompleteTable=Export complete table]
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.hint=Display index details]
WITHOUT_CLASSIFICATION	i18n[syntax.comments=Comments]
WITHOUT_CLASSIFICATION	i18n[ColumnsTab.hint=Show columns for the selected table]
WITHOUT_CLASSIFICATION	i18n[editWherColsSheet.reset=Reset]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesPanel.refreshSchemas=Connect database to refresh Schema table]
WITHOUT_CLASSIFICATION	i18n[i18n.noNativeToAsciiOutDirNoDir=native2Ascii output dir is not a directory. native2Ascii will not be executed.]
WITHOUT_CLASSIFICATION	i18n[editextras.errorRemoveNewLines=Error processing Remove NewLines SQL command: {0}]
WITHOUT_CLASSIFICATION	i18n[FileEditorDropTargetListener.internalErrorMessage=Internal error occurred. See log for details]
WITHOUT_CLASSIFICATION	i18n[graph.new=New]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.lineSeparatorLabel=Line Separator:]
WITHOUT_CLASSIFICATION	i18n[graph.viewTableInObjectTree=View table in Object tree]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.queryStatistics=Query {0} of {1} elapsed time (seconds) - Total: {2}, SQL query: {3}, Building output: {4}]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.export44=Export]
WITHOUT_CLASSIFICATION	i18n[graph.selGraph=Select graph]
WITHOUT_CLASSIFICATION	i18n[generalPropertiesPanel.top=Top]
WITHOUT_CLASSIFICATION	i18n[DatabaseMetaData.nullableTypeNullable=true]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.newConfig=New]
WITHOUT_CLASSIFICATION	i18n[SQLScriptPreferencesPanel.prefsToolTip=Table names appear in scripts as SCHEMA.TABLE]
WITHOUT_CLASSIFICATION	i18n[DBCopyGlobalPreferencesTab.hint=Preferences for DB Copy]
WITHOUT_CLASSIFICATION	i18n[mssql.filesToGenerate=Files to Generate]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.configName=Configuration name]
WITHOUT_CLASSIFICATION	i18n[MappingRoot.classpath=Classpath]
WITHOUT_CLASSIFICATION	i18n[mssql.includeHeaders=Include descriptive headers in the script files]
WITHOUT_CLASSIFICATION	i18n[HibernateTabController.title=Hibernate]
WITHOUT_CLASSIFICATION	i18n[sqlscript.configYourMultiTableScriptCancel=Cancel]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.fileOverwrite=File {0} already exists.\n\nDo you wish to overwrite this file?]
WITHOUT_CLASSIFICATION	i18n[ColumnsTab.title=Columns]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.exportSelection=Export selection]
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.statementSeparatorToolTip=When multiple statements are selected, use this to separate them into single statements.]
WITHOUT_CLASSIFICATION	i18n[sqlval.dbmsName=DBMS Name:]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.licences=Licences]
WITHOUT_CLASSIFICATION	i18n[RefactoringPreferencesPanel.quoteCheckboxLabel=Quote identifiers in scripts]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.dailyLabel=Daily]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.fileOpenError=There was an error opening file {0}.\nThe error was:\n{1}]
WITHOUT_CLASSIFICATION	i18n[userscript.propsDlgCheck=Check]
WITHOUT_CLASSIFICATION	i18n[ProcedureSourceTab.cLanguageProcMsg=This is a C-language routine. The source code is unavailable.]
WITHOUT_CLASSIFICATION	i18n[laf.lafWarning=Note: Controls may not be drawn correctly after changes in this panel until the application is restarted.]
WITHOUT_CLASSIFICATION	set up dialog to ask user if it is ok to proceed IMPORTANT: this dialog is SYNCHRONOUS (ie. we do not proceed until user gives a response). This is critical since this function provides a return value to its caller that depends on the user input. i18n[baseDataSetViewerDestination.warning=Warning]
WITHOUT_CLASSIFICATION	i18n[graph.zoomPrint=Zoom/Print]
WITHOUT_CLASSIFICATION	i18n[graph.removeFoldingPoint=remove folding point]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesController.cacheDeleted=Deleted {0}]
WITHOUT_CLASSIFICATION	i18n[ConnectionStatusTab.hint=Connection Status]
WITHOUT_CLASSIFICATION	i18n[editWhereColsSheet.editWhereColumns=Edit 'WHERE' columns]
WITHOUT_CLASSIFICATION	i18n[mssql.allViews=All views]
WITHOUT_CLASSIFICATION	i18n[sqlscript.tableScriptCancel=Cancel]
WITHOUT_CLASSIFICATION	i18n[xmlReformatter.yes=YES]
WITHOUT_CLASSIFICATION	i18n[DropTableDialog.cascadeLabel=Cascade Constraints:]
WITHOUT_CLASSIFICATION	i18n[userscript.dlgTabScriptsAdd2=Add...]
WITHOUT_CLASSIFICATION	i18n[ErrorStream.oneerror=1 error detected]
WITHOUT_CLASSIFICATION	i18n[SessionSQLPropertiesPanel.removeMultiLineComment=Remove multi line comment (...) from SQL before sending to database]
WITHOUT_CLASSIFICATION	i18n[dataTypeDate.useDefaultFormat=Use default format ({0})]
WITHOUT_CLASSIFICATION	i18n[mysql.selectSingleTable=Must select a single table]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.replaceFile=(In command, the string {0} is replaced by the file name when Executed.)]
WITHOUT_CLASSIFICATION	i18n[userscript.tableColName=Name]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.qureyParams=Query Parameters]
WITHOUT_CLASSIFICATION	i18n[dateTypeTimestamp.timestampInWhere=Do not use Timestamp in WHERE clause]
WITHOUT_CLASSIFICATION	i18n[dataTypeString.limitReadOnly=Limit read only on columns with these names:]
WITHOUT_CLASSIFICATION	i18n[firebird.domainDetails=Display domain details]
WITHOUT_CLASSIFICATION	i18n[AbstractRefactoringDialog.executeButtonLabel=Execute]
WITHOUT_CLASSIFICATION	i18n [MemoryPanel.gcStatus={0}\n\n Sessions waiting for garbage collection:\n ==================================================\n {1}\n Sessions open:\n ==================================================\n {2}\n Sessions garbage collected:\n ==================================================\n {3}\n]
WITHOUT_CLASSIFICATION	i18n[oracle.sortsPerExec=Sorts per Row]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.exec=Executing SQL]
WITHOUT_CLASSIFICATION	i18n[CodeCompletionPreferencesPanel.maxLastSelectedCompletionNames=If you call code completion without being in the scope of a table, for which number of tables the parser last found would you like to see colums on top of the completion list?]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvController.invalidSeparator=You must provide a single separator character or check "Use tab" to use the tab character.]
WITHOUT_CLASSIFICATION	i18n[AliasesListInternalFrame.error.ctrlF4key=Probably closed by the ctrl F4 key. See BasicDesktopPaneUi.CloseAction]
WITHOUT_CLASSIFICATION	i18n[laf.menuFontEanbled=Enabled]
WITHOUT_CLASSIFICATION	i18n[SyntaxPlugin.uncomment=uncomment]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.sepeartorTab=Use tab character]
WITHOUT_CLASSIFICATION	i18n[DefaultDatabaseExpander.error.retrieveschemaprivs=Unable to retrieve schema privileges]
WITHOUT_CLASSIFICATION	label for the date format combo, used to enable/disable text i18n[dataTypeTime.useDefaultFormat2= or locale-dependent format:]
WITHOUT_CLASSIFICATION	i18n[sqlval.version=Version:]
WITHOUT_CLASSIFICATION	i18n[ResultTab.rowCountLabel=Row Count:]
WITHOUT_CLASSIFICATION	i18n[codecompletion.beingLoaded=Code competion infomation is still being loaded.\nTry again later.]
WITHOUT_CLASSIFICATION	i18n[KeywordsTab.hint=Show all the non-standard Keywords available in DBMS]
WITHOUT_CLASSIFICATION	i18n[HibernateSQLPanel.sql=SQL:]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.showAscii=Show ASCII as chars]
WITHOUT_CLASSIFICATION	i18n[SyntaxPlugin.find=find]
WITHOUT_CLASSIFICATION	i18n[UpdateControllerImpl.softwareVersionCurrentMsg=This software's version is the most recent]
WITHOUT_CLASSIFICATION	i18n[UpdateSummaryDialog.applyLabel=Apply Changes]
WITHOUT_CLASSIFICATION	i18n[dataTypeOther.readContentsWhenLoaded=Read contents when table is first loaded and display as string]
WITHOUT_CLASSIFICATION	i18n[AbstractRefactoringDialog.editButtonLabel=Edit SQL]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.errWhileExecutin=Error while executing command.\nThe command was:\n {0}\nThe error was:\n{1}]
WITHOUT_CLASSIFICATION	add button for applying file & cmd info without doing anything else i18n[popupeditableIoPanel.applyFile=Apply File & Cmd]
WITHOUT_CLASSIFICATION	i18n[graph.name=Name]
WITHOUT_CLASSIFICATION	i18n[hashtabledataset.unsupported=<Unsupported>]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.noSQLPanel=To run a bookmark you must open this window\nusing the "Edit Bookmarks" toolbar button of a Session window.\nThe bookmars SQL Code will then be written to the Session's SQL editor.]
WITHOUT_CLASSIFICATION	i18n[SyntaxPlugin.autocorr=autocorr]
WITHOUT_CLASSIFICATION	i18n[UpdateControllerImpl.changesRecordedTitle=Changes Recorded]
WITHOUT_CLASSIFICATION	i18n[dataTypeTime.useDefaultFormat=Use default format ({0})]
WITHOUT_CLASSIFICATION	i18n[SpecialColumnMapping.NULL=NULL]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesPanel.schemaTableUpdateLable1=Set]
WITHOUT_CLASSIFICATION	i18n[ColumnDiffDialog.missingLabel=Missing]
WITHOUT_CLASSIFICATION	i18n[oracle.triggerColumns=Columns]
WITHOUT_CLASSIFICATION	i18n[mssql.extProps=Include extended properties]
WITHOUT_CLASSIFICATION	i18n[syntax.textLimitLineWidth=Text limit line width]
WITHOUT_CLASSIFICATION	i18n[CreateDriverAction.error.selectingwindow=Error selecting window]
WITHOUT_CLASSIFICATION	i18n[ExcelSettingsPanel.sheetName=Sheet name]
WITHOUT_CLASSIFICATION	i18n[dataSetViewerEditableTablePanel.selectionNeeded=You must select something in the table to delete.]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.toObtainSessionFactFactoryProvider=Invoke the user defined provider method below:]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.errorGettingPath=Error getting full path name for selected file]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.generalSettings=General settings for the current session]
WITHOUT_CLASSIFICATION	i18n[Session.driverCompliance3.0=The driver being used for alias ''{0}'' is not JDBC 3.0 compliant.\nYou should consider getting a more recent version of this driver]
WITHOUT_CLASSIFICATION	i18n[javaBeanDataSet.name=Property Name]
WITHOUT_CLASSIFICATION	i18n[ProgressCallBackDialog.defaultLoadingPrefix=Loading:]
WITHOUT_CLASSIFICATION	i18n[SchemaTableCboItem.schemaID.dontLoad=Don't load]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.ConfiguirationDef=Configuration definition]
WITHOUT_CLASSIFICATION	i18n[LogPanel.viewLastLog=Press to view last log entry]
WITHOUT_CLASSIFICATION	i18n[CopyTablesCommand.loadingPrefix=Analyzing table:]
WITHOUT_CLASSIFICATION	i18n[OraclePluginPreferencesPanel.showErrorOffsetTT=Creates and uses a user-defined function that is used to determine the syntax error token]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.precisionLabel=Precision: ]
WITHOUT_CLASSIFICATION	i18n[mssql.oneFile=Create one file]
WITHOUT_CLASSIFICATION	i18n[syntax.operators=Operators]
WITHOUT_CLASSIFICATION	i18n[userscript.classNotFound=Class {0} not found]
WITHOUT_CLASSIFICATION	i18n[userscript.dlgTabScriptsAdd=Add...]
WITHOUT_CLASSIFICATION	i18n[mysql.structure=Structure]
WITHOUT_CLASSIFICATION	i18n[SQLPanel.copylastbutton.hint=Copy current SQL history to entry area]
WITHOUT_CLASSIFICATION	i18n[UpdateManagerDialog.portLabel=Port:]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.applyConfigChanges=Apply changes to this configuration]
WITHOUT_CLASSIFICATION	i18n[editextras.day=Day]
WITHOUT_CLASSIFICATION	i18n[CancelStatementThread.cancelTimedOut=Failed to cancel statement within one second. Perhaps your driver/database does not support cancelling statements. If cancelling succeeds later you'll get a further messages.]
WITHOUT_CLASSIFICATION	i18n[DriversList.tooltiptext=List of database drivers that can be used to configure an alias]
WITHOUT_CLASSIFICATION	i18n[RowNumberTableColumn.rowNumber=Row Number]
WITHOUT_CLASSIFICATION	i18n[userscript1.scriptClass=Script class]
WITHOUT_CLASSIFICATION	i18n[userscript.enterScriptClass=Please enter a script class]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.info.identicalrows=This operation will result in {0} identical rows.\nDo you wish to proceed?]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvCommand.failedToWriteFile=Failed to write file\n{0}\nError message\n{1}\nSee last log entry for details.]
WITHOUT_CLASSIFICATION	i18n[HibernateSQLPanel.Execute=Execute SQL]
WITHOUT_CLASSIFICATION	i18n[SQLScriptPreferencesPanel.borderTitle=SQL Script Preferences]
WITHOUT_CLASSIFICATION	i18n[sqlval.connected=Connected to the SQL Validation web service]
WITHOUT_CLASSIFICATION	i18n[editWhereColsSheet.shouldIncludePKs=The 'use' window should include at least the primary keys for the table.]
WITHOUT_CLASSIFICATION	i18n[DerbyDialect.columnLengthMessage=Derby only allows varchar column length to be increased]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.cancelButtonLabel=Cancel]
WITHOUT_CLASSIFICATION	i18n[graph.unit=Unit]
WITHOUT_CLASSIFICATION	i18n[PluginSummaryDialog.unload=Unload]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.formatCSV=Export CSV file]
WITHOUT_CLASSIFICATION	i18n[AbstractRefactoringDialog.editButtonLabel=Edit SQL]
WITHOUT_CLASSIFICATION	i18n[ReconnectAction.confirmReconnect=Close the current connection to the database and open a new one?]
WITHOUT_CLASSIFICATION	i18n[SQLScriptPreferencesPanel.updateRefActionCheckboxLabel=Add update referential action to the FK definition]
WITHOUT_CLASSIFICATION	i18n[generalPropertiesPanel.right=Right]
WITHOUT_CLASSIFICATION	set up Cancel button i18n[cellDataPopup.cancel=Cancel]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.welcome=Welcome]
WITHOUT_CLASSIFICATION	label for the date format combo, used to enable/disable text i18n[dateTypeTimestamp.orLocaleDependend= or locale-dependent format:]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.enterName=Please enter a bookmark name with no blanks]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesController.title=Schemas]
WITHOUT_CLASSIFICATION	i18n[UpdateControllerImpl.updateCheckFailedTitle=Update Check Failed]
WITHOUT_CLASSIFICATION	i18n[graph.invalidNumberFormat=Invalid number format. Can not calculate new unit.]
WITHOUT_CLASSIFICATION	i18n[SQLPanel.openSqlHistory.hint=Open SQL History]
WITHOUT_CLASSIFICATION	i18n[editextras.escapeDate=Escape date]
WITHOUT_CLASSIFICATION	i18n[FactoryProviderController.fileCreateFailed=File {0} could not be created: {1}]
WITHOUT_CLASSIFICATION	i18n[sessionPropertiesPanel.schemaPrefix=Limit Schema Objects using these comma-delimited prefixes:]
WITHOUT_CLASSIFICATION	i18n[xmlRefomatter.noXml=The data does not contain any XML tags. No reformatting done.]
WITHOUT_CLASSIFICATION	i18n[CreateDataScriptOfCurrentSQLCommand.noQuery=No query found to create the script from.]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.error.congen=Error generating Contents file]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.rowsSelected={0} Row(s) Selected]
WITHOUT_CLASSIFICATION	i18n[SystemFunctionsTab.hint=Show all the system functions available in DBMS]
WITHOUT_CLASSIFICATION	i18n[oracle.buffer.getsPerRow=Buffer Gets per Row]
WITHOUT_CLASSIFICATION	i18n[oracle.displayTriggerDetails=Display trigger details]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.hint=Display trigger details]
WITHOUT_CLASSIFICATION	i18n[Application.info.setjdbcdebuglogsuccess=JDBC debug log set to output stream successfully]
WITHOUT_CLASSIFICATION	i18n[SQLHistoryDlg.filtered=Filtered]
WITHOUT_CLASSIFICATION	i18n[graph.scriptTable=Script table]
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.nodeUserMarks=User bookmarks]
WITHOUT_CLASSIFICATION	i18n[PreLaunchHelperImpl.installUpdatesMessage=Updates are ready to be installed. Install them now?]
WITHOUT_CLASSIFICATION	i18n[oracle.firstLoadTime=First Load Time]
WITHOUT_CLASSIFICATION	i18n[laf.tabHint=Fonts]
WITHOUT_CLASSIFICATION	i18n[editextras.convertStringBufErr=Error executing convert to StringBuffer command: {0}]
WITHOUT_CLASSIFICATION	i18n[syntax.abrevclose=Close]
WITHOUT_CLASSIFICATION	i18n[graph.graphRemoved=Removed graph file "{0}"]
WITHOUT_CLASSIFICATION	i18n[firebird.triggerDetails=Display trigger details]
WITHOUT_CLASSIFICATION	i18n[ShowDriverWebsiteCommand.comfirm=No WebSite URL for the specified driver. Would you like to add one?]
WITHOUT_CLASSIFICATION	i18n[userscript.scriptCompleted=Script completed]
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.hint=Display index details]
WITHOUT_CLASSIFICATION	i18n[mysql.grants=MySQL Grants]
WITHOUT_CLASSIFICATION	i18n[Application.error.showhelpwindow=Error showing help window]
WITHOUT_CLASSIFICATION	i18n[graph.hideScrollBars=Hide scrollbars]
WITHOUT_CLASSIFICATION	i18n[ConnectionStatusTab.title=Status]
WITHOUT_CLASSIFICATION	i18n[SchemaInfoCacheSerializer.beginStore=Starting to write schema cache for Alias {0}. file: {1}]
WITHOUT_CLASSIFICATION	i18n[mssql.activity=Displays the current activity on the SQL Server.]
WITHOUT_CLASSIFICATION	i18n[ColumnListDialog.cancelButtonLabel=Cancel]
WITHOUT_CLASSIFICATION	i18n[graph.formats=Formats]
WITHOUT_CLASSIFICATION	i18n[oracle.sessionStatistics=Session Statistics]
WITHOUT_CLASSIFICATION	i18n[codeCompletion.UDFWithoutParams=user defined function without parameter info: myFunct()]
WITHOUT_CLASSIFICATION	i18n[LogPanel.openLogs=Press to open logs]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	String NULL = "<null>"; i18n[resultSetMentaDataSet.val=Value]
WITHOUT_CLASSIFICATION	i18n[mssql.scriptPermission=Script object-level permissions]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.lengthLabel=Length: ]
WITHOUT_CLASSIFICATION	i18n[graph.newGraph=New table graph]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.nodeSquirrelMarks=SQuirreL bookmarks]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.dialectLabel=Dialect: ]
WITHOUT_CLASSIFICATION	i18n[TimeDateFunctionsTab.hint=Show all the Time/Date functions available in DBMS]
WITHOUT_CLASSIFICATION	i18n[oracle.rowsPerExec=Rows per Exec]
WITHOUT_CLASSIFICATION	i18n[SQLHistoryDlg.filterCboContains=contains]
WITHOUT_CLASSIFICATION	i18n[dataTypeBlob.readOnFirstLoad=Read contents when table is first loaded:]
WITHOUT_CLASSIFICATION	i18n[DerbyPlugin.prefsHint=Set preferences for Derby Plugin]
WITHOUT_CLASSIFICATION	i18n[graphToFile.fileChooserTitle=Save image file(s)]
WITHOUT_CLASSIFICATION	i18n[mssql.msdos=MS-DOS text (OEM)]
WITHOUT_CLASSIFICATION	i18n[mysql.displayProcesses=(MySQL) Display database processes]
WITHOUT_CLASSIFICATION	i18n[exportconfig.ioErrorWritingTo=IO Error writing to\n{0}]
WITHOUT_CLASSIFICATION	i18n[SQLScriptPreferencesPanel.deleteActionLabel=Action to take on delete:]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.table=Table]
WITHOUT_CLASSIFICATION	i18n[LogPanel.titleError=Last log entry (Entry type: ERROR)]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.btnTextView=View]
WITHOUT_CLASSIFICATION	i18n[DBUtil.info.bindclobmem=bindClobVarInMemory: binding '{0}' bytes]
WITHOUT_CLASSIFICATION	i18n[OraclePrefsPanel.Description= "Interactions with Schema Alias properties (see 'Schemas' tab):\n \n 1. 'Load all Schemas, cache none': Oracle Alias properties will take effect immediately.\n \n 2. 'Load and cache all Schemas': Oracle Alias properties will take effect on next 'Refresh all' inside a Session.\n \n 3. 'Specify Schema loading and Caching': Oracle Alias properties will take effect when the Schemas table on the 'Schemas' tab is refreshed.\n \n Note: If Schema Alias properties are set to load all cache none and Oracle Alias properties is set to 'Allow all Schemas' this may result in very long Session startup time.]
WITHOUT_CLASSIFICATION	i18n[dataTypeDate.full=Full ({0})]
WITHOUT_CLASSIFICATION	i18n[DumpApplicationCommand.error.dumpingsystemprops=Error dumping metadata]
WITHOUT_CLASSIFICATION	i18n[OraclePluginPreferencesPanel.hideRecycleBinCheckBoxToolTip=Recycle Bin tables are a Flashback Database Option in Oracle 10g]
WITHOUT_CLASSIFICATION	i18n[userscript.selScriptToDel=Please select the script to delete]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.config=Configuration]
WITHOUT_CLASSIFICATION	i18n[DriversListInternalFrame.error.ctrlF4key=Probably closed by the ctrl F4 key. See BasicDesktopPaneUi.CloseAction]
WITHOUT_CLASSIFICATION	i18n[DatabaseMetaData.nullableTypeNoNulls=false]
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.hint=Display sequence details]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[OraclePluginPreferencesPanel.hideRecycleBinCheckBoxLabel=Remove Recycle Bin Tables from the Object Tree]
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.truncateTable=Truncate table before inserting data]
WITHOUT_CLASSIFICATION	i18n[graphToClipboard.copyButton=Copy image from selected tab]
WITHOUT_CLASSIFICATION	i18n[AbstractRefactoringDialog.cancelButtonLabel=Cancel]
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.useCustomQTToolTip=Gives enhanced capabilities over the default query tokenizer for handling {0} scripts]
WITHOUT_CLASSIFICATION	i18n[oracle.parseSchema=Parse Schema]
WITHOUT_CLASSIFICATION	i18n[graph.addTableRefByNoHit=add table referenced by (no hit on FK)]
WITHOUT_CLASSIFICATION	i18n[sqlparam.quoteValues=Quote Values]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.statusLableSuccessMsg=Connected Successfully]
WITHOUT_CLASSIFICATION	i18n[Application.error.setlaf=Error setting LAF]
WITHOUT_CLASSIFICATION	i18n[FactoryProviderDialog.ok=OK]
WITHOUT_CLASSIFICATION	i18n[ImportTableDataCommand.cancel=Cancel]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.commandReturnNot0=The convention for command returns is that 0 means success, but this command returned {0}.\nDo you wish to import the file contents anyway?]
WITHOUT_CLASSIFICATION	i18n[dataTypeJavaObject.sqlJavaObjectType=SQL JavaObject (SQL type 2000)]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.useGlobalPrefsFormatingExcel=Use formating as configured in Global Prefs (recommended for MS Excel)]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesPanel.schemaTableUpdateLable2=in all Schemas to]
WITHOUT_CLASSIFICATION	i18n[firebird.triggerDetails=Display trigger details]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.enterDescription=Please enter a bookmark description]
WITHOUT_CLASSIFICATION	i18n[DBUtil.info.bindbloblength=bindBlobVarInFile: writing '{0}' bytes.]
WITHOUT_CLASSIFICATION	i18n[DerbyPluginPreferencesPanel.readClobsFullyCheckBoxLabel=Enable extended Derby CLOB support]
WITHOUT_CLASSIFICATION	i18n[SessionStartupTimeHintDlg.text=This Session seems to take considerable time to load. You may configure Alias Schema Properties to improve startup performance.]
WITHOUT_CLASSIFICATION	i18n[rowDataInputFrame.insert=Insert]
WITHOUT_CLASSIFICATION	i18n[mysql.tableNamelbl=Table Name:]
WITHOUT_CLASSIFICATION	i18n[userscript.scriptPropsName=Name]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.enableAutoUpdate=Enable Automatic Updates]
WITHOUT_CLASSIFICATION	i18n[ColumnListDialog.primaryKeyTitle=Choose column(s) for primary key]
WITHOUT_CLASSIFICATION	i18n[exportconfig.errorWritingPrefs=Error occured writing to preferences file: {0}]
WITHOUT_CLASSIFICATION	i18n[mssql.remove=<< Remove]
WITHOUT_CLASSIFICATION	i18n[sqlval.pwdPref=Password:]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesPanel.loadAllAndCacheNone=Load all Schemas, cache none]
WITHOUT_CLASSIFICATION	i18n[syntax.hasBeenAutocorr={0} has been auto corrected / extended to {1}. To configure auto correct / abreviations see Menu Session --> Syntax --> Configure auto correct / abreviation]
WITHOUT_CLASSIFICATION	i18n[OracleXmlTypeDataTypeComponent.cellErrorMsg=<Error: see log file>]
WITHOUT_CLASSIFICATION	i18n[syntax.selColor2=Select Color]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.text=Text]
WITHOUT_CLASSIFICATION	i18n[sqlval.settingsAnon=Anonymous]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.noFile=No File Selected]
WITHOUT_CLASSIFICATION	i18n[CodeCompletionPreferencesPanel.numberOfTables=number of tables]
WITHOUT_CLASSIFICATION	i18n[firebird.showView=Show view source]
WITHOUT_CLASSIFICATION	i18n[DialectUtils.columnCommentUnsupported={0} doesn''t support column comments]
WITHOUT_CLASSIFICATION	i18n[favs.savedQueries=Saved Queries]
WITHOUT_CLASSIFICATION	i18n[PostgresPlugin.showViewSource=Show view source]
WITHOUT_CLASSIFICATION	i18n[FactoryProviderController.fileCreated=File {0} has been successfully created.]
WITHOUT_CLASSIFICATION	i18n[TableTypesTab.title=Table Types]
WITHOUT_CLASSIFICATION	i18n[SpecialColumnMapping.SKIP=Skip]
WITHOUT_CLASSIFICATION	i18n[GeneralPreferencesPanel.squirrelUserPath=User directory: -userdir {0}]
WITHOUT_CLASSIFICATION	i18n[graph.dina3=Din A 3]
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.siteTypeLabel=Site Type:]
WITHOUT_CLASSIFICATION	i18n[MyURLClassLoader.noAssignCheck=Failed to load {0} in {1} to check if it is assignable to {2}. Reason: {3}]
WITHOUT_CLASSIFICATION	i18n[ImportTableDataCommand.sqlErrorOccured=An error occured while reading database data.] i18n[ImportTableDataCommand.error=Error]
WITHOUT_CLASSIFICATION	i18n[DBUtil.error.tablenotfound=Couldn't locate table '{0}' in schema '(1)']
WITHOUT_CLASSIFICATION	i18n[laf.menus=Menus]
WITHOUT_CLASSIFICATION	i18n[graph.invalidName=Invalid name]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.executeError=Execute Error]
WITHOUT_CLASSIFICATION	i18n[mssql.unicode=International text (Unicode)]
WITHOUT_CLASSIFICATION	i18n[ImportDataIntoTableExecutor.sqlException=A database error occured while inserting data] i18n[ImportDataIntoTableExecutor.error=Error]
WITHOUT_CLASSIFICATION	i18n[DownloadStatusEventHandler.changesRecordedMsg=Requested changes will be made when SQuirreL is restarted]
WITHOUT_CLASSIFICATION	i18n[WhereClausePanel.operatorsLabel=Operators]
WITHOUT_CLASSIFICATION	i18n[graph.height=Height]
WITHOUT_CLASSIFICATION	i18n[InformixExceptionFormatter.notAvailableMsg=Not Available]
WITHOUT_CLASSIFICATION	i18n[mysql.hintTabStatus=(MySQL) Table Status]
WITHOUT_CLASSIFICATION	i18n[syntax.addRow=Add row]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.error.loadlicencefile=Error retrieving Licence file URL for {0}]
WITHOUT_CLASSIFICATION	i18n[dataSetViewerTablePanel.textCantBeConverted=The given text cannot be converted into the internal object.\nThe database has not been changed.\nThe conversion error was:\n{0}]
WITHOUT_CLASSIFICATION	i18n[mysql.processes=MySQL Processes]
WITHOUT_CLASSIFICATION	i18n[editWhereColsPanel.noPK=The table ''{0}'' doesn't have a primary key.]
WITHOUT_CLASSIFICATION	i18n[CancelStatementThread.closeFailed=Failed to close statement. Propably the driver/RDDBMS does not support canceling statements. See logs for further details ({0})]
WITHOUT_CLASSIFICATION	i18n[xmlRefomatter.malformedXml=Possible mal-formed XML:\n Starting tag was: {0}\nEnding Tag was: {1}\nContinuing with reformatting XML."]
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.hint=Display sequence details]
WITHOUT_CLASSIFICATION	i18n[syntax.corExt=correction / extension]
WITHOUT_CLASSIFICATION	i18n[oracle.displaysSequenceDetails=Display sequence details]
WITHOUT_CLASSIFICATION	i18n[MemoryPanel.statusDialogTitle=Session garbage collection status]
WITHOUT_CLASSIFICATION	i18n[mssql.refreshNow=Refresh Now]
WITHOUT_CLASSIFICATION	i18n[rowDataInputFrame.propName=Input New Row Data]
WITHOUT_CLASSIFICATION	i18n[mssql.scriptDatabase=Script database]
WITHOUT_CLASSIFICATION	i18n[ResultTab.elapsedTime=Total: {0}, SQL query: {1}, Building output: {2}]
WITHOUT_CLASSIFICATION	i18n[SchemasTab.title=Schemas]
WITHOUT_CLASSIFICATION	i18n[SQLHistoryDlg.title=SQL History for {0}]
WITHOUT_CLASSIFICATION	i18n[mssql.allSps=All stored procedures]
WITHOUT_CLASSIFICATION	i18n[userscript.dlgTabecp=Extra class path]
WITHOUT_CLASSIFICATION	i18n[ColumnListDialog.primaryKeyNameLabel=Primary Key Name: ]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.columnTypeTootTip={0} does not support altering column type]
WITHOUT_CLASSIFICATION	i18n[codeCompletion.UDFWithParams=user defined function with parameter info: myFunct(<IN INTEGER tid>)]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.unknownupdateerror=Unknown problem during update.\nNo count of updated rows was returned.\nDatabase may be corrupted!]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.modifyColumnTitle=Modify Column]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.deleteConfirm=Do you really wish to delete the selected bookmark?]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.OK=OK]
WITHOUT_CLASSIFICATION	i18n[mssql.generateSqlScript=Generate SQL Script]
WITHOUT_CLASSIFICATION	i18n[mysql.openTables=MySQL Open tables]
WITHOUT_CLASSIFICATION	i18n[SybaseASEPlugin.hint=Preferences for SybaseASE]
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.colTypeMappingBorderLabel=Column Type Mapping]
WITHOUT_CLASSIFICATION	i18n[syntax.italic=Italic]
WITHOUT_CLASSIFICATION	i18n[mysql.hintGrants=(MySQL) Grants]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.typeLabel=Type: ]
WITHOUT_CLASSIFICATION	i18n[HQLEntryPanelManager.quoteHQL=Quote HQL]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesPanel.schemaTableTitle=Schema table]
WITHOUT_CLASSIFICATION	i18n[sqlval.loOnAs=Log on as]
WITHOUT_CLASSIFICATION	i18n[Application.info.jdbcwritersuccess=JDBC debug log set to writer successfully]
WITHOUT_CLASSIFICATION	i18n[graph.saveGraph=Save graph]
WITHOUT_CLASSIFICATION	i18n[UpdateControllerImpl.promptToDownloadAvailableUpdatesMsg=There are updates available. Do you want to download them now?]
WITHOUT_CLASSIFICATION	i18n[MysqlTriggerDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[ColumnListDialog.dropTitle=Select Column(s) To Drop]
WITHOUT_CLASSIFICATION	i18n[HibernateSQLPanel.result=SQL result]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.title=SQuirreL SQL Client Help]
WITHOUT_CLASSIFICATION	i18n[ContentsTab.hint=View the contents of the selected table]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.dataTYpe1=Properties for the individual Data Types may be set in the]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.sqlLabel=SQL:]
WITHOUT_CLASSIFICATION	i18n[HibernateSQLPanel.format=Format]
WITHOUT_CLASSIFICATION	i18n[SyntaxPlugin.touppercase=touppercase]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.executeCommand=Execute command (%file will be replaced by export file name)]
WITHOUT_CLASSIFICATION	i18n[IndexesTab.hint=Show indexes for the selected table]
WITHOUT_CLASSIFICATION	i18n[sqlval.clientBorder=Client]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.scriptQueryStatistics=Executed {0} queries; elapsed time (seconds) - Total: {1}, SQL query: {2}, Building output: {3}]
WITHOUT_CLASSIFICATION	[i18n[OrderByClausePanel.orderByClauseLabel=Order By Clause]
WITHOUT_CLASSIFICATION	[i18n[OrderByClausePanel.addLabel=Add]
WITHOUT_CLASSIFICATION	i18n[userscript.execOn=Execute script on {0}]
WITHOUT_CLASSIFICATION	i18n[ValidatorGlobalPreferencesTab.title=SQL Validator]
WITHOUT_CLASSIFICATION	i18n[rowInputDataFrame.conversionToInternErr=The given text cannot be converted into the internal object.\nThe database has not been changed.\nThe conversion error was:\n{0}]
WITHOUT_CLASSIFICATION	i18n[graphToClipboard.closeButton=Close]
WITHOUT_CLASSIFICATION	i18n[xmlReformatter.malformedXmlAt=Malformed XML. No ending tag seen for text starting at:\n{0}]
WITHOUT_CLASSIFICATION	i18n[mssql.allDefaults=All defaults]
WITHOUT_CLASSIFICATION	i18n[graph.rightClickTable=Right click table in object tree to add to graph]
WITHOUT_CLASSIFICATION	i18n[userscript.dlgTabScriptsGenTempl=Generate script template...]
WITHOUT_CLASSIFICATION	i18n[editextras.timeStamp=Time stamp]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.fileOpenErrorHeader=File Open Error]
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[DumpApplicationCommand.title.systemprops=System Properties]
WITHOUT_CLASSIFICATION	i18n[UpdateManagerDialog.pathLabel=Path:]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.testLabel=Test Connection]
WITHOUT_CLASSIFICATION	i18n[AboutBoxDialog.info.startmemtime=Starting memory timer (AboutBox)]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.duringInsert=Exception seen during check on DB. Exception was:\n{0}\nInsert was probably not completed correctly. DB may be corrupted!]
WITHOUT_CLASSIFICATION	i18n[mssql.oneFilePerObject=Create one file per object]
WITHOUT_CLASSIFICATION	i18n[ColumnPriviligesTab.hint=Show access rights for columns in the selected table]
WITHOUT_CLASSIFICATION	[i18n[OrderByClausePanel.orderDirectionLabel=Order Direction]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.overwriteWarning=File Overwrite Warning]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.exportError100=Export Error]
WITHOUT_CLASSIFICATION	i18n [MemoryPanel.gcStatusToolTip={0} Sessions waiting for garbage collection]
WITHOUT_CLASSIFICATION	i18n[MetaDataTab.title=Metadata]
WITHOUT_CLASSIFICATION	i18n[xmlReformatter.no=NO]
WITHOUT_CLASSIFICATION	i18n[hibernate.HibernateTabPanel.connect=Connect/disconnect configuration selected configuration]
WITHOUT_CLASSIFICATION	i18n[sqlscript.configYourMultiTableScriptIxAtEnd=Constraints and indexes at end of script]
WITHOUT_CLASSIFICATION	no first row, so we cannot retrieve the data i18n[DataSetUpdateableTableModelImpl.error.nomatchingrow=Could not find any row in DB matching current row in table]
WITHOUT_CLASSIFICATION	i18n[mysql.structureAndData=Structure and Data]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.numberBase=Number Base:]
WITHOUT_CLASSIFICATION	i18n[HibernateTabPanel.mappedObjects=Mapped objects]
WITHOUT_CLASSIFICATION	i18n[graphToClipboard.title=Copy graph image pages to clipboard]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.mainTabs=Main Tabs:]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.cannotExec=Cannot execute a null command.\nPlease enter a command in the Command field before clicking on Execute.]
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[dataTypeBigDecimal.scaleEceeded=Scale Exceeded: Number of digits to right of decimal place ({0})\nis greater than allowed in column ({1}).]
WITHOUT_CLASSIFICATION	i18n[TableTypesTab.hint=Show all the table types available in DBMS]
WITHOUT_CLASSIFICATION	i18n[oracle.details=Details]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.error.loadchangelog=Error generating Change Log entry for plugin {0}]
WITHOUT_CLASSIFICATION	i18n[dataTypeTimestamp.full=Full ({0})]
WITHOUT_CLASSIFICATION	i18n[HibernateTabController.hint=Support for Hibernate]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.columnNullLabel={0} does not support altering column nullability]
WITHOUT_CLASSIFICATION	i18n[graph.scriptAllTables=Script all tables]
WITHOUT_CLASSIFICATION	i18n[syntax.styles=Syntax Styles]
WITHOUT_CLASSIFICATION	i18n[mysql.showLogs=(MySQL) Show Logs]
WITHOUT_CLASSIFICATION	i18n[AboutBoxDialog.systempanelcreatetime=SystemPanel created in ]
WITHOUT_CLASSIFICATION	i18n[laf.settings=Look and Feel settings]
WITHOUT_CLASSIFICATION	i18n[sqlscript.configYourMultiTableScript=Configure your multi table script:]
WITHOUT_CLASSIFICATION	i18n[sqlval.technologyVersion=Technology Version:]
WITHOUT_CLASSIFICATION	i18n[DialectUtils.columnTypeUnsupported={0} doesn''t support altering a column's type attribute]
WITHOUT_CLASSIFICATION	i18n[hibernate.hqlToSqlShort=Convert HQL to SQL (ctrl + enter)]
WITHOUT_CLASSIFICATION	i18n[popupEditableIoPanel.wrapLines=Wrap Lines on/off]
WITHOUT_CLASSIFICATION	i18n[SchemaInfo.loadingDataTypes=Loading data types]
WITHOUT_CLASSIFICATION	i18n[UpdateManagerDialog.checkButtonLabel=Check]
WITHOUT_CLASSIFICATION	i18n[OraclePrefsPanelController.title=Oracle]
WITHOUT_CLASSIFICATION	i18n[RowIDTab.hint=Show columns that uniquely identify a row]
WITHOUT_CLASSIFICATION	i18n[NumericFunctionsTab.title=Numeric Functions]
WITHOUT_CLASSIFICATION	i18n[userscript.enterScriptName=Please enter a script name]
WITHOUT_CLASSIFICATION	i18n[DialectUtils.columnNameUnsupported={0} doesn''t support altering a column''s name]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.exportCsvFile=Export to file:]
WITHOUT_CLASSIFICATION	i18n[HibernateAttribuiteDataSet.attrClassName=Attribute class name]
WITHOUT_CLASSIFICATION	i18n[AliasPropertiesInternalFrame.title=Properties for Alias: {0}]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.hint=Display trigger details]
WITHOUT_CLASSIFICATION	i18n[mssql.add_Menmonic="]
WITHOUT_CLASSIFICATION	i18n[oracle.diskReadsPerExec=Disk Reads per Exec]
WITHOUT_CLASSIFICATION	i18n[editWhereColsPanel.notUseColumns=Not Use Columns]
WITHOUT_CLASSIFICATION	i18n[UpdateControllerImpl.promptToDownloadAvailableUpdatesTitle=Updates Available]
WITHOUT_CLASSIFICATION	i18n[xmlRefomatter.unexpectedProblem=Unexpected problem during formatting.]
WITHOUT_CLASSIFICATION	i18n[laf.warning=Note: Changes may not take effect until the application is restarted.]
WITHOUT_CLASSIFICATION	i18n[popupEditableIoPanel.wrapWord=Wrap on Word on/off]
WITHOUT_CLASSIFICATION	i18n[dataTypeTime.medium=Medium ({0})]
WITHOUT_CLASSIFICATION	i18n[oracle.diplayScriptDetails=Display script details]
WITHOUT_CLASSIFICATION	i18n[MysqlPlugin.showTriggerSource=Show trigger source]
WITHOUT_CLASSIFICATION	i18n[mysql.withAllFields=With all Fields]
WITHOUT_CLASSIFICATION	i18n[ResultTab.resultsTabTitle=Results]
WITHOUT_CLASSIFICATION	i18n[MappingRoot.driverVersion=JDBC driver version (Hibernate)]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.cancelMsg=Press Cancel to Stop]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.error.loadwelcomefile=Error retrieving Welcome file URL for {0}]
WITHOUT_CLASSIFICATION	i18n[syntax.separators=Separators]
WITHOUT_CLASSIFICATION	i18n[codeCompletion.prefixConfig=Configure function completion for function name prefixes:]
WITHOUT_CLASSIFICATION	i18n[mssql.add=Add >>]
WITHOUT_CLASSIFICATION	i18n[SybaseASEPlugin.showViewSource=Show view source]
WITHOUT_CLASSIFICATION	i18n[exportconfig.errorSavingAliases=Error saving aliases]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.newColumnValue=NewColumn]
WITHOUT_CLASSIFICATION	i18n[codecompletion.unknowntable=unknown table {0}]
WITHOUT_CLASSIFICATION	i18n[ColumnListDialog.dropErrorTitle=Too Many Columns Selected]
WITHOUT_CLASSIFICATION	i18n[HibernateTabPanel.hql=HQL]
WITHOUT_CLASSIFICATION	i18n[SchemaTableUpdateWhatItem.tables=Tables]
WITHOUT_CLASSIFICATION	i18n[dataSetViewerEditableTablePanel.noRowsDeleted={0}\nNo rows deleted from database.]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvController.fileChooserButton=Choose]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.fileChooserError=File Chooser Error]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.useDefaultFormating=Use default formating]
WITHOUT_CLASSIFICATION	i18n[oracle.showTriggerSource=Show trigger source]
WITHOUT_CLASSIFICATION	i18n[DatabaseMetaData.searchableTypePredChar=only supports 'WHERE...LIKE']
WITHOUT_CLASSIFICATION	i18n[userscript.applicableToTarget=Scripts applicable to selected targets]
WITHOUT_CLASSIFICATION	i18n[graph.addFoldingPoint=add folding point]
WITHOUT_CLASSIFICATION	i18n[sqlscript.configYourMultiTableScriptOk=OK]
WITHOUT_CLASSIFICATION	i18n[OraclePlugin.timestampWarning=The setting to use string literals for timestamps may result in the inability to edit tables containing these columns. If this problem occurs, open Global Preferences -> Data Type Controls and set Timestamps to use "JDBC standard escape format"]
WITHOUT_CLASSIFICATION	i18n[PreLaunchHelperImpl.restoreFromBackupTitle=Confirm Restore From Backup
WITHOUT_CLASSIFICATION	i18n[dateTypeTimestamp.typeTimestamp=Timestamp (SQL type 93)]
WITHOUT_CLASSIFICATION	i18n[graph.addRelTables=Add all related tables]
WITHOUT_CLASSIFICATION	i18n[exportconfig.fileSavedTo={0} saved to {1}]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.executeButtonLabel=Execute]
WITHOUT_CLASSIFICATION	set up Update button i18n[cellDataPopUp.updateData=Update Data]
WITHOUT_CLASSIFICATION	i18n[SchemaInfoCacheSerializer.endStore=Finished writing schema cache for Alias{0}. file: {1}]
WITHOUT_CLASSIFICATION	i18n[codecompletion.prefs.table.spWithParams=SP with params]
WITHOUT_CLASSIFICATION	i18n[RefactoringPreferencesPanel.qualifyCheckboxLabel=Qualify table names in scripts with schema]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.server=Server:]
WITHOUT_CLASSIFICATION	set up dialog to ask user if it is ok to proceed IMPORTANT: this dialog is SYNCHRONOUS (ie. we do not proceed until user gives a response). This is critical since this function provides a return value to its caller that depends on the user input. i18n[baseDataSetViewerDestination.warning2=Warning]
WITHOUT_CLASSIFICATION	i18n[DBCopyGlobalPreferencesTab.title=DB Copy]
WITHOUT_CLASSIFICATION	i18n[syntax.enableAutoCorr=Enable auto correct / abreviation]
WITHOUT_CLASSIFICATION	i18n[LockDetailsTab.title=Locks]
WITHOUT_CLASSIFICATION	i18n[oracle.instanceDetails=Details]
WITHOUT_CLASSIFICATION	Columns
WITHOUT_CLASSIFICATION	i18n[RefactoringPreferencesTab.hint=Settings for the Refactoring plugin]
WITHOUT_CLASSIFICATION	i18n[oracle.sortsPerExec=Sorts per Exec]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.modifyColumnTitle=Modify Column]
WITHOUT_CLASSIFICATION	i18n[ImportFileDialog.suggestColumnsIgnoreCase=ignore case]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.noRunSelection=Please select the bookmark to run]
WITHOUT_CLASSIFICATION	i18n[CSVSettingsPanel.csvSettings=CSV settings]
WITHOUT_CLASSIFICATION	i18n[ResultTab.statementLabel=SQL:]
WITHOUT_CLASSIFICATION	i18n[syntax.findExplain=Press F3 to go to next result. Press Ctrl+Shift+F7 to toggle highlight search.]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.exportError8=Export Error]
WITHOUT_CLASSIFICATION	i18n[ImportFileDialog.fileImport=Import file]
WITHOUT_CLASSIFICATION	Add Help, Licence and Change Log nodes to the tree. i18n[HelpViewerWindow.help=Help]
WITHOUT_CLASSIFICATION	i18n[editWherColsSheet.close=Close]
WITHOUT_CLASSIFICATION	i18n[graph.graphRenamed=Renamed "{0}" to "{1}"]
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.exceptionduringcheck=Exception seen during check on DB. Exception was:\n{0}\nUpdate is probably not safe to do.\nDo you wish to proceed?]
WITHOUT_CLASSIFICATION	i18n[WindowManager.errorselectingwindow=Error selecting window]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.scaleLabel=Scale: ]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.objectTabs=Object Tabs:]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.exportError7=Export Error]
WITHOUT_CLASSIFICATION	i18n[DBUtil.info.executequery=executeQuery: Running SQL:\n '{0}']
WITHOUT_CLASSIFICATION	pane.addTab(MergeColumnDialog.i18n.TABBEDPANE_COLUMNS_LABEL, _columnTab);
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.port=Port:]
WITHOUT_CLASSIFICATION	i18n[userscript.selScriptToEdit=Please select the script to edit]
WITHOUT_CLASSIFICATION	i18n[HibernateAttribuiteDataSet.tableCols=Table columns]
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[syntax.prefUseOster=Use Ostermiller editor]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.statusLableFailureMsg=Connection failed. See log for error.]
WITHOUT_CLASSIFICATION	i18n[graph.close=close]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.scriptStmtCounts=Row update counts: {0} Inserts, {1} Selects, {2} Updates, {3} Deletes
WITHOUT_CLASSIFICATION	i18n[DualProgressBarDialog.error.getdialog=getDialog: unable to invokeAndWait for dialog]
WITHOUT_CLASSIFICATION	i18n[graph.refreshAllTables=Refresh all tables]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[cellDataPopUp.cannnotBGeConverted=The given text cannot be converted into the internal object.\n Please change the data or cancel editing.\n The conversion error was:\n{0}]
WITHOUT_CLASSIFICATION	i18n[DBUtil.error.missingtable=getForeignKeySQL: table '{0}' has a column '{1}' that references table '{2}' column '{3}'. However, that table is not being copied. Skipping this foreign key.]
WITHOUT_CLASSIFICATION	i18n[DB2Plugin.showProcedureSource=Show procedure source]
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	If we don't invokeLater here no Short-Cut-Key is sent to the internal frame seen under java version "1.4.1_01" and Linux
WITHOUT_CLASSIFICATION	If we don't invokeLater here no Short-Cut-Key is sent to the internal frame seen under java version "1.4.1_01" and Linux
WITHOUT_CLASSIFICATION	If we don't invokeLater here no Short-Cut-Key is sent to the internal frame seen under java version "1.4.1_01" and Linux
WITHOUT_CLASSIFICATION	This is a funny functionality anyway and leads to problems with the DockTabStyle. E.g. when SessionProperties is closed first tab gets selected.
WITHOUT_CLASSIFICATION	Find the internal Frame in the list of internal frames and remove it.
WITHOUT_CLASSIFICATION	Has to be done directly on the main frame because of racing condition at start up.
WITHOUT_CLASSIFICATION	Has to be done directly on the main frame because of racing condition at start up.
WITHOUT_CLASSIFICATION	root.setDefaultButton(_okBtn);
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	Required with the first beta of JDK1.4.1 to stop this scrollpane from being too tall.
WITHOUT_CLASSIFICATION	Lazily create the event.
WITHOUT_CLASSIFICATION	viewer.removeInternalFrameListener(_lis);
WITHOUT_CLASSIFICATION	Empty block.
WITHOUT_CLASSIFICATION	Instance Creation
WITHOUT_CLASSIFICATION	Primary Key name
WITHOUT_CLASSIFICATION	All rules passed, so enable the buttons.
WITHOUT_CLASSIFICATION	See also loadSchemaNames()
WITHOUT_CLASSIFICATION	Note: If we are here _cacheSchemaIndependentMetaData must be false
WITHOUT_CLASSIFICATION	This seems to be necessary to get background colours correct. Without it labels added to the content pane have a dark background while those added to a JPanel in the content pane have a light background under the java look and feel. Similar effects occur for other look and feels.
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	i18n[I18n.includeTimestamp=Include timestamp in modified properties file]
WITHOUT_CLASSIFICATION	i18n[I18n.CouldNotCreateWorkDir=Could not create Working directory {0}]
WITHOUT_CLASSIFICATION	i18n[I18n.PropsCopyMsg=Copied existing translations from {0} to {1}]
WITHOUT_CLASSIFICATION	i18n[I18n.WorkingDir=Working Directory]
WITHOUT_CLASSIFICATION	i18n[I18n.EditorCommand=Editor command]
WITHOUT_CLASSIFICATION	i18n[I18n.TranlationsGenerationMessage=\n#\n#Missing translation generated by I18n Plugin on {0}\n#]
WITHOUT_CLASSIFICATION	startparts[1] contains our I18n string key followed by </span>
WITHOUT_CLASSIFICATION	i18n[I18n.NativeToAscii=Path to native to Unicode converter (JDK's native2ascii)]
WITHOUT_CLASSIFICATION	i18n[I18n.WorkDirDoesNotExistQuestionCreate=Working directory {0} does not exist.\nDo you want to create it?]
WITHOUT_CLASSIFICATION	i18n[I18n.NativeToAsciiOutDir=native2Ascii output dir]
WITHOUT_CLASSIFICATION	i18n[I18n.noWorkdir=Working directory doesn't exist.\nDo you want to create it?]
WITHOUT_CLASSIFICATION	Dump table types.
WITHOUT_CLASSIFICATION	i18n[I18n.tranlations=Translations]
WITHOUT_CLASSIFICATION	i18n[I18n.bundles=Bundles]
WITHOUT_CLASSIFICATION	i18n[I18n.failedToOpenZip=Failed to open zip/jar {0}]
WITHOUT_CLASSIFICATION	i18n[I18n.ExecuteNativeToAscii=Execute nativeToAscii]
WITHOUT_CLASSIFICATION	i18n[I18n.appendI18nStringsProps=Create/Append I18nString.properties files]
WITHOUT_CLASSIFICATION	i18n[I18n.changeApplicationDefaultLocaleNote=Example VM Parameters to change locale used by SQuirreL: -Duser.language=en -Duser.country=US]
WITHOUT_CLASSIFICATION	i18n[I18n.NoWorkDir=Please choose a work dir to store your translations.]
WITHOUT_CLASSIFICATION	i18n[I18n.locales=Locales]
WITHOUT_CLASSIFICATION	i18n[I18n.generateTemplateComments=Generate template comments for missing translations]
WITHOUT_CLASSIFICATION	i18n[I18n.loadBundles=Load bundles]
WITHOUT_CLASSIFICATION	I18n[DriverPropertiesController.noDriverSelected=No driver available in this Alias.\nCan not load driver properties tab.]
WITHOUT_CLASSIFICATION	i18n[I18n.WorkdirIsNoDir=The working directory is not a directory.\nNo bundles will be loaded from {0}]
WITHOUT_CLASSIFICATION	I18n[DriverPropertiesController.loadingDriverFailed=Loading JDBC driver "{0}" failed.\nCan not load driver properties tab.]
WITHOUT_CLASSIFICATION	add more space between the label and the button
WITHOUT_CLASSIFICATION	add more space to the top of the component
WITHOUT_CLASSIFICATION	Has to be done here e.g. when "Close All Sessions" menu was used.
WITHOUT_CLASSIFICATION	Needes to be done via event queque because method is not called from the event disptach thread.
WITHOUT_CLASSIFICATION	actions.get(SQLFilterAction.class).setEnabled(false);
WITHOUT_CLASSIFICATION	Needed to guarantee other components a focus lost and to allow to enter the tabs components via tab key in a well defined way (the user can see where the focus is).
WITHOUT_CLASSIFICATION	_tree.addTreeSelectionListener(new ObjectTreeSelectionListener()); _objTreeSelLis = new ObjectTreeSelectionListener(); _tree.addTreeSelectionListener(_objTreeSelLis);
WITHOUT_CLASSIFICATION	Metrics of the component used in the constructor
WITHOUT_CLASSIFICATION	We don't destroy the timer when there's nothing happening because it would mean a lot more work on every single AWT event that gets dispatched.
WITHOUT_CLASSIFICATION	break when first braket found
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	void sessionInternalFrameOpened(SessionInternalFrame sessionInternalFrame, ISession sess);
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	Increases component width by 40 pixels
WITHOUT_CLASSIFICATION	Increases component width by 20 pixels
WITHOUT_CLASSIFICATION	private SimpleAttributeSet _saSetErrorHistory;
WITHOUT_CLASSIFICATION	Thread safe support for every call to this method:
WITHOUT_CLASSIFICATION	if we could not identify which table to edit, tell user
WITHOUT_CLASSIFICATION	if we could not identify which table to edit, tell user
WITHOUT_CLASSIFICATION	if we could not identify which table to edit, tell user
WITHOUT_CLASSIFICATION	if we could not identify which table to edit, tell user
WITHOUT_CLASSIFICATION	Mouse listener used to display popup menu.
WITHOUT_CLASSIFICATION	If the object representing the actual data (i.e. this object) can be edited by the user, then the fw objects need to have a reference to it. Updateable objects must implement an interface derived from IDataSetUpdateableComponent in the net.sourceforge.squirrel_sql.fw.datasetviewer package. If the component does not implement that interface, then we just keep going, but if it does implement it, then we need to tell the DataSetScrollingPanel that the object that fw needs to call is this one.
WITHOUT_CLASSIFICATION	If the file using the base name with no extention exists, it is first. The other files are in order from oldest to newest. The set of files to delete is slightly different depending on whether the base name file exists or not.
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	There are some fields that cannot be used in a WHERE clause, either because there cannot be an exact match (e.g. REAL, FLOAT), or because we may not have the actual data in hand (BLOB/CLOB), or because the data cannot be expressed in a string form (e.g. BINARY). An update to one of those fields will look like we are replacing one row with an identical row (because we can only "see" the fields that we know how to do WHEREs on). Therefore, when we are updating them, there should be exactly one row that matches all of our other fields, and when we are not updating one of these special types of fields, there should be no rows that exactly match our criteria (we hope). We determine whether this field is one that cannot be used in the WHERE clause by checking the value returned for that field to use in the WHERE clause. Any field that can be used there will return something of the form "<fieldName> = <value>", and a field that cannot be used will return a null or zero-length string.
WITHOUT_CLASSIFICATION	There should be one row in the data, so try to move to it
WITHOUT_CLASSIFICATION	we have at least one row, so try to retrieve the object Do Not limit the read of this data
WITHOUT_CLASSIFICATION	return the whole contents of this column in the DB
WITHOUT_CLASSIFICATION	go on to the next item
WITHOUT_CLASSIFICATION	for each row in table, do delete and add to number of rows deleted from DB
WITHOUT_CLASSIFICATION	We need to keep track of the bind var index separately, since the number of column defs may not be the number of bind vars (For example: auto-increment columns are excluded)
WITHOUT_CLASSIFICATION	no support for undo
WITHOUT_CLASSIFICATION	JASON: Removed as part of patch void removeSessionListener(ISessionListener lis);
WITHOUT_CLASSIFICATION	If the user has cancelled the query, don't bother logging an error message. It is likely that the cancel request interfered with the attempt to fetch results from the ResultSet, which is to be expected when the Statement is closed. So, let's not bug the user with obvious error messages that we can do nothing about.
WITHOUT_CLASSIFICATION	Each call to _stmt.getMoreResults() places the to the next output. As long as it is a ResultSet, we process it ...
WITHOUT_CLASSIFICATION	There is no need to close result sets if we call _stmt.getMoreResults() because it implicitly closes any current ResultSet. ON DB2 version 7.1 it is even harmful to close a ResultSet explicitly. _stmt.getMoreResults() will never return true anymore if you do.
WITHOUT_CLASSIFICATION	Implementataion of IDataSetUpdateableTableModel: Delegation to _dataSetUpdateableTableModel
WITHOUT_CLASSIFICATION	always wrap on word boundaries
WITHOUT_CLASSIFICATION	NextCh already done
WITHOUT_CLASSIFICATION	toUpperCase replaces the German ß by ss. This will kill reformating later. Since upperIn is just for building pieces it is OK to place ß here.
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	IApplication app = getApplication(); CursorChanger cursorChg = new CursorChanger(app.getMainFrame()); cursorChg.show(); try { new ShowNativeSQLCommand(_session).execute(); } finally { cursorChg.restore(); }
WITHOUT_CLASSIFICATION	private IntegerIdentifierFactory _idFactory = new IntegerIdentifierFactory();
WITHOUT_CLASSIFICATION	_listeners.add(ISQLExecutionListener.class, lis);
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	I have seen the reference to the outer class being null when this method is called. I have seen it only with the runtime jars and on Linux. I could not reproduce in my IDE.
WITHOUT_CLASSIFICATION	sql contains columns from multiple tables, so we cannot use all of the columns in a WHERE clause and it becomes difficult to know which table (or tables!) an edited column belongs to. Therefore limit the output to be read-only
WITHOUT_CLASSIFICATION	sticky tab was closed
WITHOUT_CLASSIFICATION	Back-off a bit after a hundred updates to allow the UI to update
WITHOUT_CLASSIFICATION	must not be done in the GUI thread
WITHOUT_CLASSIFICATION	Register tabs to display in the details panel for catalog nodes.
WITHOUT_CLASSIFICATION	Register tabs to display in the details panel for procedure nodes.
WITHOUT_CLASSIFICATION	Assume DBMS doesn't support catalogs.
WITHOUT_CLASSIFICATION	No more automatic restarts because key events will restart the parser from now on.
WITHOUT_CLASSIFICATION	DO NOT CHANGE THE VALUES OF THIS CONSTANTS. These constants where introduced to make the parser code more readable. Care was taken. Still it can not be guaranteed that changing a value will not be harmful.
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	use all of the columns
WITHOUT_CLASSIFICATION	private String _sqlOutputMetaDataClassName = IDataSetDestinations.READ_ONLY_TABLE;
WITHOUT_CLASSIFICATION	make sure we are starting clean
WITHOUT_CLASSIFICATION	Note: A CaseInsensitiveString can be a mutable string. In fact it is a mutable string here because this is usually called from within Syntax coloring which uses a mutable string.
WITHOUT_CLASSIFICATION	Note: A CaseInsensitiveString can be a mutable string. In fact it is a mutable string here because this is usually called from within Syntax coloring which uses a mutable string.
WITHOUT_CLASSIFICATION	load all table types with catalog = doi.getCatalog() and schema = doi.getSchema()
WITHOUT_CLASSIFICATION	private transient String[] availableTypesInDataBase;
WITHOUT_CLASSIFICATION	CopyOnWriteArrayList is unfortunately not sort-able as a List. So this will throw an UnsupportedOperationException: Collections.sort(_iTableInfos, new TableInfoSimpleNameComparator()); The following is the best approach according to concurrency master Doug Lea, in this post: http:osdir.com/ml/java.jsr.166-concurrency/2004-06/msg00001.html Here we copy the existing internal array into a new array that is large enough to hold the original and new elements. Then sort it. And finally, create a new CopyOnWriteArrayList with the sorted array.
WITHOUT_CLASSIFICATION	Columns have not yet been loaded
WITHOUT_CLASSIFICATION	If characters don't match but case may be ignored, try converting both characters to uppercase. If the results match, then the comparison scan should continue.
WITHOUT_CLASSIFICATION	Helper methods
WITHOUT_CLASSIFICATION	first time through this method in program, so go cleanup old log files
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	When user leaves a cell after editing it, the contents of that cell need to be converted from a string into an object of the appropriate type before updating the table. However, when the call comes from the Popup window, the data has already been converted and validated. We assume that a String being passed in here is a value from a text field that needs to be converted to an object, and a non-string object has already been validated and converted.
WITHOUT_CLASSIFICATION	When user leaves a cell after editing it, the contents of that cell need to be converted from a string into an object of the appropriate type before updating the table. However, when the call comes from the Popup window, the data has already been converted and validated. We assume that a String being passed in here is a value from a text field that needs to be converted to an object, and a non-string object has already been validated and converted.
WITHOUT_CLASSIFICATION	default is to do nothing. Derived classes must override this to accomplish anything.
WITHOUT_CLASSIFICATION	save for possible future use
WITHOUT_CLASSIFICATION	better safe than sorry!
WITHOUT_CLASSIFICATION	better safe than sorry!
WITHOUT_CLASSIFICATION	save various info about the column for use in user input validation when editing table contents. Note that the columnDisplaySize is included two times, where the first entry may be adjusted for actual display while the second entry is the size expected by the DB. The isNullable() method returns three values that we convert into two by saying that if it is not known whether or not a column allows nulls, we will allow the user to enter nulls and any problems will be caught when they try to save the data to the DB
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	/ Implement the IDataSetTableControls interface, functions needed to support table operations These functions are called from within MyJTable and MyTable to tell those classes how to operate. The code in these functions will be different depending on whether the table is read-only or editable. The definitions below are for read-only operation. The editable table panel overrides these functions with the versions that tell the tables how to set up for editing operations. /
WITHOUT_CLASSIFICATION	double tableWidth =_table.getColumnModel().getTotalColumnWidth() scale;
WITHOUT_CLASSIFICATION	return method.getParameterTypes().length == 1 && method.getParameterTypes()[0] == int.class && method.getReturnType() != Void.TYPE;
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check, so remove them This only applies to Popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check, so remove them This only applies to Popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	if we have seen a property for this DataType before, then the hashmap already exists. Otherwise, we need to create it now.
WITHOUT_CLASSIFICATION	if use is not looking for ASCII chars, or if this one is one that is not printable, then convert it into numeric form
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	if both objs are null, then they matched in the previous test, so at this point we know that at least one of them (or both) is not null. However, one of them may still be null, and we cannot call equals() on the null object, so make sure that the one we call it on is not null. The equals() method handles the other one being null, if it is.
WITHOUT_CLASSIFICATION	if both objs are null, then they matched in the previous test, so at this point we know that at least one of them (or both) is not null. However, one of them may still be null, and we cannot call equals() on the null object, so make sure that the one we call it on is not null. The equals() method handles the other one being null, if it is.
WITHOUT_CLASSIFICATION	First convert the string representation into the binary bytes it is describing
WITHOUT_CLASSIFICATION	data was not fully read in before, so try to do that now
WITHOUT_CLASSIFICATION	If you add this method to one of the standard DataTypes in the fw/datasetviewer/cellcomponent directory, you must also add the name of that DataType class to the list in CellComponentFactory, method getControlPanels, variable named initialClassNameList. If the class is being registered with the factory using registerDataType, then you should not include the class name in the list (it will be found automatically), but if the DataType is part of the case statement in the factory method getDataTypeObject, then it does need to be explicitly listed in the getControlPanels method also.
WITHOUT_CLASSIFICATION	If you add this method to one of the standard DataTypes in the fw/datasetviewer/cellcomponent directory, you must also add the name of that DataType class to the list in CellComponentFactory, method getControlPanels, variable named initialClassNameList. If the class is being registered with the factory using registerDataType, then you should not include the class name in the list (it will be found automatically), but if the DataType is part of the case statement in the factory method getDataTypeObject, then it does need to be explicitly listed in the getControlPanels method also.
WITHOUT_CLASSIFICATION	GUI components - need to be here because they need to be accessible from the event handlers to alter each other's state.
WITHOUT_CLASSIFICATION	end of constructor for inner class
WITHOUT_CLASSIFICATION	we are limiting some things. if the string we have is less than the limit, then we are ok and do not need to re-read (because we already have the whole thing).
WITHOUT_CLASSIFICATION	Total number of threads.
WITHOUT_CLASSIFICATION	Return empty list if source string is empty.
WITHOUT_CLASSIFICATION	Need to adjust param which is 1-based(JDBC) to a 0-based number for array access
WITHOUT_CLASSIFICATION	CLOBs are different from normal data types in that what is actually read from the DB is a descriptor pointing to the data rather than the data itself. During the initial load of the table, the values read from the descriptor may have been limited, but the descriptor itself has been completely read, Therefore we do not need to re-read the datum from the Database because we know that we have the entire descriptor. If the contents of the CLOB have been limited during the initial table load, that will be discovered when we check if the cell is editable and the full data will be read at that time using this descriptor.
WITHOUT_CLASSIFICATION	If you add this method to one of the standard DataTypes in the fw/datasetviewer/cellcomponent directory, you must also add the name of that DataType class to the list in CellComponentFactory, method getControlPanels, variable named initialClassNameList. If the class is being registered with the factory using registerDataType, then you should not include the class name in the list (it will be found automatically), but if the DataType is part of the case statement in the factory method getDataTypeObject, then it does need to be explicitly listed in the getControlPanels method also.
WITHOUT_CLASSIFICATION	If you add this method to one of the standard DataTypes in the fw/datasetviewer/cellcomponent directory, you must also add the name of that DataType class to the list in CellComponentFactory, method getControlPanels, variable named initialClassNameList. If the class is being registered with the factory using registerDataType, then you should not include the class name in the list (it will be found automatically), but if the DataType is part of the case statement in the factory method getDataTypeObject, then it does need to be explicitly listed in the getControlPanels method also.
WITHOUT_CLASSIFICATION	If you add this method to one of the standard DataTypes in the fw/datasetviewer/cellcomponent directory, you must also add the name of that DataType class to the list in CellComponentFactory, method getControlPanels, variable named initialClassNameList. If the class is being registered with the factory using registerDataType, then you should not include the class name in the list (it will be found automatically), but if the DataType is part of the case statement in the factory method getDataTypeObject, then it does need to be explicitly listed in the getControlPanels method also.
WITHOUT_CLASSIFICATION	If you add this method to one of the standard DataTypes in the fw/datasetviewer/cellcomponent directory, you must also add the name of that DataType class to the list in CellComponentFactory, method getControlPanels, variable named initialClassNameList. If the class is being registered with the factory using registerDataType, then you should not include the class name in the list (it will be found automatically), but if the DataType is part of the case statement in the factory method getDataTypeObject, then it does need to be explicitly listed in the getControlPanels method also.
WITHOUT_CLASSIFICATION	The DateFormat object to use for all locale-dependent formatting. This is reset each time the user changes the previous settings.
WITHOUT_CLASSIFICATION	save pointer to object needed to render value for use in the inner class delegate
WITHOUT_CLASSIFICATION	We want to detect two empty text values in a row before we decide to restore the original value. Since 'text' contains the new value, we want to allow the first empty 'text' so that the user can clear the field, and on the second one we will set it to the original value.
WITHOUT_CLASSIFICATION	Now define the Popup-related operations.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea. Since neither cell nor popup are allowed to edit, just ignore anything seen here.
WITHOUT_CLASSIFICATION	Create the panel and add the GUI items to it
WITHOUT_CLASSIFICATION	the other obj is null, so see if this non-null obj contains a null value, which is equivilent. Assume that if we have read some of the data and we still have _data == null, then the value in the DB is actually null.
WITHOUT_CLASSIFICATION	both have actual data, so compare the strings Note that if one has read all of the data and the other has read only part of the data that we will say that they are NOT equal.
WITHOUT_CLASSIFICATION	both have actual data, so compare the strings Note that if one has read all of the data and the other has read only part of the data that we will say that they are NOT equal.
WITHOUT_CLASSIFICATION	tables that are netiher children nor parents - utility tables
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, but NOT the same one used in the Text and in-cell operations. The in-cell version may replace newline chars with "\n" while this version does not. In other respects it is the same as the in-cell version because both use the _renderer object to do the rendering.
WITHOUT_CLASSIFICATION	first do special check to see if we should use LONGVARCHAR in the WHERE clause. (Oracle does not allow this.)
WITHOUT_CLASSIFICATION	convert to string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	set the flag for whether or not to limit only on specific fields
WITHOUT_CLASSIFICATION	If you add this method to one of the standard DataTypes in the fw/datasetviewer/cellcomponent directory, you must also add the name of that DataType class to the list in CellComponentFactory, method getControlPanels, variable named initialClassNameList. If the class is being registered with the factory using registerDataType, then you should not include the class name in the list (it will be found automatically), but if the DataType is part of the case statement in the factory method getDataTypeObject, then it does need to be explicitly listed in the getControlPanels method also.
WITHOUT_CLASSIFICATION	we have an appropriate data type object
WITHOUT_CLASSIFICATION	The first argument is a JTable, which is only used by instances of JTextField to convert coordinates on a double-click. Since that cannot happen with the JTextArea, do not bother passing the table.
WITHOUT_CLASSIFICATION	We should never NOT have an object here because we only get here when a DataType object has claimed that the column is editable. If there is no DataType for the column, then the default in the isEditableXXX() methods in this class is to say that the column is not editable, and therefore we should never have this method called in that case.
WITHOUT_CLASSIFICATION	If we get here, then no data type object was found for this column. (should not get here because switch default returns null.)
WITHOUT_CLASSIFICATION	Oracle's 'TIMESTAMP WITH TIME ZONE' == -101 Oracle's 'TIMESTAMP WITH LOCAL TIME ZONE' == -102
WITHOUT_CLASSIFICATION	Add begin
WITHOUT_CLASSIFICATION	if value contains ":" it probably has a time component
WITHOUT_CLASSIFICATION	When the table initiates editing and sets this field, remember the value as the original value of the field
WITHOUT_CLASSIFICATION	Now the Popup-related methods. These are not quite symmetric with the in-cell calls because the conversion of the object into the text to display in the popup is handled internally to the DataType object inside getJTextArea(), so we do not need a "renderObjectInPopup" function visible to the rest of the world.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea. Since the Unknown data type is not editable either in the Cell or in the Popup, we should never get here, but we have provided appropriate code just in case.
WITHOUT_CLASSIFICATION	public static final int NO_ACTION = 0; public static final int CASCADE_DELETE = 1; public static final int SET_DEFAULT = 2; public static final int SET_NULL = 3;
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	I tried to use the length from the source database (PostgreSQL) which yielded 8192 for this test. So the column def in FB was binary_column bit varying(8192). Yet it gave me an exception that indicated truncation (string data right truncation???) So for now, go back to hard-coded maximal length. registerColumnType(Types.BINARY, 2147000000,"bit varying($l)");
WITHOUT_CLASSIFICATION	alter table FKTESTCHILDTABLE add CONSTRAINT foo_const UNIQUE (MYID)
WITHOUT_CLASSIFICATION	alter table FKTESTCHILDTABLE add CONSTRAINT foo_const UNIQUE (MYID)
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ " + "ADD CONSTRAINT $constraintName$ UNIQUE ($columnName; separator=\",\"$)";
WITHOUT_CLASSIFICATION	DB2 spec says max=2147483647, but the driver throws an exception
WITHOUT_CLASSIFICATION	DB2 spec says max=2147483647, but the driver throws an exception
WITHOUT_CLASSIFICATION	ALTER TABLE <table_name> ADD FOREIGN KEY [<referential_constraint_name>] (<referencing_column>,...) REFERENCES <referenced_table> [(<referenced_column>,...)] [<delete_rule>]
WITHOUT_CLASSIFICATION	"ALTER TABLE $childTableName$ " + "ADD $constraint$ $constraintName$ FOREIGN KEY ( $childColumn; separator=\",\"$ ) " + "REFERENCES $parentTableName$ ( $parentColumn; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	<create_index_statement> ::= CREATE [UNIQUE] INDEX <index_name> ON <table_name> (<index_spec>) <index_spec> ::= <index_column_name>,... | <dbfunction_name> (<column_name>,...) [ASC|DESC] <index_column_name> ::= <column_name> [ASC|DESC]
WITHOUT_CLASSIFICATION	"CREATE VIEW $viewName$ " + "AS $selectStatement$ $withCheckOption$";
WITHOUT_CLASSIFICATION	"CREATE VIEW $viewName$ " + "AS $selectStatement$ $withCheckOption$";
WITHOUT_CLASSIFICATION	<rename_view_statement> ::= RENAME VIEW <old_table_name> TO <new_table_name> <old_table_name> ::= <table_name> <new_table_name> ::= <table_name
WITHOUT_CLASSIFICATION	features
WITHOUT_CLASSIFICATION	Additional Index Creation
WITHOUT_CLASSIFICATION	in Sybase, DEFAULT keyword must appear prior to NULL/NOT NULL
WITHOUT_CLASSIFICATION	CREATE SEQUENCE sequenceName INCREMENT BY increment MINVALUE minimum MAXVALUE maxvalue RESTART WITH restart CACHE cache CYCLE;
WITHOUT_CLASSIFICATION	finally, try to set the catalog, which appears to be a NO-OP in the Informix driver.
WITHOUT_CLASSIFICATION	Need to adjust param which is 1-based(JDBC) to a 0-based number for array access
WITHOUT_CLASSIFICATION	If we've loop through one time for each character in the string, then something must be wrong. Get out!
WITHOUT_CLASSIFICATION	Since we can use a correlated sub-query to update all rows in one statement, we don't care about the set values, unless fromTables is null, in which case we go with a normal update. Using the set values would require an update statement for each row in the merged table for each column that was merged in, which is incredibly inefficient. However, the API is intended to support database dialects that can't handle correlated sub-queries.
WITHOUT_CLASSIFICATION	"ALTER SEQUENCE $sequenceName$ " + "$restartWith$ $startValue$ " + "$incrementBy$ $incrementValue$ ";
WITHOUT_CLASSIFICATION	MySQL disallows quoted column identifiers.
WITHOUT_CLASSIFICATION	From MySQL 5.0 Reference: ALTER TABLE tbl_name ADD [CONSTRAINT symbol] FOREIGN KEY [id] (index_col_name, ...) REFERENCES tbl_name (index_col_name, ...) [ON DELETE {RESTRICT | CASCADE | SET NULL | NO ACTION}] [ON UPDATE {RESTRICT | CASCADE | SET NULL | NO ACTION}]
WITHOUT_CLASSIFICATION	From MySQL 5.0 reference manual ALTER [IGNORE] TABLE tbl_name alter_specification [, alter_specification] ... alter_specification: | ADD [CONSTRAINT [symbol]] UNIQUE [INDEX|KEY] [index_name] [index_type] (index_col_name,...)
WITHOUT_CLASSIFICATION	From PostgreSQL 8.2 documentation: CREATE [ UNIQUE ] INDEX [ CONCURRENTLY ] name ON table [ USING method ] ( { column | ( expression ) } [ opclass ] [, ...] ) [ WITH ( storage_parameter = value [, ... ] ) ] [ TABLESPACE tablespace ] [ WHERE predicate ]
WITHOUT_CLASSIFICATION	UPDATE tableName SET setColumn1 = setValue1, setColumn2 = setValue2 FROM fromTable1, fromTable2 WHERE whereColumn1 = whereValue1 AND whereColumn2 = whereValue2;
WITHOUT_CLASSIFICATION	In Oracle, ON UPDATE actions are not supported
WITHOUT_CLASSIFICATION	ALTER TABLE <tablename> ADD [CONSTRAINT <constraintname>] PRIMARY KEY (<column list>);
WITHOUT_CLASSIFICATION	The index is needed in case this method is called with schema = null, catalog = null and two tables with the same name in different schemas/catalogs. Without the index the same ordinal position could only occur once.
WITHOUT_CLASSIFICATION	During assignable checks many classes can't be loaded but don't cause problems either. So we just issue an info.
WITHOUT_CLASSIFICATION	No exceptions during logging
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible Logger for this class
WITHOUT_CLASSIFICATION	TimesTen reference claims this is a supported operation, but it yields an exception for me: ALTER TABLE test MODIFY noDefaultVarcharCol DEFAULT 'Default Value' Exception in thread "main" java.sql.SQLException: [TimesTen][TimesTen 6.0.1 ODBC Driver][TimesTen]TT1001: Syntax error in SQL statement before or at: "NODEFAULTVARCHARCOL", character position: 26 -- file "ptSqlY.y", lineno 1940, procedure "sbPtParseSql()" String alterClause = DialectUtils.MODIFY_CLAUSE; String defaultClause = DialectUtils.DEFAULT_CLAUSE; return DialectUtils.getColumnDefaultAlterSQL(this, info, alterClause, false, defaultClause); So, for now, just throw an exception:
WITHOUT_CLASSIFICATION	Do not use Axion's bigint data type. I get the following exception in my test: org.axiondb.AxionException: Invalid value "3074478078827346" for column (BIGINT_TYPE_TABLE).BIGINT_COLUMN, expected numeric(20,10) : data exception: numeric value out of range Can someone please tell me why Axion expects big integers to be limited to 20 precision and 10 scale?(Integers should have scale == 0, right?) So an Axion bigint is limited to just 20 digits to the left of the decimal point. TODO: consider filing a bug report against Axion build M3. 38 is the maximum precision for Axion's numeric type.
WITHOUT_CLASSIFICATION	DB2 needs to reorg table after changing nullabolity
WITHOUT_CLASSIFICATION	DB2 doesn't support adding an auto-increment column once the table has already been created. So this can simulate one using trigger on the table to access a sequence. Found this idea at wikibooks: http:en.wikibooks.org/wiki/SQL_dialects_reference/Data_structure_definition/Auto-increment_column CREATE SEQUENCE sequence_name; CREATE TABLE table_name ( column_name INT ); CREATE TRIGGER insert_trigger NO CASCADE BEFORE INSERT ON table_name REFERENCING NEW AS n FOR EACH ROW SET n.column_name = NEXTVAL FOR sequence_name;
WITHOUT_CLASSIFICATION	UPDATE t SET a = (SELECT a FROM t2 WHERE t.b = t2.b); String templateStr = "UPDATE $destTableName$ SET $columnName$ = " + "(SELECT $columnName$ FROM $sourceTableName$ " + "WHERE $sourceTableName$.$whereColumnName$ = $destTableName$.$whereColumnValue$"; StringTemplate st = new StringTemplate(templateStr);
WITHOUT_CLASSIFICATION	"CREATE $unique$ $storageOption$ INDEX $indexName$ " + "ON $tableName$ ( $columnName; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	save the pointer needed for insert and delete operations
WITHOUT_CLASSIFICATION	tell the rest of the world that the table has changed. The 'fire' method used here is very course - it says that the whole table has been changed when really only one row has been added. However, finer-grained methods did not seem to cause the right effect, so I'm using this one untill someone reports a problem with it. Also, if either of these notifications (the actual model and the sortable model) are eliminated, it either throws an exception or does not update the GUI. Go figure. Finally, the 'fire' on the _acutalModel is triggered from this method rather than from inside the MyJTable code because the add() method used to add a row is also used when loading the table with lots of rows, and in that case we do not want to generate events until all of the rows have been added, so the 'fire' cannot happen there.
WITHOUT_CLASSIFICATION	At least one version of PostgreSQL through the JDBC/ODBC bridge returns an empty result set for the list of table types. Another version of PostgreSQL returns 6 entries of "SYSTEM TABLE" (which we have already filtered back to one).
WITHOUT_CLASSIFICATION	catalog schema tableName columnName keySequence pkName
WITHOUT_CLASSIFICATION	PointBase doesn't follow the spec with regard to column 11 of getColumns (should return a type constant, but instead returns a Boolean.
WITHOUT_CLASSIFICATION	DatabaseObjectType.UDF_TYPE_DBO=UDF Type
WITHOUT_CLASSIFICATION	-- Path operations --
WITHOUT_CLASSIFICATION	/ A deadlock chain is circular and does not have a defined beginning Pid. In order to make the string representation of a deadlock chain unique we put the smallest Pid at the beginning of the chain.
WITHOUT_CLASSIFICATION	grab the current letter as a char
WITHOUT_CLASSIFICATION	grab the current letter as a char
WITHOUT_CLASSIFICATION	this will skip blank lines
WITHOUT_CLASSIFICATION	encountered a comment character at the beginning of the line so just ignore the rest of the line
WITHOUT_CLASSIFICATION	check to see if the column index is within the bounds of our header array
WITHOUT_CLASSIFICATION	this flag is used as a loop exit condition during parsing
WITHOUT_CLASSIFICATION	/ <summary> / How much usable data has been read into the stream, / which will not always be as long as Buffer.Length. / </summary>
WITHOUT_CLASSIFICATION	IDataTypeComponent interface methods
WITHOUT_CLASSIFICATION	CopyTableListener interface methods
WITHOUT_CLASSIFICATION	Yes
WITHOUT_CLASSIFICATION	No
WITHOUT_CLASSIFICATION	If the source column is DISTINCT and the session is PostgreSQL, try to get the underlying type.
WITHOUT_CLASSIFICATION	Date/Time types never declare a length. Just return something larger than 0 so we bypass other checks above.
WITHOUT_CLASSIFICATION	Oracle declares the column size to be 4000, regardless of the maximum length of the CLOB field. So if the Oracle BLOB/CLOB column contains values that exceed 4000 chars and we use colInfo.getColumnSize() we might create a destination column that is too small for the data that will be copied from Oracle. We specify a default value of 4000 in case the table has no records or if the BLOB/CLOB column contains only null values.
WITHOUT_CLASSIFICATION	skip this table, try the next.
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	trim the column name in case of HADB
WITHOUT_CLASSIFICATION	trim the column name in case of HADB
WITHOUT_CLASSIFICATION	final IObjectTreeAPI api = Compat.getIObjectTreeAPI(session, this);
WITHOUT_CLASSIFICATION	break;
WITHOUT_CLASSIFICATION	mockApplication
WITHOUT_CLASSIFICATION	Only close the statement if SQLException - otherwise it has to remain open until the ResultSet is read through by the caller.
WITHOUT_CLASSIFICATION	Only close the statement if SQLException - otherwise it has to remain open until the ResultSet is read through by the caller.
WITHOUT_CLASSIFICATION	trim the table name in case of HADB
WITHOUT_CLASSIFICATION	Reads the value from the specified ResultSet at column index index, and based on the type, calls the appropriate setXXX method on ps with the value obtained. @param ps @param sourceColType @param destColType @param index @param rs @return a string representation of the value that was bound. @throws SQLException
WITHOUT_CLASSIFICATION	Don't change the case of the identifier if database allows mixed case.
WITHOUT_CLASSIFICATION	ResultSet rs = con.getMetaData().getTables("dbcopysrc", null, "BIGINT_TYPE_TABLE", new String[]{ "TABLE" });
WITHOUT_CLASSIFICATION	private class DBCopyPluginResources extends PluginResources {DBCopyPluginResources(String rsrcBundleBaseName, IPlugin plugin) { super(rsrcBundleBaseName, plugin);}}
WITHOUT_CLASSIFICATION	Column is in both table 1 and 2
WITHOUT_CLASSIFICATION	TableModel tm = new DefaultTableModel(new String [] { "Table", "Column" }, 4) { private static final long serialVersionUID = -8826914717673025881L; public boolean isCellEditable(int rowIndex, int columnIndex) { return false; }};
WITHOUT_CLASSIFICATION	Add session ended listener -- needs for Embedded Derby DB
WITHOUT_CLASSIFICATION	_treeAPI.addDetailTab(DatabaseObjectType.INDEX, new DatabaseObjectInfoTab()); _treeAPI.addDetailTab(DatabaseObjectType.INDEX, new IndexDetailsTab());
WITHOUT_CLASSIFICATION	Shutdown Embedded Derby DB
WITHOUT_CLASSIFICATION	it is always thrown as said in Embedded Derby API. So it is not error it is info
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, but NOT the same one used in the Text and in-cell operations. The in-cell version may replace newline chars with "\n" while this version does not. In other respects it is the same as the in-cell version because both use the _renderer object to do the rendering.
WITHOUT_CLASSIFICATION	/ IBM DB 2 specific code to read view definitions.
WITHOUT_CLASSIFICATION	public Folder getSubFolder(int idx) throws IndexOutOfBoundsException { / return (Folder)_folders.get(idx); }
WITHOUT_CLASSIFICATION	String CHECK_TABLE = "checktable";
WITHOUT_CLASSIFICATION	Supports Session main window only
WITHOUT_CLASSIFICATION	Tabs to add to the database node.
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible ------------------------------------------------------------------------ Logger for this class
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible ------------------------------------------------------------------------ Logger for this class
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible ------------------------------------------------------------------------ Logger for this class
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible ------------------------------------------------------------------------ Logger for this class
WITHOUT_CLASSIFICATION	visible (gui) ------------------------------------------------------------------------ -- main
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	visible (gui) ------------------------------------------------------------------------ -- misc
WITHOUT_CLASSIFICATION	"backup metadata only" "inhibit garbage collection" "save old style metadata descriptions" "transportable format" "backup external files as tables" "start backup"
WITHOUT_CLASSIFICATION	load properties and fill missing entries with the global preferences
WITHOUT_CLASSIFICATION	######################################################################## ########## events ######################################################################## ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	lblTitle.setBackground(new Color(204,204,204)); lblTitle.setName("lblTitle"); lblTitle.setOpaque(true); lblTitle.setText("Default values"); EtchedBorder etchedborder1 = new EtchedBorder(EtchedBorder.RAISED,null,null); lblTitle.setBorder(etchedborder1); jpanel1.add(lblTitle,cc.xywh(2,2,9,1));
WITHOUT_CLASSIFICATION	case SESSION_BEAN_GRANT_AND_REVOKE: return new FirebirdManagerGrantPreferenceBean();
WITHOUT_CLASSIFICATION	/ We try to find a completely free space for the new table frame.
WITHOUT_CLASSIFICATION	Index tab
WITHOUT_CLASSIFICATION	These classes have no package see swingsetthemes.jar
WITHOUT_CLASSIFICATION	/ This theme was presented to SQuirreL by Karsten Lentzsch of jgoodies.com. It is SQuirreL's default theme if the LAF plugin is not used. Here we make the AllBluesBoldMetalTheme also available within the LAF plugin. Thanks a lot Karsten.
WITHOUT_CLASSIFICATION	call sp_help on the stored procedure, then look at the second ResultSet for the parameter information.
WITHOUT_CLASSIFICATION	the constructor above sets this from resources, but we'll override it with the name of the index.
WITHOUT_CLASSIFICATION	i do believe the getSimpleName() will end in ;1 if it's a procedure and ;0 if it's a UDF.
WITHOUT_CLASSIFICATION	GRANT { ALL [ PRIVILEGES ] | permission [ ,...n ] } { [ ( column [ ,...n ] ) ] ON { table | view } | ON { table | view } [ ( column [ ,...n ] ) ] | ON { stored_procedure | extended_procedure } | ON { user_defined_function } } TO security_account [ ,...n ] [ WITH GRANT OPTION ] [ AS { group | role } ] REVOKE [ GRANT OPTION FOR ] { ALL [ PRIVILEGES ] | permission [ ,...n ] } { [ ( column [ ,...n ] ) ] ON { table | view } | ON { table | view } [ ( column [ ,...n ] ) ] | ON { stored_procedure | extended_procedure } | ON { user_defined_function } } { TO | FROM } security_account [ ,...n ] [ CASCADE ] [ AS { group | role } ]
WITHOUT_CLASSIFICATION	private javax.swing.JComboBox cbFieldType; private javax.swing.JCheckBox chAutoIncrement; private javax.swing.JCheckBox chBinary; private javax.swing.JCheckBox chNotNull; private javax.swing.JCheckBox chUnsigned; private javax.swing.JLabel lbAttributes; private javax.swing.JLabel lbDefault; private javax.swing.JLabel lbFieldLength; private javax.swing.JLabel lbFieldName; private javax.swing.JLabel lbFieldType; private javax.swing.JLabel lbFields; private javax.swing.JTextField tfFieldDefault; private javax.swing.JTextField tfFieldLength; private javax.swing.JComboBox cbFieldName; private javax.swing.JButton buttonUpdate; private javax.swing.JButton buttonCancel; private JDialog _dlog; private FieldDetails fd; private int selectedIndex; private DBUtils dbUtils; protected String SQLCommandRoot = "ALTER TABLE "; protected String SQLCommand = ""; End of variables declaration
WITHOUT_CLASSIFICATION	Action performed for the combo box private void cbFieldNameActionPerformed(java.awt.event.ActionEvent evt) { selectedIndex = cbFieldName.getSelectedIndex(); DefaultComboBoxModel comboModel = (DefaultComboBoxModel) cbFieldName.getModel(); FieldDetails fd = (FieldDetails) comboModel.getElementAt(selectedIndex); cbFieldName.setSelectedItem(fd.getFieldName()); cbFieldType.setSelectedItem(fd.getFieldType()); tfFieldLength.setText(fd.getFieldLength()); tfFieldDefault.setText(fd.getDefault()); chAutoIncrement.setSelected(fd.IsAutoIncrement()); chNotNull.setSelected(fd.IsNotNull()); }
WITHOUT_CLASSIFICATION	final FormLayout layout = new FormLayout( "3dlu, 75dlu:grow(1.0), 3dlu", "center:pref:grow(1.0), 8dlu, bottom:pref"); final DefaultFormBuilder builder = new DefaultFormBuilder(layout); builder.setDefaultDialogBorder(); builder.setLeadingColumnOffset(1); builder.append(buildMainPanel(session, ti)); builder.nextLine(); builder.appendSeparator(); builder.nextLine(); builder.append(buildToolBar()); return builder.getPanel();
WITHOUT_CLASSIFICATION	boolean isSelected = _exportPrefsChk.isSelected(); _exportPrefsText.setEditable(isSelected); _exportPrefsBtn.setEnabled(isSelected); isSelected = _exportDriversChk.isSelected(); _exportDriversText.setEditable(isSelected); _exportDriversBtn.setEnabled(isSelected); isSelected = _exportAliasesChk.isSelected(); _exportAliasesText.setEditable(isSelected); _exportAliasesBtn.setEnabled(isSelected); _includeUserNamesChk.setEnabled(isSelected); _includePasswordsChk.setEnabled(isSelected);
WITHOUT_CLASSIFICATION	_exportDriversChk.addActionListener(_mediator); _exportAliasesChk.addActionListener(_mediator); _exportPrefsBtn.addActionListener(new BrowseButtonListener(_exportPrefsText)); _exportDriversBtn.addActionListener(new BrowseButtonListener( _exportDriversText)); _exportAliasesBtn.addActionListener(new BrowseButtonListener(_exportAliasesText)); _exportPrefsChk.setSelected(prefs.getExportPreferences()); _exportDriversChk.setSelected(prefs.getExportDrivers()); _exportAliasesChk.setSelected(prefs.getExportAliases()); _includeUserNamesChk.setSelected(prefs.getIncludeUserNames()); _includePasswordsChk.setSelected(prefs.getIncludePasswords()); _exportPrefsText.setText(prefs.getPreferencesFileName()); _exportDriversText.setText(prefs.getDriversFileName()); _exportAliasesText.setText(prefs.getAliasesFileName());
WITHOUT_CLASSIFICATION	Since it is likely to have the procedure separator on it's own line, and it is key to letting us know that proceeding statements form a multi-statement procedure or function, it deserves it's own place in the _queries arraylist. If it is followed by other procedure or function creation blocks, we may fail to detect that, so this just goes through the list and breaks apart statements on newline so that this cannot happen.
WITHOUT_CLASSIFICATION	Nil out the timer so that it can be gc'd
WITHOUT_CLASSIFICATION	Selects the distinct values from the source column.
WITHOUT_CLASSIFICATION	Inserts all keys into the new column depending on the content in the old column.
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------ Thread SEARCHING ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	/ There are a lot of goodies in the ExtSettingsInitializer that might be interesting in th future. Unfortunately some conflicts with some of Squirrels shortcuts are in ExtSettingsInitializer Settings.removeInitializer(ExtSettingsInitializer.NAME); Settings.addInitializer(new ExtSettingsInitializer(), Settings.CORE_LEVEL); /
WITHOUT_CLASSIFICATION	Needs to be done at this moment. That's why we can't call updateFromPreferences() here.
WITHOUT_CLASSIFICATION	Formatting
WITHOUT_CLASSIFICATION	printing set
WITHOUT_CLASSIFICATION	The parser didn't get triggered on shift+insert. We do it here by hand
WITHOUT_CLASSIFICATION	Check for identifier
WITHOUT_CLASSIFICATION	case ISA_SLASH: state = INIT; return SQLTokenContext.MINUS;
WITHOUT_CLASSIFICATION	this didn't work final int pos = getCaretPosition(); final Document doc = _textArea.getStyledDocument(); final Element docElem = doc.getDefaultRootElement(); final Element lineElem = docElem.getElement(getCaretLineNumber()); return lineElem.getElementIndex(pos);
WITHOUT_CLASSIFICATION	GOOD - Converting a URL to a file this way is fine when the file path contains spaces
WITHOUT_CLASSIFICATION	This column is created in the create script abd unused unless testing DB2
WITHOUT_CLASSIFICATION	Tables might have triggers that depend on sequences, so drop tables next.
WITHOUT_CLASSIFICATION	db2pkCol is used to create a PK when using DB2. DB2 doesn't allow you to add a PK to a table after it has been constructed unless the column(s) that comprise the PK were originally there when created and created not null.
WITHOUT_CLASSIFICATION	We need to add a second column to have a unique constraint so that we can drop that one. Progress doesn't allow the very first index to ever be dropped.
WITHOUT_CLASSIFICATION	TODO move to new standard location and rewrite test to be less static
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#initialize()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#initialize()
WITHOUT_CLASSIFICATION	catalog schema tableName columnName dataType; 1 == CHAR typeName columnSize decimalDigits radix isNullAllowed defaultValue isNullable
WITHOUT_CLASSIFICATION	Need to adjust param which is 1-based(JDBC) to a 0-based number for array access
WITHOUT_CLASSIFICATION	Null tests
WITHOUT_CLASSIFICATION	Null tests
WITHOUT_CLASSIFICATION	this should throw an exception - should not allow multiple custom tokenizers to be installed for a single session.
WITHOUT_CLASSIFICATION	Mock Objects
WITHOUT_CLASSIFICATION	We could make this expectation more restrictive currently. However, we might have impls that have wildly different queries in the future. We don't want to sacrifice flexibility to use this test for a "perceived" benefit of mirroring the current implementations.
WITHOUT_CLASSIFICATION	Should at least bind the tablename to a bind var in the SQL
WITHOUT_CLASSIFICATION	Data
WITHOUT_CLASSIFICATION	Mock objects
WITHOUT_CLASSIFICATION	FileWrapper mockDownloadsDirectory = mockHelper.createMock("mockDownloadsDirectory", FileWrapper.class); expect(mockDownloadsDirectory.isDirectory()).andStubReturn(true); expect(mockFileWrapperFactory.create(mockUpdateDirectory, UpdateUtil.DOWNLOADS_DIR_NAME)); expectLastCall().andReturn(mockDownloadsDirectory);
WITHOUT_CLASSIFICATION	expect(backupFile.getAbsolutePath()).andReturn("mockBackupFrameworkJarFile");
WITHOUT_CLASSIFICATION	mockResultSet = mockHelper.createMock(ResultSet.class);
WITHOUT_CLASSIFICATION	Java6 types ROWID NVARCHAR NCHAR LONGNVARCHAR NCLOB SQLXML
WITHOUT_CLASSIFICATION	local expectations
WITHOUT_CLASSIFICATION	local expectations
WITHOUT_CLASSIFICATION	this function returns the resulting process from the exec
WITHOUT_CLASSIFICATION	Regression test for HARMONY-382
WITHOUT_CLASSIFICATION	invalid file URIs not hierarchical not file scheme not absolute non empty authority non empty query non empty fragment
WITHOUT_CLASSIFICATION	Making sure that the directory does not exist.
WITHOUT_CLASSIFICATION	Making sure that the directory does not exist.
WITHOUT_CLASSIFICATION	Making sure that the directory does not exist.
WITHOUT_CLASSIFICATION	Making sure that the directory does not exist.
WITHOUT_CLASSIFICATION	If the directory exists, add one to the directory number (making it a new directory name.)
WITHOUT_CLASSIFICATION	Tests to see if the correct prefix was used to create the tempfiles.
WITHOUT_CLASSIFICATION	Tests for creating a tempfile with a filename shorter than 3 characters.
WITHOUT_CLASSIFICATION	If the "short file name" doesn't exist, then assume that the 8.3 file name compatibility is disabled.
WITHOUT_CLASSIFICATION	Old test left behind "garbage files" so this time it creates a directory that is guaranteed not to already exist (and deletes it afterward.)
WITHOUT_CLASSIFICATION	Checking to make sure the correct files were are listed in the array.
WITHOUT_CLASSIFICATION	Do not return null when trying to use list(Filename Filter) on a file rather than a directory. All other "list" methods return null for this test case.
WITHOUT_CLASSIFICATION	Assert is flawed because canWrite does not work. assertTrue("File f1 Is Set To ReadOnly." , f1.canWrite());
WITHOUT_CLASSIFICATION	Need a directory that exists
WITHOUT_CLASSIFICATION	Regression for HARMONY-2674
WITHOUT_CLASSIFICATION	testLongVarbinaryColType(sourceName, destName); testNumericColType(sourceName, destName); testRealColType(sourceName, destName); testSmallIntColType(sourceName, destName); testTimestampColType(sourceName, destName); testTimeColType(sourceName, destName); testTinyIntColType(sourceName, destName);
WITHOUT_CLASSIFICATION	ISession mockSession = mockHelper.createMock(ISession.class); IApplication mockApplication = mockHelper.createMock(IApplication.class); expect(mockSession.getApplication()).andStubReturn(mockApplication); TaskThreadPool mockThreadPool = mockHelper.createMock(TaskThreadPool.class); mockThreadPool.addTask(EasyMock.isA(Runnable.class)); expectLastCall().anyTimes(); expect(mockApplication.getThreadPool()).andStubReturn(mockThreadPool); String[] tableTypes = new String[] { "TABLE" }; ISQLConnection mockSQLConnection = mockHelper.createMock(ISQLConnection.class); expect(mockSession.getSQLConnection()).andStubReturn(mockSQLConnection); SQLDatabaseMetaData mockSQLDatabaseMetaData = mockHelper.createMock(SQLDatabaseMetaData.class); expect(mockSQLConnection.getSQLMetaData()).andStubReturn(mockSQLDatabaseMetaData); expect(mockSQLDatabaseMetaData.getTableTypes()).andStubReturn(tableTypes); mockHelper.replayAll(); classUnderTest = new DefaultDatabaseExpander(mockSession); mockHelper.verifyAll(); mockHelper.resetAll();
WITHOUT_CLASSIFICATION	IMessageHandler messageHandler = getEasyMockMessageHandler();
